{"dependencies":[{"name":"../utils/createCustomError","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":26,"index":26},"end":{"line":1,"column":63,"index":63}},{"start":{"line":1,"column":26,"index":26},"end":{"line":1,"column":63,"index":63}}],"key":"Uh/YY9D5uakJGlD6OhSCWr99jMw="}},{"name":"../definition-syntax/generate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":17,"index":82},"end":{"line":2,"column":57,"index":122}}],"key":"w0l5t/Jf1sNLF1hV0Sc5Cra1Bgg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var defaultLoc = {\n    offset: 0,\n    line: 1,\n    column: 1\n  };\n  function locateMismatch(matchResult, node) {\n    var tokens = matchResult.tokens;\n    var longestMatch = matchResult.longestMatch;\n    var mismatchNode = longestMatch < tokens.length ? tokens[longestMatch].node || null : null;\n    var badNode = mismatchNode !== node ? mismatchNode : null;\n    var mismatchOffset = 0;\n    var mismatchLength = 0;\n    var entries = 0;\n    var css = '';\n    var start;\n    var end;\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i].value;\n      if (i === longestMatch) {\n        mismatchLength = token.length;\n        mismatchOffset = css.length;\n      }\n      if (badNode !== null && tokens[i].node === badNode) {\n        if (i <= longestMatch) {\n          entries++;\n        } else {\n          entries = 0;\n        }\n      }\n      css += token;\n    }\n    if (longestMatch === tokens.length || entries > 1) {\n      // last\n      start = fromLoc(badNode || node, 'end') || buildLoc(defaultLoc, css);\n      end = buildLoc(start);\n    } else {\n      start = fromLoc(badNode, 'start') || buildLoc(fromLoc(node, 'start') || defaultLoc, css.slice(0, mismatchOffset));\n      end = fromLoc(badNode, 'end') || buildLoc(start, css.substr(mismatchOffset, mismatchLength));\n    }\n    return {\n      css: css,\n      mismatchOffset: mismatchOffset,\n      mismatchLength: mismatchLength,\n      start: start,\n      end: end\n    };\n  }\n  function fromLoc(node, point) {\n    var value = node && node.loc && node.loc[point];\n    if (value) {\n      return 'line' in value ? buildLoc(value) : value;\n    }\n    return null;\n  }\n  function buildLoc(_ref, extra) {\n    var offset = _ref.offset,\n      line = _ref.line,\n      column = _ref.column;\n    var loc = {\n      offset: offset,\n      line: line,\n      column: column\n    };\n    if (extra) {\n      var lines = extra.split(/\\n|\\r\\n?|\\f/);\n      loc.offset += extra.length;\n      loc.line += lines.length - 1;\n      loc.column = lines.length === 1 ? loc.column + extra.length : lines.pop().length + 1;\n    }\n    return loc;\n  }\n  var SyntaxReferenceError = function SyntaxReferenceError(type, referenceName) {\n    var error = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\")('SyntaxReferenceError', type + (referenceName ? ' `' + referenceName + '`' : ''));\n    error.reference = referenceName;\n    return error;\n  };\n  var SyntaxMatchError = function SyntaxMatchError(message, syntax, node, matchResult) {\n    var error = _$$_REQUIRE(_dependencyMap[0], \"../utils/createCustomError\")('SyntaxMatchError', message);\n    var _locateMismatch = locateMismatch(matchResult, node),\n      css = _locateMismatch.css,\n      mismatchOffset = _locateMismatch.mismatchOffset,\n      mismatchLength = _locateMismatch.mismatchLength,\n      start = _locateMismatch.start,\n      end = _locateMismatch.end;\n    error.rawMessage = message;\n    error.syntax = syntax ? _$$_REQUIRE(_dependencyMap[1], \"../definition-syntax/generate\")(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.mismatchLength = mismatchLength;\n    error.message = message + '\\n' + '  syntax: ' + error.syntax + '\\n' + '   value: ' + (css || '<empty string>') + '\\n' + '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n    Object.assign(error, start);\n    error.loc = {\n      source: node && node.loc && node.loc.source || '<unknown>',\n      start: start,\n      end: end\n    };\n    return error;\n  };\n  module.exports = {\n    SyntaxReferenceError: SyntaxReferenceError,\n    SyntaxMatchError: SyntaxMatchError\n  };\n});","lineCount":104,"map":[[2,2,3,0],[2,6,3,6,"defaultLoc"],[2,16,3,16],[2,19,3,19],[3,4,3,21,"offset"],[3,10,3,27],[3,12,3,29],[3,13,3,30],[4,4,3,32,"line"],[4,8,3,36],[4,10,3,38],[4,11,3,39],[5,4,3,41,"column"],[5,10,3,47],[5,12,3,49],[6,2,3,51],[6,3,3,52],[7,2,5,0],[7,11,5,9,"locateMismatch"],[7,25,5,23,"locateMismatch"],[7,26,5,24,"matchResult"],[7,37,5,35],[7,39,5,37,"node"],[7,43,5,41],[7,45,5,43],[8,4,6,4],[8,8,6,10,"tokens"],[8,14,6,16],[8,17,6,19,"matchResult"],[8,28,6,30],[8,29,6,31,"tokens"],[8,35,6,37],[9,4,7,4],[9,8,7,10,"longestMatch"],[9,20,7,22],[9,23,7,25,"matchResult"],[9,34,7,36],[9,35,7,37,"longestMatch"],[9,47,7,49],[10,4,8,4],[10,8,8,10,"mismatchNode"],[10,20,8,22],[10,23,8,25,"longestMatch"],[10,35,8,37],[10,38,8,40,"tokens"],[10,44,8,46],[10,45,8,47,"length"],[10,51,8,53],[10,54,8,56,"tokens"],[10,60,8,62],[10,61,8,63,"longestMatch"],[10,73,8,75],[10,74,8,76],[10,75,8,77,"node"],[10,79,8,81],[10,83,8,85],[10,87,8,89],[10,90,8,92],[10,94,8,96],[11,4,9,4],[11,8,9,10,"badNode"],[11,15,9,17],[11,18,9,20,"mismatchNode"],[11,30,9,32],[11,35,9,37,"node"],[11,39,9,41],[11,42,9,44,"mismatchNode"],[11,54,9,56],[11,57,9,59],[11,61,9,63],[12,4,10,4],[12,8,10,8,"mismatchOffset"],[12,22,10,22],[12,25,10,25],[12,26,10,26],[13,4,11,4],[13,8,11,8,"mismatchLength"],[13,22,11,22],[13,25,11,25],[13,26,11,26],[14,4,12,4],[14,8,12,8,"entries"],[14,15,12,15],[14,18,12,18],[14,19,12,19],[15,4,13,4],[15,8,13,8,"css"],[15,11,13,11],[15,14,13,14],[15,16,13,16],[16,4,14,4],[16,8,14,8,"start"],[16,13,14,13],[17,4,15,4],[17,8,15,8,"end"],[17,11,15,11],[18,4,17,4],[18,9,17,9],[18,13,17,13,"i"],[18,14,17,14],[18,17,17,17],[18,18,17,18],[18,20,17,20,"i"],[18,21,17,21],[18,24,17,24,"tokens"],[18,30,17,30],[18,31,17,31,"length"],[18,37,17,37],[18,39,17,39,"i"],[18,40,17,40],[18,42,17,42],[18,44,17,44],[19,6,18,8],[19,10,18,14,"token"],[19,15,18,19],[19,18,18,22,"tokens"],[19,24,18,28],[19,25,18,29,"i"],[19,26,18,30],[19,27,18,31],[19,28,18,32,"value"],[19,33,18,37],[20,6,20,8],[20,10,20,12,"i"],[20,11,20,13],[20,16,20,18,"longestMatch"],[20,28,20,30],[20,30,20,32],[21,8,21,12,"mismatchLength"],[21,22,21,26],[21,25,21,29,"token"],[21,30,21,34],[21,31,21,35,"length"],[21,37,21,41],[22,8,22,12,"mismatchOffset"],[22,22,22,26],[22,25,22,29,"css"],[22,28,22,32],[22,29,22,33,"length"],[22,35,22,39],[23,6,23,8],[24,6,25,8],[24,10,25,12,"badNode"],[24,17,25,19],[24,22,25,24],[24,26,25,28],[24,30,25,32,"tokens"],[24,36,25,38],[24,37,25,39,"i"],[24,38,25,40],[24,39,25,41],[24,40,25,42,"node"],[24,44,25,46],[24,49,25,51,"badNode"],[24,56,25,58],[24,58,25,60],[25,8,26,12],[25,12,26,16,"i"],[25,13,26,17],[25,17,26,21,"longestMatch"],[25,29,26,33],[25,31,26,35],[26,10,27,16,"entries"],[26,17,27,23],[26,19,27,25],[27,8,28,12],[27,9,28,13],[27,15,28,19],[28,10,29,16,"entries"],[28,17,29,23],[28,20,29,26],[28,21,29,27],[29,8,30,12],[30,6,31,8],[31,6,33,8,"css"],[31,9,33,11],[31,13,33,15,"token"],[31,18,33,20],[32,4,34,4],[33,4,36,4],[33,8,36,8,"longestMatch"],[33,20,36,20],[33,25,36,25,"tokens"],[33,31,36,31],[33,32,36,32,"length"],[33,38,36,38],[33,42,36,42,"entries"],[33,49,36,49],[33,52,36,52],[33,53,36,53],[33,55,36,55],[34,6,36,57],[35,6,37,8,"start"],[35,11,37,13],[35,14,37,16,"fromLoc"],[35,21,37,23],[35,22,37,24,"badNode"],[35,29,37,31],[35,33,37,35,"node"],[35,37,37,39],[35,39,37,41],[35,44,37,46],[35,45,37,47],[35,49,37,51,"buildLoc"],[35,57,37,59],[35,58,37,60,"defaultLoc"],[35,68,37,70],[35,70,37,72,"css"],[35,73,37,75],[35,74,37,76],[36,6,38,8,"end"],[36,9,38,11],[36,12,38,14,"buildLoc"],[36,20,38,22],[36,21,38,23,"start"],[36,26,38,28],[36,27,38,29],[37,4,39,4],[37,5,39,5],[37,11,39,11],[38,6,40,8,"start"],[38,11,40,13],[38,14,40,16,"fromLoc"],[38,21,40,23],[38,22,40,24,"badNode"],[38,29,40,31],[38,31,40,33],[38,38,40,40],[38,39,40,41],[38,43,41,12,"buildLoc"],[38,51,41,20],[38,52,41,21,"fromLoc"],[38,59,41,28],[38,60,41,29,"node"],[38,64,41,33],[38,66,41,35],[38,73,41,42],[38,74,41,43],[38,78,41,47,"defaultLoc"],[38,88,41,57],[38,90,41,59,"css"],[38,93,41,62],[38,94,41,63,"slice"],[38,99,41,68],[38,100,41,69],[38,101,41,70],[38,103,41,72,"mismatchOffset"],[38,117,41,86],[38,118,41,87],[38,119,41,88],[39,6,42,8,"end"],[39,9,42,11],[39,12,42,14,"fromLoc"],[39,19,42,21],[39,20,42,22,"badNode"],[39,27,42,29],[39,29,42,31],[39,34,42,36],[39,35,42,37],[39,39,43,12,"buildLoc"],[39,47,43,20],[39,48,43,21,"start"],[39,53,43,26],[39,55,43,28,"css"],[39,58,43,31],[39,59,43,32,"substr"],[39,65,43,38],[39,66,43,39,"mismatchOffset"],[39,80,43,53],[39,82,43,55,"mismatchLength"],[39,96,43,69],[39,97,43,70],[39,98,43,71],[40,4,44,4],[41,4,46,4],[41,11,46,11],[42,6,47,8,"css"],[42,9,47,11],[42,11,47,8,"css"],[42,14,47,11],[43,6,48,8,"mismatchOffset"],[43,20,48,22],[43,22,48,8,"mismatchOffset"],[43,36,48,22],[44,6,49,8,"mismatchLength"],[44,20,49,22],[44,22,49,8,"mismatchLength"],[44,36,49,22],[45,6,50,8,"start"],[45,11,50,13],[45,13,50,8,"start"],[45,18,50,13],[46,6,51,8,"end"],[46,9,51,11],[46,11,51,8,"end"],[47,4,52,4],[47,5,52,5],[48,2,53,0],[49,2,55,0],[49,11,55,9,"fromLoc"],[49,18,55,16,"fromLoc"],[49,19,55,17,"node"],[49,23,55,21],[49,25,55,23,"point"],[49,30,55,28],[49,32,55,30],[50,4,56,4],[50,8,56,10,"value"],[50,13,56,15],[50,16,56,18,"node"],[50,20,56,22],[50,24,56,26,"node"],[50,28,56,30],[50,29,56,31,"loc"],[50,32,56,34],[50,36,56,38,"node"],[50,40,56,42],[50,41,56,43,"loc"],[50,44,56,46],[50,45,56,47,"point"],[50,50,56,52],[50,51,56,53],[51,4,58,4],[51,8,58,8,"value"],[51,13,58,13],[51,15,58,15],[52,6,59,8],[52,13,59,15],[52,19,59,21],[52,23,59,25,"value"],[52,28,59,30],[52,31,59,33,"buildLoc"],[52,39,59,41],[52,40,59,42,"value"],[52,45,59,47],[52,46,59,48],[52,49,59,51,"value"],[52,54,59,56],[53,4,60,4],[54,4,62,4],[54,11,62,11],[54,15,62,15],[55,2,63,0],[56,2,65,0],[56,11,65,9,"buildLoc"],[56,19,65,17,"buildLoc"],[56,20,65,17,"_ref"],[56,24,65,17],[56,26,65,44,"extra"],[56,31,65,49],[56,33,65,51],[57,4,65,51],[57,8,65,20,"offset"],[57,14,65,26],[57,17,65,26,"_ref"],[57,21,65,26],[57,22,65,20,"offset"],[57,28,65,26],[58,6,65,28,"line"],[58,10,65,32],[58,13,65,32,"_ref"],[58,17,65,32],[58,18,65,28,"line"],[58,22,65,32],[59,6,65,34,"column"],[59,12,65,40],[59,15,65,40,"_ref"],[59,19,65,40],[59,20,65,34,"column"],[59,26,65,40],[60,4,66,4],[60,8,66,10,"loc"],[60,11,66,13],[60,14,66,16],[61,6,67,8,"offset"],[61,12,67,14],[61,14,67,8,"offset"],[61,20,67,14],[62,6,68,8,"line"],[62,10,68,12],[62,12,68,8,"line"],[62,16,68,12],[63,6,69,8,"column"],[63,12,69,14],[63,14,69,8,"column"],[64,4,70,4],[64,5,70,5],[65,4,72,4],[65,8,72,8,"extra"],[65,13,72,13],[65,15,72,15],[66,6,73,8],[66,10,73,14,"lines"],[66,15,73,19],[66,18,73,22,"extra"],[66,23,73,27],[66,24,73,28,"split"],[66,29,73,33],[66,30,73,34],[66,43,73,47],[66,44,73,48],[67,6,75,8,"loc"],[67,9,75,11],[67,10,75,12,"offset"],[67,16,75,18],[67,20,75,22,"extra"],[67,25,75,27],[67,26,75,28,"length"],[67,32,75,34],[68,6,76,8,"loc"],[68,9,76,11],[68,10,76,12,"line"],[68,14,76,16],[68,18,76,20,"lines"],[68,23,76,25],[68,24,76,26,"length"],[68,30,76,32],[68,33,76,35],[68,34,76,36],[69,6,77,8,"loc"],[69,9,77,11],[69,10,77,12,"column"],[69,16,77,18],[69,19,77,21,"lines"],[69,24,77,26],[69,25,77,27,"length"],[69,31,77,33],[69,36,77,38],[69,37,77,39],[69,40,77,42,"loc"],[69,43,77,45],[69,44,77,46,"column"],[69,50,77,52],[69,53,77,55,"extra"],[69,58,77,60],[69,59,77,61,"length"],[69,65,77,67],[69,68,77,70,"lines"],[69,73,77,75],[69,74,77,76,"pop"],[69,77,77,79],[69,78,77,80],[69,79,77,81],[69,80,77,82,"length"],[69,86,77,88],[69,89,77,91],[69,90,77,92],[70,4,78,4],[71,4,80,4],[71,11,80,11,"loc"],[71,14,80,14],[72,2,81,0],[73,2,83,0],[73,6,83,6,"SyntaxReferenceError"],[73,26,83,26],[73,29,83,29],[73,38,83,6,"SyntaxReferenceError"],[73,58,83,26,"SyntaxReferenceError"],[73,59,83,38,"type"],[73,63,83,42],[73,65,83,44,"referenceName"],[73,78,83,57],[73,80,83,59],[74,4,84,4],[74,8,84,10,"error"],[74,13,84,15],[74,16,84,18,"_$$_REQUIRE"],[74,27,84,18],[74,28,84,18,"_dependencyMap"],[74,42,84,18],[74,77,85,8],[74,99,85,30],[74,101,86,8,"type"],[74,105,86,12],[74,109,86,16,"referenceName"],[74,122,86,29],[74,125,86,32],[74,129,86,36],[74,132,86,39,"referenceName"],[74,145,86,52],[74,148,86,55],[74,151,86,58],[74,154,86,61],[74,156,86,63],[74,157,87,4],[74,158,87,5],[75,4,89,4,"error"],[75,9,89,9],[75,10,89,10,"reference"],[75,19,89,19],[75,22,89,22,"referenceName"],[75,35,89,35],[76,4,91,4],[76,11,91,11,"error"],[76,16,91,16],[77,2,92,0],[77,3,92,1],[78,2,94,0],[78,6,94,6,"SyntaxMatchError"],[78,22,94,22],[78,25,94,25],[78,34,94,6,"SyntaxMatchError"],[78,50,94,22,"SyntaxMatchError"],[78,51,94,34,"message"],[78,58,94,41],[78,60,94,43,"syntax"],[78,66,94,49],[78,68,94,51,"node"],[78,72,94,55],[78,74,94,57,"matchResult"],[78,85,94,68],[78,87,94,70],[79,4,95,4],[79,8,95,10,"error"],[79,13,95,15],[79,16,95,18,"_$$_REQUIRE"],[79,27,95,18],[79,28,95,18,"_dependencyMap"],[79,42,95,18],[79,77,95,36],[79,95,95,54],[79,97,95,56,"message"],[79,104,95,63],[79,105,95,64],[80,4,96,4],[80,8,96,4,"_locateMismatch"],[80,23,96,4],[80,26,102,8,"locateMismatch"],[80,40,102,22],[80,41,102,23,"matchResult"],[80,52,102,34],[80,54,102,36,"node"],[80,58,102,40],[80,59,102,41],[81,6,97,8,"css"],[81,9,97,11],[81,12,97,11,"_locateMismatch"],[81,27,97,11],[81,28,97,8,"css"],[81,31,97,11],[82,6,98,8,"mismatchOffset"],[82,20,98,22],[82,23,98,22,"_locateMismatch"],[82,38,98,22],[82,39,98,8,"mismatchOffset"],[82,53,98,22],[83,6,99,8,"mismatchLength"],[83,20,99,22],[83,23,99,22,"_locateMismatch"],[83,38,99,22],[83,39,99,8,"mismatchLength"],[83,53,99,22],[84,6,100,8,"start"],[84,11,100,13],[84,14,100,13,"_locateMismatch"],[84,29,100,13],[84,30,100,8,"start"],[84,35,100,13],[85,6,101,8,"end"],[85,9,101,11],[85,12,101,11,"_locateMismatch"],[85,27,101,11],[85,28,101,8,"end"],[85,31,101,11],[86,4,104,4,"error"],[86,9,104,9],[86,10,104,10,"rawMessage"],[86,20,104,20],[86,23,104,23,"message"],[86,30,104,30],[87,4,105,4,"error"],[87,9,105,9],[87,10,105,10,"syntax"],[87,16,105,16],[87,19,105,19,"syntax"],[87,25,105,25],[87,28,105,28,"_$$_REQUIRE"],[87,39,105,28],[87,40,105,28,"_dependencyMap"],[87,54,105,28],[87,92,105,37,"syntax"],[87,98,105,43],[87,99,105,44],[87,102,105,47],[87,113,105,58],[88,4,106,4,"error"],[88,9,106,9],[88,10,106,10,"css"],[88,13,106,13],[88,16,106,16,"css"],[88,19,106,19],[89,4,107,4,"error"],[89,9,107,9],[89,10,107,10,"mismatchOffset"],[89,24,107,24],[89,27,107,27,"mismatchOffset"],[89,41,107,41],[90,4,108,4,"error"],[90,9,108,9],[90,10,108,10,"mismatchLength"],[90,24,108,24],[90,27,108,27,"mismatchLength"],[90,41,108,41],[91,4,109,4,"error"],[91,9,109,9],[91,10,109,10,"message"],[91,17,109,17],[91,20,109,20,"message"],[91,27,109,27],[91,30,109,30],[91,34,109,34],[91,37,110,8],[91,49,110,20],[91,52,110,23,"error"],[91,57,110,28],[91,58,110,29,"syntax"],[91,64,110,35],[91,67,110,38],[91,71,110,42],[91,74,111,8],[91,86,111,20],[91,90,111,24,"css"],[91,93,111,27],[91,97,111,31],[91,113,111,47],[91,114,111,48],[91,117,111,51],[91,121,111,55],[91,124,112,8],[91,136,112,20],[91,139,112,23],[91,143,112,27,"Array"],[91,148,112,32],[91,149,112,33,"error"],[91,154,112,38],[91,155,112,39,"mismatchOffset"],[91,169,112,53],[91,172,112,56],[91,173,112,57],[91,174,112,58],[91,175,112,59,"join"],[91,179,112,63],[91,180,112,64],[91,183,112,67],[91,184,112,68],[91,187,112,71],[91,190,112,74],[92,4,114,4,"Object"],[92,10,114,10],[92,11,114,11,"assign"],[92,17,114,17],[92,18,114,18,"error"],[92,23,114,23],[92,25,114,25,"start"],[92,30,114,30],[92,31,114,31],[93,4,115,4,"error"],[93,9,115,9],[93,10,115,10,"loc"],[93,13,115,13],[93,16,115,16],[94,6,116,8,"source"],[94,12,116,14],[94,14,116,17,"node"],[94,18,116,21],[94,22,116,25,"node"],[94,26,116,29],[94,27,116,30,"loc"],[94,30,116,33],[94,34,116,37,"node"],[94,38,116,41],[94,39,116,42,"loc"],[94,42,116,45],[94,43,116,46,"source"],[94,49,116,52],[94,53,116,57],[94,64,116,68],[95,6,117,8,"start"],[95,11,117,13],[95,13,117,8,"start"],[95,18,117,13],[96,6,118,8,"end"],[96,9,118,11],[96,11,118,8,"end"],[97,4,119,4],[97,5,119,5],[98,4,121,4],[98,11,121,11,"error"],[98,16,121,16],[99,2,122,0],[99,3,122,1],[100,2,124,0,"module"],[100,8,124,6],[100,9,124,7,"exports"],[100,16,124,14],[100,19,124,17],[101,4,125,4,"SyntaxReferenceError"],[101,24,125,24],[101,26,125,4,"SyntaxReferenceError"],[101,46,125,24],[102,4,126,4,"SyntaxMatchError"],[102,20,126,20],[102,22,126,4,"SyntaxMatchError"],[103,2,127,0],[103,3,127,1],[104,0,127,2],[104,3]],"functionMap":{"names":["<global>","locateMismatch","fromLoc","buildLoc","SyntaxReferenceError","SyntaxMatchError"],"mappings":"AAA;ACI;CDgD;AEE;CFQ;AGE;CHgB;6BIE;CJS;yBKE;CL4B"}},"type":"js/module"}]}