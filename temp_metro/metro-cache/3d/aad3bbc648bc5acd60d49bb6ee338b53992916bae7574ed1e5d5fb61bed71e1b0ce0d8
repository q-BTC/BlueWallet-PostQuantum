{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"fnQVLibs90KHiJ7y48fLgPWzDS0="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1863,"column":0,"index":70946}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"@spsina/bip47","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":99},"end":{"line":2,"column":61,"index":160}}],"key":"aVUK1yCYCDysnF0EeGDYiCNEtA8="}},{"name":"assert","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":161},"end":{"line":3,"column":28,"index":189}}],"key":"GZNHw+WT2f5kcSAMBpMaSQtjoUA="}},{"name":"bignumber.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":190},"end":{"line":4,"column":37,"index":227}}],"key":"+tJwKP0N5JISX+Ssl/Xk2Ffv6xc="}},{"name":"bip32","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":228},"end":{"line":5,"column":53,"index":281}}],"key":"N06/O/9WKiQ+JvkVogn1t6zAaK0="}},{"name":"bip39","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":282},"end":{"line":6,"column":31,"index":313}}],"key":"QQUIxv/Rmue50N7SMxVd96Ng/bc="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":314},"end":{"line":7,"column":41,"index":355}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"bs58check","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":423},"end":{"line":9,"column":28,"index":451}}],"key":"NLzwLXOhrhT51Y7aP9purlo+2cM="}},{"name":"../../blue_modules/BlueElectrum","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":580},"end":{"line":13,"column":64,"index":644}}],"key":"4YdrXI/cQIf9X1EFj5L/r0NpY3g="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":712},"end":{"line":15,"column":47,"index":759}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"ecpair","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":522},"end":{"line":11,"column":56,"index":578}}],"key":"u6yWeivdFv15Am3FmwSfeX38wPs="}},{"name":"../rng","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":760},"end":{"line":16,"column":37,"index":797}}],"key":"m0IKNn9EGKw2Q1bQbchJk2wql64="}},{"name":"../../utils/isValidBech32Address","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":1062},"end":{"line":20,"column":72,"index":1134}}],"key":"10ZfiB94E8T94TSS5cv6ETOUyM4="}},{"name":"silent-payments","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":973},"end":{"line":19,"column":88,"index":1061}}],"key":"iPe/mZrWUdZHP5wmQd58hLh1WoU="}},{"name":"./abstract-hd-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":798},"end":{"line":17,"column":56,"index":854}}],"key":"HE0tJVJbTWnZRCkgBFeJZPA86lA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AbstractHDElectrumWallet = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n  var _bip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@spsina/bip47\"));\n  var _assert = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"assert\"));\n  var _bignumber = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"bignumber.js\"));\n  var _bip2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"bip32\"));\n  var bip39 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[13], \"bip39\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[14], \"bitcoinjs-lib\"));\n  var _bs58check = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[15], \"bs58check\"));\n  var BlueElectrum = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"../../blue_modules/BlueElectrum\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"../../blue_modules/noble_ecc\"));\n  var _excluded = [\"vin\", \"vout\"],\n    _excluded2 = [\"vin\", \"vout\"],\n    _excluded3 = [\"vin\", \"vout\"],\n    _excluded4 = [\"vin\", \"vout\"],\n    _excluded5 = [\"vin\", \"vout\"];\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); } /* eslint react/prop-types: \"off\", @typescript-eslint/ban-ts-comment: \"off\", camelcase: \"off\"   */\n  var ECPair = (0, _$$_REQUIRE(_dependencyMap[18], \"ecpair\").ECPairFactory)(_noble_ecc.default);\n  var bip32 = (0, _bip2.default)(_noble_ecc.default);\n  var bip47 = (0, _bip.default)(_noble_ecc.default);\n  /**\n   * Electrum - means that it utilizes Electrum protocol for blockchain data\n   */\n  var AbstractHDElectrumWallet = exports.AbstractHDElectrumWallet = /*#__PURE__*/function (_AbstractHDWallet) {\n    // @ts-ignore\n\n    // @ts-ignore\n\n    // BIP47\n\n    /**\n     * payment codes of people who can pay us\n     */\n\n    /**\n     * payment codes of people whom we can pay\n     */\n\n    /**\n     * joint addresses with remote counterparties, to receive funds\n     */\n\n    /**\n     * receive index\n     */\n\n    /**\n     * joint addresses with remote counterparties, whom we can send funds\n     */\n\n    /**\n     * send index\n     */\n\n    /**\n     * this is where we put transactions related to our PC receive addresses. this is both\n     * incoming transactions AND outgoing transactions (when we spend those funds)\n     *\n     */\n\n    function AbstractHDElectrumWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, AbstractHDElectrumWallet);\n      _this = _callSuper(this, AbstractHDElectrumWallet);\n      // 0xFFFFFFFF\n      // @ts-ignore: override\n      _this.type = AbstractHDElectrumWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = AbstractHDElectrumWallet.typeReadable;\n      _this._balances_by_external_index = {}; //  0 => { c: 0, u: 0 } // confirmed/unconfirmed\n      _this._balances_by_internal_index = {};\n      _this._txs_by_external_index = {};\n      _this._txs_by_internal_index = {};\n      _this._utxo = [];\n\n      // BIP47\n      _this._enable_BIP47 = false;\n      _this._payment_code = '';\n      _this._receive_payment_codes = [];\n      _this._send_payment_codes = [];\n      _this._next_free_payment_code_address_index_receive = {};\n      _this._txs_by_payment_code_index = {};\n      _this._addresses_by_payment_code_send = {};\n      _this._next_free_payment_code_address_index_send = {};\n      _this._balances_by_payment_code_index = {};\n      _this._addresses_by_payment_code_receive = {};\n      return _this;\n    }\n\n    /**\n     * @inheritDoc\n     */\n    (0, _inherits2.default)(AbstractHDElectrumWallet, _AbstractHDWallet);\n    return (0, _createClass2.default)(AbstractHDElectrumWallet, [{\n      key: \"getBalance\",\n      value: function getBalance() {\n        var ret = 0;\n        for (var bal of Object.values(this._balances_by_external_index)) {\n          ret += bal.c;\n        }\n        for (var _bal of Object.values(this._balances_by_internal_index)) {\n          ret += _bal.c;\n        }\n        for (var pc of this._receive_payment_codes) {\n          ret += this._getBalancesByPaymentCodeIndex(pc).c;\n        }\n        return ret + (this.getUnconfirmedBalance() < 0 ? this.getUnconfirmedBalance() : 0);\n      }\n\n      /**\n       *\n       * @inheritDoc\n       */\n    }, {\n      key: \"getUnconfirmedBalance\",\n      value: function getUnconfirmedBalance() {\n        var ret = 0;\n        for (var bal of Object.values(this._balances_by_external_index)) {\n          ret += bal.u;\n        }\n        for (var _bal2 of Object.values(this._balances_by_internal_index)) {\n          ret += _bal2.u;\n        }\n        for (var pc of this._receive_payment_codes) {\n          ret += this._getBalancesByPaymentCodeIndex(pc).u;\n        }\n        return ret;\n      }\n    }, {\n      key: \"generate\",\n      value: function () {\n        var _generate = (0, _asyncToGenerator2.default)(function* () {\n          var buf = yield (0, _$$_REQUIRE(_dependencyMap[19], \"../rng\").randomBytes)(16);\n          this.secret = bip39.entropyToMnemonic(buf.toString('hex'));\n        });\n        function generate() {\n          return _generate.apply(this, arguments);\n        }\n        return generate;\n      }()\n    }, {\n      key: \"generateFromEntropy\",\n      value: function () {\n        var _generateFromEntropy = (0, _asyncToGenerator2.default)(function* (user) {\n          if (user.length !== 32 && user.length !== 16) {\n            throw new Error('Entropy has to be 16 or 32 bytes long');\n          }\n          this.secret = bip39.entropyToMnemonic(user.toString('hex'));\n        });\n        function generateFromEntropy(_x) {\n          return _generateFromEntropy.apply(this, arguments);\n        }\n        return generateFromEntropy;\n      }()\n    }, {\n      key: \"_getExternalWIFByIndex\",\n      value: function _getExternalWIFByIndex(index) {\n        return this._getWIFByIndex(false, index);\n      }\n    }, {\n      key: \"_getInternalWIFByIndex\",\n      value: function _getInternalWIFByIndex(index) {\n        return this._getWIFByIndex(true, index);\n      }\n\n      /**\n       * Get internal/external WIF by wallet index\n       * @param {Boolean} internal\n       * @param {Number} index\n       * @returns {string|false} Either string WIF or FALSE if error happened\n       * @private\n       */\n    }, {\n      key: \"_getWIFByIndex\",\n      value: function _getWIFByIndex(internal, index) {\n        if (!this.secret) return false;\n        var seed = this._getSeed();\n        var root = bip32.fromSeed(seed);\n        var path = `${this.getDerivationPath()}/${internal ? 1 : 0}/${index}`;\n        var child = root.derivePath(path);\n        return child.toWIF();\n      }\n    }, {\n      key: \"_getNodeAddressByIndex\",\n      value: function _getNodeAddressByIndex(node, index) {\n        index = index * 1; // cast to int\n        if (node === 0) {\n          if (this.external_addresses_cache[index]) return this.external_addresses_cache[index]; // cache hit\n        }\n        if (node === 1) {\n          if (this.internal_addresses_cache[index]) return this.internal_addresses_cache[index]; // cache hit\n        }\n        if (node === 0 && !this._node0) {\n          var xpub = this._zpubToXpub(this.getXpub());\n          var hdNode = bip32.fromBase58(xpub);\n          this._node0 = hdNode.derive(node);\n        }\n        if (node === 1 && !this._node1) {\n          var _xpub = this._zpubToXpub(this.getXpub());\n          var _hdNode = bip32.fromBase58(_xpub);\n          this._node1 = _hdNode.derive(node);\n        }\n        var address;\n        if (node === 0) {\n          // @ts-ignore\n          address = this._hdNodeToAddress(this._node0.derive(index));\n        } else {\n          // tbh the only possible else is node === 1\n          // @ts-ignore\n          address = this._hdNodeToAddress(this._node1.derive(index));\n        }\n        if (node === 0) {\n          return this.external_addresses_cache[index] = address;\n        } else {\n          // tbh the only possible else option is node === 1\n          return this.internal_addresses_cache[index] = address;\n        }\n      }\n    }, {\n      key: \"_getNodePubkeyByIndex\",\n      value: function _getNodePubkeyByIndex(node, index) {\n        index = index * 1; // cast to int\n\n        if (node === 0 && !this._node0) {\n          var xpub = this._zpubToXpub(this.getXpub());\n          var hdNode = bip32.fromBase58(xpub);\n          this._node0 = hdNode.derive(node);\n        }\n        if (node === 1 && !this._node1) {\n          var _xpub2 = this._zpubToXpub(this.getXpub());\n          var _hdNode2 = bip32.fromBase58(_xpub2);\n          this._node1 = _hdNode2.derive(node);\n        }\n        if (node === 0 && this._node0) {\n          return this._node0.derive(index).publicKey;\n        }\n        if (node === 1 && this._node1) {\n          return this._node1.derive(index).publicKey;\n        }\n        throw new Error('Internal error: this._node0 or this._node1 is undefined');\n      }\n    }, {\n      key: \"_getExternalAddressByIndex\",\n      value: function _getExternalAddressByIndex(index) {\n        return this._getNodeAddressByIndex(0, index);\n      }\n    }, {\n      key: \"_getInternalAddressByIndex\",\n      value: function _getInternalAddressByIndex(index) {\n        return this._getNodeAddressByIndex(1, index);\n      }\n\n      /**\n       * Returning zpub actually, not xpub. Keeping same method name\n       * for compatibility.\n       *\n       * @return {String} zpub\n       */\n    }, {\n      key: \"getXpub\",\n      value: function getXpub() {\n        if (this._xpub) {\n          return this._xpub; // cache hit\n        }\n        // first, getting xpub\n        var seed = this._getSeed();\n        var root = bip32.fromSeed(seed);\n        var path = this.getDerivationPath();\n        if (!path) {\n          throw new Error('Internal error: no path');\n        }\n        var child = root.derivePath(path).neutered();\n        var xpub = child.toBase58();\n\n        // bitcoinjs does not support zpub yet, so we just convert it from xpub\n        var data = _bs58check.default.decode(xpub);\n        data = data.slice(4);\n        data = Buffer.concat([Buffer.from('04b24746', 'hex'), data]);\n        this._xpub = _bs58check.default.encode(data);\n        return this._xpub;\n      }\n\n      /**\n       * @inheritDoc\n       */\n    }, {\n      key: \"fetchTransactions\",\n      value: (function () {\n        var _fetchTransactions = (0, _asyncToGenerator2.default)(function* () {\n          // if txs are absent for some internal address in hierarchy - this is a sign\n          // we should fetch txs for that address\n          // OR if some address has unconfirmed balance - should fetch it's txs\n          // OR some tx for address is unconfirmed\n          // OR some tx has < 7 confirmations\n\n          // fetching transactions in batch: first, getting batch history for all addresses,\n          // then batch fetching all involved txids\n          // finally, batch fetching txids of all inputs (needed to see amounts & addresses of those inputs)\n          // then we combine it all together\n\n          var addresses2fetch = [];\n          // Store these values to avoid a race condition if fetchBalance func changes them\n          var next_free_address_index = this.next_free_address_index;\n          var next_free_change_address_index = this.next_free_change_address_index;\n          for (var c = 0; c < next_free_address_index + this.gap_limit; c++) {\n            // external addresses first\n            var hasUnconfirmed = false;\n            this._txs_by_external_index[c] = this._txs_by_external_index[c] || [];\n            for (var tx of this._txs_by_external_index[c]) hasUnconfirmed = hasUnconfirmed || !tx.confirmations || tx.confirmations < 7;\n            if (hasUnconfirmed || this._txs_by_external_index[c].length === 0 || this._balances_by_external_index[c].u !== 0) {\n              addresses2fetch.push(this._getExternalAddressByIndex(c));\n            }\n          }\n          for (var _c = 0; _c < next_free_change_address_index + this.gap_limit; _c++) {\n            // next, internal addresses\n            var _hasUnconfirmed = false;\n            this._txs_by_internal_index[_c] = this._txs_by_internal_index[_c] || [];\n            for (var _tx of this._txs_by_internal_index[_c]) _hasUnconfirmed = _hasUnconfirmed || !_tx.confirmations || _tx.confirmations < 7;\n            if (_hasUnconfirmed || this._txs_by_internal_index[_c].length === 0 || this._balances_by_internal_index[_c].u !== 0) {\n              addresses2fetch.push(this._getInternalAddressByIndex(_c));\n            }\n          }\n\n          // next, bip47 addresses\n          for (var pc of this._receive_payment_codes) {\n            for (var _c2 = 0; _c2 < this._getNextFreePaymentCodeIndexReceive(pc) + this.gap_limit; _c2++) {\n              var _hasUnconfirmed2 = false;\n              this._txs_by_payment_code_index[pc] = this._txs_by_payment_code_index[pc] || {};\n              this._txs_by_payment_code_index[pc][_c2] = this._txs_by_payment_code_index[pc][_c2] || [];\n              for (var _tx2 of this._txs_by_payment_code_index[pc][_c2]) _hasUnconfirmed2 = _hasUnconfirmed2 || !_tx2.confirmations || _tx2.confirmations < 7;\n              if (_hasUnconfirmed2 || this._txs_by_payment_code_index[pc][_c2].length === 0 || this._balances_by_payment_code_index[pc].u !== 0) {\n                addresses2fetch.push(this._getBIP47AddressReceive(pc, _c2));\n              }\n            }\n          }\n\n          // first: batch fetch for all addresses histories\n          var histories = yield BlueElectrum.multiGetHistoryByAddress(addresses2fetch);\n          var txs = {};\n          for (var history of Object.values(histories)) {\n            for (var _tx3 of history) {\n              txs[_tx3.tx_hash] = _tx3;\n            }\n          }\n\n          // next, batch fetching each txid we got\n          var txdatas = yield BlueElectrum.multiGetTransactionByTxid(Object.keys(txs), true);\n\n          // now, tricky part. we collect all transactions from inputs (vin), and batch fetch them too.\n          // then we combine all this data (we need inputs to see source addresses and amounts)\n          var vinTxids = [];\n          for (var txdata of Object.values(txdatas)) {\n            if (txdata.vin.length > 99) continue;\n            // ^^^ cutoff, some transactions have thousands of inputs, so the resulting array of txs for inputs to fetch\n            // might be dozens of thousands. too much to handle, so we skip such transactions\n            for (var vin of txdata.vin) {\n              vin.txid && vinTxids.push(vin.txid);\n              // ^^^^ not all inputs have txid, some of them are Coinbase (newly-created coins)\n            }\n          }\n          var vintxdatas = yield BlueElectrum.multiGetTransactionByTxid(vinTxids, true);\n\n          // fetched all transactions from our inputs. now we need to combine it.\n          // iterating all _our_ transactions:\n          for (var txid of Object.keys(txdatas)) {\n            // iterating all inputs our our single transaction:\n            for (var inpNum = 0; inpNum < txdatas[txid].vin.length; inpNum++) {\n              var _vintxdatas$inpTxid;\n              var inpTxid = txdatas[txid].vin[inpNum].txid;\n              var inpVout = txdatas[txid].vin[inpNum].vout;\n              // got txid and output number of _previous_ transaction we shoud look into\n              if ((_vintxdatas$inpTxid = vintxdatas[inpTxid]) != null && _vintxdatas$inpTxid.vout[inpVout]) {\n                // extracting amount & addresses from previous output and adding it to _our_ input:\n                txdatas[txid].vin[inpNum].addresses = vintxdatas[inpTxid].vout[inpVout].scriptPubKey.addresses;\n                txdatas[txid].vin[inpNum].value = vintxdatas[inpTxid].vout[inpVout].value;\n              }\n            }\n          }\n\n          // now purge all unconfirmed txs from internal hashmaps, since some may be evicted from mempool because they became invalid\n          // or replaced. hashmaps are going to be re-populated anyways, since we fetched TXs for addresses with unconfirmed TXs\n          for (var _c3 = 0; _c3 < next_free_address_index + this.gap_limit; _c3++) {\n            this._txs_by_external_index[_c3] = this._txs_by_external_index[_c3].filter(function (tx) {\n              return !!tx.confirmations;\n            });\n          }\n          for (var _c4 = 0; _c4 < next_free_change_address_index + this.gap_limit; _c4++) {\n            this._txs_by_internal_index[_c4] = this._txs_by_internal_index[_c4].filter(function (tx) {\n              return !!tx.confirmations;\n            });\n          }\n          for (var _pc of this._receive_payment_codes) {\n            for (var _c5 = 0; _c5 < this._getNextFreePaymentCodeIndexReceive(_pc) + this.gap_limit; _c5++) {\n              this._txs_by_payment_code_index[_pc][_c5] = this._txs_by_payment_code_index[_pc][_c5].filter(function (tx) {\n                return !!tx.confirmations;\n              });\n            }\n          }\n\n          // now, we need to put transactions in all relevant `cells` of internal hashmaps:\n          // this._txs_by_internal_index, this._txs_by_external_index & this._txs_by_payment_code_index\n\n          for (var _c6 = 0; _c6 < next_free_address_index + this.gap_limit; _c6++) {\n            for (var _tx4 of Object.values(txdatas)) {\n              for (var _vin of _tx4.vin) {\n                if (_vin.addresses && _vin.addresses.indexOf(this._getExternalAddressByIndex(_c6)) !== -1) {\n                  // this TX is related to our address\n                  this._txs_by_external_index[_c6] = this._txs_by_external_index[_c6] || [];\n                  var txVin = _tx4.vin,\n                    txVout = _tx4.vout,\n                    txRest = (0, _objectWithoutProperties2.default)(_tx4, _excluded);\n                  var clonedTx = Object.assign({}, txRest, {\n                    inputs: txVin.slice(0),\n                    outputs: txVout.slice(0)\n                  });\n\n                  // trying to replace tx if it exists already (because it has lower confirmations, for example)\n                  var replaced = false;\n                  for (var cc = 0; cc < this._txs_by_external_index[_c6].length; cc++) {\n                    if (this._txs_by_external_index[_c6][cc].txid === clonedTx.txid) {\n                      replaced = true;\n                      this._txs_by_external_index[_c6][cc] = clonedTx;\n                    }\n                  }\n                  if (!replaced) this._txs_by_external_index[_c6].push(clonedTx);\n                }\n              }\n              for (var vout of _tx4.vout) {\n                if (vout.scriptPubKey.addresses && vout.scriptPubKey.addresses.indexOf(this._getExternalAddressByIndex(_c6)) !== -1) {\n                  // this TX is related to our address\n                  this._txs_by_external_index[_c6] = this._txs_by_external_index[_c6] || [];\n                  var _txVin = _tx4.vin,\n                    _txVout = _tx4.vout,\n                    _txRest = (0, _objectWithoutProperties2.default)(_tx4, _excluded2);\n                  var _clonedTx = Object.assign({}, _txRest, {\n                    inputs: _txVin.slice(0),\n                    outputs: _txVout.slice(0)\n                  });\n\n                  // trying to replace tx if it exists already (because it has lower confirmations, for example)\n                  var _replaced = false;\n                  for (var _cc = 0; _cc < this._txs_by_external_index[_c6].length; _cc++) {\n                    if (this._txs_by_external_index[_c6][_cc].txid === _clonedTx.txid) {\n                      _replaced = true;\n                      this._txs_by_external_index[_c6][_cc] = _clonedTx;\n                    }\n                  }\n                  if (!_replaced) this._txs_by_external_index[_c6].push(_clonedTx);\n                }\n              }\n            }\n          }\n          for (var _c7 = 0; _c7 < next_free_change_address_index + this.gap_limit; _c7++) {\n            for (var _tx5 of Object.values(txdatas)) {\n              for (var _vin2 of _tx5.vin) {\n                if (_vin2.addresses && _vin2.addresses.indexOf(this._getInternalAddressByIndex(_c7)) !== -1) {\n                  // this TX is related to our address\n                  this._txs_by_internal_index[_c7] = this._txs_by_internal_index[_c7] || [];\n                  var _txVin2 = _tx5.vin,\n                    _txVout2 = _tx5.vout,\n                    _txRest2 = (0, _objectWithoutProperties2.default)(_tx5, _excluded3);\n                  var _clonedTx2 = Object.assign({}, _txRest2, {\n                    inputs: _txVin2.slice(0),\n                    outputs: _txVout2.slice(0)\n                  });\n\n                  // trying to replace tx if it exists already (because it has lower confirmations, for example)\n                  var _replaced2 = false;\n                  for (var _cc2 = 0; _cc2 < this._txs_by_internal_index[_c7].length; _cc2++) {\n                    if (this._txs_by_internal_index[_c7][_cc2].txid === _clonedTx2.txid) {\n                      _replaced2 = true;\n                      this._txs_by_internal_index[_c7][_cc2] = _clonedTx2;\n                    }\n                  }\n                  if (!_replaced2) this._txs_by_internal_index[_c7].push(_clonedTx2);\n                }\n              }\n              for (var _vout of _tx5.vout) {\n                if (_vout.scriptPubKey.addresses && _vout.scriptPubKey.addresses.indexOf(this._getInternalAddressByIndex(_c7)) !== -1) {\n                  // this TX is related to our address\n                  this._txs_by_internal_index[_c7] = this._txs_by_internal_index[_c7] || [];\n                  var _txVin3 = _tx5.vin,\n                    _txVout3 = _tx5.vout,\n                    _txRest3 = (0, _objectWithoutProperties2.default)(_tx5, _excluded4);\n                  var _clonedTx3 = Object.assign({}, _txRest3, {\n                    inputs: _txVin3.slice(0),\n                    outputs: _txVout3.slice(0)\n                  });\n\n                  // trying to replace tx if it exists already (because it has lower confirmations, for example)\n                  var _replaced3 = false;\n                  for (var _cc3 = 0; _cc3 < this._txs_by_internal_index[_c7].length; _cc3++) {\n                    if (this._txs_by_internal_index[_c7][_cc3].txid === _clonedTx3.txid) {\n                      _replaced3 = true;\n                      this._txs_by_internal_index[_c7][_cc3] = _clonedTx3;\n                    }\n                  }\n                  if (!_replaced3) this._txs_by_internal_index[_c7].push(_clonedTx3);\n                }\n              }\n            }\n          }\n          for (var _pc2 of this._receive_payment_codes) {\n            for (var _c8 = 0; _c8 < this._getNextFreePaymentCodeIndexReceive(_pc2) + this.gap_limit; _c8++) {\n              for (var _tx6 of Object.values(txdatas)) {\n                // since we are iterating PCs who can pay us, we can completely ignore `tx.vin` and only iterate `tx.vout`\n                for (var _vout2 of _tx6.vout) {\n                  if (_vout2.scriptPubKey.addresses && _vout2.scriptPubKey.addresses.indexOf(this._getBIP47AddressReceive(_pc2, _c8)) !== -1) {\n                    // this TX is related to our address\n                    this._txs_by_payment_code_index[_pc2] = this._txs_by_payment_code_index[_pc2] || {};\n                    this._txs_by_payment_code_index[_pc2][_c8] = this._txs_by_payment_code_index[_pc2][_c8] || [];\n                    var _txVin4 = _tx6.vin,\n                      _txVout4 = _tx6.vout,\n                      _txRest4 = (0, _objectWithoutProperties2.default)(_tx6, _excluded5);\n                    var _clonedTx4 = Object.assign({}, _txRest4, {\n                      inputs: _txVin4.slice(0),\n                      outputs: _txVout4.slice(0)\n                    });\n\n                    // trying to replace tx if it exists already (because it has lower confirmations, for example)\n                    var _replaced4 = false;\n                    for (var _cc4 = 0; _cc4 < this._txs_by_payment_code_index[_pc2][_c8].length; _cc4++) {\n                      if (this._txs_by_payment_code_index[_pc2][_c8][_cc4].txid === _clonedTx4.txid) {\n                        _replaced4 = true;\n                        this._txs_by_payment_code_index[_pc2][_c8][_cc4] = _clonedTx4;\n                      }\n                    }\n                    if (!_replaced4) this._txs_by_payment_code_index[_pc2][_c8].push(_clonedTx4);\n                  }\n                }\n              }\n            }\n          }\n          this._lastTxFetch = +new Date();\n        });\n        function fetchTransactions() {\n          return _fetchTransactions.apply(this, arguments);\n        }\n        return fetchTransactions;\n      }())\n    }, {\n      key: \"getTransactions\",\n      value: function getTransactions() {\n        var txs = [];\n        for (var addressTxs of Object.values(this._txs_by_external_index)) {\n          txs = txs.concat(addressTxs);\n        }\n        for (var _addressTxs of Object.values(this._txs_by_internal_index)) {\n          txs = txs.concat(_addressTxs);\n        }\n        if (this._receive_payment_codes) {\n          for (var pc of this._receive_payment_codes) {\n            if (this._txs_by_payment_code_index[pc]) for (var _addressTxs2 of Object.values(this._txs_by_payment_code_index[pc])) {\n              txs = txs.concat(_addressTxs2);\n            }\n          }\n        }\n        if (txs.length === 0) return []; // guard clause; so we wont spend time calculating addresses\n\n        // its faster to pre-build hashmap of owned addresses than to query `this.weOwnAddress()`, which in turn\n        // iterates over all addresses in hierarchy\n        var ownedAddressesHashmap = {};\n        for (var c = 0; c < this.next_free_address_index + 1; c++) {\n          ownedAddressesHashmap[this._getExternalAddressByIndex(c)] = true;\n        }\n        for (var _c9 = 0; _c9 < this.next_free_change_address_index + 1; _c9++) {\n          ownedAddressesHashmap[this._getInternalAddressByIndex(_c9)] = true;\n        }\n        if (this._receive_payment_codes) for (var _pc3 of this._receive_payment_codes) {\n          for (var _c0 = 0; _c0 < this._getNextFreePaymentCodeIndexReceive(_pc3) + 1; _c0++) {\n            ownedAddressesHashmap[this._getBIP47AddressReceive(_pc3, _c0)] = true;\n          }\n        }\n        // hack: in case this code is called from LegacyWallet:\n        if (this.getAddress()) ownedAddressesHashmap[String(this.getAddress())] = true;\n        var ret = [];\n        for (var tx of txs) {\n          tx.received = tx.blocktime * 1000;\n          if (!tx.blocktime) tx.received = +new Date() - 30 * 1000; // unconfirmed\n          tx.confirmations = tx.confirmations || 0; // unconfirmed\n          tx.hash = tx.txid;\n          tx.value = 0;\n          for (var vin of tx.inputs) {\n            var _vin$addresses;\n            // if input (spending) goes from our address - we are loosing!\n            if (vin.address && ownedAddressesHashmap[vin.address] || (_vin$addresses = vin.addresses) != null && _vin$addresses[0] && ownedAddressesHashmap[vin.addresses[0]]) {\n              var _vin$value;\n              tx.value -= new _bignumber.default((_vin$value = vin.value) != null ? _vin$value : 0).multipliedBy(100000000).toNumber();\n            }\n          }\n          for (var vout of tx.outputs) {\n            var _vout$scriptPubKey$ad;\n            // when output goes to our address - this means we are gaining!\n            if ((_vout$scriptPubKey$ad = vout.scriptPubKey.addresses) != null && _vout$scriptPubKey$ad[0] && ownedAddressesHashmap[vout.scriptPubKey.addresses[0]]) {\n              tx.value += new _bignumber.default(vout.value).multipliedBy(100000000).toNumber();\n            }\n          }\n          if (this.allowBIP47() && this.isBIP47Enabled()) {\n            tx.counterparty = this.getBip47CounterpartyByTx(tx);\n          }\n          ret.push(tx);\n        }\n\n        // now, deduplication:\n        var usedTxIds = {};\n        var ret2 = [];\n        for (var _tx7 of ret) {\n          if (!usedTxIds[_tx7.txid]) ret2.push(_tx7);\n          usedTxIds[_tx7.txid] = 1;\n        }\n        return ret2.sort(function (a, b) {\n          return Number(b.received) - Number(a.received);\n        });\n      }\n    }, {\n      key: \"_binarySearchIterationForInternalAddress\",\n      value: function () {\n        var _binarySearchIterationForInternalAddress2 = (0, _asyncToGenerator2.default)(function* (index) {\n          var _this2 = this;\n          var gerenateChunkAddresses = function gerenateChunkAddresses(chunkNum) {\n            var ret = [];\n            for (var c = _this2.gap_limit * chunkNum; c < _this2.gap_limit * (chunkNum + 1); c++) {\n              ret.push(_this2._getInternalAddressByIndex(c));\n            }\n            return ret;\n          };\n          var lastChunkWithUsedAddressesNum = null;\n          var lastHistoriesWithUsedAddresses = null;\n          for (var c = 0; c < Math.round(index / this.gap_limit); c++) {\n            var histories = yield BlueElectrum.multiGetHistoryByAddress(gerenateChunkAddresses(c));\n            // @ts-ignore\n            if (this.constructor._getTransactionsFromHistories(histories).length > 0) {\n              // in this particular chunk we have used addresses\n              lastChunkWithUsedAddressesNum = c;\n              lastHistoriesWithUsedAddresses = histories;\n            } else {\n              // empty chunk. no sense searching more chunks\n              break;\n            }\n          }\n          var lastUsedIndex = 0;\n          if (lastHistoriesWithUsedAddresses) {\n            // now searching for last used address in batch lastChunkWithUsedAddressesNum\n            for (var _c1 = Number(lastChunkWithUsedAddressesNum) * this.gap_limit; _c1 < Number(lastChunkWithUsedAddressesNum) * this.gap_limit + this.gap_limit; _c1++) {\n              var address = this._getInternalAddressByIndex(_c1);\n              if (lastHistoriesWithUsedAddresses[address] && lastHistoriesWithUsedAddresses[address].length > 0) {\n                lastUsedIndex = Math.max(_c1, lastUsedIndex) + 1; // point to next, which is supposed to be unused\n              }\n            }\n          }\n          return lastUsedIndex;\n        });\n        function _binarySearchIterationForInternalAddress(_x2) {\n          return _binarySearchIterationForInternalAddress2.apply(this, arguments);\n        }\n        return _binarySearchIterationForInternalAddress;\n      }()\n    }, {\n      key: \"_binarySearchIterationForExternalAddress\",\n      value: function () {\n        var _binarySearchIterationForExternalAddress2 = (0, _asyncToGenerator2.default)(function* (index) {\n          var _this3 = this;\n          var gerenateChunkAddresses = function gerenateChunkAddresses(chunkNum) {\n            var ret = [];\n            for (var c = _this3.gap_limit * chunkNum; c < _this3.gap_limit * (chunkNum + 1); c++) {\n              ret.push(_this3._getExternalAddressByIndex(c));\n            }\n            return ret;\n          };\n          var lastChunkWithUsedAddressesNum = null;\n          var lastHistoriesWithUsedAddresses = null;\n          for (var c = 0; c < Math.round(index / this.gap_limit); c++) {\n            var histories = yield BlueElectrum.multiGetHistoryByAddress(gerenateChunkAddresses(c));\n            // @ts-ignore\n            if (this.constructor._getTransactionsFromHistories(histories).length > 0) {\n              // in this particular chunk we have used addresses\n              lastChunkWithUsedAddressesNum = c;\n              lastHistoriesWithUsedAddresses = histories;\n            } else {\n              // empty chunk. no sense searching more chunks\n              break;\n            }\n          }\n          var lastUsedIndex = 0;\n          if (lastHistoriesWithUsedAddresses) {\n            // now searching for last used address in batch lastChunkWithUsedAddressesNum\n            for (var _c10 = Number(lastChunkWithUsedAddressesNum) * this.gap_limit; _c10 < Number(lastChunkWithUsedAddressesNum) * this.gap_limit + this.gap_limit; _c10++) {\n              var address = this._getExternalAddressByIndex(_c10);\n              if (lastHistoriesWithUsedAddresses[address] && lastHistoriesWithUsedAddresses[address].length > 0) {\n                lastUsedIndex = Math.max(_c10, lastUsedIndex) + 1; // point to next, which is supposed to be unused\n              }\n            }\n          }\n          return lastUsedIndex;\n        });\n        function _binarySearchIterationForExternalAddress(_x3) {\n          return _binarySearchIterationForExternalAddress2.apply(this, arguments);\n        }\n        return _binarySearchIterationForExternalAddress;\n      }()\n    }, {\n      key: \"_binarySearchIterationForBIP47Address\",\n      value: function () {\n        var _binarySearchIterationForBIP47Address2 = (0, _asyncToGenerator2.default)(function* (paymentCode, index) {\n          var _this4 = this;\n          var generateChunkAddresses = function generateChunkAddresses(chunkNum) {\n            var ret = [];\n            for (var c = _this4.gap_limit * chunkNum; c < _this4.gap_limit * (chunkNum + 1); c++) {\n              ret.push(_this4._getBIP47AddressReceive(paymentCode, c));\n            }\n            return ret;\n          };\n          var lastChunkWithUsedAddressesNum = null;\n          var lastHistoriesWithUsedAddresses = null;\n          for (var c = 0; c < Math.round(index / this.gap_limit); c++) {\n            var histories = yield BlueElectrum.multiGetHistoryByAddress(generateChunkAddresses(c));\n            // @ts-ignore\n            if (this.constructor._getTransactionsFromHistories(histories).length > 0) {\n              // in this particular chunk we have used addresses\n              lastChunkWithUsedAddressesNum = c;\n              lastHistoriesWithUsedAddresses = histories;\n            } else {\n              // empty chunk. no sense searching more chunks\n              break;\n            }\n          }\n          var lastUsedIndex = 0;\n          if (lastHistoriesWithUsedAddresses) {\n            // now searching for last used address in batch lastChunkWithUsedAddressesNum\n            for (var _c11 = Number(lastChunkWithUsedAddressesNum) * this.gap_limit; _c11 < Number(lastChunkWithUsedAddressesNum) * this.gap_limit + this.gap_limit; _c11++) {\n              var address = this._getBIP47AddressReceive(paymentCode, _c11);\n              if (lastHistoriesWithUsedAddresses[address] && lastHistoriesWithUsedAddresses[address].length > 0) {\n                lastUsedIndex = Math.max(_c11, lastUsedIndex) + 1; // point to next, which is supposed to be unused\n              }\n            }\n          }\n          return lastUsedIndex;\n        });\n        function _binarySearchIterationForBIP47Address(_x4, _x5) {\n          return _binarySearchIterationForBIP47Address2.apply(this, arguments);\n        }\n        return _binarySearchIterationForBIP47Address;\n      }()\n    }, {\n      key: \"fetchBalance\",\n      value: function () {\n        var _fetchBalance2 = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (this.next_free_change_address_index === 0 && this.next_free_address_index === 0) {\n              // doing binary search for last used address:\n              this.next_free_change_address_index = yield this._binarySearchIterationForInternalAddress(1000);\n              this.next_free_address_index = yield this._binarySearchIterationForExternalAddress(1000);\n              if (this._receive_payment_codes) {\n                for (var pc of this._receive_payment_codes) {\n                  this._next_free_payment_code_address_index_receive[pc] = yield this._binarySearchIterationForBIP47Address(pc, 1000);\n                }\n              }\n            } // end rescanning fresh wallet\n\n            // finally fetching balance\n            yield this._fetchBalance();\n          } catch (err) {\n            console.warn(err);\n          }\n        });\n        function fetchBalance() {\n          return _fetchBalance2.apply(this, arguments);\n        }\n        return fetchBalance;\n      }()\n    }, {\n      key: \"_fetchBalance\",\n      value: function () {\n        var _fetchBalance3 = (0, _asyncToGenerator2.default)(function* () {\n          // probing future addressess in hierarchy whether they have any transactions, in case\n          // our 'next free addr' pointers are lagging behind\n          // for that we are gona batch fetch history for all addresses between last used and last used + gap_limit\n\n          var lagAddressesToFetch = [];\n          for (var c = this.next_free_address_index; c < this.next_free_address_index + this.gap_limit; c++) {\n            lagAddressesToFetch.push(this._getExternalAddressByIndex(c));\n          }\n          for (var _c12 = this.next_free_change_address_index; _c12 < this.next_free_change_address_index + this.gap_limit; _c12++) {\n            lagAddressesToFetch.push(this._getInternalAddressByIndex(_c12));\n          }\n          for (var pc of this._receive_payment_codes) {\n            for (var _c13 = this._next_free_payment_code_address_index_receive[pc]; _c13 < this._next_free_payment_code_address_index_receive[pc] + this.gap_limit; _c13++) {\n              lagAddressesToFetch.push(this._getBIP47AddressReceive(pc, _c13));\n            }\n          }\n          var txs = yield BlueElectrum.multiGetHistoryByAddress(lagAddressesToFetch); // <------ electrum call\n\n          for (var _c14 = this.next_free_address_index; _c14 < this.next_free_address_index + this.gap_limit; _c14++) {\n            var address = this._getExternalAddressByIndex(_c14);\n            if (txs[address] && Array.isArray(txs[address]) && txs[address].length > 0) {\n              // whoa, someone uses our wallet outside! better catch up\n              this.next_free_address_index = _c14 + 1;\n            }\n          }\n          for (var _c15 = this.next_free_change_address_index; _c15 < this.next_free_change_address_index + this.gap_limit; _c15++) {\n            var _address = this._getInternalAddressByIndex(_c15);\n            if (txs[_address] && Array.isArray(txs[_address]) && txs[_address].length > 0) {\n              // whoa, someone uses our wallet outside! better catch up\n              this.next_free_change_address_index = _c15 + 1;\n            }\n          }\n          for (var _pc4 of this._receive_payment_codes) {\n            for (var _c16 = this._next_free_payment_code_address_index_receive[_pc4]; _c16 < this._next_free_payment_code_address_index_receive[_pc4] + this.gap_limit; _c16++) {\n              var _address2 = this._getBIP47AddressReceive(_pc4, _c16);\n              if (txs[_address2] && Array.isArray(txs[_address2]) && txs[_address2].length > 0) {\n                // whoa, someone uses our wallet outside! better catch up\n                this._next_free_payment_code_address_index_receive[_pc4] = _c16 + 1;\n              }\n            }\n          }\n\n          // next, business as usuall. fetch balances\n\n          var addresses2fetch = [];\n\n          // generating all involved addresses.\n          // basically, refetch all from index zero to maximum. doesnt matter\n          // since we batch them 100 per call\n\n          // external\n          for (var _c17 = 0; _c17 < this.next_free_address_index + this.gap_limit; _c17++) {\n            addresses2fetch.push(this._getExternalAddressByIndex(_c17));\n          }\n\n          // internal\n          for (var _c18 = 0; _c18 < this.next_free_change_address_index + this.gap_limit; _c18++) {\n            addresses2fetch.push(this._getInternalAddressByIndex(_c18));\n          }\n          for (var _pc5 of this._receive_payment_codes) {\n            for (var _c19 = 0; _c19 < this._next_free_payment_code_address_index_receive[_pc5] + this.gap_limit; _c19++) {\n              addresses2fetch.push(this._getBIP47AddressReceive(_pc5, _c19));\n            }\n          }\n          var balances = yield BlueElectrum.multiGetBalanceByAddress(addresses2fetch);\n\n          // converting to a more compact internal format\n          for (var _c20 = 0; _c20 < this.next_free_address_index + this.gap_limit; _c20++) {\n            var addr = this._getExternalAddressByIndex(_c20);\n            if (balances.addresses[addr]) {\n              // first, if balances differ from what we store - we delete transactions for that\n              // address so next fetchTransactions() will refetch everything\n              if (this._balances_by_external_index[_c20]) {\n                if (this._balances_by_external_index[_c20].c !== balances.addresses[addr].confirmed || this._balances_by_external_index[_c20].u !== balances.addresses[addr].unconfirmed) {\n                  delete this._txs_by_external_index[_c20];\n                }\n              }\n              // update local representation of balances on that address:\n              this._balances_by_external_index[_c20] = {\n                c: balances.addresses[addr].confirmed,\n                u: balances.addresses[addr].unconfirmed\n              };\n            }\n          }\n          for (var _c21 = 0; _c21 < this.next_free_change_address_index + this.gap_limit; _c21++) {\n            var _addr = this._getInternalAddressByIndex(_c21);\n            if (balances.addresses[_addr]) {\n              // first, if balances differ from what we store - we delete transactions for that\n              // address so next fetchTransactions() will refetch everything\n              if (this._balances_by_internal_index[_c21]) {\n                if (this._balances_by_internal_index[_c21].c !== balances.addresses[_addr].confirmed || this._balances_by_internal_index[_c21].u !== balances.addresses[_addr].unconfirmed) {\n                  delete this._txs_by_internal_index[_c21];\n                }\n              }\n              // update local representation of balances on that address:\n              this._balances_by_internal_index[_c21] = {\n                c: balances.addresses[_addr].confirmed,\n                u: balances.addresses[_addr].unconfirmed\n              };\n            }\n          }\n          for (var _pc6 of this._receive_payment_codes) {\n            var confirmed = 0;\n            var unconfirmed = 0;\n            for (var _c22 = 0; _c22 < this._getNextFreePaymentCodeIndexReceive(_pc6) + this.gap_limit; _c22++) {\n              var _addr2 = this._getBIP47AddressReceive(_pc6, _c22);\n              if (balances.addresses[_addr2].confirmed || balances.addresses[_addr2].unconfirmed) {\n                confirmed = confirmed + balances.addresses[_addr2].confirmed;\n                unconfirmed = unconfirmed + balances.addresses[_addr2].unconfirmed;\n              }\n            }\n            this._balances_by_payment_code_index[_pc6] = {\n              c: confirmed,\n              u: unconfirmed\n            };\n          }\n          this._lastBalanceFetch = +new Date();\n        });\n        function _fetchBalance() {\n          return _fetchBalance3.apply(this, arguments);\n        }\n        return _fetchBalance;\n      }()\n    }, {\n      key: \"fetchUtxo\",\n      value: function () {\n        var _fetchUtxo = (0, _asyncToGenerator2.default)(function* () {\n          // fetching utxo of addresses that only have some balance\n          var addressess = [];\n\n          // considering confirmed balance:\n          for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n            var _this$_balances_by_ex;\n            if (((_this$_balances_by_ex = this._balances_by_external_index) == null || (_this$_balances_by_ex = _this$_balances_by_ex[c]) == null ? void 0 : _this$_balances_by_ex.c) > 0) {\n              addressess.push(this._getExternalAddressByIndex(c));\n            }\n          }\n          for (var _c23 = 0; _c23 < this.next_free_change_address_index + this.gap_limit; _c23++) {\n            var _this$_balances_by_in;\n            if (((_this$_balances_by_in = this._balances_by_internal_index) == null || (_this$_balances_by_in = _this$_balances_by_in[_c23]) == null ? void 0 : _this$_balances_by_in.c) > 0) {\n              addressess.push(this._getInternalAddressByIndex(_c23));\n            }\n          }\n          for (var pc of this._receive_payment_codes) {\n            for (var _c24 = 0; _c24 < this._next_free_payment_code_address_index_receive[pc] + this.gap_limit; _c24++) {\n              var _this$_balances_by_pa;\n              if (((_this$_balances_by_pa = this._balances_by_payment_code_index) == null || (_this$_balances_by_pa = _this$_balances_by_pa[pc]) == null ? void 0 : _this$_balances_by_pa.c) > 0) {\n                addressess.push(this._getBIP47AddressReceive(pc, _c24));\n              }\n            }\n          }\n\n          // considering UNconfirmed balance:\n          for (var _c25 = 0; _c25 < this.next_free_address_index + this.gap_limit; _c25++) {\n            var _this$_balances_by_ex2;\n            if (((_this$_balances_by_ex2 = this._balances_by_external_index) == null || (_this$_balances_by_ex2 = _this$_balances_by_ex2[_c25]) == null ? void 0 : _this$_balances_by_ex2.u) > 0) {\n              addressess.push(this._getExternalAddressByIndex(_c25));\n            }\n          }\n          for (var _c26 = 0; _c26 < this.next_free_change_address_index + this.gap_limit; _c26++) {\n            var _this$_balances_by_in2;\n            if (((_this$_balances_by_in2 = this._balances_by_internal_index) == null || (_this$_balances_by_in2 = _this$_balances_by_in2[_c26]) == null ? void 0 : _this$_balances_by_in2.u) > 0) {\n              addressess.push(this._getInternalAddressByIndex(_c26));\n            }\n          }\n          for (var _pc7 of this._receive_payment_codes) {\n            for (var _c27 = 0; _c27 < this._next_free_payment_code_address_index_receive[_pc7] + this.gap_limit; _c27++) {\n              var _this$_balances_by_pa2;\n              if (((_this$_balances_by_pa2 = this._balances_by_payment_code_index) == null || (_this$_balances_by_pa2 = _this$_balances_by_pa2[_pc7]) == null ? void 0 : _this$_balances_by_pa2.u) > 0) {\n                addressess.push(this._getBIP47AddressReceive(_pc7, _c27));\n              }\n            }\n          }\n\n          // note: we could remove checks `.c` and `.u` to simplify code, but the resulting `addressess` array would be bigger, thus bigger batch\n          // to fetch (or maybe even several fetches), which is not critical but undesirable.\n          // anyway, result has `.confirmations` property for each utxo, so outside caller can easily filter out unconfirmed if he wants to\n\n          addressess = (0, _toConsumableArray2.default)(new Set(addressess)); // deduplicate just for any case\n\n          var fetchedUtxo = yield BlueElectrum.multiGetUtxoByAddress(addressess);\n          this._utxo = [];\n          for (var arr of Object.values(fetchedUtxo)) {\n            this._utxo = this._utxo.concat(arr);\n          }\n\n          // this belongs in `.getUtxo()`\n          for (var u of this._utxo) {\n            u.wif = this._getWifForAddress(u.address);\n            if (!u.confirmations && u.height) u.confirmations = BlueElectrum.estimateCurrentBlockheight() - u.height;\n          }\n          this._utxo = this._utxo.sort(function (a, b) {\n            return Number(a.value) - Number(b.value);\n          });\n          // more consistent, so txhex in unit tests wont change\n        });\n        function fetchUtxo() {\n          return _fetchUtxo.apply(this, arguments);\n        }\n        return fetchUtxo;\n      }()\n      /**\n       * Getter for previously fetched UTXO. For example:\n       *     [ { height: 0,\n       *    value: 666,\n       *    address: 'string',\n       *    vout: 1,\n       *    txid: 'string',\n       *    wif: 'string',\n       *    confirmations: 0 } ]\n       *\n       * @param respectFrozen {boolean} Add Frozen outputs\n       * @returns {[]}\n       */\n    }, {\n      key: \"getUtxo\",\n      value: function getUtxo() {\n        var _this5 = this;\n        var respectFrozen = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var ret = [];\n        if (this._utxo.length === 0) {\n          ret = this.getDerivedUtxoFromOurTransaction(); // oy vey, no stored utxo. lets attempt to derive it from stored transactions\n        } else {\n          ret = this._utxo;\n        }\n        if (!respectFrozen) {\n          ret = ret.filter(function (_ref) {\n            var txid = _ref.txid,\n              vout = _ref.vout;\n            return !_this5.getUTXOMetadata(txid, vout).frozen;\n          });\n        }\n        return ret;\n      }\n    }, {\n      key: \"getDerivedUtxoFromOurTransaction\",\n      value: function getDerivedUtxoFromOurTransaction() {\n        var returnSpentUtxoAsWell = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var utxos = [];\n\n        // its faster to pre-build hashmap of owned addresses than to query `this.weOwnAddress()`, which in turn\n        // iterates over all addresses in hierarchy\n        var ownedAddressesHashmap = {};\n        for (var c = 0; c < this.next_free_address_index + 1; c++) {\n          ownedAddressesHashmap[this._getExternalAddressByIndex(c)] = true;\n        }\n        for (var _c28 = 0; _c28 < this.next_free_change_address_index + 1; _c28++) {\n          ownedAddressesHashmap[this._getInternalAddressByIndex(_c28)] = true;\n        }\n        for (var pc of this._receive_payment_codes) {\n          for (var _c29 = 0; _c29 < this._getNextFreePaymentCodeIndexReceive(pc) + 1; _c29++) {\n            ownedAddressesHashmap[this._getBIP47AddressReceive(pc, _c29)] = true;\n          }\n        }\n        for (var tx of this.getTransactions()) {\n          for (var output of tx.outputs) {\n            var address = false;\n            if (output.scriptPubKey && output.scriptPubKey.addresses && output.scriptPubKey.addresses[0]) {\n              address = output.scriptPubKey.addresses[0];\n            }\n            if (ownedAddressesHashmap[String(address)]) {\n              var _tx$confirmations;\n              var value = new _bignumber.default(output.value).multipliedBy(100000000).toNumber();\n              utxos.push({\n                txid: tx.txid,\n                vout: output.n,\n                address: String(address),\n                value: value,\n                confirmations: tx.confirmations,\n                wif: false,\n                height: BlueElectrum.estimateCurrentBlockheight() - ((_tx$confirmations = tx.confirmations) != null ? _tx$confirmations : 0)\n              });\n            }\n          }\n        }\n        if (returnSpentUtxoAsWell) return utxos;\n\n        // got all utxos we ever had. lets filter out the ones that are spent:\n        var ret = [];\n        for (var utxo of utxos) {\n          var spent = false;\n          for (var _tx8 of this.getTransactions()) {\n            for (var input of _tx8.inputs) {\n              if (input.txid === utxo.txid && input.vout === utxo.vout) spent = true;\n              // utxo we got previously was actually spent right here ^^\n            }\n          }\n          if (!spent) {\n            // filling WIFs only for legit unspent UTXO, as it is a slow operation\n            utxo.wif = this._getWifForAddress(utxo.address);\n            ret.push(utxo);\n          }\n        }\n        return ret;\n      }\n    }, {\n      key: \"_getDerivationPathByAddress\",\n      value: function _getDerivationPathByAddress(address) {\n        var path = this.getDerivationPath();\n        for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n          if (this._getExternalAddressByIndex(c) === address) return path + '/0/' + c;\n        }\n        for (var _c30 = 0; _c30 < this.next_free_change_address_index + this.gap_limit; _c30++) {\n          if (this._getInternalAddressByIndex(_c30) === address) return path + '/1/' + _c30;\n        }\n        for (var pc of this._receive_payment_codes) {\n          for (var _c31 = 0; _c31 < this._getNextFreePaymentCodeIndexReceive(pc) + this.gap_limit; _c31++) {\n            // not technically correct but well, to have at least somethign in PSBT...\n            if (this._getBIP47AddressReceive(pc, _c31) === address) return \"m/47'/0'/0'/\" + _c31;\n          }\n        }\n        return false;\n      }\n\n      /**\n       *\n       * @param address {string} Address that belongs to this wallet\n       * @returns {Buffer|false} Either buffer with pubkey or false\n       */\n    }, {\n      key: \"_getPubkeyByAddress\",\n      value: function _getPubkeyByAddress(address) {\n        for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n          if (this._getExternalAddressByIndex(c) === address) return this._getNodePubkeyByIndex(0, c);\n        }\n        for (var _c32 = 0; _c32 < this.next_free_change_address_index + this.gap_limit; _c32++) {\n          if (this._getInternalAddressByIndex(_c32) === address) return this._getNodePubkeyByIndex(1, _c32);\n        }\n        for (var pc of this._receive_payment_codes) {\n          for (var _c33 = 0; _c33 < this._getNextFreePaymentCodeIndexReceive(pc) + this.gap_limit; _c33++) {\n            if (this._getBIP47AddressReceive(pc, _c33) === address) return this._getBIP47PubkeyByIndex(pc, _c33);\n          }\n        }\n        return false;\n      }\n\n      /**\n       * Finds WIF corresponding to address and returns it\n       *\n       * @param address {string} Address that belongs to this wallet\n       * @returns {string|false} WIF or false\n       */\n    }, {\n      key: \"_getWIFbyAddress\",\n      value: function _getWIFbyAddress(address) {\n        for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n          if (this._getExternalAddressByIndex(c) === address) return this._getWIFByIndex(false, c);\n        }\n        for (var _c34 = 0; _c34 < this.next_free_change_address_index + this.gap_limit; _c34++) {\n          if (this._getInternalAddressByIndex(_c34) === address) return this._getWIFByIndex(true, _c34);\n        }\n        for (var pc of this._receive_payment_codes) {\n          for (var _c35 = 0; _c35 < this._getNextFreePaymentCodeIndexReceive(pc) + this.gap_limit; _c35++) {\n            if (this._getBIP47AddressReceive(pc, _c35) === address) return this._getBIP47WIF(pc, _c35);\n          }\n        }\n        return false;\n      }\n    }, {\n      key: \"weOwnAddress\",\n      value: function weOwnAddress(address) {\n        if (!address) return false;\n        var cleanAddress = address;\n        var isBech32Address = (0, _$$_REQUIRE(_dependencyMap[20], \"../../utils/isValidBech32Address\").isValidBech32Address)(address);\n        if (isBech32Address) {\n          cleanAddress = address.toLocaleLowerCase();\n        }\n        for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n          if (this._getExternalAddressByIndex(c) === cleanAddress) return true;\n        }\n        for (var _c36 = 0; _c36 < this.next_free_change_address_index + this.gap_limit; _c36++) {\n          if (this._getInternalAddressByIndex(_c36) === cleanAddress) return true;\n        }\n        for (var pc of this._receive_payment_codes) {\n          for (var _c37 = 0; _c37 < this._getNextFreePaymentCodeIndexReceive(pc) + this.gap_limit; _c37++) {\n            if (this._getBIP47AddressReceive(pc, _c37) === address) return true;\n          }\n        }\n        return false;\n      }\n\n      /**\n       *\n       * @param utxos {Array.<{vout: Number, value: Number, txid: String, address: String}>} List of spendable utxos\n       * @param targets {Array.<{value: Number, address: String}>} Where coins are going. If theres only 1 target and that target has no value - this will send MAX to that address (respecting fee rate)\n       * @param feeRate {Number} satoshi per byte\n       * @param changeAddress {String} Excessive coins will go back to that address\n       * @param sequence {Number} Used in RBF\n       * @param skipSigning {boolean} Whether we should skip signing, use returned `psbt` in that case\n       * @param masterFingerprint {number} Decimal number of wallet's master fingerprint\n       * @returns {{outputs: Array, tx: Transaction, inputs: Array, fee: Number, psbt: Psbt}}\n       */\n    }, {\n      key: \"createTransaction\",\n      value: function createTransaction(utxos, targets, feeRate, changeAddress) {\n        var _this6 = this;\n        var sequence = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : AbstractHDElectrumWallet.defaultRBFSequence;\n        var skipSigning = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var masterFingerprint = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0;\n        if (targets.length === 0) throw new Error('No destination provided');\n        var _this$coinselect = this.coinselect(utxos, targets, feeRate),\n          inputs = _this$coinselect.inputs,\n          outputs = _this$coinselect.outputs,\n          fee = _this$coinselect.fee;\n        var hasSilentPaymentOutput = !!outputs.find(function (o) {\n          var _o$address;\n          return (_o$address = o.address) == null ? void 0 : _o$address.startsWith('sp1');\n        });\n        if (hasSilentPaymentOutput) {\n          if (!this.allowSilentPaymentSend()) {\n            throw new Error('This wallet can not send to SilentPayment address');\n          }\n\n          // for a single wallet all utxos gona be the same type, so we define it only once:\n          var utxoType = 'non-eligible';\n          switch (this.segwitType) {\n            case 'p2sh(p2wpkh)':\n              utxoType = 'p2sh-p2wpkh';\n              break;\n            case 'p2wpkh':\n              utxoType = 'p2wpkh';\n              break;\n            default:\n              // @ts-ignore override\n              if (this.type === 'HDlegacyP2PKH') utxoType = 'p2pkh';\n          }\n          var spUtxos = inputs.map(function (u) {\n            return Object.assign({}, u, {\n              utxoType: utxoType,\n              wif: u.wif\n            });\n          });\n          var sp = new (_$$_REQUIRE(_dependencyMap[21], \"silent-payments\").SilentPayment)();\n          outputs = sp.createTransaction(spUtxos, outputs);\n        }\n        sequence = sequence || AbstractHDElectrumWallet.defaultRBFSequence;\n        var psbt = new bitcoin.Psbt();\n        var c = 0;\n        var keypairs = {};\n        var values = {};\n        inputs.forEach(function (input) {\n          var keyPair;\n          if (!skipSigning) {\n            // skiping signing related stuff\n            keyPair = ECPair.fromWIF(_this6._getWifForAddress(String(input.address)));\n            keypairs[c] = keyPair;\n          }\n          values[c] = input.value;\n          c++;\n          if (!skipSigning) {\n            // skiping signing related stuff\n            if (!input.address || !_this6._getWifForAddress(input.address)) throw new Error('Internal error: no address or WIF to sign input');\n          }\n          var masterFingerprintBuffer;\n          if (masterFingerprint) {\n            var masterFingerprintHex = Number(masterFingerprint).toString(16);\n            if (masterFingerprintHex.length < 8) masterFingerprintHex = '0' + masterFingerprintHex; // conversion without explicit zero might result in lost byte\n            var hexBuffer = Buffer.from(masterFingerprintHex, 'hex');\n            masterFingerprintBuffer = Buffer.from(hexBuffer).reverse();\n          } else {\n            masterFingerprintBuffer = Buffer.from([0x00, 0x00, 0x00, 0x00]);\n          }\n          // this is not correct fingerprint, as we dont know real fingerprint - we got zpub with 84/0, but fingerpting\n          // should be from root. basically, fingerprint should be provided from outside  by user when importing zpub\n\n          psbt = _this6._addPsbtInput(psbt, input, sequence, masterFingerprintBuffer);\n        });\n        outputs.forEach(function (output) {\n          var _output$script, _output$address, _output$script2;\n          // if output has no address - this is change output or a custom script output\n          var change = false;\n          // @ts-ignore\n          if (!output.address && !((_output$script = output.script) != null && _output$script.hex)) {\n            change = true;\n            output.address = changeAddress;\n          }\n          var path = _this6._getDerivationPathByAddress(String(output.address));\n          var pubkey = _this6._getPubkeyByAddress(String(output.address));\n          var masterFingerprintBuffer;\n          if (masterFingerprint) {\n            var masterFingerprintHex = Number(masterFingerprint).toString(16);\n            if (masterFingerprintHex.length < 8) masterFingerprintHex = '0' + masterFingerprintHex; // conversion without explicit zero might result in lost byte\n            var hexBuffer = Buffer.from(masterFingerprintHex, 'hex');\n            masterFingerprintBuffer = Buffer.from(hexBuffer).reverse();\n          } else {\n            masterFingerprintBuffer = Buffer.from([0x00, 0x00, 0x00, 0x00]);\n          }\n\n          // this is not correct fingerprint, as we dont know realfingerprint - we got zpub with 84/0, but fingerpting\n          // should be from root. basically, fingerprint should be provided from outside  by user when importing zpub\n\n          if ((_output$address = output.address) != null && _output$address.startsWith('PM')) {\n            // ok its BIP47 payment code, so we need to unwrap a joint address for the receiver and use it instead:\n            output.address = _this6._getNextFreePaymentCodeAddressSend(output.address);\n            // ^^^ trusting that notification transaction is in place\n          }\n          psbt.addOutput({\n            address: output.address,\n            // @ts-ignore types from bitcoinjs are not exported so we cant define outputData separately and add fields conditionally (either address or script should be present)\n            script: (_output$script2 = output.script) != null && _output$script2.hex ? Buffer.from(output.script.hex, 'hex') : undefined,\n            value: BigInt(output.value),\n            bip32Derivation: change && path && pubkey ? [{\n              masterFingerprint: masterFingerprintBuffer,\n              path: path,\n              pubkey: pubkey\n            }] : []\n          });\n        });\n        if (!skipSigning) {\n          // skiping signing related stuff\n          for (var cc = 0; cc < c; cc++) {\n            psbt.signInput(cc, keypairs[cc]);\n          }\n        }\n        var tx;\n        if (!skipSigning) {\n          tx = psbt.finalizeAllInputs().extractTransaction();\n        }\n        return {\n          tx: tx,\n          inputs: inputs,\n          outputs: outputs,\n          fee: fee,\n          psbt: psbt\n        };\n      }\n    }, {\n      key: \"_addPsbtInput\",\n      value: function _addPsbtInput(psbt, input, sequence, masterFingerprintBuffer) {\n        if (!input.address) {\n          throw new Error('Internal error: no address on Utxo during _addPsbtInput()');\n        }\n        var pubkey = this._getPubkeyByAddress(input.address);\n        var path = this._getDerivationPathByAddress(input.address);\n        if (!pubkey || !path) {\n          throw new Error('Internal error: pubkey or path are invalid');\n        }\n        var p2wpkh = bitcoin.payments.p2wpkh({\n          pubkey: pubkey\n        });\n        if (!p2wpkh.output) {\n          throw new Error('Internal error: could not create p2wpkh output during _addPsbtInput');\n        }\n        psbt.addInput({\n          hash: input.txid,\n          index: input.vout,\n          sequence: sequence,\n          bip32Derivation: [{\n            masterFingerprint: masterFingerprintBuffer,\n            path: path,\n            pubkey: pubkey\n          }],\n          witnessUtxo: {\n            script: p2wpkh.output,\n            value: BigInt(input.value)\n          }\n        });\n        return psbt;\n      }\n\n      /**\n       * Combines 2 PSBTs into final transaction from which you can\n       * get HEX and broadcast\n       *\n       * @param base64one {string|Psbt}\n       * @param base64two {string|Psbt}\n       * @returns {Transaction}\n       */\n    }, {\n      key: \"combinePsbt\",\n      value: function combinePsbt(base64one, base64two) {\n        var final1 = typeof base64one === 'string' ? bitcoin.Psbt.fromBase64(base64one) : base64one;\n        var final2 = typeof base64two === 'string' ? bitcoin.Psbt.fromBase64(base64two) : base64two;\n        final1.combine(final2);\n        var extractedTransaction;\n        try {\n          extractedTransaction = final1.finalizeAllInputs().extractTransaction();\n        } catch (_) {\n          // probably already finalized\n          extractedTransaction = final1.extractTransaction();\n        }\n        return extractedTransaction;\n      }\n\n      /**\n       * Creates Segwit Bech32 Bitcoin address\n       */\n    }, {\n      key: \"_nodeToBech32SegwitAddress\",\n      value: function _nodeToBech32SegwitAddress(hdNode) {\n        var _bitcoin$payments$p2w = bitcoin.payments.p2wpkh({\n            pubkey: hdNode.publicKey\n          }),\n          address = _bitcoin$payments$p2w.address;\n        if (!address) {\n          throw new Error('Could not create address in _nodeToBech32SegwitAddress');\n        }\n        return address;\n      }\n    }, {\n      key: \"_nodeToLegacyAddress\",\n      value: function _nodeToLegacyAddress(hdNode) {\n        var _bitcoin$payments$p2p = bitcoin.payments.p2pkh({\n            pubkey: hdNode.publicKey\n          }),\n          address = _bitcoin$payments$p2p.address;\n        if (!address) {\n          throw new Error('Could not create address in _nodeToLegacyAddress');\n        }\n        return address;\n      }\n\n      /**\n       * Creates Segwit P2SH Bitcoin address\n       */\n    }, {\n      key: \"_nodeToP2shSegwitAddress\",\n      value: function _nodeToP2shSegwitAddress(hdNode) {\n        var _bitcoin$payments$p2s = bitcoin.payments.p2sh({\n            redeem: bitcoin.payments.p2wpkh({\n              pubkey: hdNode.publicKey\n            })\n          }),\n          address = _bitcoin$payments$p2s.address;\n        if (!address) {\n          throw new Error('Could not create address in _nodeToP2shSegwitAddress');\n        }\n        return address;\n      }\n    }, {\n      key: \"wasEverUsed\",\n      value: (\n      /**\n       * Probes zero address in external hierarchy for transactions, if there are any returns TRUE.\n       * Zero address is a pretty good indicator, since its a first one to fund the wallet.\n       * Q: How can you use the wallet and not fund it first?\n       * A: You can if it is a BIP47 wallet!\n       *\n       * @returns {Promise<boolean>}\n       */\n      function () {\n        var _wasEverUsed = (0, _asyncToGenerator2.default)(function* () {\n          var txs1 = yield BlueElectrum.getTransactionsByAddress(this._getExternalAddressByIndex(0));\n          if (txs1.length > 0) {\n            return true;\n          }\n          if (!this.allowBIP47()) {\n            return false;\n          }\n          try {\n            // watch-only wallet will throw an error here\n            this.getDerivationPath();\n          } catch (_) {\n            return false;\n          }\n          // only check BIP47 if derivation path is regular, otherwise too many wallets will be found\n          if (![\"m/84'/0'/0'\", \"m/44'/0'/0'\", \"m/49'/0'/0'\"].includes(this.getDerivationPath())) {\n            return false;\n          }\n          var bip47_instance = this.getBIP47FromSeed();\n          var address = bip47_instance.getNotificationAddress();\n          var txs2 = yield BlueElectrum.getTransactionsByAddress(address);\n          return txs2.length > 0;\n        });\n        function wasEverUsed() {\n          return _wasEverUsed.apply(this, arguments);\n        }\n        return wasEverUsed;\n      }()\n      /**\n       * @inheritDoc\n       */\n      )\n    }, {\n      key: \"getAllExternalAddresses\",\n      value: function getAllExternalAddresses() {\n        var ret = [];\n        for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n          ret.push(this._getExternalAddressByIndex(c));\n        }\n        if (this.allowBIP47() && this.isBIP47Enabled()) {\n          // returning BIP47 joint addresses with everyone who can pay us because they are kinda our 'external' aka 'receive' addresses\n\n          for (var pc of this._receive_payment_codes) {\n            for (var _c38 = 0; _c38 < this._getNextFreePaymentCodeIndexReceive(pc) + this.gap_limit / 4; _c38++) {\n              //  ^^^ not full gap limit to reduce computation (theoretically, there should not be gaps at all)\n              ret.push(this._getBIP47AddressReceive(pc, _c38));\n            }\n          }\n        }\n        return ret;\n      }\n\n      /**\n       * Check if address is a Change address. Needed for Coin control.\n       *\n       * @param address\n       * @returns {Boolean} Either address is a change or not\n       */\n    }, {\n      key: \"addressIsChange\",\n      value: function addressIsChange(address) {\n        for (var c = 0; c < this.next_free_change_address_index + 1; c++) {\n          if (address === this._getInternalAddressByIndex(c)) return true;\n        }\n        return false;\n      }\n    }, {\n      key: \"calculateHowManySignaturesWeHaveFromPsbt\",\n      value: function calculateHowManySignaturesWeHaveFromPsbt(psbt) {\n        var sigsHave = 0;\n        for (var inp of psbt.data.inputs) {\n          if (inp.finalScriptSig || inp.finalScriptWitness || inp.partialSig) sigsHave++;\n        }\n        return sigsHave;\n      }\n\n      /**\n       * Tries to signs passed psbt object (by reference). If there are enough signatures - tries to finalize psbt\n       * and returns Transaction (ready to extract hex)\n       *\n       * @param psbt {Psbt}\n       * @returns {{ tx: Transaction }}\n       */\n    }, {\n      key: \"cosignPsbt\",\n      value: function cosignPsbt(psbt) {\n        var seed = this._getSeed();\n        var hdRoot = bip32.fromSeed(seed);\n        for (var cc = 0; cc < psbt.inputCount; cc++) {\n          try {\n            psbt.signInputHD(cc, hdRoot);\n          } catch (e) {} // protects agains duplicate cosignings\n\n          if (!psbt.inputHasHDKey(cc, hdRoot)) {\n            for (var derivation of psbt.data.inputs[cc].bip32Derivation || []) {\n              var splt = derivation.path.split('/');\n              var internal = +splt[splt.length - 2];\n              var index = +splt[splt.length - 1];\n              var wif = this._getWIFByIndex(!!internal, index);\n              if (!wif) {\n                throw new Error('Internal error: cant get WIF by index during cosingPsbt');\n              }\n              var keyPair = ECPair.fromWIF(wif);\n              try {\n                psbt.signInput(cc, keyPair);\n              } catch (e) {} // protects agains duplicate cosignings or if this output can't be signed with current wallet\n            }\n          }\n        }\n        var tx = false;\n        if (this.calculateHowManySignaturesWeHaveFromPsbt(psbt) === psbt.inputCount) {\n          tx = psbt.finalizeAllInputs().extractTransaction();\n        }\n        return {\n          tx: tx\n        };\n      }\n\n      /**\n       * @param seed {Buffer} Buffer object with seed\n       * @returns {string} Hex string of fingerprint derived from mnemonics. Always has length of 8 chars and correct leading zeroes. All caps\n       */\n    }, {\n      key: \"getMasterFingerprintHex\",\n      value:\n      /**\n       * @returns {string} Hex string of fingerprint derived from wallet mnemonics. Always has length of 8 chars and correct leading zeroes\n       */\n      function getMasterFingerprintHex() {\n        var seed = this._getSeed();\n        return AbstractHDElectrumWallet.seedToFingerprint(seed);\n      }\n\n      /**\n       * Whether BIP47 is enabled. This is per-wallet setting that can be changed, NOT a feature-flag\n       * @returns boolean\n       */\n    }, {\n      key: \"isBIP47Enabled\",\n      value: function isBIP47Enabled() {\n        return this._enable_BIP47;\n      }\n    }, {\n      key: \"switchBIP47\",\n      value: function switchBIP47(value) {\n        this._enable_BIP47 = value;\n      }\n    }, {\n      key: \"getBIP47FromSeed\",\n      value: function getBIP47FromSeed() {\n        if (!this._bip47_instance || !this._bip47_instance.getNotificationAddress) {\n          this._bip47_instance = bip47.fromBip39Seed(this.secret, undefined, this.passphrase);\n        }\n        return this._bip47_instance;\n      }\n\n      /**\n       * find and return _existing_ notification transaction for the given payment code\n       * (i.e. if it exists - we notified in the past and dont need to notify again)\n       */\n    }, {\n      key: \"getBIP47NotificationTransaction\",\n      value: function getBIP47NotificationTransaction(receiverPaymentCode) {\n        var publicBip47 = (0, _bip.default)(_noble_ecc.default).fromPaymentCode(receiverPaymentCode);\n        var remoteNotificationAddress = publicBip47.getNotificationAddress();\n        for (var tx of this.getTransactions()) {\n          for (var output of tx.outputs) {\n            var _output$scriptPubKey;\n            if ((_output$scriptPubKey = output.scriptPubKey) != null && (_output$scriptPubKey = _output$scriptPubKey.addresses) != null && _output$scriptPubKey.includes(remoteNotificationAddress)) return tx;\n            // ^^^ if in the past we sent a tx to his notification address - most likely that was a proper notification\n            // transaction with OP_RETURN.\n            // but not gona verify it here, will just trust it\n          }\n        }\n      }\n\n      /**\n       * return BIP47 payment code of the counterparty of this transaction (someone who paid us, or someone we paid)\n       * or undefined if it was a non-BIP47 transaction\n       */\n    }, {\n      key: \"getBip47CounterpartyByTxid\",\n      value: function getBip47CounterpartyByTxid(txid) {\n        var foundTx = this.getTransactions().find(function (tx) {\n          return tx.txid === txid;\n        });\n        if (foundTx) {\n          return this.getBip47CounterpartyByTx(foundTx);\n        }\n        return undefined;\n      }\n\n      /**\n       * return BIP47 payment code of the counterparty of this transaction (someone who paid us, or someone we paid)\n       * or undefined if it was a non-BIP47 transaction\n       */\n    }, {\n      key: \"getBip47CounterpartyByTx\",\n      value: function getBip47CounterpartyByTx(tx) {\n        for (var pc of Object.keys(this._txs_by_payment_code_index)) {\n          // iterating all payment codes\n\n          for (var txs of Object.values(this._txs_by_payment_code_index[pc])) {\n            for (var tx2 of txs) {\n              if (tx2.txid === tx.txid) {\n                return pc; // found it!\n              }\n            }\n          }\n        }\n\n        // checking txs we sent to counterparties\n\n        for (var _pc8 of this._send_payment_codes) {\n          for (var out of tx.outputs) {\n            for (var address of (_out$scriptPubKey$add = (_out$scriptPubKey = out.scriptPubKey) == null ? void 0 : _out$scriptPubKey.addresses) != null ? _out$scriptPubKey$add : []) {\n              var _out$scriptPubKey$add, _out$scriptPubKey;\n              if (this._addresses_by_payment_code_send[_pc8] && Object.values(this._addresses_by_payment_code_send[_pc8]).includes(address)) {\n                // found it!\n                return _pc8;\n              }\n            }\n          }\n        }\n        return undefined; // found nothing\n      }\n    }, {\n      key: \"createBip47NotificationTransaction\",\n      value: function createBip47NotificationTransaction(utxos, receiverPaymentCode, feeRate, changeAddress) {\n        var _inputsTemp$;\n        var aliceBip47 = (0, _bip.default)(_noble_ecc.default).fromBip39Seed(this.getSecret(), undefined, this.getPassphrase());\n        var bobBip47 = (0, _bip.default)(_noble_ecc.default).fromPaymentCode(receiverPaymentCode);\n        (0, _assert.default)(utxos[0], 'No UTXO');\n        (0, _assert.default)(utxos[0].wif, 'No UTXO WIF');\n\n        // constructing targets: notification address, _dummy_ payload (+potential change might be added later)\n\n        var targetsTemp = [];\n        targetsTemp.push({\n          address: bobBip47.getNotificationAddress(),\n          value: 546 // minimum permissible utxo size\n        });\n        targetsTemp.push({\n          value: 0,\n          script: {\n            hex: Buffer.alloc(83).toString('hex') // no `address` here, its gonabe op_return. but we pass dummy data here with a correct size just to choose utxo\n          }\n        });\n\n        // creating temp transaction so that utxo can be selected:\n\n        var _this$createTransacti = this.createTransaction(utxos, targetsTemp, feeRate, changeAddress, AbstractHDElectrumWallet.defaultRBFSequence, false, 0),\n          inputsTemp = _this$createTransacti.inputs;\n        (0, _assert.default)(inputsTemp == null || (_inputsTemp$ = inputsTemp[0]) == null ? void 0 : _inputsTemp$.wif, 'inputsTemp?.[0]?.wif assert failed');\n\n        // utxo selected. lets create op_return payload using the correct (first!) utxo and correct targets with that payload\n\n        var keyPair = ECPair.fromWIF(inputsTemp[0].wif);\n        var outputNumber = Buffer.from('00000000', 'hex');\n        outputNumber.writeUInt32LE(inputsTemp[0].vout);\n        var blindedPaymentCode = aliceBip47.getBlindedPaymentCode(bobBip47, keyPair.privateKey,\n        // txid is reversed, as well as output number\n        Buffer.from(inputsTemp[0].txid, 'hex').reverse().toString('hex') + outputNumber.toString('hex'));\n\n        // targets:\n\n        var targets = [];\n        targets.push({\n          address: bobBip47.getNotificationAddress(),\n          value: 546 // minimum permissible utxo size\n        });\n        targets.push({\n          value: 0,\n          script: {\n            hex: '6a4c50' + blindedPaymentCode // no `address` here, only script (which is OP_RETURN + data payload)\n          }\n        });\n\n        // finally a transaction:\n\n        var _this$createTransacti2 = this.createTransaction(utxos, targets, feeRate, changeAddress, AbstractHDElectrumWallet.defaultRBFSequence, false, 0),\n          tx = _this$createTransacti2.tx,\n          outputs = _this$createTransacti2.outputs,\n          inputs = _this$createTransacti2.inputs,\n          fee = _this$createTransacti2.fee,\n          psbt = _this$createTransacti2.psbt;\n        (0, _assert.default)(inputs && inputs[0] && inputs[0].wif, 'inputs && inputs[0] && inputs[0].wif assert failed');\n        (0, _assert.default)(inputs[0].txid === inputsTemp[0].txid, 'inputs[0].txid === inputsTemp[0].txid assert failed'); // making sure that no funky business happened under the hood (its supposed to stay the same)\n\n        return {\n          tx: tx,\n          inputs: inputs,\n          outputs: outputs,\n          fee: fee,\n          psbt: psbt\n        };\n      }\n    }, {\n      key: \"getBIP47PaymentCode\",\n      value: function getBIP47PaymentCode() {\n        if (!this._payment_code) {\n          this._payment_code = this.getBIP47FromSeed().getSerializedPaymentCode();\n        }\n        return this._payment_code;\n      }\n    }, {\n      key: \"getBIP47NotificationAddress\",\n      value: function getBIP47NotificationAddress() {\n        var bip47Local = this.getBIP47FromSeed();\n        return bip47Local.getNotificationAddress();\n      }\n\n      /**\n       * check our notification address, and decypher all payment codes people notified us\n       * about (so they can pay us)\n       */\n    }, {\n      key: \"fetchBIP47SenderPaymentCodes\",\n      value: (function () {\n        var _fetchBIP47SenderPaymentCodes = (0, _asyncToGenerator2.default)(function* () {\n          var bip47_instance = this.getBIP47FromSeed();\n          var address = bip47_instance.getNotificationAddress();\n          var histories = yield BlueElectrum.multiGetHistoryByAddress([address]);\n          var txHashes = histories[address].map(function (_ref2) {\n            var tx_hash = _ref2.tx_hash;\n            return tx_hash;\n          });\n          var txHexs = yield BlueElectrum.multiGetTransactionByTxid(txHashes, false);\n          for (var txHex of Object.values(txHexs)) {\n            try {\n              var paymentCode = bip47_instance.getPaymentCodeFromRawNotificationTransaction(txHex);\n              if (this._receive_payment_codes.includes(paymentCode)) continue; // already have it\n\n              // final check if PC is even valid (could've been constructed by a buggy code, and our code would crash with that):\n              try {\n                bip47.fromPaymentCode(paymentCode);\n              } catch (_) {\n                continue;\n              }\n              this._receive_payment_codes.push(paymentCode);\n              this._next_free_payment_code_address_index_receive[paymentCode] = 0; // initialize\n              this._balances_by_payment_code_index[paymentCode] = {\n                c: 0,\n                u: 0\n              };\n            } catch (e) {\n              // do nothing\n            }\n          }\n        });\n        function fetchBIP47SenderPaymentCodes() {\n          return _fetchBIP47SenderPaymentCodes.apply(this, arguments);\n        }\n        return fetchBIP47SenderPaymentCodes;\n      }()\n      /**\n       * for counterparties we can pay, we sync shared addresses to find the one we havent used yet.\n       * this method could benefit from rewriting in batch requests, but not necessary - its only going to be called\n       * once in a while (when user decides to pay a given counterparty again)\n       */\n      )\n    }, {\n      key: \"syncBip47ReceiversAddresses\",\n      value: (function () {\n        var _syncBip47ReceiversAddresses = (0, _asyncToGenerator2.default)(function* (receiverPaymentCode) {\n          this._next_free_payment_code_address_index_send[receiverPaymentCode] = this._next_free_payment_code_address_index_send[receiverPaymentCode] || 0; // init\n\n          for (var c = this._next_free_payment_code_address_index_send[receiverPaymentCode]; c < 999999; c++) {\n            var _histories$address;\n            var address = this._getBIP47AddressSend(receiverPaymentCode, c);\n            this._addresses_by_payment_code_send[receiverPaymentCode] = this._addresses_by_payment_code_send[receiverPaymentCode] || {}; // init\n            this._addresses_by_payment_code_send[receiverPaymentCode][c] = address;\n            var histories = yield BlueElectrum.multiGetHistoryByAddress([address]);\n            if ((histories == null || (_histories$address = histories[address]) == null ? void 0 : _histories$address.length) > 0) {\n              // address is used;\n              continue;\n            }\n\n            // empty address, stop here, we found our latest index and filled array with shared addresses\n            this._next_free_payment_code_address_index_send[receiverPaymentCode] = c;\n            break;\n          }\n        });\n        function syncBip47ReceiversAddresses(_x6) {\n          return _syncBip47ReceiversAddresses.apply(this, arguments);\n        }\n        return syncBip47ReceiversAddresses;\n      }()\n      /**\n       * payment codes of people who can pay us\n       */\n      )\n    }, {\n      key: \"getBIP47SenderPaymentCodes\",\n      value: function getBIP47SenderPaymentCodes() {\n        return this._receive_payment_codes;\n      }\n\n      /**\n       * payment codes of people whom we can pay\n       */\n    }, {\n      key: \"getBIP47ReceiverPaymentCodes\",\n      value: function getBIP47ReceiverPaymentCodes() {\n        return this._send_payment_codes;\n      }\n\n      /**\n       * adding counterparty whom we can pay. trusting that notificaton transaction is in place already\n       */\n    }, {\n      key: \"addBIP47Receiver\",\n      value: function addBIP47Receiver(paymentCode) {\n        if (this._send_payment_codes.includes(paymentCode)) return; // duplicates\n        this._send_payment_codes.push(paymentCode);\n      }\n    }, {\n      key: \"_hdNodeToAddress\",\n      value: function _hdNodeToAddress(hdNode) {\n        return this._nodeToBech32SegwitAddress(hdNode);\n      }\n\n      /**\n       * returns joint addresses to receive coins with a given counterparty\n       */\n    }, {\n      key: \"_getBIP47AddressReceive\",\n      value: function _getBIP47AddressReceive(paymentCode, index) {\n        if (!this._addresses_by_payment_code_receive[paymentCode]) this._addresses_by_payment_code_receive[paymentCode] = [];\n        if (this._addresses_by_payment_code_receive[paymentCode][index]) {\n          return this._addresses_by_payment_code_receive[paymentCode][index];\n        }\n        var bip47_instance = this.getBIP47FromSeed();\n        var senderBIP47_instance = bip47.fromPaymentCode(paymentCode);\n        var remotePaymentNode = senderBIP47_instance.getPaymentCodeNode();\n        var hdNode = bip47_instance.getPaymentWallet(remotePaymentNode, index);\n        var address = this._hdNodeToAddress(hdNode);\n        this._address_to_wif_cache[address] = hdNode.toWIF();\n        this._addresses_by_payment_code_receive[paymentCode][index] = address;\n        return address;\n      }\n\n      /**\n       * returns joint addresses to send coins to\n       */\n    }, {\n      key: \"_getBIP47AddressSend\",\n      value: function _getBIP47AddressSend(paymentCode, index) {\n        if (!this._addresses_by_payment_code_send[paymentCode]) this._addresses_by_payment_code_send[paymentCode] = [];\n        if (this._addresses_by_payment_code_send[paymentCode][index]) {\n          // cache hit\n          return this._addresses_by_payment_code_send[paymentCode][index];\n        }\n        var hdNode = this.getBIP47FromSeed().getReceiveWallet((0, _bip.default)(_noble_ecc.default).fromPaymentCode(paymentCode).getPaymentCodeNode(), index);\n        var address = this._hdNodeToAddress(hdNode);\n        this._addresses_by_payment_code_send[paymentCode][index] = address;\n        return address;\n      }\n    }, {\n      key: \"_getNextFreePaymentCodeIndexReceive\",\n      value: function _getNextFreePaymentCodeIndexReceive(paymentCode) {\n        return this._next_free_payment_code_address_index_receive[paymentCode] || 0;\n      }\n\n      /**\n       * when sending funds to a payee, this method will return next unused joint address for him.\n       * this method assumes that we synced our payee via `syncBip47ReceiversAddresses()`\n       */\n    }, {\n      key: \"_getNextFreePaymentCodeAddressSend\",\n      value: function _getNextFreePaymentCodeAddressSend(paymentCode) {\n        this._next_free_payment_code_address_index_send[paymentCode] = this._next_free_payment_code_address_index_send[paymentCode] || 0;\n        return this._getBIP47AddressSend(paymentCode, this._next_free_payment_code_address_index_send[paymentCode]);\n      }\n    }, {\n      key: \"_getBalancesByPaymentCodeIndex\",\n      value: function _getBalancesByPaymentCodeIndex(paymentCode) {\n        return this._balances_by_payment_code_index[paymentCode] || {\n          c: 0,\n          u: 0\n        };\n      }\n    }, {\n      key: \"_getBIP47WIF\",\n      value: function _getBIP47WIF(paymentCode, index) {\n        var bip47_instance = this.getBIP47FromSeed();\n        var senderBIP47_instance = bip47.fromPaymentCode(paymentCode);\n        var remotePaymentNode = senderBIP47_instance.getPaymentCodeNode();\n        var hdNode = bip47_instance.getPaymentWallet(remotePaymentNode, index);\n        return hdNode.toWIF();\n      }\n    }, {\n      key: \"_getBIP47PubkeyByIndex\",\n      value: function _getBIP47PubkeyByIndex(paymentCode, index) {\n        var bip47_instance = this.getBIP47FromSeed();\n        var senderBIP47_instance = bip47.fromPaymentCode(paymentCode);\n        var remotePaymentNode = senderBIP47_instance.getPaymentCodeNode();\n        var hdNode = bip47_instance.getPaymentWallet(remotePaymentNode, index);\n        return hdNode.publicKey;\n      }\n    }], [{\n      key: \"_getTransactionsFromHistories\",\n      value: function _getTransactionsFromHistories(histories) {\n        var txs = [];\n        for (var history of Object.values(histories)) {\n          for (var tx of history) {\n            txs.push(tx);\n          }\n        }\n        return txs;\n      }\n    }, {\n      key: \"seedToFingerprint\",\n      value: function seedToFingerprint(seed) {\n        var root = bip32.fromSeed(seed);\n        var hex = root.fingerprint.toString('hex');\n        while (hex.length < 8) hex = '0' + hex; // leading zeroes\n        return hex.toUpperCase();\n      }\n\n      /**\n       * @param mnemonic {string}  Mnemonic phrase (12 or 24 words)\n       * @returns {string} Hex fingerprint\n       */\n    }, {\n      key: \"mnemonicToFingerprint\",\n      value: function mnemonicToFingerprint(mnemonic, passphrase) {\n        var seed = bip39.mnemonicToSeedSync(mnemonic, passphrase);\n        return AbstractHDElectrumWallet.seedToFingerprint(seed);\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[22], \"./abstract-hd-wallet\").AbstractHDWallet);\n  AbstractHDElectrumWallet.type = 'abstract';\n  AbstractHDElectrumWallet.typeReadable = 'abstract';\n  AbstractHDElectrumWallet.defaultRBFSequence = 2147483648;\n  // 1 << 31, minimum for replaceable transactions as per BIP68\n  AbstractHDElectrumWallet.finalRBFSequence = 4294967295;\n});","lineCount":1968,"map":[[15,2,2,0],[15,6,2,0,"_bip"],[15,10,2,0],[15,13,2,0,"_interopRequireDefault"],[15,35,2,0],[15,36,2,0,"_$$_REQUIRE"],[15,47,2,0],[15,48,2,0,"_dependencyMap"],[15,62,2,0],[16,2,3,0],[16,6,3,0,"_assert"],[16,13,3,0],[16,16,3,0,"_interopRequireDefault"],[16,38,3,0],[16,39,3,0,"_$$_REQUIRE"],[16,50,3,0],[16,51,3,0,"_dependencyMap"],[16,65,3,0],[17,2,4,0],[17,6,4,0,"_bignumber"],[17,16,4,0],[17,19,4,0,"_interopRequireDefault"],[17,41,4,0],[17,42,4,0,"_$$_REQUIRE"],[17,53,4,0],[17,54,4,0,"_dependencyMap"],[17,68,4,0],[18,2,5,0],[18,6,5,0,"_bip2"],[18,11,5,0],[18,14,5,0,"_interopRequireDefault"],[18,36,5,0],[18,37,5,0,"_$$_REQUIRE"],[18,48,5,0],[18,49,5,0,"_dependencyMap"],[18,63,5,0],[19,2,6,0],[19,6,6,0,"bip39"],[19,11,6,0],[19,14,6,0,"_interopRequireWildcard"],[19,37,6,0],[19,38,6,0,"_$$_REQUIRE"],[19,49,6,0],[19,50,6,0,"_dependencyMap"],[19,64,6,0],[20,2,7,0],[20,6,7,0,"bitcoin"],[20,13,7,0],[20,16,7,0,"_interopRequireWildcard"],[20,39,7,0],[20,40,7,0,"_$$_REQUIRE"],[20,51,7,0],[20,52,7,0,"_dependencyMap"],[20,66,7,0],[21,2,9,0],[21,6,9,0,"_bs58check"],[21,16,9,0],[21,19,9,0,"_interopRequireDefault"],[21,41,9,0],[21,42,9,0,"_$$_REQUIRE"],[21,53,9,0],[21,54,9,0,"_dependencyMap"],[21,68,9,0],[22,2,13,0],[22,6,13,0,"BlueElectrum"],[22,18,13,0],[22,21,13,0,"_interopRequireWildcard"],[22,44,13,0],[22,45,13,0,"_$$_REQUIRE"],[22,56,13,0],[22,57,13,0,"_dependencyMap"],[22,71,13,0],[23,2,15,0],[23,6,15,0,"_noble_ecc"],[23,16,15,0],[23,19,15,0,"_interopRequireDefault"],[23,41,15,0],[23,42,15,0,"_$$_REQUIRE"],[23,53,15,0],[23,54,15,0,"_dependencyMap"],[23,68,15,0],[24,2,15,47],[24,6,15,47,"_excluded"],[24,15,15,47],[25,4,15,47,"_excluded2"],[25,14,15,47],[26,4,15,47,"_excluded3"],[26,14,15,47],[27,4,15,47,"_excluded4"],[27,14,15,47],[28,4,15,47,"_excluded5"],[28,14,15,47],[29,2,15,47],[29,11,15,47,"_getRequireWildcardCache"],[29,36,15,47,"e"],[29,37,15,47],[29,66,15,47,"WeakMap"],[29,73,15,47],[29,92,15,47,"r"],[29,93,15,47],[29,100,15,47,"WeakMap"],[29,107,15,47],[29,111,15,47,"t"],[29,112,15,47],[29,119,15,47,"WeakMap"],[29,126,15,47],[29,138,15,47,"_getRequireWildcardCache"],[29,162,15,47],[29,174,15,47,"_getRequireWildcardCache"],[29,199,15,47,"e"],[29,200,15,47],[29,211,15,47,"e"],[29,212,15,47],[29,215,15,47,"t"],[29,216,15,47],[29,219,15,47,"r"],[29,220,15,47],[29,225,15,47,"e"],[29,226,15,47],[30,2,15,47],[30,11,15,47,"_interopRequireWildcard"],[30,35,15,47,"e"],[30,36,15,47],[30,38,15,47,"r"],[30,39,15,47],[30,48,15,47,"r"],[30,49,15,47],[30,53,15,47,"e"],[30,54,15,47],[30,58,15,47,"e"],[30,59,15,47],[30,60,15,47,"__esModule"],[30,70,15,47],[30,79,15,47,"e"],[30,80,15,47],[30,95,15,47,"e"],[30,96,15,47],[30,119,15,47,"e"],[30,120,15,47],[30,145,15,47,"e"],[30,146,15,47],[30,157,15,47,"default"],[30,164,15,47],[30,166,15,47,"e"],[30,167,15,47],[30,175,15,47,"t"],[30,176,15,47],[30,179,15,47,"_getRequireWildcardCache"],[30,203,15,47],[30,204,15,47,"r"],[30,205,15,47],[30,212,15,47,"t"],[30,213,15,47],[30,217,15,47,"t"],[30,218,15,47],[30,219,15,47,"has"],[30,222,15,47],[30,223,15,47,"e"],[30,224,15,47],[30,234,15,47,"t"],[30,235,15,47],[30,236,15,47,"get"],[30,239,15,47],[30,240,15,47,"e"],[30,241,15,47],[30,248,15,47,"n"],[30,249,15,47],[30,254,15,47,"__proto__"],[30,263,15,47],[30,273,15,47,"a"],[30,274,15,47],[30,277,15,47,"Object"],[30,283,15,47],[30,284,15,47,"defineProperty"],[30,298,15,47],[30,302,15,47,"Object"],[30,308,15,47],[30,309,15,47,"getOwnPropertyDescriptor"],[30,333,15,47],[30,344,15,47,"u"],[30,345,15,47],[30,349,15,47,"e"],[30,350,15,47],[30,370,15,47,"u"],[30,371,15,47],[30,378,15,47,"hasOwnProperty"],[30,392,15,47],[30,393,15,47,"call"],[30,397,15,47],[30,398,15,47,"e"],[30,399,15,47],[30,401,15,47,"u"],[30,402,15,47],[30,411,15,47,"i"],[30,412,15,47],[30,415,15,47,"a"],[30,416,15,47],[30,419,15,47,"Object"],[30,425,15,47],[30,426,15,47,"getOwnPropertyDescriptor"],[30,450,15,47],[30,451,15,47,"e"],[30,452,15,47],[30,454,15,47,"u"],[30,455,15,47],[30,465,15,47,"i"],[30,466,15,47],[30,471,15,47,"i"],[30,472,15,47],[30,473,15,47,"get"],[30,476,15,47],[30,480,15,47,"i"],[30,481,15,47],[30,482,15,47,"set"],[30,485,15,47],[30,489,15,47,"Object"],[30,495,15,47],[30,496,15,47,"defineProperty"],[30,510,15,47],[30,511,15,47,"n"],[30,512,15,47],[30,514,15,47,"u"],[30,515,15,47],[30,517,15,47,"i"],[30,518,15,47],[30,522,15,47,"n"],[30,523,15,47],[30,524,15,47,"u"],[30,525,15,47],[30,529,15,47,"e"],[30,530,15,47],[30,531,15,47,"u"],[30,532,15,47],[30,544,15,47,"n"],[30,545,15,47],[30,546,15,47,"default"],[30,553,15,47],[30,556,15,47,"e"],[30,557,15,47],[30,559,15,47,"t"],[30,560,15,47],[30,564,15,47,"t"],[30,565,15,47],[30,566,15,47,"set"],[30,569,15,47],[30,570,15,47,"e"],[30,571,15,47],[30,573,15,47,"n"],[30,574,15,47],[30,577,15,47,"n"],[30,578,15,47],[31,2,15,47],[31,11,15,47,"_callSuper"],[31,22,15,47,"t"],[31,23,15,47],[31,25,15,47,"o"],[31,26,15,47],[31,28,15,47,"e"],[31,29,15,47],[31,40,15,47,"o"],[31,41,15,47],[31,48,15,47,"_getPrototypeOf2"],[31,64,15,47],[31,65,15,47,"default"],[31,72,15,47],[31,74,15,47,"o"],[31,75,15,47],[31,82,15,47,"_possibleConstructorReturn2"],[31,109,15,47],[31,110,15,47,"default"],[31,117,15,47],[31,119,15,47,"t"],[31,120,15,47],[31,122,15,47,"_isNativeReflectConstruct"],[31,147,15,47],[31,152,15,47,"Reflect"],[31,159,15,47],[31,160,15,47,"construct"],[31,169,15,47],[31,170,15,47,"o"],[31,171,15,47],[31,173,15,47,"e"],[31,174,15,47],[31,186,15,47,"_getPrototypeOf2"],[31,202,15,47],[31,203,15,47,"default"],[31,210,15,47],[31,212,15,47,"t"],[31,213,15,47],[31,215,15,47,"constructor"],[31,226,15,47],[31,230,15,47,"o"],[31,231,15,47],[31,232,15,47,"apply"],[31,237,15,47],[31,238,15,47,"t"],[31,239,15,47],[31,241,15,47,"e"],[31,242,15,47],[32,2,15,47],[32,11,15,47,"_isNativeReflectConstruct"],[32,37,15,47],[32,51,15,47,"t"],[32,52,15,47],[32,56,15,47,"Boolean"],[32,63,15,47],[32,64,15,47,"prototype"],[32,73,15,47],[32,74,15,47,"valueOf"],[32,81,15,47],[32,82,15,47,"call"],[32,86,15,47],[32,87,15,47,"Reflect"],[32,94,15,47],[32,95,15,47,"construct"],[32,104,15,47],[32,105,15,47,"Boolean"],[32,112,15,47],[32,145,15,47,"t"],[32,146,15,47],[32,159,15,47,"_isNativeReflectConstruct"],[32,184,15,47],[32,196,15,47,"_isNativeReflectConstruct"],[32,222,15,47],[32,235,15,47,"t"],[32,236,15,47],[32,246,1,0],[33,2,22,0],[33,6,22,6,"ECPair"],[33,12,22,12],[33,15,22,15],[33,19,22,15,"ECPairFactory"],[33,50,22,15],[33,51,22,15,"ECPairFactory"],[33,74,22,28],[33,76,22,29,"ecc"],[33,94,22,32],[33,95,22,33],[34,2,23,0],[34,6,23,6,"bip32"],[34,11,23,11],[34,14,23,14],[34,18,23,14,"BIP32Factory"],[34,31,23,26],[34,33,23,27,"ecc"],[34,51,23,30],[34,52,23,31],[35,2,24,0],[35,6,24,6,"bip47"],[35,11,24,11],[35,14,24,14],[35,18,24,14,"BIP47Factory"],[35,30,24,26],[35,32,24,27,"ecc"],[35,50,24,30],[35,51,24,31],[36,2,31,0],[37,0,32,0],[38,0,33,0],[39,2,31,0],[39,6,34,13,"AbstractHDElectrumWallet"],[39,30,34,37],[39,33,34,37,"exports"],[39,40,34,37],[39,41,34,37,"AbstractHDElectrumWallet"],[39,65,34,37],[39,91,34,37,"_AbstractHDWallet"],[39,108,34,37],[40,4,47,2],[42,4,49,2],[44,4,54,2],[46,4,58,2],[47,0,59,0],[48,0,60,0],[50,4,63,2],[51,0,64,0],[52,0,65,0],[54,4,68,2],[55,0,69,0],[56,0,70,0],[58,4,73,2],[59,0,74,0],[60,0,75,0],[62,4,78,2],[63,0,79,0],[64,0,80,0],[66,4,83,2],[67,0,84,0],[68,0,85,0],[70,4,88,2],[71,0,89,0],[72,0,90,0],[73,0,91,0],[74,0,92,0],[76,4,98,2],[76,13,98,2,"AbstractHDElectrumWallet"],[76,38,98,2],[76,40,98,16],[77,6,98,16],[77,10,98,16,"_this"],[77,15,98,16],[78,6,98,16],[78,10,98,16,"_classCallCheck2"],[78,26,98,16],[78,27,98,16,"default"],[78,34,98,16],[78,42,98,16,"AbstractHDElectrumWallet"],[78,66,98,16],[79,6,99,4,"_this"],[79,11,99,4],[79,14,99,4,"_callSuper"],[79,24,99,4],[79,31,99,4,"AbstractHDElectrumWallet"],[79,55,99,4],[80,6,38,40],[81,6,39,2],[82,6,39,2,"_this"],[82,11,39,2],[82,12,40,18,"type"],[82,16,40,22],[82,19,40,25,"AbstractHDElectrumWallet"],[82,43,40,49],[82,44,40,50,"type"],[82,48,40,54],[83,6,41,2],[84,6,41,2,"_this"],[84,11,41,2],[84,12,42,18,"typeReadable"],[84,24,42,30],[84,27,42,33,"AbstractHDElectrumWallet"],[84,51,42,57],[84,52,42,58,"typeReadable"],[84,64,42,70],[85,6,100,4,"_this"],[85,11,100,4],[85,12,100,9,"_balances_by_external_index"],[85,39,100,36],[85,42,100,39],[85,43,100,40],[85,44,100,41],[85,45,100,42],[85,46,100,43],[86,6,101,4,"_this"],[86,11,101,4],[86,12,101,9,"_balances_by_internal_index"],[86,39,101,36],[86,42,101,39],[86,43,101,40],[86,44,101,41],[87,6,103,4,"_this"],[87,11,103,4],[87,12,103,9,"_txs_by_external_index"],[87,34,103,31],[87,37,103,34],[87,38,103,35],[87,39,103,36],[88,6,104,4,"_this"],[88,11,104,4],[88,12,104,9,"_txs_by_internal_index"],[88,34,104,31],[88,37,104,34],[88,38,104,35],[88,39,104,36],[89,6,106,4,"_this"],[89,11,106,4],[89,12,106,9,"_utxo"],[89,17,106,14],[89,20,106,17],[89,22,106,19],[91,6,108,4],[92,6,109,4,"_this"],[92,11,109,4],[92,12,109,9,"_enable_BIP47"],[92,25,109,22],[92,28,109,25],[92,33,109,30],[93,6,110,4,"_this"],[93,11,110,4],[93,12,110,9,"_payment_code"],[93,25,110,22],[93,28,110,25],[93,30,110,27],[94,6,111,4,"_this"],[94,11,111,4],[94,12,111,9,"_receive_payment_codes"],[94,34,111,31],[94,37,111,34],[94,39,111,36],[95,6,112,4,"_this"],[95,11,112,4],[95,12,112,9,"_send_payment_codes"],[95,31,112,28],[95,34,112,31],[95,36,112,33],[96,6,113,4,"_this"],[96,11,113,4],[96,12,113,9,"_next_free_payment_code_address_index_receive"],[96,57,113,54],[96,60,113,57],[96,61,113,58],[96,62,113,59],[97,6,114,4,"_this"],[97,11,114,4],[97,12,114,9,"_txs_by_payment_code_index"],[97,38,114,35],[97,41,114,38],[97,42,114,39],[97,43,114,40],[98,6,115,4,"_this"],[98,11,115,4],[98,12,115,9,"_addresses_by_payment_code_send"],[98,43,115,40],[98,46,115,43],[98,47,115,44],[98,48,115,45],[99,6,116,4,"_this"],[99,11,116,4],[99,12,116,9,"_next_free_payment_code_address_index_send"],[99,54,116,51],[99,57,116,54],[99,58,116,55],[99,59,116,56],[100,6,117,4,"_this"],[100,11,117,4],[100,12,117,9,"_balances_by_payment_code_index"],[100,43,117,40],[100,46,117,43],[100,47,117,44],[100,48,117,45],[101,6,118,4,"_this"],[101,11,118,4],[101,12,118,9,"_addresses_by_payment_code_receive"],[101,46,118,43],[101,49,118,46],[101,50,118,47],[101,51,118,48],[102,6,118,49],[102,13,118,49,"_this"],[102,18,118,49],[103,4,119,2],[105,4,121,2],[106,0,122,0],[107,0,123,0],[108,4,121,2],[108,8,121,2,"_inherits2"],[108,18,121,2],[108,19,121,2,"default"],[108,26,121,2],[108,28,121,2,"AbstractHDElectrumWallet"],[108,52,121,2],[108,54,121,2,"_AbstractHDWallet"],[108,71,121,2],[109,4,121,2],[109,15,121,2,"_createClass2"],[109,28,121,2],[109,29,121,2,"default"],[109,36,121,2],[109,38,121,2,"AbstractHDElectrumWallet"],[109,62,121,2],[110,6,121,2,"key"],[110,9,121,2],[111,6,121,2,"value"],[111,11,121,2],[111,13,124,2],[111,22,124,2,"getBalance"],[111,32,124,12,"getBalance"],[111,33,124,12],[111,35,124,15],[112,8,125,4],[112,12,125,8,"ret"],[112,15,125,11],[112,18,125,14],[112,19,125,15],[113,8,126,4],[113,13,126,9],[113,17,126,15,"bal"],[113,20,126,18],[113,24,126,22,"Object"],[113,30,126,28],[113,31,126,29,"values"],[113,37,126,35],[113,38,126,36],[113,42,126,40],[113,43,126,41,"_balances_by_external_index"],[113,70,126,68],[113,71,126,69],[113,73,126,71],[114,10,127,6,"ret"],[114,13,127,9],[114,17,127,13,"bal"],[114,20,127,16],[114,21,127,17,"c"],[114,22,127,18],[115,8,128,4],[116,8,129,4],[116,13,129,9],[116,17,129,15,"bal"],[116,21,129,18],[116,25,129,22,"Object"],[116,31,129,28],[116,32,129,29,"values"],[116,38,129,35],[116,39,129,36],[116,43,129,40],[116,44,129,41,"_balances_by_internal_index"],[116,71,129,68],[116,72,129,69],[116,74,129,71],[117,10,130,6,"ret"],[117,13,130,9],[117,17,130,13,"bal"],[117,21,130,16],[117,22,130,17,"c"],[117,23,130,18],[118,8,131,4],[119,8,132,4],[119,13,132,9],[119,17,132,15,"pc"],[119,19,132,17],[119,23,132,21],[119,27,132,25],[119,28,132,26,"_receive_payment_codes"],[119,50,132,48],[119,52,132,50],[120,10,133,6,"ret"],[120,13,133,9],[120,17,133,13],[120,21,133,17],[120,22,133,18,"_getBalancesByPaymentCodeIndex"],[120,52,133,48],[120,53,133,49,"pc"],[120,55,133,51],[120,56,133,52],[120,57,133,53,"c"],[120,58,133,54],[121,8,134,4],[122,8,135,4],[122,15,135,11,"ret"],[122,18,135,14],[122,22,135,18],[122,26,135,22],[122,27,135,23,"getUnconfirmedBalance"],[122,48,135,44],[122,49,135,45],[122,50,135,46],[122,53,135,49],[122,54,135,50],[122,57,135,53],[122,61,135,57],[122,62,135,58,"getUnconfirmedBalance"],[122,83,135,79],[122,84,135,80],[122,85,135,81],[122,88,135,84],[122,89,135,85],[122,90,135,86],[123,6,136,2],[125,6,138,2],[126,0,139,0],[127,0,140,0],[128,0,141,0],[129,4,138,2],[130,6,138,2,"key"],[130,9,138,2],[131,6,138,2,"value"],[131,11,138,2],[131,13,142,2],[131,22,142,2,"getUnconfirmedBalance"],[131,43,142,23,"getUnconfirmedBalance"],[131,44,142,23],[131,46,142,26],[132,8,143,4],[132,12,143,8,"ret"],[132,15,143,11],[132,18,143,14],[132,19,143,15],[133,8,144,4],[133,13,144,9],[133,17,144,15,"bal"],[133,20,144,18],[133,24,144,22,"Object"],[133,30,144,28],[133,31,144,29,"values"],[133,37,144,35],[133,38,144,36],[133,42,144,40],[133,43,144,41,"_balances_by_external_index"],[133,70,144,68],[133,71,144,69],[133,73,144,71],[134,10,145,6,"ret"],[134,13,145,9],[134,17,145,13,"bal"],[134,20,145,16],[134,21,145,17,"u"],[134,22,145,18],[135,8,146,4],[136,8,147,4],[136,13,147,9],[136,17,147,15,"bal"],[136,22,147,18],[136,26,147,22,"Object"],[136,32,147,28],[136,33,147,29,"values"],[136,39,147,35],[136,40,147,36],[136,44,147,40],[136,45,147,41,"_balances_by_internal_index"],[136,72,147,68],[136,73,147,69],[136,75,147,71],[137,10,148,6,"ret"],[137,13,148,9],[137,17,148,13,"bal"],[137,22,148,16],[137,23,148,17,"u"],[137,24,148,18],[138,8,149,4],[139,8,150,4],[139,13,150,9],[139,17,150,15,"pc"],[139,19,150,17],[139,23,150,21],[139,27,150,25],[139,28,150,26,"_receive_payment_codes"],[139,50,150,48],[139,52,150,50],[140,10,151,6,"ret"],[140,13,151,9],[140,17,151,13],[140,21,151,17],[140,22,151,18,"_getBalancesByPaymentCodeIndex"],[140,52,151,48],[140,53,151,49,"pc"],[140,55,151,51],[140,56,151,52],[140,57,151,53,"u"],[140,58,151,54],[141,8,152,4],[142,8,153,4],[142,15,153,11,"ret"],[142,18,153,14],[143,6,154,2],[144,4,154,3],[145,6,154,3,"key"],[145,9,154,3],[146,6,154,3,"value"],[146,11,154,3],[147,8,154,3],[147,12,154,3,"_generate"],[147,21,154,3],[147,28,154,3,"_asyncToGenerator2"],[147,46,154,3],[147,47,154,3,"default"],[147,54,154,3],[147,56,156,2],[147,69,156,19],[148,10,157,4],[148,14,157,10,"buf"],[148,17,157,13],[148,26,157,22],[148,30,157,22,"randomBytes"],[148,61,157,22],[148,62,157,22,"randomBytes"],[148,83,157,33],[148,85,157,34],[148,87,157,36],[148,88,157,37],[149,10,158,4],[149,14,158,8],[149,15,158,9,"secret"],[149,21,158,15],[149,24,158,18,"bip39"],[149,29,158,23],[149,30,158,24,"entropyToMnemonic"],[149,47,158,41],[149,48,158,42,"buf"],[149,51,158,45],[149,52,158,46,"toString"],[149,60,158,54],[149,61,158,55],[149,66,158,60],[149,67,158,61],[149,68,158,62],[150,8,159,2],[150,9,159,3],[151,8,159,3],[151,17,156,8,"generate"],[151,25,156,16,"generate"],[151,26,156,16],[152,10,156,16],[152,17,156,16,"_generate"],[152,26,156,16],[152,27,156,16,"apply"],[152,32,156,16],[152,39,156,16,"arguments"],[152,48,156,16],[153,8,156,16],[154,8,156,16],[154,15,156,8,"generate"],[154,23,156,16],[155,6,156,16],[156,4,156,16],[157,6,156,16,"key"],[157,9,156,16],[158,6,156,16,"value"],[158,11,156,16],[159,8,156,16],[159,12,156,16,"_generateFromEntropy"],[159,32,156,16],[159,39,156,16,"_asyncToGenerator2"],[159,57,156,16],[159,58,156,16,"default"],[159,65,156,16],[159,67,161,2],[159,78,161,28,"user"],[159,82,161,40],[159,84,161,42],[160,10,162,4],[160,14,162,8,"user"],[160,18,162,12],[160,19,162,13,"length"],[160,25,162,19],[160,30,162,24],[160,32,162,26],[160,36,162,30,"user"],[160,40,162,34],[160,41,162,35,"length"],[160,47,162,41],[160,52,162,46],[160,54,162,48],[160,56,162,50],[161,12,163,6],[161,18,163,12],[161,22,163,16,"Error"],[161,27,163,21],[161,28,163,22],[161,67,163,61],[161,68,163,62],[162,10,164,4],[163,10,165,4],[163,14,165,8],[163,15,165,9,"secret"],[163,21,165,15],[163,24,165,18,"bip39"],[163,29,165,23],[163,30,165,24,"entropyToMnemonic"],[163,47,165,41],[163,48,165,42,"user"],[163,52,165,46],[163,53,165,47,"toString"],[163,61,165,55],[163,62,165,56],[163,67,165,61],[163,68,165,62],[163,69,165,63],[164,8,166,2],[164,9,166,3],[165,8,166,3],[165,17,161,8,"generateFromEntropy"],[165,36,161,27,"generateFromEntropy"],[165,37,161,27,"_x"],[165,39,161,27],[166,10,161,27],[166,17,161,27,"_generateFromEntropy"],[166,37,161,27],[166,38,161,27,"apply"],[166,43,161,27],[166,50,161,27,"arguments"],[166,59,161,27],[167,8,161,27],[168,8,161,27],[168,15,161,8,"generateFromEntropy"],[168,34,161,27],[169,6,161,27],[170,4,161,27],[171,6,161,27,"key"],[171,9,161,27],[172,6,161,27,"value"],[172,11,161,27],[172,13,168,2],[172,22,168,2,"_getExternalWIFByIndex"],[172,44,168,24,"_getExternalWIFByIndex"],[172,45,168,25,"index"],[172,50,168,38],[172,52,168,56],[173,8,169,4],[173,15,169,11],[173,19,169,15],[173,20,169,16,"_getWIFByIndex"],[173,34,169,30],[173,35,169,31],[173,40,169,36],[173,42,169,38,"index"],[173,47,169,43],[173,48,169,44],[174,6,170,2],[175,4,170,3],[176,6,170,3,"key"],[176,9,170,3],[177,6,170,3,"value"],[177,11,170,3],[177,13,172,2],[177,22,172,2,"_getInternalWIFByIndex"],[177,44,172,24,"_getInternalWIFByIndex"],[177,45,172,25,"index"],[177,50,172,38],[177,52,172,56],[178,8,173,4],[178,15,173,11],[178,19,173,15],[178,20,173,16,"_getWIFByIndex"],[178,34,173,30],[178,35,173,31],[178,39,173,35],[178,41,173,37,"index"],[178,46,173,42],[178,47,173,43],[179,6,174,2],[181,6,176,2],[182,0,177,0],[183,0,178,0],[184,0,179,0],[185,0,180,0],[186,0,181,0],[187,0,182,0],[188,4,176,2],[189,6,176,2,"key"],[189,9,176,2],[190,6,176,2,"value"],[190,11,176,2],[190,13,183,2],[190,22,183,2,"_getWIFByIndex"],[190,36,183,16,"_getWIFByIndex"],[190,37,183,17,"internal"],[190,45,183,34],[190,47,183,36,"index"],[190,52,183,49],[190,54,183,67],[191,8,184,4],[191,12,184,8],[191,13,184,9],[191,17,184,13],[191,18,184,14,"secret"],[191,24,184,20],[191,26,184,22],[191,33,184,29],[191,38,184,34],[192,8,185,4],[192,12,185,10,"seed"],[192,16,185,14],[192,19,185,17],[192,23,185,21],[192,24,185,22,"_getSeed"],[192,32,185,30],[192,33,185,31],[192,34,185,32],[193,8,186,4],[193,12,186,10,"root"],[193,16,186,14],[193,19,186,17,"bip32"],[193,24,186,22],[193,25,186,23,"fromSeed"],[193,33,186,31],[193,34,186,32,"seed"],[193,38,186,36],[193,39,186,37],[194,8,187,4],[194,12,187,10,"path"],[194,16,187,14],[194,19,187,17],[194,22,187,20],[194,26,187,24],[194,27,187,25,"getDerivationPath"],[194,44,187,42],[194,45,187,43],[194,46,187,44],[194,50,187,48,"internal"],[194,58,187,56],[194,61,187,59],[194,62,187,60],[194,65,187,63],[194,66,187,64],[194,70,187,68,"index"],[194,75,187,73],[194,77,187,75],[195,8,188,4],[195,12,188,10,"child"],[195,17,188,15],[195,20,188,18,"root"],[195,24,188,22],[195,25,188,23,"derivePath"],[195,35,188,33],[195,36,188,34,"path"],[195,40,188,38],[195,41,188,39],[196,8,190,4],[196,15,190,11,"child"],[196,20,190,16],[196,21,190,17,"toWIF"],[196,26,190,22],[196,27,190,23],[196,28,190,24],[197,6,191,2],[198,4,191,3],[199,6,191,3,"key"],[199,9,191,3],[200,6,191,3,"value"],[200,11,191,3],[200,13,193,2],[200,22,193,2,"_getNodeAddressByIndex"],[200,44,193,24,"_getNodeAddressByIndex"],[200,45,193,25,"node"],[200,49,193,37],[200,51,193,39,"index"],[200,56,193,52],[200,58,193,62],[201,8,194,4,"index"],[201,13,194,9],[201,16,194,12,"index"],[201,21,194,17],[201,24,194,20],[201,25,194,21],[201,26,194,22],[201,27,194,23],[202,8,195,4],[202,12,195,8,"node"],[202,16,195,12],[202,21,195,17],[202,22,195,18],[202,24,195,20],[203,10,196,6],[203,14,196,10],[203,18,196,14],[203,19,196,15,"external_addresses_cache"],[203,43,196,39],[203,44,196,40,"index"],[203,49,196,45],[203,50,196,46],[203,52,196,48],[203,59,196,55],[203,63,196,59],[203,64,196,60,"external_addresses_cache"],[203,88,196,84],[203,89,196,85,"index"],[203,94,196,90],[203,95,196,91],[203,96,196,92],[203,97,196,93],[204,8,197,4],[205,8,199,4],[205,12,199,8,"node"],[205,16,199,12],[205,21,199,17],[205,22,199,18],[205,24,199,20],[206,10,200,6],[206,14,200,10],[206,18,200,14],[206,19,200,15,"internal_addresses_cache"],[206,43,200,39],[206,44,200,40,"index"],[206,49,200,45],[206,50,200,46],[206,52,200,48],[206,59,200,55],[206,63,200,59],[206,64,200,60,"internal_addresses_cache"],[206,88,200,84],[206,89,200,85,"index"],[206,94,200,90],[206,95,200,91],[206,96,200,92],[206,97,200,93],[207,8,201,4],[208,8,203,4],[208,12,203,8,"node"],[208,16,203,12],[208,21,203,17],[208,22,203,18],[208,26,203,22],[208,27,203,23],[208,31,203,27],[208,32,203,28,"_node0"],[208,38,203,34],[208,40,203,36],[209,10,204,6],[209,14,204,12,"xpub"],[209,18,204,16],[209,21,204,19],[209,25,204,23],[209,26,204,24,"_zpubToXpub"],[209,37,204,35],[209,38,204,36],[209,42,204,40],[209,43,204,41,"getXpub"],[209,50,204,48],[209,51,204,49],[209,52,204,50],[209,53,204,51],[210,10,205,6],[210,14,205,12,"hdNode"],[210,20,205,18],[210,23,205,21,"bip32"],[210,28,205,26],[210,29,205,27,"fromBase58"],[210,39,205,37],[210,40,205,38,"xpub"],[210,44,205,42],[210,45,205,43],[211,10,206,6],[211,14,206,10],[211,15,206,11,"_node0"],[211,21,206,17],[211,24,206,20,"hdNode"],[211,30,206,26],[211,31,206,27,"derive"],[211,37,206,33],[211,38,206,34,"node"],[211,42,206,38],[211,43,206,39],[212,8,207,4],[213,8,209,4],[213,12,209,8,"node"],[213,16,209,12],[213,21,209,17],[213,22,209,18],[213,26,209,22],[213,27,209,23],[213,31,209,27],[213,32,209,28,"_node1"],[213,38,209,34],[213,40,209,36],[214,10,210,6],[214,14,210,12,"xpub"],[214,19,210,16],[214,22,210,19],[214,26,210,23],[214,27,210,24,"_zpubToXpub"],[214,38,210,35],[214,39,210,36],[214,43,210,40],[214,44,210,41,"getXpub"],[214,51,210,48],[214,52,210,49],[214,53,210,50],[214,54,210,51],[215,10,211,6],[215,14,211,12,"hdNode"],[215,21,211,18],[215,24,211,21,"bip32"],[215,29,211,26],[215,30,211,27,"fromBase58"],[215,40,211,37],[215,41,211,38,"xpub"],[215,46,211,42],[215,47,211,43],[216,10,212,6],[216,14,212,10],[216,15,212,11,"_node1"],[216,21,212,17],[216,24,212,20,"hdNode"],[216,31,212,26],[216,32,212,27,"derive"],[216,38,212,33],[216,39,212,34,"node"],[216,43,212,38],[216,44,212,39],[217,8,213,4],[218,8,215,4],[218,12,215,8,"address"],[218,19,215,23],[219,8,216,4],[219,12,216,8,"node"],[219,16,216,12],[219,21,216,17],[219,22,216,18],[219,24,216,20],[220,10,217,6],[221,10,218,6,"address"],[221,17,218,13],[221,20,218,16],[221,24,218,20],[221,25,218,21,"_hdNodeToAddress"],[221,41,218,37],[221,42,218,38],[221,46,218,42],[221,47,218,43,"_node0"],[221,53,218,49],[221,54,218,50,"derive"],[221,60,218,56],[221,61,218,57,"index"],[221,66,218,62],[221,67,218,63],[221,68,218,64],[222,8,219,4],[222,9,219,5],[222,15,219,11],[223,10,220,6],[224,10,221,6],[225,10,222,6,"address"],[225,17,222,13],[225,20,222,16],[225,24,222,20],[225,25,222,21,"_hdNodeToAddress"],[225,41,222,37],[225,42,222,38],[225,46,222,42],[225,47,222,43,"_node1"],[225,53,222,49],[225,54,222,50,"derive"],[225,60,222,56],[225,61,222,57,"index"],[225,66,222,62],[225,67,222,63],[225,68,222,64],[226,8,223,4],[227,8,225,4],[227,12,225,8,"node"],[227,16,225,12],[227,21,225,17],[227,22,225,18],[227,24,225,20],[228,10,226,6],[228,17,226,14],[228,21,226,18],[228,22,226,19,"external_addresses_cache"],[228,46,226,43],[228,47,226,44,"index"],[228,52,226,49],[228,53,226,50],[228,56,226,53,"address"],[228,63,226,60],[229,8,227,4],[229,9,227,5],[229,15,227,11],[230,10,228,6],[231,10,229,6],[231,17,229,14],[231,21,229,18],[231,22,229,19,"internal_addresses_cache"],[231,46,229,43],[231,47,229,44,"index"],[231,52,229,49],[231,53,229,50],[231,56,229,53,"address"],[231,63,229,60],[232,8,230,4],[233,6,231,2],[234,4,231,3],[235,6,231,3,"key"],[235,9,231,3],[236,6,231,3,"value"],[236,11,231,3],[236,13,233,2],[236,22,233,2,"_getNodePubkeyByIndex"],[236,43,233,23,"_getNodePubkeyByIndex"],[236,44,233,24,"node"],[236,48,233,36],[236,50,233,38,"index"],[236,55,233,51],[236,57,233,53],[237,8,234,4,"index"],[237,13,234,9],[237,16,234,12,"index"],[237,21,234,17],[237,24,234,20],[237,25,234,21],[237,26,234,22],[237,27,234,23],[239,8,236,4],[239,12,236,8,"node"],[239,16,236,12],[239,21,236,17],[239,22,236,18],[239,26,236,22],[239,27,236,23],[239,31,236,27],[239,32,236,28,"_node0"],[239,38,236,34],[239,40,236,36],[240,10,237,6],[240,14,237,12,"xpub"],[240,18,237,16],[240,21,237,19],[240,25,237,23],[240,26,237,24,"_zpubToXpub"],[240,37,237,35],[240,38,237,36],[240,42,237,40],[240,43,237,41,"getXpub"],[240,50,237,48],[240,51,237,49],[240,52,237,50],[240,53,237,51],[241,10,238,6],[241,14,238,12,"hdNode"],[241,20,238,18],[241,23,238,21,"bip32"],[241,28,238,26],[241,29,238,27,"fromBase58"],[241,39,238,37],[241,40,238,38,"xpub"],[241,44,238,42],[241,45,238,43],[242,10,239,6],[242,14,239,10],[242,15,239,11,"_node0"],[242,21,239,17],[242,24,239,20,"hdNode"],[242,30,239,26],[242,31,239,27,"derive"],[242,37,239,33],[242,38,239,34,"node"],[242,42,239,38],[242,43,239,39],[243,8,240,4],[244,8,242,4],[244,12,242,8,"node"],[244,16,242,12],[244,21,242,17],[244,22,242,18],[244,26,242,22],[244,27,242,23],[244,31,242,27],[244,32,242,28,"_node1"],[244,38,242,34],[244,40,242,36],[245,10,243,6],[245,14,243,12,"xpub"],[245,20,243,16],[245,23,243,19],[245,27,243,23],[245,28,243,24,"_zpubToXpub"],[245,39,243,35],[245,40,243,36],[245,44,243,40],[245,45,243,41,"getXpub"],[245,52,243,48],[245,53,243,49],[245,54,243,50],[245,55,243,51],[246,10,244,6],[246,14,244,12,"hdNode"],[246,22,244,18],[246,25,244,21,"bip32"],[246,30,244,26],[246,31,244,27,"fromBase58"],[246,41,244,37],[246,42,244,38,"xpub"],[246,48,244,42],[246,49,244,43],[247,10,245,6],[247,14,245,10],[247,15,245,11,"_node1"],[247,21,245,17],[247,24,245,20,"hdNode"],[247,32,245,26],[247,33,245,27,"derive"],[247,39,245,33],[247,40,245,34,"node"],[247,44,245,38],[247,45,245,39],[248,8,246,4],[249,8,248,4],[249,12,248,8,"node"],[249,16,248,12],[249,21,248,17],[249,22,248,18],[249,26,248,22],[249,30,248,26],[249,31,248,27,"_node0"],[249,37,248,33],[249,39,248,35],[250,10,249,6],[250,17,249,13],[250,21,249,17],[250,22,249,18,"_node0"],[250,28,249,24],[250,29,249,25,"derive"],[250,35,249,31],[250,36,249,32,"index"],[250,41,249,37],[250,42,249,38],[250,43,249,39,"publicKey"],[250,52,249,48],[251,8,250,4],[252,8,252,4],[252,12,252,8,"node"],[252,16,252,12],[252,21,252,17],[252,22,252,18],[252,26,252,22],[252,30,252,26],[252,31,252,27,"_node1"],[252,37,252,33],[252,39,252,35],[253,10,253,6],[253,17,253,13],[253,21,253,17],[253,22,253,18,"_node1"],[253,28,253,24],[253,29,253,25,"derive"],[253,35,253,31],[253,36,253,32,"index"],[253,41,253,37],[253,42,253,38],[253,43,253,39,"publicKey"],[253,52,253,48],[254,8,254,4],[255,8,256,4],[255,14,256,10],[255,18,256,14,"Error"],[255,23,256,19],[255,24,256,20],[255,81,256,77],[255,82,256,78],[256,6,257,2],[257,4,257,3],[258,6,257,3,"key"],[258,9,257,3],[259,6,257,3,"value"],[259,11,257,3],[259,13,259,2],[259,22,259,2,"_getExternalAddressByIndex"],[259,48,259,28,"_getExternalAddressByIndex"],[259,49,259,29,"index"],[259,54,259,42],[259,56,259,52],[260,8,260,4],[260,15,260,11],[260,19,260,15],[260,20,260,16,"_getNodeAddressByIndex"],[260,42,260,38],[260,43,260,39],[260,44,260,40],[260,46,260,42,"index"],[260,51,260,47],[260,52,260,48],[261,6,261,2],[262,4,261,3],[263,6,261,3,"key"],[263,9,261,3],[264,6,261,3,"value"],[264,11,261,3],[264,13,263,2],[264,22,263,2,"_getInternalAddressByIndex"],[264,48,263,28,"_getInternalAddressByIndex"],[264,49,263,29,"index"],[264,54,263,42],[264,56,263,44],[265,8,264,4],[265,15,264,11],[265,19,264,15],[265,20,264,16,"_getNodeAddressByIndex"],[265,42,264,38],[265,43,264,39],[265,44,264,40],[265,46,264,42,"index"],[265,51,264,47],[265,52,264,48],[266,6,265,2],[268,6,267,2],[269,0,268,0],[270,0,269,0],[271,0,270,0],[272,0,271,0],[273,0,272,0],[274,4,267,2],[275,6,267,2,"key"],[275,9,267,2],[276,6,267,2,"value"],[276,11,267,2],[276,13,273,2],[276,22,273,2,"getXpub"],[276,29,273,9,"getXpub"],[276,30,273,9],[276,32,273,12],[277,8,274,4],[277,12,274,8],[277,16,274,12],[277,17,274,13,"_xpub"],[277,22,274,18],[277,24,274,20],[278,10,275,6],[278,17,275,13],[278,21,275,17],[278,22,275,18,"_xpub"],[278,27,275,23],[278,28,275,24],[278,29,275,25],[279,8,276,4],[280,8,277,4],[281,8,278,4],[281,12,278,10,"seed"],[281,16,278,14],[281,19,278,17],[281,23,278,21],[281,24,278,22,"_getSeed"],[281,32,278,30],[281,33,278,31],[281,34,278,32],[282,8,279,4],[282,12,279,10,"root"],[282,16,279,14],[282,19,279,17,"bip32"],[282,24,279,22],[282,25,279,23,"fromSeed"],[282,33,279,31],[282,34,279,32,"seed"],[282,38,279,36],[282,39,279,37],[283,8,281,4],[283,12,281,10,"path"],[283,16,281,14],[283,19,281,17],[283,23,281,21],[283,24,281,22,"getDerivationPath"],[283,41,281,39],[283,42,281,40],[283,43,281,41],[284,8,282,4],[284,12,282,8],[284,13,282,9,"path"],[284,17,282,13],[284,19,282,15],[285,10,283,6],[285,16,283,12],[285,20,283,16,"Error"],[285,25,283,21],[285,26,283,22],[285,51,283,47],[285,52,283,48],[286,8,284,4],[287,8,285,4],[287,12,285,10,"child"],[287,17,285,15],[287,20,285,18,"root"],[287,24,285,22],[287,25,285,23,"derivePath"],[287,35,285,33],[287,36,285,34,"path"],[287,40,285,38],[287,41,285,39],[287,42,285,40,"neutered"],[287,50,285,48],[287,51,285,49],[287,52,285,50],[288,8,286,4],[288,12,286,10,"xpub"],[288,16,286,14],[288,19,286,17,"child"],[288,24,286,22],[288,25,286,23,"toBase58"],[288,33,286,31],[288,34,286,32],[288,35,286,33],[290,8,288,4],[291,8,289,4],[291,12,289,8,"data"],[291,16,289,12],[291,19,289,15,"b58"],[291,37,289,18],[291,38,289,19,"decode"],[291,44,289,25],[291,45,289,26,"xpub"],[291,49,289,30],[291,50,289,31],[292,8,290,4,"data"],[292,12,290,8],[292,15,290,11,"data"],[292,19,290,15],[292,20,290,16,"slice"],[292,25,290,21],[292,26,290,22],[292,27,290,23],[292,28,290,24],[293,8,291,4,"data"],[293,12,291,8],[293,15,291,11,"Buffer"],[293,21,291,17],[293,22,291,18,"concat"],[293,28,291,24],[293,29,291,25],[293,30,291,26,"Buffer"],[293,36,291,32],[293,37,291,33,"from"],[293,41,291,37],[293,42,291,38],[293,52,291,48],[293,54,291,50],[293,59,291,55],[293,60,291,56],[293,62,291,58,"data"],[293,66,291,62],[293,67,291,63],[293,68,291,64],[294,8,292,4],[294,12,292,8],[294,13,292,9,"_xpub"],[294,18,292,14],[294,21,292,17,"b58"],[294,39,292,20],[294,40,292,21,"encode"],[294,46,292,27],[294,47,292,28,"data"],[294,51,292,32],[294,52,292,33],[295,8,294,4],[295,15,294,11],[295,19,294,15],[295,20,294,16,"_xpub"],[295,25,294,21],[296,6,295,2],[298,6,297,2],[299,0,298,0],[300,0,299,0],[301,4,297,2],[302,6,297,2,"key"],[302,9,297,2],[303,6,297,2,"value"],[303,11,297,2],[304,8,297,2],[304,12,297,2,"_fetchTransactions"],[304,30,297,2],[304,37,297,2,"_asyncToGenerator2"],[304,55,297,2],[304,56,297,2,"default"],[304,63,297,2],[304,65,300,2],[304,78,300,28],[305,10,301,4],[306,10,302,4],[307,10,303,4],[308,10,304,4],[309,10,305,4],[311,10,307,4],[312,10,308,4],[313,10,309,4],[314,10,310,4],[316,10,312,4],[316,14,312,10,"addresses2fetch"],[316,29,312,25],[316,32,312,28],[316,34,312,30],[317,10,313,4],[318,10,314,4],[318,14,314,10,"next_free_address_index"],[318,37,314,33],[318,40,314,36],[318,44,314,40],[318,45,314,41,"next_free_address_index"],[318,68,314,64],[319,10,315,4],[319,14,315,10,"next_free_change_address_index"],[319,44,315,40],[319,47,315,43],[319,51,315,47],[319,52,315,48,"next_free_change_address_index"],[319,82,315,78],[320,10,317,4],[320,15,317,9],[320,19,317,13,"c"],[320,20,317,14],[320,23,317,17],[320,24,317,18],[320,26,317,20,"c"],[320,27,317,21],[320,30,317,24,"next_free_address_index"],[320,53,317,47],[320,56,317,50],[320,60,317,54],[320,61,317,55,"gap_limit"],[320,70,317,64],[320,72,317,66,"c"],[320,73,317,67],[320,75,317,69],[320,77,317,71],[321,12,318,6],[322,12,319,6],[322,16,319,10,"hasUnconfirmed"],[322,30,319,24],[322,33,319,27],[322,38,319,32],[323,12,320,6],[323,16,320,10],[323,17,320,11,"_txs_by_external_index"],[323,39,320,33],[323,40,320,34,"c"],[323,41,320,35],[323,42,320,36],[323,45,320,39],[323,49,320,43],[323,50,320,44,"_txs_by_external_index"],[323,72,320,66],[323,73,320,67,"c"],[323,74,320,68],[323,75,320,69],[323,79,320,73],[323,81,320,75],[324,12,321,6],[324,17,321,11],[324,21,321,17,"tx"],[324,23,321,19],[324,27,321,23],[324,31,321,27],[324,32,321,28,"_txs_by_external_index"],[324,54,321,50],[324,55,321,51,"c"],[324,56,321,52],[324,57,321,53],[324,59,321,55,"hasUnconfirmed"],[324,73,321,69],[324,76,321,72,"hasUnconfirmed"],[324,90,321,86],[324,94,321,90],[324,95,321,91,"tx"],[324,97,321,93],[324,98,321,94,"confirmations"],[324,111,321,107],[324,115,321,111,"tx"],[324,117,321,113],[324,118,321,114,"confirmations"],[324,131,321,127],[324,134,321,130],[324,135,321,131],[325,12,323,6],[325,16,323,10,"hasUnconfirmed"],[325,30,323,24],[325,34,323,28],[325,38,323,32],[325,39,323,33,"_txs_by_external_index"],[325,61,323,55],[325,62,323,56,"c"],[325,63,323,57],[325,64,323,58],[325,65,323,59,"length"],[325,71,323,65],[325,76,323,70],[325,77,323,71],[325,81,323,75],[325,85,323,79],[325,86,323,80,"_balances_by_external_index"],[325,113,323,107],[325,114,323,108,"c"],[325,115,323,109],[325,116,323,110],[325,117,323,111,"u"],[325,118,323,112],[325,123,323,117],[325,124,323,118],[325,126,323,120],[326,14,324,8,"addresses2fetch"],[326,29,324,23],[326,30,324,24,"push"],[326,34,324,28],[326,35,324,29],[326,39,324,33],[326,40,324,34,"_getExternalAddressByIndex"],[326,66,324,60],[326,67,324,61,"c"],[326,68,324,62],[326,69,324,63],[326,70,324,64],[327,12,325,6],[328,10,326,4],[329,10,328,4],[329,15,328,9],[329,19,328,13,"c"],[329,21,328,14],[329,24,328,17],[329,25,328,18],[329,27,328,20,"c"],[329,29,328,21],[329,32,328,24,"next_free_change_address_index"],[329,62,328,54],[329,65,328,57],[329,69,328,61],[329,70,328,62,"gap_limit"],[329,79,328,71],[329,81,328,73,"c"],[329,83,328,74],[329,85,328,76],[329,87,328,78],[330,12,329,6],[331,12,330,6],[331,16,330,10,"hasUnconfirmed"],[331,31,330,24],[331,34,330,27],[331,39,330,32],[332,12,331,6],[332,16,331,10],[332,17,331,11,"_txs_by_internal_index"],[332,39,331,33],[332,40,331,34,"c"],[332,42,331,35],[332,43,331,36],[332,46,331,39],[332,50,331,43],[332,51,331,44,"_txs_by_internal_index"],[332,73,331,66],[332,74,331,67,"c"],[332,76,331,68],[332,77,331,69],[332,81,331,73],[332,83,331,75],[333,12,332,6],[333,17,332,11],[333,21,332,17,"tx"],[333,24,332,19],[333,28,332,23],[333,32,332,27],[333,33,332,28,"_txs_by_internal_index"],[333,55,332,50],[333,56,332,51,"c"],[333,58,332,52],[333,59,332,53],[333,61,332,55,"hasUnconfirmed"],[333,76,332,69],[333,79,332,72,"hasUnconfirmed"],[333,94,332,86],[333,98,332,90],[333,99,332,91,"tx"],[333,102,332,93],[333,103,332,94,"confirmations"],[333,116,332,107],[333,120,332,111,"tx"],[333,123,332,113],[333,124,332,114,"confirmations"],[333,137,332,127],[333,140,332,130],[333,141,332,131],[334,12,334,6],[334,16,334,10,"hasUnconfirmed"],[334,31,334,24],[334,35,334,28],[334,39,334,32],[334,40,334,33,"_txs_by_internal_index"],[334,62,334,55],[334,63,334,56,"c"],[334,65,334,57],[334,66,334,58],[334,67,334,59,"length"],[334,73,334,65],[334,78,334,70],[334,79,334,71],[334,83,334,75],[334,87,334,79],[334,88,334,80,"_balances_by_internal_index"],[334,115,334,107],[334,116,334,108,"c"],[334,118,334,109],[334,119,334,110],[334,120,334,111,"u"],[334,121,334,112],[334,126,334,117],[334,127,334,118],[334,129,334,120],[335,14,335,8,"addresses2fetch"],[335,29,335,23],[335,30,335,24,"push"],[335,34,335,28],[335,35,335,29],[335,39,335,33],[335,40,335,34,"_getInternalAddressByIndex"],[335,66,335,60],[335,67,335,61,"c"],[335,69,335,62],[335,70,335,63],[335,71,335,64],[336,12,336,6],[337,10,337,4],[339,10,339,4],[340,10,340,4],[340,15,340,9],[340,19,340,15,"pc"],[340,21,340,17],[340,25,340,21],[340,29,340,25],[340,30,340,26,"_receive_payment_codes"],[340,52,340,48],[340,54,340,50],[341,12,341,6],[341,17,341,11],[341,21,341,15,"c"],[341,24,341,16],[341,27,341,19],[341,28,341,20],[341,30,341,22,"c"],[341,33,341,23],[341,36,341,26],[341,40,341,30],[341,41,341,31,"_getNextFreePaymentCodeIndexReceive"],[341,76,341,66],[341,77,341,67,"pc"],[341,79,341,69],[341,80,341,70],[341,83,341,73],[341,87,341,77],[341,88,341,78,"gap_limit"],[341,97,341,87],[341,99,341,89,"c"],[341,102,341,90],[341,104,341,92],[341,106,341,94],[342,14,342,8],[342,18,342,12,"hasUnconfirmed"],[342,34,342,26],[342,37,342,29],[342,42,342,34],[343,14,343,8],[343,18,343,12],[343,19,343,13,"_txs_by_payment_code_index"],[343,45,343,39],[343,46,343,40,"pc"],[343,48,343,42],[343,49,343,43],[343,52,343,46],[343,56,343,50],[343,57,343,51,"_txs_by_payment_code_index"],[343,83,343,77],[343,84,343,78,"pc"],[343,86,343,80],[343,87,343,81],[343,91,343,85],[343,92,343,86],[343,93,343,87],[344,14,344,8],[344,18,344,12],[344,19,344,13,"_txs_by_payment_code_index"],[344,45,344,39],[344,46,344,40,"pc"],[344,48,344,42],[344,49,344,43],[344,50,344,44,"c"],[344,53,344,45],[344,54,344,46],[344,57,344,49],[344,61,344,53],[344,62,344,54,"_txs_by_payment_code_index"],[344,88,344,80],[344,89,344,81,"pc"],[344,91,344,83],[344,92,344,84],[344,93,344,85,"c"],[344,96,344,86],[344,97,344,87],[344,101,344,91],[344,103,344,93],[345,14,345,8],[345,19,345,13],[345,23,345,19,"tx"],[345,27,345,21],[345,31,345,25],[345,35,345,29],[345,36,345,30,"_txs_by_payment_code_index"],[345,62,345,56],[345,63,345,57,"pc"],[345,65,345,59],[345,66,345,60],[345,67,345,61,"c"],[345,70,345,62],[345,71,345,63],[345,73,346,10,"hasUnconfirmed"],[345,89,346,24],[345,92,346,27,"hasUnconfirmed"],[345,108,346,41],[345,112,346,45],[345,113,346,46,"tx"],[345,117,346,48],[345,118,346,49,"confirmations"],[345,131,346,62],[345,135,346,66,"tx"],[345,139,346,68],[345,140,346,69,"confirmations"],[345,153,346,82],[345,156,346,85],[345,157,346,86],[346,14,348,8],[346,18,348,12,"hasUnconfirmed"],[346,34,348,26],[346,38,348,30],[346,42,348,34],[346,43,348,35,"_txs_by_payment_code_index"],[346,69,348,61],[346,70,348,62,"pc"],[346,72,348,64],[346,73,348,65],[346,74,348,66,"c"],[346,77,348,67],[346,78,348,68],[346,79,348,69,"length"],[346,85,348,75],[346,90,348,80],[346,91,348,81],[346,95,348,85],[346,99,348,89],[346,100,348,90,"_balances_by_payment_code_index"],[346,131,348,121],[346,132,348,122,"pc"],[346,134,348,124],[346,135,348,125],[346,136,348,126,"u"],[346,137,348,127],[346,142,348,132],[346,143,348,133],[346,145,348,135],[347,16,349,10,"addresses2fetch"],[347,31,349,25],[347,32,349,26,"push"],[347,36,349,30],[347,37,349,31],[347,41,349,35],[347,42,349,36,"_getBIP47AddressReceive"],[347,65,349,59],[347,66,349,60,"pc"],[347,68,349,62],[347,70,349,64,"c"],[347,73,349,65],[347,74,349,66],[347,75,349,67],[348,14,350,8],[349,12,351,6],[350,10,352,4],[352,10,354,4],[353,10,355,4],[353,14,355,10,"histories"],[353,23,355,19],[353,32,355,28,"BlueElectrum"],[353,44,355,40],[353,45,355,41,"multiGetHistoryByAddress"],[353,69,355,65],[353,70,355,66,"addresses2fetch"],[353,85,355,81],[353,86,355,82],[354,10,356,4],[354,14,356,10,"txs"],[354,17,356,46],[354,20,356,49],[354,21,356,50],[354,22,356,51],[355,10,357,4],[355,15,357,9],[355,19,357,15,"history"],[355,26,357,22],[355,30,357,26,"Object"],[355,36,357,32],[355,37,357,33,"values"],[355,43,357,39],[355,44,357,40,"histories"],[355,53,357,49],[355,54,357,50],[355,56,357,52],[356,12,358,6],[356,17,358,11],[356,21,358,17,"tx"],[356,25,358,19],[356,29,358,23,"history"],[356,36,358,30],[356,38,358,53],[357,14,359,8,"txs"],[357,17,359,11],[357,18,359,12,"tx"],[357,22,359,14],[357,23,359,15,"tx_hash"],[357,30,359,22],[357,31,359,23],[357,34,359,26,"tx"],[357,38,359,28],[358,12,360,6],[359,10,361,4],[361,10,363,4],[362,10,364,4],[362,14,364,10,"txdatas"],[362,21,364,17],[362,30,364,26,"BlueElectrum"],[362,42,364,38],[362,43,364,39,"multiGetTransactionByTxid"],[362,68,364,64],[362,69,364,65,"Object"],[362,75,364,71],[362,76,364,72,"keys"],[362,80,364,76],[362,81,364,77,"txs"],[362,84,364,80],[362,85,364,81],[362,87,364,83],[362,91,364,87],[362,92,364,88],[364,10,366,4],[365,10,367,4],[366,10,368,4],[366,14,368,10,"vinTxids"],[366,22,368,18],[366,25,368,21],[366,27,368,23],[367,10,369,4],[367,15,369,9],[367,19,369,15,"txdata"],[367,25,369,21],[367,29,369,25,"Object"],[367,35,369,31],[367,36,369,32,"values"],[367,42,369,38],[367,43,369,39,"txdatas"],[367,50,369,46],[367,51,369,47],[367,53,369,49],[368,12,370,6],[368,16,370,10,"txdata"],[368,22,370,16],[368,23,370,17,"vin"],[368,26,370,20],[368,27,370,21,"length"],[368,33,370,27],[368,36,370,30],[368,38,370,32],[368,40,370,34],[369,12,371,6],[370,12,372,6],[371,12,373,6],[371,17,373,11],[371,21,373,17,"vin"],[371,24,373,20],[371,28,373,24,"txdata"],[371,34,373,30],[371,35,373,31,"vin"],[371,38,373,34],[371,40,373,36],[372,14,374,8,"vin"],[372,17,374,11],[372,18,374,12,"txid"],[372,22,374,16],[372,26,374,20,"vinTxids"],[372,34,374,28],[372,35,374,29,"push"],[372,39,374,33],[372,40,374,34,"vin"],[372,43,374,37],[372,44,374,38,"txid"],[372,48,374,42],[372,49,374,43],[373,14,375,8],[374,12,376,6],[375,10,377,4],[376,10,378,4],[376,14,378,10,"vintxdatas"],[376,24,378,20],[376,33,378,29,"BlueElectrum"],[376,45,378,41],[376,46,378,42,"multiGetTransactionByTxid"],[376,71,378,67],[376,72,378,68,"vinTxids"],[376,80,378,76],[376,82,378,78],[376,86,378,82],[376,87,378,83],[378,10,380,4],[379,10,381,4],[380,10,382,4],[380,15,382,9],[380,19,382,15,"txid"],[380,23,382,19],[380,27,382,23,"Object"],[380,33,382,29],[380,34,382,30,"keys"],[380,38,382,34],[380,39,382,35,"txdatas"],[380,46,382,42],[380,47,382,43],[380,49,382,45],[381,12,383,6],[382,12,384,6],[382,17,384,11],[382,21,384,15,"inpNum"],[382,27,384,21],[382,30,384,24],[382,31,384,25],[382,33,384,27,"inpNum"],[382,39,384,33],[382,42,384,36,"txdatas"],[382,49,384,43],[382,50,384,44,"txid"],[382,54,384,48],[382,55,384,49],[382,56,384,50,"vin"],[382,59,384,53],[382,60,384,54,"length"],[382,66,384,60],[382,68,384,62,"inpNum"],[382,74,384,68],[382,76,384,70],[382,78,384,72],[383,14,384,72],[383,18,384,72,"_vintxdatas$inpTxid"],[383,37,384,72],[384,14,385,8],[384,18,385,14,"inpTxid"],[384,25,385,21],[384,28,385,24,"txdatas"],[384,35,385,31],[384,36,385,32,"txid"],[384,40,385,36],[384,41,385,37],[384,42,385,38,"vin"],[384,45,385,41],[384,46,385,42,"inpNum"],[384,52,385,48],[384,53,385,49],[384,54,385,50,"txid"],[384,58,385,54],[385,14,386,8],[385,18,386,14,"inpVout"],[385,25,386,21],[385,28,386,24,"txdatas"],[385,35,386,31],[385,36,386,32,"txid"],[385,40,386,36],[385,41,386,37],[385,42,386,38,"vin"],[385,45,386,41],[385,46,386,42,"inpNum"],[385,52,386,48],[385,53,386,49],[385,54,386,50,"vout"],[385,58,386,54],[386,14,387,8],[387,14,388,8],[387,19,388,8,"_vintxdatas$inpTxid"],[387,38,388,8],[387,41,388,12,"vintxdatas"],[387,51,388,22],[387,52,388,23,"inpTxid"],[387,59,388,30],[387,60,388,31],[387,73,388,12,"_vintxdatas$inpTxid"],[387,92,388,12],[387,93,388,33,"vout"],[387,97,388,37],[387,98,388,38,"inpVout"],[387,105,388,45],[387,106,388,46],[387,108,388,48],[388,16,389,10],[389,16,390,10,"txdatas"],[389,23,390,17],[389,24,390,18,"txid"],[389,28,390,22],[389,29,390,23],[389,30,390,24,"vin"],[389,33,390,27],[389,34,390,28,"inpNum"],[389,40,390,34],[389,41,390,35],[389,42,390,36,"addresses"],[389,51,390,45],[389,54,390,48,"vintxdatas"],[389,64,390,58],[389,65,390,59,"inpTxid"],[389,72,390,66],[389,73,390,67],[389,74,390,68,"vout"],[389,78,390,72],[389,79,390,73,"inpVout"],[389,86,390,80],[389,87,390,81],[389,88,390,82,"scriptPubKey"],[389,100,390,94],[389,101,390,95,"addresses"],[389,110,390,104],[390,16,391,10,"txdatas"],[390,23,391,17],[390,24,391,18,"txid"],[390,28,391,22],[390,29,391,23],[390,30,391,24,"vin"],[390,33,391,27],[390,34,391,28,"inpNum"],[390,40,391,34],[390,41,391,35],[390,42,391,36,"value"],[390,47,391,41],[390,50,391,44,"vintxdatas"],[390,60,391,54],[390,61,391,55,"inpTxid"],[390,68,391,62],[390,69,391,63],[390,70,391,64,"vout"],[390,74,391,68],[390,75,391,69,"inpVout"],[390,82,391,76],[390,83,391,77],[390,84,391,78,"value"],[390,89,391,83],[391,14,392,8],[392,12,393,6],[393,10,394,4],[395,10,396,4],[396,10,397,4],[397,10,398,4],[397,15,398,9],[397,19,398,13,"c"],[397,22,398,14],[397,25,398,17],[397,26,398,18],[397,28,398,20,"c"],[397,31,398,21],[397,34,398,24,"next_free_address_index"],[397,57,398,47],[397,60,398,50],[397,64,398,54],[397,65,398,55,"gap_limit"],[397,74,398,64],[397,76,398,66,"c"],[397,79,398,67],[397,81,398,69],[397,83,398,71],[398,12,399,6],[398,16,399,10],[398,17,399,11,"_txs_by_external_index"],[398,39,399,33],[398,40,399,34,"c"],[398,43,399,35],[398,44,399,36],[398,47,399,39],[398,51,399,43],[398,52,399,44,"_txs_by_external_index"],[398,74,399,66],[398,75,399,67,"c"],[398,78,399,68],[398,79,399,69],[398,80,399,70,"filter"],[398,86,399,76],[398,87,399,77],[398,97,399,77,"tx"],[398,99,399,79],[399,14,399,79],[399,21,399,83],[399,22,399,84],[399,23,399,85,"tx"],[399,25,399,87],[399,26,399,88,"confirmations"],[399,39,399,101],[400,12,399,101],[400,14,399,102],[401,10,400,4],[402,10,401,4],[402,15,401,9],[402,19,401,13,"c"],[402,22,401,14],[402,25,401,17],[402,26,401,18],[402,28,401,20,"c"],[402,31,401,21],[402,34,401,24,"next_free_change_address_index"],[402,64,401,54],[402,67,401,57],[402,71,401,61],[402,72,401,62,"gap_limit"],[402,81,401,71],[402,83,401,73,"c"],[402,86,401,74],[402,88,401,76],[402,90,401,78],[403,12,402,6],[403,16,402,10],[403,17,402,11,"_txs_by_internal_index"],[403,39,402,33],[403,40,402,34,"c"],[403,43,402,35],[403,44,402,36],[403,47,402,39],[403,51,402,43],[403,52,402,44,"_txs_by_internal_index"],[403,74,402,66],[403,75,402,67,"c"],[403,78,402,68],[403,79,402,69],[403,80,402,70,"filter"],[403,86,402,76],[403,87,402,77],[403,97,402,77,"tx"],[403,99,402,79],[404,14,402,79],[404,21,402,83],[404,22,402,84],[404,23,402,85,"tx"],[404,25,402,87],[404,26,402,88,"confirmations"],[404,39,402,101],[405,12,402,101],[405,14,402,102],[406,10,403,4],[407,10,404,4],[407,15,404,9],[407,19,404,15,"pc"],[407,22,404,17],[407,26,404,21],[407,30,404,25],[407,31,404,26,"_receive_payment_codes"],[407,53,404,48],[407,55,404,50],[408,12,405,6],[408,17,405,11],[408,21,405,15,"c"],[408,24,405,16],[408,27,405,19],[408,28,405,20],[408,30,405,22,"c"],[408,33,405,23],[408,36,405,26],[408,40,405,30],[408,41,405,31,"_getNextFreePaymentCodeIndexReceive"],[408,76,405,66],[408,77,405,67,"pc"],[408,80,405,69],[408,81,405,70],[408,84,405,73],[408,88,405,77],[408,89,405,78,"gap_limit"],[408,98,405,87],[408,100,405,89,"c"],[408,103,405,90],[408,105,405,92],[408,107,405,94],[409,14,406,8],[409,18,406,12],[409,19,406,13,"_txs_by_payment_code_index"],[409,45,406,39],[409,46,406,40,"pc"],[409,49,406,42],[409,50,406,43],[409,51,406,44,"c"],[409,54,406,45],[409,55,406,46],[409,58,406,49],[409,62,406,53],[409,63,406,54,"_txs_by_payment_code_index"],[409,89,406,80],[409,90,406,81,"pc"],[409,93,406,83],[409,94,406,84],[409,95,406,85,"c"],[409,98,406,86],[409,99,406,87],[409,100,406,88,"filter"],[409,106,406,94],[409,107,406,95],[409,117,406,95,"tx"],[409,119,406,97],[410,16,406,97],[410,23,406,101],[410,24,406,102],[410,25,406,103,"tx"],[410,27,406,105],[410,28,406,106,"confirmations"],[410,41,406,119],[411,14,406,119],[411,16,406,120],[412,12,407,6],[413,10,408,4],[415,10,410,4],[416,10,411,4],[418,10,413,4],[418,15,413,9],[418,19,413,13,"c"],[418,22,413,14],[418,25,413,17],[418,26,413,18],[418,28,413,20,"c"],[418,31,413,21],[418,34,413,24,"next_free_address_index"],[418,57,413,47],[418,60,413,50],[418,64,413,54],[418,65,413,55,"gap_limit"],[418,74,413,64],[418,76,413,66,"c"],[418,79,413,67],[418,81,413,69],[418,83,413,71],[419,12,414,6],[419,17,414,11],[419,21,414,17,"tx"],[419,25,414,19],[419,29,414,23,"Object"],[419,35,414,29],[419,36,414,30,"values"],[419,42,414,36],[419,43,414,37,"txdatas"],[419,50,414,44],[419,51,414,45],[419,53,414,47],[420,14,415,8],[420,19,415,13],[420,23,415,19,"vin"],[420,27,415,22],[420,31,415,26,"tx"],[420,35,415,28],[420,36,415,29,"vin"],[420,39,415,32],[420,41,415,34],[421,16,416,10],[421,20,416,14,"vin"],[421,24,416,17],[421,25,416,18,"addresses"],[421,34,416,27],[421,38,416,31,"vin"],[421,42,416,34],[421,43,416,35,"addresses"],[421,52,416,44],[421,53,416,45,"indexOf"],[421,60,416,52],[421,61,416,53],[421,65,416,57],[421,66,416,58,"_getExternalAddressByIndex"],[421,92,416,84],[421,93,416,85,"c"],[421,96,416,86],[421,97,416,87],[421,98,416,88],[421,103,416,93],[421,104,416,94],[421,105,416,95],[421,107,416,97],[422,18,417,12],[423,18,418,12],[423,22,418,16],[423,23,418,17,"_txs_by_external_index"],[423,45,418,39],[423,46,418,40,"c"],[423,49,418,41],[423,50,418,42],[423,53,418,45],[423,57,418,49],[423,58,418,50,"_txs_by_external_index"],[423,80,418,72],[423,81,418,73,"c"],[423,84,418,74],[423,85,418,75],[423,89,418,79],[423,91,418,81],[424,18,419,12],[424,22,419,25,"txVin"],[424,27,419,30],[424,30,419,60,"tx"],[424,34,419,62],[424,35,419,20,"vin"],[424,38,419,23],[425,20,419,38,"txVout"],[425,26,419,44],[425,29,419,60,"tx"],[425,33,419,62],[425,34,419,32,"vout"],[425,38,419,36],[426,20,419,49,"txRest"],[426,26,419,55],[426,33,419,55,"_objectWithoutProperties2"],[426,58,419,55],[426,59,419,55,"default"],[426,66,419,55],[426,68,419,60,"tx"],[426,72,419,62],[426,74,419,62,"_excluded"],[426,83,419,62],[427,18,420,12],[427,22,420,18,"clonedTx"],[427,30,420,26],[427,33,420,26,"Object"],[427,39,420,26],[427,40,420,26,"assign"],[427,46,420,26],[427,51,420,34,"txRest"],[427,57,420,40],[428,20,420,42,"inputs"],[428,26,420,48],[428,28,420,50,"txVin"],[428,33,420,55],[428,34,420,56,"slice"],[428,39,420,61],[428,40,420,62],[428,41,420,63],[428,42,420,64],[429,20,420,66,"outputs"],[429,27,420,73],[429,29,420,75,"txVout"],[429,35,420,81],[429,36,420,82,"slice"],[429,41,420,87],[429,42,420,88],[429,43,420,89],[430,18,420,90],[430,20,420,92],[432,18,422,12],[433,18,423,12],[433,22,423,16,"replaced"],[433,30,423,24],[433,33,423,27],[433,38,423,32],[434,18,424,12],[434,23,424,17],[434,27,424,21,"cc"],[434,29,424,23],[434,32,424,26],[434,33,424,27],[434,35,424,29,"cc"],[434,37,424,31],[434,40,424,34],[434,44,424,38],[434,45,424,39,"_txs_by_external_index"],[434,67,424,61],[434,68,424,62,"c"],[434,71,424,63],[434,72,424,64],[434,73,424,65,"length"],[434,79,424,71],[434,81,424,73,"cc"],[434,83,424,75],[434,85,424,77],[434,87,424,79],[435,20,425,14],[435,24,425,18],[435,28,425,22],[435,29,425,23,"_txs_by_external_index"],[435,51,425,45],[435,52,425,46,"c"],[435,55,425,47],[435,56,425,48],[435,57,425,49,"cc"],[435,59,425,51],[435,60,425,52],[435,61,425,53,"txid"],[435,65,425,57],[435,70,425,62,"clonedTx"],[435,78,425,70],[435,79,425,71,"txid"],[435,83,425,75],[435,85,425,77],[436,22,426,16,"replaced"],[436,30,426,24],[436,33,426,27],[436,37,426,31],[437,22,427,16],[437,26,427,20],[437,27,427,21,"_txs_by_external_index"],[437,49,427,43],[437,50,427,44,"c"],[437,53,427,45],[437,54,427,46],[437,55,427,47,"cc"],[437,57,427,49],[437,58,427,50],[437,61,427,53,"clonedTx"],[437,69,427,61],[438,20,428,14],[439,18,429,12],[440,18,430,12],[440,22,430,16],[440,23,430,17,"replaced"],[440,31,430,25],[440,33,430,27],[440,37,430,31],[440,38,430,32,"_txs_by_external_index"],[440,60,430,54],[440,61,430,55,"c"],[440,64,430,56],[440,65,430,57],[440,66,430,58,"push"],[440,70,430,62],[440,71,430,63,"clonedTx"],[440,79,430,71],[440,80,430,72],[441,16,431,10],[442,14,432,8],[443,14,433,8],[443,19,433,13],[443,23,433,19,"vout"],[443,27,433,23],[443,31,433,27,"tx"],[443,35,433,29],[443,36,433,30,"vout"],[443,40,433,34],[443,42,433,36],[444,16,434,10],[444,20,434,14,"vout"],[444,24,434,18],[444,25,434,19,"scriptPubKey"],[444,37,434,31],[444,38,434,32,"addresses"],[444,47,434,41],[444,51,434,45,"vout"],[444,55,434,49],[444,56,434,50,"scriptPubKey"],[444,68,434,62],[444,69,434,63,"addresses"],[444,78,434,72],[444,79,434,73,"indexOf"],[444,86,434,80],[444,87,434,81],[444,91,434,85],[444,92,434,86,"_getExternalAddressByIndex"],[444,118,434,112],[444,119,434,113,"c"],[444,122,434,114],[444,123,434,115],[444,124,434,116],[444,129,434,121],[444,130,434,122],[444,131,434,123],[444,133,434,125],[445,18,435,12],[446,18,436,12],[446,22,436,16],[446,23,436,17,"_txs_by_external_index"],[446,45,436,39],[446,46,436,40,"c"],[446,49,436,41],[446,50,436,42],[446,53,436,45],[446,57,436,49],[446,58,436,50,"_txs_by_external_index"],[446,80,436,72],[446,81,436,73,"c"],[446,84,436,74],[446,85,436,75],[446,89,436,79],[446,91,436,81],[447,18,437,12],[447,22,437,25,"txVin"],[447,28,437,30],[447,31,437,60,"tx"],[447,35,437,62],[447,36,437,20,"vin"],[447,39,437,23],[448,20,437,38,"txVout"],[448,27,437,44],[448,30,437,60,"tx"],[448,34,437,62],[448,35,437,32,"vout"],[448,39,437,36],[449,20,437,49,"txRest"],[449,27,437,55],[449,34,437,55,"_objectWithoutProperties2"],[449,59,437,55],[449,60,437,55,"default"],[449,67,437,55],[449,69,437,60,"tx"],[449,73,437,62],[449,75,437,62,"_excluded2"],[449,85,437,62],[450,18,438,12],[450,22,438,18,"clonedTx"],[450,31,438,26],[450,34,438,26,"Object"],[450,40,438,26],[450,41,438,26,"assign"],[450,47,438,26],[450,52,438,34,"txRest"],[450,59,438,40],[451,20,438,42,"inputs"],[451,26,438,48],[451,28,438,50,"txVin"],[451,34,438,55],[451,35,438,56,"slice"],[451,40,438,61],[451,41,438,62],[451,42,438,63],[451,43,438,64],[452,20,438,66,"outputs"],[452,27,438,73],[452,29,438,75,"txVout"],[452,36,438,81],[452,37,438,82,"slice"],[452,42,438,87],[452,43,438,88],[452,44,438,89],[453,18,438,90],[453,20,438,92],[455,18,440,12],[456,18,441,12],[456,22,441,16,"replaced"],[456,31,441,24],[456,34,441,27],[456,39,441,32],[457,18,442,12],[457,23,442,17],[457,27,442,21,"cc"],[457,30,442,23],[457,33,442,26],[457,34,442,27],[457,36,442,29,"cc"],[457,39,442,31],[457,42,442,34],[457,46,442,38],[457,47,442,39,"_txs_by_external_index"],[457,69,442,61],[457,70,442,62,"c"],[457,73,442,63],[457,74,442,64],[457,75,442,65,"length"],[457,81,442,71],[457,83,442,73,"cc"],[457,86,442,75],[457,88,442,77],[457,90,442,79],[458,20,443,14],[458,24,443,18],[458,28,443,22],[458,29,443,23,"_txs_by_external_index"],[458,51,443,45],[458,52,443,46,"c"],[458,55,443,47],[458,56,443,48],[458,57,443,49,"cc"],[458,60,443,51],[458,61,443,52],[458,62,443,53,"txid"],[458,66,443,57],[458,71,443,62,"clonedTx"],[458,80,443,70],[458,81,443,71,"txid"],[458,85,443,75],[458,87,443,77],[459,22,444,16,"replaced"],[459,31,444,24],[459,34,444,27],[459,38,444,31],[460,22,445,16],[460,26,445,20],[460,27,445,21,"_txs_by_external_index"],[460,49,445,43],[460,50,445,44,"c"],[460,53,445,45],[460,54,445,46],[460,55,445,47,"cc"],[460,58,445,49],[460,59,445,50],[460,62,445,53,"clonedTx"],[460,71,445,61],[461,20,446,14],[462,18,447,12],[463,18,448,12],[463,22,448,16],[463,23,448,17,"replaced"],[463,32,448,25],[463,34,448,27],[463,38,448,31],[463,39,448,32,"_txs_by_external_index"],[463,61,448,54],[463,62,448,55,"c"],[463,65,448,56],[463,66,448,57],[463,67,448,58,"push"],[463,71,448,62],[463,72,448,63,"clonedTx"],[463,81,448,71],[463,82,448,72],[464,16,449,10],[465,14,450,8],[466,12,451,6],[467,10,452,4],[468,10,454,4],[468,15,454,9],[468,19,454,13,"c"],[468,22,454,14],[468,25,454,17],[468,26,454,18],[468,28,454,20,"c"],[468,31,454,21],[468,34,454,24,"next_free_change_address_index"],[468,64,454,54],[468,67,454,57],[468,71,454,61],[468,72,454,62,"gap_limit"],[468,81,454,71],[468,83,454,73,"c"],[468,86,454,74],[468,88,454,76],[468,90,454,78],[469,12,455,6],[469,17,455,11],[469,21,455,17,"tx"],[469,25,455,19],[469,29,455,23,"Object"],[469,35,455,29],[469,36,455,30,"values"],[469,42,455,36],[469,43,455,37,"txdatas"],[469,50,455,44],[469,51,455,45],[469,53,455,47],[470,14,456,8],[470,19,456,13],[470,23,456,19,"vin"],[470,28,456,22],[470,32,456,26,"tx"],[470,36,456,28],[470,37,456,29,"vin"],[470,40,456,32],[470,42,456,34],[471,16,457,10],[471,20,457,14,"vin"],[471,25,457,17],[471,26,457,18,"addresses"],[471,35,457,27],[471,39,457,31,"vin"],[471,44,457,34],[471,45,457,35,"addresses"],[471,54,457,44],[471,55,457,45,"indexOf"],[471,62,457,52],[471,63,457,53],[471,67,457,57],[471,68,457,58,"_getInternalAddressByIndex"],[471,94,457,84],[471,95,457,85,"c"],[471,98,457,86],[471,99,457,87],[471,100,457,88],[471,105,457,93],[471,106,457,94],[471,107,457,95],[471,109,457,97],[472,18,458,12],[473,18,459,12],[473,22,459,16],[473,23,459,17,"_txs_by_internal_index"],[473,45,459,39],[473,46,459,40,"c"],[473,49,459,41],[473,50,459,42],[473,53,459,45],[473,57,459,49],[473,58,459,50,"_txs_by_internal_index"],[473,80,459,72],[473,81,459,73,"c"],[473,84,459,74],[473,85,459,75],[473,89,459,79],[473,91,459,81],[474,18,460,12],[474,22,460,25,"txVin"],[474,29,460,30],[474,32,460,60,"tx"],[474,36,460,62],[474,37,460,20,"vin"],[474,40,460,23],[475,20,460,38,"txVout"],[475,28,460,44],[475,31,460,60,"tx"],[475,35,460,62],[475,36,460,32,"vout"],[475,40,460,36],[476,20,460,49,"txRest"],[476,28,460,55],[476,35,460,55,"_objectWithoutProperties2"],[476,60,460,55],[476,61,460,55,"default"],[476,68,460,55],[476,70,460,60,"tx"],[476,74,460,62],[476,76,460,62,"_excluded3"],[476,86,460,62],[477,18,461,12],[477,22,461,18,"clonedTx"],[477,32,461,26],[477,35,461,26,"Object"],[477,41,461,26],[477,42,461,26,"assign"],[477,48,461,26],[477,53,461,34,"txRest"],[477,61,461,40],[478,20,461,42,"inputs"],[478,26,461,48],[478,28,461,50,"txVin"],[478,35,461,55],[478,36,461,56,"slice"],[478,41,461,61],[478,42,461,62],[478,43,461,63],[478,44,461,64],[479,20,461,66,"outputs"],[479,27,461,73],[479,29,461,75,"txVout"],[479,37,461,81],[479,38,461,82,"slice"],[479,43,461,87],[479,44,461,88],[479,45,461,89],[480,18,461,90],[480,20,461,92],[482,18,463,12],[483,18,464,12],[483,22,464,16,"replaced"],[483,32,464,24],[483,35,464,27],[483,40,464,32],[484,18,465,12],[484,23,465,17],[484,27,465,21,"cc"],[484,31,465,23],[484,34,465,26],[484,35,465,27],[484,37,465,29,"cc"],[484,41,465,31],[484,44,465,34],[484,48,465,38],[484,49,465,39,"_txs_by_internal_index"],[484,71,465,61],[484,72,465,62,"c"],[484,75,465,63],[484,76,465,64],[484,77,465,65,"length"],[484,83,465,71],[484,85,465,73,"cc"],[484,89,465,75],[484,91,465,77],[484,93,465,79],[485,20,466,14],[485,24,466,18],[485,28,466,22],[485,29,466,23,"_txs_by_internal_index"],[485,51,466,45],[485,52,466,46,"c"],[485,55,466,47],[485,56,466,48],[485,57,466,49,"cc"],[485,61,466,51],[485,62,466,52],[485,63,466,53,"txid"],[485,67,466,57],[485,72,466,62,"clonedTx"],[485,82,466,70],[485,83,466,71,"txid"],[485,87,466,75],[485,89,466,77],[486,22,467,16,"replaced"],[486,32,467,24],[486,35,467,27],[486,39,467,31],[487,22,468,16],[487,26,468,20],[487,27,468,21,"_txs_by_internal_index"],[487,49,468,43],[487,50,468,44,"c"],[487,53,468,45],[487,54,468,46],[487,55,468,47,"cc"],[487,59,468,49],[487,60,468,50],[487,63,468,53,"clonedTx"],[487,73,468,61],[488,20,469,14],[489,18,470,12],[490,18,471,12],[490,22,471,16],[490,23,471,17,"replaced"],[490,33,471,25],[490,35,471,27],[490,39,471,31],[490,40,471,32,"_txs_by_internal_index"],[490,62,471,54],[490,63,471,55,"c"],[490,66,471,56],[490,67,471,57],[490,68,471,58,"push"],[490,72,471,62],[490,73,471,63,"clonedTx"],[490,83,471,71],[490,84,471,72],[491,16,472,10],[492,14,473,8],[493,14,474,8],[493,19,474,13],[493,23,474,19,"vout"],[493,28,474,23],[493,32,474,27,"tx"],[493,36,474,29],[493,37,474,30,"vout"],[493,41,474,34],[493,43,474,36],[494,16,475,10],[494,20,475,14,"vout"],[494,25,475,18],[494,26,475,19,"scriptPubKey"],[494,38,475,31],[494,39,475,32,"addresses"],[494,48,475,41],[494,52,475,45,"vout"],[494,57,475,49],[494,58,475,50,"scriptPubKey"],[494,70,475,62],[494,71,475,63,"addresses"],[494,80,475,72],[494,81,475,73,"indexOf"],[494,88,475,80],[494,89,475,81],[494,93,475,85],[494,94,475,86,"_getInternalAddressByIndex"],[494,120,475,112],[494,121,475,113,"c"],[494,124,475,114],[494,125,475,115],[494,126,475,116],[494,131,475,121],[494,132,475,122],[494,133,475,123],[494,135,475,125],[495,18,476,12],[496,18,477,12],[496,22,477,16],[496,23,477,17,"_txs_by_internal_index"],[496,45,477,39],[496,46,477,40,"c"],[496,49,477,41],[496,50,477,42],[496,53,477,45],[496,57,477,49],[496,58,477,50,"_txs_by_internal_index"],[496,80,477,72],[496,81,477,73,"c"],[496,84,477,74],[496,85,477,75],[496,89,477,79],[496,91,477,81],[497,18,478,12],[497,22,478,25,"txVin"],[497,29,478,30],[497,32,478,60,"tx"],[497,36,478,62],[497,37,478,20,"vin"],[497,40,478,23],[498,20,478,38,"txVout"],[498,28,478,44],[498,31,478,60,"tx"],[498,35,478,62],[498,36,478,32,"vout"],[498,40,478,36],[499,20,478,49,"txRest"],[499,28,478,55],[499,35,478,55,"_objectWithoutProperties2"],[499,60,478,55],[499,61,478,55,"default"],[499,68,478,55],[499,70,478,60,"tx"],[499,74,478,62],[499,76,478,62,"_excluded4"],[499,86,478,62],[500,18,479,12],[500,22,479,18,"clonedTx"],[500,32,479,26],[500,35,479,26,"Object"],[500,41,479,26],[500,42,479,26,"assign"],[500,48,479,26],[500,53,479,34,"txRest"],[500,61,479,40],[501,20,479,42,"inputs"],[501,26,479,48],[501,28,479,50,"txVin"],[501,35,479,55],[501,36,479,56,"slice"],[501,41,479,61],[501,42,479,62],[501,43,479,63],[501,44,479,64],[502,20,479,66,"outputs"],[502,27,479,73],[502,29,479,75,"txVout"],[502,37,479,81],[502,38,479,82,"slice"],[502,43,479,87],[502,44,479,88],[502,45,479,89],[503,18,479,90],[503,20,479,92],[505,18,481,12],[506,18,482,12],[506,22,482,16,"replaced"],[506,32,482,24],[506,35,482,27],[506,40,482,32],[507,18,483,12],[507,23,483,17],[507,27,483,21,"cc"],[507,31,483,23],[507,34,483,26],[507,35,483,27],[507,37,483,29,"cc"],[507,41,483,31],[507,44,483,34],[507,48,483,38],[507,49,483,39,"_txs_by_internal_index"],[507,71,483,61],[507,72,483,62,"c"],[507,75,483,63],[507,76,483,64],[507,77,483,65,"length"],[507,83,483,71],[507,85,483,73,"cc"],[507,89,483,75],[507,91,483,77],[507,93,483,79],[508,20,484,14],[508,24,484,18],[508,28,484,22],[508,29,484,23,"_txs_by_internal_index"],[508,51,484,45],[508,52,484,46,"c"],[508,55,484,47],[508,56,484,48],[508,57,484,49,"cc"],[508,61,484,51],[508,62,484,52],[508,63,484,53,"txid"],[508,67,484,57],[508,72,484,62,"clonedTx"],[508,82,484,70],[508,83,484,71,"txid"],[508,87,484,75],[508,89,484,77],[509,22,485,16,"replaced"],[509,32,485,24],[509,35,485,27],[509,39,485,31],[510,22,486,16],[510,26,486,20],[510,27,486,21,"_txs_by_internal_index"],[510,49,486,43],[510,50,486,44,"c"],[510,53,486,45],[510,54,486,46],[510,55,486,47,"cc"],[510,59,486,49],[510,60,486,50],[510,63,486,53,"clonedTx"],[510,73,486,61],[511,20,487,14],[512,18,488,12],[513,18,489,12],[513,22,489,16],[513,23,489,17,"replaced"],[513,33,489,25],[513,35,489,27],[513,39,489,31],[513,40,489,32,"_txs_by_internal_index"],[513,62,489,54],[513,63,489,55,"c"],[513,66,489,56],[513,67,489,57],[513,68,489,58,"push"],[513,72,489,62],[513,73,489,63,"clonedTx"],[513,83,489,71],[513,84,489,72],[514,16,490,10],[515,14,491,8],[516,12,492,6],[517,10,493,4],[518,10,495,4],[518,15,495,9],[518,19,495,15,"pc"],[518,23,495,17],[518,27,495,21],[518,31,495,25],[518,32,495,26,"_receive_payment_codes"],[518,54,495,48],[518,56,495,50],[519,12,496,6],[519,17,496,11],[519,21,496,15,"c"],[519,24,496,16],[519,27,496,19],[519,28,496,20],[519,30,496,22,"c"],[519,33,496,23],[519,36,496,26],[519,40,496,30],[519,41,496,31,"_getNextFreePaymentCodeIndexReceive"],[519,76,496,66],[519,77,496,67,"pc"],[519,81,496,69],[519,82,496,70],[519,85,496,73],[519,89,496,77],[519,90,496,78,"gap_limit"],[519,99,496,87],[519,101,496,89,"c"],[519,104,496,90],[519,106,496,92],[519,108,496,94],[520,14,497,8],[520,19,497,13],[520,23,497,19,"tx"],[520,27,497,21],[520,31,497,25,"Object"],[520,37,497,31],[520,38,497,32,"values"],[520,44,497,38],[520,45,497,39,"txdatas"],[520,52,497,46],[520,53,497,47],[520,55,497,49],[521,16,498,10],[522,16,499,10],[522,21,499,15],[522,25,499,21,"vout"],[522,31,499,25],[522,35,499,29,"tx"],[522,39,499,31],[522,40,499,32,"vout"],[522,44,499,36],[522,46,499,38],[523,18,500,12],[523,22,500,16,"vout"],[523,28,500,20],[523,29,500,21,"scriptPubKey"],[523,41,500,33],[523,42,500,34,"addresses"],[523,51,500,43],[523,55,500,47,"vout"],[523,61,500,51],[523,62,500,52,"scriptPubKey"],[523,74,500,64],[523,75,500,65,"addresses"],[523,84,500,74],[523,85,500,75,"indexOf"],[523,92,500,82],[523,93,500,83],[523,97,500,87],[523,98,500,88,"_getBIP47AddressReceive"],[523,121,500,111],[523,122,500,112,"pc"],[523,126,500,114],[523,128,500,116,"c"],[523,131,500,117],[523,132,500,118],[523,133,500,119],[523,138,500,124],[523,139,500,125],[523,140,500,126],[523,142,500,128],[524,20,501,14],[525,20,502,14],[525,24,502,18],[525,25,502,19,"_txs_by_payment_code_index"],[525,51,502,45],[525,52,502,46,"pc"],[525,56,502,48],[525,57,502,49],[525,60,502,52],[525,64,502,56],[525,65,502,57,"_txs_by_payment_code_index"],[525,91,502,83],[525,92,502,84,"pc"],[525,96,502,86],[525,97,502,87],[525,101,502,91],[525,102,502,92],[525,103,502,93],[526,20,503,14],[526,24,503,18],[526,25,503,19,"_txs_by_payment_code_index"],[526,51,503,45],[526,52,503,46,"pc"],[526,56,503,48],[526,57,503,49],[526,58,503,50,"c"],[526,61,503,51],[526,62,503,52],[526,65,503,55],[526,69,503,59],[526,70,503,60,"_txs_by_payment_code_index"],[526,96,503,86],[526,97,503,87,"pc"],[526,101,503,89],[526,102,503,90],[526,103,503,91,"c"],[526,106,503,92],[526,107,503,93],[526,111,503,97],[526,113,503,99],[527,20,504,14],[527,24,504,27,"txVin"],[527,31,504,32],[527,34,504,62,"tx"],[527,38,504,64],[527,39,504,22,"vin"],[527,42,504,25],[528,22,504,40,"txVout"],[528,30,504,46],[528,33,504,62,"tx"],[528,37,504,64],[528,38,504,34,"vout"],[528,42,504,38],[529,22,504,51,"txRest"],[529,30,504,57],[529,37,504,57,"_objectWithoutProperties2"],[529,62,504,57],[529,63,504,57,"default"],[529,70,504,57],[529,72,504,62,"tx"],[529,76,504,64],[529,78,504,64,"_excluded5"],[529,88,504,64],[530,20,505,14],[530,24,505,20,"clonedTx"],[530,34,505,28],[530,37,505,28,"Object"],[530,43,505,28],[530,44,505,28,"assign"],[530,50,505,28],[530,55,505,36,"txRest"],[530,63,505,42],[531,22,505,44,"inputs"],[531,28,505,50],[531,30,505,52,"txVin"],[531,37,505,57],[531,38,505,58,"slice"],[531,43,505,63],[531,44,505,64],[531,45,505,65],[531,46,505,66],[532,22,505,68,"outputs"],[532,29,505,75],[532,31,505,77,"txVout"],[532,39,505,83],[532,40,505,84,"slice"],[532,45,505,89],[532,46,505,90],[532,47,505,91],[533,20,505,92],[533,22,505,94],[535,20,507,14],[536,20,508,14],[536,24,508,18,"replaced"],[536,34,508,26],[536,37,508,29],[536,42,508,34],[537,20,509,14],[537,25,509,19],[537,29,509,23,"cc"],[537,33,509,25],[537,36,509,28],[537,37,509,29],[537,39,509,31,"cc"],[537,43,509,33],[537,46,509,36],[537,50,509,40],[537,51,509,41,"_txs_by_payment_code_index"],[537,77,509,67],[537,78,509,68,"pc"],[537,82,509,70],[537,83,509,71],[537,84,509,72,"c"],[537,87,509,73],[537,88,509,74],[537,89,509,75,"length"],[537,95,509,81],[537,97,509,83,"cc"],[537,101,509,85],[537,103,509,87],[537,105,509,89],[538,22,510,16],[538,26,510,20],[538,30,510,24],[538,31,510,25,"_txs_by_payment_code_index"],[538,57,510,51],[538,58,510,52,"pc"],[538,62,510,54],[538,63,510,55],[538,64,510,56,"c"],[538,67,510,57],[538,68,510,58],[538,69,510,59,"cc"],[538,73,510,61],[538,74,510,62],[538,75,510,63,"txid"],[538,79,510,67],[538,84,510,72,"clonedTx"],[538,94,510,80],[538,95,510,81,"txid"],[538,99,510,85],[538,101,510,87],[539,24,511,18,"replaced"],[539,34,511,26],[539,37,511,29],[539,41,511,33],[540,24,512,18],[540,28,512,22],[540,29,512,23,"_txs_by_payment_code_index"],[540,55,512,49],[540,56,512,50,"pc"],[540,60,512,52],[540,61,512,53],[540,62,512,54,"c"],[540,65,512,55],[540,66,512,56],[540,67,512,57,"cc"],[540,71,512,59],[540,72,512,60],[540,75,512,63,"clonedTx"],[540,85,512,71],[541,22,513,16],[542,20,514,14],[543,20,515,14],[543,24,515,18],[543,25,515,19,"replaced"],[543,35,515,27],[543,37,515,29],[543,41,515,33],[543,42,515,34,"_txs_by_payment_code_index"],[543,68,515,60],[543,69,515,61,"pc"],[543,73,515,63],[543,74,515,64],[543,75,515,65,"c"],[543,78,515,66],[543,79,515,67],[543,80,515,68,"push"],[543,84,515,72],[543,85,515,73,"clonedTx"],[543,95,515,81],[543,96,515,82],[544,18,516,12],[545,16,517,10],[546,14,518,8],[547,12,519,6],[548,10,520,4],[549,10,522,4],[549,14,522,8],[549,15,522,9,"_lastTxFetch"],[549,27,522,21],[549,30,522,24],[549,31,522,25],[549,35,522,29,"Date"],[549,39,522,33],[549,40,522,34],[549,41,522,35],[550,8,523,2],[550,9,523,3],[551,8,523,3],[551,17,300,8,"fetchTransactions"],[551,34,300,25,"fetchTransactions"],[551,35,300,25],[552,10,300,25],[552,17,300,25,"_fetchTransactions"],[552,35,300,25],[552,36,300,25,"apply"],[552,41,300,25],[552,48,300,25,"arguments"],[552,57,300,25],[553,8,300,25],[554,8,300,25],[554,15,300,8,"fetchTransactions"],[554,32,300,25],[555,6,300,25],[556,4,300,25],[557,6,300,25,"key"],[557,9,300,25],[558,6,300,25,"value"],[558,11,300,25],[558,13,525,2],[558,22,525,2,"getTransactions"],[558,37,525,17,"getTransactions"],[558,38,525,17],[558,40,525,20],[559,8,526,4],[559,12,526,8,"txs"],[559,15,526,26],[559,18,526,29],[559,20,526,31],[560,8,528,4],[560,13,528,9],[560,17,528,15,"addressTxs"],[560,27,528,25],[560,31,528,29,"Object"],[560,37,528,35],[560,38,528,36,"values"],[560,44,528,42],[560,45,528,43],[560,49,528,47],[560,50,528,48,"_txs_by_external_index"],[560,72,528,70],[560,73,528,71],[560,75,528,73],[561,10,529,6,"txs"],[561,13,529,9],[561,16,529,12,"txs"],[561,19,529,15],[561,20,529,16,"concat"],[561,26,529,22],[561,27,529,23,"addressTxs"],[561,37,529,33],[561,38,529,34],[562,8,530,4],[563,8,531,4],[563,13,531,9],[563,17,531,15,"addressTxs"],[563,28,531,25],[563,32,531,29,"Object"],[563,38,531,35],[563,39,531,36,"values"],[563,45,531,42],[563,46,531,43],[563,50,531,47],[563,51,531,48,"_txs_by_internal_index"],[563,73,531,70],[563,74,531,71],[563,76,531,73],[564,10,532,6,"txs"],[564,13,532,9],[564,16,532,12,"txs"],[564,19,532,15],[564,20,532,16,"concat"],[564,26,532,22],[564,27,532,23,"addressTxs"],[564,38,532,33],[564,39,532,34],[565,8,533,4],[566,8,534,4],[566,12,534,8],[566,16,534,12],[566,17,534,13,"_receive_payment_codes"],[566,39,534,35],[566,41,534,37],[567,10,535,6],[567,15,535,11],[567,19,535,17,"pc"],[567,21,535,19],[567,25,535,23],[567,29,535,27],[567,30,535,28,"_receive_payment_codes"],[567,52,535,50],[567,54,535,52],[568,12,536,8],[568,16,536,12],[568,20,536,16],[568,21,536,17,"_txs_by_payment_code_index"],[568,47,536,43],[568,48,536,44,"pc"],[568,50,536,46],[568,51,536,47],[568,53,537,10],[568,58,537,15],[568,62,537,21,"addressTxs"],[568,74,537,31],[568,78,537,35,"Object"],[568,84,537,41],[568,85,537,42,"values"],[568,91,537,48],[568,92,537,49],[568,96,537,53],[568,97,537,54,"_txs_by_payment_code_index"],[568,123,537,80],[568,124,537,81,"pc"],[568,126,537,83],[568,127,537,84],[568,128,537,85],[568,130,537,87],[569,14,538,12,"txs"],[569,17,538,15],[569,20,538,18,"txs"],[569,23,538,21],[569,24,538,22,"concat"],[569,30,538,28],[569,31,538,29,"addressTxs"],[569,43,538,39],[569,44,538,40],[570,12,539,10],[571,10,540,6],[572,8,541,4],[573,8,543,4],[573,12,543,8,"txs"],[573,15,543,11],[573,16,543,12,"length"],[573,22,543,18],[573,27,543,23],[573,28,543,24],[573,30,543,26],[573,37,543,33],[573,39,543,35],[573,40,543,36],[573,41,543,37],[575,8,545,4],[576,8,546,4],[577,8,547,4],[577,12,547,10,"ownedAddressesHashmap"],[577,33,547,56],[577,36,547,59],[577,37,547,60],[577,38,547,61],[578,8,548,4],[578,13,548,9],[578,17,548,13,"c"],[578,18,548,14],[578,21,548,17],[578,22,548,18],[578,24,548,20,"c"],[578,25,548,21],[578,28,548,24],[578,32,548,28],[578,33,548,29,"next_free_address_index"],[578,56,548,52],[578,59,548,55],[578,60,548,56],[578,62,548,58,"c"],[578,63,548,59],[578,65,548,61],[578,67,548,63],[579,10,549,6,"ownedAddressesHashmap"],[579,31,549,27],[579,32,549,28],[579,36,549,32],[579,37,549,33,"_getExternalAddressByIndex"],[579,63,549,59],[579,64,549,60,"c"],[579,65,549,61],[579,66,549,62],[579,67,549,63],[579,70,549,66],[579,74,549,70],[580,8,550,4],[581,8,551,4],[581,13,551,9],[581,17,551,13,"c"],[581,20,551,14],[581,23,551,17],[581,24,551,18],[581,26,551,20,"c"],[581,29,551,21],[581,32,551,24],[581,36,551,28],[581,37,551,29,"next_free_change_address_index"],[581,67,551,59],[581,70,551,62],[581,71,551,63],[581,73,551,65,"c"],[581,76,551,66],[581,78,551,68],[581,80,551,70],[582,10,552,6,"ownedAddressesHashmap"],[582,31,552,27],[582,32,552,28],[582,36,552,32],[582,37,552,33,"_getInternalAddressByIndex"],[582,63,552,59],[582,64,552,60,"c"],[582,67,552,61],[582,68,552,62],[582,69,552,63],[582,72,552,66],[582,76,552,70],[583,8,553,4],[584,8,554,4],[584,12,554,8],[584,16,554,12],[584,17,554,13,"_receive_payment_codes"],[584,39,554,35],[584,41,555,6],[584,46,555,11],[584,50,555,17,"pc"],[584,54,555,19],[584,58,555,23],[584,62,555,27],[584,63,555,28,"_receive_payment_codes"],[584,85,555,50],[584,87,555,52],[585,10,556,8],[585,15,556,13],[585,19,556,17,"c"],[585,22,556,18],[585,25,556,21],[585,26,556,22],[585,28,556,24,"c"],[585,31,556,25],[585,34,556,28],[585,38,556,32],[585,39,556,33,"_getNextFreePaymentCodeIndexReceive"],[585,74,556,68],[585,75,556,69,"pc"],[585,79,556,71],[585,80,556,72],[585,83,556,75],[585,84,556,76],[585,86,556,78,"c"],[585,89,556,79],[585,91,556,81],[585,93,556,83],[586,12,557,10,"ownedAddressesHashmap"],[586,33,557,31],[586,34,557,32],[586,38,557,36],[586,39,557,37,"_getBIP47AddressReceive"],[586,62,557,60],[586,63,557,61,"pc"],[586,67,557,63],[586,69,557,65,"c"],[586,72,557,66],[586,73,557,67],[586,74,557,68],[586,77,557,71],[586,81,557,75],[587,10,558,8],[588,8,559,6],[589,8,560,4],[590,8,561,4],[590,12,561,8],[590,16,561,12],[590,17,561,13,"getAddress"],[590,27,561,23],[590,28,561,24],[590,29,561,25],[590,31,561,27,"ownedAddressesHashmap"],[590,52,561,48],[590,53,561,49,"String"],[590,59,561,55],[590,60,561,56],[590,64,561,60],[590,65,561,61,"getAddress"],[590,75,561,71],[590,76,561,72],[590,77,561,73],[590,78,561,74],[590,79,561,75],[590,82,561,78],[590,86,561,82],[591,8,563,4],[591,12,563,10,"ret"],[591,15,563,28],[591,18,563,31],[591,20,563,33],[592,8,564,4],[592,13,564,9],[592,17,564,15,"tx"],[592,19,564,17],[592,23,564,21,"txs"],[592,26,564,24],[592,28,564,26],[593,10,565,6,"tx"],[593,12,565,8],[593,13,565,9,"received"],[593,21,565,17],[593,24,565,20,"tx"],[593,26,565,22],[593,27,565,23,"blocktime"],[593,36,565,32],[593,39,565,35],[593,43,565,39],[594,10,566,6],[594,14,566,10],[594,15,566,11,"tx"],[594,17,566,13],[594,18,566,14,"blocktime"],[594,27,566,23],[594,29,566,25,"tx"],[594,31,566,27],[594,32,566,28,"received"],[594,40,566,36],[594,43,566,39],[594,44,566,40],[594,48,566,44,"Date"],[594,52,566,48],[594,53,566,49],[594,54,566,50],[594,57,566,53],[594,59,566,55],[594,62,566,58],[594,66,566,62],[594,67,566,63],[594,68,566,64],[595,10,567,6,"tx"],[595,12,567,8],[595,13,567,9,"confirmations"],[595,26,567,22],[595,29,567,25,"tx"],[595,31,567,27],[595,32,567,28,"confirmations"],[595,45,567,41],[595,49,567,45],[595,50,567,46],[595,51,567,47],[595,52,567,48],[596,10,568,6,"tx"],[596,12,568,8],[596,13,568,9,"hash"],[596,17,568,13],[596,20,568,16,"tx"],[596,22,568,18],[596,23,568,19,"txid"],[596,27,568,23],[597,10,569,6,"tx"],[597,12,569,8],[597,13,569,9,"value"],[597,18,569,14],[597,21,569,17],[597,22,569,18],[598,10,571,6],[598,15,571,11],[598,19,571,17,"vin"],[598,22,571,20],[598,26,571,24,"tx"],[598,28,571,26],[598,29,571,27,"inputs"],[598,35,571,33],[598,37,571,35],[599,12,571,35],[599,16,571,35,"_vin$addresses"],[599,30,571,35],[600,12,572,8],[601,12,573,8],[601,16,573,13,"vin"],[601,19,573,16],[601,20,573,17,"address"],[601,27,573,24],[601,31,573,28,"ownedAddressesHashmap"],[601,52,573,49],[601,53,573,50,"vin"],[601,56,573,53],[601,57,573,54,"address"],[601,64,573,61],[601,65,573,62],[601,69,573,68],[601,70,573,68,"_vin$addresses"],[601,84,573,68],[601,87,573,68,"vin"],[601,90,573,71],[601,91,573,72,"addresses"],[601,100,573,81],[601,113,573,68,"_vin$addresses"],[601,127,573,68],[601,128,573,84],[601,129,573,85],[601,130,573,86],[601,134,573,90,"ownedAddressesHashmap"],[601,155,573,111],[601,156,573,112,"vin"],[601,159,573,115],[601,160,573,116,"addresses"],[601,169,573,125],[601,170,573,126],[601,171,573,127],[601,172,573,128],[601,173,573,130],[601,175,573,132],[602,14,573,132],[602,18,573,132,"_vin$value"],[602,28,573,132],[603,14,574,10,"tx"],[603,16,574,12],[603,17,574,13,"value"],[603,22,574,18],[603,26,574,22],[603,30,574,26,"BigNumber"],[603,48,574,35],[603,50,574,35,"_vin$value"],[603,60,574,35],[603,63,574,36,"vin"],[603,66,574,39],[603,67,574,40,"value"],[603,72,574,45],[603,84,574,45,"_vin$value"],[603,94,574,45],[603,97,574,49],[603,98,574,50],[603,99,574,51],[603,100,574,52,"multipliedBy"],[603,112,574,64],[603,113,574,65],[603,122,574,74],[603,123,574,75],[603,124,574,76,"toNumber"],[603,132,574,84],[603,133,574,85],[603,134,574,86],[604,12,575,8],[605,10,576,6],[606,10,578,6],[606,15,578,11],[606,19,578,17,"vout"],[606,23,578,21],[606,27,578,25,"tx"],[606,29,578,27],[606,30,578,28,"outputs"],[606,37,578,35],[606,39,578,37],[607,12,578,37],[607,16,578,37,"_vout$scriptPubKey$ad"],[607,37,578,37],[608,12,579,8],[609,12,580,8],[609,16,580,12],[609,17,580,12,"_vout$scriptPubKey$ad"],[609,38,580,12],[609,41,580,12,"vout"],[609,45,580,16],[609,46,580,17,"scriptPubKey"],[609,58,580,29],[609,59,580,30,"addresses"],[609,68,580,39],[609,81,580,12,"_vout$scriptPubKey$ad"],[609,102,580,12],[609,103,580,42],[609,104,580,43],[609,105,580,44],[609,109,580,48,"ownedAddressesHashmap"],[609,130,580,69],[609,131,580,70,"vout"],[609,135,580,74],[609,136,580,75,"scriptPubKey"],[609,148,580,87],[609,149,580,88,"addresses"],[609,158,580,97],[609,159,580,98],[609,160,580,99],[609,161,580,100],[609,162,580,101],[609,164,580,103],[610,14,581,10,"tx"],[610,16,581,12],[610,17,581,13,"value"],[610,22,581,18],[610,26,581,22],[610,30,581,26,"BigNumber"],[610,48,581,35],[610,49,581,36,"vout"],[610,53,581,40],[610,54,581,41,"value"],[610,59,581,46],[610,60,581,47],[610,61,581,48,"multipliedBy"],[610,73,581,60],[610,74,581,61],[610,83,581,70],[610,84,581,71],[610,85,581,72,"toNumber"],[610,93,581,80],[610,94,581,81],[610,95,581,82],[611,12,582,8],[612,10,583,6],[613,10,585,6],[613,14,585,10],[613,18,585,14],[613,19,585,15,"allowBIP47"],[613,29,585,25],[613,30,585,26],[613,31,585,27],[613,35,585,31],[613,39,585,35],[613,40,585,36,"isBIP47Enabled"],[613,54,585,50],[613,55,585,51],[613,56,585,52],[613,58,585,54],[614,12,586,8,"tx"],[614,14,586,10],[614,15,586,11,"counterparty"],[614,27,586,23],[614,30,586,26],[614,34,586,30],[614,35,586,31,"getBip47CounterpartyByTx"],[614,59,586,55],[614,60,586,56,"tx"],[614,62,586,58],[614,63,586,59],[615,10,587,6],[616,10,588,6,"ret"],[616,13,588,9],[616,14,588,10,"push"],[616,18,588,14],[616,19,588,15,"tx"],[616,21,588,17],[616,22,588,18],[617,8,589,4],[619,8,591,4],[620,8,592,4],[620,12,592,10,"usedTxIds"],[620,21,592,43],[620,24,592,46],[620,25,592,47],[620,26,592,48],[621,8,593,4],[621,12,593,10,"ret2"],[621,16,593,14],[621,19,593,17],[621,21,593,19],[622,8,594,4],[622,13,594,9],[622,17,594,15,"tx"],[622,21,594,17],[622,25,594,21,"ret"],[622,28,594,24],[622,30,594,26],[623,10,595,6],[623,14,595,10],[623,15,595,11,"usedTxIds"],[623,24,595,20],[623,25,595,21,"tx"],[623,29,595,23],[623,30,595,24,"txid"],[623,34,595,28],[623,35,595,29],[623,37,595,31,"ret2"],[623,41,595,35],[623,42,595,36,"push"],[623,46,595,40],[623,47,595,41,"tx"],[623,51,595,43],[623,52,595,44],[624,10,596,6,"usedTxIds"],[624,19,596,15],[624,20,596,16,"tx"],[624,24,596,18],[624,25,596,19,"txid"],[624,29,596,23],[624,30,596,24],[624,33,596,27],[624,34,596,28],[625,8,597,4],[626,8,599,4],[626,15,599,11,"ret2"],[626,19,599,15],[626,20,599,16,"sort"],[626,24,599,20],[626,25,599,21],[626,35,599,31,"a"],[626,36,599,32],[626,38,599,34,"b"],[626,39,599,35],[626,41,599,37],[627,10,600,6],[627,17,600,13,"Number"],[627,23,600,19],[627,24,600,20,"b"],[627,25,600,21],[627,26,600,22,"received"],[627,34,600,30],[627,35,600,31],[627,38,600,34,"Number"],[627,44,600,40],[627,45,600,41,"a"],[627,46,600,42],[627,47,600,43,"received"],[627,55,600,51],[627,56,600,52],[628,8,601,4],[628,9,601,5],[628,10,601,6],[629,6,602,2],[630,4,602,3],[631,6,602,3,"key"],[631,9,602,3],[632,6,602,3,"value"],[632,11,602,3],[633,8,602,3],[633,12,602,3,"_binarySearchIterationForInternalAddress2"],[633,53,602,3],[633,60,602,3,"_asyncToGenerator2"],[633,78,602,3],[633,79,602,3,"default"],[633,86,602,3],[633,88,604,2],[633,99,604,49,"index"],[633,104,604,62],[633,106,604,64],[634,10,604,64],[634,14,604,64,"_this2"],[634,20,604,64],[635,10,605,4],[635,14,605,10,"gerenateChunkAddresses"],[635,36,605,32],[635,39,605,35],[635,48,605,10,"gerenateChunkAddresses"],[635,70,605,32,"gerenateChunkAddresses"],[635,71,605,36,"chunkNum"],[635,79,605,52],[635,81,605,57],[636,12,606,6],[636,16,606,12,"ret"],[636,19,606,15],[636,22,606,18],[636,24,606,20],[637,12,607,6],[637,17,607,11],[637,21,607,15,"c"],[637,22,607,16],[637,25,607,19,"_this2"],[637,31,607,23],[637,32,607,24,"gap_limit"],[637,41,607,33],[637,44,607,36,"chunkNum"],[637,52,607,44],[637,54,607,46,"c"],[637,55,607,47],[637,58,607,50,"_this2"],[637,64,607,54],[637,65,607,55,"gap_limit"],[637,74,607,64],[637,78,607,68,"chunkNum"],[637,86,607,76],[637,89,607,79],[637,90,607,80],[637,91,607,81],[637,93,607,83,"c"],[637,94,607,84],[637,96,607,86],[637,98,607,88],[638,14,608,8,"ret"],[638,17,608,11],[638,18,608,12,"push"],[638,22,608,16],[638,23,608,17,"_this2"],[638,29,608,21],[638,30,608,22,"_getInternalAddressByIndex"],[638,56,608,48],[638,57,608,49,"c"],[638,58,608,50],[638,59,608,51],[638,60,608,52],[639,12,609,6],[640,12,610,6],[640,19,610,13,"ret"],[640,22,610,16],[641,10,611,4],[641,11,611,5],[642,10,613,4],[642,14,613,8,"lastChunkWithUsedAddressesNum"],[642,43,613,37],[642,46,613,40],[642,50,613,44],[643,10,614,4],[643,14,614,8,"lastHistoriesWithUsedAddresses"],[643,44,614,38],[643,47,614,41],[643,51,614,45],[644,10,615,4],[644,15,615,9],[644,19,615,13,"c"],[644,20,615,14],[644,23,615,17],[644,24,615,18],[644,26,615,20,"c"],[644,27,615,21],[644,30,615,24,"Math"],[644,34,615,28],[644,35,615,29,"round"],[644,40,615,34],[644,41,615,35,"index"],[644,46,615,40],[644,49,615,43],[644,53,615,47],[644,54,615,48,"gap_limit"],[644,63,615,57],[644,64,615,58],[644,66,615,60,"c"],[644,67,615,61],[644,69,615,63],[644,71,615,65],[645,12,616,6],[645,16,616,12,"histories"],[645,25,616,21],[645,34,616,30,"BlueElectrum"],[645,46,616,42],[645,47,616,43,"multiGetHistoryByAddress"],[645,71,616,67],[645,72,616,68,"gerenateChunkAddresses"],[645,94,616,90],[645,95,616,91,"c"],[645,96,616,92],[645,97,616,93],[645,98,616,94],[646,12,617,6],[647,12,618,6],[647,16,618,10],[647,20,618,14],[647,21,618,15,"constructor"],[647,32,618,26],[647,33,618,27,"_getTransactionsFromHistories"],[647,62,618,56],[647,63,618,57,"histories"],[647,72,618,66],[647,73,618,67],[647,74,618,68,"length"],[647,80,618,74],[647,83,618,77],[647,84,618,78],[647,86,618,80],[648,14,619,8],[649,14,620,8,"lastChunkWithUsedAddressesNum"],[649,43,620,37],[649,46,620,40,"c"],[649,47,620,41],[650,14,621,8,"lastHistoriesWithUsedAddresses"],[650,44,621,38],[650,47,621,41,"histories"],[650,56,621,50],[651,12,622,6],[651,13,622,7],[651,19,622,13],[652,14,623,8],[653,14,624,8],[654,12,625,6],[655,10,626,4],[656,10,628,4],[656,14,628,8,"lastUsedIndex"],[656,27,628,21],[656,30,628,24],[656,31,628,25],[657,10,630,4],[657,14,630,8,"lastHistoriesWithUsedAddresses"],[657,44,630,38],[657,46,630,40],[658,12,631,6],[659,12,632,6],[659,17,633,8],[659,21,633,12,"c"],[659,24,633,13],[659,27,633,16,"Number"],[659,33,633,22],[659,34,633,23,"lastChunkWithUsedAddressesNum"],[659,63,633,52],[659,64,633,53],[659,67,633,56],[659,71,633,60],[659,72,633,61,"gap_limit"],[659,81,633,70],[659,83,634,8,"c"],[659,86,634,9],[659,89,634,12,"Number"],[659,95,634,18],[659,96,634,19,"lastChunkWithUsedAddressesNum"],[659,125,634,48],[659,126,634,49],[659,129,634,52],[659,133,634,56],[659,134,634,57,"gap_limit"],[659,143,634,66],[659,146,634,69],[659,150,634,73],[659,151,634,74,"gap_limit"],[659,160,634,83],[659,162,635,8,"c"],[659,165,635,9],[659,167,635,11],[659,169,636,8],[660,14,637,8],[660,18,637,14,"address"],[660,25,637,21],[660,28,637,24],[660,32,637,28],[660,33,637,29,"_getInternalAddressByIndex"],[660,59,637,55],[660,60,637,56,"c"],[660,63,637,57],[660,64,637,58],[661,14,638,8],[661,18,638,12,"lastHistoriesWithUsedAddresses"],[661,48,638,42],[661,49,638,43,"address"],[661,56,638,50],[661,57,638,51],[661,61,638,55,"lastHistoriesWithUsedAddresses"],[661,91,638,85],[661,92,638,86,"address"],[661,99,638,93],[661,100,638,94],[661,101,638,95,"length"],[661,107,638,101],[661,110,638,104],[661,111,638,105],[661,113,638,107],[662,16,639,10,"lastUsedIndex"],[662,29,639,23],[662,32,639,26,"Math"],[662,36,639,30],[662,37,639,31,"max"],[662,40,639,34],[662,41,639,35,"c"],[662,44,639,36],[662,46,639,38,"lastUsedIndex"],[662,59,639,51],[662,60,639,52],[662,63,639,55],[662,64,639,56],[662,65,639,57],[662,66,639,58],[663,14,640,8],[664,12,641,6],[665,10,642,4],[666,10,644,4],[666,17,644,11,"lastUsedIndex"],[666,30,644,24],[667,8,645,2],[667,9,645,3],[668,8,645,3],[668,17,604,8,"_binarySearchIterationForInternalAddress"],[668,57,604,48,"_binarySearchIterationForInternalAddress"],[668,58,604,48,"_x2"],[668,61,604,48],[669,10,604,48],[669,17,604,48,"_binarySearchIterationForInternalAddress2"],[669,58,604,48],[669,59,604,48,"apply"],[669,64,604,48],[669,71,604,48,"arguments"],[669,80,604,48],[670,8,604,48],[671,8,604,48],[671,15,604,8,"_binarySearchIterationForInternalAddress"],[671,55,604,48],[672,6,604,48],[673,4,604,48],[674,6,604,48,"key"],[674,9,604,48],[675,6,604,48,"value"],[675,11,604,48],[676,8,604,48],[676,12,604,48,"_binarySearchIterationForExternalAddress2"],[676,53,604,48],[676,60,604,48,"_asyncToGenerator2"],[676,78,604,48],[676,79,604,48,"default"],[676,86,604,48],[676,88,647,2],[676,99,647,49,"index"],[676,104,647,62],[676,106,647,64],[677,10,647,64],[677,14,647,64,"_this3"],[677,20,647,64],[678,10,648,4],[678,14,648,10,"gerenateChunkAddresses"],[678,36,648,32],[678,39,648,35],[678,48,648,10,"gerenateChunkAddresses"],[678,70,648,32,"gerenateChunkAddresses"],[678,71,648,36,"chunkNum"],[678,79,648,52],[678,81,648,57],[679,12,649,6],[679,16,649,12,"ret"],[679,19,649,15],[679,22,649,18],[679,24,649,20],[680,12,650,6],[680,17,650,11],[680,21,650,15,"c"],[680,22,650,16],[680,25,650,19,"_this3"],[680,31,650,23],[680,32,650,24,"gap_limit"],[680,41,650,33],[680,44,650,36,"chunkNum"],[680,52,650,44],[680,54,650,46,"c"],[680,55,650,47],[680,58,650,50,"_this3"],[680,64,650,54],[680,65,650,55,"gap_limit"],[680,74,650,64],[680,78,650,68,"chunkNum"],[680,86,650,76],[680,89,650,79],[680,90,650,80],[680,91,650,81],[680,93,650,83,"c"],[680,94,650,84],[680,96,650,86],[680,98,650,88],[681,14,651,8,"ret"],[681,17,651,11],[681,18,651,12,"push"],[681,22,651,16],[681,23,651,17,"_this3"],[681,29,651,21],[681,30,651,22,"_getExternalAddressByIndex"],[681,56,651,48],[681,57,651,49,"c"],[681,58,651,50],[681,59,651,51],[681,60,651,52],[682,12,652,6],[683,12,653,6],[683,19,653,13,"ret"],[683,22,653,16],[684,10,654,4],[684,11,654,5],[685,10,656,4],[685,14,656,8,"lastChunkWithUsedAddressesNum"],[685,43,656,37],[685,46,656,40],[685,50,656,44],[686,10,657,4],[686,14,657,8,"lastHistoriesWithUsedAddresses"],[686,44,657,38],[686,47,657,41],[686,51,657,45],[687,10,658,4],[687,15,658,9],[687,19,658,13,"c"],[687,20,658,14],[687,23,658,17],[687,24,658,18],[687,26,658,20,"c"],[687,27,658,21],[687,30,658,24,"Math"],[687,34,658,28],[687,35,658,29,"round"],[687,40,658,34],[687,41,658,35,"index"],[687,46,658,40],[687,49,658,43],[687,53,658,47],[687,54,658,48,"gap_limit"],[687,63,658,57],[687,64,658,58],[687,66,658,60,"c"],[687,67,658,61],[687,69,658,63],[687,71,658,65],[688,12,659,6],[688,16,659,12,"histories"],[688,25,659,21],[688,34,659,30,"BlueElectrum"],[688,46,659,42],[688,47,659,43,"multiGetHistoryByAddress"],[688,71,659,67],[688,72,659,68,"gerenateChunkAddresses"],[688,94,659,90],[688,95,659,91,"c"],[688,96,659,92],[688,97,659,93],[688,98,659,94],[689,12,660,6],[690,12,661,6],[690,16,661,10],[690,20,661,14],[690,21,661,15,"constructor"],[690,32,661,26],[690,33,661,27,"_getTransactionsFromHistories"],[690,62,661,56],[690,63,661,57,"histories"],[690,72,661,66],[690,73,661,67],[690,74,661,68,"length"],[690,80,661,74],[690,83,661,77],[690,84,661,78],[690,86,661,80],[691,14,662,8],[692,14,663,8,"lastChunkWithUsedAddressesNum"],[692,43,663,37],[692,46,663,40,"c"],[692,47,663,41],[693,14,664,8,"lastHistoriesWithUsedAddresses"],[693,44,664,38],[693,47,664,41,"histories"],[693,56,664,50],[694,12,665,6],[694,13,665,7],[694,19,665,13],[695,14,666,8],[696,14,667,8],[697,12,668,6],[698,10,669,4],[699,10,671,4],[699,14,671,8,"lastUsedIndex"],[699,27,671,21],[699,30,671,24],[699,31,671,25],[700,10,673,4],[700,14,673,8,"lastHistoriesWithUsedAddresses"],[700,44,673,38],[700,46,673,40],[701,12,674,6],[702,12,675,6],[702,17,676,8],[702,21,676,12,"c"],[702,25,676,13],[702,28,676,16,"Number"],[702,34,676,22],[702,35,676,23,"lastChunkWithUsedAddressesNum"],[702,64,676,52],[702,65,676,53],[702,68,676,56],[702,72,676,60],[702,73,676,61,"gap_limit"],[702,82,676,70],[702,84,677,8,"c"],[702,88,677,9],[702,91,677,12,"Number"],[702,97,677,18],[702,98,677,19,"lastChunkWithUsedAddressesNum"],[702,127,677,48],[702,128,677,49],[702,131,677,52],[702,135,677,56],[702,136,677,57,"gap_limit"],[702,145,677,66],[702,148,677,69],[702,152,677,73],[702,153,677,74,"gap_limit"],[702,162,677,83],[702,164,678,8,"c"],[702,168,678,9],[702,170,678,11],[702,172,679,8],[703,14,680,8],[703,18,680,14,"address"],[703,25,680,21],[703,28,680,24],[703,32,680,28],[703,33,680,29,"_getExternalAddressByIndex"],[703,59,680,55],[703,60,680,56,"c"],[703,64,680,57],[703,65,680,58],[704,14,681,8],[704,18,681,12,"lastHistoriesWithUsedAddresses"],[704,48,681,42],[704,49,681,43,"address"],[704,56,681,50],[704,57,681,51],[704,61,681,55,"lastHistoriesWithUsedAddresses"],[704,91,681,85],[704,92,681,86,"address"],[704,99,681,93],[704,100,681,94],[704,101,681,95,"length"],[704,107,681,101],[704,110,681,104],[704,111,681,105],[704,113,681,107],[705,16,682,10,"lastUsedIndex"],[705,29,682,23],[705,32,682,26,"Math"],[705,36,682,30],[705,37,682,31,"max"],[705,40,682,34],[705,41,682,35,"c"],[705,45,682,36],[705,47,682,38,"lastUsedIndex"],[705,60,682,51],[705,61,682,52],[705,64,682,55],[705,65,682,56],[705,66,682,57],[705,67,682,58],[706,14,683,8],[707,12,684,6],[708,10,685,4],[709,10,687,4],[709,17,687,11,"lastUsedIndex"],[709,30,687,24],[710,8,688,2],[710,9,688,3],[711,8,688,3],[711,17,647,8,"_binarySearchIterationForExternalAddress"],[711,57,647,48,"_binarySearchIterationForExternalAddress"],[711,58,647,48,"_x3"],[711,61,647,48],[712,10,647,48],[712,17,647,48,"_binarySearchIterationForExternalAddress2"],[712,58,647,48],[712,59,647,48,"apply"],[712,64,647,48],[712,71,647,48,"arguments"],[712,80,647,48],[713,8,647,48],[714,8,647,48],[714,15,647,8,"_binarySearchIterationForExternalAddress"],[714,55,647,48],[715,6,647,48],[716,4,647,48],[717,6,647,48,"key"],[717,9,647,48],[718,6,647,48,"value"],[718,11,647,48],[719,8,647,48],[719,12,647,48,"_binarySearchIterationForBIP47Address2"],[719,50,647,48],[719,57,647,48,"_asyncToGenerator2"],[719,75,647,48],[719,76,647,48,"default"],[719,83,647,48],[719,85,690,2],[719,96,690,46,"paymentCode"],[719,107,690,65],[719,109,690,67,"index"],[719,114,690,80],[719,116,690,82],[720,10,690,82],[720,14,690,82,"_this4"],[720,20,690,82],[721,10,691,4],[721,14,691,10,"generateChunkAddresses"],[721,36,691,32],[721,39,691,35],[721,48,691,10,"generateChunkAddresses"],[721,70,691,32,"generateChunkAddresses"],[721,71,691,36,"chunkNum"],[721,79,691,52],[721,81,691,57],[722,12,692,6],[722,16,692,12,"ret"],[722,19,692,15],[722,22,692,18],[722,24,692,20],[723,12,693,6],[723,17,693,11],[723,21,693,15,"c"],[723,22,693,16],[723,25,693,19,"_this4"],[723,31,693,23],[723,32,693,24,"gap_limit"],[723,41,693,33],[723,44,693,36,"chunkNum"],[723,52,693,44],[723,54,693,46,"c"],[723,55,693,47],[723,58,693,50,"_this4"],[723,64,693,54],[723,65,693,55,"gap_limit"],[723,74,693,64],[723,78,693,68,"chunkNum"],[723,86,693,76],[723,89,693,79],[723,90,693,80],[723,91,693,81],[723,93,693,83,"c"],[723,94,693,84],[723,96,693,86],[723,98,693,88],[724,14,694,8,"ret"],[724,17,694,11],[724,18,694,12,"push"],[724,22,694,16],[724,23,694,17,"_this4"],[724,29,694,21],[724,30,694,22,"_getBIP47AddressReceive"],[724,53,694,45],[724,54,694,46,"paymentCode"],[724,65,694,57],[724,67,694,59,"c"],[724,68,694,60],[724,69,694,61],[724,70,694,62],[725,12,695,6],[726,12,696,6],[726,19,696,13,"ret"],[726,22,696,16],[727,10,697,4],[727,11,697,5],[728,10,699,4],[728,14,699,8,"lastChunkWithUsedAddressesNum"],[728,43,699,37],[728,46,699,40],[728,50,699,44],[729,10,700,4],[729,14,700,8,"lastHistoriesWithUsedAddresses"],[729,44,700,38],[729,47,700,41],[729,51,700,45],[730,10,701,4],[730,15,701,9],[730,19,701,13,"c"],[730,20,701,14],[730,23,701,17],[730,24,701,18],[730,26,701,20,"c"],[730,27,701,21],[730,30,701,24,"Math"],[730,34,701,28],[730,35,701,29,"round"],[730,40,701,34],[730,41,701,35,"index"],[730,46,701,40],[730,49,701,43],[730,53,701,47],[730,54,701,48,"gap_limit"],[730,63,701,57],[730,64,701,58],[730,66,701,60,"c"],[730,67,701,61],[730,69,701,63],[730,71,701,65],[731,12,702,6],[731,16,702,12,"histories"],[731,25,702,21],[731,34,702,30,"BlueElectrum"],[731,46,702,42],[731,47,702,43,"multiGetHistoryByAddress"],[731,71,702,67],[731,72,702,68,"generateChunkAddresses"],[731,94,702,90],[731,95,702,91,"c"],[731,96,702,92],[731,97,702,93],[731,98,702,94],[732,12,703,6],[733,12,704,6],[733,16,704,10],[733,20,704,14],[733,21,704,15,"constructor"],[733,32,704,26],[733,33,704,27,"_getTransactionsFromHistories"],[733,62,704,56],[733,63,704,57,"histories"],[733,72,704,66],[733,73,704,67],[733,74,704,68,"length"],[733,80,704,74],[733,83,704,77],[733,84,704,78],[733,86,704,80],[734,14,705,8],[735,14,706,8,"lastChunkWithUsedAddressesNum"],[735,43,706,37],[735,46,706,40,"c"],[735,47,706,41],[736,14,707,8,"lastHistoriesWithUsedAddresses"],[736,44,707,38],[736,47,707,41,"histories"],[736,56,707,50],[737,12,708,6],[737,13,708,7],[737,19,708,13],[738,14,709,8],[739,14,710,8],[740,12,711,6],[741,10,712,4],[742,10,714,4],[742,14,714,8,"lastUsedIndex"],[742,27,714,21],[742,30,714,24],[742,31,714,25],[743,10,716,4],[743,14,716,8,"lastHistoriesWithUsedAddresses"],[743,44,716,38],[743,46,716,40],[744,12,717,6],[745,12,718,6],[745,17,719,8],[745,21,719,12,"c"],[745,25,719,13],[745,28,719,16,"Number"],[745,34,719,22],[745,35,719,23,"lastChunkWithUsedAddressesNum"],[745,64,719,52],[745,65,719,53],[745,68,719,56],[745,72,719,60],[745,73,719,61,"gap_limit"],[745,82,719,70],[745,84,720,8,"c"],[745,88,720,9],[745,91,720,12,"Number"],[745,97,720,18],[745,98,720,19,"lastChunkWithUsedAddressesNum"],[745,127,720,48],[745,128,720,49],[745,131,720,52],[745,135,720,56],[745,136,720,57,"gap_limit"],[745,145,720,66],[745,148,720,69],[745,152,720,73],[745,153,720,74,"gap_limit"],[745,162,720,83],[745,164,721,8,"c"],[745,168,721,9],[745,170,721,11],[745,172,722,8],[746,14,723,8],[746,18,723,14,"address"],[746,25,723,21],[746,28,723,24],[746,32,723,28],[746,33,723,29,"_getBIP47AddressReceive"],[746,56,723,52],[746,57,723,53,"paymentCode"],[746,68,723,64],[746,70,723,66,"c"],[746,74,723,67],[746,75,723,68],[747,14,724,8],[747,18,724,12,"lastHistoriesWithUsedAddresses"],[747,48,724,42],[747,49,724,43,"address"],[747,56,724,50],[747,57,724,51],[747,61,724,55,"lastHistoriesWithUsedAddresses"],[747,91,724,85],[747,92,724,86,"address"],[747,99,724,93],[747,100,724,94],[747,101,724,95,"length"],[747,107,724,101],[747,110,724,104],[747,111,724,105],[747,113,724,107],[748,16,725,10,"lastUsedIndex"],[748,29,725,23],[748,32,725,26,"Math"],[748,36,725,30],[748,37,725,31,"max"],[748,40,725,34],[748,41,725,35,"c"],[748,45,725,36],[748,47,725,38,"lastUsedIndex"],[748,60,725,51],[748,61,725,52],[748,64,725,55],[748,65,725,56],[748,66,725,57],[748,67,725,58],[749,14,726,8],[750,12,727,6],[751,10,728,4],[752,10,730,4],[752,17,730,11,"lastUsedIndex"],[752,30,730,24],[753,8,731,2],[753,9,731,3],[754,8,731,3],[754,17,690,8,"_binarySearchIterationForBIP47Address"],[754,54,690,45,"_binarySearchIterationForBIP47Address"],[754,55,690,45,"_x4"],[754,58,690,45],[754,60,690,45,"_x5"],[754,63,690,45],[755,10,690,45],[755,17,690,45,"_binarySearchIterationForBIP47Address2"],[755,55,690,45],[755,56,690,45,"apply"],[755,61,690,45],[755,68,690,45,"arguments"],[755,77,690,45],[756,8,690,45],[757,8,690,45],[757,15,690,8,"_binarySearchIterationForBIP47Address"],[757,52,690,45],[758,6,690,45],[759,4,690,45],[760,6,690,45,"key"],[760,9,690,45],[761,6,690,45,"value"],[761,11,690,45],[762,8,690,45],[762,12,690,45,"_fetchBalance2"],[762,26,690,45],[762,33,690,45,"_asyncToGenerator2"],[762,51,690,45],[762,52,690,45,"default"],[762,59,690,45],[762,61,733,2],[762,74,733,23],[763,10,734,4],[763,14,734,8],[764,12,735,6],[764,16,735,10],[764,20,735,14],[764,21,735,15,"next_free_change_address_index"],[764,51,735,45],[764,56,735,50],[764,57,735,51],[764,61,735,55],[764,65,735,59],[764,66,735,60,"next_free_address_index"],[764,89,735,83],[764,94,735,88],[764,95,735,89],[764,97,735,91],[765,14,736,8],[766,14,737,8],[766,18,737,12],[766,19,737,13,"next_free_change_address_index"],[766,49,737,43],[766,58,737,52],[766,62,737,56],[766,63,737,57,"_binarySearchIterationForInternalAddress"],[766,103,737,97],[766,104,737,98],[766,108,737,102],[766,109,737,103],[767,14,738,8],[767,18,738,12],[767,19,738,13,"next_free_address_index"],[767,42,738,36],[767,51,738,45],[767,55,738,49],[767,56,738,50,"_binarySearchIterationForExternalAddress"],[767,96,738,90],[767,97,738,91],[767,101,738,95],[767,102,738,96],[768,14,739,8],[768,18,739,12],[768,22,739,16],[768,23,739,17,"_receive_payment_codes"],[768,45,739,39],[768,47,739,41],[769,16,740,10],[769,21,740,15],[769,25,740,21,"pc"],[769,27,740,23],[769,31,740,27],[769,35,740,31],[769,36,740,32,"_receive_payment_codes"],[769,58,740,54],[769,60,740,56],[770,18,741,12],[770,22,741,16],[770,23,741,17,"_next_free_payment_code_address_index_receive"],[770,68,741,62],[770,69,741,63,"pc"],[770,71,741,65],[770,72,741,66],[770,81,741,75],[770,85,741,79],[770,86,741,80,"_binarySearchIterationForBIP47Address"],[770,123,741,117],[770,124,741,118,"pc"],[770,126,741,120],[770,128,741,122],[770,132,741,126],[770,133,741,127],[771,16,742,10],[772,14,743,8],[773,12,744,6],[773,13,744,7],[773,14,744,8],[775,12,746,6],[776,12,747,6],[776,18,747,12],[776,22,747,16],[776,23,747,17,"_fetchBalance"],[776,36,747,30],[776,37,747,31],[776,38,747,32],[777,10,748,4],[777,11,748,5],[777,12,748,6],[777,19,748,13,"err"],[777,22,748,16],[777,24,748,18],[778,12,749,6,"console"],[778,19,749,13],[778,20,749,14,"warn"],[778,24,749,18],[778,25,749,19,"err"],[778,28,749,22],[778,29,749,23],[779,10,750,4],[780,8,751,2],[780,9,751,3],[781,8,751,3],[781,17,733,8,"fetchBalance"],[781,29,733,20,"fetchBalance"],[781,30,733,20],[782,10,733,20],[782,17,733,20,"_fetchBalance2"],[782,31,733,20],[782,32,733,20,"apply"],[782,37,733,20],[782,44,733,20,"arguments"],[782,53,733,20],[783,8,733,20],[784,8,733,20],[784,15,733,8,"fetchBalance"],[784,27,733,20],[785,6,733,20],[786,4,733,20],[787,6,733,20,"key"],[787,9,733,20],[788,6,733,20,"value"],[788,11,733,20],[789,8,733,20],[789,12,733,20,"_fetchBalance3"],[789,26,733,20],[789,33,733,20,"_asyncToGenerator2"],[789,51,733,20],[789,52,733,20,"default"],[789,59,733,20],[789,61,753,2],[789,74,753,24],[790,10,754,4],[791,10,755,4],[792,10,756,4],[794,10,758,4],[794,14,758,10,"lagAddressesToFetch"],[794,33,758,29],[794,36,758,32],[794,38,758,34],[795,10,759,4],[795,15,759,9],[795,19,759,13,"c"],[795,20,759,14],[795,23,759,17],[795,27,759,21],[795,28,759,22,"next_free_address_index"],[795,51,759,45],[795,53,759,47,"c"],[795,54,759,48],[795,57,759,51],[795,61,759,55],[795,62,759,56,"next_free_address_index"],[795,85,759,79],[795,88,759,82],[795,92,759,86],[795,93,759,87,"gap_limit"],[795,102,759,96],[795,104,759,98,"c"],[795,105,759,99],[795,107,759,101],[795,109,759,103],[796,12,760,6,"lagAddressesToFetch"],[796,31,760,25],[796,32,760,26,"push"],[796,36,760,30],[796,37,760,31],[796,41,760,35],[796,42,760,36,"_getExternalAddressByIndex"],[796,68,760,62],[796,69,760,63,"c"],[796,70,760,64],[796,71,760,65],[796,72,760,66],[797,10,761,4],[798,10,762,4],[798,15,762,9],[798,19,762,13,"c"],[798,23,762,14],[798,26,762,17],[798,30,762,21],[798,31,762,22,"next_free_change_address_index"],[798,61,762,52],[798,63,762,54,"c"],[798,67,762,55],[798,70,762,58],[798,74,762,62],[798,75,762,63,"next_free_change_address_index"],[798,105,762,93],[798,108,762,96],[798,112,762,100],[798,113,762,101,"gap_limit"],[798,122,762,110],[798,124,762,112,"c"],[798,128,762,113],[798,130,762,115],[798,132,762,117],[799,12,763,6,"lagAddressesToFetch"],[799,31,763,25],[799,32,763,26,"push"],[799,36,763,30],[799,37,763,31],[799,41,763,35],[799,42,763,36,"_getInternalAddressByIndex"],[799,68,763,62],[799,69,763,63,"c"],[799,73,763,64],[799,74,763,65],[799,75,763,66],[800,10,764,4],[801,10,765,4],[801,15,765,9],[801,19,765,15,"pc"],[801,21,765,17],[801,25,765,21],[801,29,765,25],[801,30,765,26,"_receive_payment_codes"],[801,52,765,48],[801,54,765,50],[802,12,766,6],[802,17,767,8],[802,21,767,12,"c"],[802,25,767,13],[802,28,767,16],[802,32,767,20],[802,33,767,21,"_next_free_payment_code_address_index_receive"],[802,78,767,66],[802,79,767,67,"pc"],[802,81,767,69],[802,82,767,70],[802,84,768,8,"c"],[802,88,768,9],[802,91,768,12],[802,95,768,16],[802,96,768,17,"_next_free_payment_code_address_index_receive"],[802,141,768,62],[802,142,768,63,"pc"],[802,144,768,65],[802,145,768,66],[802,148,768,69],[802,152,768,73],[802,153,768,74,"gap_limit"],[802,162,768,83],[802,164,769,8,"c"],[802,168,769,9],[802,170,769,11],[802,172,770,8],[803,14,771,8,"lagAddressesToFetch"],[803,33,771,27],[803,34,771,28,"push"],[803,38,771,32],[803,39,771,33],[803,43,771,37],[803,44,771,38,"_getBIP47AddressReceive"],[803,67,771,61],[803,68,771,62,"pc"],[803,70,771,64],[803,72,771,66,"c"],[803,76,771,67],[803,77,771,68],[803,78,771,69],[804,12,772,6],[805,10,773,4],[806,10,775,4],[806,14,775,10,"txs"],[806,17,775,13],[806,26,775,22,"BlueElectrum"],[806,38,775,34],[806,39,775,35,"multiGetHistoryByAddress"],[806,63,775,59],[806,64,775,60,"lagAddressesToFetch"],[806,83,775,79],[806,84,775,80],[806,85,775,81],[806,86,775,82],[808,10,777,4],[808,15,777,9],[808,19,777,13,"c"],[808,23,777,14],[808,26,777,17],[808,30,777,21],[808,31,777,22,"next_free_address_index"],[808,54,777,45],[808,56,777,47,"c"],[808,60,777,48],[808,63,777,51],[808,67,777,55],[808,68,777,56,"next_free_address_index"],[808,91,777,79],[808,94,777,82],[808,98,777,86],[808,99,777,87,"gap_limit"],[808,108,777,96],[808,110,777,98,"c"],[808,114,777,99],[808,116,777,101],[808,118,777,103],[809,12,778,6],[809,16,778,12,"address"],[809,23,778,19],[809,26,778,22],[809,30,778,26],[809,31,778,27,"_getExternalAddressByIndex"],[809,57,778,53],[809,58,778,54,"c"],[809,62,778,55],[809,63,778,56],[810,12,779,6],[810,16,779,10,"txs"],[810,19,779,13],[810,20,779,14,"address"],[810,27,779,21],[810,28,779,22],[810,32,779,26,"Array"],[810,37,779,31],[810,38,779,32,"isArray"],[810,45,779,39],[810,46,779,40,"txs"],[810,49,779,43],[810,50,779,44,"address"],[810,57,779,51],[810,58,779,52],[810,59,779,53],[810,63,779,57,"txs"],[810,66,779,60],[810,67,779,61,"address"],[810,74,779,68],[810,75,779,69],[810,76,779,70,"length"],[810,82,779,76],[810,85,779,79],[810,86,779,80],[810,88,779,82],[811,14,780,8],[812,14,781,8],[812,18,781,12],[812,19,781,13,"next_free_address_index"],[812,42,781,36],[812,45,781,39,"c"],[812,49,781,40],[812,52,781,43],[812,53,781,44],[813,12,782,6],[814,10,783,4],[815,10,785,4],[815,15,785,9],[815,19,785,13,"c"],[815,23,785,14],[815,26,785,17],[815,30,785,21],[815,31,785,22,"next_free_change_address_index"],[815,61,785,52],[815,63,785,54,"c"],[815,67,785,55],[815,70,785,58],[815,74,785,62],[815,75,785,63,"next_free_change_address_index"],[815,105,785,93],[815,108,785,96],[815,112,785,100],[815,113,785,101,"gap_limit"],[815,122,785,110],[815,124,785,112,"c"],[815,128,785,113],[815,130,785,115],[815,132,785,117],[816,12,786,6],[816,16,786,12,"address"],[816,24,786,19],[816,27,786,22],[816,31,786,26],[816,32,786,27,"_getInternalAddressByIndex"],[816,58,786,53],[816,59,786,54,"c"],[816,63,786,55],[816,64,786,56],[817,12,787,6],[817,16,787,10,"txs"],[817,19,787,13],[817,20,787,14,"address"],[817,28,787,21],[817,29,787,22],[817,33,787,26,"Array"],[817,38,787,31],[817,39,787,32,"isArray"],[817,46,787,39],[817,47,787,40,"txs"],[817,50,787,43],[817,51,787,44,"address"],[817,59,787,51],[817,60,787,52],[817,61,787,53],[817,65,787,57,"txs"],[817,68,787,60],[817,69,787,61,"address"],[817,77,787,68],[817,78,787,69],[817,79,787,70,"length"],[817,85,787,76],[817,88,787,79],[817,89,787,80],[817,91,787,82],[818,14,788,8],[819,14,789,8],[819,18,789,12],[819,19,789,13,"next_free_change_address_index"],[819,49,789,43],[819,52,789,46,"c"],[819,56,789,47],[819,59,789,50],[819,60,789,51],[820,12,790,6],[821,10,791,4],[822,10,793,4],[822,15,793,9],[822,19,793,15,"pc"],[822,23,793,17],[822,27,793,21],[822,31,793,25],[822,32,793,26,"_receive_payment_codes"],[822,54,793,48],[822,56,793,50],[823,12,794,6],[823,17,795,8],[823,21,795,12,"c"],[823,25,795,13],[823,28,795,16],[823,32,795,20],[823,33,795,21,"_next_free_payment_code_address_index_receive"],[823,78,795,66],[823,79,795,67,"pc"],[823,83,795,69],[823,84,795,70],[823,86,796,8,"c"],[823,90,796,9],[823,93,796,12],[823,97,796,16],[823,98,796,17,"_next_free_payment_code_address_index_receive"],[823,143,796,62],[823,144,796,63,"pc"],[823,148,796,65],[823,149,796,66],[823,152,796,69],[823,156,796,73],[823,157,796,74,"gap_limit"],[823,166,796,83],[823,168,797,8,"c"],[823,172,797,9],[823,174,797,11],[823,176,798,8],[824,14,799,8],[824,18,799,14,"address"],[824,27,799,21],[824,30,799,24],[824,34,799,28],[824,35,799,29,"_getBIP47AddressReceive"],[824,58,799,52],[824,59,799,53,"pc"],[824,63,799,55],[824,65,799,57,"c"],[824,69,799,58],[824,70,799,59],[825,14,800,8],[825,18,800,12,"txs"],[825,21,800,15],[825,22,800,16,"address"],[825,31,800,23],[825,32,800,24],[825,36,800,28,"Array"],[825,41,800,33],[825,42,800,34,"isArray"],[825,49,800,41],[825,50,800,42,"txs"],[825,53,800,45],[825,54,800,46,"address"],[825,63,800,53],[825,64,800,54],[825,65,800,55],[825,69,800,59,"txs"],[825,72,800,62],[825,73,800,63,"address"],[825,82,800,70],[825,83,800,71],[825,84,800,72,"length"],[825,90,800,78],[825,93,800,81],[825,94,800,82],[825,96,800,84],[826,16,801,10],[827,16,802,10],[827,20,802,14],[827,21,802,15,"_next_free_payment_code_address_index_receive"],[827,66,802,60],[827,67,802,61,"pc"],[827,71,802,63],[827,72,802,64],[827,75,802,67,"c"],[827,79,802,68],[827,82,802,71],[827,83,802,72],[828,14,803,8],[829,12,804,6],[830,10,805,4],[832,10,807,4],[834,10,809,4],[834,14,809,10,"addresses2fetch"],[834,29,809,25],[834,32,809,28],[834,34,809,30],[836,10,811,4],[837,10,812,4],[838,10,813,4],[840,10,815,4],[841,10,816,4],[841,15,816,9],[841,19,816,13,"c"],[841,23,816,14],[841,26,816,17],[841,27,816,18],[841,29,816,20,"c"],[841,33,816,21],[841,36,816,24],[841,40,816,28],[841,41,816,29,"next_free_address_index"],[841,64,816,52],[841,67,816,55],[841,71,816,59],[841,72,816,60,"gap_limit"],[841,81,816,69],[841,83,816,71,"c"],[841,87,816,72],[841,89,816,74],[841,91,816,76],[842,12,817,6,"addresses2fetch"],[842,27,817,21],[842,28,817,22,"push"],[842,32,817,26],[842,33,817,27],[842,37,817,31],[842,38,817,32,"_getExternalAddressByIndex"],[842,64,817,58],[842,65,817,59,"c"],[842,69,817,60],[842,70,817,61],[842,71,817,62],[843,10,818,4],[845,10,820,4],[846,10,821,4],[846,15,821,9],[846,19,821,13,"c"],[846,23,821,14],[846,26,821,17],[846,27,821,18],[846,29,821,20,"c"],[846,33,821,21],[846,36,821,24],[846,40,821,28],[846,41,821,29,"next_free_change_address_index"],[846,71,821,59],[846,74,821,62],[846,78,821,66],[846,79,821,67,"gap_limit"],[846,88,821,76],[846,90,821,78,"c"],[846,94,821,79],[846,96,821,81],[846,98,821,83],[847,12,822,6,"addresses2fetch"],[847,27,822,21],[847,28,822,22,"push"],[847,32,822,26],[847,33,822,27],[847,37,822,31],[847,38,822,32,"_getInternalAddressByIndex"],[847,64,822,58],[847,65,822,59,"c"],[847,69,822,60],[847,70,822,61],[847,71,822,62],[848,10,823,4],[849,10,825,4],[849,15,825,9],[849,19,825,15,"pc"],[849,23,825,17],[849,27,825,21],[849,31,825,25],[849,32,825,26,"_receive_payment_codes"],[849,54,825,48],[849,56,825,50],[850,12,826,6],[850,17,826,11],[850,21,826,15,"c"],[850,25,826,16],[850,28,826,19],[850,29,826,20],[850,31,826,22,"c"],[850,35,826,23],[850,38,826,26],[850,42,826,30],[850,43,826,31,"_next_free_payment_code_address_index_receive"],[850,88,826,76],[850,89,826,77,"pc"],[850,93,826,79],[850,94,826,80],[850,97,826,83],[850,101,826,87],[850,102,826,88,"gap_limit"],[850,111,826,97],[850,113,826,99,"c"],[850,117,826,100],[850,119,826,102],[850,121,826,104],[851,14,827,8,"addresses2fetch"],[851,29,827,23],[851,30,827,24,"push"],[851,34,827,28],[851,35,827,29],[851,39,827,33],[851,40,827,34,"_getBIP47AddressReceive"],[851,63,827,57],[851,64,827,58,"pc"],[851,68,827,60],[851,70,827,62,"c"],[851,74,827,63],[851,75,827,64],[851,76,827,65],[852,12,828,6],[853,10,829,4],[854,10,831,4],[854,14,831,10,"balances"],[854,22,831,18],[854,31,831,27,"BlueElectrum"],[854,43,831,39],[854,44,831,40,"multiGetBalanceByAddress"],[854,68,831,64],[854,69,831,65,"addresses2fetch"],[854,84,831,80],[854,85,831,81],[856,10,833,4],[857,10,834,4],[857,15,834,9],[857,19,834,13,"c"],[857,23,834,14],[857,26,834,17],[857,27,834,18],[857,29,834,20,"c"],[857,33,834,21],[857,36,834,24],[857,40,834,28],[857,41,834,29,"next_free_address_index"],[857,64,834,52],[857,67,834,55],[857,71,834,59],[857,72,834,60,"gap_limit"],[857,81,834,69],[857,83,834,71,"c"],[857,87,834,72],[857,89,834,74],[857,91,834,76],[858,12,835,6],[858,16,835,12,"addr"],[858,20,835,16],[858,23,835,19],[858,27,835,23],[858,28,835,24,"_getExternalAddressByIndex"],[858,54,835,50],[858,55,835,51,"c"],[858,59,835,52],[858,60,835,53],[859,12,836,6],[859,16,836,10,"balances"],[859,24,836,18],[859,25,836,19,"addresses"],[859,34,836,28],[859,35,836,29,"addr"],[859,39,836,33],[859,40,836,34],[859,42,836,36],[860,14,837,8],[861,14,838,8],[862,14,839,8],[862,18,839,12],[862,22,839,16],[862,23,839,17,"_balances_by_external_index"],[862,50,839,44],[862,51,839,45,"c"],[862,55,839,46],[862,56,839,47],[862,58,839,49],[863,16,840,10],[863,20,841,12],[863,24,841,16],[863,25,841,17,"_balances_by_external_index"],[863,52,841,44],[863,53,841,45,"c"],[863,57,841,46],[863,58,841,47],[863,59,841,48,"c"],[863,60,841,49],[863,65,841,54,"balances"],[863,73,841,62],[863,74,841,63,"addresses"],[863,83,841,72],[863,84,841,73,"addr"],[863,88,841,77],[863,89,841,78],[863,90,841,79,"confirmed"],[863,99,841,88],[863,103,842,12],[863,107,842,16],[863,108,842,17,"_balances_by_external_index"],[863,135,842,44],[863,136,842,45,"c"],[863,140,842,46],[863,141,842,47],[863,142,842,48,"u"],[863,143,842,49],[863,148,842,54,"balances"],[863,156,842,62],[863,157,842,63,"addresses"],[863,166,842,72],[863,167,842,73,"addr"],[863,171,842,77],[863,172,842,78],[863,173,842,79,"unconfirmed"],[863,184,842,90],[863,186,843,12],[864,18,844,12],[864,25,844,19],[864,29,844,23],[864,30,844,24,"_txs_by_external_index"],[864,52,844,46],[864,53,844,47,"c"],[864,57,844,48],[864,58,844,49],[865,16,845,10],[866,14,846,8],[867,14,847,8],[868,14,848,8],[868,18,848,12],[868,19,848,13,"_balances_by_external_index"],[868,46,848,40],[868,47,848,41,"c"],[868,51,848,42],[868,52,848,43],[868,55,848,46],[869,16,849,10,"c"],[869,17,849,11],[869,19,849,13,"balances"],[869,27,849,21],[869,28,849,22,"addresses"],[869,37,849,31],[869,38,849,32,"addr"],[869,42,849,36],[869,43,849,37],[869,44,849,38,"confirmed"],[869,53,849,47],[870,16,850,10,"u"],[870,17,850,11],[870,19,850,13,"balances"],[870,27,850,21],[870,28,850,22,"addresses"],[870,37,850,31],[870,38,850,32,"addr"],[870,42,850,36],[870,43,850,37],[870,44,850,38,"unconfirmed"],[871,14,851,8],[871,15,851,9],[872,12,852,6],[873,10,853,4],[874,10,854,4],[874,15,854,9],[874,19,854,13,"c"],[874,23,854,14],[874,26,854,17],[874,27,854,18],[874,29,854,20,"c"],[874,33,854,21],[874,36,854,24],[874,40,854,28],[874,41,854,29,"next_free_change_address_index"],[874,71,854,59],[874,74,854,62],[874,78,854,66],[874,79,854,67,"gap_limit"],[874,88,854,76],[874,90,854,78,"c"],[874,94,854,79],[874,96,854,81],[874,98,854,83],[875,12,855,6],[875,16,855,12,"addr"],[875,21,855,16],[875,24,855,19],[875,28,855,23],[875,29,855,24,"_getInternalAddressByIndex"],[875,55,855,50],[875,56,855,51,"c"],[875,60,855,52],[875,61,855,53],[876,12,856,6],[876,16,856,10,"balances"],[876,24,856,18],[876,25,856,19,"addresses"],[876,34,856,28],[876,35,856,29,"addr"],[876,40,856,33],[876,41,856,34],[876,43,856,36],[877,14,857,8],[878,14,858,8],[879,14,859,8],[879,18,859,12],[879,22,859,16],[879,23,859,17,"_balances_by_internal_index"],[879,50,859,44],[879,51,859,45,"c"],[879,55,859,46],[879,56,859,47],[879,58,859,49],[880,16,860,10],[880,20,861,12],[880,24,861,16],[880,25,861,17,"_balances_by_internal_index"],[880,52,861,44],[880,53,861,45,"c"],[880,57,861,46],[880,58,861,47],[880,59,861,48,"c"],[880,60,861,49],[880,65,861,54,"balances"],[880,73,861,62],[880,74,861,63,"addresses"],[880,83,861,72],[880,84,861,73,"addr"],[880,89,861,77],[880,90,861,78],[880,91,861,79,"confirmed"],[880,100,861,88],[880,104,862,12],[880,108,862,16],[880,109,862,17,"_balances_by_internal_index"],[880,136,862,44],[880,137,862,45,"c"],[880,141,862,46],[880,142,862,47],[880,143,862,48,"u"],[880,144,862,49],[880,149,862,54,"balances"],[880,157,862,62],[880,158,862,63,"addresses"],[880,167,862,72],[880,168,862,73,"addr"],[880,173,862,77],[880,174,862,78],[880,175,862,79,"unconfirmed"],[880,186,862,90],[880,188,863,12],[881,18,864,12],[881,25,864,19],[881,29,864,23],[881,30,864,24,"_txs_by_internal_index"],[881,52,864,46],[881,53,864,47,"c"],[881,57,864,48],[881,58,864,49],[882,16,865,10],[883,14,866,8],[884,14,867,8],[885,14,868,8],[885,18,868,12],[885,19,868,13,"_balances_by_internal_index"],[885,46,868,40],[885,47,868,41,"c"],[885,51,868,42],[885,52,868,43],[885,55,868,46],[886,16,869,10,"c"],[886,17,869,11],[886,19,869,13,"balances"],[886,27,869,21],[886,28,869,22,"addresses"],[886,37,869,31],[886,38,869,32,"addr"],[886,43,869,36],[886,44,869,37],[886,45,869,38,"confirmed"],[886,54,869,47],[887,16,870,10,"u"],[887,17,870,11],[887,19,870,13,"balances"],[887,27,870,21],[887,28,870,22,"addresses"],[887,37,870,31],[887,38,870,32,"addr"],[887,43,870,36],[887,44,870,37],[887,45,870,38,"unconfirmed"],[888,14,871,8],[888,15,871,9],[889,12,872,6],[890,10,873,4],[891,10,875,4],[891,15,875,9],[891,19,875,15,"pc"],[891,23,875,17],[891,27,875,21],[891,31,875,25],[891,32,875,26,"_receive_payment_codes"],[891,54,875,48],[891,56,875,50],[892,12,876,6],[892,16,876,10,"confirmed"],[892,25,876,19],[892,28,876,22],[892,29,876,23],[893,12,877,6],[893,16,877,10,"unconfirmed"],[893,27,877,21],[893,30,877,24],[893,31,877,25],[894,12,878,6],[894,17,878,11],[894,21,878,15,"c"],[894,25,878,16],[894,28,878,19],[894,29,878,20],[894,31,878,22,"c"],[894,35,878,23],[894,38,878,26],[894,42,878,30],[894,43,878,31,"_getNextFreePaymentCodeIndexReceive"],[894,78,878,66],[894,79,878,67,"pc"],[894,83,878,69],[894,84,878,70],[894,87,878,73],[894,91,878,77],[894,92,878,78,"gap_limit"],[894,101,878,87],[894,103,878,89,"c"],[894,107,878,90],[894,109,878,92],[894,111,878,94],[895,14,879,8],[895,18,879,14,"addr"],[895,24,879,18],[895,27,879,21],[895,31,879,25],[895,32,879,26,"_getBIP47AddressReceive"],[895,55,879,49],[895,56,879,50,"pc"],[895,60,879,52],[895,62,879,54,"c"],[895,66,879,55],[895,67,879,56],[896,14,880,8],[896,18,880,12,"balances"],[896,26,880,20],[896,27,880,21,"addresses"],[896,36,880,30],[896,37,880,31,"addr"],[896,43,880,35],[896,44,880,36],[896,45,880,37,"confirmed"],[896,54,880,46],[896,58,880,50,"balances"],[896,66,880,58],[896,67,880,59,"addresses"],[896,76,880,68],[896,77,880,69,"addr"],[896,83,880,73],[896,84,880,74],[896,85,880,75,"unconfirmed"],[896,96,880,86],[896,98,880,88],[897,16,881,10,"confirmed"],[897,25,881,19],[897,28,881,22,"confirmed"],[897,37,881,31],[897,40,881,34,"balances"],[897,48,881,42],[897,49,881,43,"addresses"],[897,58,881,52],[897,59,881,53,"addr"],[897,65,881,57],[897,66,881,58],[897,67,881,59,"confirmed"],[897,76,881,68],[898,16,882,10,"unconfirmed"],[898,27,882,21],[898,30,882,24,"unconfirmed"],[898,41,882,35],[898,44,882,38,"balances"],[898,52,882,46],[898,53,882,47,"addresses"],[898,62,882,56],[898,63,882,57,"addr"],[898,69,882,61],[898,70,882,62],[898,71,882,63,"unconfirmed"],[898,82,882,74],[899,14,883,8],[900,12,884,6],[901,12,885,6],[901,16,885,10],[901,17,885,11,"_balances_by_payment_code_index"],[901,48,885,42],[901,49,885,43,"pc"],[901,53,885,45],[901,54,885,46],[901,57,885,49],[902,14,886,8,"c"],[902,15,886,9],[902,17,886,11,"confirmed"],[902,26,886,20],[903,14,887,8,"u"],[903,15,887,9],[903,17,887,11,"unconfirmed"],[904,12,888,6],[904,13,888,7],[905,10,889,4],[906,10,891,4],[906,14,891,8],[906,15,891,9,"_lastBalanceFetch"],[906,32,891,26],[906,35,891,29],[906,36,891,30],[906,40,891,34,"Date"],[906,44,891,38],[906,45,891,39],[906,46,891,40],[907,8,892,2],[907,9,892,3],[908,8,892,3],[908,17,753,8,"_fetchBalance"],[908,30,753,21,"_fetchBalance"],[908,31,753,21],[909,10,753,21],[909,17,753,21,"_fetchBalance3"],[909,31,753,21],[909,32,753,21,"apply"],[909,37,753,21],[909,44,753,21,"arguments"],[909,53,753,21],[910,8,753,21],[911,8,753,21],[911,15,753,8,"_fetchBalance"],[911,28,753,21],[912,6,753,21],[913,4,753,21],[914,6,753,21,"key"],[914,9,753,21],[915,6,753,21,"value"],[915,11,753,21],[916,8,753,21],[916,12,753,21,"_fetchUtxo"],[916,22,753,21],[916,29,753,21,"_asyncToGenerator2"],[916,47,753,21],[916,48,753,21,"default"],[916,55,753,21],[916,57,894,2],[916,70,894,35],[917,10,895,4],[918,10,896,4],[918,14,896,8,"addressess"],[918,24,896,18],[918,27,896,21],[918,29,896,23],[920,10,898,4],[921,10,899,4],[921,15,899,9],[921,19,899,13,"c"],[921,20,899,14],[921,23,899,17],[921,24,899,18],[921,26,899,20,"c"],[921,27,899,21],[921,30,899,24],[921,34,899,28],[921,35,899,29,"next_free_address_index"],[921,58,899,52],[921,61,899,55],[921,65,899,59],[921,66,899,60,"gap_limit"],[921,75,899,69],[921,77,899,71,"c"],[921,78,899,72],[921,80,899,74],[921,82,899,76],[922,12,899,76],[922,16,899,76,"_this$_balances_by_ex"],[922,37,899,76],[923,12,900,6],[923,16,900,10],[923,18,900,10,"_this$_balances_by_ex"],[923,39,900,10],[923,46,900,14],[923,47,900,15,"_balances_by_external_index"],[923,74,900,42],[923,88,900,42,"_this$_balances_by_ex"],[923,109,900,42],[923,112,900,10,"_this$_balances_by_ex"],[923,133,900,10],[923,134,900,45,"c"],[923,135,900,46],[923,136,900,47],[923,157,900,10,"_this$_balances_by_ex"],[923,178,900,10],[923,179,900,49,"c"],[923,180,900,50],[923,184,900,53],[923,185,900,54],[923,187,900,56],[924,14,901,8,"addressess"],[924,24,901,18],[924,25,901,19,"push"],[924,29,901,23],[924,30,901,24],[924,34,901,28],[924,35,901,29,"_getExternalAddressByIndex"],[924,61,901,55],[924,62,901,56,"c"],[924,63,901,57],[924,64,901,58],[924,65,901,59],[925,12,902,6],[926,10,903,4],[927,10,904,4],[927,15,904,9],[927,19,904,13,"c"],[927,23,904,14],[927,26,904,17],[927,27,904,18],[927,29,904,20,"c"],[927,33,904,21],[927,36,904,24],[927,40,904,28],[927,41,904,29,"next_free_change_address_index"],[927,71,904,59],[927,74,904,62],[927,78,904,66],[927,79,904,67,"gap_limit"],[927,88,904,76],[927,90,904,78,"c"],[927,94,904,79],[927,96,904,81],[927,98,904,83],[928,12,904,83],[928,16,904,83,"_this$_balances_by_in"],[928,37,904,83],[929,12,905,6],[929,16,905,10],[929,18,905,10,"_this$_balances_by_in"],[929,39,905,10],[929,46,905,14],[929,47,905,15,"_balances_by_internal_index"],[929,74,905,42],[929,88,905,42,"_this$_balances_by_in"],[929,109,905,42],[929,112,905,10,"_this$_balances_by_in"],[929,133,905,10],[929,134,905,45,"c"],[929,138,905,46],[929,139,905,47],[929,160,905,10,"_this$_balances_by_in"],[929,181,905,10],[929,182,905,49,"c"],[929,183,905,50],[929,187,905,53],[929,188,905,54],[929,190,905,56],[930,14,906,8,"addressess"],[930,24,906,18],[930,25,906,19,"push"],[930,29,906,23],[930,30,906,24],[930,34,906,28],[930,35,906,29,"_getInternalAddressByIndex"],[930,61,906,55],[930,62,906,56,"c"],[930,66,906,57],[930,67,906,58],[930,68,906,59],[931,12,907,6],[932,10,908,4],[933,10,910,4],[933,15,910,9],[933,19,910,15,"pc"],[933,21,910,17],[933,25,910,21],[933,29,910,25],[933,30,910,26,"_receive_payment_codes"],[933,52,910,48],[933,54,910,50],[934,12,911,6],[934,17,911,11],[934,21,911,15,"c"],[934,25,911,16],[934,28,911,19],[934,29,911,20],[934,31,911,22,"c"],[934,35,911,23],[934,38,911,26],[934,42,911,30],[934,43,911,31,"_next_free_payment_code_address_index_receive"],[934,88,911,76],[934,89,911,77,"pc"],[934,91,911,79],[934,92,911,80],[934,95,911,83],[934,99,911,87],[934,100,911,88,"gap_limit"],[934,109,911,97],[934,111,911,99,"c"],[934,115,911,100],[934,117,911,102],[934,119,911,104],[935,14,911,104],[935,18,911,104,"_this$_balances_by_pa"],[935,39,911,104],[936,14,912,8],[936,18,912,12],[936,20,912,12,"_this$_balances_by_pa"],[936,41,912,12],[936,48,912,16],[936,49,912,17,"_balances_by_payment_code_index"],[936,80,912,48],[936,94,912,48,"_this$_balances_by_pa"],[936,115,912,48],[936,118,912,12,"_this$_balances_by_pa"],[936,139,912,12],[936,140,912,51,"pc"],[936,142,912,53],[936,143,912,54],[936,164,912,12,"_this$_balances_by_pa"],[936,185,912,12],[936,186,912,56,"c"],[936,187,912,57],[936,191,912,60],[936,192,912,61],[936,194,912,63],[937,16,913,10,"addressess"],[937,26,913,20],[937,27,913,21,"push"],[937,31,913,25],[937,32,913,26],[937,36,913,30],[937,37,913,31,"_getBIP47AddressReceive"],[937,60,913,54],[937,61,913,55,"pc"],[937,63,913,57],[937,65,913,59,"c"],[937,69,913,60],[937,70,913,61],[937,71,913,62],[938,14,914,8],[939,12,915,6],[940,10,916,4],[942,10,918,4],[943,10,919,4],[943,15,919,9],[943,19,919,13,"c"],[943,23,919,14],[943,26,919,17],[943,27,919,18],[943,29,919,20,"c"],[943,33,919,21],[943,36,919,24],[943,40,919,28],[943,41,919,29,"next_free_address_index"],[943,64,919,52],[943,67,919,55],[943,71,919,59],[943,72,919,60,"gap_limit"],[943,81,919,69],[943,83,919,71,"c"],[943,87,919,72],[943,89,919,74],[943,91,919,76],[944,12,919,76],[944,16,919,76,"_this$_balances_by_ex2"],[944,38,919,76],[945,12,920,6],[945,16,920,10],[945,18,920,10,"_this$_balances_by_ex2"],[945,40,920,10],[945,47,920,14],[945,48,920,15,"_balances_by_external_index"],[945,75,920,42],[945,89,920,42,"_this$_balances_by_ex2"],[945,111,920,42],[945,114,920,10,"_this$_balances_by_ex2"],[945,136,920,10],[945,137,920,45,"c"],[945,141,920,46],[945,142,920,47],[945,163,920,10,"_this$_balances_by_ex2"],[945,185,920,10],[945,186,920,49,"u"],[945,187,920,50],[945,191,920,53],[945,192,920,54],[945,194,920,56],[946,14,921,8,"addressess"],[946,24,921,18],[946,25,921,19,"push"],[946,29,921,23],[946,30,921,24],[946,34,921,28],[946,35,921,29,"_getExternalAddressByIndex"],[946,61,921,55],[946,62,921,56,"c"],[946,66,921,57],[946,67,921,58],[946,68,921,59],[947,12,922,6],[948,10,923,4],[949,10,924,4],[949,15,924,9],[949,19,924,13,"c"],[949,23,924,14],[949,26,924,17],[949,27,924,18],[949,29,924,20,"c"],[949,33,924,21],[949,36,924,24],[949,40,924,28],[949,41,924,29,"next_free_change_address_index"],[949,71,924,59],[949,74,924,62],[949,78,924,66],[949,79,924,67,"gap_limit"],[949,88,924,76],[949,90,924,78,"c"],[949,94,924,79],[949,96,924,81],[949,98,924,83],[950,12,924,83],[950,16,924,83,"_this$_balances_by_in2"],[950,38,924,83],[951,12,925,6],[951,16,925,10],[951,18,925,10,"_this$_balances_by_in2"],[951,40,925,10],[951,47,925,14],[951,48,925,15,"_balances_by_internal_index"],[951,75,925,42],[951,89,925,42,"_this$_balances_by_in2"],[951,111,925,42],[951,114,925,10,"_this$_balances_by_in2"],[951,136,925,10],[951,137,925,45,"c"],[951,141,925,46],[951,142,925,47],[951,163,925,10,"_this$_balances_by_in2"],[951,185,925,10],[951,186,925,49,"u"],[951,187,925,50],[951,191,925,53],[951,192,925,54],[951,194,925,56],[952,14,926,8,"addressess"],[952,24,926,18],[952,25,926,19,"push"],[952,29,926,23],[952,30,926,24],[952,34,926,28],[952,35,926,29,"_getInternalAddressByIndex"],[952,61,926,55],[952,62,926,56,"c"],[952,66,926,57],[952,67,926,58],[952,68,926,59],[953,12,927,6],[954,10,928,4],[955,10,930,4],[955,15,930,9],[955,19,930,15,"pc"],[955,23,930,17],[955,27,930,21],[955,31,930,25],[955,32,930,26,"_receive_payment_codes"],[955,54,930,48],[955,56,930,50],[956,12,931,6],[956,17,931,11],[956,21,931,15,"c"],[956,25,931,16],[956,28,931,19],[956,29,931,20],[956,31,931,22,"c"],[956,35,931,23],[956,38,931,26],[956,42,931,30],[956,43,931,31,"_next_free_payment_code_address_index_receive"],[956,88,931,76],[956,89,931,77,"pc"],[956,93,931,79],[956,94,931,80],[956,97,931,83],[956,101,931,87],[956,102,931,88,"gap_limit"],[956,111,931,97],[956,113,931,99,"c"],[956,117,931,100],[956,119,931,102],[956,121,931,104],[957,14,931,104],[957,18,931,104,"_this$_balances_by_pa2"],[957,40,931,104],[958,14,932,8],[958,18,932,12],[958,20,932,12,"_this$_balances_by_pa2"],[958,42,932,12],[958,49,932,16],[958,50,932,17,"_balances_by_payment_code_index"],[958,81,932,48],[958,95,932,48,"_this$_balances_by_pa2"],[958,117,932,48],[958,120,932,12,"_this$_balances_by_pa2"],[958,142,932,12],[958,143,932,51,"pc"],[958,147,932,53],[958,148,932,54],[958,169,932,12,"_this$_balances_by_pa2"],[958,191,932,12],[958,192,932,56,"u"],[958,193,932,57],[958,197,932,60],[958,198,932,61],[958,200,932,63],[959,16,933,10,"addressess"],[959,26,933,20],[959,27,933,21,"push"],[959,31,933,25],[959,32,933,26],[959,36,933,30],[959,37,933,31,"_getBIP47AddressReceive"],[959,60,933,54],[959,61,933,55,"pc"],[959,65,933,57],[959,67,933,59,"c"],[959,71,933,60],[959,72,933,61],[959,73,933,62],[960,14,934,8],[961,12,935,6],[962,10,936,4],[964,10,938,4],[965,10,939,4],[966,10,940,4],[968,10,942,4,"addressess"],[968,20,942,14],[968,27,942,14,"_toConsumableArray2"],[968,46,942,14],[968,47,942,14,"default"],[968,54,942,14],[968,56,942,21],[968,60,942,25,"Set"],[968,63,942,28],[968,64,942,29,"addressess"],[968,74,942,39],[968,75,942,40],[968,76,942,41],[968,77,942,42],[968,78,942,43],[970,10,944,4],[970,14,944,10,"fetchedUtxo"],[970,25,944,21],[970,34,944,30,"BlueElectrum"],[970,46,944,42],[970,47,944,43,"multiGetUtxoByAddress"],[970,68,944,64],[970,69,944,65,"addressess"],[970,79,944,75],[970,80,944,76],[971,10,945,4],[971,14,945,8],[971,15,945,9,"_utxo"],[971,20,945,14],[971,23,945,17],[971,25,945,19],[972,10,946,4],[972,15,946,9],[972,19,946,15,"arr"],[972,22,946,18],[972,26,946,22,"Object"],[972,32,946,28],[972,33,946,29,"values"],[972,39,946,35],[972,40,946,36,"fetchedUtxo"],[972,51,946,47],[972,52,946,48],[972,54,946,50],[973,12,947,6],[973,16,947,10],[973,17,947,11,"_utxo"],[973,22,947,16],[973,25,947,19],[973,29,947,23],[973,30,947,24,"_utxo"],[973,35,947,29],[973,36,947,30,"concat"],[973,42,947,36],[973,43,947,37,"arr"],[973,46,947,40],[973,47,947,41],[974,10,948,4],[976,10,950,4],[977,10,951,4],[977,15,951,9],[977,19,951,15,"u"],[977,20,951,16],[977,24,951,20],[977,28,951,24],[977,29,951,25,"_utxo"],[977,34,951,30],[977,36,951,32],[978,12,952,6,"u"],[978,13,952,7],[978,14,952,8,"wif"],[978,17,952,11],[978,20,952,14],[978,24,952,18],[978,25,952,19,"_getWifForAddress"],[978,42,952,36],[978,43,952,37,"u"],[978,44,952,38],[978,45,952,39,"address"],[978,52,952,46],[978,53,952,47],[979,12,953,6],[979,16,953,10],[979,17,953,11,"u"],[979,18,953,12],[979,19,953,13,"confirmations"],[979,32,953,26],[979,36,953,30,"u"],[979,37,953,31],[979,38,953,32,"height"],[979,44,953,38],[979,46,953,40,"u"],[979,47,953,41],[979,48,953,42,"confirmations"],[979,61,953,55],[979,64,953,58,"BlueElectrum"],[979,76,953,70],[979,77,953,71,"estimateCurrentBlockheight"],[979,103,953,97],[979,104,953,98],[979,105,953,99],[979,108,953,102,"u"],[979,109,953,103],[979,110,953,104,"height"],[979,116,953,110],[980,10,954,4],[981,10,956,4],[981,14,956,8],[981,15,956,9,"_utxo"],[981,20,956,14],[981,23,956,17],[981,27,956,21],[981,28,956,22,"_utxo"],[981,33,956,27],[981,34,956,28,"sort"],[981,38,956,32],[981,39,956,33],[981,49,956,34,"a"],[981,50,956,35],[981,52,956,37,"b"],[981,53,956,38],[982,12,956,38],[982,19,956,43,"Number"],[982,25,956,49],[982,26,956,50,"a"],[982,27,956,51],[982,28,956,52,"value"],[982,33,956,57],[982,34,956,58],[982,37,956,61,"Number"],[982,43,956,67],[982,44,956,68,"b"],[982,45,956,69],[982,46,956,70,"value"],[982,51,956,75],[982,52,956,76],[983,10,956,76],[983,12,956,77],[984,10,957,4],[985,8,958,2],[985,9,958,3],[986,8,958,3],[986,17,894,8,"fetchUtxo"],[986,26,894,17,"fetchUtxo"],[986,27,894,17],[987,10,894,17],[987,17,894,17,"_fetchUtxo"],[987,27,894,17],[987,28,894,17,"apply"],[987,33,894,17],[987,40,894,17,"arguments"],[987,49,894,17],[988,8,894,17],[989,8,894,17],[989,15,894,8,"fetchUtxo"],[989,24,894,17],[990,6,894,17],[991,6,960,2],[992,0,961,0],[993,0,962,0],[994,0,963,0],[995,0,964,0],[996,0,965,0],[997,0,966,0],[998,0,967,0],[999,0,968,0],[1000,0,969,0],[1001,0,970,0],[1002,0,971,0],[1003,0,972,0],[1004,4,960,2],[1005,6,960,2,"key"],[1005,9,960,2],[1006,6,960,2,"value"],[1006,11,960,2],[1006,13,973,2],[1006,22,973,2,"getUtxo"],[1006,29,973,9,"getUtxo"],[1006,30,973,9],[1006,32,973,33],[1007,8,973,33],[1007,12,973,33,"_this5"],[1007,18,973,33],[1008,8,973,33],[1008,12,973,10,"respectFrozen"],[1008,25,973,23],[1008,28,973,23,"arguments"],[1008,37,973,23],[1008,38,973,23,"length"],[1008,44,973,23],[1008,52,973,23,"arguments"],[1008,61,973,23],[1008,69,973,23,"undefined"],[1008,78,973,23],[1008,81,973,23,"arguments"],[1008,90,973,23],[1008,96,973,26],[1008,101,973,31],[1009,8,974,4],[1009,12,974,8,"ret"],[1009,15,974,11],[1009,18,974,14],[1009,20,974,16],[1010,8,976,4],[1010,12,976,8],[1010,16,976,12],[1010,17,976,13,"_utxo"],[1010,22,976,18],[1010,23,976,19,"length"],[1010,29,976,25],[1010,34,976,30],[1010,35,976,31],[1010,37,976,33],[1011,10,977,6,"ret"],[1011,13,977,9],[1011,16,977,12],[1011,20,977,16],[1011,21,977,17,"getDerivedUtxoFromOurTransaction"],[1011,53,977,49],[1011,54,977,50],[1011,55,977,51],[1011,56,977,52],[1011,57,977,53],[1012,8,978,4],[1012,9,978,5],[1012,15,978,11],[1013,10,979,6,"ret"],[1013,13,979,9],[1013,16,979,12],[1013,20,979,16],[1013,21,979,17,"_utxo"],[1013,26,979,22],[1014,8,980,4],[1015,8,981,4],[1015,12,981,8],[1015,13,981,9,"respectFrozen"],[1015,26,981,22],[1015,28,981,24],[1016,10,982,6,"ret"],[1016,13,982,9],[1016,16,982,12,"ret"],[1016,19,982,15],[1016,20,982,16,"filter"],[1016,26,982,22],[1016,27,982,23],[1016,37,982,23,"_ref"],[1016,41,982,23],[1017,12,982,23],[1017,16,982,26,"txid"],[1017,20,982,30],[1017,23,982,30,"_ref"],[1017,27,982,30],[1017,28,982,26,"txid"],[1017,32,982,30],[1018,14,982,32,"vout"],[1018,18,982,36],[1018,21,982,36,"_ref"],[1018,25,982,36],[1018,26,982,32,"vout"],[1018,30,982,36],[1019,12,982,36],[1019,19,982,43],[1019,20,982,44,"_this5"],[1019,26,982,48],[1019,27,982,49,"getUTXOMetadata"],[1019,42,982,64],[1019,43,982,65,"txid"],[1019,47,982,69],[1019,49,982,71,"vout"],[1019,53,982,75],[1019,54,982,76],[1019,55,982,77,"frozen"],[1019,61,982,83],[1020,10,982,83],[1020,12,982,84],[1021,8,983,4],[1022,8,984,4],[1022,15,984,11,"ret"],[1022,18,984,14],[1023,6,985,2],[1024,4,985,3],[1025,6,985,3,"key"],[1025,9,985,3],[1026,6,985,3,"value"],[1026,11,985,3],[1026,13,987,2],[1026,22,987,2,"getDerivedUtxoFromOurTransaction"],[1026,54,987,34,"getDerivedUtxoFromOurTransaction"],[1026,55,987,34],[1026,57,987,74],[1027,8,987,74],[1027,12,987,35,"returnSpentUtxoAsWell"],[1027,33,987,56],[1027,36,987,56,"arguments"],[1027,45,987,56],[1027,46,987,56,"length"],[1027,52,987,56],[1027,60,987,56,"arguments"],[1027,69,987,56],[1027,77,987,56,"undefined"],[1027,86,987,56],[1027,89,987,56,"arguments"],[1027,98,987,56],[1027,104,987,59],[1027,109,987,64],[1028,8,988,4],[1028,12,988,10,"utxos"],[1028,17,988,23],[1028,20,988,26],[1028,22,988,28],[1030,8,990,4],[1031,8,991,4],[1032,8,992,4],[1032,12,992,10,"ownedAddressesHashmap"],[1032,33,992,56],[1032,36,992,59],[1032,37,992,60],[1032,38,992,61],[1033,8,993,4],[1033,13,993,9],[1033,17,993,13,"c"],[1033,18,993,14],[1033,21,993,17],[1033,22,993,18],[1033,24,993,20,"c"],[1033,25,993,21],[1033,28,993,24],[1033,32,993,28],[1033,33,993,29,"next_free_address_index"],[1033,56,993,52],[1033,59,993,55],[1033,60,993,56],[1033,62,993,58,"c"],[1033,63,993,59],[1033,65,993,61],[1033,67,993,63],[1034,10,994,6,"ownedAddressesHashmap"],[1034,31,994,27],[1034,32,994,28],[1034,36,994,32],[1034,37,994,33,"_getExternalAddressByIndex"],[1034,63,994,59],[1034,64,994,60,"c"],[1034,65,994,61],[1034,66,994,62],[1034,67,994,63],[1034,70,994,66],[1034,74,994,70],[1035,8,995,4],[1036,8,996,4],[1036,13,996,9],[1036,17,996,13,"c"],[1036,21,996,14],[1036,24,996,17],[1036,25,996,18],[1036,27,996,20,"c"],[1036,31,996,21],[1036,34,996,24],[1036,38,996,28],[1036,39,996,29,"next_free_change_address_index"],[1036,69,996,59],[1036,72,996,62],[1036,73,996,63],[1036,75,996,65,"c"],[1036,79,996,66],[1036,81,996,68],[1036,83,996,70],[1037,10,997,6,"ownedAddressesHashmap"],[1037,31,997,27],[1037,32,997,28],[1037,36,997,32],[1037,37,997,33,"_getInternalAddressByIndex"],[1037,63,997,59],[1037,64,997,60,"c"],[1037,68,997,61],[1037,69,997,62],[1037,70,997,63],[1037,73,997,66],[1037,77,997,70],[1038,8,998,4],[1039,8,999,4],[1039,13,999,9],[1039,17,999,15,"pc"],[1039,19,999,17],[1039,23,999,21],[1039,27,999,25],[1039,28,999,26,"_receive_payment_codes"],[1039,50,999,48],[1039,52,999,50],[1040,10,1000,6],[1040,15,1000,11],[1040,19,1000,15,"c"],[1040,23,1000,16],[1040,26,1000,19],[1040,27,1000,20],[1040,29,1000,22,"c"],[1040,33,1000,23],[1040,36,1000,26],[1040,40,1000,30],[1040,41,1000,31,"_getNextFreePaymentCodeIndexReceive"],[1040,76,1000,66],[1040,77,1000,67,"pc"],[1040,79,1000,69],[1040,80,1000,70],[1040,83,1000,73],[1040,84,1000,74],[1040,86,1000,76,"c"],[1040,90,1000,77],[1040,92,1000,79],[1040,94,1000,81],[1041,12,1001,8,"ownedAddressesHashmap"],[1041,33,1001,29],[1041,34,1001,30],[1041,38,1001,34],[1041,39,1001,35,"_getBIP47AddressReceive"],[1041,62,1001,58],[1041,63,1001,59,"pc"],[1041,65,1001,61],[1041,67,1001,63,"c"],[1041,71,1001,64],[1041,72,1001,65],[1041,73,1001,66],[1041,76,1001,69],[1041,80,1001,73],[1042,10,1002,6],[1043,8,1003,4],[1044,8,1005,4],[1044,13,1005,9],[1044,17,1005,15,"tx"],[1044,19,1005,17],[1044,23,1005,21],[1044,27,1005,25],[1044,28,1005,26,"getTransactions"],[1044,43,1005,41],[1044,44,1005,42],[1044,45,1005,43],[1044,47,1005,45],[1045,10,1006,6],[1045,15,1006,11],[1045,19,1006,17,"output"],[1045,25,1006,23],[1045,29,1006,27,"tx"],[1045,31,1006,29],[1045,32,1006,30,"outputs"],[1045,39,1006,37],[1045,41,1006,39],[1046,12,1007,8],[1046,16,1007,12,"address"],[1046,23,1007,35],[1046,26,1007,38],[1046,31,1007,43],[1047,12,1008,8],[1047,16,1008,12,"output"],[1047,22,1008,18],[1047,23,1008,19,"scriptPubKey"],[1047,35,1008,31],[1047,39,1008,35,"output"],[1047,45,1008,41],[1047,46,1008,42,"scriptPubKey"],[1047,58,1008,54],[1047,59,1008,55,"addresses"],[1047,68,1008,64],[1047,72,1008,68,"output"],[1047,78,1008,74],[1047,79,1008,75,"scriptPubKey"],[1047,91,1008,87],[1047,92,1008,88,"addresses"],[1047,101,1008,97],[1047,102,1008,98],[1047,103,1008,99],[1047,104,1008,100],[1047,106,1008,102],[1048,14,1009,10,"address"],[1048,21,1009,17],[1048,24,1009,20,"output"],[1048,30,1009,26],[1048,31,1009,27,"scriptPubKey"],[1048,43,1009,39],[1048,44,1009,40,"addresses"],[1048,53,1009,49],[1048,54,1009,50],[1048,55,1009,51],[1048,56,1009,52],[1049,12,1010,8],[1050,12,1011,8],[1050,16,1011,12,"ownedAddressesHashmap"],[1050,37,1011,33],[1050,38,1011,34,"String"],[1050,44,1011,40],[1050,45,1011,41,"address"],[1050,52,1011,48],[1050,53,1011,49],[1050,54,1011,50],[1050,56,1011,52],[1051,14,1011,52],[1051,18,1011,52,"_tx$confirmations"],[1051,35,1011,52],[1052,14,1012,10],[1052,18,1012,16,"value"],[1052,23,1012,21],[1052,26,1012,24],[1052,30,1012,28,"BigNumber"],[1052,48,1012,37],[1052,49,1012,38,"output"],[1052,55,1012,44],[1052,56,1012,45,"value"],[1052,61,1012,50],[1052,62,1012,51],[1052,63,1012,52,"multipliedBy"],[1052,75,1012,64],[1052,76,1012,65],[1052,85,1012,74],[1052,86,1012,75],[1052,87,1012,76,"toNumber"],[1052,95,1012,84],[1052,96,1012,85],[1052,97,1012,86],[1053,14,1013,10,"utxos"],[1053,19,1013,15],[1053,20,1013,16,"push"],[1053,24,1013,20],[1053,25,1013,21],[1054,16,1014,12,"txid"],[1054,20,1014,16],[1054,22,1014,18,"tx"],[1054,24,1014,20],[1054,25,1014,21,"txid"],[1054,29,1014,25],[1055,16,1015,12,"vout"],[1055,20,1015,16],[1055,22,1015,18,"output"],[1055,28,1015,24],[1055,29,1015,25,"n"],[1055,30,1015,26],[1056,16,1016,12,"address"],[1056,23,1016,19],[1056,25,1016,21,"String"],[1056,31,1016,27],[1056,32,1016,28,"address"],[1056,39,1016,35],[1056,40,1016,36],[1057,16,1017,12,"value"],[1057,21,1017,17],[1057,23,1017,12,"value"],[1057,28,1017,17],[1058,16,1018,12,"confirmations"],[1058,29,1018,25],[1058,31,1018,27,"tx"],[1058,33,1018,29],[1058,34,1018,30,"confirmations"],[1058,47,1018,43],[1059,16,1019,12,"wif"],[1059,19,1019,15],[1059,21,1019,17],[1059,26,1019,22],[1060,16,1020,12,"height"],[1060,22,1020,18],[1060,24,1020,20,"BlueElectrum"],[1060,36,1020,32],[1060,37,1020,33,"estimateCurrentBlockheight"],[1060,63,1020,59],[1060,64,1020,60],[1060,65,1020,61],[1060,70,1020,61,"_tx$confirmations"],[1060,87,1020,61],[1060,90,1020,65,"tx"],[1060,92,1020,67],[1060,93,1020,68,"confirmations"],[1060,106,1020,81],[1060,118,1020,81,"_tx$confirmations"],[1060,135,1020,81],[1060,138,1020,85],[1060,139,1020,86],[1061,14,1021,10],[1061,15,1021,11],[1061,16,1021,12],[1062,12,1022,8],[1063,10,1023,6],[1064,8,1024,4],[1065,8,1026,4],[1065,12,1026,8,"returnSpentUtxoAsWell"],[1065,33,1026,29],[1065,35,1026,31],[1065,42,1026,38,"utxos"],[1065,47,1026,43],[1067,8,1028,4],[1068,8,1029,4],[1068,12,1029,10,"ret"],[1068,15,1029,13],[1068,18,1029,16],[1068,20,1029,18],[1069,8,1030,4],[1069,13,1030,9],[1069,17,1030,15,"utxo"],[1069,21,1030,19],[1069,25,1030,23,"utxos"],[1069,30,1030,28],[1069,32,1030,30],[1070,10,1031,6],[1070,14,1031,10,"spent"],[1070,19,1031,15],[1070,22,1031,18],[1070,27,1031,23],[1071,10,1032,6],[1071,15,1032,11],[1071,19,1032,17,"tx"],[1071,23,1032,19],[1071,27,1032,23],[1071,31,1032,27],[1071,32,1032,28,"getTransactions"],[1071,47,1032,43],[1071,48,1032,44],[1071,49,1032,45],[1071,51,1032,47],[1072,12,1033,8],[1072,17,1033,13],[1072,21,1033,19,"input"],[1072,26,1033,24],[1072,30,1033,28,"tx"],[1072,34,1033,30],[1072,35,1033,31,"inputs"],[1072,41,1033,37],[1072,43,1033,39],[1073,14,1034,10],[1073,18,1034,14,"input"],[1073,23,1034,19],[1073,24,1034,20,"txid"],[1073,28,1034,24],[1073,33,1034,29,"utxo"],[1073,37,1034,33],[1073,38,1034,34,"txid"],[1073,42,1034,38],[1073,46,1034,42,"input"],[1073,51,1034,47],[1073,52,1034,48,"vout"],[1073,56,1034,52],[1073,61,1034,57,"utxo"],[1073,65,1034,61],[1073,66,1034,62,"vout"],[1073,70,1034,66],[1073,72,1034,68,"spent"],[1073,77,1034,73],[1073,80,1034,76],[1073,84,1034,80],[1074,14,1035,10],[1075,12,1036,8],[1076,10,1037,6],[1077,10,1039,6],[1077,14,1039,10],[1077,15,1039,11,"spent"],[1077,20,1039,16],[1077,22,1039,18],[1078,12,1040,8],[1079,12,1041,8,"utxo"],[1079,16,1041,12],[1079,17,1041,13,"wif"],[1079,20,1041,16],[1079,23,1041,19],[1079,27,1041,23],[1079,28,1041,24,"_getWifForAddress"],[1079,45,1041,41],[1079,46,1041,42,"utxo"],[1079,50,1041,46],[1079,51,1041,47,"address"],[1079,58,1041,54],[1079,59,1041,55],[1080,12,1042,8,"ret"],[1080,15,1042,11],[1080,16,1042,12,"push"],[1080,20,1042,16],[1080,21,1042,17,"utxo"],[1080,25,1042,21],[1080,26,1042,22],[1081,10,1043,6],[1082,8,1044,4],[1083,8,1046,4],[1083,15,1046,11,"ret"],[1083,18,1046,14],[1084,6,1047,2],[1085,4,1047,3],[1086,6,1047,3,"key"],[1086,9,1047,3],[1087,6,1047,3,"value"],[1087,11,1047,3],[1087,13,1049,2],[1087,22,1049,2,"_getDerivationPathByAddress"],[1087,49,1049,29,"_getDerivationPathByAddress"],[1087,50,1049,30,"address"],[1087,57,1049,45],[1087,59,1049,63],[1088,8,1050,4],[1088,12,1050,10,"path"],[1088,16,1050,14],[1088,19,1050,17],[1088,23,1050,21],[1088,24,1050,22,"getDerivationPath"],[1088,41,1050,39],[1088,42,1050,40],[1088,43,1050,41],[1089,8,1051,4],[1089,13,1051,9],[1089,17,1051,13,"c"],[1089,18,1051,14],[1089,21,1051,17],[1089,22,1051,18],[1089,24,1051,20,"c"],[1089,25,1051,21],[1089,28,1051,24],[1089,32,1051,28],[1089,33,1051,29,"next_free_address_index"],[1089,56,1051,52],[1089,59,1051,55],[1089,63,1051,59],[1089,64,1051,60,"gap_limit"],[1089,73,1051,69],[1089,75,1051,71,"c"],[1089,76,1051,72],[1089,78,1051,74],[1089,80,1051,76],[1090,10,1052,6],[1090,14,1052,10],[1090,18,1052,14],[1090,19,1052,15,"_getExternalAddressByIndex"],[1090,45,1052,41],[1090,46,1052,42,"c"],[1090,47,1052,43],[1090,48,1052,44],[1090,53,1052,49,"address"],[1090,60,1052,56],[1090,62,1052,58],[1090,69,1052,65,"path"],[1090,73,1052,69],[1090,76,1052,72],[1090,81,1052,77],[1090,84,1052,80,"c"],[1090,85,1052,81],[1091,8,1053,4],[1092,8,1054,4],[1092,13,1054,9],[1092,17,1054,13,"c"],[1092,21,1054,14],[1092,24,1054,17],[1092,25,1054,18],[1092,27,1054,20,"c"],[1092,31,1054,21],[1092,34,1054,24],[1092,38,1054,28],[1092,39,1054,29,"next_free_change_address_index"],[1092,69,1054,59],[1092,72,1054,62],[1092,76,1054,66],[1092,77,1054,67,"gap_limit"],[1092,86,1054,76],[1092,88,1054,78,"c"],[1092,92,1054,79],[1092,94,1054,81],[1092,96,1054,83],[1093,10,1055,6],[1093,14,1055,10],[1093,18,1055,14],[1093,19,1055,15,"_getInternalAddressByIndex"],[1093,45,1055,41],[1093,46,1055,42,"c"],[1093,50,1055,43],[1093,51,1055,44],[1093,56,1055,49,"address"],[1093,63,1055,56],[1093,65,1055,58],[1093,72,1055,65,"path"],[1093,76,1055,69],[1093,79,1055,72],[1093,84,1055,77],[1093,87,1055,80,"c"],[1093,91,1055,81],[1094,8,1056,4],[1095,8,1057,4],[1095,13,1057,9],[1095,17,1057,15,"pc"],[1095,19,1057,17],[1095,23,1057,21],[1095,27,1057,25],[1095,28,1057,26,"_receive_payment_codes"],[1095,50,1057,48],[1095,52,1057,50],[1096,10,1058,6],[1096,15,1058,11],[1096,19,1058,15,"c"],[1096,23,1058,16],[1096,26,1058,19],[1096,27,1058,20],[1096,29,1058,22,"c"],[1096,33,1058,23],[1096,36,1058,26],[1096,40,1058,30],[1096,41,1058,31,"_getNextFreePaymentCodeIndexReceive"],[1096,76,1058,66],[1096,77,1058,67,"pc"],[1096,79,1058,69],[1096,80,1058,70],[1096,83,1058,73],[1096,87,1058,77],[1096,88,1058,78,"gap_limit"],[1096,97,1058,87],[1096,99,1058,89,"c"],[1096,103,1058,90],[1096,105,1058,92],[1096,107,1058,94],[1097,12,1059,8],[1098,12,1060,8],[1098,16,1060,12],[1098,20,1060,16],[1098,21,1060,17,"_getBIP47AddressReceive"],[1098,44,1060,40],[1098,45,1060,41,"pc"],[1098,47,1060,43],[1098,49,1060,45,"c"],[1098,53,1060,46],[1098,54,1060,47],[1098,59,1060,52,"address"],[1098,66,1060,59],[1098,68,1060,61],[1098,75,1060,68],[1098,89,1060,82],[1098,92,1060,85,"c"],[1098,96,1060,86],[1099,10,1061,6],[1100,8,1062,4],[1101,8,1064,4],[1101,15,1064,11],[1101,20,1064,16],[1102,6,1065,2],[1104,6,1067,2],[1105,0,1068,0],[1106,0,1069,0],[1107,0,1070,0],[1108,0,1071,0],[1109,4,1067,2],[1110,6,1067,2,"key"],[1110,9,1067,2],[1111,6,1067,2,"value"],[1111,11,1067,2],[1111,13,1072,2],[1111,22,1072,2,"_getPubkeyByAddress"],[1111,41,1072,21,"_getPubkeyByAddress"],[1111,42,1072,22,"address"],[1111,49,1072,37],[1111,51,1072,55],[1112,8,1073,4],[1112,13,1073,9],[1112,17,1073,13,"c"],[1112,18,1073,14],[1112,21,1073,17],[1112,22,1073,18],[1112,24,1073,20,"c"],[1112,25,1073,21],[1112,28,1073,24],[1112,32,1073,28],[1112,33,1073,29,"next_free_address_index"],[1112,56,1073,52],[1112,59,1073,55],[1112,63,1073,59],[1112,64,1073,60,"gap_limit"],[1112,73,1073,69],[1112,75,1073,71,"c"],[1112,76,1073,72],[1112,78,1073,74],[1112,80,1073,76],[1113,10,1074,6],[1113,14,1074,10],[1113,18,1074,14],[1113,19,1074,15,"_getExternalAddressByIndex"],[1113,45,1074,41],[1113,46,1074,42,"c"],[1113,47,1074,43],[1113,48,1074,44],[1113,53,1074,49,"address"],[1113,60,1074,56],[1113,62,1074,58],[1113,69,1074,65],[1113,73,1074,69],[1113,74,1074,70,"_getNodePubkeyByIndex"],[1113,95,1074,91],[1113,96,1074,92],[1113,97,1074,93],[1113,99,1074,95,"c"],[1113,100,1074,96],[1113,101,1074,97],[1114,8,1075,4],[1115,8,1076,4],[1115,13,1076,9],[1115,17,1076,13,"c"],[1115,21,1076,14],[1115,24,1076,17],[1115,25,1076,18],[1115,27,1076,20,"c"],[1115,31,1076,21],[1115,34,1076,24],[1115,38,1076,28],[1115,39,1076,29,"next_free_change_address_index"],[1115,69,1076,59],[1115,72,1076,62],[1115,76,1076,66],[1115,77,1076,67,"gap_limit"],[1115,86,1076,76],[1115,88,1076,78,"c"],[1115,92,1076,79],[1115,94,1076,81],[1115,96,1076,83],[1116,10,1077,6],[1116,14,1077,10],[1116,18,1077,14],[1116,19,1077,15,"_getInternalAddressByIndex"],[1116,45,1077,41],[1116,46,1077,42,"c"],[1116,50,1077,43],[1116,51,1077,44],[1116,56,1077,49,"address"],[1116,63,1077,56],[1116,65,1077,58],[1116,72,1077,65],[1116,76,1077,69],[1116,77,1077,70,"_getNodePubkeyByIndex"],[1116,98,1077,91],[1116,99,1077,92],[1116,100,1077,93],[1116,102,1077,95,"c"],[1116,106,1077,96],[1116,107,1077,97],[1117,8,1078,4],[1118,8,1079,4],[1118,13,1079,9],[1118,17,1079,15,"pc"],[1118,19,1079,17],[1118,23,1079,21],[1118,27,1079,25],[1118,28,1079,26,"_receive_payment_codes"],[1118,50,1079,48],[1118,52,1079,50],[1119,10,1080,6],[1119,15,1080,11],[1119,19,1080,15,"c"],[1119,23,1080,16],[1119,26,1080,19],[1119,27,1080,20],[1119,29,1080,22,"c"],[1119,33,1080,23],[1119,36,1080,26],[1119,40,1080,30],[1119,41,1080,31,"_getNextFreePaymentCodeIndexReceive"],[1119,76,1080,66],[1119,77,1080,67,"pc"],[1119,79,1080,69],[1119,80,1080,70],[1119,83,1080,73],[1119,87,1080,77],[1119,88,1080,78,"gap_limit"],[1119,97,1080,87],[1119,99,1080,89,"c"],[1119,103,1080,90],[1119,105,1080,92],[1119,107,1080,94],[1120,12,1081,8],[1120,16,1081,12],[1120,20,1081,16],[1120,21,1081,17,"_getBIP47AddressReceive"],[1120,44,1081,40],[1120,45,1081,41,"pc"],[1120,47,1081,43],[1120,49,1081,45,"c"],[1120,53,1081,46],[1120,54,1081,47],[1120,59,1081,52,"address"],[1120,66,1081,59],[1120,68,1081,61],[1120,75,1081,68],[1120,79,1081,72],[1120,80,1081,73,"_getBIP47PubkeyByIndex"],[1120,102,1081,95],[1120,103,1081,96,"pc"],[1120,105,1081,98],[1120,107,1081,100,"c"],[1120,111,1081,101],[1120,112,1081,102],[1121,10,1082,6],[1122,8,1083,4],[1123,8,1085,4],[1123,15,1085,11],[1123,20,1085,16],[1124,6,1086,2],[1126,6,1088,2],[1127,0,1089,0],[1128,0,1090,0],[1129,0,1091,0],[1130,0,1092,0],[1131,0,1093,0],[1132,4,1088,2],[1133,6,1088,2,"key"],[1133,9,1088,2],[1134,6,1088,2,"value"],[1134,11,1088,2],[1134,13,1094,2],[1134,22,1094,2,"_getWIFbyAddress"],[1134,38,1094,18,"_getWIFbyAddress"],[1134,39,1094,19,"address"],[1134,46,1094,34],[1134,48,1094,52],[1135,8,1095,4],[1135,13,1095,9],[1135,17,1095,13,"c"],[1135,18,1095,14],[1135,21,1095,17],[1135,22,1095,18],[1135,24,1095,20,"c"],[1135,25,1095,21],[1135,28,1095,24],[1135,32,1095,28],[1135,33,1095,29,"next_free_address_index"],[1135,56,1095,52],[1135,59,1095,55],[1135,63,1095,59],[1135,64,1095,60,"gap_limit"],[1135,73,1095,69],[1135,75,1095,71,"c"],[1135,76,1095,72],[1135,78,1095,74],[1135,80,1095,76],[1136,10,1096,6],[1136,14,1096,10],[1136,18,1096,14],[1136,19,1096,15,"_getExternalAddressByIndex"],[1136,45,1096,41],[1136,46,1096,42,"c"],[1136,47,1096,43],[1136,48,1096,44],[1136,53,1096,49,"address"],[1136,60,1096,56],[1136,62,1096,58],[1136,69,1096,65],[1136,73,1096,69],[1136,74,1096,70,"_getWIFByIndex"],[1136,88,1096,84],[1136,89,1096,85],[1136,94,1096,90],[1136,96,1096,92,"c"],[1136,97,1096,93],[1136,98,1096,94],[1137,8,1097,4],[1138,8,1098,4],[1138,13,1098,9],[1138,17,1098,13,"c"],[1138,21,1098,14],[1138,24,1098,17],[1138,25,1098,18],[1138,27,1098,20,"c"],[1138,31,1098,21],[1138,34,1098,24],[1138,38,1098,28],[1138,39,1098,29,"next_free_change_address_index"],[1138,69,1098,59],[1138,72,1098,62],[1138,76,1098,66],[1138,77,1098,67,"gap_limit"],[1138,86,1098,76],[1138,88,1098,78,"c"],[1138,92,1098,79],[1138,94,1098,81],[1138,96,1098,83],[1139,10,1099,6],[1139,14,1099,10],[1139,18,1099,14],[1139,19,1099,15,"_getInternalAddressByIndex"],[1139,45,1099,41],[1139,46,1099,42,"c"],[1139,50,1099,43],[1139,51,1099,44],[1139,56,1099,49,"address"],[1139,63,1099,56],[1139,65,1099,58],[1139,72,1099,65],[1139,76,1099,69],[1139,77,1099,70,"_getWIFByIndex"],[1139,91,1099,84],[1139,92,1099,85],[1139,96,1099,89],[1139,98,1099,91,"c"],[1139,102,1099,92],[1139,103,1099,93],[1140,8,1100,4],[1141,8,1101,4],[1141,13,1101,9],[1141,17,1101,15,"pc"],[1141,19,1101,17],[1141,23,1101,21],[1141,27,1101,25],[1141,28,1101,26,"_receive_payment_codes"],[1141,50,1101,48],[1141,52,1101,50],[1142,10,1102,6],[1142,15,1102,11],[1142,19,1102,15,"c"],[1142,23,1102,16],[1142,26,1102,19],[1142,27,1102,20],[1142,29,1102,22,"c"],[1142,33,1102,23],[1142,36,1102,26],[1142,40,1102,30],[1142,41,1102,31,"_getNextFreePaymentCodeIndexReceive"],[1142,76,1102,66],[1142,77,1102,67,"pc"],[1142,79,1102,69],[1142,80,1102,70],[1142,83,1102,73],[1142,87,1102,77],[1142,88,1102,78,"gap_limit"],[1142,97,1102,87],[1142,99,1102,89,"c"],[1142,103,1102,90],[1142,105,1102,92],[1142,107,1102,94],[1143,12,1103,8],[1143,16,1103,12],[1143,20,1103,16],[1143,21,1103,17,"_getBIP47AddressReceive"],[1143,44,1103,40],[1143,45,1103,41,"pc"],[1143,47,1103,43],[1143,49,1103,45,"c"],[1143,53,1103,46],[1143,54,1103,47],[1143,59,1103,52,"address"],[1143,66,1103,59],[1143,68,1103,61],[1143,75,1103,68],[1143,79,1103,72],[1143,80,1103,73,"_getBIP47WIF"],[1143,92,1103,85],[1143,93,1103,86,"pc"],[1143,95,1103,88],[1143,97,1103,90,"c"],[1143,101,1103,91],[1143,102,1103,92],[1144,10,1104,6],[1145,8,1105,4],[1146,8,1106,4],[1146,15,1106,11],[1146,20,1106,16],[1147,6,1107,2],[1148,4,1107,3],[1149,6,1107,3,"key"],[1149,9,1107,3],[1150,6,1107,3,"value"],[1150,11,1107,3],[1150,13,1109,2],[1150,22,1109,2,"weOwnAddress"],[1150,34,1109,14,"weOwnAddress"],[1150,35,1109,15,"address"],[1150,42,1109,30],[1150,44,1109,32],[1151,8,1110,4],[1151,12,1110,8],[1151,13,1110,9,"address"],[1151,20,1110,16],[1151,22,1110,18],[1151,29,1110,25],[1151,34,1110,30],[1152,8,1111,4],[1152,12,1111,8,"cleanAddress"],[1152,24,1111,20],[1152,27,1111,23,"address"],[1152,34,1111,30],[1153,8,1113,4],[1153,12,1113,10,"isBech32Address"],[1153,27,1113,25],[1153,30,1113,28],[1153,34,1113,28,"isValidBech32Address"],[1153,65,1113,28],[1153,66,1113,28,"isValidBech32Address"],[1153,122,1113,48],[1153,124,1113,49,"address"],[1153,131,1113,56],[1153,132,1113,57],[1154,8,1115,4],[1154,12,1115,8,"isBech32Address"],[1154,27,1115,23],[1154,29,1115,25],[1155,10,1116,6,"cleanAddress"],[1155,22,1116,18],[1155,25,1116,21,"address"],[1155,32,1116,28],[1155,33,1116,29,"toLocaleLowerCase"],[1155,50,1116,46],[1155,51,1116,47],[1155,52,1116,48],[1156,8,1117,4],[1157,8,1119,4],[1157,13,1119,9],[1157,17,1119,13,"c"],[1157,18,1119,14],[1157,21,1119,17],[1157,22,1119,18],[1157,24,1119,20,"c"],[1157,25,1119,21],[1157,28,1119,24],[1157,32,1119,28],[1157,33,1119,29,"next_free_address_index"],[1157,56,1119,52],[1157,59,1119,55],[1157,63,1119,59],[1157,64,1119,60,"gap_limit"],[1157,73,1119,69],[1157,75,1119,71,"c"],[1157,76,1119,72],[1157,78,1119,74],[1157,80,1119,76],[1158,10,1120,6],[1158,14,1120,10],[1158,18,1120,14],[1158,19,1120,15,"_getExternalAddressByIndex"],[1158,45,1120,41],[1158,46,1120,42,"c"],[1158,47,1120,43],[1158,48,1120,44],[1158,53,1120,49,"cleanAddress"],[1158,65,1120,61],[1158,67,1120,63],[1158,74,1120,70],[1158,78,1120,74],[1159,8,1121,4],[1160,8,1122,4],[1160,13,1122,9],[1160,17,1122,13,"c"],[1160,21,1122,14],[1160,24,1122,17],[1160,25,1122,18],[1160,27,1122,20,"c"],[1160,31,1122,21],[1160,34,1122,24],[1160,38,1122,28],[1160,39,1122,29,"next_free_change_address_index"],[1160,69,1122,59],[1160,72,1122,62],[1160,76,1122,66],[1160,77,1122,67,"gap_limit"],[1160,86,1122,76],[1160,88,1122,78,"c"],[1160,92,1122,79],[1160,94,1122,81],[1160,96,1122,83],[1161,10,1123,6],[1161,14,1123,10],[1161,18,1123,14],[1161,19,1123,15,"_getInternalAddressByIndex"],[1161,45,1123,41],[1161,46,1123,42,"c"],[1161,50,1123,43],[1161,51,1123,44],[1161,56,1123,49,"cleanAddress"],[1161,68,1123,61],[1161,70,1123,63],[1161,77,1123,70],[1161,81,1123,74],[1162,8,1124,4],[1163,8,1125,4],[1163,13,1125,9],[1163,17,1125,15,"pc"],[1163,19,1125,17],[1163,23,1125,21],[1163,27,1125,25],[1163,28,1125,26,"_receive_payment_codes"],[1163,50,1125,48],[1163,52,1125,50],[1164,10,1126,6],[1164,15,1126,11],[1164,19,1126,15,"c"],[1164,23,1126,16],[1164,26,1126,19],[1164,27,1126,20],[1164,29,1126,22,"c"],[1164,33,1126,23],[1164,36,1126,26],[1164,40,1126,30],[1164,41,1126,31,"_getNextFreePaymentCodeIndexReceive"],[1164,76,1126,66],[1164,77,1126,67,"pc"],[1164,79,1126,69],[1164,80,1126,70],[1164,83,1126,73],[1164,87,1126,77],[1164,88,1126,78,"gap_limit"],[1164,97,1126,87],[1164,99,1126,89,"c"],[1164,103,1126,90],[1164,105,1126,92],[1164,107,1126,94],[1165,12,1127,8],[1165,16,1127,12],[1165,20,1127,16],[1165,21,1127,17,"_getBIP47AddressReceive"],[1165,44,1127,40],[1165,45,1127,41,"pc"],[1165,47,1127,43],[1165,49,1127,45,"c"],[1165,53,1127,46],[1165,54,1127,47],[1165,59,1127,52,"address"],[1165,66,1127,59],[1165,68,1127,61],[1165,75,1127,68],[1165,79,1127,72],[1166,10,1128,6],[1167,8,1129,4],[1168,8,1130,4],[1168,15,1130,11],[1168,20,1130,16],[1169,6,1131,2],[1171,6,1133,2],[1172,0,1134,0],[1173,0,1135,0],[1174,0,1136,0],[1175,0,1137,0],[1176,0,1138,0],[1177,0,1139,0],[1178,0,1140,0],[1179,0,1141,0],[1180,0,1142,0],[1181,0,1143,0],[1182,4,1133,2],[1183,6,1133,2,"key"],[1183,9,1133,2],[1184,6,1133,2,"value"],[1184,11,1133,2],[1184,13,1144,2],[1184,22,1144,2,"createTransaction"],[1184,39,1144,19,"createTransaction"],[1184,40,1145,4,"utxos"],[1184,45,1145,34],[1184,47,1146,4,"targets"],[1184,54,1146,38],[1184,56,1147,4,"feeRate"],[1184,63,1147,19],[1184,65,1148,4,"changeAddress"],[1184,78,1148,25],[1184,80,1152,29],[1185,8,1152,29],[1185,12,1152,29,"_this6"],[1185,18,1152,29],[1186,8,1152,29],[1186,12,1149,4,"sequence"],[1186,20,1149,20],[1186,23,1149,20,"arguments"],[1186,32,1149,20],[1186,33,1149,20,"length"],[1186,39,1149,20],[1186,47,1149,20,"arguments"],[1186,56,1149,20],[1186,64,1149,20,"undefined"],[1186,73,1149,20],[1186,76,1149,20,"arguments"],[1186,85,1149,20],[1186,91,1149,23,"AbstractHDElectrumWallet"],[1186,115,1149,47],[1186,116,1149,48,"defaultRBFSequence"],[1186,134,1149,66],[1187,8,1149,66],[1187,12,1150,4,"skipSigning"],[1187,23,1150,15],[1187,26,1150,15,"arguments"],[1187,35,1150,15],[1187,36,1150,15,"length"],[1187,42,1150,15],[1187,50,1150,15,"arguments"],[1187,59,1150,15],[1187,67,1150,15,"undefined"],[1187,76,1150,15],[1187,79,1150,15,"arguments"],[1187,88,1150,15],[1187,94,1150,18],[1187,99,1150,23],[1188,8,1150,23],[1188,12,1151,4,"masterFingerprint"],[1188,29,1151,29],[1188,32,1151,29,"arguments"],[1188,41,1151,29],[1188,42,1151,29,"length"],[1188,48,1151,29],[1188,56,1151,29,"arguments"],[1188,65,1151,29],[1188,73,1151,29,"undefined"],[1188,82,1151,29],[1188,85,1151,29,"arguments"],[1188,94,1151,29],[1188,100,1151,32],[1188,101,1151,33],[1189,8,1153,4],[1189,12,1153,8,"targets"],[1189,19,1153,15],[1189,20,1153,16,"length"],[1189,26,1153,22],[1189,31,1153,27],[1189,32,1153,28],[1189,34,1153,30],[1189,40,1153,36],[1189,44,1153,40,"Error"],[1189,49,1153,45],[1189,50,1153,46],[1189,75,1153,71],[1189,76,1153,72],[1190,8,1155,4],[1190,12,1155,4,"_this$coinselect"],[1190,28,1155,4],[1190,31,1155,35],[1190,35,1155,39],[1190,36,1155,40,"coinselect"],[1190,46,1155,50],[1190,47,1155,51,"utxos"],[1190,52,1155,56],[1190,54,1155,58,"targets"],[1190,61,1155,65],[1190,63,1155,67,"feeRate"],[1190,70,1155,74],[1190,71,1155,75],[1191,10,1155,10,"inputs"],[1191,16,1155,16],[1191,19,1155,16,"_this$coinselect"],[1191,35,1155,16],[1191,36,1155,10,"inputs"],[1191,42,1155,16],[1192,10,1155,18,"outputs"],[1192,17,1155,25],[1192,20,1155,25,"_this$coinselect"],[1192,36,1155,25],[1192,37,1155,18,"outputs"],[1192,44,1155,25],[1193,10,1155,27,"fee"],[1193,13,1155,30],[1193,16,1155,30,"_this$coinselect"],[1193,32,1155,30],[1193,33,1155,27,"fee"],[1193,36,1155,30],[1194,8,1157,4],[1194,12,1157,10,"hasSilentPaymentOutput"],[1194,34,1157,41],[1194,37,1157,44],[1194,38,1157,45],[1194,39,1157,46,"outputs"],[1194,46,1157,53],[1194,47,1157,54,"find"],[1194,51,1157,58],[1194,52,1157,59],[1194,62,1157,59,"o"],[1194,63,1157,60],[1195,10,1157,60],[1195,14,1157,60,"_o$address"],[1195,24,1157,60],[1196,10,1157,60],[1196,18,1157,60,"_o$address"],[1196,28,1157,60],[1196,31,1157,64,"o"],[1196,32,1157,65],[1196,33,1157,66,"address"],[1196,40,1157,73],[1196,61,1157,64,"_o$address"],[1196,71,1157,64],[1196,72,1157,75,"startsWith"],[1196,82,1157,85],[1196,83,1157,86],[1196,88,1157,91],[1196,89,1157,92],[1197,8,1157,92],[1197,10,1157,93],[1198,8,1158,4],[1198,12,1158,8,"hasSilentPaymentOutput"],[1198,34,1158,30],[1198,36,1158,32],[1199,10,1159,6],[1199,14,1159,10],[1199,15,1159,11],[1199,19,1159,15],[1199,20,1159,16,"allowSilentPaymentSend"],[1199,42,1159,38],[1199,43,1159,39],[1199,44,1159,40],[1199,46,1159,42],[1200,12,1160,8],[1200,18,1160,14],[1200,22,1160,18,"Error"],[1200,27,1160,23],[1200,28,1160,24],[1200,79,1160,75],[1200,80,1160,76],[1201,10,1161,6],[1203,10,1163,6],[1204,10,1164,6],[1204,14,1164,10,"utxoType"],[1204,22,1164,30],[1204,25,1164,33],[1204,39,1164,47],[1205,10,1165,6],[1205,18,1165,14],[1205,22,1165,18],[1205,23,1165,19,"segwitType"],[1205,33,1165,29],[1206,12,1166,8],[1206,17,1166,13],[1206,31,1166,27],[1207,14,1167,10,"utxoType"],[1207,22,1167,18],[1207,25,1167,21],[1207,38,1167,34],[1208,14,1168,10],[1209,12,1169,8],[1209,17,1169,13],[1209,25,1169,21],[1210,14,1170,10,"utxoType"],[1210,22,1170,18],[1210,25,1170,21],[1210,33,1170,29],[1211,14,1171,10],[1212,12,1172,8],[1213,14,1173,10],[1214,14,1174,10],[1214,18,1174,14],[1214,22,1174,18],[1214,23,1174,19,"type"],[1214,27,1174,23],[1214,32,1174,28],[1214,47,1174,43],[1214,49,1174,45,"utxoType"],[1214,57,1174,53],[1214,60,1174,56],[1214,67,1174,63],[1215,10,1175,6],[1216,10,1177,6],[1216,14,1177,12,"spUtxos"],[1216,21,1177,29],[1216,24,1177,32,"inputs"],[1216,30,1177,38],[1216,31,1177,39,"map"],[1216,34,1177,42],[1216,35,1177,43],[1216,45,1177,43,"u"],[1216,46,1177,44],[1217,12,1177,44],[1217,19,1177,44,"Object"],[1217,25,1177,44],[1217,26,1177,44,"assign"],[1217,32,1177,44],[1217,37,1177,54,"u"],[1217,38,1177,55],[1218,14,1177,57,"utxoType"],[1218,22,1177,65],[1218,24,1177,57,"utxoType"],[1218,32,1177,65],[1219,14,1177,67,"wif"],[1219,17,1177,70],[1219,19,1177,72,"u"],[1219,20,1177,73],[1219,21,1177,74,"wif"],[1220,12,1177,78],[1221,10,1177,78],[1221,11,1177,81],[1221,12,1177,82],[1222,10,1178,6],[1222,14,1178,12,"sp"],[1222,16,1178,14],[1222,19,1178,17],[1222,24,1178,21,"SilentPayment"],[1222,55,1178,21],[1222,56,1178,21,"SilentPayment"],[1222,88,1178,34],[1222,90,1178,35],[1222,91,1178,36],[1223,10,1179,6,"outputs"],[1223,17,1179,13],[1223,20,1179,16,"sp"],[1223,22,1179,18],[1223,23,1179,19,"createTransaction"],[1223,40,1179,36],[1223,41,1179,37,"spUtxos"],[1223,48,1179,44],[1223,50,1179,46,"outputs"],[1223,57,1179,53],[1223,58,1179,76],[1224,8,1180,4],[1225,8,1182,4,"sequence"],[1225,16,1182,12],[1225,19,1182,15,"sequence"],[1225,27,1182,23],[1225,31,1182,27,"AbstractHDElectrumWallet"],[1225,55,1182,51],[1225,56,1182,52,"defaultRBFSequence"],[1225,74,1182,70],[1226,8,1183,4],[1226,12,1183,8,"psbt"],[1226,16,1183,12],[1226,19,1183,15],[1226,23,1183,19,"bitcoin"],[1226,30,1183,26],[1226,31,1183,27,"Psbt"],[1226,35,1183,31],[1226,36,1183,32],[1226,37,1183,33],[1227,8,1184,4],[1227,12,1184,8,"c"],[1227,13,1184,9],[1227,16,1184,12],[1227,17,1184,13],[1228,8,1185,4],[1228,12,1185,10,"keypairs"],[1228,20,1185,51],[1228,23,1185,54],[1228,24,1185,55],[1228,25,1185,56],[1229,8,1186,4],[1229,12,1186,10,"values"],[1229,18,1186,40],[1229,21,1186,43],[1229,22,1186,44],[1229,23,1186,45],[1230,8,1188,4,"inputs"],[1230,14,1188,10],[1230,15,1188,11,"forEach"],[1230,22,1188,18],[1230,23,1188,19],[1230,33,1188,19,"input"],[1230,38,1188,24],[1230,40,1188,28],[1231,10,1189,6],[1231,14,1189,10,"keyPair"],[1231,21,1189,17],[1232,10,1190,6],[1232,14,1190,10],[1232,15,1190,11,"skipSigning"],[1232,26,1190,22],[1232,28,1190,24],[1233,12,1191,8],[1234,12,1192,8,"keyPair"],[1234,19,1192,15],[1234,22,1192,18,"ECPair"],[1234,28,1192,24],[1234,29,1192,25,"fromWIF"],[1234,36,1192,32],[1234,37,1192,33,"_this6"],[1234,43,1192,37],[1234,44,1192,38,"_getWifForAddress"],[1234,61,1192,55],[1234,62,1192,56,"String"],[1234,68,1192,62],[1234,69,1192,63,"input"],[1234,74,1192,68],[1234,75,1192,69,"address"],[1234,82,1192,76],[1234,83,1192,77],[1234,84,1192,78],[1234,85,1192,79],[1235,12,1193,8,"keypairs"],[1235,20,1193,16],[1235,21,1193,17,"c"],[1235,22,1193,18],[1235,23,1193,19],[1235,26,1193,22,"keyPair"],[1235,33,1193,29],[1236,10,1194,6],[1237,10,1195,6,"values"],[1237,16,1195,12],[1237,17,1195,13,"c"],[1237,18,1195,14],[1237,19,1195,15],[1237,22,1195,18,"input"],[1237,27,1195,23],[1237,28,1195,24,"value"],[1237,33,1195,29],[1238,10,1196,6,"c"],[1238,11,1196,7],[1238,13,1196,9],[1239,10,1197,6],[1239,14,1197,10],[1239,15,1197,11,"skipSigning"],[1239,26,1197,22],[1239,28,1197,24],[1240,12,1198,8],[1241,12,1199,8],[1241,16,1199,12],[1241,17,1199,13,"input"],[1241,22,1199,18],[1241,23,1199,19,"address"],[1241,30,1199,26],[1241,34,1199,30],[1241,35,1199,31,"_this6"],[1241,41,1199,35],[1241,42,1199,36,"_getWifForAddress"],[1241,59,1199,53],[1241,60,1199,54,"input"],[1241,65,1199,59],[1241,66,1199,60,"address"],[1241,73,1199,67],[1241,74,1199,68],[1241,76,1199,70],[1241,82,1199,76],[1241,86,1199,80,"Error"],[1241,91,1199,85],[1241,92,1199,86],[1241,141,1199,135],[1241,142,1199,136],[1242,10,1200,6],[1243,10,1202,6],[1243,14,1202,10,"masterFingerprintBuffer"],[1243,37,1202,33],[1244,10,1203,6],[1244,14,1203,10,"masterFingerprint"],[1244,31,1203,27],[1244,33,1203,29],[1245,12,1204,8],[1245,16,1204,12,"masterFingerprintHex"],[1245,36,1204,32],[1245,39,1204,35,"Number"],[1245,45,1204,41],[1245,46,1204,42,"masterFingerprint"],[1245,63,1204,59],[1245,64,1204,60],[1245,65,1204,61,"toString"],[1245,73,1204,69],[1245,74,1204,70],[1245,76,1204,72],[1245,77,1204,73],[1246,12,1205,8],[1246,16,1205,12,"masterFingerprintHex"],[1246,36,1205,32],[1246,37,1205,33,"length"],[1246,43,1205,39],[1246,46,1205,42],[1246,47,1205,43],[1246,49,1205,45,"masterFingerprintHex"],[1246,69,1205,65],[1246,72,1205,68],[1246,75,1205,71],[1246,78,1205,74,"masterFingerprintHex"],[1246,98,1205,94],[1246,99,1205,95],[1246,100,1205,96],[1247,12,1206,8],[1247,16,1206,14,"hexBuffer"],[1247,25,1206,23],[1247,28,1206,26,"Buffer"],[1247,34,1206,32],[1247,35,1206,33,"from"],[1247,39,1206,37],[1247,40,1206,38,"masterFingerprintHex"],[1247,60,1206,58],[1247,62,1206,60],[1247,67,1206,65],[1247,68,1206,66],[1248,12,1207,8,"masterFingerprintBuffer"],[1248,35,1207,31],[1248,38,1207,34,"Buffer"],[1248,44,1207,40],[1248,45,1207,41,"from"],[1248,49,1207,45],[1248,50,1207,46,"hexBuffer"],[1248,59,1207,55],[1248,60,1207,56],[1248,61,1207,57,"reverse"],[1248,68,1207,64],[1248,69,1207,65],[1248,70,1207,66],[1249,10,1208,6],[1249,11,1208,7],[1249,17,1208,13],[1250,12,1209,8,"masterFingerprintBuffer"],[1250,35,1209,31],[1250,38,1209,34,"Buffer"],[1250,44,1209,40],[1250,45,1209,41,"from"],[1250,49,1209,45],[1250,50,1209,46],[1250,51,1209,47],[1250,55,1209,51],[1250,57,1209,53],[1250,61,1209,57],[1250,63,1209,59],[1250,67,1209,63],[1250,69,1209,65],[1250,73,1209,69],[1250,74,1209,70],[1250,75,1209,71],[1251,10,1210,6],[1252,10,1211,6],[1253,10,1212,6],[1255,10,1214,6,"psbt"],[1255,14,1214,10],[1255,17,1214,13,"_this6"],[1255,23,1214,17],[1255,24,1214,18,"_addPsbtInput"],[1255,37,1214,31],[1255,38,1214,32,"psbt"],[1255,42,1214,36],[1255,44,1214,38,"input"],[1255,49,1214,43],[1255,51,1214,45,"sequence"],[1255,59,1214,53],[1255,61,1214,55,"masterFingerprintBuffer"],[1255,84,1214,78],[1255,85,1214,79],[1256,8,1215,4],[1256,9,1215,5],[1256,10,1215,6],[1257,8,1217,4,"outputs"],[1257,15,1217,11],[1257,16,1217,12,"forEach"],[1257,23,1217,19],[1257,24,1217,20],[1257,34,1217,20,"output"],[1257,40,1217,26],[1257,42,1217,30],[1258,10,1217,30],[1258,14,1217,30,"_output$script"],[1258,28,1217,30],[1258,30,1217,30,"_output$address"],[1258,45,1217,30],[1258,47,1217,30,"_output$script2"],[1258,62,1217,30],[1259,10,1218,6],[1260,10,1219,6],[1260,14,1219,10,"change"],[1260,20,1219,16],[1260,23,1219,19],[1260,28,1219,24],[1261,10,1220,6],[1262,10,1221,6],[1262,14,1221,10],[1262,15,1221,11,"output"],[1262,21,1221,17],[1262,22,1221,18,"address"],[1262,29,1221,25],[1262,33,1221,29],[1262,36,1221,29,"_output$script"],[1262,50,1221,29],[1262,53,1221,30,"output"],[1262,59,1221,36],[1262,60,1221,37,"script"],[1262,66,1221,43],[1262,79,1221,30,"_output$script"],[1262,93,1221,30],[1262,94,1221,45,"hex"],[1262,97,1221,48],[1262,100,1221,50],[1263,12,1222,8,"change"],[1263,18,1222,14],[1263,21,1222,17],[1263,25,1222,21],[1264,12,1223,8,"output"],[1264,18,1223,14],[1264,19,1223,15,"address"],[1264,26,1223,22],[1264,29,1223,25,"changeAddress"],[1264,42,1223,38],[1265,10,1224,6],[1266,10,1226,6],[1266,14,1226,12,"path"],[1266,18,1226,16],[1266,21,1226,19,"_this6"],[1266,27,1226,23],[1266,28,1226,24,"_getDerivationPathByAddress"],[1266,55,1226,51],[1266,56,1226,52,"String"],[1266,62,1226,58],[1266,63,1226,59,"output"],[1266,69,1226,65],[1266,70,1226,66,"address"],[1266,77,1226,73],[1266,78,1226,74],[1266,79,1226,75],[1267,10,1227,6],[1267,14,1227,12,"pubkey"],[1267,20,1227,18],[1267,23,1227,21,"_this6"],[1267,29,1227,25],[1267,30,1227,26,"_getPubkeyByAddress"],[1267,49,1227,45],[1267,50,1227,46,"String"],[1267,56,1227,52],[1267,57,1227,53,"output"],[1267,63,1227,59],[1267,64,1227,60,"address"],[1267,71,1227,67],[1267,72,1227,68],[1267,73,1227,69],[1268,10,1228,6],[1268,14,1228,10,"masterFingerprintBuffer"],[1268,37,1228,33],[1269,10,1230,6],[1269,14,1230,10,"masterFingerprint"],[1269,31,1230,27],[1269,33,1230,29],[1270,12,1231,8],[1270,16,1231,12,"masterFingerprintHex"],[1270,36,1231,32],[1270,39,1231,35,"Number"],[1270,45,1231,41],[1270,46,1231,42,"masterFingerprint"],[1270,63,1231,59],[1270,64,1231,60],[1270,65,1231,61,"toString"],[1270,73,1231,69],[1270,74,1231,70],[1270,76,1231,72],[1270,77,1231,73],[1271,12,1232,8],[1271,16,1232,12,"masterFingerprintHex"],[1271,36,1232,32],[1271,37,1232,33,"length"],[1271,43,1232,39],[1271,46,1232,42],[1271,47,1232,43],[1271,49,1232,45,"masterFingerprintHex"],[1271,69,1232,65],[1271,72,1232,68],[1271,75,1232,71],[1271,78,1232,74,"masterFingerprintHex"],[1271,98,1232,94],[1271,99,1232,95],[1271,100,1232,96],[1272,12,1233,8],[1272,16,1233,14,"hexBuffer"],[1272,25,1233,23],[1272,28,1233,26,"Buffer"],[1272,34,1233,32],[1272,35,1233,33,"from"],[1272,39,1233,37],[1272,40,1233,38,"masterFingerprintHex"],[1272,60,1233,58],[1272,62,1233,60],[1272,67,1233,65],[1272,68,1233,66],[1273,12,1234,8,"masterFingerprintBuffer"],[1273,35,1234,31],[1273,38,1234,34,"Buffer"],[1273,44,1234,40],[1273,45,1234,41,"from"],[1273,49,1234,45],[1273,50,1234,46,"hexBuffer"],[1273,59,1234,55],[1273,60,1234,56],[1273,61,1234,57,"reverse"],[1273,68,1234,64],[1273,69,1234,65],[1273,70,1234,66],[1274,10,1235,6],[1274,11,1235,7],[1274,17,1235,13],[1275,12,1236,8,"masterFingerprintBuffer"],[1275,35,1236,31],[1275,38,1236,34,"Buffer"],[1275,44,1236,40],[1275,45,1236,41,"from"],[1275,49,1236,45],[1275,50,1236,46],[1275,51,1236,47],[1275,55,1236,51],[1275,57,1236,53],[1275,61,1236,57],[1275,63,1236,59],[1275,67,1236,63],[1275,69,1236,65],[1275,73,1236,69],[1275,74,1236,70],[1275,75,1236,71],[1276,10,1237,6],[1278,10,1239,6],[1279,10,1240,6],[1281,10,1242,6],[1281,15,1242,6,"_output$address"],[1281,30,1242,6],[1281,33,1242,10,"output"],[1281,39,1242,16],[1281,40,1242,17,"address"],[1281,47,1242,24],[1281,60,1242,10,"_output$address"],[1281,75,1242,10],[1281,76,1242,26,"startsWith"],[1281,86,1242,36],[1281,87,1242,37],[1281,91,1242,41],[1281,92,1242,42],[1281,94,1242,44],[1282,12,1243,8],[1283,12,1244,8,"output"],[1283,18,1244,14],[1283,19,1244,15,"address"],[1283,26,1244,22],[1283,29,1244,25,"_this6"],[1283,35,1244,29],[1283,36,1244,30,"_getNextFreePaymentCodeAddressSend"],[1283,70,1244,64],[1283,71,1244,65,"output"],[1283,77,1244,71],[1283,78,1244,72,"address"],[1283,85,1244,79],[1283,86,1244,80],[1284,12,1245,8],[1285,10,1246,6],[1286,10,1248,6,"psbt"],[1286,14,1248,10],[1286,15,1248,11,"addOutput"],[1286,24,1248,20],[1286,25,1248,21],[1287,12,1249,8,"address"],[1287,19,1249,15],[1287,21,1249,17,"output"],[1287,27,1249,23],[1287,28,1249,24,"address"],[1287,35,1249,31],[1288,12,1250,8],[1289,12,1251,8,"script"],[1289,18,1251,14],[1289,20,1251,16],[1289,21,1251,16,"_output$script2"],[1289,36,1251,16],[1289,39,1251,16,"output"],[1289,45,1251,22],[1289,46,1251,23,"script"],[1289,52,1251,29],[1289,65,1251,16,"_output$script2"],[1289,80,1251,16],[1289,81,1251,31,"hex"],[1289,84,1251,34],[1289,87,1251,37,"Buffer"],[1289,93,1251,43],[1289,94,1251,44,"from"],[1289,98,1251,48],[1289,99,1251,49,"output"],[1289,105,1251,55],[1289,106,1251,56,"script"],[1289,112,1251,62],[1289,113,1251,63,"hex"],[1289,116,1251,66],[1289,118,1251,68],[1289,123,1251,73],[1289,124,1251,74],[1289,127,1251,77,"undefined"],[1289,136,1251,86],[1290,12,1252,8,"value"],[1290,17,1252,13],[1290,19,1252,15,"BigInt"],[1290,25,1252,21],[1290,26,1252,22,"output"],[1290,32,1252,28],[1290,33,1252,29,"value"],[1290,38,1252,34],[1290,39,1252,35],[1291,12,1253,8,"bip32Derivation"],[1291,27,1253,23],[1291,29,1254,10,"change"],[1291,35,1254,16],[1291,39,1254,20,"path"],[1291,43,1254,24],[1291,47,1254,28,"pubkey"],[1291,53,1254,34],[1291,56,1255,14],[1291,57,1256,16],[1292,14,1257,18,"masterFingerprint"],[1292,31,1257,35],[1292,33,1257,37,"masterFingerprintBuffer"],[1292,56,1257,60],[1293,14,1258,18,"path"],[1293,18,1258,22],[1293,20,1258,18,"path"],[1293,24,1258,22],[1294,14,1259,18,"pubkey"],[1294,20,1259,24],[1294,22,1259,18,"pubkey"],[1295,12,1260,16],[1295,13,1260,17],[1295,14,1261,15],[1295,17,1262,14],[1296,10,1263,6],[1296,11,1263,7],[1296,12,1263,8],[1297,8,1264,4],[1297,9,1264,5],[1297,10,1264,6],[1298,8,1266,4],[1298,12,1266,8],[1298,13,1266,9,"skipSigning"],[1298,24,1266,20],[1298,26,1266,22],[1299,10,1267,6],[1300,10,1268,6],[1300,15,1268,11],[1300,19,1268,15,"cc"],[1300,21,1268,17],[1300,24,1268,20],[1300,25,1268,21],[1300,27,1268,23,"cc"],[1300,29,1268,25],[1300,32,1268,28,"c"],[1300,33,1268,29],[1300,35,1268,31,"cc"],[1300,37,1268,33],[1300,39,1268,35],[1300,41,1268,37],[1301,12,1269,8,"psbt"],[1301,16,1269,12],[1301,17,1269,13,"signInput"],[1301,26,1269,22],[1301,27,1269,23,"cc"],[1301,29,1269,25],[1301,31,1269,27,"keypairs"],[1301,39,1269,35],[1301,40,1269,36,"cc"],[1301,42,1269,38],[1301,43,1269,39],[1301,44,1269,40],[1302,10,1270,6],[1303,8,1271,4],[1304,8,1273,4],[1304,12,1273,8,"tx"],[1304,14,1273,10],[1305,8,1274,4],[1305,12,1274,8],[1305,13,1274,9,"skipSigning"],[1305,24,1274,20],[1305,26,1274,22],[1306,10,1275,6,"tx"],[1306,12,1275,8],[1306,15,1275,11,"psbt"],[1306,19,1275,15],[1306,20,1275,16,"finalizeAllInputs"],[1306,37,1275,33],[1306,38,1275,34],[1306,39,1275,35],[1306,40,1275,36,"extractTransaction"],[1306,58,1275,54],[1306,59,1275,55],[1306,60,1275,56],[1307,8,1276,4],[1308,8,1277,4],[1308,15,1277,11],[1309,10,1277,13,"tx"],[1309,12,1277,15],[1309,14,1277,13,"tx"],[1309,16,1277,15],[1310,10,1277,17,"inputs"],[1310,16,1277,23],[1310,18,1277,17,"inputs"],[1310,24,1277,23],[1311,10,1277,25,"outputs"],[1311,17,1277,32],[1311,19,1277,25,"outputs"],[1311,26,1277,32],[1312,10,1277,34,"fee"],[1312,13,1277,37],[1312,15,1277,34,"fee"],[1312,18,1277,37],[1313,10,1277,39,"psbt"],[1313,14,1277,43],[1313,16,1277,39,"psbt"],[1314,8,1277,44],[1314,9,1277,45],[1315,6,1278,2],[1316,4,1278,3],[1317,6,1278,3,"key"],[1317,9,1278,3],[1318,6,1278,3,"value"],[1318,11,1278,3],[1318,13,1280,2],[1318,22,1280,2,"_addPsbtInput"],[1318,35,1280,15,"_addPsbtInput"],[1318,36,1280,16,"psbt"],[1318,40,1280,26],[1318,42,1280,28,"input"],[1318,47,1280,56],[1318,49,1280,58,"sequence"],[1318,57,1280,74],[1318,59,1280,76,"masterFingerprintBuffer"],[1318,82,1280,107],[1318,84,1280,109],[1319,8,1281,4],[1319,12,1281,8],[1319,13,1281,9,"input"],[1319,18,1281,14],[1319,19,1281,15,"address"],[1319,26,1281,22],[1319,28,1281,24],[1320,10,1282,6],[1320,16,1282,12],[1320,20,1282,16,"Error"],[1320,25,1282,21],[1320,26,1282,22],[1320,85,1282,81],[1320,86,1282,82],[1321,8,1283,4],[1322,8,1284,4],[1322,12,1284,10,"pubkey"],[1322,18,1284,16],[1322,21,1284,19],[1322,25,1284,23],[1322,26,1284,24,"_getPubkeyByAddress"],[1322,45,1284,43],[1322,46,1284,44,"input"],[1322,51,1284,49],[1322,52,1284,50,"address"],[1322,59,1284,57],[1322,60,1284,58],[1323,8,1285,4],[1323,12,1285,10,"path"],[1323,16,1285,14],[1323,19,1285,17],[1323,23,1285,21],[1323,24,1285,22,"_getDerivationPathByAddress"],[1323,51,1285,49],[1323,52,1285,50,"input"],[1323,57,1285,55],[1323,58,1285,56,"address"],[1323,65,1285,63],[1323,66,1285,64],[1324,8,1286,4],[1324,12,1286,8],[1324,13,1286,9,"pubkey"],[1324,19,1286,15],[1324,23,1286,19],[1324,24,1286,20,"path"],[1324,28,1286,24],[1324,30,1286,26],[1325,10,1287,6],[1325,16,1287,12],[1325,20,1287,16,"Error"],[1325,25,1287,21],[1325,26,1287,22],[1325,70,1287,66],[1325,71,1287,67],[1326,8,1288,4],[1327,8,1289,4],[1327,12,1289,10,"p2wpkh"],[1327,18,1289,16],[1327,21,1289,19,"bitcoin"],[1327,28,1289,26],[1327,29,1289,27,"payments"],[1327,37,1289,35],[1327,38,1289,36,"p2wpkh"],[1327,44,1289,42],[1327,45,1289,43],[1328,10,1289,45,"pubkey"],[1328,16,1289,51],[1328,18,1289,45,"pubkey"],[1329,8,1289,52],[1329,9,1289,53],[1329,10,1289,54],[1330,8,1290,4],[1330,12,1290,8],[1330,13,1290,9,"p2wpkh"],[1330,19,1290,15],[1330,20,1290,16,"output"],[1330,26,1290,22],[1330,28,1290,24],[1331,10,1291,6],[1331,16,1291,12],[1331,20,1291,16,"Error"],[1331,25,1291,21],[1331,26,1291,22],[1331,95,1291,91],[1331,96,1291,92],[1332,8,1292,4],[1333,8,1294,4,"psbt"],[1333,12,1294,8],[1333,13,1294,9,"addInput"],[1333,21,1294,17],[1333,22,1294,18],[1334,10,1295,6,"hash"],[1334,14,1295,10],[1334,16,1295,12,"input"],[1334,21,1295,17],[1334,22,1295,18,"txid"],[1334,26,1295,22],[1335,10,1296,6,"index"],[1335,15,1296,11],[1335,17,1296,13,"input"],[1335,22,1296,18],[1335,23,1296,19,"vout"],[1335,27,1296,23],[1336,10,1297,6,"sequence"],[1336,18,1297,14],[1336,20,1297,6,"sequence"],[1336,28,1297,14],[1337,10,1298,6,"bip32Derivation"],[1337,25,1298,21],[1337,27,1298,23],[1337,28,1299,8],[1338,12,1300,10,"masterFingerprint"],[1338,29,1300,27],[1338,31,1300,29,"masterFingerprintBuffer"],[1338,54,1300,52],[1339,12,1301,10,"path"],[1339,16,1301,14],[1339,18,1301,10,"path"],[1339,22,1301,14],[1340,12,1302,10,"pubkey"],[1340,18,1302,16],[1340,20,1302,10,"pubkey"],[1341,10,1303,8],[1341,11,1303,9],[1341,12,1304,7],[1342,10,1305,6,"witnessUtxo"],[1342,21,1305,17],[1342,23,1305,19],[1343,12,1306,8,"script"],[1343,18,1306,14],[1343,20,1306,16,"p2wpkh"],[1343,26,1306,22],[1343,27,1306,23,"output"],[1343,33,1306,29],[1344,12,1307,8,"value"],[1344,17,1307,13],[1344,19,1307,15,"BigInt"],[1344,25,1307,21],[1344,26,1307,22,"input"],[1344,31,1307,27],[1344,32,1307,28,"value"],[1344,37,1307,33],[1345,10,1308,6],[1346,8,1309,4],[1346,9,1309,5],[1346,10,1309,6],[1347,8,1311,4],[1347,15,1311,11,"psbt"],[1347,19,1311,15],[1348,6,1312,2],[1350,6,1314,2],[1351,0,1315,0],[1352,0,1316,0],[1353,0,1317,0],[1354,0,1318,0],[1355,0,1319,0],[1356,0,1320,0],[1357,0,1321,0],[1358,4,1314,2],[1359,6,1314,2,"key"],[1359,9,1314,2],[1360,6,1314,2,"value"],[1360,11,1314,2],[1360,13,1322,2],[1360,22,1322,2,"combinePsbt"],[1360,33,1322,13,"combinePsbt"],[1360,34,1322,14,"base64one"],[1360,43,1322,38],[1360,45,1322,40,"base64two"],[1360,54,1322,64],[1360,56,1322,66],[1361,8,1323,4],[1361,12,1323,10,"final1"],[1361,18,1323,16],[1361,21,1323,19],[1361,28,1323,26,"base64one"],[1361,37,1323,35],[1361,42,1323,40],[1361,50,1323,48],[1361,53,1323,51,"bitcoin"],[1361,60,1323,58],[1361,61,1323,59,"Psbt"],[1361,65,1323,63],[1361,66,1323,64,"fromBase64"],[1361,76,1323,74],[1361,77,1323,75,"base64one"],[1361,86,1323,84],[1361,87,1323,85],[1361,90,1323,88,"base64one"],[1361,99,1323,97],[1362,8,1324,4],[1362,12,1324,10,"final2"],[1362,18,1324,16],[1362,21,1324,19],[1362,28,1324,26,"base64two"],[1362,37,1324,35],[1362,42,1324,40],[1362,50,1324,48],[1362,53,1324,51,"bitcoin"],[1362,60,1324,58],[1362,61,1324,59,"Psbt"],[1362,65,1324,63],[1362,66,1324,64,"fromBase64"],[1362,76,1324,74],[1362,77,1324,75,"base64two"],[1362,86,1324,84],[1362,87,1324,85],[1362,90,1324,88,"base64two"],[1362,99,1324,97],[1363,8,1325,4,"final1"],[1363,14,1325,10],[1363,15,1325,11,"combine"],[1363,22,1325,18],[1363,23,1325,19,"final2"],[1363,29,1325,25],[1363,30,1325,26],[1364,8,1327,4],[1364,12,1327,8,"extractedTransaction"],[1364,32,1327,28],[1365,8,1328,4],[1365,12,1328,8],[1366,10,1329,6,"extractedTransaction"],[1366,30,1329,26],[1366,33,1329,29,"final1"],[1366,39,1329,35],[1366,40,1329,36,"finalizeAllInputs"],[1366,57,1329,53],[1366,58,1329,54],[1366,59,1329,55],[1366,60,1329,56,"extractTransaction"],[1366,78,1329,74],[1366,79,1329,75],[1366,80,1329,76],[1367,8,1330,4],[1367,9,1330,5],[1367,10,1330,6],[1367,17,1330,13,"_"],[1367,18,1330,14],[1367,20,1330,16],[1368,10,1331,6],[1369,10,1332,6,"extractedTransaction"],[1369,30,1332,26],[1369,33,1332,29,"final1"],[1369,39,1332,35],[1369,40,1332,36,"extractTransaction"],[1369,58,1332,54],[1369,59,1332,55],[1369,60,1332,56],[1370,8,1333,4],[1371,8,1335,4],[1371,15,1335,11,"extractedTransaction"],[1371,35,1335,31],[1372,6,1336,2],[1374,6,1338,2],[1375,0,1339,0],[1376,0,1340,0],[1377,4,1338,2],[1378,6,1338,2,"key"],[1378,9,1338,2],[1379,6,1338,2,"value"],[1379,11,1338,2],[1379,13,1341,2],[1379,22,1341,2,"_nodeToBech32SegwitAddress"],[1379,48,1341,28,"_nodeToBech32SegwitAddress"],[1379,49,1341,29,"hdNode"],[1379,55,1341,51],[1379,57,1341,61],[1380,8,1342,4],[1380,12,1342,4,"_bitcoin$payments$p2w"],[1380,33,1342,4],[1380,36,1342,24,"bitcoin"],[1380,43,1342,31],[1380,44,1342,32,"payments"],[1380,52,1342,40],[1380,53,1342,41,"p2wpkh"],[1380,59,1342,47],[1380,60,1342,48],[1381,12,1343,6,"pubkey"],[1381,18,1343,12],[1381,20,1343,14,"hdNode"],[1381,26,1343,20],[1381,27,1343,21,"publicKey"],[1382,10,1344,4],[1382,11,1344,5],[1382,12,1344,6],[1383,10,1342,12,"address"],[1383,17,1342,19],[1383,20,1342,19,"_bitcoin$payments$p2w"],[1383,41,1342,19],[1383,42,1342,12,"address"],[1383,49,1342,19],[1384,8,1346,4],[1384,12,1346,8],[1384,13,1346,9,"address"],[1384,20,1346,16],[1384,22,1346,18],[1385,10,1347,6],[1385,16,1347,12],[1385,20,1347,16,"Error"],[1385,25,1347,21],[1385,26,1347,22],[1385,82,1347,78],[1385,83,1347,79],[1386,8,1348,4],[1387,8,1350,4],[1387,15,1350,11,"address"],[1387,22,1350,18],[1388,6,1351,2],[1389,4,1351,3],[1390,6,1351,3,"key"],[1390,9,1351,3],[1391,6,1351,3,"value"],[1391,11,1351,3],[1391,13,1353,2],[1391,22,1353,2,"_nodeToLegacyAddress"],[1391,42,1353,22,"_nodeToLegacyAddress"],[1391,43,1353,23,"hdNode"],[1391,49,1353,45],[1391,51,1353,55],[1392,8,1354,4],[1392,12,1354,4,"_bitcoin$payments$p2p"],[1392,33,1354,4],[1392,36,1354,24,"bitcoin"],[1392,43,1354,31],[1392,44,1354,32,"payments"],[1392,52,1354,40],[1392,53,1354,41,"p2pkh"],[1392,58,1354,46],[1392,59,1354,47],[1393,12,1355,6,"pubkey"],[1393,18,1355,12],[1393,20,1355,14,"hdNode"],[1393,26,1355,20],[1393,27,1355,21,"publicKey"],[1394,10,1356,4],[1394,11,1356,5],[1394,12,1356,6],[1395,10,1354,12,"address"],[1395,17,1354,19],[1395,20,1354,19,"_bitcoin$payments$p2p"],[1395,41,1354,19],[1395,42,1354,12,"address"],[1395,49,1354,19],[1396,8,1358,4],[1396,12,1358,8],[1396,13,1358,9,"address"],[1396,20,1358,16],[1396,22,1358,18],[1397,10,1359,6],[1397,16,1359,12],[1397,20,1359,16,"Error"],[1397,25,1359,21],[1397,26,1359,22],[1397,76,1359,72],[1397,77,1359,73],[1398,8,1360,4],[1399,8,1362,4],[1399,15,1362,11,"address"],[1399,22,1362,18],[1400,6,1363,2],[1402,6,1365,2],[1403,0,1366,0],[1404,0,1367,0],[1405,4,1365,2],[1406,6,1365,2,"key"],[1406,9,1365,2],[1407,6,1365,2,"value"],[1407,11,1365,2],[1407,13,1368,2],[1407,22,1368,2,"_nodeToP2shSegwitAddress"],[1407,46,1368,26,"_nodeToP2shSegwitAddress"],[1407,47,1368,27,"hdNode"],[1407,53,1368,49],[1407,55,1368,59],[1408,8,1369,4],[1408,12,1369,4,"_bitcoin$payments$p2s"],[1408,33,1369,4],[1408,36,1369,24,"bitcoin"],[1408,43,1369,31],[1408,44,1369,32,"payments"],[1408,52,1369,40],[1408,53,1369,41,"p2sh"],[1408,57,1369,45],[1408,58,1369,46],[1409,12,1370,6,"redeem"],[1409,18,1370,12],[1409,20,1370,14,"bitcoin"],[1409,27,1370,21],[1409,28,1370,22,"payments"],[1409,36,1370,30],[1409,37,1370,31,"p2wpkh"],[1409,43,1370,37],[1409,44,1370,38],[1410,14,1370,40,"pubkey"],[1410,20,1370,46],[1410,22,1370,48,"hdNode"],[1410,28,1370,54],[1410,29,1370,55,"publicKey"],[1411,12,1370,65],[1411,13,1370,66],[1412,10,1371,4],[1412,11,1371,5],[1412,12,1371,6],[1413,10,1369,12,"address"],[1413,17,1369,19],[1413,20,1369,19,"_bitcoin$payments$p2s"],[1413,41,1369,19],[1413,42,1369,12,"address"],[1413,49,1369,19],[1414,8,1373,4],[1414,12,1373,8],[1414,13,1373,9,"address"],[1414,20,1373,16],[1414,22,1373,18],[1415,10,1374,6],[1415,16,1374,12],[1415,20,1374,16,"Error"],[1415,25,1374,21],[1415,26,1374,22],[1415,80,1374,76],[1415,81,1374,77],[1416,8,1375,4],[1417,8,1377,4],[1417,15,1377,11,"address"],[1417,22,1377,18],[1418,6,1378,2],[1419,4,1378,3],[1420,6,1378,3,"key"],[1420,9,1378,3],[1421,6,1378,3,"value"],[1421,11,1378,3],[1422,6,1390,2],[1423,0,1391,0],[1424,0,1392,0],[1425,0,1393,0],[1426,0,1394,0],[1427,0,1395,0],[1428,0,1396,0],[1429,0,1397,0],[1430,6,1390,2],[1431,8,1390,2],[1431,12,1390,2,"_wasEverUsed"],[1431,24,1390,2],[1431,31,1390,2,"_asyncToGenerator2"],[1431,49,1390,2],[1431,50,1390,2,"default"],[1431,57,1390,2],[1431,59,1398,2],[1431,72,1398,40],[1432,10,1399,4],[1432,14,1399,10,"txs1"],[1432,18,1399,14],[1432,27,1399,23,"BlueElectrum"],[1432,39,1399,35],[1432,40,1399,36,"getTransactionsByAddress"],[1432,64,1399,60],[1432,65,1399,61],[1432,69,1399,65],[1432,70,1399,66,"_getExternalAddressByIndex"],[1432,96,1399,92],[1432,97,1399,93],[1432,98,1399,94],[1432,99,1399,95],[1432,100,1399,96],[1433,10,1400,4],[1433,14,1400,8,"txs1"],[1433,18,1400,12],[1433,19,1400,13,"length"],[1433,25,1400,19],[1433,28,1400,22],[1433,29,1400,23],[1433,31,1400,25],[1434,12,1401,6],[1434,19,1401,13],[1434,23,1401,17],[1435,10,1402,4],[1436,10,1403,4],[1436,14,1403,8],[1436,15,1403,9],[1436,19,1403,13],[1436,20,1403,14,"allowBIP47"],[1436,30,1403,24],[1436,31,1403,25],[1436,32,1403,26],[1436,34,1403,28],[1437,12,1404,6],[1437,19,1404,13],[1437,24,1404,18],[1438,10,1405,4],[1439,10,1406,4],[1439,14,1406,8],[1440,12,1407,6],[1441,12,1408,6],[1441,16,1408,10],[1441,17,1408,11,"getDerivationPath"],[1441,34,1408,28],[1441,35,1408,29],[1441,36,1408,30],[1442,10,1409,4],[1442,11,1409,5],[1442,12,1409,6],[1442,19,1409,13,"_"],[1442,20,1409,14],[1442,22,1409,16],[1443,12,1410,6],[1443,19,1410,13],[1443,24,1410,18],[1444,10,1411,4],[1445,10,1412,4],[1446,10,1413,4],[1446,14,1413,8],[1446,15,1413,9],[1446,16,1413,10],[1446,29,1413,23],[1446,31,1413,25],[1446,44,1413,38],[1446,46,1413,40],[1446,59,1413,53],[1446,60,1413,54],[1446,61,1413,55,"includes"],[1446,69,1413,63],[1446,70,1413,64],[1446,74,1413,68],[1446,75,1413,69,"getDerivationPath"],[1446,92,1413,86],[1446,93,1413,87],[1446,94,1413,98],[1446,95,1413,99],[1446,97,1413,101],[1447,12,1414,6],[1447,19,1414,13],[1447,24,1414,18],[1448,10,1415,4],[1449,10,1417,4],[1449,14,1417,10,"bip47_instance"],[1449,28,1417,24],[1449,31,1417,27],[1449,35,1417,31],[1449,36,1417,32,"getBIP47FromSeed"],[1449,52,1417,48],[1449,53,1417,49],[1449,54,1417,50],[1450,10,1418,4],[1450,14,1418,10,"address"],[1450,21,1418,17],[1450,24,1418,20,"bip47_instance"],[1450,38,1418,34],[1450,39,1418,35,"getNotificationAddress"],[1450,61,1418,57],[1450,62,1418,58],[1450,63,1418,59],[1451,10,1419,4],[1451,14,1419,10,"txs2"],[1451,18,1419,14],[1451,27,1419,23,"BlueElectrum"],[1451,39,1419,35],[1451,40,1419,36,"getTransactionsByAddress"],[1451,64,1419,60],[1451,65,1419,61,"address"],[1451,72,1419,68],[1451,73,1419,69],[1452,10,1420,4],[1452,17,1420,11,"txs2"],[1452,21,1420,15],[1452,22,1420,16,"length"],[1452,28,1420,22],[1452,31,1420,25],[1452,32,1420,26],[1453,8,1421,2],[1453,9,1421,3],[1454,8,1421,3],[1454,17,1398,8,"wasEverUsed"],[1454,28,1398,19,"wasEverUsed"],[1454,29,1398,19],[1455,10,1398,19],[1455,17,1398,19,"_wasEverUsed"],[1455,29,1398,19],[1455,30,1398,19,"apply"],[1455,35,1398,19],[1455,42,1398,19,"arguments"],[1455,51,1398,19],[1456,8,1398,19],[1457,8,1398,19],[1457,15,1398,8,"wasEverUsed"],[1457,26,1398,19],[1458,6,1398,19],[1459,6,1423,2],[1460,0,1424,0],[1461,0,1425,0],[1462,6,1423,2],[1463,4,1423,2],[1464,6,1423,2,"key"],[1464,9,1423,2],[1465,6,1423,2,"value"],[1465,11,1423,2],[1465,13,1426,2],[1465,22,1426,2,"getAllExternalAddresses"],[1465,45,1426,25,"getAllExternalAddresses"],[1465,46,1426,25],[1465,48,1426,28],[1466,8,1427,4],[1466,12,1427,10,"ret"],[1466,15,1427,13],[1466,18,1427,16],[1466,20,1427,18],[1467,8,1429,4],[1467,13,1429,9],[1467,17,1429,13,"c"],[1467,18,1429,14],[1467,21,1429,17],[1467,22,1429,18],[1467,24,1429,20,"c"],[1467,25,1429,21],[1467,28,1429,24],[1467,32,1429,28],[1467,33,1429,29,"next_free_address_index"],[1467,56,1429,52],[1467,59,1429,55],[1467,63,1429,59],[1467,64,1429,60,"gap_limit"],[1467,73,1429,69],[1467,75,1429,71,"c"],[1467,76,1429,72],[1467,78,1429,74],[1467,80,1429,76],[1468,10,1430,6,"ret"],[1468,13,1430,9],[1468,14,1430,10,"push"],[1468,18,1430,14],[1468,19,1430,15],[1468,23,1430,19],[1468,24,1430,20,"_getExternalAddressByIndex"],[1468,50,1430,46],[1468,51,1430,47,"c"],[1468,52,1430,48],[1468,53,1430,49],[1468,54,1430,50],[1469,8,1431,4],[1470,8,1433,4],[1470,12,1433,8],[1470,16,1433,12],[1470,17,1433,13,"allowBIP47"],[1470,27,1433,23],[1470,28,1433,24],[1470,29,1433,25],[1470,33,1433,29],[1470,37,1433,33],[1470,38,1433,34,"isBIP47Enabled"],[1470,52,1433,48],[1470,53,1433,49],[1470,54,1433,50],[1470,56,1433,52],[1471,10,1434,6],[1473,10,1436,6],[1473,15,1436,11],[1473,19,1436,17,"pc"],[1473,21,1436,19],[1473,25,1436,23],[1473,29,1436,27],[1473,30,1436,28,"_receive_payment_codes"],[1473,52,1436,50],[1473,54,1436,52],[1474,12,1437,8],[1474,17,1437,13],[1474,21,1437,17,"c"],[1474,25,1437,18],[1474,28,1437,21],[1474,29,1437,22],[1474,31,1437,24,"c"],[1474,35,1437,25],[1474,38,1437,28],[1474,42,1437,32],[1474,43,1437,33,"_getNextFreePaymentCodeIndexReceive"],[1474,78,1437,68],[1474,79,1437,69,"pc"],[1474,81,1437,71],[1474,82,1437,72],[1474,85,1437,75],[1474,89,1437,79],[1474,90,1437,80,"gap_limit"],[1474,99,1437,89],[1474,102,1437,92],[1474,103,1437,93],[1474,105,1437,95,"c"],[1474,109,1437,96],[1474,111,1437,98],[1474,113,1437,100],[1475,14,1438,10],[1476,14,1439,10,"ret"],[1476,17,1439,13],[1476,18,1439,14,"push"],[1476,22,1439,18],[1476,23,1439,19],[1476,27,1439,23],[1476,28,1439,24,"_getBIP47AddressReceive"],[1476,51,1439,47],[1476,52,1439,48,"pc"],[1476,54,1439,50],[1476,56,1439,52,"c"],[1476,60,1439,53],[1476,61,1439,54],[1476,62,1439,55],[1477,12,1440,8],[1478,10,1441,6],[1479,8,1442,4],[1480,8,1444,4],[1480,15,1444,11,"ret"],[1480,18,1444,14],[1481,6,1445,2],[1483,6,1447,2],[1484,0,1448,0],[1485,0,1449,0],[1486,0,1450,0],[1487,0,1451,0],[1488,0,1452,0],[1489,4,1447,2],[1490,6,1447,2,"key"],[1490,9,1447,2],[1491,6,1447,2,"value"],[1491,11,1447,2],[1491,13,1453,2],[1491,22,1453,2,"addressIsChange"],[1491,37,1453,17,"addressIsChange"],[1491,38,1453,18,"address"],[1491,45,1453,33],[1491,47,1453,35],[1492,8,1454,4],[1492,13,1454,9],[1492,17,1454,13,"c"],[1492,18,1454,14],[1492,21,1454,17],[1492,22,1454,18],[1492,24,1454,20,"c"],[1492,25,1454,21],[1492,28,1454,24],[1492,32,1454,28],[1492,33,1454,29,"next_free_change_address_index"],[1492,63,1454,59],[1492,66,1454,62],[1492,67,1454,63],[1492,69,1454,65,"c"],[1492,70,1454,66],[1492,72,1454,68],[1492,74,1454,70],[1493,10,1455,6],[1493,14,1455,10,"address"],[1493,21,1455,17],[1493,26,1455,22],[1493,30,1455,26],[1493,31,1455,27,"_getInternalAddressByIndex"],[1493,57,1455,53],[1493,58,1455,54,"c"],[1493,59,1455,55],[1493,60,1455,56],[1493,62,1455,58],[1493,69,1455,65],[1493,73,1455,69],[1494,8,1456,4],[1495,8,1457,4],[1495,15,1457,11],[1495,20,1457,16],[1496,6,1458,2],[1497,4,1458,3],[1498,6,1458,3,"key"],[1498,9,1458,3],[1499,6,1458,3,"value"],[1499,11,1458,3],[1499,13,1460,2],[1499,22,1460,2,"calculateHowManySignaturesWeHaveFromPsbt"],[1499,62,1460,42,"calculateHowManySignaturesWeHaveFromPsbt"],[1499,63,1460,43,"psbt"],[1499,67,1460,53],[1499,69,1460,55],[1500,8,1461,4],[1500,12,1461,8,"sigsHave"],[1500,20,1461,16],[1500,23,1461,19],[1500,24,1461,20],[1501,8,1462,4],[1501,13,1462,9],[1501,17,1462,15,"inp"],[1501,20,1462,18],[1501,24,1462,22,"psbt"],[1501,28,1462,26],[1501,29,1462,27,"data"],[1501,33,1462,31],[1501,34,1462,32,"inputs"],[1501,40,1462,38],[1501,42,1462,40],[1502,10,1463,6],[1502,14,1463,10,"inp"],[1502,17,1463,13],[1502,18,1463,14,"finalScriptSig"],[1502,32,1463,28],[1502,36,1463,32,"inp"],[1502,39,1463,35],[1502,40,1463,36,"finalScriptWitness"],[1502,58,1463,54],[1502,62,1463,58,"inp"],[1502,65,1463,61],[1502,66,1463,62,"partialSig"],[1502,76,1463,72],[1502,78,1463,74,"sigsHave"],[1502,86,1463,82],[1502,88,1463,84],[1503,8,1464,4],[1504,8,1465,4],[1504,15,1465,11,"sigsHave"],[1504,23,1465,19],[1505,6,1466,2],[1507,6,1468,2],[1508,0,1469,0],[1509,0,1470,0],[1510,0,1471,0],[1511,0,1472,0],[1512,0,1473,0],[1513,0,1474,0],[1514,4,1468,2],[1515,6,1468,2,"key"],[1515,9,1468,2],[1516,6,1468,2,"value"],[1516,11,1468,2],[1516,13,1475,2],[1516,22,1475,2,"cosignPsbt"],[1516,32,1475,12,"cosignPsbt"],[1516,33,1475,13,"psbt"],[1516,37,1475,23],[1516,39,1475,25],[1517,8,1476,4],[1517,12,1476,10,"seed"],[1517,16,1476,14],[1517,19,1476,17],[1517,23,1476,21],[1517,24,1476,22,"_getSeed"],[1517,32,1476,30],[1517,33,1476,31],[1517,34,1476,32],[1518,8,1477,4],[1518,12,1477,10,"hdRoot"],[1518,18,1477,16],[1518,21,1477,19,"bip32"],[1518,26,1477,24],[1518,27,1477,25,"fromSeed"],[1518,35,1477,33],[1518,36,1477,34,"seed"],[1518,40,1477,38],[1518,41,1477,39],[1519,8,1479,4],[1519,13,1479,9],[1519,17,1479,13,"cc"],[1519,19,1479,15],[1519,22,1479,18],[1519,23,1479,19],[1519,25,1479,21,"cc"],[1519,27,1479,23],[1519,30,1479,26,"psbt"],[1519,34,1479,30],[1519,35,1479,31,"inputCount"],[1519,45,1479,41],[1519,47,1479,43,"cc"],[1519,49,1479,45],[1519,51,1479,47],[1519,53,1479,49],[1520,10,1480,6],[1520,14,1480,10],[1521,12,1481,8,"psbt"],[1521,16,1481,12],[1521,17,1481,13,"signInputHD"],[1521,28,1481,24],[1521,29,1481,25,"cc"],[1521,31,1481,27],[1521,33,1481,29,"hdRoot"],[1521,39,1481,35],[1521,40,1481,36],[1522,10,1482,6],[1522,11,1482,7],[1522,12,1482,8],[1522,19,1482,15,"e"],[1522,20,1482,16],[1522,22,1482,18],[1522,23,1482,19],[1522,24,1482,20],[1522,25,1482,21],[1524,10,1484,6],[1524,14,1484,10],[1524,15,1484,11,"psbt"],[1524,19,1484,15],[1524,20,1484,16,"inputHasHDKey"],[1524,33,1484,29],[1524,34,1484,30,"cc"],[1524,36,1484,32],[1524,38,1484,34,"hdRoot"],[1524,44,1484,40],[1524,45,1484,41],[1524,47,1484,43],[1525,12,1485,8],[1525,17,1485,13],[1525,21,1485,19,"derivation"],[1525,31,1485,29],[1525,35,1485,33,"psbt"],[1525,39,1485,37],[1525,40,1485,38,"data"],[1525,44,1485,42],[1525,45,1485,43,"inputs"],[1525,51,1485,49],[1525,52,1485,50,"cc"],[1525,54,1485,52],[1525,55,1485,53],[1525,56,1485,54,"bip32Derivation"],[1525,71,1485,69],[1525,75,1485,73],[1525,77,1485,75],[1525,79,1485,77],[1526,14,1486,10],[1526,18,1486,16,"splt"],[1526,22,1486,20],[1526,25,1486,23,"derivation"],[1526,35,1486,33],[1526,36,1486,34,"path"],[1526,40,1486,38],[1526,41,1486,39,"split"],[1526,46,1486,44],[1526,47,1486,45],[1526,50,1486,48],[1526,51,1486,49],[1527,14,1487,10],[1527,18,1487,16,"internal"],[1527,26,1487,24],[1527,29,1487,27],[1527,30,1487,28,"splt"],[1527,34,1487,32],[1527,35,1487,33,"splt"],[1527,39,1487,37],[1527,40,1487,38,"length"],[1527,46,1487,44],[1527,49,1487,47],[1527,50,1487,48],[1527,51,1487,49],[1528,14,1488,10],[1528,18,1488,16,"index"],[1528,23,1488,21],[1528,26,1488,24],[1528,27,1488,25,"splt"],[1528,31,1488,29],[1528,32,1488,30,"splt"],[1528,36,1488,34],[1528,37,1488,35,"length"],[1528,43,1488,41],[1528,46,1488,44],[1528,47,1488,45],[1528,48,1488,46],[1529,14,1489,10],[1529,18,1489,16,"wif"],[1529,21,1489,19],[1529,24,1489,22],[1529,28,1489,26],[1529,29,1489,27,"_getWIFByIndex"],[1529,43,1489,41],[1529,44,1489,42],[1529,45,1489,43],[1529,46,1489,44,"internal"],[1529,54,1489,52],[1529,56,1489,54,"index"],[1529,61,1489,59],[1529,62,1489,60],[1530,14,1490,10],[1530,18,1490,14],[1530,19,1490,15,"wif"],[1530,22,1490,18],[1530,24,1490,20],[1531,16,1491,12],[1531,22,1491,18],[1531,26,1491,22,"Error"],[1531,31,1491,27],[1531,32,1491,28],[1531,89,1491,85],[1531,90,1491,86],[1532,14,1492,10],[1533,14,1493,10],[1533,18,1493,16,"keyPair"],[1533,25,1493,23],[1533,28,1493,26,"ECPair"],[1533,34,1493,32],[1533,35,1493,33,"fromWIF"],[1533,42,1493,40],[1533,43,1493,41,"wif"],[1533,46,1493,44],[1533,47,1493,45],[1534,14,1494,10],[1534,18,1494,14],[1535,16,1495,12,"psbt"],[1535,20,1495,16],[1535,21,1495,17,"signInput"],[1535,30,1495,26],[1535,31,1495,27,"cc"],[1535,33,1495,29],[1535,35,1495,31,"keyPair"],[1535,42,1495,38],[1535,43,1495,39],[1536,14,1496,10],[1536,15,1496,11],[1536,16,1496,12],[1536,23,1496,19,"e"],[1536,24,1496,20],[1536,26,1496,22],[1536,27,1496,23],[1536,28,1496,24],[1536,29,1496,25],[1537,12,1497,8],[1538,10,1498,6],[1539,8,1499,4],[1540,8,1501,4],[1540,12,1501,8,"tx"],[1540,14,1501,32],[1540,17,1501,35],[1540,22,1501,40],[1541,8,1502,4],[1541,12,1502,8],[1541,16,1502,12],[1541,17,1502,13,"calculateHowManySignaturesWeHaveFromPsbt"],[1541,57,1502,53],[1541,58,1502,54,"psbt"],[1541,62,1502,58],[1541,63,1502,59],[1541,68,1502,64,"psbt"],[1541,72,1502,68],[1541,73,1502,69,"inputCount"],[1541,83,1502,79],[1541,85,1502,81],[1542,10,1503,6,"tx"],[1542,12,1503,8],[1542,15,1503,11,"psbt"],[1542,19,1503,15],[1542,20,1503,16,"finalizeAllInputs"],[1542,37,1503,33],[1542,38,1503,34],[1542,39,1503,35],[1542,40,1503,36,"extractTransaction"],[1542,58,1503,54],[1542,59,1503,55],[1542,60,1503,56],[1543,8,1504,4],[1544,8,1506,4],[1544,15,1506,11],[1545,10,1506,13,"tx"],[1545,12,1506,15],[1545,14,1506,13,"tx"],[1546,8,1506,16],[1546,9,1506,17],[1547,6,1507,2],[1549,6,1509,2],[1550,0,1510,0],[1551,0,1511,0],[1552,0,1512,0],[1553,4,1509,2],[1554,6,1509,2,"key"],[1554,9,1509,2],[1555,6,1509,2,"value"],[1555,11,1509,2],[1556,6,1529,2],[1557,0,1530,0],[1558,0,1531,0],[1559,6,1532,2],[1559,15,1532,2,"getMasterFingerprintHex"],[1559,38,1532,25,"getMasterFingerprintHex"],[1559,39,1532,25],[1559,41,1532,28],[1560,8,1533,4],[1560,12,1533,10,"seed"],[1560,16,1533,14],[1560,19,1533,17],[1560,23,1533,21],[1560,24,1533,22,"_getSeed"],[1560,32,1533,30],[1560,33,1533,31],[1560,34,1533,32],[1561,8,1534,4],[1561,15,1534,11,"AbstractHDElectrumWallet"],[1561,39,1534,35],[1561,40,1534,36,"seedToFingerprint"],[1561,57,1534,53],[1561,58,1534,54,"seed"],[1561,62,1534,58],[1561,63,1534,59],[1562,6,1535,2],[1564,6,1537,2],[1565,0,1538,0],[1566,0,1539,0],[1567,0,1540,0],[1568,4,1537,2],[1569,6,1537,2,"key"],[1569,9,1537,2],[1570,6,1537,2,"value"],[1570,11,1537,2],[1570,13,1541,2],[1570,22,1541,2,"isBIP47Enabled"],[1570,36,1541,16,"isBIP47Enabled"],[1570,37,1541,16],[1570,39,1541,28],[1571,8,1542,4],[1571,15,1542,11],[1571,19,1542,15],[1571,20,1542,16,"_enable_BIP47"],[1571,33,1542,29],[1572,6,1543,2],[1573,4,1543,3],[1574,6,1543,3,"key"],[1574,9,1543,3],[1575,6,1543,3,"value"],[1575,11,1543,3],[1575,13,1545,2],[1575,22,1545,2,"switchBIP47"],[1575,33,1545,13,"switchBIP47"],[1575,34,1545,14,"value"],[1575,39,1545,28],[1575,41,1545,36],[1576,8,1546,4],[1576,12,1546,8],[1576,13,1546,9,"_enable_BIP47"],[1576,26,1546,22],[1576,29,1546,25,"value"],[1576,34,1546,30],[1577,6,1547,2],[1578,4,1547,3],[1579,6,1547,3,"key"],[1579,9,1547,3],[1580,6,1547,3,"value"],[1580,11,1547,3],[1580,13,1549,2],[1580,22,1549,2,"getBIP47FromSeed"],[1580,38,1549,18,"getBIP47FromSeed"],[1580,39,1549,18],[1580,41,1549,37],[1581,8,1550,4],[1581,12,1550,8],[1581,13,1550,9],[1581,17,1550,13],[1581,18,1550,14,"_bip47_instance"],[1581,33,1550,29],[1581,37,1550,33],[1581,38,1550,34],[1581,42,1550,38],[1581,43,1550,39,"_bip47_instance"],[1581,58,1550,54],[1581,59,1550,55,"getNotificationAddress"],[1581,81,1550,77],[1581,83,1550,79],[1582,10,1551,6],[1582,14,1551,10],[1582,15,1551,11,"_bip47_instance"],[1582,30,1551,26],[1582,33,1551,29,"bip47"],[1582,38,1551,34],[1582,39,1551,35,"fromBip39Seed"],[1582,52,1551,48],[1582,53,1551,49],[1582,57,1551,53],[1582,58,1551,54,"secret"],[1582,64,1551,60],[1582,66,1551,62,"undefined"],[1582,75,1551,71],[1582,77,1551,73],[1582,81,1551,77],[1582,82,1551,78,"passphrase"],[1582,92,1551,88],[1582,93,1551,89],[1583,8,1552,4],[1584,8,1554,4],[1584,15,1554,11],[1584,19,1554,15],[1584,20,1554,16,"_bip47_instance"],[1584,35,1554,31],[1585,6,1555,2],[1587,6,1557,2],[1588,0,1558,0],[1589,0,1559,0],[1590,0,1560,0],[1591,4,1557,2],[1592,6,1557,2,"key"],[1592,9,1557,2],[1593,6,1557,2,"value"],[1593,11,1557,2],[1593,13,1561,2],[1593,22,1561,2,"getBIP47NotificationTransaction"],[1593,53,1561,33,"getBIP47NotificationTransaction"],[1593,54,1561,34,"receiverPaymentCode"],[1593,73,1561,61],[1593,75,1561,88],[1594,8,1562,4],[1594,12,1562,10,"publicBip47"],[1594,23,1562,21],[1594,26,1562,24],[1594,30,1562,24,"BIP47Factory"],[1594,42,1562,36],[1594,44,1562,37,"ecc"],[1594,62,1562,40],[1594,63,1562,41],[1594,64,1562,42,"fromPaymentCode"],[1594,79,1562,57],[1594,80,1562,58,"receiverPaymentCode"],[1594,99,1562,77],[1594,100,1562,78],[1595,8,1563,4],[1595,12,1563,10,"remoteNotificationAddress"],[1595,37,1563,35],[1595,40,1563,38,"publicBip47"],[1595,51,1563,49],[1595,52,1563,50,"getNotificationAddress"],[1595,74,1563,72],[1595,75,1563,73],[1595,76,1563,74],[1596,8,1565,4],[1596,13,1565,9],[1596,17,1565,15,"tx"],[1596,19,1565,17],[1596,23,1565,21],[1596,27,1565,25],[1596,28,1565,26,"getTransactions"],[1596,43,1565,41],[1596,44,1565,42],[1596,45,1565,43],[1596,47,1565,45],[1597,10,1566,6],[1597,15,1566,11],[1597,19,1566,17,"output"],[1597,25,1566,23],[1597,29,1566,27,"tx"],[1597,31,1566,29],[1597,32,1566,30,"outputs"],[1597,39,1566,37],[1597,41,1566,39],[1598,12,1566,39],[1598,16,1566,39,"_output$scriptPubKey"],[1598,36,1566,39],[1599,12,1567,8],[1599,17,1567,8,"_output$scriptPubKey"],[1599,37,1567,8],[1599,40,1567,12,"output"],[1599,46,1567,18],[1599,47,1567,19,"scriptPubKey"],[1599,59,1567,31],[1599,73,1567,31,"_output$scriptPubKey"],[1599,93,1567,31],[1599,96,1567,12,"_output$scriptPubKey"],[1599,116,1567,12],[1599,117,1567,33,"addresses"],[1599,126,1567,42],[1599,139,1567,12,"_output$scriptPubKey"],[1599,159,1567,12],[1599,160,1567,44,"includes"],[1599,168,1567,52],[1599,169,1567,53,"remoteNotificationAddress"],[1599,194,1567,78],[1599,195,1567,79],[1599,197,1567,81],[1599,204,1567,88,"tx"],[1599,206,1567,90],[1600,12,1568,8],[1601,12,1569,8],[1602,12,1570,8],[1603,10,1571,6],[1604,8,1572,4],[1605,6,1573,2],[1607,6,1575,2],[1608,0,1576,0],[1609,0,1577,0],[1610,0,1578,0],[1611,4,1575,2],[1612,6,1575,2,"key"],[1612,9,1575,2],[1613,6,1575,2,"value"],[1613,11,1575,2],[1613,13,1579,2],[1613,22,1579,2,"getBip47CounterpartyByTxid"],[1613,48,1579,28,"getBip47CounterpartyByTxid"],[1613,49,1579,29,"txid"],[1613,53,1579,41],[1613,55,1579,63],[1614,8,1580,4],[1614,12,1580,10,"foundTx"],[1614,19,1580,17],[1614,22,1580,20],[1614,26,1580,24],[1614,27,1580,25,"getTransactions"],[1614,42,1580,40],[1614,43,1580,41],[1614,44,1580,42],[1614,45,1580,43,"find"],[1614,49,1580,47],[1614,50,1580,48],[1614,60,1580,48,"tx"],[1614,62,1580,50],[1615,10,1580,50],[1615,17,1580,54,"tx"],[1615,19,1580,56],[1615,20,1580,57,"txid"],[1615,24,1580,61],[1615,29,1580,66,"txid"],[1615,33,1580,70],[1616,8,1580,70],[1616,10,1580,71],[1617,8,1581,4],[1617,12,1581,8,"foundTx"],[1617,19,1581,15],[1617,21,1581,17],[1618,10,1582,6],[1618,17,1582,13],[1618,21,1582,17],[1618,22,1582,18,"getBip47CounterpartyByTx"],[1618,46,1582,42],[1618,47,1582,43,"foundTx"],[1618,54,1582,50],[1618,55,1582,51],[1619,8,1583,4],[1620,8,1584,4],[1620,15,1584,11,"undefined"],[1620,24,1584,20],[1621,6,1585,2],[1623,6,1587,2],[1624,0,1588,0],[1625,0,1589,0],[1626,0,1590,0],[1627,4,1587,2],[1628,6,1587,2,"key"],[1628,9,1587,2],[1629,6,1587,2,"value"],[1629,11,1587,2],[1629,13,1591,2],[1629,22,1591,2,"getBip47CounterpartyByTx"],[1629,46,1591,26,"getBip47CounterpartyByTx"],[1629,47,1591,27,"tx"],[1629,49,1591,42],[1629,51,1591,64],[1630,8,1592,4],[1630,13,1592,9],[1630,17,1592,15,"pc"],[1630,19,1592,17],[1630,23,1592,21,"Object"],[1630,29,1592,27],[1630,30,1592,28,"keys"],[1630,34,1592,32],[1630,35,1592,33],[1630,39,1592,37],[1630,40,1592,38,"_txs_by_payment_code_index"],[1630,66,1592,64],[1630,67,1592,65],[1630,69,1592,67],[1631,10,1593,6],[1633,10,1595,6],[1633,15,1595,11],[1633,19,1595,17,"txs"],[1633,22,1595,20],[1633,26,1595,24,"Object"],[1633,32,1595,30],[1633,33,1595,31,"values"],[1633,39,1595,37],[1633,40,1595,38],[1633,44,1595,42],[1633,45,1595,43,"_txs_by_payment_code_index"],[1633,71,1595,69],[1633,72,1595,70,"pc"],[1633,74,1595,72],[1633,75,1595,73],[1633,76,1595,74],[1633,78,1595,76],[1634,12,1596,8],[1634,17,1596,13],[1634,21,1596,19,"tx2"],[1634,24,1596,22],[1634,28,1596,26,"txs"],[1634,31,1596,29],[1634,33,1596,31],[1635,14,1597,10],[1635,18,1597,14,"tx2"],[1635,21,1597,17],[1635,22,1597,18,"txid"],[1635,26,1597,22],[1635,31,1597,27,"tx"],[1635,33,1597,29],[1635,34,1597,30,"txid"],[1635,38,1597,34],[1635,40,1597,36],[1636,16,1598,12],[1636,23,1598,19,"pc"],[1636,25,1598,21],[1636,26,1598,22],[1636,27,1598,23],[1637,14,1599,10],[1638,12,1600,8],[1639,10,1601,6],[1640,8,1602,4],[1642,8,1604,4],[1644,8,1606,4],[1644,13,1606,9],[1644,17,1606,15,"pc"],[1644,21,1606,17],[1644,25,1606,21],[1644,29,1606,25],[1644,30,1606,26,"_send_payment_codes"],[1644,49,1606,45],[1644,51,1606,47],[1645,10,1607,6],[1645,15,1607,11],[1645,19,1607,17,"out"],[1645,22,1607,20],[1645,26,1607,24,"tx"],[1645,28,1607,26],[1645,29,1607,27,"outputs"],[1645,36,1607,34],[1645,38,1607,36],[1646,12,1608,8],[1646,17,1608,13],[1646,21,1608,19,"address"],[1646,28,1608,26],[1646,33,1608,26,"_out$scriptPubKey$add"],[1646,54,1608,26],[1646,58,1608,26,"_out$scriptPubKey"],[1646,75,1608,26],[1646,78,1608,30,"out"],[1646,81,1608,33],[1646,82,1608,34,"scriptPubKey"],[1646,94,1608,46],[1646,115,1608,30,"_out$scriptPubKey"],[1646,132,1608,30],[1646,133,1608,48,"addresses"],[1646,142,1608,57],[1646,154,1608,57,"_out$scriptPubKey$add"],[1646,175,1608,57],[1646,178,1608,61],[1646,180,1608,63],[1646,182,1608,65],[1647,14,1608,65],[1647,18,1608,65,"_out$scriptPubKey$add"],[1647,39,1608,65],[1647,41,1608,65,"_out$scriptPubKey"],[1647,58,1608,65],[1648,14,1609,10],[1648,18,1609,14],[1648,22,1609,18],[1648,23,1609,19,"_addresses_by_payment_code_send"],[1648,54,1609,50],[1648,55,1609,51,"pc"],[1648,59,1609,53],[1648,60,1609,54],[1648,64,1609,58,"Object"],[1648,70,1609,64],[1648,71,1609,65,"values"],[1648,77,1609,71],[1648,78,1609,72],[1648,82,1609,76],[1648,83,1609,77,"_addresses_by_payment_code_send"],[1648,114,1609,108],[1648,115,1609,109,"pc"],[1648,119,1609,111],[1648,120,1609,112],[1648,121,1609,113],[1648,122,1609,114,"includes"],[1648,130,1609,122],[1648,131,1609,123,"address"],[1648,138,1609,130],[1648,139,1609,131],[1648,141,1609,133],[1649,16,1610,12],[1650,16,1611,12],[1650,23,1611,19,"pc"],[1650,27,1611,21],[1651,14,1612,10],[1652,12,1613,8],[1653,10,1614,6],[1654,8,1615,4],[1655,8,1617,4],[1655,15,1617,11,"undefined"],[1655,24,1617,20],[1655,25,1617,21],[1655,26,1617,22],[1656,6,1618,2],[1657,4,1618,3],[1658,6,1618,3,"key"],[1658,9,1618,3],[1659,6,1618,3,"value"],[1659,11,1618,3],[1659,13,1620,2],[1659,22,1620,2,"createBip47NotificationTransaction"],[1659,56,1620,36,"createBip47NotificationTransaction"],[1659,57,1620,37,"utxos"],[1659,62,1620,67],[1659,64,1620,69,"receiverPaymentCode"],[1659,83,1620,96],[1659,85,1620,98,"feeRate"],[1659,92,1620,113],[1659,94,1620,115,"changeAddress"],[1659,107,1620,136],[1659,109,1620,138],[1660,8,1620,138],[1660,12,1620,138,"_inputsTemp$"],[1660,24,1620,138],[1661,8,1621,4],[1661,12,1621,10,"aliceBip47"],[1661,22,1621,20],[1661,25,1621,23],[1661,29,1621,23,"BIP47Factory"],[1661,41,1621,35],[1661,43,1621,36,"ecc"],[1661,61,1621,39],[1661,62,1621,40],[1661,63,1621,41,"fromBip39Seed"],[1661,76,1621,54],[1661,77,1621,55],[1661,81,1621,59],[1661,82,1621,60,"getSecret"],[1661,91,1621,69],[1661,92,1621,70],[1661,93,1621,71],[1661,95,1621,73,"undefined"],[1661,104,1621,82],[1661,106,1621,84],[1661,110,1621,88],[1661,111,1621,89,"getPassphrase"],[1661,124,1621,102],[1661,125,1621,103],[1661,126,1621,104],[1661,127,1621,105],[1662,8,1622,4],[1662,12,1622,10,"bobBip47"],[1662,20,1622,18],[1662,23,1622,21],[1662,27,1622,21,"BIP47Factory"],[1662,39,1622,33],[1662,41,1622,34,"ecc"],[1662,59,1622,37],[1662,60,1622,38],[1662,61,1622,39,"fromPaymentCode"],[1662,76,1622,54],[1662,77,1622,55,"receiverPaymentCode"],[1662,96,1622,74],[1662,97,1622,75],[1663,8,1623,4],[1663,12,1623,4,"assert"],[1663,27,1623,10],[1663,29,1623,11,"utxos"],[1663,34,1623,16],[1663,35,1623,17],[1663,36,1623,18],[1663,37,1623,19],[1663,39,1623,21],[1663,48,1623,30],[1663,49,1623,31],[1664,8,1624,4],[1664,12,1624,4,"assert"],[1664,27,1624,10],[1664,29,1624,11,"utxos"],[1664,34,1624,16],[1664,35,1624,17],[1664,36,1624,18],[1664,37,1624,19],[1664,38,1624,20,"wif"],[1664,41,1624,23],[1664,43,1624,25],[1664,56,1624,38],[1664,57,1624,39],[1666,8,1626,4],[1668,8,1628,4],[1668,12,1628,10,"targetsTemp"],[1668,23,1628,48],[1668,26,1628,51],[1668,28,1628,53],[1669,8,1629,4,"targetsTemp"],[1669,19,1629,15],[1669,20,1629,16,"push"],[1669,24,1629,20],[1669,25,1629,21],[1670,10,1630,6,"address"],[1670,17,1630,13],[1670,19,1630,15,"bobBip47"],[1670,27,1630,23],[1670,28,1630,24,"getNotificationAddress"],[1670,50,1630,46],[1670,51,1630,47],[1670,52,1630,48],[1671,10,1631,6,"value"],[1671,15,1631,11],[1671,17,1631,13],[1671,20,1631,16],[1671,21,1631,18],[1672,8,1632,4],[1672,9,1632,5],[1672,10,1632,6],[1673,8,1633,4,"targetsTemp"],[1673,19,1633,15],[1673,20,1633,16,"push"],[1673,24,1633,20],[1673,25,1633,21],[1674,10,1634,6,"value"],[1674,15,1634,11],[1674,17,1634,13],[1674,18,1634,14],[1675,10,1635,6,"script"],[1675,16,1635,12],[1675,18,1635,14],[1676,12,1636,8,"hex"],[1676,15,1636,11],[1676,17,1636,13,"Buffer"],[1676,23,1636,19],[1676,24,1636,20,"alloc"],[1676,29,1636,25],[1676,30,1636,26],[1676,32,1636,28],[1676,33,1636,29],[1676,34,1636,30,"toString"],[1676,42,1636,38],[1676,43,1636,39],[1676,48,1636,44],[1676,49,1636,45],[1676,50,1636,47],[1677,10,1637,6],[1678,8,1638,4],[1678,9,1638,5],[1678,10,1638,6],[1680,8,1640,4],[1682,8,1642,4],[1682,12,1642,4,"_this$createTransacti"],[1682,33,1642,4],[1682,36,1642,35],[1682,40,1642,39],[1682,41,1642,40,"createTransaction"],[1682,58,1642,57],[1682,59,1643,6,"utxos"],[1682,64,1643,11],[1682,66,1644,6,"targetsTemp"],[1682,77,1644,17],[1682,79,1645,6,"feeRate"],[1682,86,1645,13],[1682,88,1646,6,"changeAddress"],[1682,101,1646,19],[1682,103,1647,6,"AbstractHDElectrumWallet"],[1682,127,1647,30],[1682,128,1647,31,"defaultRBFSequence"],[1682,146,1647,49],[1682,148,1648,6],[1682,153,1648,11],[1682,155,1649,6],[1682,156,1650,4],[1682,157,1650,5],[1683,10,1642,20,"inputsTemp"],[1683,20,1642,30],[1683,23,1642,30,"_this$createTransacti"],[1683,44,1642,30],[1683,45,1642,12,"inputs"],[1683,51,1642,18],[1684,8,1651,4],[1684,12,1651,4,"assert"],[1684,27,1651,10],[1684,29,1651,11,"inputsTemp"],[1684,39,1651,21],[1684,52,1651,21,"_inputsTemp$"],[1684,64,1651,21],[1684,67,1651,11,"inputsTemp"],[1684,77,1651,21],[1684,78,1651,24],[1684,79,1651,25],[1684,80,1651,26],[1684,101,1651,11,"_inputsTemp$"],[1684,113,1651,11],[1684,114,1651,28,"wif"],[1684,117,1651,31],[1684,119,1651,33],[1684,155,1651,69],[1684,156,1651,70],[1686,8,1653,4],[1688,8,1655,4],[1688,12,1655,10,"keyPair"],[1688,19,1655,17],[1688,22,1655,20,"ECPair"],[1688,28,1655,26],[1688,29,1655,27,"fromWIF"],[1688,36,1655,34],[1688,37,1655,35,"inputsTemp"],[1688,47,1655,45],[1688,48,1655,46],[1688,49,1655,47],[1688,50,1655,48],[1688,51,1655,49,"wif"],[1688,54,1655,52],[1688,55,1655,53],[1689,8,1656,4],[1689,12,1656,10,"outputNumber"],[1689,24,1656,22],[1689,27,1656,25,"Buffer"],[1689,33,1656,31],[1689,34,1656,32,"from"],[1689,38,1656,36],[1689,39,1656,37],[1689,49,1656,47],[1689,51,1656,49],[1689,56,1656,54],[1689,57,1656,55],[1690,8,1657,4,"outputNumber"],[1690,20,1657,16],[1690,21,1657,17,"writeUInt32LE"],[1690,34,1657,30],[1690,35,1657,31,"inputsTemp"],[1690,45,1657,41],[1690,46,1657,42],[1690,47,1657,43],[1690,48,1657,44],[1690,49,1657,45,"vout"],[1690,53,1657,49],[1690,54,1657,50],[1691,8,1658,4],[1691,12,1658,10,"blindedPaymentCode"],[1691,30,1658,28],[1691,33,1658,31,"aliceBip47"],[1691,43,1658,41],[1691,44,1658,42,"getBlindedPaymentCode"],[1691,65,1658,63],[1691,66,1659,6,"bobBip47"],[1691,74,1659,14],[1691,76,1660,6,"keyPair"],[1691,83,1660,13],[1691,84,1660,14,"privateKey"],[1691,94,1660,24],[1692,8,1661,6],[1693,8,1662,6,"Buffer"],[1693,14,1662,12],[1693,15,1662,13,"from"],[1693,19,1662,17],[1693,20,1662,18,"inputsTemp"],[1693,30,1662,28],[1693,31,1662,29],[1693,32,1662,30],[1693,33,1662,31],[1693,34,1662,32,"txid"],[1693,38,1662,36],[1693,40,1662,38],[1693,45,1662,43],[1693,46,1662,44],[1693,47,1662,45,"reverse"],[1693,54,1662,52],[1693,55,1662,53],[1693,56,1662,54],[1693,57,1662,55,"toString"],[1693,65,1662,63],[1693,66,1662,64],[1693,71,1662,69],[1693,72,1662,70],[1693,75,1662,73,"outputNumber"],[1693,87,1662,85],[1693,88,1662,86,"toString"],[1693,96,1662,94],[1693,97,1662,95],[1693,102,1662,100],[1693,103,1663,4],[1693,104,1663,5],[1695,8,1665,4],[1697,8,1667,4],[1697,12,1667,10,"targets"],[1697,19,1667,44],[1697,22,1667,47],[1697,24,1667,49],[1698,8,1668,4,"targets"],[1698,15,1668,11],[1698,16,1668,12,"push"],[1698,20,1668,16],[1698,21,1668,17],[1699,10,1669,6,"address"],[1699,17,1669,13],[1699,19,1669,15,"bobBip47"],[1699,27,1669,23],[1699,28,1669,24,"getNotificationAddress"],[1699,50,1669,46],[1699,51,1669,47],[1699,52,1669,48],[1700,10,1670,6,"value"],[1700,15,1670,11],[1700,17,1670,13],[1700,20,1670,16],[1700,21,1670,18],[1701,8,1671,4],[1701,9,1671,5],[1701,10,1671,6],[1702,8,1672,4,"targets"],[1702,15,1672,11],[1702,16,1672,12,"push"],[1702,20,1672,16],[1702,21,1672,17],[1703,10,1673,6,"value"],[1703,15,1673,11],[1703,17,1673,13],[1703,18,1673,14],[1704,10,1674,6,"script"],[1704,16,1674,12],[1704,18,1674,14],[1705,12,1675,8,"hex"],[1705,15,1675,11],[1705,17,1675,13],[1705,25,1675,21],[1705,28,1675,24,"blindedPaymentCode"],[1705,46,1675,42],[1705,47,1675,44],[1706,10,1676,6],[1707,8,1677,4],[1707,9,1677,5],[1707,10,1677,6],[1709,8,1679,4],[1711,8,1681,4],[1711,12,1681,4,"_this$createTransacti2"],[1711,34,1681,4],[1711,37,1681,47],[1711,41,1681,51],[1711,42,1681,52,"createTransaction"],[1711,59,1681,69],[1711,60,1682,6,"utxos"],[1711,65,1682,11],[1711,67,1683,6,"targets"],[1711,74,1683,13],[1711,76,1684,6,"feeRate"],[1711,83,1684,13],[1711,85,1685,6,"changeAddress"],[1711,98,1685,19],[1711,100,1686,6,"AbstractHDElectrumWallet"],[1711,124,1686,30],[1711,125,1686,31,"defaultRBFSequence"],[1711,143,1686,49],[1711,145,1687,6],[1711,150,1687,11],[1711,152,1688,6],[1711,153,1689,4],[1711,154,1689,5],[1712,10,1681,12,"tx"],[1712,12,1681,14],[1712,15,1681,14,"_this$createTransacti2"],[1712,37,1681,14],[1712,38,1681,12,"tx"],[1712,40,1681,14],[1713,10,1681,16,"outputs"],[1713,17,1681,23],[1713,20,1681,23,"_this$createTransacti2"],[1713,42,1681,23],[1713,43,1681,16,"outputs"],[1713,50,1681,23],[1714,10,1681,25,"inputs"],[1714,16,1681,31],[1714,19,1681,31,"_this$createTransacti2"],[1714,41,1681,31],[1714,42,1681,25,"inputs"],[1714,48,1681,31],[1715,10,1681,33,"fee"],[1715,13,1681,36],[1715,16,1681,36,"_this$createTransacti2"],[1715,38,1681,36],[1715,39,1681,33,"fee"],[1715,42,1681,36],[1716,10,1681,38,"psbt"],[1716,14,1681,42],[1716,17,1681,42,"_this$createTransacti2"],[1716,39,1681,42],[1716,40,1681,38,"psbt"],[1716,44,1681,42],[1717,8,1690,4],[1717,12,1690,4,"assert"],[1717,27,1690,10],[1717,29,1690,11,"inputs"],[1717,35,1690,17],[1717,39,1690,21,"inputs"],[1717,45,1690,27],[1717,46,1690,28],[1717,47,1690,29],[1717,48,1690,30],[1717,52,1690,34,"inputs"],[1717,58,1690,40],[1717,59,1690,41],[1717,60,1690,42],[1717,61,1690,43],[1717,62,1690,44,"wif"],[1717,65,1690,47],[1717,67,1690,49],[1717,119,1690,101],[1717,120,1690,102],[1718,8,1691,4],[1718,12,1691,4,"assert"],[1718,27,1691,10],[1718,29,1691,11,"inputs"],[1718,35,1691,17],[1718,36,1691,18],[1718,37,1691,19],[1718,38,1691,20],[1718,39,1691,21,"txid"],[1718,43,1691,25],[1718,48,1691,30,"inputsTemp"],[1718,58,1691,40],[1718,59,1691,41],[1718,60,1691,42],[1718,61,1691,43],[1718,62,1691,44,"txid"],[1718,66,1691,48],[1718,68,1691,50],[1718,121,1691,103],[1718,122,1691,104],[1718,123,1691,105],[1718,124,1691,106],[1720,8,1693,4],[1720,15,1693,11],[1721,10,1693,13,"tx"],[1721,12,1693,15],[1721,14,1693,13,"tx"],[1721,16,1693,15],[1722,10,1693,17,"inputs"],[1722,16,1693,23],[1722,18,1693,17,"inputs"],[1722,24,1693,23],[1723,10,1693,25,"outputs"],[1723,17,1693,32],[1723,19,1693,25,"outputs"],[1723,26,1693,32],[1724,10,1693,34,"fee"],[1724,13,1693,37],[1724,15,1693,34,"fee"],[1724,18,1693,37],[1725,10,1693,39,"psbt"],[1725,14,1693,43],[1725,16,1693,39,"psbt"],[1726,8,1693,44],[1726,9,1693,45],[1727,6,1694,2],[1728,4,1694,3],[1729,6,1694,3,"key"],[1729,9,1694,3],[1730,6,1694,3,"value"],[1730,11,1694,3],[1730,13,1696,2],[1730,22,1696,2,"getBIP47PaymentCode"],[1730,41,1696,21,"getBIP47PaymentCode"],[1730,42,1696,21],[1730,44,1696,32],[1731,8,1697,4],[1731,12,1697,8],[1731,13,1697,9],[1731,17,1697,13],[1731,18,1697,14,"_payment_code"],[1731,31,1697,27],[1731,33,1697,29],[1732,10,1698,6],[1732,14,1698,10],[1732,15,1698,11,"_payment_code"],[1732,28,1698,24],[1732,31,1698,27],[1732,35,1698,31],[1732,36,1698,32,"getBIP47FromSeed"],[1732,52,1698,48],[1732,53,1698,49],[1732,54,1698,50],[1732,55,1698,51,"getSerializedPaymentCode"],[1732,79,1698,75],[1732,80,1698,76],[1732,81,1698,77],[1733,8,1699,4],[1734,8,1701,4],[1734,15,1701,11],[1734,19,1701,15],[1734,20,1701,16,"_payment_code"],[1734,33,1701,29],[1735,6,1702,2],[1736,4,1702,3],[1737,6,1702,3,"key"],[1737,9,1702,3],[1738,6,1702,3,"value"],[1738,11,1702,3],[1738,13,1704,2],[1738,22,1704,2,"getBIP47NotificationAddress"],[1738,49,1704,29,"getBIP47NotificationAddress"],[1738,50,1704,29],[1738,52,1704,40],[1739,8,1705,4],[1739,12,1705,10,"bip47Local"],[1739,22,1705,20],[1739,25,1705,23],[1739,29,1705,27],[1739,30,1705,28,"getBIP47FromSeed"],[1739,46,1705,44],[1739,47,1705,45],[1739,48,1705,46],[1740,8,1706,4],[1740,15,1706,11,"bip47Local"],[1740,25,1706,21],[1740,26,1706,22,"getNotificationAddress"],[1740,48,1706,44],[1740,49,1706,45],[1740,50,1706,46],[1741,6,1707,2],[1743,6,1709,2],[1744,0,1710,0],[1745,0,1711,0],[1746,0,1712,0],[1747,4,1709,2],[1748,6,1709,2,"key"],[1748,9,1709,2],[1749,6,1709,2,"value"],[1749,11,1709,2],[1750,8,1709,2],[1750,12,1709,2,"_fetchBIP47SenderPaymentCodes"],[1750,41,1709,2],[1750,48,1709,2,"_asyncToGenerator2"],[1750,66,1709,2],[1750,67,1709,2,"default"],[1750,74,1709,2],[1750,76,1713,2],[1750,89,1713,54],[1751,10,1714,4],[1751,14,1714,10,"bip47_instance"],[1751,28,1714,24],[1751,31,1714,27],[1751,35,1714,31],[1751,36,1714,32,"getBIP47FromSeed"],[1751,52,1714,48],[1751,53,1714,49],[1751,54,1714,50],[1752,10,1715,4],[1752,14,1715,10,"address"],[1752,21,1715,17],[1752,24,1715,20,"bip47_instance"],[1752,38,1715,34],[1752,39,1715,35,"getNotificationAddress"],[1752,61,1715,57],[1752,62,1715,58],[1752,63,1715,59],[1753,10,1716,4],[1753,14,1716,10,"histories"],[1753,23,1716,19],[1753,32,1716,28,"BlueElectrum"],[1753,44,1716,40],[1753,45,1716,41,"multiGetHistoryByAddress"],[1753,69,1716,65],[1753,70,1716,66],[1753,71,1716,67,"address"],[1753,78,1716,74],[1753,79,1716,75],[1753,80,1716,76],[1754,10,1717,4],[1754,14,1717,10,"txHashes"],[1754,22,1717,18],[1754,25,1717,21,"histories"],[1754,34,1717,30],[1754,35,1717,31,"address"],[1754,42,1717,38],[1754,43,1717,39],[1754,44,1717,40,"map"],[1754,47,1717,43],[1754,48,1717,44],[1754,58,1717,44,"_ref2"],[1754,63,1717,44],[1755,12,1717,44],[1755,16,1717,47,"tx_hash"],[1755,23,1717,54],[1755,26,1717,54,"_ref2"],[1755,31,1717,54],[1755,32,1717,47,"tx_hash"],[1755,39,1717,54],[1756,12,1717,54],[1756,19,1717,61,"tx_hash"],[1756,26,1717,68],[1757,10,1717,68],[1757,12,1717,69],[1758,10,1719,4],[1758,14,1719,10,"txHexs"],[1758,20,1719,16],[1758,29,1719,25,"BlueElectrum"],[1758,41,1719,37],[1758,42,1719,38,"multiGetTransactionByTxid"],[1758,67,1719,63],[1758,68,1719,64,"txHashes"],[1758,76,1719,72],[1758,78,1719,74],[1758,83,1719,79],[1758,84,1719,80],[1759,10,1720,4],[1759,15,1720,9],[1759,19,1720,15,"txHex"],[1759,24,1720,20],[1759,28,1720,24,"Object"],[1759,34,1720,30],[1759,35,1720,31,"values"],[1759,41,1720,37],[1759,42,1720,38,"txHexs"],[1759,48,1720,44],[1759,49,1720,45],[1759,51,1720,47],[1760,12,1721,6],[1760,16,1721,10],[1761,14,1722,8],[1761,18,1722,14,"paymentCode"],[1761,29,1722,25],[1761,32,1722,28,"bip47_instance"],[1761,46,1722,42],[1761,47,1722,43,"getPaymentCodeFromRawNotificationTransaction"],[1761,91,1722,87],[1761,92,1722,88,"txHex"],[1761,97,1722,93],[1761,98,1722,94],[1762,14,1723,8],[1762,18,1723,12],[1762,22,1723,16],[1762,23,1723,17,"_receive_payment_codes"],[1762,45,1723,39],[1762,46,1723,40,"includes"],[1762,54,1723,48],[1762,55,1723,49,"paymentCode"],[1762,66,1723,60],[1762,67,1723,61],[1762,69,1723,63],[1762,78,1723,72],[1762,79,1723,73],[1764,14,1725,8],[1765,14,1726,8],[1765,18,1726,12],[1766,16,1727,10,"bip47"],[1766,21,1727,15],[1766,22,1727,16,"fromPaymentCode"],[1766,37,1727,31],[1766,38,1727,32,"paymentCode"],[1766,49,1727,43],[1766,50,1727,44],[1767,14,1728,8],[1767,15,1728,9],[1767,16,1728,10],[1767,23,1728,17,"_"],[1767,24,1728,18],[1767,26,1728,20],[1768,16,1729,10],[1769,14,1730,8],[1770,14,1732,8],[1770,18,1732,12],[1770,19,1732,13,"_receive_payment_codes"],[1770,41,1732,35],[1770,42,1732,36,"push"],[1770,46,1732,40],[1770,47,1732,41,"paymentCode"],[1770,58,1732,52],[1770,59,1732,53],[1771,14,1733,8],[1771,18,1733,12],[1771,19,1733,13,"_next_free_payment_code_address_index_receive"],[1771,64,1733,58],[1771,65,1733,59,"paymentCode"],[1771,76,1733,70],[1771,77,1733,71],[1771,80,1733,74],[1771,81,1733,75],[1771,82,1733,76],[1771,83,1733,77],[1772,14,1734,8],[1772,18,1734,12],[1772,19,1734,13,"_balances_by_payment_code_index"],[1772,50,1734,44],[1772,51,1734,45,"paymentCode"],[1772,62,1734,56],[1772,63,1734,57],[1772,66,1734,60],[1773,16,1734,62,"c"],[1773,17,1734,63],[1773,19,1734,65],[1773,20,1734,66],[1774,16,1734,68,"u"],[1774,17,1734,69],[1774,19,1734,71],[1775,14,1734,73],[1775,15,1734,74],[1776,12,1735,6],[1776,13,1735,7],[1776,14,1735,8],[1776,21,1735,15,"e"],[1776,22,1735,16],[1776,24,1735,18],[1777,14,1736,8],[1778,12,1736,8],[1779,10,1738,4],[1780,8,1739,2],[1780,9,1739,3],[1781,8,1739,3],[1781,17,1713,8,"fetchBIP47SenderPaymentCodes"],[1781,45,1713,36,"fetchBIP47SenderPaymentCodes"],[1781,46,1713,36],[1782,10,1713,36],[1782,17,1713,36,"_fetchBIP47SenderPaymentCodes"],[1782,46,1713,36],[1782,47,1713,36,"apply"],[1782,52,1713,36],[1782,59,1713,36,"arguments"],[1782,68,1713,36],[1783,8,1713,36],[1784,8,1713,36],[1784,15,1713,8,"fetchBIP47SenderPaymentCodes"],[1784,43,1713,36],[1785,6,1713,36],[1786,6,1741,2],[1787,0,1742,0],[1788,0,1743,0],[1789,0,1744,0],[1790,0,1745,0],[1791,6,1741,2],[1792,4,1741,2],[1793,6,1741,2,"key"],[1793,9,1741,2],[1794,6,1741,2,"value"],[1794,11,1741,2],[1795,8,1741,2],[1795,12,1741,2,"_syncBip47ReceiversAddresses"],[1795,40,1741,2],[1795,47,1741,2,"_asyncToGenerator2"],[1795,65,1741,2],[1795,66,1741,2,"default"],[1795,73,1741,2],[1795,75,1746,2],[1795,86,1746,36,"receiverPaymentCode"],[1795,105,1746,63],[1795,107,1746,65],[1796,10,1747,4],[1796,14,1747,8],[1796,15,1747,9,"_next_free_payment_code_address_index_send"],[1796,57,1747,51],[1796,58,1747,52,"receiverPaymentCode"],[1796,77,1747,71],[1796,78,1747,72],[1796,81,1748,6],[1796,85,1748,10],[1796,86,1748,11,"_next_free_payment_code_address_index_send"],[1796,128,1748,53],[1796,129,1748,54,"receiverPaymentCode"],[1796,148,1748,73],[1796,149,1748,74],[1796,153,1748,78],[1796,154,1748,79],[1796,155,1748,80],[1796,156,1748,81],[1798,10,1750,4],[1798,15,1750,9],[1798,19,1750,13,"c"],[1798,20,1750,14],[1798,23,1750,17],[1798,27,1750,21],[1798,28,1750,22,"_next_free_payment_code_address_index_send"],[1798,70,1750,64],[1798,71,1750,65,"receiverPaymentCode"],[1798,90,1750,84],[1798,91,1750,85],[1798,93,1750,87,"c"],[1798,94,1750,88],[1798,97,1750,91],[1798,103,1750,97],[1798,105,1750,99,"c"],[1798,106,1750,100],[1798,108,1750,102],[1798,110,1750,104],[1799,12,1750,104],[1799,16,1750,104,"_histories$address"],[1799,34,1750,104],[1800,12,1751,6],[1800,16,1751,12,"address"],[1800,23,1751,19],[1800,26,1751,22],[1800,30,1751,26],[1800,31,1751,27,"_getBIP47AddressSend"],[1800,51,1751,47],[1800,52,1751,48,"receiverPaymentCode"],[1800,71,1751,67],[1800,73,1751,69,"c"],[1800,74,1751,70],[1800,75,1751,71],[1801,12,1753,6],[1801,16,1753,10],[1801,17,1753,11,"_addresses_by_payment_code_send"],[1801,48,1753,42],[1801,49,1753,43,"receiverPaymentCode"],[1801,68,1753,62],[1801,69,1753,63],[1801,72,1753,66],[1801,76,1753,70],[1801,77,1753,71,"_addresses_by_payment_code_send"],[1801,108,1753,102],[1801,109,1753,103,"receiverPaymentCode"],[1801,128,1753,122],[1801,129,1753,123],[1801,133,1753,127],[1801,134,1753,128],[1801,135,1753,129],[1801,136,1753,130],[1801,137,1753,131],[1802,12,1754,6],[1802,16,1754,10],[1802,17,1754,11,"_addresses_by_payment_code_send"],[1802,48,1754,42],[1802,49,1754,43,"receiverPaymentCode"],[1802,68,1754,62],[1802,69,1754,63],[1802,70,1754,64,"c"],[1802,71,1754,65],[1802,72,1754,66],[1802,75,1754,69,"address"],[1802,82,1754,76],[1803,12,1755,6],[1803,16,1755,12,"histories"],[1803,25,1755,21],[1803,34,1755,30,"BlueElectrum"],[1803,46,1755,42],[1803,47,1755,43,"multiGetHistoryByAddress"],[1803,71,1755,67],[1803,72,1755,68],[1803,73,1755,69,"address"],[1803,80,1755,76],[1803,81,1755,77],[1803,82,1755,78],[1804,12,1756,6],[1804,16,1756,10],[1804,17,1756,10,"histories"],[1804,26,1756,19],[1804,39,1756,19,"_histories$address"],[1804,57,1756,19],[1804,60,1756,10,"histories"],[1804,69,1756,19],[1804,70,1756,22,"address"],[1804,77,1756,29],[1804,78,1756,30],[1804,99,1756,10,"_histories$address"],[1804,117,1756,10],[1804,118,1756,32,"length"],[1804,124,1756,38],[1804,128,1756,41],[1804,129,1756,42],[1804,131,1756,44],[1805,14,1757,8],[1806,14,1758,8],[1807,12,1759,6],[1809,12,1761,6],[1810,12,1762,6],[1810,16,1762,10],[1810,17,1762,11,"_next_free_payment_code_address_index_send"],[1810,59,1762,53],[1810,60,1762,54,"receiverPaymentCode"],[1810,79,1762,73],[1810,80,1762,74],[1810,83,1762,77,"c"],[1810,84,1762,78],[1811,12,1763,6],[1812,10,1764,4],[1813,8,1765,2],[1813,9,1765,3],[1814,8,1765,3],[1814,17,1746,8,"syncBip47ReceiversAddresses"],[1814,44,1746,35,"syncBip47ReceiversAddresses"],[1814,45,1746,35,"_x6"],[1814,48,1746,35],[1815,10,1746,35],[1815,17,1746,35,"_syncBip47ReceiversAddresses"],[1815,45,1746,35],[1815,46,1746,35,"apply"],[1815,51,1746,35],[1815,58,1746,35,"arguments"],[1815,67,1746,35],[1816,8,1746,35],[1817,8,1746,35],[1817,15,1746,8,"syncBip47ReceiversAddresses"],[1817,42,1746,35],[1818,6,1746,35],[1819,6,1767,2],[1820,0,1768,0],[1821,0,1769,0],[1822,6,1767,2],[1823,4,1767,2],[1824,6,1767,2,"key"],[1824,9,1767,2],[1825,6,1767,2,"value"],[1825,11,1767,2],[1825,13,1770,2],[1825,22,1770,2,"getBIP47SenderPaymentCodes"],[1825,48,1770,28,"getBIP47SenderPaymentCodes"],[1825,49,1770,28],[1825,51,1770,41],[1826,8,1771,4],[1826,15,1771,11],[1826,19,1771,15],[1826,20,1771,16,"_receive_payment_codes"],[1826,42,1771,38],[1827,6,1772,2],[1829,6,1774,2],[1830,0,1775,0],[1831,0,1776,0],[1832,4,1774,2],[1833,6,1774,2,"key"],[1833,9,1774,2],[1834,6,1774,2,"value"],[1834,11,1774,2],[1834,13,1777,2],[1834,22,1777,2,"getBIP47ReceiverPaymentCodes"],[1834,50,1777,30,"getBIP47ReceiverPaymentCodes"],[1834,51,1777,30],[1834,53,1777,43],[1835,8,1778,4],[1835,15,1778,11],[1835,19,1778,15],[1835,20,1778,16,"_send_payment_codes"],[1835,39,1778,35],[1836,6,1779,2],[1838,6,1781,2],[1839,0,1782,0],[1840,0,1783,0],[1841,4,1781,2],[1842,6,1781,2,"key"],[1842,9,1781,2],[1843,6,1781,2,"value"],[1843,11,1781,2],[1843,13,1784,2],[1843,22,1784,2,"addBIP47Receiver"],[1843,38,1784,18,"addBIP47Receiver"],[1843,39,1784,19,"paymentCode"],[1843,50,1784,38],[1843,52,1784,40],[1844,8,1785,4],[1844,12,1785,8],[1844,16,1785,12],[1844,17,1785,13,"_send_payment_codes"],[1844,36,1785,32],[1844,37,1785,33,"includes"],[1844,45,1785,41],[1844,46,1785,42,"paymentCode"],[1844,57,1785,53],[1844,58,1785,54],[1844,60,1785,56],[1844,67,1785,63],[1844,68,1785,64],[1845,8,1786,4],[1845,12,1786,8],[1845,13,1786,9,"_send_payment_codes"],[1845,32,1786,28],[1845,33,1786,29,"push"],[1845,37,1786,33],[1845,38,1786,34,"paymentCode"],[1845,49,1786,45],[1845,50,1786,46],[1846,6,1787,2],[1847,4,1787,3],[1848,6,1787,3,"key"],[1848,9,1787,3],[1849,6,1787,3,"value"],[1849,11,1787,3],[1849,13,1789,2],[1849,22,1789,2,"_hdNodeToAddress"],[1849,38,1789,18,"_hdNodeToAddress"],[1849,39,1789,19,"hdNode"],[1849,45,1789,41],[1849,47,1789,51],[1850,8,1790,4],[1850,15,1790,11],[1850,19,1790,15],[1850,20,1790,16,"_nodeToBech32SegwitAddress"],[1850,46,1790,42],[1850,47,1790,43,"hdNode"],[1850,53,1790,49],[1850,54,1790,50],[1851,6,1791,2],[1853,6,1793,2],[1854,0,1794,0],[1855,0,1795,0],[1856,4,1793,2],[1857,6,1793,2,"key"],[1857,9,1793,2],[1858,6,1793,2,"value"],[1858,11,1793,2],[1858,13,1796,2],[1858,22,1796,2,"_getBIP47AddressReceive"],[1858,45,1796,25,"_getBIP47AddressReceive"],[1858,46,1796,26,"paymentCode"],[1858,57,1796,45],[1858,59,1796,47,"index"],[1858,64,1796,60],[1858,66,1796,70],[1859,8,1797,4],[1859,12,1797,8],[1859,13,1797,9],[1859,17,1797,13],[1859,18,1797,14,"_addresses_by_payment_code_receive"],[1859,52,1797,48],[1859,53,1797,49,"paymentCode"],[1859,64,1797,60],[1859,65,1797,61],[1859,67,1797,63],[1859,71,1797,67],[1859,72,1797,68,"_addresses_by_payment_code_receive"],[1859,106,1797,102],[1859,107,1797,103,"paymentCode"],[1859,118,1797,114],[1859,119,1797,115],[1859,122,1797,118],[1859,124,1797,120],[1860,8,1799,4],[1860,12,1799,8],[1860,16,1799,12],[1860,17,1799,13,"_addresses_by_payment_code_receive"],[1860,51,1799,47],[1860,52,1799,48,"paymentCode"],[1860,63,1799,59],[1860,64,1799,60],[1860,65,1799,61,"index"],[1860,70,1799,66],[1860,71,1799,67],[1860,73,1799,69],[1861,10,1800,6],[1861,17,1800,13],[1861,21,1800,17],[1861,22,1800,18,"_addresses_by_payment_code_receive"],[1861,56,1800,52],[1861,57,1800,53,"paymentCode"],[1861,68,1800,64],[1861,69,1800,65],[1861,70,1800,66,"index"],[1861,75,1800,71],[1861,76,1800,72],[1862,8,1801,4],[1863,8,1803,4],[1863,12,1803,10,"bip47_instance"],[1863,26,1803,24],[1863,29,1803,27],[1863,33,1803,31],[1863,34,1803,32,"getBIP47FromSeed"],[1863,50,1803,48],[1863,51,1803,49],[1863,52,1803,50],[1864,8,1804,4],[1864,12,1804,10,"senderBIP47_instance"],[1864,32,1804,30],[1864,35,1804,33,"bip47"],[1864,40,1804,38],[1864,41,1804,39,"fromPaymentCode"],[1864,56,1804,54],[1864,57,1804,55,"paymentCode"],[1864,68,1804,66],[1864,69,1804,67],[1865,8,1805,4],[1865,12,1805,10,"remotePaymentNode"],[1865,29,1805,27],[1865,32,1805,30,"senderBIP47_instance"],[1865,52,1805,50],[1865,53,1805,51,"getPaymentCodeNode"],[1865,71,1805,69],[1865,72,1805,70],[1865,73,1805,71],[1866,8,1806,4],[1866,12,1806,10,"hdNode"],[1866,18,1806,16],[1866,21,1806,19,"bip47_instance"],[1866,35,1806,33],[1866,36,1806,34,"getPaymentWallet"],[1866,52,1806,50],[1866,53,1806,51,"remotePaymentNode"],[1866,70,1806,68],[1866,72,1806,70,"index"],[1866,77,1806,75],[1866,78,1806,76],[1867,8,1807,4],[1867,12,1807,10,"address"],[1867,19,1807,17],[1867,22,1807,20],[1867,26,1807,24],[1867,27,1807,25,"_hdNodeToAddress"],[1867,43,1807,41],[1867,44,1807,42,"hdNode"],[1867,50,1807,48],[1867,51,1807,49],[1868,8,1808,4],[1868,12,1808,8],[1868,13,1808,9,"_address_to_wif_cache"],[1868,34,1808,30],[1868,35,1808,31,"address"],[1868,42,1808,38],[1868,43,1808,39],[1868,46,1808,42,"hdNode"],[1868,52,1808,48],[1868,53,1808,49,"toWIF"],[1868,58,1808,54],[1868,59,1808,55],[1868,60,1808,56],[1869,8,1809,4],[1869,12,1809,8],[1869,13,1809,9,"_addresses_by_payment_code_receive"],[1869,47,1809,43],[1869,48,1809,44,"paymentCode"],[1869,59,1809,55],[1869,60,1809,56],[1869,61,1809,57,"index"],[1869,66,1809,62],[1869,67,1809,63],[1869,70,1809,66,"address"],[1869,77,1809,73],[1870,8,1810,4],[1870,15,1810,11,"address"],[1870,22,1810,18],[1871,6,1811,2],[1873,6,1813,2],[1874,0,1814,0],[1875,0,1815,0],[1876,4,1813,2],[1877,6,1813,2,"key"],[1877,9,1813,2],[1878,6,1813,2,"value"],[1878,11,1813,2],[1878,13,1816,2],[1878,22,1816,2,"_getBIP47AddressSend"],[1878,42,1816,22,"_getBIP47AddressSend"],[1878,43,1816,23,"paymentCode"],[1878,54,1816,42],[1878,56,1816,44,"index"],[1878,61,1816,57],[1878,63,1816,67],[1879,8,1817,4],[1879,12,1817,8],[1879,13,1817,9],[1879,17,1817,13],[1879,18,1817,14,"_addresses_by_payment_code_send"],[1879,49,1817,45],[1879,50,1817,46,"paymentCode"],[1879,61,1817,57],[1879,62,1817,58],[1879,64,1817,60],[1879,68,1817,64],[1879,69,1817,65,"_addresses_by_payment_code_send"],[1879,100,1817,96],[1879,101,1817,97,"paymentCode"],[1879,112,1817,108],[1879,113,1817,109],[1879,116,1817,112],[1879,118,1817,114],[1880,8,1819,4],[1880,12,1819,8],[1880,16,1819,12],[1880,17,1819,13,"_addresses_by_payment_code_send"],[1880,48,1819,44],[1880,49,1819,45,"paymentCode"],[1880,60,1819,56],[1880,61,1819,57],[1880,62,1819,58,"index"],[1880,67,1819,63],[1880,68,1819,64],[1880,70,1819,66],[1881,10,1820,6],[1882,10,1821,6],[1882,17,1821,13],[1882,21,1821,17],[1882,22,1821,18,"_addresses_by_payment_code_send"],[1882,53,1821,49],[1882,54,1821,50,"paymentCode"],[1882,65,1821,61],[1882,66,1821,62],[1882,67,1821,63,"index"],[1882,72,1821,68],[1882,73,1821,69],[1883,8,1822,4],[1884,8,1824,4],[1884,12,1824,10,"hdNode"],[1884,18,1824,16],[1884,21,1824,19],[1884,25,1824,23],[1884,26,1824,24,"getBIP47FromSeed"],[1884,42,1824,40],[1884,43,1824,41],[1884,44,1824,42],[1884,45,1824,43,"getReceiveWallet"],[1884,61,1824,59],[1884,62,1824,60],[1884,66,1824,60,"BIP47Factory"],[1884,78,1824,72],[1884,80,1824,73,"ecc"],[1884,98,1824,76],[1884,99,1824,77],[1884,100,1824,78,"fromPaymentCode"],[1884,115,1824,93],[1884,116,1824,94,"paymentCode"],[1884,127,1824,105],[1884,128,1824,106],[1884,129,1824,107,"getPaymentCodeNode"],[1884,147,1824,125],[1884,148,1824,126],[1884,149,1824,127],[1884,151,1824,129,"index"],[1884,156,1824,134],[1884,157,1824,135],[1885,8,1825,4],[1885,12,1825,10,"address"],[1885,19,1825,17],[1885,22,1825,20],[1885,26,1825,24],[1885,27,1825,25,"_hdNodeToAddress"],[1885,43,1825,41],[1885,44,1825,42,"hdNode"],[1885,50,1825,48],[1885,51,1825,49],[1886,8,1826,4],[1886,12,1826,8],[1886,13,1826,9,"_addresses_by_payment_code_send"],[1886,44,1826,40],[1886,45,1826,41,"paymentCode"],[1886,56,1826,52],[1886,57,1826,53],[1886,58,1826,54,"index"],[1886,63,1826,59],[1886,64,1826,60],[1886,67,1826,63,"address"],[1886,74,1826,70],[1887,8,1827,4],[1887,15,1827,11,"address"],[1887,22,1827,18],[1888,6,1828,2],[1889,4,1828,3],[1890,6,1828,3,"key"],[1890,9,1828,3],[1891,6,1828,3,"value"],[1891,11,1828,3],[1891,13,1830,2],[1891,22,1830,2,"_getNextFreePaymentCodeIndexReceive"],[1891,57,1830,37,"_getNextFreePaymentCodeIndexReceive"],[1891,58,1830,38,"paymentCode"],[1891,69,1830,57],[1891,71,1830,59],[1892,8,1831,4],[1892,15,1831,11],[1892,19,1831,15],[1892,20,1831,16,"_next_free_payment_code_address_index_receive"],[1892,65,1831,61],[1892,66,1831,62,"paymentCode"],[1892,77,1831,73],[1892,78,1831,74],[1892,82,1831,78],[1892,83,1831,79],[1893,6,1832,2],[1895,6,1834,2],[1896,0,1835,0],[1897,0,1836,0],[1898,0,1837,0],[1899,4,1834,2],[1900,6,1834,2,"key"],[1900,9,1834,2],[1901,6,1834,2,"value"],[1901,11,1834,2],[1901,13,1838,2],[1901,22,1838,2,"_getNextFreePaymentCodeAddressSend"],[1901,56,1838,36,"_getNextFreePaymentCodeAddressSend"],[1901,57,1838,37,"paymentCode"],[1901,68,1838,56],[1901,70,1838,58],[1902,8,1839,4],[1902,12,1839,8],[1902,13,1839,9,"_next_free_payment_code_address_index_send"],[1902,55,1839,51],[1902,56,1839,52,"paymentCode"],[1902,67,1839,63],[1902,68,1839,64],[1902,71,1839,67],[1902,75,1839,71],[1902,76,1839,72,"_next_free_payment_code_address_index_send"],[1902,118,1839,114],[1902,119,1839,115,"paymentCode"],[1902,130,1839,126],[1902,131,1839,127],[1902,135,1839,131],[1902,136,1839,132],[1903,8,1840,4],[1903,15,1840,11],[1903,19,1840,15],[1903,20,1840,16,"_getBIP47AddressSend"],[1903,40,1840,36],[1903,41,1840,37,"paymentCode"],[1903,52,1840,48],[1903,54,1840,50],[1903,58,1840,54],[1903,59,1840,55,"_next_free_payment_code_address_index_send"],[1903,101,1840,97],[1903,102,1840,98,"paymentCode"],[1903,113,1840,109],[1903,114,1840,110],[1903,115,1840,111],[1904,6,1841,2],[1905,4,1841,3],[1906,6,1841,3,"key"],[1906,9,1841,3],[1907,6,1841,3,"value"],[1907,11,1841,3],[1907,13,1843,2],[1907,22,1843,2,"_getBalancesByPaymentCodeIndex"],[1907,52,1843,32,"_getBalancesByPaymentCodeIndex"],[1907,53,1843,33,"paymentCode"],[1907,64,1843,52],[1907,66,1843,70],[1908,8,1844,4],[1908,15,1844,11],[1908,19,1844,15],[1908,20,1844,16,"_balances_by_payment_code_index"],[1908,51,1844,47],[1908,52,1844,48,"paymentCode"],[1908,63,1844,59],[1908,64,1844,60],[1908,68,1844,64],[1909,10,1844,66,"c"],[1909,11,1844,67],[1909,13,1844,69],[1909,14,1844,70],[1910,10,1844,72,"u"],[1910,11,1844,73],[1910,13,1844,75],[1911,8,1844,77],[1911,9,1844,78],[1912,6,1845,2],[1913,4,1845,3],[1914,6,1845,3,"key"],[1914,9,1845,3],[1915,6,1845,3,"value"],[1915,11,1845,3],[1915,13,1847,2],[1915,22,1847,2,"_getBIP47WIF"],[1915,34,1847,14,"_getBIP47WIF"],[1915,35,1847,15,"paymentCode"],[1915,46,1847,34],[1915,48,1847,36,"index"],[1915,53,1847,49],[1915,55,1847,59],[1916,8,1848,4],[1916,12,1848,10,"bip47_instance"],[1916,26,1848,24],[1916,29,1848,27],[1916,33,1848,31],[1916,34,1848,32,"getBIP47FromSeed"],[1916,50,1848,48],[1916,51,1848,49],[1916,52,1848,50],[1917,8,1849,4],[1917,12,1849,10,"senderBIP47_instance"],[1917,32,1849,30],[1917,35,1849,33,"bip47"],[1917,40,1849,38],[1917,41,1849,39,"fromPaymentCode"],[1917,56,1849,54],[1917,57,1849,55,"paymentCode"],[1917,68,1849,66],[1917,69,1849,67],[1918,8,1850,4],[1918,12,1850,10,"remotePaymentNode"],[1918,29,1850,27],[1918,32,1850,30,"senderBIP47_instance"],[1918,52,1850,50],[1918,53,1850,51,"getPaymentCodeNode"],[1918,71,1850,69],[1918,72,1850,70],[1918,73,1850,71],[1919,8,1851,4],[1919,12,1851,10,"hdNode"],[1919,18,1851,16],[1919,21,1851,19,"bip47_instance"],[1919,35,1851,33],[1919,36,1851,34,"getPaymentWallet"],[1919,52,1851,50],[1919,53,1851,51,"remotePaymentNode"],[1919,70,1851,68],[1919,72,1851,70,"index"],[1919,77,1851,75],[1919,78,1851,76],[1920,8,1852,4],[1920,15,1852,11,"hdNode"],[1920,21,1852,17],[1920,22,1852,18,"toWIF"],[1920,27,1852,23],[1920,28,1852,24],[1920,29,1852,25],[1921,6,1853,2],[1922,4,1853,3],[1923,6,1853,3,"key"],[1923,9,1853,3],[1924,6,1853,3,"value"],[1924,11,1853,3],[1924,13,1855,2],[1924,22,1855,2,"_getBIP47PubkeyByIndex"],[1924,44,1855,24,"_getBIP47PubkeyByIndex"],[1924,45,1855,25,"paymentCode"],[1924,56,1855,44],[1924,58,1855,46,"index"],[1924,63,1855,59],[1924,65,1855,69],[1925,8,1856,4],[1925,12,1856,10,"bip47_instance"],[1925,26,1856,24],[1925,29,1856,27],[1925,33,1856,31],[1925,34,1856,32,"getBIP47FromSeed"],[1925,50,1856,48],[1925,51,1856,49],[1925,52,1856,50],[1926,8,1857,4],[1926,12,1857,10,"senderBIP47_instance"],[1926,32,1857,30],[1926,35,1857,33,"bip47"],[1926,40,1857,38],[1926,41,1857,39,"fromPaymentCode"],[1926,56,1857,54],[1926,57,1857,55,"paymentCode"],[1926,68,1857,66],[1926,69,1857,67],[1927,8,1858,4],[1927,12,1858,10,"remotePaymentNode"],[1927,29,1858,27],[1927,32,1858,30,"senderBIP47_instance"],[1927,52,1858,50],[1927,53,1858,51,"getPaymentCodeNode"],[1927,71,1858,69],[1927,72,1858,70],[1927,73,1858,71],[1928,8,1859,4],[1928,12,1859,10,"hdNode"],[1928,18,1859,16],[1928,21,1859,19,"bip47_instance"],[1928,35,1859,33],[1928,36,1859,34,"getPaymentWallet"],[1928,52,1859,50],[1928,53,1859,51,"remotePaymentNode"],[1928,70,1859,68],[1928,72,1859,70,"index"],[1928,77,1859,75],[1928,78,1859,76],[1929,8,1860,4],[1929,15,1860,11,"hdNode"],[1929,21,1860,17],[1929,22,1860,18,"publicKey"],[1929,31,1860,27],[1930,6,1861,2],[1931,4,1861,3],[1932,6,1861,3,"key"],[1932,9,1861,3],[1933,6,1861,3,"value"],[1933,11,1861,3],[1933,13,1380,2],[1933,22,1380,9,"_getTransactionsFromHistories"],[1933,51,1380,38,"_getTransactionsFromHistories"],[1933,52,1380,39,"histories"],[1933,61,1380,83],[1933,63,1380,85],[1934,8,1381,4],[1934,12,1381,10,"txs"],[1934,15,1381,13],[1934,18,1381,16],[1934,20,1381,18],[1935,8,1382,4],[1935,13,1382,9],[1935,17,1382,15,"history"],[1935,24,1382,22],[1935,28,1382,26,"Object"],[1935,34,1382,32],[1935,35,1382,33,"values"],[1935,41,1382,39],[1935,42,1382,40,"histories"],[1935,51,1382,49],[1935,52,1382,50],[1935,54,1382,52],[1936,10,1383,6],[1936,15,1383,11],[1936,19,1383,17,"tx"],[1936,21,1383,19],[1936,25,1383,23,"history"],[1936,32,1383,30],[1936,34,1383,32],[1937,12,1384,8,"txs"],[1937,15,1384,11],[1937,16,1384,12,"push"],[1937,20,1384,16],[1937,21,1384,17,"tx"],[1937,23,1384,19],[1937,24,1384,20],[1938,10,1385,6],[1939,8,1386,4],[1940,8,1387,4],[1940,15,1387,11,"txs"],[1940,18,1387,14],[1941,6,1388,2],[1942,4,1388,3],[1943,6,1388,3,"key"],[1943,9,1388,3],[1944,6,1388,3,"value"],[1944,11,1388,3],[1944,13,1513,2],[1944,22,1513,9,"seedToFingerprint"],[1944,39,1513,26,"seedToFingerprint"],[1944,40,1513,27,"seed"],[1944,44,1513,39],[1944,46,1513,41],[1945,8,1514,4],[1945,12,1514,10,"root"],[1945,16,1514,14],[1945,19,1514,17,"bip32"],[1945,24,1514,22],[1945,25,1514,23,"fromSeed"],[1945,33,1514,31],[1945,34,1514,32,"seed"],[1945,38,1514,36],[1945,39,1514,37],[1946,8,1515,4],[1946,12,1515,8,"hex"],[1946,15,1515,11],[1946,18,1515,14,"root"],[1946,22,1515,18],[1946,23,1515,19,"fingerprint"],[1946,34,1515,30],[1946,35,1515,31,"toString"],[1946,43,1515,39],[1946,44,1515,40],[1946,49,1515,45],[1946,50,1515,46],[1947,8,1516,4],[1947,15,1516,11,"hex"],[1947,18,1516,14],[1947,19,1516,15,"length"],[1947,25,1516,21],[1947,28,1516,24],[1947,29,1516,25],[1947,31,1516,27,"hex"],[1947,34,1516,30],[1947,37,1516,33],[1947,40,1516,36],[1947,43,1516,39,"hex"],[1947,46,1516,42],[1947,47,1516,43],[1947,48,1516,44],[1948,8,1517,4],[1948,15,1517,11,"hex"],[1948,18,1517,14],[1948,19,1517,15,"toUpperCase"],[1948,30,1517,26],[1948,31,1517,27],[1948,32,1517,28],[1949,6,1518,2],[1951,6,1520,2],[1952,0,1521,0],[1953,0,1522,0],[1954,0,1523,0],[1955,4,1520,2],[1956,6,1520,2,"key"],[1956,9,1520,2],[1957,6,1520,2,"value"],[1957,11,1520,2],[1957,13,1524,2],[1957,22,1524,9,"mnemonicToFingerprint"],[1957,43,1524,30,"mnemonicToFingerprint"],[1957,44,1524,31,"mnemonic"],[1957,52,1524,47],[1957,54,1524,49,"passphrase"],[1957,64,1524,68],[1957,66,1524,70],[1958,8,1525,4],[1958,12,1525,10,"seed"],[1958,16,1525,14],[1958,19,1525,17,"bip39"],[1958,24,1525,22],[1958,25,1525,23,"mnemonicToSeedSync"],[1958,43,1525,41],[1958,44,1525,42,"mnemonic"],[1958,52,1525,50],[1958,54,1525,52,"passphrase"],[1958,64,1525,62],[1958,65,1525,63],[1959,8,1526,4],[1959,15,1526,11,"AbstractHDElectrumWallet"],[1959,39,1526,35],[1959,40,1526,36,"seedToFingerprint"],[1959,57,1526,53],[1959,58,1526,54,"seed"],[1959,62,1526,58],[1959,63,1526,59],[1960,6,1527,2],[1961,4,1527,3],[1962,2,1527,3],[1962,4,34,46,"AbstractHDWallet"],[1962,35,34,46],[1962,36,34,46,"AbstractHDWallet"],[1962,76,34,62],[1963,2,34,13,"AbstractHDElectrumWallet"],[1963,26,34,37],[1963,27,35,18,"type"],[1963,31,35,22],[1963,34,35,25],[1963,44,35,35],[1964,2,34,13,"AbstractHDElectrumWallet"],[1964,26,34,37],[1964,27,36,18,"typeReadable"],[1964,39,36,30],[1964,42,36,33],[1964,52,36,43],[1965,2,34,13,"AbstractHDElectrumWallet"],[1965,26,34,37],[1965,27,37,9,"defaultRBFSequence"],[1965,45,37,27],[1965,48,37,30],[1965,58,37,40],[1966,2,37,42],[1967,2,34,13,"AbstractHDElectrumWallet"],[1967,26,34,37],[1967,27,38,9,"finalRBFSequence"],[1967,43,38,25],[1967,46,38,28],[1967,56,38,38],[1968,0,38,38],[1968,3]],"functionMap":{"names":["<global>","AbstractHDElectrumWallet","AbstractHDElectrumWallet#constructor","AbstractHDElectrumWallet#getBalance","AbstractHDElectrumWallet#getUnconfirmedBalance","AbstractHDElectrumWallet#generate","AbstractHDElectrumWallet#generateFromEntropy","AbstractHDElectrumWallet#_getExternalWIFByIndex","AbstractHDElectrumWallet#_getInternalWIFByIndex","AbstractHDElectrumWallet#_getWIFByIndex","AbstractHDElectrumWallet#_getNodeAddressByIndex","AbstractHDElectrumWallet#_getNodePubkeyByIndex","AbstractHDElectrumWallet#_getExternalAddressByIndex","AbstractHDElectrumWallet#_getInternalAddressByIndex","AbstractHDElectrumWallet#getXpub","AbstractHDElectrumWallet#fetchTransactions","_txs_by_external_index.c.filter$argument_0","_txs_by_internal_index.c.filter$argument_0","_txs_by_payment_code_index.pc.c.filter$argument_0","AbstractHDElectrumWallet#getTransactions","ret2.sort$argument_0","AbstractHDElectrumWallet#_binarySearchIterationForInternalAddress","gerenateChunkAddresses","AbstractHDElectrumWallet#_binarySearchIterationForExternalAddress","AbstractHDElectrumWallet#_binarySearchIterationForBIP47Address","generateChunkAddresses","AbstractHDElectrumWallet#fetchBalance","AbstractHDElectrumWallet#_fetchBalance","AbstractHDElectrumWallet#fetchUtxo","_utxo.sort$argument_0","AbstractHDElectrumWallet#getUtxo","ret.filter$argument_0","AbstractHDElectrumWallet#getDerivedUtxoFromOurTransaction","AbstractHDElectrumWallet#_getDerivationPathByAddress","AbstractHDElectrumWallet#_getPubkeyByAddress","AbstractHDElectrumWallet#_getWIFbyAddress","AbstractHDElectrumWallet#weOwnAddress","AbstractHDElectrumWallet#createTransaction","outputs.find$argument_0","inputs.map$argument_0","inputs.forEach$argument_0","outputs.forEach$argument_0","AbstractHDElectrumWallet#_addPsbtInput","AbstractHDElectrumWallet#combinePsbt","AbstractHDElectrumWallet#_nodeToBech32SegwitAddress","AbstractHDElectrumWallet#_nodeToLegacyAddress","AbstractHDElectrumWallet#_nodeToP2shSegwitAddress","AbstractHDElectrumWallet._getTransactionsFromHistories","AbstractHDElectrumWallet#wasEverUsed","AbstractHDElectrumWallet#getAllExternalAddresses","AbstractHDElectrumWallet#addressIsChange","AbstractHDElectrumWallet#calculateHowManySignaturesWeHaveFromPsbt","AbstractHDElectrumWallet#cosignPsbt","AbstractHDElectrumWallet.seedToFingerprint","AbstractHDElectrumWallet.mnemonicToFingerprint","AbstractHDElectrumWallet#getMasterFingerprintHex","AbstractHDElectrumWallet#isBIP47Enabled","AbstractHDElectrumWallet#switchBIP47","AbstractHDElectrumWallet#getBIP47FromSeed","AbstractHDElectrumWallet#getBIP47NotificationTransaction","AbstractHDElectrumWallet#getBip47CounterpartyByTxid","getTransactions.find$argument_0","AbstractHDElectrumWallet#getBip47CounterpartyByTx","AbstractHDElectrumWallet#createBip47NotificationTransaction","AbstractHDElectrumWallet#getBIP47PaymentCode","AbstractHDElectrumWallet#getBIP47NotificationAddress","AbstractHDElectrumWallet#fetchBIP47SenderPaymentCodes","histories.address.map$argument_0","AbstractHDElectrumWallet#syncBip47ReceiversAddresses","AbstractHDElectrumWallet#getBIP47SenderPaymentCodes","AbstractHDElectrumWallet#getBIP47ReceiverPaymentCodes","AbstractHDElectrumWallet#addBIP47Receiver","AbstractHDElectrumWallet#_hdNodeToAddress","AbstractHDElectrumWallet#_getBIP47AddressReceive","AbstractHDElectrumWallet#_getBIP47AddressSend","AbstractHDElectrumWallet#_getNextFreePaymentCodeIndexReceive","AbstractHDElectrumWallet#_getNextFreePaymentCodeAddressSend","AbstractHDElectrumWallet#_getBalancesByPaymentCodeIndex","AbstractHDElectrumWallet#_getBIP47WIF","AbstractHDElectrumWallet#_getBIP47PubkeyByIndex"],"mappings":"AAA;OCiC;ECgE;GDqB;EEK;GFY;EGM;GHY;EIE;GJG;EKE;GLK;EME;GNE;EOE;GPE;EQS;GRQ;ESE;GTsC;EUE;GVwB;EWE;GXE;EYE;GZE;EaQ;GbsB;EcK;6ECmG,wBD;6EEG,wBF;+FGI,wBH;GdqH;EkBE;qBC0E;KDE;GlBC;EoBE;mCCC;KDM;GpBkC;EsBE;mCDC;KCM;GtBkC;EuBE;mCCC;KDM;GvBkC;EyBE;GzBkB;E0BE;G1B2I;E2BE;iCC8D,2CD;G3BE;E6Be;uBCS,4DD;G7BG;E+BE;G/B4D;EgCE;GhCgB;EiCO;GjCc;EkCQ;GlCa;EmCE;GnCsB;EoCa;2DCa,iCD;2CEoB,sCF;mBGW;KH2B;oBIE;KJ+C;GpCc;EyCE;GzCgC;E0CU;G1Cc;E2CK;G3CU;E4CE;G5CU;E6CK;G7CU;E8CE;G9CQ;E+CU;G/CuB;EgDK;GhDmB;EiDQ;GjDK;EkDE;GlDM;EmDS;GnDgC;EoDM;GpDK;EqDM;GrDG;EsDK;GtDG;EuDM;GvDE;EwDE;GxDE;EyDE;GzDM;E0DM;G1DY;E2DM;gDCC,sBD;G3DK;E6DM;G7D2B;E8DE;G9D0E;E+DE;G/DM;EgEE;GhEG;EiEM;4CCI,wBD;GjEsB;EmEO;GnEmB;EoEK;GpEE;EqEK;GrEE;EsEK;GtEG;EuEE;GvEE;EwEK;GxEe;EyEK;GzEY;E0EE;G1EE;E2EM;G3EG;E4EE;G5EE;E6EE;G7EM;E8EE;G9EM;CDC"}},"type":"js/module"}]}