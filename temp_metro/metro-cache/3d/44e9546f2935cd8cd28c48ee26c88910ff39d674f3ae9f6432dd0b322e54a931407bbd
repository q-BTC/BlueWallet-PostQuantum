{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":44,"index":44}},{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":44,"index":44}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"blakejs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":14,"index":60},"end":{"line":2,"column":32,"index":78}},{"start":{"line":2,"column":14,"index":60},"end":{"line":2,"column":32,"index":78}},{"start":{"line":2,"column":14,"index":60},"end":{"line":2,"column":32,"index":78}}],"key":"tqSQCwS2Oj5wWjnRgBthHa0YS0k="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var BLOCK_SIZE = 16;\n  var EXTRACTED_KEY_SIZE = 3 * 16;\n  function mkBlock(size) {\n    return _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(size === undefined ? BLOCK_SIZE : size, 0);\n  }\n  function xorBytes1x16(a, b, dst) {\n    for (var i = 0; i < BLOCK_SIZE; i++) {\n      dst[i] = a[i] ^ b[i];\n    }\n  }\n  function xorBytes4x16(a, b, c, d, dst) {\n    for (var i = 0; i < BLOCK_SIZE; i++) {\n      dst[i] = a[i] ^ b[i] ^ c[i] ^ d[i];\n    }\n  }\n  function xorBytes(a, b, dst) {\n    if (a.length < dst.length || b.length < dst.length) {\n      throw new Error('aez: xorBytes: len');\n    }\n    for (var i = 0; i < dst.length; i++) {\n      dst[i] = a[i] ^ b[i];\n    }\n  }\n  function uint32(i) {\n    return i >>> 0;\n  }\n  function uint8(i) {\n    return 0x000000ff & i;\n  }\n  function extractKey(k) {\n    if (k && k.length && k.length === EXTRACTED_KEY_SIZE) {\n      return k;\n    } else {\n      var context = _$$_REQUIRE(_dependencyMap[1], \"blakejs\").blake2bInit(EXTRACTED_KEY_SIZE);\n      _$$_REQUIRE(_dependencyMap[1], \"blakejs\").blake2bUpdate(context, k);\n      return _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from(_$$_REQUIRE(_dependencyMap[1], \"blakejs\").blake2bFinal(context));\n    }\n  }\n  function multBlock(x, src, dst) {\n    var _ref = [mkBlock(), mkBlock()],\n      t = _ref[0],\n      r = _ref[1];\n    src.copy(t);\n    while (x !== 0) {\n      if (x & 1 !== 0) {\n        xorBytes1x16(r, t, r);\n      }\n      doubleBlock(t);\n      x >>= 1;\n    }\n    r.copy(dst);\n  }\n  function doubleBlock(p) {\n    var tmp = p[0];\n    for (var i = 0; i < 15; i++) {\n      p[i] = p[i] << 1 | p[i + 1] >> 7;\n    }\n    p[15] = p[15] << 1 ^ (tmp >> 7 ? 135 : 0);\n  }\n  function oneZeroPad(src, size, dst) {\n    dst.fill(0);\n    src.slice(0, size).copy(dst);\n    dst[size] = 0x80;\n  }\n  module.exports = {\n    BLOCK_SIZE: BLOCK_SIZE,\n    EXTRACTED_KEY_SIZE: EXTRACTED_KEY_SIZE,\n    mkBlock: mkBlock,\n    xorBytes1x16: xorBytes1x16,\n    xorBytes4x16: xorBytes4x16,\n    xorBytes: xorBytes,\n    uint32: uint32,\n    uint8: uint8,\n    extractKey: extractKey,\n    multBlock: multBlock,\n    doubleBlock: doubleBlock,\n    oneZeroPad: oneZeroPad\n  };\n});","lineCount":80,"map":[[2,2,4,0],[2,6,4,6,"BLOCK_SIZE"],[2,16,4,16],[2,19,4,19],[2,21,4,21],[3,2,5,0],[3,6,5,6,"EXTRACTED_KEY_SIZE"],[3,24,5,24],[3,27,5,27],[3,28,5,28],[3,31,5,31],[3,33,5,33],[4,2,7,0],[4,11,7,9,"mkBlock"],[4,18,7,16,"mkBlock"],[4,19,7,17,"size"],[4,23,7,21],[4,25,7,23],[5,4,8,2],[5,11,8,9,"_$$_REQUIRE"],[5,22,8,9],[5,23,8,9,"_dependencyMap"],[5,37,8,9],[5,57,8,9,"Buffer"],[5,63,8,9],[5,64,8,16,"alloc"],[5,69,8,21],[5,70,8,23,"size"],[5,74,8,27],[5,79,8,32,"undefined"],[5,88,8,41],[5,91,8,44,"BLOCK_SIZE"],[5,101,8,54],[5,104,8,57,"size"],[5,108,8,61],[5,110,8,64],[5,111,8,65],[5,112,8,66],[6,2,9,0],[7,2,11,0],[7,11,11,9,"xorBytes1x16"],[7,23,11,21,"xorBytes1x16"],[7,24,11,22,"a"],[7,25,11,23],[7,27,11,25,"b"],[7,28,11,26],[7,30,11,28,"dst"],[7,33,11,31],[7,35,11,33],[8,4,12,2],[8,9,12,7],[8,13,12,11,"i"],[8,14,12,12],[8,17,12,15],[8,18,12,16],[8,20,12,18,"i"],[8,21,12,19],[8,24,12,22,"BLOCK_SIZE"],[8,34,12,32],[8,36,12,34,"i"],[8,37,12,35],[8,39,12,37],[8,41,12,39],[9,6,13,4,"dst"],[9,9,13,7],[9,10,13,8,"i"],[9,11,13,9],[9,12,13,10],[9,15,13,13,"a"],[9,16,13,14],[9,17,13,15,"i"],[9,18,13,16],[9,19,13,17],[9,22,13,20,"b"],[9,23,13,21],[9,24,13,22,"i"],[9,25,13,23],[9,26,13,24],[10,4,14,2],[11,2,15,0],[12,2,17,0],[12,11,17,9,"xorBytes4x16"],[12,23,17,21,"xorBytes4x16"],[12,24,17,22,"a"],[12,25,17,23],[12,27,17,25,"b"],[12,28,17,26],[12,30,17,28,"c"],[12,31,17,29],[12,33,17,31,"d"],[12,34,17,32],[12,36,17,34,"dst"],[12,39,17,37],[12,41,17,39],[13,4,18,2],[13,9,18,7],[13,13,18,11,"i"],[13,14,18,12],[13,17,18,15],[13,18,18,16],[13,20,18,18,"i"],[13,21,18,19],[13,24,18,22,"BLOCK_SIZE"],[13,34,18,32],[13,36,18,34,"i"],[13,37,18,35],[13,39,18,37],[13,41,18,39],[14,6,19,4,"dst"],[14,9,19,7],[14,10,19,8,"i"],[14,11,19,9],[14,12,19,10],[14,15,19,13,"a"],[14,16,19,14],[14,17,19,15,"i"],[14,18,19,16],[14,19,19,17],[14,22,19,20,"b"],[14,23,19,21],[14,24,19,22,"i"],[14,25,19,23],[14,26,19,24],[14,29,19,27,"c"],[14,30,19,28],[14,31,19,29,"i"],[14,32,19,30],[14,33,19,31],[14,36,19,34,"d"],[14,37,19,35],[14,38,19,36,"i"],[14,39,19,37],[14,40,19,38],[15,4,20,2],[16,2,21,0],[17,2,23,0],[17,11,23,9,"xorBytes"],[17,19,23,17,"xorBytes"],[17,20,23,18,"a"],[17,21,23,19],[17,23,23,21,"b"],[17,24,23,22],[17,26,23,24,"dst"],[17,29,23,27],[17,31,23,29],[18,4,24,2],[18,8,24,6,"a"],[18,9,24,7],[18,10,24,8,"length"],[18,16,24,14],[18,19,24,17,"dst"],[18,22,24,20],[18,23,24,21,"length"],[18,29,24,27],[18,33,24,31,"b"],[18,34,24,32],[18,35,24,33,"length"],[18,41,24,39],[18,44,24,42,"dst"],[18,47,24,45],[18,48,24,46,"length"],[18,54,24,52],[18,56,24,54],[19,6,25,4],[19,12,25,10],[19,16,25,14,"Error"],[19,21,25,19],[19,22,25,20],[19,42,25,40],[19,43,25,41],[20,4,26,2],[21,4,27,2],[21,9,27,7],[21,13,27,11,"i"],[21,14,27,12],[21,17,27,15],[21,18,27,16],[21,20,27,18,"i"],[21,21,27,19],[21,24,27,22,"dst"],[21,27,27,25],[21,28,27,26,"length"],[21,34,27,32],[21,36,27,34,"i"],[21,37,27,35],[21,39,27,37],[21,41,27,39],[22,6,28,4,"dst"],[22,9,28,7],[22,10,28,8,"i"],[22,11,28,9],[22,12,28,10],[22,15,28,13,"a"],[22,16,28,14],[22,17,28,15,"i"],[22,18,28,16],[22,19,28,17],[22,22,28,20,"b"],[22,23,28,21],[22,24,28,22,"i"],[22,25,28,23],[22,26,28,24],[23,4,29,2],[24,2,30,0],[25,2,32,0],[25,11,32,9,"uint32"],[25,17,32,15,"uint32"],[25,18,32,16,"i"],[25,19,32,17],[25,21,32,19],[26,4,33,2],[26,11,33,9,"i"],[26,12,33,10],[26,17,33,15],[26,18,33,16],[27,2,34,0],[28,2,36,0],[28,11,36,9,"uint8"],[28,16,36,14,"uint8"],[28,17,36,15,"i"],[28,18,36,16],[28,20,36,18],[29,4,37,2],[29,11,37,9],[29,21,37,19],[29,24,37,22,"i"],[29,25,37,23],[30,2,38,0],[31,2,40,0],[31,11,40,9,"extractKey"],[31,21,40,19,"extractKey"],[31,22,40,20,"k"],[31,23,40,21],[31,25,40,23],[32,4,41,2],[32,8,41,6,"k"],[32,9,41,7],[32,13,41,11,"k"],[32,14,41,12],[32,15,41,13,"length"],[32,21,41,19],[32,25,41,23,"k"],[32,26,41,24],[32,27,41,25,"length"],[32,33,41,31],[32,38,41,36,"EXTRACTED_KEY_SIZE"],[32,56,41,54],[32,58,41,56],[33,6,42,4],[33,13,42,11,"k"],[33,14,42,12],[34,4,43,2],[34,5,43,3],[34,11,43,9],[35,6,44,4],[35,10,44,10,"context"],[35,17,44,17],[35,20,44,20,"_$$_REQUIRE"],[35,31,44,20],[35,32,44,20,"_dependencyMap"],[35,46,44,20],[35,62,44,26,"blake2bInit"],[35,73,44,37],[35,74,44,38,"EXTRACTED_KEY_SIZE"],[35,92,44,56],[35,93,44,57],[36,6,45,4,"_$$_REQUIRE"],[36,17,45,4],[36,18,45,4,"_dependencyMap"],[36,32,45,4],[36,48,45,10,"blake2bUpdate"],[36,61,45,23],[36,62,45,24,"context"],[36,69,45,31],[36,71,45,33,"k"],[36,72,45,34],[36,73,45,35],[37,6,46,4],[37,13,46,11,"_$$_REQUIRE"],[37,24,46,11],[37,25,46,11,"_dependencyMap"],[37,39,46,11],[37,59,46,11,"Buffer"],[37,65,46,11],[37,66,46,18,"from"],[37,70,46,22],[37,71,46,23,"_$$_REQUIRE"],[37,82,46,23],[37,83,46,23,"_dependencyMap"],[37,97,46,23],[37,113,46,29,"blake2bFinal"],[37,125,46,41],[37,126,46,42,"context"],[37,133,46,49],[37,134,46,50],[37,135,46,51],[38,4,47,2],[39,2,48,0],[40,2,50,0],[40,11,50,9,"multBlock"],[40,20,50,18,"multBlock"],[40,21,50,19,"x"],[40,22,50,20],[40,24,50,22,"src"],[40,27,50,25],[40,29,50,27,"dst"],[40,32,50,30],[40,34,50,32],[41,4,51,2],[41,8,51,2,"_ref"],[41,12,51,2],[41,15,51,17],[41,16,51,18,"mkBlock"],[41,23,51,25],[41,24,51,26],[41,25,51,27],[41,27,51,29,"mkBlock"],[41,34,51,36],[41,35,51,37],[41,36,51,38],[41,37,51,39],[42,6,51,9,"t"],[42,7,51,10],[42,10,51,10,"_ref"],[42,14,51,10],[43,6,51,12,"r"],[43,7,51,13],[43,10,51,13,"_ref"],[43,14,51,13],[44,4,53,2,"src"],[44,7,53,5],[44,8,53,6,"copy"],[44,12,53,10],[44,13,53,11,"t"],[44,14,53,12],[44,15,53,13],[45,4,55,2],[45,11,55,9,"x"],[45,12,55,10],[45,17,55,15],[45,18,55,16],[45,20,55,18],[46,6,56,4],[46,10,56,8,"x"],[46,11,56,9],[46,14,56,12],[46,15,56,13],[46,20,56,18],[46,21,56,19],[46,23,56,21],[47,8,57,6,"xorBytes1x16"],[47,20,57,18],[47,21,57,19,"r"],[47,22,57,20],[47,24,57,22,"t"],[47,25,57,23],[47,27,57,25,"r"],[47,28,57,26],[47,29,57,27],[48,6,58,4],[49,6,59,4,"doubleBlock"],[49,17,59,15],[49,18,59,16,"t"],[49,19,59,17],[49,20,59,18],[50,6,60,4,"x"],[50,7,60,5],[50,12,60,10],[50,13,60,11],[51,4,61,2],[52,4,63,2,"r"],[52,5,63,3],[52,6,63,4,"copy"],[52,10,63,8],[52,11,63,9,"dst"],[52,14,63,12],[52,15,63,13],[53,2,64,0],[54,2,66,0],[54,11,66,9,"doubleBlock"],[54,22,66,20,"doubleBlock"],[54,23,66,21,"p"],[54,24,66,22],[54,26,66,24],[55,4,67,2],[55,8,67,8,"tmp"],[55,11,67,11],[55,14,67,14,"p"],[55,15,67,15],[55,16,67,16],[55,17,67,17],[55,18,67,18],[56,4,68,2],[56,9,68,7],[56,13,68,11,"i"],[56,14,68,12],[56,17,68,15],[56,18,68,16],[56,20,68,18,"i"],[56,21,68,19],[56,24,68,22],[56,26,68,24],[56,28,68,26,"i"],[56,29,68,27],[56,31,68,29],[56,33,68,31],[57,6,69,4,"p"],[57,7,69,5],[57,8,69,6,"i"],[57,9,69,7],[57,10,69,8],[57,13,69,12,"p"],[57,14,69,13],[57,15,69,14,"i"],[57,16,69,15],[57,17,69,16],[57,21,69,20],[57,22,69,21],[57,25,69,26,"p"],[57,26,69,27],[57,27,69,28,"i"],[57,28,69,29],[57,31,69,32],[57,32,69,33],[57,33,69,34],[57,37,69,38],[57,38,69,40],[58,4,70,2],[59,4,71,2,"p"],[59,5,71,3],[59,6,71,4],[59,8,71,6],[59,9,71,7],[59,12,71,11,"p"],[59,13,71,12],[59,14,71,13],[59,16,71,15],[59,17,71,16],[59,21,71,20],[59,22,71,21],[59,26,71,27,"tmp"],[59,29,71,30],[59,33,71,34],[59,34,71,35],[59,37,71,39],[59,40,71,42],[59,43,71,45],[59,44,71,46],[59,45,71,47],[60,2,72,0],[61,2,74,0],[61,11,74,9,"oneZeroPad"],[61,21,74,19,"oneZeroPad"],[61,22,74,20,"src"],[61,25,74,23],[61,27,74,25,"size"],[61,31,74,29],[61,33,74,31,"dst"],[61,36,74,34],[61,38,74,36],[62,4,75,2,"dst"],[62,7,75,5],[62,8,75,6,"fill"],[62,12,75,10],[62,13,75,11],[62,14,75,12],[62,15,75,13],[63,4,76,2,"src"],[63,7,76,5],[63,8,76,6,"slice"],[63,13,76,11],[63,14,76,12],[63,15,76,13],[63,17,76,15,"size"],[63,21,76,19],[63,22,76,20],[63,23,76,21,"copy"],[63,27,76,25],[63,28,76,26,"dst"],[63,31,76,29],[63,32,76,30],[64,4,77,2,"dst"],[64,7,77,5],[64,8,77,6,"size"],[64,12,77,10],[64,13,77,11],[64,16,77,14],[64,20,77,18],[65,2,78,0],[66,2,80,0,"module"],[66,8,80,6],[66,9,80,7,"exports"],[66,16,80,14],[66,19,80,17],[67,4,81,2,"BLOCK_SIZE"],[67,14,81,12],[67,16,81,2,"BLOCK_SIZE"],[67,26,81,12],[68,4,82,2,"EXTRACTED_KEY_SIZE"],[68,22,82,20],[68,24,82,2,"EXTRACTED_KEY_SIZE"],[68,42,82,20],[69,4,83,2,"mkBlock"],[69,11,83,9],[69,13,83,2,"mkBlock"],[69,20,83,9],[70,4,84,2,"xorBytes1x16"],[70,16,84,14],[70,18,84,2,"xorBytes1x16"],[70,30,84,14],[71,4,85,2,"xorBytes4x16"],[71,16,85,14],[71,18,85,2,"xorBytes4x16"],[71,30,85,14],[72,4,86,2,"xorBytes"],[72,12,86,10],[72,14,86,2,"xorBytes"],[72,22,86,10],[73,4,87,2,"uint32"],[73,10,87,8],[73,12,87,2,"uint32"],[73,18,87,8],[74,4,88,2,"uint8"],[74,9,88,7],[74,11,88,2,"uint8"],[74,16,88,7],[75,4,89,2,"extractKey"],[75,14,89,12],[75,16,89,2,"extractKey"],[75,26,89,12],[76,4,90,2,"multBlock"],[76,13,90,11],[76,15,90,2,"multBlock"],[76,24,90,11],[77,4,91,2,"doubleBlock"],[77,15,91,13],[77,17,91,2,"doubleBlock"],[77,28,91,13],[78,4,92,2,"oneZeroPad"],[78,14,92,12],[78,16,92,2,"oneZeroPad"],[79,2,93,0],[79,3,93,1],[80,0,93,2],[80,3]],"functionMap":{"names":["<global>","mkBlock","xorBytes1x16","xorBytes4x16","xorBytes","uint32","uint8","extractKey","multBlock","doubleBlock","oneZeroPad"],"mappings":"AAA;ACM;CDE;AEE;CFI;AGE;CHI;AIE;CJO;AKE;CLE;AME;CNE;AOE;CPQ;AQE;CRc;ASE;CTM;AUE;CVI"}},"type":"js/module"}]}