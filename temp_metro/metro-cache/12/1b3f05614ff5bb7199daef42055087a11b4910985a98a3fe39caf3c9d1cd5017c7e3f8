{"dependencies":[{"name":"elliptic","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"h6RIsoF9GgRhyZAr3TXxz6R4meA="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":9,"index":44},"end":{"line":2,"column":25,"index":60}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  module.exports = function createECDH(curve) {\n    return new ECDH(curve);\n  };\n  var aliases = {\n    secp256k1: {\n      name: 'secp256k1',\n      byteLength: 32\n    },\n    secp224r1: {\n      name: 'p224',\n      byteLength: 28\n    },\n    prime256v1: {\n      name: 'p256',\n      byteLength: 32\n    },\n    prime192v1: {\n      name: 'p192',\n      byteLength: 24\n    },\n    ed25519: {\n      name: 'ed25519',\n      byteLength: 32\n    },\n    secp384r1: {\n      name: 'p384',\n      byteLength: 48\n    },\n    secp521r1: {\n      name: 'p521',\n      byteLength: 66\n    }\n  };\n  aliases.p224 = aliases.secp224r1;\n  aliases.p256 = aliases.secp256r1 = aliases.prime256v1;\n  aliases.p192 = aliases.secp192r1 = aliases.prime192v1;\n  aliases.p384 = aliases.secp384r1;\n  aliases.p521 = aliases.secp521r1;\n  function ECDH(curve) {\n    this.curveType = aliases[curve];\n    if (!this.curveType) {\n      this.curveType = {\n        name: curve\n      };\n    }\n    this.curve = new (_$$_REQUIRE(_dependencyMap[0], \"elliptic\").ec)(this.curveType.name); // eslint-disable-line new-cap\n    this.keys = void 0;\n  }\n  ECDH.prototype.generateKeys = function (enc, format) {\n    this.keys = this.curve.genKeyPair();\n    return this.getPublicKey(enc, format);\n  };\n  ECDH.prototype.computeSecret = function (other, inenc, enc) {\n    inenc = inenc || 'utf8';\n    if (!Buffer.isBuffer(other)) {\n      other = new Buffer(other, inenc);\n    }\n    var otherPub = this.curve.keyFromPublic(other).getPublic();\n    var out = otherPub.mul(this.keys.getPrivate()).getX();\n    return formatReturnValue(out, enc, this.curveType.byteLength);\n  };\n  ECDH.prototype.getPublicKey = function (enc, format) {\n    var key = this.keys.getPublic(format === 'compressed', true);\n    if (format === 'hybrid') {\n      if (key[key.length - 1] % 2) {\n        key[0] = 7;\n      } else {\n        key[0] = 6;\n      }\n    }\n    return formatReturnValue(key, enc);\n  };\n  ECDH.prototype.getPrivateKey = function (enc) {\n    return formatReturnValue(this.keys.getPrivate(), enc);\n  };\n  ECDH.prototype.setPublicKey = function (pub, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(pub)) {\n      pub = new Buffer(pub, enc);\n    }\n    this.keys._importPublic(pub);\n    return this;\n  };\n  ECDH.prototype.setPrivateKey = function (priv, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(priv)) {\n      priv = new Buffer(priv, enc);\n    }\n    var _priv = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(priv);\n    _priv = _priv.toString(16);\n    this.keys = this.curve.genKeyPair();\n    this.keys._importPrivate(_priv);\n    return this;\n  };\n  function formatReturnValue(bn, enc, len) {\n    if (!Array.isArray(bn)) {\n      bn = bn.toArray();\n    }\n    var buf = new Buffer(bn);\n    if (len && buf.length < len) {\n      var zeros = new Buffer(len - buf.length);\n      zeros.fill(0);\n      buf = Buffer.concat([zeros, buf]);\n    }\n    if (!enc) {\n      return buf;\n    } else {\n      return buf.toString(enc);\n    }\n  }\n});","lineCount":112,"map":[[2,2,4,0,"module"],[2,8,4,6],[2,9,4,7,"exports"],[2,16,4,14],[2,19,4,17],[2,28,4,26,"createECDH"],[2,38,4,36,"createECDH"],[2,39,4,38,"curve"],[2,44,4,43],[2,46,4,45],[3,4,5,2],[3,11,5,9],[3,15,5,13,"ECDH"],[3,19,5,17],[3,20,5,18,"curve"],[3,25,5,23],[3,26,5,24],[4,2,6,0],[4,3,6,1],[5,2,8,0],[5,6,8,4,"aliases"],[5,13,8,11],[5,16,8,14],[6,4,9,2,"secp256k1"],[6,13,9,11],[6,15,9,13],[7,6,10,4,"name"],[7,10,10,8],[7,12,10,10],[7,23,10,21],[8,6,11,4,"byteLength"],[8,16,11,14],[8,18,11,16],[9,4,12,2],[9,5,12,3],[10,4,13,2,"secp224r1"],[10,13,13,11],[10,15,13,13],[11,6,14,4,"name"],[11,10,14,8],[11,12,14,10],[11,18,14,16],[12,6,15,4,"byteLength"],[12,16,15,14],[12,18,15,16],[13,4,16,2],[13,5,16,3],[14,4,17,2,"prime256v1"],[14,14,17,12],[14,16,17,14],[15,6,18,4,"name"],[15,10,18,8],[15,12,18,10],[15,18,18,16],[16,6,19,4,"byteLength"],[16,16,19,14],[16,18,19,16],[17,4,20,2],[17,5,20,3],[18,4,21,2,"prime192v1"],[18,14,21,12],[18,16,21,14],[19,6,22,4,"name"],[19,10,22,8],[19,12,22,10],[19,18,22,16],[20,6,23,4,"byteLength"],[20,16,23,14],[20,18,23,16],[21,4,24,2],[21,5,24,3],[22,4,25,2,"ed25519"],[22,11,25,9],[22,13,25,11],[23,6,26,4,"name"],[23,10,26,8],[23,12,26,10],[23,21,26,19],[24,6,27,4,"byteLength"],[24,16,27,14],[24,18,27,16],[25,4,28,2],[25,5,28,3],[26,4,29,2,"secp384r1"],[26,13,29,11],[26,15,29,13],[27,6,30,4,"name"],[27,10,30,8],[27,12,30,10],[27,18,30,16],[28,6,31,4,"byteLength"],[28,16,31,14],[28,18,31,16],[29,4,32,2],[29,5,32,3],[30,4,33,2,"secp521r1"],[30,13,33,11],[30,15,33,13],[31,6,34,4,"name"],[31,10,34,8],[31,12,34,10],[31,18,34,16],[32,6,35,4,"byteLength"],[32,16,35,14],[32,18,35,16],[33,4,36,2],[34,2,37,0],[34,3,37,1],[35,2,39,0,"aliases"],[35,9,39,7],[35,10,39,8,"p224"],[35,14,39,12],[35,17,39,15,"aliases"],[35,24,39,22],[35,25,39,23,"secp224r1"],[35,34,39,32],[36,2,40,0,"aliases"],[36,9,40,7],[36,10,40,8,"p256"],[36,14,40,12],[36,17,40,15,"aliases"],[36,24,40,22],[36,25,40,23,"secp256r1"],[36,34,40,32],[36,37,40,35,"aliases"],[36,44,40,42],[36,45,40,43,"prime256v1"],[36,55,40,53],[37,2,41,0,"aliases"],[37,9,41,7],[37,10,41,8,"p192"],[37,14,41,12],[37,17,41,15,"aliases"],[37,24,41,22],[37,25,41,23,"secp192r1"],[37,34,41,32],[37,37,41,35,"aliases"],[37,44,41,42],[37,45,41,43,"prime192v1"],[37,55,41,53],[38,2,42,0,"aliases"],[38,9,42,7],[38,10,42,8,"p384"],[38,14,42,12],[38,17,42,15,"aliases"],[38,24,42,22],[38,25,42,23,"secp384r1"],[38,34,42,32],[39,2,43,0,"aliases"],[39,9,43,7],[39,10,43,8,"p521"],[39,14,43,12],[39,17,43,15,"aliases"],[39,24,43,22],[39,25,43,23,"secp521r1"],[39,34,43,32],[40,2,45,0],[40,11,45,9,"ECDH"],[40,15,45,13,"ECDH"],[40,16,45,15,"curve"],[40,21,45,20],[40,23,45,22],[41,4,46,2],[41,8,46,6],[41,9,46,7,"curveType"],[41,18,46,16],[41,21,46,19,"aliases"],[41,28,46,26],[41,29,46,27,"curve"],[41,34,46,32],[41,35,46,33],[42,4,47,2],[42,8,47,6],[42,9,47,7],[42,13,47,11],[42,14,47,12,"curveType"],[42,23,47,21],[42,25,47,23],[43,6,48,4],[43,10,48,8],[43,11,48,9,"curveType"],[43,20,48,18],[43,23,48,21],[44,8,49,6,"name"],[44,12,49,10],[44,14,49,12,"curve"],[45,6,50,4],[45,7,50,5],[46,4,51,2],[47,4,52,2],[47,8,52,6],[47,9,52,7,"curve"],[47,14,52,12],[47,17,52,15],[47,22,52,19,"_$$_REQUIRE"],[47,33,52,19],[47,34,52,19,"_dependencyMap"],[47,48,52,19],[47,65,52,28,"ec"],[47,67,52,30],[47,69,52,31],[47,73,52,35],[47,74,52,36,"curveType"],[47,83,52,45],[47,84,52,46,"name"],[47,88,52,50],[47,89,52,51],[47,91,52,52],[48,4,53,2],[48,8,53,6],[48,9,53,7,"keys"],[48,13,53,11],[48,16,53,14],[48,21,53,19],[48,22,53,20],[49,2,54,0],[50,2,56,0,"ECDH"],[50,6,56,4],[50,7,56,5,"prototype"],[50,16,56,14],[50,17,56,15,"generateKeys"],[50,29,56,27],[50,32,56,30],[50,42,56,40,"enc"],[50,45,56,43],[50,47,56,45,"format"],[50,53,56,51],[50,55,56,53],[51,4,57,2],[51,8,57,6],[51,9,57,7,"keys"],[51,13,57,11],[51,16,57,14],[51,20,57,18],[51,21,57,19,"curve"],[51,26,57,24],[51,27,57,25,"genKeyPair"],[51,37,57,35],[51,38,57,36],[51,39,57,37],[52,4,58,2],[52,11,58,9],[52,15,58,13],[52,16,58,14,"getPublicKey"],[52,28,58,26],[52,29,58,27,"enc"],[52,32,58,30],[52,34,58,32,"format"],[52,40,58,38],[52,41,58,39],[53,2,59,0],[53,3,59,1],[54,2,61,0,"ECDH"],[54,6,61,4],[54,7,61,5,"prototype"],[54,16,61,14],[54,17,61,15,"computeSecret"],[54,30,61,28],[54,33,61,31],[54,43,61,41,"other"],[54,48,61,46],[54,50,61,48,"inenc"],[54,55,61,53],[54,57,61,55,"enc"],[54,60,61,58],[54,62,61,60],[55,4,62,2,"inenc"],[55,9,62,7],[55,12,62,10,"inenc"],[55,17,62,15],[55,21,62,19],[55,27,62,25],[56,4,63,2],[56,8,63,6],[56,9,63,7,"Buffer"],[56,15,63,13],[56,16,63,14,"isBuffer"],[56,24,63,22],[56,25,63,23,"other"],[56,30,63,28],[56,31,63,29],[56,33,63,31],[57,6,64,4,"other"],[57,11,64,9],[57,14,64,12],[57,18,64,16,"Buffer"],[57,24,64,22],[57,25,64,23,"other"],[57,30,64,28],[57,32,64,30,"inenc"],[57,37,64,35],[57,38,64,36],[58,4,65,2],[59,4,66,2],[59,8,66,6,"otherPub"],[59,16,66,14],[59,19,66,17],[59,23,66,21],[59,24,66,22,"curve"],[59,29,66,27],[59,30,66,28,"keyFromPublic"],[59,43,66,41],[59,44,66,42,"other"],[59,49,66,47],[59,50,66,48],[59,51,66,49,"getPublic"],[59,60,66,58],[59,61,66,59],[59,62,66,60],[60,4,67,2],[60,8,67,6,"out"],[60,11,67,9],[60,14,67,12,"otherPub"],[60,22,67,20],[60,23,67,21,"mul"],[60,26,67,24],[60,27,67,25],[60,31,67,29],[60,32,67,30,"keys"],[60,36,67,34],[60,37,67,35,"getPrivate"],[60,47,67,45],[60,48,67,46],[60,49,67,47],[60,50,67,48],[60,51,67,49,"getX"],[60,55,67,53],[60,56,67,54],[60,57,67,55],[61,4,68,2],[61,11,68,9,"formatReturnValue"],[61,28,68,26],[61,29,68,27,"out"],[61,32,68,30],[61,34,68,32,"enc"],[61,37,68,35],[61,39,68,37],[61,43,68,41],[61,44,68,42,"curveType"],[61,53,68,51],[61,54,68,52,"byteLength"],[61,64,68,62],[61,65,68,63],[62,2,69,0],[62,3,69,1],[63,2,71,0,"ECDH"],[63,6,71,4],[63,7,71,5,"prototype"],[63,16,71,14],[63,17,71,15,"getPublicKey"],[63,29,71,27],[63,32,71,30],[63,42,71,40,"enc"],[63,45,71,43],[63,47,71,45,"format"],[63,53,71,51],[63,55,71,53],[64,4,72,2],[64,8,72,6,"key"],[64,11,72,9],[64,14,72,12],[64,18,72,16],[64,19,72,17,"keys"],[64,23,72,21],[64,24,72,22,"getPublic"],[64,33,72,31],[64,34,72,32,"format"],[64,40,72,38],[64,45,72,43],[64,57,72,55],[64,59,72,57],[64,63,72,61],[64,64,72,62],[65,4,73,2],[65,8,73,6,"format"],[65,14,73,12],[65,19,73,17],[65,27,73,25],[65,29,73,27],[66,6,74,4],[66,10,74,8,"key"],[66,13,74,11],[66,14,74,12,"key"],[66,17,74,15],[66,18,74,16,"length"],[66,24,74,22],[66,27,74,25],[66,28,74,26],[66,29,74,27],[66,32,74,30],[66,33,74,31],[66,35,74,33],[67,8,75,6,"key"],[67,11,75,9],[67,12,75,10],[67,13,75,11],[67,14,75,12],[67,17,75,15],[67,18,75,16],[68,6,76,4],[68,7,76,5],[68,13,76,11],[69,8,77,6,"key"],[69,11,77,9],[69,12,77,10],[69,13,77,11],[69,14,77,12],[69,17,77,15],[69,18,77,16],[70,6,78,4],[71,4,79,2],[72,4,80,2],[72,11,80,9,"formatReturnValue"],[72,28,80,26],[72,29,80,27,"key"],[72,32,80,30],[72,34,80,32,"enc"],[72,37,80,35],[72,38,80,36],[73,2,81,0],[73,3,81,1],[74,2,83,0,"ECDH"],[74,6,83,4],[74,7,83,5,"prototype"],[74,16,83,14],[74,17,83,15,"getPrivateKey"],[74,30,83,28],[74,33,83,31],[74,43,83,41,"enc"],[74,46,83,44],[74,48,83,46],[75,4,84,2],[75,11,84,9,"formatReturnValue"],[75,28,84,26],[75,29,84,27],[75,33,84,31],[75,34,84,32,"keys"],[75,38,84,36],[75,39,84,37,"getPrivate"],[75,49,84,47],[75,50,84,48],[75,51,84,49],[75,53,84,51,"enc"],[75,56,84,54],[75,57,84,55],[76,2,85,0],[76,3,85,1],[77,2,87,0,"ECDH"],[77,6,87,4],[77,7,87,5,"prototype"],[77,16,87,14],[77,17,87,15,"setPublicKey"],[77,29,87,27],[77,32,87,30],[77,42,87,40,"pub"],[77,45,87,43],[77,47,87,45,"enc"],[77,50,87,48],[77,52,87,50],[78,4,88,2,"enc"],[78,7,88,5],[78,10,88,8,"enc"],[78,13,88,11],[78,17,88,15],[78,23,88,21],[79,4,89,2],[79,8,89,6],[79,9,89,7,"Buffer"],[79,15,89,13],[79,16,89,14,"isBuffer"],[79,24,89,22],[79,25,89,23,"pub"],[79,28,89,26],[79,29,89,27],[79,31,89,29],[80,6,90,4,"pub"],[80,9,90,7],[80,12,90,10],[80,16,90,14,"Buffer"],[80,22,90,20],[80,23,90,21,"pub"],[80,26,90,24],[80,28,90,26,"enc"],[80,31,90,29],[80,32,90,30],[81,4,91,2],[82,4,92,2],[82,8,92,6],[82,9,92,7,"keys"],[82,13,92,11],[82,14,92,12,"_importPublic"],[82,27,92,25],[82,28,92,26,"pub"],[82,31,92,29],[82,32,92,30],[83,4,93,2],[83,11,93,9],[83,15,93,13],[84,2,94,0],[84,3,94,1],[85,2,96,0,"ECDH"],[85,6,96,4],[85,7,96,5,"prototype"],[85,16,96,14],[85,17,96,15,"setPrivateKey"],[85,30,96,28],[85,33,96,31],[85,43,96,41,"priv"],[85,47,96,45],[85,49,96,47,"enc"],[85,52,96,50],[85,54,96,52],[86,4,97,2,"enc"],[86,7,97,5],[86,10,97,8,"enc"],[86,13,97,11],[86,17,97,15],[86,23,97,21],[87,4,98,2],[87,8,98,6],[87,9,98,7,"Buffer"],[87,15,98,13],[87,16,98,14,"isBuffer"],[87,24,98,22],[87,25,98,23,"priv"],[87,29,98,27],[87,30,98,28],[87,32,98,30],[88,6,99,4,"priv"],[88,10,99,8],[88,13,99,11],[88,17,99,15,"Buffer"],[88,23,99,21],[88,24,99,22,"priv"],[88,28,99,26],[88,30,99,28,"enc"],[88,33,99,31],[88,34,99,32],[89,4,100,2],[90,4,102,2],[90,8,102,6,"_priv"],[90,13,102,11],[90,16,102,14],[90,21,102,14,"_$$_REQUIRE"],[90,32,102,14],[90,33,102,14,"_dependencyMap"],[90,47,102,14],[90,62,102,21,"priv"],[90,66,102,25],[90,67,102,26],[91,4,103,2,"_priv"],[91,9,103,7],[91,12,103,10,"_priv"],[91,17,103,15],[91,18,103,16,"toString"],[91,26,103,24],[91,27,103,25],[91,29,103,27],[91,30,103,28],[92,4,104,2],[92,8,104,6],[92,9,104,7,"keys"],[92,13,104,11],[92,16,104,14],[92,20,104,18],[92,21,104,19,"curve"],[92,26,104,24],[92,27,104,25,"genKeyPair"],[92,37,104,35],[92,38,104,36],[92,39,104,37],[93,4,105,2],[93,8,105,6],[93,9,105,7,"keys"],[93,13,105,11],[93,14,105,12,"_importPrivate"],[93,28,105,26],[93,29,105,27,"_priv"],[93,34,105,32],[93,35,105,33],[94,4,106,2],[94,11,106,9],[94,15,106,13],[95,2,107,0],[95,3,107,1],[96,2,109,0],[96,11,109,9,"formatReturnValue"],[96,28,109,26,"formatReturnValue"],[96,29,109,28,"bn"],[96,31,109,30],[96,33,109,32,"enc"],[96,36,109,35],[96,38,109,37,"len"],[96,41,109,40],[96,43,109,42],[97,4,110,2],[97,8,110,6],[97,9,110,7,"Array"],[97,14,110,12],[97,15,110,13,"isArray"],[97,22,110,20],[97,23,110,21,"bn"],[97,25,110,23],[97,26,110,24],[97,28,110,26],[98,6,111,4,"bn"],[98,8,111,6],[98,11,111,9,"bn"],[98,13,111,11],[98,14,111,12,"toArray"],[98,21,111,19],[98,22,111,20],[98,23,111,21],[99,4,112,2],[100,4,113,2],[100,8,113,6,"buf"],[100,11,113,9],[100,14,113,12],[100,18,113,16,"Buffer"],[100,24,113,22],[100,25,113,23,"bn"],[100,27,113,25],[100,28,113,26],[101,4,114,2],[101,8,114,6,"len"],[101,11,114,9],[101,15,114,13,"buf"],[101,18,114,16],[101,19,114,17,"length"],[101,25,114,23],[101,28,114,26,"len"],[101,31,114,29],[101,33,114,31],[102,6,115,4],[102,10,115,8,"zeros"],[102,15,115,13],[102,18,115,16],[102,22,115,20,"Buffer"],[102,28,115,26],[102,29,115,27,"len"],[102,32,115,30],[102,35,115,33,"buf"],[102,38,115,36],[102,39,115,37,"length"],[102,45,115,43],[102,46,115,44],[103,6,116,4,"zeros"],[103,11,116,9],[103,12,116,10,"fill"],[103,16,116,14],[103,17,116,15],[103,18,116,16],[103,19,116,17],[104,6,117,4,"buf"],[104,9,117,7],[104,12,117,10,"Buffer"],[104,18,117,16],[104,19,117,17,"concat"],[104,25,117,23],[104,26,117,24],[104,27,117,25,"zeros"],[104,32,117,30],[104,34,117,32,"buf"],[104,37,117,35],[104,38,117,36],[104,39,117,37],[105,4,118,2],[106,4,119,2],[106,8,119,6],[106,9,119,7,"enc"],[106,12,119,10],[106,14,119,12],[107,6,120,4],[107,13,120,11,"buf"],[107,16,120,14],[108,4,121,2],[108,5,121,3],[108,11,121,9],[109,6,122,4],[109,13,122,11,"buf"],[109,16,122,14],[109,17,122,15,"toString"],[109,25,122,23],[109,26,122,24,"enc"],[109,29,122,27],[109,30,122,28],[110,4,123,2],[111,2,124,0],[112,0,124,1],[112,3]],"functionMap":{"names":["<global>","createECDH","ECDH","ECDH.prototype.generateKeys","ECDH.prototype.computeSecret","ECDH.prototype.getPublicKey","ECDH.prototype.getPrivateKey","ECDH.prototype.setPublicKey","ECDH.prototype.setPrivateKey","formatReturnValue"],"mappings":"AAA;iBCG;CDE;AEuC;CFS;8BGE;CHG;+BIE;CJQ;8BKE;CLU;+BME;CNE;8BOE;CPO;+BQE;CRW;ASE;CTe"}},"type":"js/module"}]}