{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":172,"column":0,"index":5014}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":172,"column":0,"index":5014}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":172,"column":0,"index":5014}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":172,"column":0,"index":5014}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":172,"column":0,"index":5014}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":172,"column":0,"index":5014}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":130},"end":{"line":5,"column":47,"index":177}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"ecpair","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":39,"index":128}}],"key":"u6yWeivdFv15Am3FmwSfeX38wPs="}},{"name":"./legacy-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":178},"end":{"line":6,"column":47,"index":225}}],"key":"wPb6aTWK4taaR1mov6qK3Iqdk1w="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SegwitP2SHWallet = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"bitcoinjs-lib\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../blue_modules/noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var ECPair = (0, _$$_REQUIRE(_dependencyMap[8], \"ecpair\").ECPairFactory)(_noble_ecc.default);\n\n  /**\n   * Creates Segwit P2SH Bitcoin address\n   * @param pubkey\n   * @param network\n   * @returns {String}\n   */\n  function pubkeyToP2shSegwitAddress(pubkey) {\n    var _bitcoin$payments$p2s = bitcoin.payments.p2sh({\n        redeem: bitcoin.payments.p2wpkh({\n          pubkey: pubkey\n        })\n      }),\n      address = _bitcoin$payments$p2s.address;\n    return address != null ? address : false;\n  }\n  var SegwitP2SHWallet = exports.SegwitP2SHWallet = /*#__PURE__*/function (_LegacyWallet) {\n    function SegwitP2SHWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, SegwitP2SHWallet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, SegwitP2SHWallet, [].concat(args));\n      // @ts-ignore: override\n      _this.type = SegwitP2SHWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = SegwitP2SHWallet.typeReadable;\n      _this.segwitType = 'p2sh(p2wpkh)';\n      return _this;\n    }\n    (0, _inherits2.default)(SegwitP2SHWallet, _LegacyWallet);\n    return (0, _createClass2.default)(SegwitP2SHWallet, [{\n      key: \"getAddress\",\n      value: function getAddress() {\n        if (this._address) return this._address;\n        var address;\n        try {\n          var keyPair = ECPair.fromWIF(this.secret);\n          var pubKey = keyPair.publicKey;\n          if (!keyPair.compressed) {\n            console.warn('only compressed public keys are good for segwit');\n            return false;\n          }\n          address = pubkeyToP2shSegwitAddress(Buffer.from(pubKey));\n        } catch (err) {\n          return false;\n        }\n        this._address = address;\n        return this._address;\n      }\n\n      /**\n       *\n       * @param utxos {Array.<{vout: Number, value: Number, txid: String, address: String, txhex: String, }>} List of spendable utxos\n       * @param targets {Array.<{value: Number, address: String}>} Where coins are going. If theres only 1 target and that target has no value - this will send MAX to that address (respecting fee rate)\n       * @param feeRate {Number} satoshi per byte\n       * @param changeAddress {String} Excessive coins will go back to that address\n       * @param sequence {Number} Used in RBF\n       * @param skipSigning {boolean} Whether we should skip signing, use returned `psbt` in that case\n       * @param masterFingerprint {number} Decimal number of wallet's master fingerprint\n       * @returns {{outputs: Array, tx: Transaction, inputs: Array, fee: Number, psbt: Psbt}}\n       */\n    }, {\n      key: \"createTransaction\",\n      value: function createTransaction(utxos, targets, feeRate, changeAddress, sequence) {\n        var skipSigning = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var masterFingerprint = arguments.length > 6 ? arguments[6] : undefined;\n        if (targets.length === 0) throw new Error('No destination provided');\n        var _this$coinselect = this.coinselect(utxos, targets, feeRate),\n          inputs = _this$coinselect.inputs,\n          outputs = _this$coinselect.outputs,\n          fee = _this$coinselect.fee;\n        sequence = sequence || 0xffffffff; // disable RBF by default\n        var psbt = new bitcoin.Psbt();\n        var c = 0;\n        var values = {};\n        var keyPair = ECPair.fromWIF(this.secret);\n        inputs.forEach(function (input) {\n          values[c] = input.value;\n          c++;\n          var pubkey = keyPair.publicKey;\n          var p2wpkh = bitcoin.payments.p2wpkh({\n            pubkey: pubkey\n          });\n          var p2sh = bitcoin.payments.p2sh({\n            redeem: p2wpkh\n          });\n          if (!p2sh.output) {\n            throw new Error('Internal error: no p2sh.output during createTransaction()');\n          }\n          psbt.addInput({\n            hash: input.txid,\n            index: input.vout,\n            sequence: sequence,\n            witnessUtxo: {\n              script: p2sh.output,\n              value: BigInt(input.value)\n            },\n            redeemScript: p2wpkh.output\n          });\n        });\n        outputs.forEach(function (output) {\n          // if output has no address - this is change output\n          if (!output.address) {\n            output.address = changeAddress;\n          }\n          var outputData = {\n            address: output.address,\n            value: BigInt(output.value)\n          };\n          psbt.addOutput(outputData);\n        });\n        if (!skipSigning) {\n          // skiping signing related stuff\n          for (var cc = 0; cc < c; cc++) {\n            psbt.signInput(cc, keyPair);\n          }\n        }\n        var tx;\n        if (!skipSigning) {\n          tx = psbt.finalizeAllInputs().extractTransaction();\n        }\n        return {\n          tx: tx,\n          inputs: inputs,\n          outputs: outputs,\n          fee: fee,\n          psbt: psbt\n        };\n      }\n    }, {\n      key: \"allowSendMax\",\n      value: function allowSendMax() {\n        return true;\n      }\n    }, {\n      key: \"isSegwit\",\n      value: function isSegwit() {\n        return true;\n      }\n    }, {\n      key: \"allowSignVerifyMessage\",\n      value: function allowSignVerifyMessage() {\n        return true;\n      }\n    }], [{\n      key: \"witnessToAddress\",\n      value: function witnessToAddress(witness) {\n        try {\n          var pubKey = Buffer.from(witness, 'hex');\n          return pubkeyToP2shSegwitAddress(pubKey);\n        } catch (_) {\n          return false;\n        }\n      }\n\n      /**\n       * Converts script pub key to p2sh address if it can. Returns FALSE if it cant.\n       *\n       * @param scriptPubKey\n       * @returns {boolean|string} Either p2sh address or false\n       */\n    }, {\n      key: \"scriptPubKeyToAddress\",\n      value: function scriptPubKeyToAddress(scriptPubKey) {\n        try {\n          var _bitcoin$payments$p2s2;\n          var scriptPubKey2 = Buffer.from(scriptPubKey, 'hex');\n          return (_bitcoin$payments$p2s2 = bitcoin.payments.p2sh({\n            output: scriptPubKey2,\n            network: bitcoin.networks.bitcoin\n          }).address) != null ? _bitcoin$payments$p2s2 : false;\n        } catch (_) {\n          return false;\n        }\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[9], \"./legacy-wallet\").LegacyWallet);\n  SegwitP2SHWallet.type = 'segwitP2SH';\n  SegwitP2SHWallet.typeReadable = 'SegWit (P2SH)';\n});","lineCount":200,"map":[[12,2,1,0],[12,6,1,0,"bitcoin"],[12,13,1,0],[12,16,1,0,"_interopRequireWildcard"],[12,39,1,0],[12,40,1,0,"_$$_REQUIRE"],[12,51,1,0],[12,52,1,0,"_dependencyMap"],[12,66,1,0],[13,2,5,0],[13,6,5,0,"_noble_ecc"],[13,16,5,0],[13,19,5,0,"_interopRequireDefault"],[13,41,5,0],[13,42,5,0,"_$$_REQUIRE"],[13,53,5,0],[13,54,5,0,"_dependencyMap"],[13,68,5,0],[14,2,5,47],[14,11,5,47,"_getRequireWildcardCache"],[14,36,5,47,"e"],[14,37,5,47],[14,66,5,47,"WeakMap"],[14,73,5,47],[14,92,5,47,"r"],[14,93,5,47],[14,100,5,47,"WeakMap"],[14,107,5,47],[14,111,5,47,"t"],[14,112,5,47],[14,119,5,47,"WeakMap"],[14,126,5,47],[14,138,5,47,"_getRequireWildcardCache"],[14,162,5,47],[14,174,5,47,"_getRequireWildcardCache"],[14,199,5,47,"e"],[14,200,5,47],[14,211,5,47,"e"],[14,212,5,47],[14,215,5,47,"t"],[14,216,5,47],[14,219,5,47,"r"],[14,220,5,47],[14,225,5,47,"e"],[14,226,5,47],[15,2,5,47],[15,11,5,47,"_interopRequireWildcard"],[15,35,5,47,"e"],[15,36,5,47],[15,38,5,47,"r"],[15,39,5,47],[15,48,5,47,"r"],[15,49,5,47],[15,53,5,47,"e"],[15,54,5,47],[15,58,5,47,"e"],[15,59,5,47],[15,60,5,47,"__esModule"],[15,70,5,47],[15,79,5,47,"e"],[15,80,5,47],[15,95,5,47,"e"],[15,96,5,47],[15,119,5,47,"e"],[15,120,5,47],[15,145,5,47,"e"],[15,146,5,47],[15,157,5,47,"default"],[15,164,5,47],[15,166,5,47,"e"],[15,167,5,47],[15,175,5,47,"t"],[15,176,5,47],[15,179,5,47,"_getRequireWildcardCache"],[15,203,5,47],[15,204,5,47,"r"],[15,205,5,47],[15,212,5,47,"t"],[15,213,5,47],[15,217,5,47,"t"],[15,218,5,47],[15,219,5,47,"has"],[15,222,5,47],[15,223,5,47,"e"],[15,224,5,47],[15,234,5,47,"t"],[15,235,5,47],[15,236,5,47,"get"],[15,239,5,47],[15,240,5,47,"e"],[15,241,5,47],[15,248,5,47,"n"],[15,249,5,47],[15,254,5,47,"__proto__"],[15,263,5,47],[15,273,5,47,"a"],[15,274,5,47],[15,277,5,47,"Object"],[15,283,5,47],[15,284,5,47,"defineProperty"],[15,298,5,47],[15,302,5,47,"Object"],[15,308,5,47],[15,309,5,47,"getOwnPropertyDescriptor"],[15,333,5,47],[15,344,5,47,"u"],[15,345,5,47],[15,349,5,47,"e"],[15,350,5,47],[15,370,5,47,"u"],[15,371,5,47],[15,378,5,47,"hasOwnProperty"],[15,392,5,47],[15,393,5,47,"call"],[15,397,5,47],[15,398,5,47,"e"],[15,399,5,47],[15,401,5,47,"u"],[15,402,5,47],[15,411,5,47,"i"],[15,412,5,47],[15,415,5,47,"a"],[15,416,5,47],[15,419,5,47,"Object"],[15,425,5,47],[15,426,5,47,"getOwnPropertyDescriptor"],[15,450,5,47],[15,451,5,47,"e"],[15,452,5,47],[15,454,5,47,"u"],[15,455,5,47],[15,465,5,47,"i"],[15,466,5,47],[15,471,5,47,"i"],[15,472,5,47],[15,473,5,47,"get"],[15,476,5,47],[15,480,5,47,"i"],[15,481,5,47],[15,482,5,47,"set"],[15,485,5,47],[15,489,5,47,"Object"],[15,495,5,47],[15,496,5,47,"defineProperty"],[15,510,5,47],[15,511,5,47,"n"],[15,512,5,47],[15,514,5,47,"u"],[15,515,5,47],[15,517,5,47,"i"],[15,518,5,47],[15,522,5,47,"n"],[15,523,5,47],[15,524,5,47,"u"],[15,525,5,47],[15,529,5,47,"e"],[15,530,5,47],[15,531,5,47,"u"],[15,532,5,47],[15,544,5,47,"n"],[15,545,5,47],[15,546,5,47,"default"],[15,553,5,47],[15,556,5,47,"e"],[15,557,5,47],[15,559,5,47,"t"],[15,560,5,47],[15,564,5,47,"t"],[15,565,5,47],[15,566,5,47,"set"],[15,569,5,47],[15,570,5,47,"e"],[15,571,5,47],[15,573,5,47,"n"],[15,574,5,47],[15,577,5,47,"n"],[15,578,5,47],[16,2,5,47],[16,11,5,47,"_callSuper"],[16,22,5,47,"t"],[16,23,5,47],[16,25,5,47,"o"],[16,26,5,47],[16,28,5,47,"e"],[16,29,5,47],[16,40,5,47,"o"],[16,41,5,47],[16,48,5,47,"_getPrototypeOf2"],[16,64,5,47],[16,65,5,47,"default"],[16,72,5,47],[16,74,5,47,"o"],[16,75,5,47],[16,82,5,47,"_possibleConstructorReturn2"],[16,109,5,47],[16,110,5,47,"default"],[16,117,5,47],[16,119,5,47,"t"],[16,120,5,47],[16,122,5,47,"_isNativeReflectConstruct"],[16,147,5,47],[16,152,5,47,"Reflect"],[16,159,5,47],[16,160,5,47,"construct"],[16,169,5,47],[16,170,5,47,"o"],[16,171,5,47],[16,173,5,47,"e"],[16,174,5,47],[16,186,5,47,"_getPrototypeOf2"],[16,202,5,47],[16,203,5,47,"default"],[16,210,5,47],[16,212,5,47,"t"],[16,213,5,47],[16,215,5,47,"constructor"],[16,226,5,47],[16,230,5,47,"o"],[16,231,5,47],[16,232,5,47,"apply"],[16,237,5,47],[16,238,5,47,"t"],[16,239,5,47],[16,241,5,47,"e"],[16,242,5,47],[17,2,5,47],[17,11,5,47,"_isNativeReflectConstruct"],[17,37,5,47],[17,51,5,47,"t"],[17,52,5,47],[17,56,5,47,"Boolean"],[17,63,5,47],[17,64,5,47,"prototype"],[17,73,5,47],[17,74,5,47,"valueOf"],[17,81,5,47],[17,82,5,47,"call"],[17,86,5,47],[17,87,5,47,"Reflect"],[17,94,5,47],[17,95,5,47,"construct"],[17,104,5,47],[17,105,5,47,"Boolean"],[17,112,5,47],[17,145,5,47,"t"],[17,146,5,47],[17,159,5,47,"_isNativeReflectConstruct"],[17,184,5,47],[17,196,5,47,"_isNativeReflectConstruct"],[17,222,5,47],[17,235,5,47,"t"],[17,236,5,47],[18,2,9,0],[18,6,9,6,"ECPair"],[18,12,9,12],[18,15,9,15],[18,19,9,15,"ECPairFactory"],[18,49,9,15],[18,50,9,15,"ECPairFactory"],[18,73,9,28],[18,75,9,29,"ecc"],[18,93,9,32],[18,94,9,33],[20,2,11,0],[21,0,12,0],[22,0,13,0],[23,0,14,0],[24,0,15,0],[25,0,16,0],[26,2,17,0],[26,11,17,9,"pubkeyToP2shSegwitAddress"],[26,36,17,34,"pubkeyToP2shSegwitAddress"],[26,37,17,35,"pubkey"],[26,43,17,49],[26,45,17,67],[27,4,18,2],[27,8,18,2,"_bitcoin$payments$p2s"],[27,29,18,2],[27,32,18,22,"bitcoin"],[27,39,18,29],[27,40,18,30,"payments"],[27,48,18,38],[27,49,18,39,"p2sh"],[27,53,18,43],[27,54,18,44],[28,8,19,4,"redeem"],[28,14,19,10],[28,16,19,12,"bitcoin"],[28,23,19,19],[28,24,19,20,"payments"],[28,32,19,28],[28,33,19,29,"p2wpkh"],[28,39,19,35],[28,40,19,36],[29,10,19,38,"pubkey"],[29,16,19,44],[29,18,19,38,"pubkey"],[30,8,19,45],[30,9,19,46],[31,6,20,2],[31,7,20,3],[31,8,20,4],[32,6,18,10,"address"],[32,13,18,17],[32,16,18,17,"_bitcoin$payments$p2s"],[32,37,18,17],[32,38,18,10,"address"],[32,45,18,17],[33,4,21,2],[33,11,21,9,"address"],[33,18,21,16],[33,29,21,9,"address"],[33,36,21,16],[33,39,21,20],[33,44,21,25],[34,2,22,0],[35,2,22,1],[35,6,24,13,"SegwitP2SHWallet"],[35,22,24,29],[35,25,24,29,"exports"],[35,32,24,29],[35,33,24,29,"SegwitP2SHWallet"],[35,49,24,29],[35,75,24,29,"_LegacyWallet"],[35,88,24,29],[36,4,24,29],[36,13,24,29,"SegwitP2SHWallet"],[36,30,24,29],[37,6,24,29],[37,10,24,29,"_this"],[37,15,24,29],[38,6,24,29],[38,10,24,29,"_classCallCheck2"],[38,26,24,29],[38,27,24,29,"default"],[38,34,24,29],[38,42,24,29,"SegwitP2SHWallet"],[38,58,24,29],[39,6,24,29],[39,15,24,29,"_len"],[39,19,24,29],[39,22,24,29,"arguments"],[39,31,24,29],[39,32,24,29,"length"],[39,38,24,29],[39,40,24,29,"args"],[39,44,24,29],[39,51,24,29,"Array"],[39,56,24,29],[39,57,24,29,"_len"],[39,61,24,29],[39,64,24,29,"_key"],[39,68,24,29],[39,74,24,29,"_key"],[39,78,24,29],[39,81,24,29,"_len"],[39,85,24,29],[39,87,24,29,"_key"],[39,91,24,29],[40,8,24,29,"args"],[40,12,24,29],[40,13,24,29,"_key"],[40,17,24,29],[40,21,24,29,"arguments"],[40,30,24,29],[40,31,24,29,"_key"],[40,35,24,29],[41,6,24,29],[42,6,24,29,"_this"],[42,11,24,29],[42,14,24,29,"_callSuper"],[42,24,24,29],[42,31,24,29,"SegwitP2SHWallet"],[42,47,24,29],[42,52,24,29,"concat"],[42,58,24,29],[42,59,24,29,"args"],[42,63,24,29],[43,6,27,2],[44,6,27,2,"_this"],[44,11,27,2],[44,12,28,18,"type"],[44,16,28,22],[44,19,28,25,"SegwitP2SHWallet"],[44,35,28,41],[44,36,28,42,"type"],[44,40,28,46],[45,6,29,2],[46,6,29,2,"_this"],[46,11,29,2],[46,12,30,18,"typeReadable"],[46,24,30,30],[46,27,30,33,"SegwitP2SHWallet"],[46,43,30,49],[46,44,30,50,"typeReadable"],[46,56,30,62],[47,6,30,62,"_this"],[47,11,30,62],[47,12,31,18,"segwitType"],[47,22,31,28],[47,25,31,31],[47,39,31,45],[48,6,31,45],[48,13,31,45,"_this"],[48,18,31,45],[49,4,31,45],[50,4,31,45],[50,8,31,45,"_inherits2"],[50,18,31,45],[50,19,31,45,"default"],[50,26,31,45],[50,28,31,45,"SegwitP2SHWallet"],[50,44,31,45],[50,46,31,45,"_LegacyWallet"],[50,59,31,45],[51,4,31,45],[51,15,31,45,"_createClass2"],[51,28,31,45],[51,29,31,45,"default"],[51,36,31,45],[51,38,31,45,"SegwitP2SHWallet"],[51,54,31,45],[52,6,31,45,"key"],[52,9,31,45],[53,6,31,45,"value"],[53,11,31,45],[53,13,62,2],[53,22,62,2,"getAddress"],[53,32,62,12,"getAddress"],[53,33,62,12],[53,35,62,31],[54,8,63,4],[54,12,63,8],[54,16,63,12],[54,17,63,13,"_address"],[54,25,63,21],[54,27,63,23],[54,34,63,30],[54,38,63,34],[54,39,63,35,"_address"],[54,47,63,43],[55,8,64,4],[55,12,64,8,"address"],[55,19,64,15],[56,8,65,4],[56,12,65,8],[57,10,66,6],[57,14,66,12,"keyPair"],[57,21,66,19],[57,24,66,22,"ECPair"],[57,30,66,28],[57,31,66,29,"fromWIF"],[57,38,66,36],[57,39,66,37],[57,43,66,41],[57,44,66,42,"secret"],[57,50,66,48],[57,51,66,49],[58,10,67,6],[58,14,67,12,"pubKey"],[58,20,67,18],[58,23,67,21,"keyPair"],[58,30,67,28],[58,31,67,29,"publicKey"],[58,40,67,38],[59,10,68,6],[59,14,68,10],[59,15,68,11,"keyPair"],[59,22,68,18],[59,23,68,19,"compressed"],[59,33,68,29],[59,35,68,31],[60,12,69,8,"console"],[60,19,69,15],[60,20,69,16,"warn"],[60,24,69,20],[60,25,69,21],[60,74,69,70],[60,75,69,71],[61,12,70,8],[61,19,70,15],[61,24,70,20],[62,10,71,6],[63,10,72,6,"address"],[63,17,72,13],[63,20,72,16,"pubkeyToP2shSegwitAddress"],[63,45,72,41],[63,46,72,42,"Buffer"],[63,52,72,48],[63,53,72,49,"from"],[63,57,72,53],[63,58,72,54,"pubKey"],[63,64,72,60],[63,65,72,61],[63,66,72,62],[64,8,73,4],[64,9,73,5],[64,10,73,6],[64,17,73,13,"err"],[64,20,73,16],[64,22,73,18],[65,10,74,6],[65,17,74,13],[65,22,74,18],[66,8,75,4],[67,8,76,4],[67,12,76,8],[67,13,76,9,"_address"],[67,21,76,17],[67,24,76,20,"address"],[67,31,76,27],[68,8,78,4],[68,15,78,11],[68,19,78,15],[68,20,78,16,"_address"],[68,28,78,24],[69,6,79,2],[71,6,81,2],[72,0,82,0],[73,0,83,0],[74,0,84,0],[75,0,85,0],[76,0,86,0],[77,0,87,0],[78,0,88,0],[79,0,89,0],[80,0,90,0],[81,0,91,0],[82,4,81,2],[83,6,81,2,"key"],[83,9,81,2],[84,6,81,2,"value"],[84,11,81,2],[84,13,92,2],[84,22,92,2,"createTransaction"],[84,39,92,19,"createTransaction"],[84,40,93,4,"utxos"],[84,45,93,34],[84,47,94,4,"targets"],[84,54,94,31],[84,56,95,4,"feeRate"],[84,63,95,19],[84,65,96,4,"changeAddress"],[84,78,96,25],[84,80,97,4,"sequence"],[84,88,97,20],[84,90,100,29],[85,8,100,29],[85,12,98,4,"skipSigning"],[85,23,98,15],[85,26,98,15,"arguments"],[85,35,98,15],[85,36,98,15,"length"],[85,42,98,15],[85,50,98,15,"arguments"],[85,59,98,15],[85,67,98,15,"undefined"],[85,76,98,15],[85,79,98,15,"arguments"],[85,88,98,15],[85,94,98,18],[85,99,98,23],[86,8,98,23],[86,12,99,4,"masterFingerprint"],[86,29,99,29],[86,32,99,29,"arguments"],[86,41,99,29],[86,42,99,29,"length"],[86,48,99,29],[86,55,99,29,"arguments"],[86,64,99,29],[86,70,99,29,"undefined"],[86,79,99,29],[87,8,101,4],[87,12,101,8,"targets"],[87,19,101,15],[87,20,101,16,"length"],[87,26,101,22],[87,31,101,27],[87,32,101,28],[87,34,101,30],[87,40,101,36],[87,44,101,40,"Error"],[87,49,101,45],[87,50,101,46],[87,75,101,71],[87,76,101,72],[88,8,102,4],[88,12,102,4,"_this$coinselect"],[88,28,102,4],[88,31,102,37],[88,35,102,41],[88,36,102,42,"coinselect"],[88,46,102,52],[88,47,102,53,"utxos"],[88,52,102,58],[88,54,102,60,"targets"],[88,61,102,67],[88,63,102,69,"feeRate"],[88,70,102,76],[88,71,102,77],[89,10,102,12,"inputs"],[89,16,102,18],[89,19,102,18,"_this$coinselect"],[89,35,102,18],[89,36,102,12,"inputs"],[89,42,102,18],[90,10,102,20,"outputs"],[90,17,102,27],[90,20,102,27,"_this$coinselect"],[90,36,102,27],[90,37,102,20,"outputs"],[90,44,102,27],[91,10,102,29,"fee"],[91,13,102,32],[91,16,102,32,"_this$coinselect"],[91,32,102,32],[91,33,102,29,"fee"],[91,36,102,32],[92,8,103,4,"sequence"],[92,16,103,12],[92,19,103,15,"sequence"],[92,27,103,23],[92,31,103,27],[92,41,103,37],[92,42,103,38],[92,43,103,39],[93,8,104,4],[93,12,104,10,"psbt"],[93,16,104,14],[93,19,104,17],[93,23,104,21,"bitcoin"],[93,30,104,28],[93,31,104,29,"Psbt"],[93,35,104,33],[93,36,104,34],[93,37,104,35],[94,8,105,4],[94,12,105,8,"c"],[94,13,105,9],[94,16,105,12],[94,17,105,13],[95,8,106,4],[95,12,106,10,"values"],[95,18,106,40],[95,21,106,43],[95,22,106,44],[95,23,106,45],[96,8,107,4],[96,12,107,10,"keyPair"],[96,19,107,17],[96,22,107,20,"ECPair"],[96,28,107,26],[96,29,107,27,"fromWIF"],[96,36,107,34],[96,37,107,35],[96,41,107,39],[96,42,107,40,"secret"],[96,48,107,46],[96,49,107,47],[97,8,109,4,"inputs"],[97,14,109,10],[97,15,109,11,"forEach"],[97,22,109,18],[97,23,109,19],[97,33,109,19,"input"],[97,38,109,24],[97,40,109,28],[98,10,110,6,"values"],[98,16,110,12],[98,17,110,13,"c"],[98,18,110,14],[98,19,110,15],[98,22,110,18,"input"],[98,27,110,23],[98,28,110,24,"value"],[98,33,110,29],[99,10,111,6,"c"],[99,11,111,7],[99,13,111,9],[100,10,113,6],[100,14,113,12,"pubkey"],[100,20,113,18],[100,23,113,21,"keyPair"],[100,30,113,28],[100,31,113,29,"publicKey"],[100,40,113,38],[101,10,114,6],[101,14,114,12,"p2wpkh"],[101,20,114,18],[101,23,114,21,"bitcoin"],[101,30,114,28],[101,31,114,29,"payments"],[101,39,114,37],[101,40,114,38,"p2wpkh"],[101,46,114,44],[101,47,114,45],[102,12,114,47,"pubkey"],[102,18,114,53],[102,20,114,47,"pubkey"],[103,10,114,54],[103,11,114,55],[103,12,114,56],[104,10,115,6],[104,14,115,12,"p2sh"],[104,18,115,16],[104,21,115,19,"bitcoin"],[104,28,115,26],[104,29,115,27,"payments"],[104,37,115,35],[104,38,115,36,"p2sh"],[104,42,115,40],[104,43,115,41],[105,12,115,43,"redeem"],[105,18,115,49],[105,20,115,51,"p2wpkh"],[106,10,115,58],[106,11,115,59],[106,12,115,60],[107,10,116,6],[107,14,116,10],[107,15,116,11,"p2sh"],[107,19,116,15],[107,20,116,16,"output"],[107,26,116,22],[107,28,116,24],[108,12,117,8],[108,18,117,14],[108,22,117,18,"Error"],[108,27,117,23],[108,28,117,24],[108,87,117,83],[108,88,117,84],[109,10,118,6],[110,10,120,6,"psbt"],[110,14,120,10],[110,15,120,11,"addInput"],[110,23,120,19],[110,24,120,20],[111,12,121,8,"hash"],[111,16,121,12],[111,18,121,14,"input"],[111,23,121,19],[111,24,121,20,"txid"],[111,28,121,24],[112,12,122,8,"index"],[112,17,122,13],[112,19,122,15,"input"],[112,24,122,20],[112,25,122,21,"vout"],[112,29,122,25],[113,12,123,8,"sequence"],[113,20,123,16],[113,22,123,8,"sequence"],[113,30,123,16],[114,12,124,8,"witnessUtxo"],[114,23,124,19],[114,25,124,21],[115,14,125,10,"script"],[115,20,125,16],[115,22,125,18,"p2sh"],[115,26,125,22],[115,27,125,23,"output"],[115,33,125,29],[116,14,126,10,"value"],[116,19,126,15],[116,21,126,17,"BigInt"],[116,27,126,23],[116,28,126,24,"input"],[116,33,126,29],[116,34,126,30,"value"],[116,39,126,35],[117,12,127,8],[117,13,127,9],[118,12,128,8,"redeemScript"],[118,24,128,20],[118,26,128,22,"p2wpkh"],[118,32,128,28],[118,33,128,29,"output"],[119,10,129,6],[119,11,129,7],[119,12,129,8],[120,8,130,4],[120,9,130,5],[120,10,130,6],[121,8,132,4,"outputs"],[121,15,132,11],[121,16,132,12,"forEach"],[121,23,132,19],[121,24,132,20],[121,34,132,20,"output"],[121,40,132,26],[121,42,132,30],[122,10,133,6],[123,10,134,6],[123,14,134,10],[123,15,134,11,"output"],[123,21,134,17],[123,22,134,18,"address"],[123,29,134,25],[123,31,134,27],[124,12,135,8,"output"],[124,18,135,14],[124,19,135,15,"address"],[124,26,135,22],[124,29,135,25,"changeAddress"],[124,42,135,38],[125,10,136,6],[126,10,138,6],[126,14,138,12,"outputData"],[126,24,138,22],[126,27,138,25],[127,12,139,8,"address"],[127,19,139,15],[127,21,139,17,"output"],[127,27,139,23],[127,28,139,24,"address"],[127,35,139,31],[128,12,140,8,"value"],[128,17,140,13],[128,19,140,15,"BigInt"],[128,25,140,21],[128,26,140,22,"output"],[128,32,140,28],[128,33,140,29,"value"],[128,38,140,34],[129,10,141,6],[129,11,141,7],[130,10,143,6,"psbt"],[130,14,143,10],[130,15,143,11,"addOutput"],[130,24,143,20],[130,25,143,21,"outputData"],[130,35,143,31],[130,36,143,32],[131,8,144,4],[131,9,144,5],[131,10,144,6],[132,8,146,4],[132,12,146,8],[132,13,146,9,"skipSigning"],[132,24,146,20],[132,26,146,22],[133,10,147,6],[134,10,148,6],[134,15,148,11],[134,19,148,15,"cc"],[134,21,148,17],[134,24,148,20],[134,25,148,21],[134,27,148,23,"cc"],[134,29,148,25],[134,32,148,28,"c"],[134,33,148,29],[134,35,148,31,"cc"],[134,37,148,33],[134,39,148,35],[134,41,148,37],[135,12,149,8,"psbt"],[135,16,149,12],[135,17,149,13,"signInput"],[135,26,149,22],[135,27,149,23,"cc"],[135,29,149,25],[135,31,149,27,"keyPair"],[135,38,149,34],[135,39,149,35],[136,10,150,6],[137,8,151,4],[138,8,153,4],[138,12,153,8,"tx"],[138,14,153,10],[139,8,154,4],[139,12,154,8],[139,13,154,9,"skipSigning"],[139,24,154,20],[139,26,154,22],[140,10,155,6,"tx"],[140,12,155,8],[140,15,155,11,"psbt"],[140,19,155,15],[140,20,155,16,"finalizeAllInputs"],[140,37,155,33],[140,38,155,34],[140,39,155,35],[140,40,155,36,"extractTransaction"],[140,58,155,54],[140,59,155,55],[140,60,155,56],[141,8,156,4],[142,8,157,4],[142,15,157,11],[143,10,157,13,"tx"],[143,12,157,15],[143,14,157,13,"tx"],[143,16,157,15],[144,10,157,17,"inputs"],[144,16,157,23],[144,18,157,17,"inputs"],[144,24,157,23],[145,10,157,25,"outputs"],[145,17,157,32],[145,19,157,25,"outputs"],[145,26,157,32],[146,10,157,34,"fee"],[146,13,157,37],[146,15,157,34,"fee"],[146,18,157,37],[147,10,157,39,"psbt"],[147,14,157,43],[147,16,157,39,"psbt"],[148,8,157,44],[148,9,157,45],[149,6,158,2],[150,4,158,3],[151,6,158,3,"key"],[151,9,158,3],[152,6,158,3,"value"],[152,11,158,3],[152,13,160,2],[152,22,160,2,"allowSendMax"],[152,34,160,14,"allowSendMax"],[152,35,160,14],[152,37,160,17],[153,8,161,4],[153,15,161,11],[153,19,161,15],[154,6,162,2],[155,4,162,3],[156,6,162,3,"key"],[156,9,162,3],[157,6,162,3,"value"],[157,11,162,3],[157,13,164,2],[157,22,164,2,"isSegwit"],[157,30,164,10,"isSegwit"],[157,31,164,10],[157,33,164,13],[158,8,165,4],[158,15,165,11],[158,19,165,15],[159,6,166,2],[160,4,166,3],[161,6,166,3,"key"],[161,9,166,3],[162,6,166,3,"value"],[162,11,166,3],[162,13,168,2],[162,22,168,2,"allowSignVerifyMessage"],[162,44,168,24,"allowSignVerifyMessage"],[162,45,168,24],[162,47,168,27],[163,8,169,4],[163,15,169,11],[163,19,169,15],[164,6,170,2],[165,4,170,3],[166,6,170,3,"key"],[166,9,170,3],[167,6,170,3,"value"],[167,11,170,3],[167,13,33,2],[167,22,33,9,"witnessToAddress"],[167,38,33,25,"witnessToAddress"],[167,39,33,26,"witness"],[167,46,33,41],[167,48,33,59],[168,8,34,4],[168,12,34,8],[169,10,35,6],[169,14,35,12,"pubKey"],[169,20,35,18],[169,23,35,21,"Buffer"],[169,29,35,27],[169,30,35,28,"from"],[169,34,35,32],[169,35,35,33,"witness"],[169,42,35,40],[169,44,35,42],[169,49,35,47],[169,50,35,48],[170,10,36,6],[170,17,36,13,"pubkeyToP2shSegwitAddress"],[170,42,36,38],[170,43,36,39,"pubKey"],[170,49,36,45],[170,50,36,46],[171,8,37,4],[171,9,37,5],[171,10,37,6],[171,17,37,13,"_"],[171,18,37,14],[171,20,37,16],[172,10,38,6],[172,17,38,13],[172,22,38,18],[173,8,39,4],[174,6,40,2],[176,6,42,2],[177,0,43,0],[178,0,44,0],[179,0,45,0],[180,0,46,0],[181,0,47,0],[182,4,42,2],[183,6,42,2,"key"],[183,9,42,2],[184,6,42,2,"value"],[184,11,42,2],[184,13,48,2],[184,22,48,9,"scriptPubKeyToAddress"],[184,43,48,30,"scriptPubKeyToAddress"],[184,44,48,31,"scriptPubKey"],[184,56,48,51],[184,58,48,69],[185,8,49,4],[185,12,49,8],[186,10,49,8],[186,14,49,8,"_bitcoin$payments$p2s2"],[186,36,49,8],[187,10,50,6],[187,14,50,12,"scriptPubKey2"],[187,27,50,25],[187,30,50,28,"Buffer"],[187,36,50,34],[187,37,50,35,"from"],[187,41,50,39],[187,42,50,40,"scriptPubKey"],[187,54,50,52],[187,56,50,54],[187,61,50,59],[187,62,50,60],[188,10,51,6],[188,18,51,6,"_bitcoin$payments$p2s2"],[188,40,51,6],[188,43,52,8,"bitcoin"],[188,50,52,15],[188,51,52,16,"payments"],[188,59,52,24],[188,60,52,25,"p2sh"],[188,64,52,29],[188,65,52,30],[189,12,53,10,"output"],[189,18,53,16],[189,20,53,18,"scriptPubKey2"],[189,33,53,31],[190,12,54,10,"network"],[190,19,54,17],[190,21,54,19,"bitcoin"],[190,28,54,26],[190,29,54,27,"networks"],[190,37,54,35],[190,38,54,36,"bitcoin"],[191,10,55,8],[191,11,55,9],[191,12,55,10],[191,13,55,11,"address"],[191,20,55,18],[191,32,55,18,"_bitcoin$payments$p2s2"],[191,54,55,18],[191,57,55,22],[191,62,55,27],[192,8,57,4],[192,9,57,5],[192,10,57,6],[192,17,57,13,"_"],[192,18,57,14],[192,20,57,16],[193,10,58,6],[193,17,58,13],[193,22,58,18],[194,8,59,4],[195,6,60,2],[196,4,60,3],[197,2,60,3],[197,4,24,38,"LegacyWallet"],[197,34,24,38],[197,35,24,38,"LegacyWallet"],[197,66,24,50],[198,2,24,13,"SegwitP2SHWallet"],[198,18,24,29],[198,19,25,18,"type"],[198,23,25,22],[198,26,25,25],[198,38,25,37],[199,2,24,13,"SegwitP2SHWallet"],[199,18,24,29],[199,19,26,18,"typeReadable"],[199,31,26,30],[199,34,26,33],[199,49,26,48],[200,0,26,48],[200,3]],"functionMap":{"names":["<global>","pubkeyToP2shSegwitAddress","SegwitP2SHWallet","SegwitP2SHWallet.witnessToAddress","SegwitP2SHWallet.scriptPubKeyToAddress","SegwitP2SHWallet#getAddress","SegwitP2SHWallet#createTransaction","inputs.forEach$argument_0","outputs.forEach$argument_0","SegwitP2SHWallet#allowSendMax","SegwitP2SHWallet#isSegwit","SegwitP2SHWallet#allowSignVerifyMessage"],"mappings":"AAA;ACgB;CDK;OEE;ECS;GDO;EEQ;GFY;EGE;GHiB;EIa;mBCiB;KDqB;oBEE;KFY;GJc;EOE;GPE;EQE;GRE;ESE;GTE;CFC"}},"type":"js/module"}]}