{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":526,"column":0,"index":16146}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/toArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":526,"column":0,"index":16146}}],"key":"yxbT34yjmkVZuhOKwnPlwW2nTdA="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":526,"column":0,"index":16146}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":526,"column":0,"index":16146}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":526,"column":0,"index":16146}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"bs58check","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":28,"index":28}}],"key":"NLzwLXOhrhT51Y7aP9purlo+2cM="}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":29},"end":{"line":2,"column":37,"index":66}}],"key":"S+LTcEsr9DE4tXbLBAdDMJflQ0A="}},{"name":"wif","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":67},"end":{"line":3,"column":22,"index":89}}],"key":"ohsZFkOnCCl7gLF94giB9N42Rw8="}},{"name":"../../models/bitcoinUnits","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":91},"end":{"line":5,"column":63,"index":154}},{"start":{"line":5,"column":0,"index":91},"end":{"line":5,"column":63,"index":154}},{"start":{"line":5,"column":0,"index":91},"end":{"line":5,"column":63,"index":154}},{"start":{"line":5,"column":0,"index":91},"end":{"line":5,"column":63,"index":154}}],"key":"gpTkrKNRdMmZBAa7JJ10K+8DaTw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AbstractWallet = void 0;\n  var _toArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _bs58check = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"bs58check\"));\n  var _createHash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"create-hash\"));\n  var _wif = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"wif\"));\n  var AbstractWallet = exports.AbstractWallet = /*#__PURE__*/function () {\n    function AbstractWallet() {\n      (0, _classCallCheck2.default)(this, AbstractWallet);\n      // @ts-ignore: override\n      this.type = AbstractWallet.type;\n      // @ts-ignore: override\n      this.typeReadable = AbstractWallet.typeReadable;\n      this.label = '';\n      this.secret = ''; // private key or recovery phrase\n      this.balance = 0;\n      this.unconfirmed_balance = 0;\n      this._address = false; // cache\n      this._utxo = [];\n      this._lastTxFetch = 0;\n      this._lastBalanceFetch = 0;\n      this.preferredBalanceUnit = _$$_REQUIRE(_dependencyMap[8], \"../../models/bitcoinUnits\").BitcoinUnit.BTC;\n      this.chain = _$$_REQUIRE(_dependencyMap[8], \"../../models/bitcoinUnits\").Chain.ONCHAIN;\n      this.hideBalance = false;\n      this.userHasSavedExport = false;\n      this._hideTransactionsInWalletsList = false;\n      this._utxoMetadata = {};\n      this.use_with_hardware_wallet = false;\n      this.masterFingerprint = 0;\n    }\n\n    /**\n     * @returns {number} Timestamp (millisecsec) of when last transactions were fetched from the network\n     */\n    return (0, _createClass2.default)(AbstractWallet, [{\n      key: \"getLastTxFetch\",\n      value: function getLastTxFetch() {\n        return this._lastTxFetch;\n      }\n    }, {\n      key: \"getID\",\n      value: function getID() {\n        var _this$_derivationPath;\n        var thisWithPassphrase = this;\n        var passphrase = thisWithPassphrase.getPassphrase ? thisWithPassphrase.getPassphrase() : '';\n        var path = (_this$_derivationPath = this._derivationPath) != null ? _this$_derivationPath : '';\n        var string2hash = this.type + this.getSecret() + passphrase + path;\n        return (0, _createHash.default)('sha256').update(string2hash).digest().toString('hex');\n      }\n    }, {\n      key: \"getTransactions\",\n      value: function getTransactions() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"getUserHasSavedExport\",\n      value: function getUserHasSavedExport() {\n        return this.userHasSavedExport;\n      }\n    }, {\n      key: \"setUserHasSavedExport\",\n      value: function setUserHasSavedExport(value) {\n        this.userHasSavedExport = value;\n      }\n    }, {\n      key: \"getHideTransactionsInWalletsList\",\n      value: function getHideTransactionsInWalletsList() {\n        return this._hideTransactionsInWalletsList;\n      }\n    }, {\n      key: \"setHideTransactionsInWalletsList\",\n      value: function setHideTransactionsInWalletsList(value) {\n        this._hideTransactionsInWalletsList = value;\n      }\n\n      /**\n       *\n       * @returns {string}\n       */\n    }, {\n      key: \"getLabel\",\n      value: function getLabel() {\n        if (this.label.trim().length === 0) {\n          return 'Wallet';\n        }\n        return this.label;\n      }\n    }, {\n      key: \"getXpub\",\n      value: function getXpub() {\n        return this._address;\n      }\n\n      /**\n       *\n       * @returns {number} Available to spend amount, int, in sats\n       */\n    }, {\n      key: \"getBalance\",\n      value: function getBalance() {\n        return this.balance + (this.getUnconfirmedBalance() < 0 ? this.getUnconfirmedBalance() : 0);\n      }\n    }, {\n      key: \"getPreferredBalanceUnit\",\n      value: function getPreferredBalanceUnit() {\n        for (var value of Object.values(_$$_REQUIRE(_dependencyMap[8], \"../../models/bitcoinUnits\").BitcoinUnit)) {\n          if (value === this.preferredBalanceUnit) {\n            return this.preferredBalanceUnit;\n          }\n        }\n        return _$$_REQUIRE(_dependencyMap[8], \"../../models/bitcoinUnits\").BitcoinUnit.BTC;\n      }\n    }, {\n      key: \"allowOnchainAddress\",\n      value: function () {\n        var _allowOnchainAddress = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('allowOnchainAddress: Not implemented');\n        });\n        function allowOnchainAddress() {\n          return _allowOnchainAddress.apply(this, arguments);\n        }\n        return allowOnchainAddress;\n      }()\n    }, {\n      key: \"allowBIP47\",\n      value: function allowBIP47() {\n        return false;\n      }\n    }, {\n      key: \"switchBIP47\",\n      value: function switchBIP47(value) {\n        throw new Error('switchBIP47: not implemented');\n      }\n    }, {\n      key: \"allowReceive\",\n      value: function allowReceive() {\n        return true;\n      }\n    }, {\n      key: \"allowSend\",\n      value: function allowSend() {\n        return true;\n      }\n    }, {\n      key: \"allowSilentPaymentSend\",\n      value: function allowSilentPaymentSend() {\n        return false;\n      }\n    }, {\n      key: \"allowRBF\",\n      value: function allowRBF() {\n        return false;\n      }\n    }, {\n      key: \"allowPayJoin\",\n      value: function allowPayJoin() {\n        return false;\n      }\n    }, {\n      key: \"allowCosignPsbt\",\n      value: function allowCosignPsbt() {\n        return false;\n      }\n    }, {\n      key: \"allowSignVerifyMessage\",\n      value: function allowSignVerifyMessage() {\n        return false;\n      }\n    }, {\n      key: \"allowMasterFingerprint\",\n      value: function allowMasterFingerprint() {\n        return false;\n      }\n    }, {\n      key: \"allowXpub\",\n      value: function allowXpub() {\n        return false;\n      }\n    }, {\n      key: \"weOwnAddress\",\n      value: function weOwnAddress(address) {\n        throw Error('not implemented');\n      }\n    }, {\n      key: \"weOwnTransaction\",\n      value: function weOwnTransaction(txid) {\n        throw Error('not implemented');\n      }\n\n      /**\n       * Returns delta of unconfirmed balance. For example, if theres no\n       * unconfirmed balance its 0\n       *\n       * @return {number} Satoshis\n       */\n    }, {\n      key: \"getUnconfirmedBalance\",\n      value: function getUnconfirmedBalance() {\n        return this.unconfirmed_balance;\n      }\n    }, {\n      key: \"setLabel\",\n      value: function setLabel(newLabel) {\n        this.label = newLabel;\n        return this;\n      }\n    }, {\n      key: \"getSecret\",\n      value: function getSecret() {\n        return this.secret;\n      }\n    }, {\n      key: \"setSecret\",\n      value: function setSecret(newSecret) {\n        var origSecret = newSecret;\n\n        // is it minikey https://en.bitcoin.it/wiki/Mini_private_key_format\n        // Starts with S, is 22 length or larger, is base58\n        if (newSecret.startsWith('S') && newSecret.length >= 22 && /^[1-9A-HJ-NP-Za-km-z]+$/.test(newSecret)) {\n          // minikey + ? hashed with SHA256 starts with 0x00 byte\n          if ((0, _createHash.default)('sha256').update(`${newSecret}?`).digest('hex').startsWith('00')) {\n            // it is a valid minikey\n            newSecret = _wif.default.encode(0x80, (0, _createHash.default)('sha256').update(newSecret).digest(), false);\n          }\n        }\n        this.secret = newSecret.trim().replace('bitcoin:', '').replace('BITCOIN:', '');\n        if (this.secret.startsWith('BC1')) this.secret = this.secret.toLowerCase();\n\n        // [fingerprint/derivation]zpub\n        var re = /\\[([^\\]]+)\\](.*)/;\n        var m = this.secret.match(re);\n        if (m && m.length === 3) {\n          var _m$1$split = m[1].split('/'),\n            _m$1$split2 = (0, _toArray2.default)(_m$1$split),\n            hexFingerprint = _m$1$split2[0],\n            derivationPathArray = _m$1$split2.slice(1);\n          var derivationPath = `m/${derivationPathArray.join('/').replace(/h/g, \"'\")}`;\n          if (hexFingerprint.length === 8) {\n            hexFingerprint = Buffer.from(hexFingerprint, 'hex').reverse().toString('hex');\n            this.masterFingerprint = parseInt(hexFingerprint, 16);\n            this._derivationPath = derivationPath;\n          }\n          this.secret = m[2];\n          if (derivationPath.startsWith(\"m/84'/0'/\") && this.secret.toLowerCase().startsWith('xpub')) {\n            // need to convert xpub to zpub\n            this.secret = this._xpubToZpub(this.secret.split('/')[0]);\n          }\n          if (derivationPath.startsWith(\"m/49'/0'/\") && this.secret.toLowerCase().startsWith('xpub')) {\n            // need to convert xpub to ypub\n            this.secret = this._xpubToYpub(this.secret);\n          }\n        }\n        try {\n          var parsedSecret;\n          // regex might've matched invalid data. if so, parse newSecret.\n          if (this.secret.trim().length > 0) {\n            try {\n              parsedSecret = JSON.parse(this.secret);\n            } catch (e) {\n              parsedSecret = JSON.parse(newSecret);\n            }\n          } else {\n            parsedSecret = JSON.parse(newSecret);\n          }\n          if (parsedSecret && parsedSecret.keystore && parsedSecret.keystore.xpub) {\n            var masterFingerprint = 0;\n            if (parsedSecret.keystore.ckcc_xfp) {\n              // It is a ColdCard Hardware Wallet\n              masterFingerprint = Number(parsedSecret.keystore.ckcc_xfp);\n            } else if (parsedSecret.keystore.root_fingerprint) {\n              masterFingerprint = Number(parsedSecret.keystore.root_fingerprint);\n              if (!masterFingerprint) masterFingerprint = this.getMasterFingerprintFromHex(parsedSecret.keystore.root_fingerprint);\n            }\n            if (parsedSecret.keystore.label) {\n              this.setLabel(parsedSecret.keystore.label);\n            }\n            if (parsedSecret.keystore.derivation) {\n              this._derivationPath = parsedSecret.keystore.derivation;\n            }\n            this.secret = parsedSecret.keystore.xpub;\n            this.masterFingerprint = masterFingerprint;\n            if (parsedSecret.keystore.type === 'hardware') this.use_with_hardware_wallet = true;\n          }\n          // It is a Cobo Vault Hardware Wallet\n          if (parsedSecret && parsedSecret.ExtPubKey && parsedSecret.MasterFingerprint && parsedSecret.AccountKeyPath) {\n            this.secret = parsedSecret.ExtPubKey;\n            var mfp = Buffer.from(parsedSecret.MasterFingerprint, 'hex').reverse().toString('hex');\n            this.masterFingerprint = parseInt(mfp, 16);\n            this._derivationPath = parsedSecret.AccountKeyPath.startsWith('m/') ? parsedSecret.AccountKeyPath : `m/${parsedSecret.AccountKeyPath}`;\n            if (parsedSecret.CoboVaultFirmwareVersion) this.use_with_hardware_wallet = true;\n            return this;\n          }\n        } catch (_) {}\n        if (!this._derivationPath) {\n          if (this.secret.startsWith('xpub')) {\n            this._derivationPath = \"m/44'/0'/0'\"; // Assume default BIP44 path for legacy wallets\n          } else if (this.secret.startsWith('ypub')) {\n            this._derivationPath = \"m/49'/0'/0'\"; // Assume default BIP49 path for segwit wrapped wallets\n          } else if (this.secret.startsWith('zpub')) {\n            this._derivationPath = \"m/84'/0'/0'\"; // Assume default BIP84 for native segwit wallets\n          }\n        }\n\n        // is it output descriptor?\n        if (this.secret.startsWith('wpkh(') || this.secret.startsWith('pkh(') || this.secret.startsWith('sh(')) {\n          var xpubIndex = Math.max(this.secret.indexOf('xpub'), this.secret.indexOf('ypub'), this.secret.indexOf('zpub'));\n          var fpAndPath = this.secret.substring(this.secret.indexOf('(') + 1, xpubIndex);\n          var xpub = this.secret.substring(xpubIndex).replace(/\\(|\\)/, '');\n          var pathIndex = fpAndPath.indexOf('/');\n          var path = 'm' + fpAndPath.substring(pathIndex);\n          var fp = fpAndPath.substring(0, pathIndex);\n          this._derivationPath = path;\n          var _mfp = Buffer.from(fp, 'hex').reverse().toString('hex');\n          this.masterFingerprint = parseInt(_mfp, 16);\n          if (this.secret.startsWith('wpkh(')) {\n            this.secret = this._xpubToZpub(xpub);\n          } else {\n            // nop\n            this.secret = xpub;\n          }\n        }\n\n        // is it new-wasabi.json exported from coldcard?\n        try {\n          var json = JSON.parse(origSecret);\n          if (json.MasterFingerprint && json.ExtPubKey) {\n            // technically we should allow choosing which format user wants, BIP44 / BIP49 / BIP84, but meh...\n            this.secret = this._xpubToZpub(json.ExtPubKey);\n            var _mfp2 = Buffer.from(json.MasterFingerprint, 'hex').reverse().toString('hex');\n            this.masterFingerprint = parseInt(_mfp2, 16);\n            return this;\n          }\n        } catch (_) {}\n\n        // is it sparrow-export ?\n        try {\n          var _json = JSON.parse(origSecret);\n          if (_json.chain && _json.chain === 'BTC' && _json.xfp && _json.bip84) {\n            // technically we should allow choosing which format user wants, BIP44 / BIP49 / BIP84, but meh...\n            this.secret = _json.bip84._pub;\n            var _mfp3 = Buffer.from(_json.xfp, 'hex').reverse().toString('hex');\n            this.masterFingerprint = parseInt(_mfp3, 16);\n            this._derivationPath = _json.bip84.deriv;\n            return this;\n          }\n        } catch (_) {}\n        return this;\n      }\n    }, {\n      key: \"getLatestTransactionTime\",\n      value: function getLatestTransactionTime() {\n        return 0;\n      }\n    }, {\n      key: \"getLatestTransactionTimeEpoch\",\n      value: function getLatestTransactionTimeEpoch() {\n        if (this.getTransactions().length === 0) {\n          return 0;\n        }\n        var max = 0;\n        for (var tx of this.getTransactions()) {\n          var _tx$received;\n          max = Math.max(new Date((_tx$received = tx.received) != null ? _tx$received : 0).getTime(), max);\n        }\n        return max;\n      }\n\n      /**\n       * @deprecated\n       * TODO: be more precise on the type\n       */\n    }, {\n      key: \"createTx\",\n      value: function createTx() {\n        throw Error('not implemented');\n      }\n\n      /**\n       *\n       * @param utxos {Array.<{vout: Number, value: Number, txid: String, address: String}>} List of spendable utxos\n       * @param targets {Array.<{value: Number, address: String}>} Where coins are going. If theres only 1 target and that target has no value - this will send MAX to that address (respecting fee rate)\n       * @param feeRate {Number} satoshi per byte\n       * @param changeAddress {String} Excessive coins will go back to that address\n       * @param sequence {Number} Used in RBF\n       * @param skipSigning {boolean} Whether we should skip signing, use returned `psbt` in that case\n       * @param masterFingerprint {number} Decimal number of wallet's master fingerprint\n       * @returns {{outputs: Array, tx: Transaction, inputs: Array, fee: Number, psbt: Psbt}}\n       */\n    }, {\n      key: \"createTransaction\",\n      value: function createTransaction(utxos, targets, feeRate, changeAddress, sequence) {\n        var skipSigning = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var masterFingerprint = arguments.length > 6 ? arguments[6] : undefined;\n        throw Error('not implemented');\n      }\n    }, {\n      key: \"getAddress\",\n      value: function getAddress() {\n        throw Error('not implemented');\n      }\n    }, {\n      key: \"getAddressAsync\",\n      value: function getAddressAsync() {\n        var _this = this;\n        return new Promise(function (resolve) {\n          return resolve(_this.getAddress());\n        });\n      }\n    }, {\n      key: \"getChangeAddressAsync\",\n      value: function () {\n        var _getChangeAddressAsync = (0, _asyncToGenerator2.default)(function* () {\n          var _this2 = this;\n          return new Promise(function (resolve) {\n            return resolve(_this2.getAddress());\n          });\n        });\n        function getChangeAddressAsync() {\n          return _getChangeAddressAsync.apply(this, arguments);\n        }\n        return getChangeAddressAsync;\n      }()\n    }, {\n      key: \"useWithHardwareWalletEnabled\",\n      value: function useWithHardwareWalletEnabled() {\n        return false;\n      }\n    }, {\n      key: \"isBIP47Enabled\",\n      value: function isBIP47Enabled() {\n        return false;\n      }\n    }, {\n      key: \"wasEverUsed\",\n      value: function () {\n        var _wasEverUsed = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('Not implemented');\n        });\n        function wasEverUsed() {\n          return _wasEverUsed.apply(this, arguments);\n        }\n        return wasEverUsed;\n      }()\n      /**\n       * Returns _all_ external addresses in hierarchy (for HD wallets) or just address for single-address wallets\n       * _Not_ internal ones, as this method is supposed to be used for subscription of external notifications.\n       *\n       * @returns string[] Addresses\n       */\n    }, {\n      key: \"getAllExternalAddresses\",\n      value: function getAllExternalAddresses() {\n        return [];\n      }\n\n      /*\n       * Converts zpub to xpub\n       *\n       * @param {String} zpub\n       * @returns {String} xpub\n       */\n    }, {\n      key: \"_zpubToXpub\",\n      value: function _zpubToXpub(zpub) {\n        var data = _bs58check.default.decode(zpub);\n        data = data.slice(4);\n        data = Buffer.concat([Buffer.from('0488b21e', 'hex'), data]);\n        return _bs58check.default.encode(data);\n      }\n\n      /**\n       * Converts ypub to xpub\n       * @param {String} ypub - wallet ypub\n       * @returns {*}\n       */\n    }, {\n      key: \"_xpubToZpub\",\n      value: function _xpubToZpub(xpub) {\n        var data = _bs58check.default.decode(xpub);\n        data = data.slice(4);\n        data = Buffer.concat([Buffer.from('04b24746', 'hex'), data]);\n        return _bs58check.default.encode(data);\n      }\n    }, {\n      key: \"_xpubToYpub\",\n      value: function _xpubToYpub(xpub) {\n        var data = _bs58check.default.decode(xpub);\n        data = data.slice(4);\n        data = Buffer.concat([Buffer.from('049d7cb2', 'hex'), data]);\n        return _bs58check.default.encode(data);\n      }\n    }, {\n      key: \"prepareForSerialization\",\n      value: function prepareForSerialization() {}\n\n      /*\n       * Get metadata (frozen, memo) for a specific UTXO\n       *\n       * @param {String} txid - transaction id\n       * @param {number} vout - an index number of the output in transaction\n       */\n    }, {\n      key: \"getUTXOMetadata\",\n      value: function getUTXOMetadata(txid, vout) {\n        return this._utxoMetadata[`${txid}:${vout}`] || {};\n      }\n\n      /*\n       * Set metadata (frozen, memo) for a specific UTXO\n       *\n       * @param {String} txid - transaction id\n       * @param {number} vout - an index number of the output in transaction\n       * @param {{memo: String, frozen: Boolean}} opts - options to attach to UTXO\n       */\n    }, {\n      key: \"setUTXOMetadata\",\n      value: function setUTXOMetadata(txid, vout, opts) {\n        var meta = this._utxoMetadata[`${txid}:${vout}`] || {};\n        if ('memo' in opts) meta.memo = opts.memo;\n        if ('frozen' in opts) meta.frozen = opts.frozen;\n        this._utxoMetadata[`${txid}:${vout}`] = meta;\n      }\n    }, {\n      key: \"isSegwit\",\n      value: function isSegwit() {\n        return false;\n      }\n    }, {\n      key: \"getMasterFingerprintFromHex\",\n      value: function getMasterFingerprintFromHex(hexValue) {\n        if (hexValue.length < 8) hexValue = '0' + hexValue;\n        var b = Buffer.from(hexValue, 'hex');\n        if (b.length !== 4) throw new Error('invalid fingerprint hex');\n        hexValue = hexValue[6] + hexValue[7] + hexValue[4] + hexValue[5] + hexValue[2] + hexValue[3] + hexValue[0] + hexValue[1];\n        return parseInt(hexValue, 16);\n      }\n    }], [{\n      key: \"fromJson\",\n      value: function fromJson(obj) {\n        var obj2 = JSON.parse(obj);\n        var temp = new this();\n        for (var key2 of Object.keys(obj2)) {\n          // @ts-ignore This kind of magic is not allowed in typescript, we should try and be more specific\n          temp[key2] = obj2[key2];\n        }\n        return temp;\n      }\n    }, {\n      key: \"_ypubToXpub\",\n      value: function _ypubToXpub(ypub) {\n        var data = _bs58check.default.decode(ypub);\n        if (data.readUInt32BE() !== 0x049d7cb2) throw new Error('Not a valid ypub extended key!');\n        data = data.slice(4);\n        data = Buffer.concat([Buffer.from('0488b21e', 'hex'), data]);\n        return _bs58check.default.encode(data);\n      }\n    }]);\n  }();\n  AbstractWallet.type = 'abstract';\n  AbstractWallet.typeReadable = 'abstract';\n});","lineCount":568,"map":[[11,2,1,0],[11,6,1,0,"_bs58check"],[11,16,1,0],[11,19,1,0,"_interopRequireDefault"],[11,41,1,0],[11,42,1,0,"_$$_REQUIRE"],[11,53,1,0],[11,54,1,0,"_dependencyMap"],[11,68,1,0],[12,2,2,0],[12,6,2,0,"_createHash"],[12,17,2,0],[12,20,2,0,"_interopRequireDefault"],[12,42,2,0],[12,43,2,0,"_$$_REQUIRE"],[12,54,2,0],[12,55,2,0,"_dependencyMap"],[12,69,2,0],[13,2,3,0],[13,6,3,0,"_wif"],[13,10,3,0],[13,13,3,0,"_interopRequireDefault"],[13,35,3,0],[13,36,3,0,"_$$_REQUIRE"],[13,47,3,0],[13,48,3,0,"_dependencyMap"],[13,62,3,0],[14,2,3,22],[14,6,14,13,"AbstractWallet"],[14,20,14,27],[14,23,14,27,"exports"],[14,30,14,27],[14,31,14,27,"AbstractWallet"],[14,45,14,27],[15,4,52,2],[15,13,52,2,"AbstractWallet"],[15,28,52,2],[15,30,52,16],[16,6,52,16],[16,10,52,16,"_classCallCheck2"],[16,26,52,16],[16,27,52,16,"default"],[16,34,52,16],[16,42,52,16,"AbstractWallet"],[16,56,52,16],[17,6,17,2],[18,6,17,2],[18,11,18,18,"type"],[18,15,18,22],[18,18,18,25,"AbstractWallet"],[18,32,18,39],[18,33,18,40,"type"],[18,37,18,44],[19,6,19,2],[20,6,19,2],[20,11,20,18,"typeReadable"],[20,23,20,30],[20,26,20,33,"AbstractWallet"],[20,40,20,47],[20,41,20,48,"typeReadable"],[20,53,20,60],[21,6,53,4],[21,10,53,8],[21,11,53,9,"label"],[21,16,53,14],[21,19,53,17],[21,21,53,19],[22,6,54,4],[22,10,54,8],[22,11,54,9,"secret"],[22,17,54,15],[22,20,54,18],[22,22,54,20],[22,23,54,21],[22,24,54,22],[23,6,55,4],[23,10,55,8],[23,11,55,9,"balance"],[23,18,55,16],[23,21,55,19],[23,22,55,20],[24,6,56,4],[24,10,56,8],[24,11,56,9,"unconfirmed_balance"],[24,30,56,28],[24,33,56,31],[24,34,56,32],[25,6,57,4],[25,10,57,8],[25,11,57,9,"_address"],[25,19,57,17],[25,22,57,20],[25,27,57,25],[25,28,57,26],[25,29,57,27],[26,6,58,4],[26,10,58,8],[26,11,58,9,"_utxo"],[26,16,58,14],[26,19,58,17],[26,21,58,19],[27,6,59,4],[27,10,59,8],[27,11,59,9,"_lastTxFetch"],[27,23,59,21],[27,26,59,24],[27,27,59,25],[28,6,60,4],[28,10,60,8],[28,11,60,9,"_lastBalanceFetch"],[28,28,60,26],[28,31,60,29],[28,32,60,30],[29,6,61,4],[29,10,61,8],[29,11,61,9,"preferredBalanceUnit"],[29,31,61,29],[29,34,61,32,"BitcoinUnit"],[29,64,61,32],[29,65,61,32,"BitcoinUnit"],[29,105,61,43],[29,106,61,44,"BTC"],[29,109,61,47],[30,6,62,4],[30,10,62,8],[30,11,62,9,"chain"],[30,16,62,14],[30,19,62,17,"Chain"],[30,49,62,17],[30,50,62,17,"Chain"],[30,84,62,22],[30,85,62,23,"ONCHAIN"],[30,92,62,30],[31,6,63,4],[31,10,63,8],[31,11,63,9,"hideBalance"],[31,22,63,20],[31,25,63,23],[31,30,63,28],[32,6,64,4],[32,10,64,8],[32,11,64,9,"userHasSavedExport"],[32,29,64,27],[32,32,64,30],[32,37,64,35],[33,6,65,4],[33,10,65,8],[33,11,65,9,"_hideTransactionsInWalletsList"],[33,41,65,39],[33,44,65,42],[33,49,65,47],[34,6,66,4],[34,10,66,8],[34,11,66,9,"_utxoMetadata"],[34,24,66,22],[34,27,66,25],[34,28,66,26],[34,29,66,27],[35,6,67,4],[35,10,67,8],[35,11,67,9,"use_with_hardware_wallet"],[35,35,67,33],[35,38,67,36],[35,43,67,41],[36,6,68,4],[36,10,68,8],[36,11,68,9,"masterFingerprint"],[36,28,68,26],[36,31,68,29],[36,32,68,30],[37,4,69,2],[39,4,71,2],[40,0,72,0],[41,0,73,0],[42,4,71,2],[42,15,71,2,"_createClass2"],[42,28,71,2],[42,29,71,2,"default"],[42,36,71,2],[42,38,71,2,"AbstractWallet"],[42,52,71,2],[43,6,71,2,"key"],[43,9,71,2],[44,6,71,2,"value"],[44,11,71,2],[44,13,74,2],[44,22,74,2,"getLastTxFetch"],[44,36,74,16,"getLastTxFetch"],[44,37,74,16],[44,39,74,27],[45,8,75,4],[45,15,75,11],[45,19,75,15],[45,20,75,16,"_lastTxFetch"],[45,32,75,28],[46,6,76,2],[47,4,76,3],[48,6,76,3,"key"],[48,9,76,3],[49,6,76,3,"value"],[49,11,76,3],[49,13,78,2],[49,22,78,2,"getID"],[49,27,78,7,"getID"],[49,28,78,7],[49,30,78,18],[50,8,78,18],[50,12,78,18,"_this$_derivationPath"],[50,33,78,18],[51,8,79,4],[51,12,79,10,"thisWithPassphrase"],[51,30,79,28],[51,33,79,31],[51,37,79,70],[52,8,80,4],[52,12,80,10,"passphrase"],[52,22,80,20],[52,25,80,23,"thisWithPassphrase"],[52,43,80,41],[52,44,80,42,"getPassphrase"],[52,57,80,55],[52,60,80,58,"thisWithPassphrase"],[52,78,80,76],[52,79,80,77,"getPassphrase"],[52,92,80,90],[52,93,80,91],[52,94,80,92],[52,97,80,95],[52,99,80,97],[53,8,81,4],[53,12,81,10,"path"],[53,16,81,14],[53,20,81,14,"_this$_derivationPath"],[53,41,81,14],[53,44,81,17],[53,48,81,21],[53,49,81,22,"_derivationPath"],[53,64,81,37],[53,76,81,37,"_this$_derivationPath"],[53,97,81,37],[53,100,81,41],[53,102,81,43],[54,8,82,4],[54,12,82,10,"string2hash"],[54,23,82,21],[54,26,82,24],[54,30,82,28],[54,31,82,29,"type"],[54,35,82,33],[54,38,82,36],[54,42,82,40],[54,43,82,41,"getSecret"],[54,52,82,50],[54,53,82,51],[54,54,82,52],[54,57,82,55,"passphrase"],[54,67,82,65],[54,70,82,68,"path"],[54,74,82,72],[55,8,83,4],[55,15,83,11],[55,19,83,11,"createHash"],[55,38,83,21],[55,40,83,22],[55,48,83,30],[55,49,83,31],[55,50,83,32,"update"],[55,56,83,38],[55,57,83,39,"string2hash"],[55,68,83,50],[55,69,83,51],[55,70,83,52,"digest"],[55,76,83,58],[55,77,83,59],[55,78,83,60],[55,79,83,61,"toString"],[55,87,83,69],[55,88,83,70],[55,93,83,75],[55,94,83,76],[56,6,84,2],[57,4,84,3],[58,6,84,3,"key"],[58,9,84,3],[59,6,84,3,"value"],[59,11,84,3],[59,13,86,2],[59,22,86,2,"getTransactions"],[59,37,86,17,"getTransactions"],[59,38,86,17],[59,40,86,35],[60,8,87,4],[60,14,87,10],[60,18,87,14,"Error"],[60,23,87,19],[60,24,87,20],[60,41,87,37],[60,42,87,38],[61,6,88,2],[62,4,88,3],[63,6,88,3,"key"],[63,9,88,3],[64,6,88,3,"value"],[64,11,88,3],[64,13,90,2],[64,22,90,2,"getUserHasSavedExport"],[64,43,90,23,"getUserHasSavedExport"],[64,44,90,23],[64,46,90,35],[65,8,91,4],[65,15,91,11],[65,19,91,15],[65,20,91,16,"userHasSavedExport"],[65,38,91,34],[66,6,92,2],[67,4,92,3],[68,6,92,3,"key"],[68,9,92,3],[69,6,92,3,"value"],[69,11,92,3],[69,13,94,2],[69,22,94,2,"setUserHasSavedExport"],[69,43,94,23,"setUserHasSavedExport"],[69,44,94,24,"value"],[69,49,94,38],[69,51,94,46],[70,8,95,4],[70,12,95,8],[70,13,95,9,"userHasSavedExport"],[70,31,95,27],[70,34,95,30,"value"],[70,39,95,35],[71,6,96,2],[72,4,96,3],[73,6,96,3,"key"],[73,9,96,3],[74,6,96,3,"value"],[74,11,96,3],[74,13,98,2],[74,22,98,2,"getHideTransactionsInWalletsList"],[74,54,98,34,"getHideTransactionsInWalletsList"],[74,55,98,34],[74,57,98,46],[75,8,99,4],[75,15,99,11],[75,19,99,15],[75,20,99,16,"_hideTransactionsInWalletsList"],[75,50,99,46],[76,6,100,2],[77,4,100,3],[78,6,100,3,"key"],[78,9,100,3],[79,6,100,3,"value"],[79,11,100,3],[79,13,102,2],[79,22,102,2,"setHideTransactionsInWalletsList"],[79,54,102,34,"setHideTransactionsInWalletsList"],[79,55,102,35,"value"],[79,60,102,49],[79,62,102,57],[80,8,103,4],[80,12,103,8],[80,13,103,9,"_hideTransactionsInWalletsList"],[80,43,103,39],[80,46,103,42,"value"],[80,51,103,47],[81,6,104,2],[83,6,106,2],[84,0,107,0],[85,0,108,0],[86,0,109,0],[87,4,106,2],[88,6,106,2,"key"],[88,9,106,2],[89,6,106,2,"value"],[89,11,106,2],[89,13,110,2],[89,22,110,2,"getLabel"],[89,30,110,10,"getLabel"],[89,31,110,10],[89,33,110,21],[90,8,111,4],[90,12,111,8],[90,16,111,12],[90,17,111,13,"label"],[90,22,111,18],[90,23,111,19,"trim"],[90,27,111,23],[90,28,111,24],[90,29,111,25],[90,30,111,26,"length"],[90,36,111,32],[90,41,111,37],[90,42,111,38],[90,44,111,40],[91,10,112,6],[91,17,112,13],[91,25,112,21],[92,8,113,4],[93,8,114,4],[93,15,114,11],[93,19,114,15],[93,20,114,16,"label"],[93,25,114,21],[94,6,115,2],[95,4,115,3],[96,6,115,3,"key"],[96,9,115,3],[97,6,115,3,"value"],[97,11,115,3],[97,13,117,2],[97,22,117,2,"getXpub"],[97,29,117,9,"getXpub"],[97,30,117,9],[97,32,117,28],[98,8,118,4],[98,15,118,11],[98,19,118,15],[98,20,118,16,"_address"],[98,28,118,24],[99,6,119,2],[101,6,121,2],[102,0,122,0],[103,0,123,0],[104,0,124,0],[105,4,121,2],[106,6,121,2,"key"],[106,9,121,2],[107,6,121,2,"value"],[107,11,121,2],[107,13,125,2],[107,22,125,2,"getBalance"],[107,32,125,12,"getBalance"],[107,33,125,12],[107,35,125,23],[108,8,126,4],[108,15,126,11],[108,19,126,15],[108,20,126,16,"balance"],[108,27,126,23],[108,31,126,27],[108,35,126,31],[108,36,126,32,"getUnconfirmedBalance"],[108,57,126,53],[108,58,126,54],[108,59,126,55],[108,62,126,58],[108,63,126,59],[108,66,126,62],[108,70,126,66],[108,71,126,67,"getUnconfirmedBalance"],[108,92,126,88],[108,93,126,89],[108,94,126,90],[108,97,126,93],[108,98,126,94],[108,99,126,95],[109,6,127,2],[110,4,127,3],[111,6,127,3,"key"],[111,9,127,3],[112,6,127,3,"value"],[112,11,127,3],[112,13,129,2],[112,22,129,2,"getPreferredBalanceUnit"],[112,45,129,25,"getPreferredBalanceUnit"],[112,46,129,25],[112,48,129,41],[113,8,130,4],[113,13,130,9],[113,17,130,15,"value"],[113,22,130,20],[113,26,130,24,"Object"],[113,32,130,30],[113,33,130,31,"values"],[113,39,130,37],[113,40,130,38,"BitcoinUnit"],[113,70,130,38],[113,71,130,38,"BitcoinUnit"],[113,111,130,49],[113,112,130,50],[113,114,130,52],[114,10,131,6],[114,14,131,10,"value"],[114,19,131,15],[114,24,131,20],[114,28,131,24],[114,29,131,25,"preferredBalanceUnit"],[114,49,131,45],[114,51,131,47],[115,12,132,8],[115,19,132,15],[115,23,132,19],[115,24,132,20,"preferredBalanceUnit"],[115,44,132,40],[116,10,133,6],[117,8,134,4],[118,8,135,4],[118,15,135,11,"BitcoinUnit"],[118,45,135,11],[118,46,135,11,"BitcoinUnit"],[118,86,135,22],[118,87,135,23,"BTC"],[118,90,135,26],[119,6,136,2],[120,4,136,3],[121,6,136,3,"key"],[121,9,136,3],[122,6,136,3,"value"],[122,11,136,3],[123,8,136,3],[123,12,136,3,"_allowOnchainAddress"],[123,32,136,3],[123,39,136,3,"_asyncToGenerator2"],[123,57,136,3],[123,58,136,3,"default"],[123,65,136,3],[123,67,138,2],[123,80,138,48],[124,10,139,4],[124,16,139,10],[124,20,139,14,"Error"],[124,25,139,19],[124,26,139,20],[124,64,139,58],[124,65,139,59],[125,8,140,2],[125,9,140,3],[126,8,140,3],[126,17,138,8,"allowOnchainAddress"],[126,36,138,27,"allowOnchainAddress"],[126,37,138,27],[127,10,138,27],[127,17,138,27,"_allowOnchainAddress"],[127,37,138,27],[127,38,138,27,"apply"],[127,43,138,27],[127,50,138,27,"arguments"],[127,59,138,27],[128,8,138,27],[129,8,138,27],[129,15,138,8,"allowOnchainAddress"],[129,34,138,27],[130,6,138,27],[131,4,138,27],[132,6,138,27,"key"],[132,9,138,27],[133,6,138,27,"value"],[133,11,138,27],[133,13,142,2],[133,22,142,2,"allowBIP47"],[133,32,142,12,"allowBIP47"],[133,33,142,12],[133,35,142,24],[134,8,143,4],[134,15,143,11],[134,20,143,16],[135,6,144,2],[136,4,144,3],[137,6,144,3,"key"],[137,9,144,3],[138,6,144,3,"value"],[138,11,144,3],[138,13,146,2],[138,22,146,2,"switchBIP47"],[138,33,146,13,"switchBIP47"],[138,34,146,14,"value"],[138,39,146,28],[138,41,146,36],[139,8,147,4],[139,14,147,10],[139,18,147,14,"Error"],[139,23,147,19],[139,24,147,20],[139,54,147,50],[139,55,147,51],[140,6,148,2],[141,4,148,3],[142,6,148,3,"key"],[142,9,148,3],[143,6,148,3,"value"],[143,11,148,3],[143,13,150,2],[143,22,150,2,"allowReceive"],[143,34,150,14,"allowReceive"],[143,35,150,14],[143,37,150,26],[144,8,151,4],[144,15,151,11],[144,19,151,15],[145,6,152,2],[146,4,152,3],[147,6,152,3,"key"],[147,9,152,3],[148,6,152,3,"value"],[148,11,152,3],[148,13,154,2],[148,22,154,2,"allowSend"],[148,31,154,11,"allowSend"],[148,32,154,11],[148,34,154,23],[149,8,155,4],[149,15,155,11],[149,19,155,15],[150,6,156,2],[151,4,156,3],[152,6,156,3,"key"],[152,9,156,3],[153,6,156,3,"value"],[153,11,156,3],[153,13,158,2],[153,22,158,2,"allowSilentPaymentSend"],[153,44,158,24,"allowSilentPaymentSend"],[153,45,158,24],[153,47,158,36],[154,8,159,4],[154,15,159,11],[154,20,159,16],[155,6,160,2],[156,4,160,3],[157,6,160,3,"key"],[157,9,160,3],[158,6,160,3,"value"],[158,11,160,3],[158,13,162,2],[158,22,162,2,"allowRBF"],[158,30,162,10,"allowRBF"],[158,31,162,10],[158,33,162,22],[159,8,163,4],[159,15,163,11],[159,20,163,16],[160,6,164,2],[161,4,164,3],[162,6,164,3,"key"],[162,9,164,3],[163,6,164,3,"value"],[163,11,164,3],[163,13,166,2],[163,22,166,2,"allowPayJoin"],[163,34,166,14,"allowPayJoin"],[163,35,166,14],[163,37,166,26],[164,8,167,4],[164,15,167,11],[164,20,167,16],[165,6,168,2],[166,4,168,3],[167,6,168,3,"key"],[167,9,168,3],[168,6,168,3,"value"],[168,11,168,3],[168,13,170,2],[168,22,170,2,"allowCosignPsbt"],[168,37,170,17,"allowCosignPsbt"],[168,38,170,17],[168,40,170,29],[169,8,171,4],[169,15,171,11],[169,20,171,16],[170,6,172,2],[171,4,172,3],[172,6,172,3,"key"],[172,9,172,3],[173,6,172,3,"value"],[173,11,172,3],[173,13,174,2],[173,22,174,2,"allowSignVerifyMessage"],[173,44,174,24,"allowSignVerifyMessage"],[173,45,174,24],[173,47,174,36],[174,8,175,4],[174,15,175,11],[174,20,175,16],[175,6,176,2],[176,4,176,3],[177,6,176,3,"key"],[177,9,176,3],[178,6,176,3,"value"],[178,11,176,3],[178,13,178,2],[178,22,178,2,"allowMasterFingerprint"],[178,44,178,24,"allowMasterFingerprint"],[178,45,178,24],[178,47,178,36],[179,8,179,4],[179,15,179,11],[179,20,179,16],[180,6,180,2],[181,4,180,3],[182,6,180,3,"key"],[182,9,180,3],[183,6,180,3,"value"],[183,11,180,3],[183,13,182,2],[183,22,182,2,"allowXpub"],[183,31,182,11,"allowXpub"],[183,32,182,11],[183,34,182,23],[184,8,183,4],[184,15,183,11],[184,20,183,16],[185,6,184,2],[186,4,184,3],[187,6,184,3,"key"],[187,9,184,3],[188,6,184,3,"value"],[188,11,184,3],[188,13,186,2],[188,22,186,2,"weOwnAddress"],[188,34,186,14,"weOwnAddress"],[188,35,186,15,"address"],[188,42,186,30],[188,44,186,41],[189,8,187,4],[189,14,187,10,"Error"],[189,19,187,15],[189,20,187,16],[189,37,187,33],[189,38,187,34],[190,6,188,2],[191,4,188,3],[192,6,188,3,"key"],[192,9,188,3],[193,6,188,3,"value"],[193,11,188,3],[193,13,190,2],[193,22,190,2,"weOwnTransaction"],[193,38,190,18,"weOwnTransaction"],[193,39,190,19,"txid"],[193,43,190,31],[193,45,190,42],[194,8,191,4],[194,14,191,10,"Error"],[194,19,191,15],[194,20,191,16],[194,37,191,33],[194,38,191,34],[195,6,192,2],[197,6,194,2],[198,0,195,0],[199,0,196,0],[200,0,197,0],[201,0,198,0],[202,0,199,0],[203,4,194,2],[204,6,194,2,"key"],[204,9,194,2],[205,6,194,2,"value"],[205,11,194,2],[205,13,200,2],[205,22,200,2,"getUnconfirmedBalance"],[205,43,200,23,"getUnconfirmedBalance"],[205,44,200,23],[205,46,200,34],[206,8,201,4],[206,15,201,11],[206,19,201,15],[206,20,201,16,"unconfirmed_balance"],[206,39,201,35],[207,6,202,2],[208,4,202,3],[209,6,202,3,"key"],[209,9,202,3],[210,6,202,3,"value"],[210,11,202,3],[210,13,204,2],[210,22,204,2,"setLabel"],[210,30,204,10,"setLabel"],[210,31,204,11,"newLabel"],[210,39,204,27],[210,41,204,35],[211,8,205,4],[211,12,205,8],[211,13,205,9,"label"],[211,18,205,14],[211,21,205,17,"newLabel"],[211,29,205,25],[212,8,206,4],[212,15,206,11],[212,19,206,15],[213,6,207,2],[214,4,207,3],[215,6,207,3,"key"],[215,9,207,3],[216,6,207,3,"value"],[216,11,207,3],[216,13,209,2],[216,22,209,2,"getSecret"],[216,31,209,11,"getSecret"],[216,32,209,11],[216,34,209,22],[217,8,210,4],[217,15,210,11],[217,19,210,15],[217,20,210,16,"secret"],[217,26,210,22],[218,6,211,2],[219,4,211,3],[220,6,211,3,"key"],[220,9,211,3],[221,6,211,3,"value"],[221,11,211,3],[221,13,213,2],[221,22,213,2,"setSecret"],[221,31,213,11,"setSecret"],[221,32,213,12,"newSecret"],[221,41,213,29],[221,43,213,37],[222,8,214,4],[222,12,214,10,"origSecret"],[222,22,214,20],[222,25,214,23,"newSecret"],[222,34,214,32],[224,8,216,4],[225,8,217,4],[226,8,218,4],[226,12,218,8,"newSecret"],[226,21,218,17],[226,22,218,18,"startsWith"],[226,32,218,28],[226,33,218,29],[226,36,218,32],[226,37,218,33],[226,41,218,37,"newSecret"],[226,50,218,46],[226,51,218,47,"length"],[226,57,218,53],[226,61,218,57],[226,63,218,59],[226,67,218,63],[226,92,218,88],[226,93,218,89,"test"],[226,97,218,93],[226,98,218,94,"newSecret"],[226,107,218,103],[226,108,218,104],[226,110,218,106],[227,10,219,6],[228,10,220,6],[228,14,220,10],[228,18,220,10,"createHash"],[228,37,220,20],[228,39,220,21],[228,47,220,29],[228,48,220,30],[228,49,220,31,"update"],[228,55,220,37],[228,56,220,38],[228,59,220,41,"newSecret"],[228,68,220,50],[228,71,220,53],[228,72,220,54],[228,73,220,55,"digest"],[228,79,220,61],[228,80,220,62],[228,85,220,67],[228,86,220,68],[228,87,220,69,"startsWith"],[228,97,220,79],[228,98,220,80],[228,102,220,84],[228,103,220,85],[228,105,220,87],[229,12,221,8],[230,12,222,8,"newSecret"],[230,21,222,17],[230,24,222,20,"wif"],[230,36,222,23],[230,37,222,24,"encode"],[230,43,222,30],[230,44,222,31],[230,48,222,35],[230,50,222,37],[230,54,222,37,"createHash"],[230,73,222,47],[230,75,222,48],[230,83,222,56],[230,84,222,57],[230,85,222,58,"update"],[230,91,222,64],[230,92,222,65,"newSecret"],[230,101,222,74],[230,102,222,75],[230,103,222,76,"digest"],[230,109,222,82],[230,110,222,83],[230,111,222,84],[230,113,222,86],[230,118,222,91],[230,119,222,92],[231,10,223,6],[232,8,224,4],[233,8,226,4],[233,12,226,8],[233,13,226,9,"secret"],[233,19,226,15],[233,22,226,18,"newSecret"],[233,31,226,27],[233,32,226,28,"trim"],[233,36,226,32],[233,37,226,33],[233,38,226,34],[233,39,226,35,"replace"],[233,46,226,42],[233,47,226,43],[233,57,226,53],[233,59,226,55],[233,61,226,57],[233,62,226,58],[233,63,226,59,"replace"],[233,70,226,66],[233,71,226,67],[233,81,226,77],[233,83,226,79],[233,85,226,81],[233,86,226,82],[234,8,228,4],[234,12,228,8],[234,16,228,12],[234,17,228,13,"secret"],[234,23,228,19],[234,24,228,20,"startsWith"],[234,34,228,30],[234,35,228,31],[234,40,228,36],[234,41,228,37],[234,43,228,39],[234,47,228,43],[234,48,228,44,"secret"],[234,54,228,50],[234,57,228,53],[234,61,228,57],[234,62,228,58,"secret"],[234,68,228,64],[234,69,228,65,"toLowerCase"],[234,80,228,76],[234,81,228,77],[234,82,228,78],[236,8,230,4],[237,8,231,4],[237,12,231,10,"re"],[237,14,231,12],[237,17,231,15],[237,35,231,33],[238,8,232,4],[238,12,232,10,"m"],[238,13,232,11],[238,16,232,14],[238,20,232,18],[238,21,232,19,"secret"],[238,27,232,25],[238,28,232,26,"match"],[238,33,232,31],[238,34,232,32,"re"],[238,36,232,34],[238,37,232,35],[239,8,233,4],[239,12,233,8,"m"],[239,13,233,9],[239,17,233,13,"m"],[239,18,233,14],[239,19,233,15,"length"],[239,25,233,21],[239,30,233,26],[239,31,233,27],[239,33,233,29],[240,10,234,6],[240,14,234,6,"_m$1$split"],[240,24,234,6],[240,27,234,53,"m"],[240,28,234,54],[240,29,234,55],[240,30,234,56],[240,31,234,57],[240,32,234,58,"split"],[240,37,234,63],[240,38,234,64],[240,41,234,67],[240,42,234,68],[241,12,234,68,"_m$1$split2"],[241,23,234,68],[241,30,234,68,"_toArray2"],[241,39,234,68],[241,40,234,68,"default"],[241,47,234,68],[241,49,234,68,"_m$1$split"],[241,59,234,68],[242,12,234,11,"hexFingerprint"],[242,26,234,25],[242,29,234,25,"_m$1$split2"],[242,40,234,25],[243,12,234,30,"derivationPathArray"],[243,31,234,49],[243,34,234,49,"_m$1$split2"],[243,45,234,49],[243,46,234,49,"slice"],[243,51,234,49],[244,10,235,6],[244,14,235,12,"derivationPath"],[244,28,235,26],[244,31,235,29],[244,36,235,34,"derivationPathArray"],[244,55,235,53],[244,56,235,54,"join"],[244,60,235,58],[244,61,235,59],[244,64,235,62],[244,65,235,63],[244,66,235,64,"replace"],[244,73,235,71],[244,74,235,72],[244,78,235,76],[244,80,235,78],[244,83,235,81],[244,84,235,82],[244,86,235,84],[245,10,236,6],[245,14,236,10,"hexFingerprint"],[245,28,236,24],[245,29,236,25,"length"],[245,35,236,31],[245,40,236,36],[245,41,236,37],[245,43,236,39],[246,12,237,8,"hexFingerprint"],[246,26,237,22],[246,29,237,25,"Buffer"],[246,35,237,31],[246,36,237,32,"from"],[246,40,237,36],[246,41,237,37,"hexFingerprint"],[246,55,237,51],[246,57,237,53],[246,62,237,58],[246,63,237,59],[246,64,237,60,"reverse"],[246,71,237,67],[246,72,237,68],[246,73,237,69],[246,74,237,70,"toString"],[246,82,237,78],[246,83,237,79],[246,88,237,84],[246,89,237,85],[247,12,238,8],[247,16,238,12],[247,17,238,13,"masterFingerprint"],[247,34,238,30],[247,37,238,33,"parseInt"],[247,45,238,41],[247,46,238,42,"hexFingerprint"],[247,60,238,56],[247,62,238,58],[247,64,238,60],[247,65,238,61],[248,12,239,8],[248,16,239,12],[248,17,239,13,"_derivationPath"],[248,32,239,28],[248,35,239,31,"derivationPath"],[248,49,239,45],[249,10,240,6],[250,10,241,6],[250,14,241,10],[250,15,241,11,"secret"],[250,21,241,17],[250,24,241,20,"m"],[250,25,241,21],[250,26,241,22],[250,27,241,23],[250,28,241,24],[251,10,243,6],[251,14,243,10,"derivationPath"],[251,28,243,24],[251,29,243,25,"startsWith"],[251,39,243,35],[251,40,243,36],[251,51,243,47],[251,52,243,48],[251,56,243,52],[251,60,243,56],[251,61,243,57,"secret"],[251,67,243,63],[251,68,243,64,"toLowerCase"],[251,79,243,75],[251,80,243,76],[251,81,243,77],[251,82,243,78,"startsWith"],[251,92,243,88],[251,93,243,89],[251,99,243,95],[251,100,243,96],[251,102,243,98],[252,12,244,8],[253,12,245,8],[253,16,245,12],[253,17,245,13,"secret"],[253,23,245,19],[253,26,245,22],[253,30,245,26],[253,31,245,27,"_xpubToZpub"],[253,42,245,38],[253,43,245,39],[253,47,245,43],[253,48,245,44,"secret"],[253,54,245,50],[253,55,245,51,"split"],[253,60,245,56],[253,61,245,57],[253,64,245,60],[253,65,245,61],[253,66,245,62],[253,67,245,63],[253,68,245,64],[253,69,245,65],[254,10,246,6],[255,10,248,6],[255,14,248,10,"derivationPath"],[255,28,248,24],[255,29,248,25,"startsWith"],[255,39,248,35],[255,40,248,36],[255,51,248,47],[255,52,248,48],[255,56,248,52],[255,60,248,56],[255,61,248,57,"secret"],[255,67,248,63],[255,68,248,64,"toLowerCase"],[255,79,248,75],[255,80,248,76],[255,81,248,77],[255,82,248,78,"startsWith"],[255,92,248,88],[255,93,248,89],[255,99,248,95],[255,100,248,96],[255,102,248,98],[256,12,249,8],[257,12,250,8],[257,16,250,12],[257,17,250,13,"secret"],[257,23,250,19],[257,26,250,22],[257,30,250,26],[257,31,250,27,"_xpubToYpub"],[257,42,250,38],[257,43,250,39],[257,47,250,43],[257,48,250,44,"secret"],[257,54,250,50],[257,55,250,51],[258,10,251,6],[259,8,252,4],[260,8,254,4],[260,12,254,8],[261,10,255,6],[261,14,255,10,"parsedSecret"],[261,26,255,22],[262,10,256,6],[263,10,257,6],[263,14,257,10],[263,18,257,14],[263,19,257,15,"secret"],[263,25,257,21],[263,26,257,22,"trim"],[263,30,257,26],[263,31,257,27],[263,32,257,28],[263,33,257,29,"length"],[263,39,257,35],[263,42,257,38],[263,43,257,39],[263,45,257,41],[264,12,258,8],[264,16,258,12],[265,14,259,10,"parsedSecret"],[265,26,259,22],[265,29,259,25,"JSON"],[265,33,259,29],[265,34,259,30,"parse"],[265,39,259,35],[265,40,259,36],[265,44,259,40],[265,45,259,41,"secret"],[265,51,259,47],[265,52,259,48],[266,12,260,8],[266,13,260,9],[266,14,260,10],[266,21,260,17,"e"],[266,22,260,18],[266,24,260,20],[267,14,261,10,"parsedSecret"],[267,26,261,22],[267,29,261,25,"JSON"],[267,33,261,29],[267,34,261,30,"parse"],[267,39,261,35],[267,40,261,36,"newSecret"],[267,49,261,45],[267,50,261,46],[268,12,262,8],[269,10,263,6],[269,11,263,7],[269,17,263,13],[270,12,264,8,"parsedSecret"],[270,24,264,20],[270,27,264,23,"JSON"],[270,31,264,27],[270,32,264,28,"parse"],[270,37,264,33],[270,38,264,34,"newSecret"],[270,47,264,43],[270,48,264,44],[271,10,265,6],[272,10,266,6],[272,14,266,10,"parsedSecret"],[272,26,266,22],[272,30,266,26,"parsedSecret"],[272,42,266,38],[272,43,266,39,"keystore"],[272,51,266,47],[272,55,266,51,"parsedSecret"],[272,67,266,63],[272,68,266,64,"keystore"],[272,76,266,72],[272,77,266,73,"xpub"],[272,81,266,77],[272,83,266,79],[273,12,267,8],[273,16,267,12,"masterFingerprint"],[273,33,267,37],[273,36,267,40],[273,37,267,41],[274,12,268,8],[274,16,268,12,"parsedSecret"],[274,28,268,24],[274,29,268,25,"keystore"],[274,37,268,33],[274,38,268,34,"ckcc_xfp"],[274,46,268,42],[274,48,268,44],[275,14,269,10],[276,14,270,10,"masterFingerprint"],[276,31,270,27],[276,34,270,30,"Number"],[276,40,270,36],[276,41,270,37,"parsedSecret"],[276,53,270,49],[276,54,270,50,"keystore"],[276,62,270,58],[276,63,270,59,"ckcc_xfp"],[276,71,270,67],[276,72,270,68],[277,12,271,8],[277,13,271,9],[277,19,271,15],[277,23,271,19,"parsedSecret"],[277,35,271,31],[277,36,271,32,"keystore"],[277,44,271,40],[277,45,271,41,"root_fingerprint"],[277,61,271,57],[277,63,271,59],[278,14,272,10,"masterFingerprint"],[278,31,272,27],[278,34,272,30,"Number"],[278,40,272,36],[278,41,272,37,"parsedSecret"],[278,53,272,49],[278,54,272,50,"keystore"],[278,62,272,58],[278,63,272,59,"root_fingerprint"],[278,79,272,75],[278,80,272,76],[279,14,273,10],[279,18,273,14],[279,19,273,15,"masterFingerprint"],[279,36,273,32],[279,38,273,34,"masterFingerprint"],[279,55,273,51],[279,58,273,54],[279,62,273,58],[279,63,273,59,"getMasterFingerprintFromHex"],[279,90,273,86],[279,91,273,87,"parsedSecret"],[279,103,273,99],[279,104,273,100,"keystore"],[279,112,273,108],[279,113,273,109,"root_fingerprint"],[279,129,273,125],[279,130,273,126],[280,12,274,8],[281,12,275,8],[281,16,275,12,"parsedSecret"],[281,28,275,24],[281,29,275,25,"keystore"],[281,37,275,33],[281,38,275,34,"label"],[281,43,275,39],[281,45,275,41],[282,14,276,10],[282,18,276,14],[282,19,276,15,"setLabel"],[282,27,276,23],[282,28,276,24,"parsedSecret"],[282,40,276,36],[282,41,276,37,"keystore"],[282,49,276,45],[282,50,276,46,"label"],[282,55,276,51],[282,56,276,52],[283,12,277,8],[284,12,278,8],[284,16,278,12,"parsedSecret"],[284,28,278,24],[284,29,278,25,"keystore"],[284,37,278,33],[284,38,278,34,"derivation"],[284,48,278,44],[284,50,278,46],[285,14,279,10],[285,18,279,14],[285,19,279,15,"_derivationPath"],[285,34,279,30],[285,37,279,33,"parsedSecret"],[285,49,279,45],[285,50,279,46,"keystore"],[285,58,279,54],[285,59,279,55,"derivation"],[285,69,279,65],[286,12,280,8],[287,12,281,8],[287,16,281,12],[287,17,281,13,"secret"],[287,23,281,19],[287,26,281,22,"parsedSecret"],[287,38,281,34],[287,39,281,35,"keystore"],[287,47,281,43],[287,48,281,44,"xpub"],[287,52,281,48],[288,12,282,8],[288,16,282,12],[288,17,282,13,"masterFingerprint"],[288,34,282,30],[288,37,282,33,"masterFingerprint"],[288,54,282,50],[289,12,284,8],[289,16,284,12,"parsedSecret"],[289,28,284,24],[289,29,284,25,"keystore"],[289,37,284,33],[289,38,284,34,"type"],[289,42,284,38],[289,47,284,43],[289,57,284,53],[289,59,284,55],[289,63,284,59],[289,64,284,60,"use_with_hardware_wallet"],[289,88,284,84],[289,91,284,87],[289,95,284,91],[290,10,285,6],[291,10,286,6],[292,10,287,6],[292,14,287,10,"parsedSecret"],[292,26,287,22],[292,30,287,26,"parsedSecret"],[292,42,287,38],[292,43,287,39,"ExtPubKey"],[292,52,287,48],[292,56,287,52,"parsedSecret"],[292,68,287,64],[292,69,287,65,"MasterFingerprint"],[292,86,287,82],[292,90,287,86,"parsedSecret"],[292,102,287,98],[292,103,287,99,"AccountKeyPath"],[292,117,287,113],[292,119,287,115],[293,12,288,8],[293,16,288,12],[293,17,288,13,"secret"],[293,23,288,19],[293,26,288,22,"parsedSecret"],[293,38,288,34],[293,39,288,35,"ExtPubKey"],[293,48,288,44],[294,12,289,8],[294,16,289,14,"mfp"],[294,19,289,17],[294,22,289,20,"Buffer"],[294,28,289,26],[294,29,289,27,"from"],[294,33,289,31],[294,34,289,32,"parsedSecret"],[294,46,289,44],[294,47,289,45,"MasterFingerprint"],[294,64,289,62],[294,66,289,64],[294,71,289,69],[294,72,289,70],[294,73,289,71,"reverse"],[294,80,289,78],[294,81,289,79],[294,82,289,80],[294,83,289,81,"toString"],[294,91,289,89],[294,92,289,90],[294,97,289,95],[294,98,289,96],[295,12,290,8],[295,16,290,12],[295,17,290,13,"masterFingerprint"],[295,34,290,30],[295,37,290,33,"parseInt"],[295,45,290,41],[295,46,290,42,"mfp"],[295,49,290,45],[295,51,290,47],[295,53,290,49],[295,54,290,50],[296,12,291,8],[296,16,291,12],[296,17,291,13,"_derivationPath"],[296,32,291,28],[296,35,291,31,"parsedSecret"],[296,47,291,43],[296,48,291,44,"AccountKeyPath"],[296,62,291,58],[296,63,291,59,"startsWith"],[296,73,291,69],[296,74,291,70],[296,78,291,74],[296,79,291,75],[296,82,292,12,"parsedSecret"],[296,94,292,24],[296,95,292,25,"AccountKeyPath"],[296,109,292,39],[296,112,293,12],[296,117,293,17,"parsedSecret"],[296,129,293,29],[296,130,293,30,"AccountKeyPath"],[296,144,293,44],[296,146,293,46],[297,12,294,8],[297,16,294,12,"parsedSecret"],[297,28,294,24],[297,29,294,25,"CoboVaultFirmwareVersion"],[297,53,294,49],[297,55,294,51],[297,59,294,55],[297,60,294,56,"use_with_hardware_wallet"],[297,84,294,80],[297,87,294,83],[297,91,294,87],[298,12,295,8],[298,19,295,15],[298,23,295,19],[299,10,296,6],[300,8,297,4],[300,9,297,5],[300,10,297,6],[300,17,297,13,"_"],[300,18,297,14],[300,20,297,16],[300,21,297,17],[301,8,299,4],[301,12,299,8],[301,13,299,9],[301,17,299,13],[301,18,299,14,"_derivationPath"],[301,33,299,29],[301,35,299,31],[302,10,300,6],[302,14,300,10],[302,18,300,14],[302,19,300,15,"secret"],[302,25,300,21],[302,26,300,22,"startsWith"],[302,36,300,32],[302,37,300,33],[302,43,300,39],[302,44,300,40],[302,46,300,42],[303,12,301,8],[303,16,301,12],[303,17,301,13,"_derivationPath"],[303,32,301,28],[303,35,301,31],[303,48,301,44],[303,49,301,45],[303,50,301,46],[304,10,302,6],[304,11,302,7],[304,17,302,13],[304,21,302,17],[304,25,302,21],[304,26,302,22,"secret"],[304,32,302,28],[304,33,302,29,"startsWith"],[304,43,302,39],[304,44,302,40],[304,50,302,46],[304,51,302,47],[304,53,302,49],[305,12,303,8],[305,16,303,12],[305,17,303,13,"_derivationPath"],[305,32,303,28],[305,35,303,31],[305,48,303,44],[305,49,303,45],[305,50,303,46],[306,10,304,6],[306,11,304,7],[306,17,304,13],[306,21,304,17],[306,25,304,21],[306,26,304,22,"secret"],[306,32,304,28],[306,33,304,29,"startsWith"],[306,43,304,39],[306,44,304,40],[306,50,304,46],[306,51,304,47],[306,53,304,49],[307,12,305,8],[307,16,305,12],[307,17,305,13,"_derivationPath"],[307,32,305,28],[307,35,305,31],[307,48,305,44],[307,49,305,45],[307,50,305,46],[308,10,306,6],[309,8,307,4],[311,8,309,4],[312,8,310,4],[312,12,310,8],[312,16,310,12],[312,17,310,13,"secret"],[312,23,310,19],[312,24,310,20,"startsWith"],[312,34,310,30],[312,35,310,31],[312,42,310,38],[312,43,310,39],[312,47,310,43],[312,51,310,47],[312,52,310,48,"secret"],[312,58,310,54],[312,59,310,55,"startsWith"],[312,69,310,65],[312,70,310,66],[312,76,310,72],[312,77,310,73],[312,81,310,77],[312,85,310,81],[312,86,310,82,"secret"],[312,92,310,88],[312,93,310,89,"startsWith"],[312,103,310,99],[312,104,310,100],[312,109,310,105],[312,110,310,106],[312,112,310,108],[313,10,311,6],[313,14,311,12,"xpubIndex"],[313,23,311,21],[313,26,311,24,"Math"],[313,30,311,28],[313,31,311,29,"max"],[313,34,311,32],[313,35,311,33],[313,39,311,37],[313,40,311,38,"secret"],[313,46,311,44],[313,47,311,45,"indexOf"],[313,54,311,52],[313,55,311,53],[313,61,311,59],[313,62,311,60],[313,64,311,62],[313,68,311,66],[313,69,311,67,"secret"],[313,75,311,73],[313,76,311,74,"indexOf"],[313,83,311,81],[313,84,311,82],[313,90,311,88],[313,91,311,89],[313,93,311,91],[313,97,311,95],[313,98,311,96,"secret"],[313,104,311,102],[313,105,311,103,"indexOf"],[313,112,311,110],[313,113,311,111],[313,119,311,117],[313,120,311,118],[313,121,311,119],[314,10,312,6],[314,14,312,12,"fpAndPath"],[314,23,312,21],[314,26,312,24],[314,30,312,28],[314,31,312,29,"secret"],[314,37,312,35],[314,38,312,36,"substring"],[314,47,312,45],[314,48,312,46],[314,52,312,50],[314,53,312,51,"secret"],[314,59,312,57],[314,60,312,58,"indexOf"],[314,67,312,65],[314,68,312,66],[314,71,312,69],[314,72,312,70],[314,75,312,73],[314,76,312,74],[314,78,312,76,"xpubIndex"],[314,87,312,85],[314,88,312,86],[315,10,313,6],[315,14,313,12,"xpub"],[315,18,313,16],[315,21,313,19],[315,25,313,23],[315,26,313,24,"secret"],[315,32,313,30],[315,33,313,31,"substring"],[315,42,313,40],[315,43,313,41,"xpubIndex"],[315,52,313,50],[315,53,313,51],[315,54,313,52,"replace"],[315,61,313,59],[315,62,313,60],[315,69,313,67],[315,71,313,69],[315,73,313,71],[315,74,313,72],[316,10,314,6],[316,14,314,12,"pathIndex"],[316,23,314,21],[316,26,314,24,"fpAndPath"],[316,35,314,33],[316,36,314,34,"indexOf"],[316,43,314,41],[316,44,314,42],[316,47,314,45],[316,48,314,46],[317,10,315,6],[317,14,315,12,"path"],[317,18,315,16],[317,21,315,19],[317,24,315,22],[317,27,315,25,"fpAndPath"],[317,36,315,34],[317,37,315,35,"substring"],[317,46,315,44],[317,47,315,45,"pathIndex"],[317,56,315,54],[317,57,315,55],[318,10,316,6],[318,14,316,12,"fp"],[318,16,316,14],[318,19,316,17,"fpAndPath"],[318,28,316,26],[318,29,316,27,"substring"],[318,38,316,36],[318,39,316,37],[318,40,316,38],[318,42,316,40,"pathIndex"],[318,51,316,49],[318,52,316,50],[319,10,318,6],[319,14,318,10],[319,15,318,11,"_derivationPath"],[319,30,318,26],[319,33,318,29,"path"],[319,37,318,33],[320,10,319,6],[320,14,319,12,"mfp"],[320,18,319,15],[320,21,319,18,"Buffer"],[320,27,319,24],[320,28,319,25,"from"],[320,32,319,29],[320,33,319,30,"fp"],[320,35,319,32],[320,37,319,34],[320,42,319,39],[320,43,319,40],[320,44,319,41,"reverse"],[320,51,319,48],[320,52,319,49],[320,53,319,50],[320,54,319,51,"toString"],[320,62,319,59],[320,63,319,60],[320,68,319,65],[320,69,319,66],[321,10,320,6],[321,14,320,10],[321,15,320,11,"masterFingerprint"],[321,32,320,28],[321,35,320,31,"parseInt"],[321,43,320,39],[321,44,320,40,"mfp"],[321,48,320,43],[321,50,320,45],[321,52,320,47],[321,53,320,48],[322,10,322,6],[322,14,322,10],[322,18,322,14],[322,19,322,15,"secret"],[322,25,322,21],[322,26,322,22,"startsWith"],[322,36,322,32],[322,37,322,33],[322,44,322,40],[322,45,322,41],[322,47,322,43],[323,12,323,8],[323,16,323,12],[323,17,323,13,"secret"],[323,23,323,19],[323,26,323,22],[323,30,323,26],[323,31,323,27,"_xpubToZpub"],[323,42,323,38],[323,43,323,39,"xpub"],[323,47,323,43],[323,48,323,44],[324,10,324,6],[324,11,324,7],[324,17,324,13],[325,12,325,8],[326,12,326,8],[326,16,326,12],[326,17,326,13,"secret"],[326,23,326,19],[326,26,326,22,"xpub"],[326,30,326,26],[327,10,327,6],[328,8,328,4],[330,8,330,4],[331,8,331,4],[331,12,331,8],[332,10,332,6],[332,14,332,12,"json"],[332,18,332,16],[332,21,332,19,"JSON"],[332,25,332,23],[332,26,332,24,"parse"],[332,31,332,29],[332,32,332,30,"origSecret"],[332,42,332,40],[332,43,332,41],[333,10,333,6],[333,14,333,10,"json"],[333,18,333,14],[333,19,333,15,"MasterFingerprint"],[333,36,333,32],[333,40,333,36,"json"],[333,44,333,40],[333,45,333,41,"ExtPubKey"],[333,54,333,50],[333,56,333,52],[334,12,334,8],[335,12,335,8],[335,16,335,12],[335,17,335,13,"secret"],[335,23,335,19],[335,26,335,22],[335,30,335,26],[335,31,335,27,"_xpubToZpub"],[335,42,335,38],[335,43,335,39,"json"],[335,47,335,43],[335,48,335,44,"ExtPubKey"],[335,57,335,53],[335,58,335,54],[336,12,336,8],[336,16,336,14,"mfp"],[336,21,336,17],[336,24,336,20,"Buffer"],[336,30,336,26],[336,31,336,27,"from"],[336,35,336,31],[336,36,336,32,"json"],[336,40,336,36],[336,41,336,37,"MasterFingerprint"],[336,58,336,54],[336,60,336,56],[336,65,336,61],[336,66,336,62],[336,67,336,63,"reverse"],[336,74,336,70],[336,75,336,71],[336,76,336,72],[336,77,336,73,"toString"],[336,85,336,81],[336,86,336,82],[336,91,336,87],[336,92,336,88],[337,12,337,8],[337,16,337,12],[337,17,337,13,"masterFingerprint"],[337,34,337,30],[337,37,337,33,"parseInt"],[337,45,337,41],[337,46,337,42,"mfp"],[337,51,337,45],[337,53,337,47],[337,55,337,49],[337,56,337,50],[338,12,338,8],[338,19,338,15],[338,23,338,19],[339,10,339,6],[340,8,340,4],[340,9,340,5],[340,10,340,6],[340,17,340,13,"_"],[340,18,340,14],[340,20,340,16],[340,21,340,17],[342,8,342,4],[343,8,343,4],[343,12,343,8],[344,10,344,6],[344,14,344,12,"json"],[344,19,344,16],[344,22,344,19,"JSON"],[344,26,344,23],[344,27,344,24,"parse"],[344,32,344,29],[344,33,344,30,"origSecret"],[344,43,344,40],[344,44,344,41],[345,10,345,6],[345,14,345,10,"json"],[345,19,345,14],[345,20,345,15,"chain"],[345,25,345,20],[345,29,345,24,"json"],[345,34,345,28],[345,35,345,29,"chain"],[345,40,345,34],[345,45,345,39],[345,50,345,44],[345,54,345,48,"json"],[345,59,345,52],[345,60,345,53,"xfp"],[345,63,345,56],[345,67,345,60,"json"],[345,72,345,64],[345,73,345,65,"bip84"],[345,78,345,70],[345,80,345,72],[346,12,346,8],[347,12,347,8],[347,16,347,12],[347,17,347,13,"secret"],[347,23,347,19],[347,26,347,22,"json"],[347,31,347,26],[347,32,347,27,"bip84"],[347,37,347,32],[347,38,347,33,"_pub"],[347,42,347,37],[348,12,348,8],[348,16,348,14,"mfp"],[348,21,348,17],[348,24,348,20,"Buffer"],[348,30,348,26],[348,31,348,27,"from"],[348,35,348,31],[348,36,348,32,"json"],[348,41,348,36],[348,42,348,37,"xfp"],[348,45,348,40],[348,47,348,42],[348,52,348,47],[348,53,348,48],[348,54,348,49,"reverse"],[348,61,348,56],[348,62,348,57],[348,63,348,58],[348,64,348,59,"toString"],[348,72,348,67],[348,73,348,68],[348,78,348,73],[348,79,348,74],[349,12,349,8],[349,16,349,12],[349,17,349,13,"masterFingerprint"],[349,34,349,30],[349,37,349,33,"parseInt"],[349,45,349,41],[349,46,349,42,"mfp"],[349,51,349,45],[349,53,349,47],[349,55,349,49],[349,56,349,50],[350,12,350,8],[350,16,350,12],[350,17,350,13,"_derivationPath"],[350,32,350,28],[350,35,350,31,"json"],[350,40,350,35],[350,41,350,36,"bip84"],[350,46,350,41],[350,47,350,42,"deriv"],[350,52,350,47],[351,12,351,8],[351,19,351,15],[351,23,351,19],[352,10,352,6],[353,8,353,4],[353,9,353,5],[353,10,353,6],[353,17,353,13,"_"],[353,18,353,14],[353,20,353,16],[353,21,353,17],[354,8,355,4],[354,15,355,11],[354,19,355,15],[355,6,356,2],[356,4,356,3],[357,6,356,3,"key"],[357,9,356,3],[358,6,356,3,"value"],[358,11,356,3],[358,13,358,2],[358,22,358,2,"getLatestTransactionTime"],[358,46,358,26,"getLatestTransactionTime"],[358,47,358,26],[358,49,358,41],[359,8,359,4],[359,15,359,11],[359,16,359,12],[360,6,360,2],[361,4,360,3],[362,6,360,3,"key"],[362,9,360,3],[363,6,360,3,"value"],[363,11,360,3],[363,13,362,2],[363,22,362,2,"getLatestTransactionTimeEpoch"],[363,51,362,31,"getLatestTransactionTimeEpoch"],[363,52,362,31],[363,54,362,42],[364,8,363,4],[364,12,363,8],[364,16,363,12],[364,17,363,13,"getTransactions"],[364,32,363,28],[364,33,363,29],[364,34,363,30],[364,35,363,31,"length"],[364,41,363,37],[364,46,363,42],[364,47,363,43],[364,49,363,45],[365,10,364,6],[365,17,364,13],[365,18,364,14],[366,8,365,4],[367,8,366,4],[367,12,366,8,"max"],[367,15,366,11],[367,18,366,14],[367,19,366,15],[368,8,367,4],[368,13,367,9],[368,17,367,15,"tx"],[368,19,367,17],[368,23,367,21],[368,27,367,25],[368,28,367,26,"getTransactions"],[368,43,367,41],[368,44,367,42],[368,45,367,43],[368,47,367,45],[369,10,367,45],[369,14,367,45,"_tx$received"],[369,26,367,45],[370,10,368,6,"max"],[370,13,368,9],[370,16,368,12,"Math"],[370,20,368,16],[370,21,368,17,"max"],[370,24,368,20],[370,25,368,21],[370,29,368,25,"Date"],[370,33,368,29],[370,35,368,29,"_tx$received"],[370,47,368,29],[370,50,368,30,"tx"],[370,52,368,32],[370,53,368,33,"received"],[370,61,368,41],[370,73,368,41,"_tx$received"],[370,85,368,41],[370,88,368,45],[370,89,368,46],[370,90,368,47],[370,91,368,48,"getTime"],[370,98,368,55],[370,99,368,56],[370,100,368,57],[370,102,368,59,"max"],[370,105,368,62],[370,106,368,63],[371,8,369,4],[372,8,370,4],[372,15,370,11,"max"],[372,18,370,14],[373,6,371,2],[375,6,373,2],[376,0,374,0],[377,0,375,0],[378,0,376,0],[379,4,373,2],[380,6,373,2,"key"],[380,9,373,2],[381,6,373,2,"value"],[381,11,373,2],[381,13,378,2],[381,22,378,2,"createTx"],[381,30,378,10,"createTx"],[381,31,378,10],[381,33,378,18],[382,8,379,4],[382,14,379,10,"Error"],[382,19,379,15],[382,20,379,16],[382,37,379,33],[382,38,379,34],[383,6,380,2],[385,6,382,2],[386,0,383,0],[387,0,384,0],[388,0,385,0],[389,0,386,0],[390,0,387,0],[391,0,388,0],[392,0,389,0],[393,0,390,0],[394,0,391,0],[395,0,392,0],[396,4,382,2],[397,6,382,2,"key"],[397,9,382,2],[398,6,382,2,"value"],[398,11,382,2],[398,13,393,2],[398,22,393,2,"createTransaction"],[398,39,393,19,"createTransaction"],[398,40,394,4,"utxos"],[398,45,394,34],[398,47,395,4,"targets"],[398,54,398,7],[398,56,399,4,"feeRate"],[398,63,399,19],[398,65,400,4,"changeAddress"],[398,78,400,25],[398,80,401,4,"sequence"],[398,88,401,20],[398,90,404,29],[399,8,404,29],[399,12,402,4,"skipSigning"],[399,23,402,15],[399,26,402,15,"arguments"],[399,35,402,15],[399,36,402,15,"length"],[399,42,402,15],[399,50,402,15,"arguments"],[399,59,402,15],[399,67,402,15,"undefined"],[399,76,402,15],[399,79,402,15,"arguments"],[399,88,402,15],[399,94,402,18],[399,99,402,23],[400,8,402,23],[400,12,403,4,"masterFingerprint"],[400,29,403,29],[400,32,403,29,"arguments"],[400,41,403,29],[400,42,403,29,"length"],[400,48,403,29],[400,55,403,29,"arguments"],[400,64,403,29],[400,70,403,29,"undefined"],[400,79,403,29],[401,8,405,4],[401,14,405,10,"Error"],[401,19,405,15],[401,20,405,16],[401,37,405,33],[401,38,405,34],[402,6,406,2],[403,4,406,3],[404,6,406,3,"key"],[404,9,406,3],[405,6,406,3,"value"],[405,11,406,3],[405,13,408,2],[405,22,408,2,"getAddress"],[405,32,408,12,"getAddress"],[405,33,408,12],[405,35,408,43],[406,8,409,4],[406,14,409,10,"Error"],[406,19,409,15],[406,20,409,16],[406,37,409,33],[406,38,409,34],[407,6,410,2],[408,4,410,3],[409,6,410,3,"key"],[409,9,410,3],[410,6,410,3,"value"],[410,11,410,3],[410,13,412,2],[410,22,412,2,"getAddressAsync"],[410,37,412,17,"getAddressAsync"],[410,38,412,17],[410,40,412,57],[411,8,412,57],[411,12,412,57,"_this"],[411,17,412,57],[412,8,413,4],[412,15,413,11],[412,19,413,15,"Promise"],[412,26,413,22],[412,27,413,23],[412,37,413,23,"resolve"],[412,44,413,30],[413,10,413,30],[413,17,413,34,"resolve"],[413,24,413,41],[413,25,413,42,"_this"],[413,30,413,46],[413,31,413,47,"getAddress"],[413,41,413,57],[413,42,413,58],[413,43,413,59],[413,44,413,60],[414,8,413,60],[414,10,413,61],[415,6,414,2],[416,4,414,3],[417,6,414,3,"key"],[417,9,414,3],[418,6,414,3,"value"],[418,11,414,3],[419,8,414,3],[419,12,414,3,"_getChangeAddressAsync"],[419,34,414,3],[419,41,414,3,"_asyncToGenerator2"],[419,59,414,3],[419,60,414,3,"default"],[419,67,414,3],[419,69,416,2],[419,82,416,69],[420,10,416,69],[420,14,416,69,"_this2"],[420,20,416,69],[421,10,417,4],[421,17,417,11],[421,21,417,15,"Promise"],[421,28,417,22],[421,29,417,23],[421,39,417,23,"resolve"],[421,46,417,30],[422,12,417,30],[422,19,417,34,"resolve"],[422,26,417,41],[422,27,417,42,"_this2"],[422,33,417,46],[422,34,417,47,"getAddress"],[422,44,417,57],[422,45,417,58],[422,46,417,59],[422,47,417,60],[423,10,417,60],[423,12,417,61],[424,8,418,2],[424,9,418,3],[425,8,418,3],[425,17,416,8,"getChangeAddressAsync"],[425,38,416,29,"getChangeAddressAsync"],[425,39,416,29],[426,10,416,29],[426,17,416,29,"_getChangeAddressAsync"],[426,39,416,29],[426,40,416,29,"apply"],[426,45,416,29],[426,52,416,29,"arguments"],[426,61,416,29],[427,8,416,29],[428,8,416,29],[428,15,416,8,"getChangeAddressAsync"],[428,36,416,29],[429,6,416,29],[430,4,416,29],[431,6,416,29,"key"],[431,9,416,29],[432,6,416,29,"value"],[432,11,416,29],[432,13,420,2],[432,22,420,2,"useWithHardwareWalletEnabled"],[432,50,420,30,"useWithHardwareWalletEnabled"],[432,51,420,30],[432,53,420,42],[433,8,421,4],[433,15,421,11],[433,20,421,16],[434,6,422,2],[435,4,422,3],[436,6,422,3,"key"],[436,9,422,3],[437,6,422,3,"value"],[437,11,422,3],[437,13,424,2],[437,22,424,2,"isBIP47Enabled"],[437,36,424,16,"isBIP47Enabled"],[437,37,424,16],[437,39,424,28],[438,8,425,4],[438,15,425,11],[438,20,425,16],[439,6,426,2],[440,4,426,3],[441,6,426,3,"key"],[441,9,426,3],[442,6,426,3,"value"],[442,11,426,3],[443,8,426,3],[443,12,426,3,"_wasEverUsed"],[443,24,426,3],[443,31,426,3,"_asyncToGenerator2"],[443,49,426,3],[443,50,426,3,"default"],[443,57,426,3],[443,59,428,2],[443,72,428,40],[444,10,429,4],[444,16,429,10],[444,20,429,14,"Error"],[444,25,429,19],[444,26,429,20],[444,43,429,37],[444,44,429,38],[445,8,430,2],[445,9,430,3],[446,8,430,3],[446,17,428,8,"wasEverUsed"],[446,28,428,19,"wasEverUsed"],[446,29,428,19],[447,10,428,19],[447,17,428,19,"_wasEverUsed"],[447,29,428,19],[447,30,428,19,"apply"],[447,35,428,19],[447,42,428,19,"arguments"],[447,51,428,19],[448,8,428,19],[449,8,428,19],[449,15,428,8,"wasEverUsed"],[449,26,428,19],[450,6,428,19],[451,6,432,2],[452,0,433,0],[453,0,434,0],[454,0,435,0],[455,0,436,0],[456,0,437,0],[457,4,432,2],[458,6,432,2,"key"],[458,9,432,2],[459,6,432,2,"value"],[459,11,432,2],[459,13,438,2],[459,22,438,2,"getAllExternalAddresses"],[459,45,438,25,"getAllExternalAddresses"],[459,46,438,25],[459,48,438,38],[460,8,439,4],[460,15,439,11],[460,17,439,13],[461,6,440,2],[463,6,442,2],[464,0,443,0],[465,0,444,0],[466,0,445,0],[467,0,446,0],[468,0,447,0],[469,4,442,2],[470,6,442,2,"key"],[470,9,442,2],[471,6,442,2,"value"],[471,11,442,2],[471,13,448,2],[471,22,448,2,"_zpubToXpub"],[471,33,448,13,"_zpubToXpub"],[471,34,448,14,"zpub"],[471,38,448,26],[471,40,448,36],[472,8,449,4],[472,12,449,8,"data"],[472,16,449,12],[472,19,449,15,"b58"],[472,37,449,18],[472,38,449,19,"decode"],[472,44,449,25],[472,45,449,26,"zpub"],[472,49,449,30],[472,50,449,31],[473,8,450,4,"data"],[473,12,450,8],[473,15,450,11,"data"],[473,19,450,15],[473,20,450,16,"slice"],[473,25,450,21],[473,26,450,22],[473,27,450,23],[473,28,450,24],[474,8,451,4,"data"],[474,12,451,8],[474,15,451,11,"Buffer"],[474,21,451,17],[474,22,451,18,"concat"],[474,28,451,24],[474,29,451,25],[474,30,451,26,"Buffer"],[474,36,451,32],[474,37,451,33,"from"],[474,41,451,37],[474,42,451,38],[474,52,451,48],[474,54,451,50],[474,59,451,55],[474,60,451,56],[474,62,451,58,"data"],[474,66,451,62],[474,67,451,63],[474,68,451,64],[475,8,453,4],[475,15,453,11,"b58"],[475,33,453,14],[475,34,453,15,"encode"],[475,40,453,21],[475,41,453,22,"data"],[475,45,453,26],[475,46,453,27],[476,6,454,2],[478,6,456,2],[479,0,457,0],[480,0,458,0],[481,0,459,0],[482,0,460,0],[483,4,456,2],[484,6,456,2,"key"],[484,9,456,2],[485,6,456,2,"value"],[485,11,456,2],[485,13,470,2],[485,22,470,2,"_xpubToZpub"],[485,33,470,13,"_xpubToZpub"],[485,34,470,14,"xpub"],[485,38,470,26],[485,40,470,36],[486,8,471,4],[486,12,471,8,"data"],[486,16,471,12],[486,19,471,15,"b58"],[486,37,471,18],[486,38,471,19,"decode"],[486,44,471,25],[486,45,471,26,"xpub"],[486,49,471,30],[486,50,471,31],[487,8,472,4,"data"],[487,12,472,8],[487,15,472,11,"data"],[487,19,472,15],[487,20,472,16,"slice"],[487,25,472,21],[487,26,472,22],[487,27,472,23],[487,28,472,24],[488,8,473,4,"data"],[488,12,473,8],[488,15,473,11,"Buffer"],[488,21,473,17],[488,22,473,18,"concat"],[488,28,473,24],[488,29,473,25],[488,30,473,26,"Buffer"],[488,36,473,32],[488,37,473,33,"from"],[488,41,473,37],[488,42,473,38],[488,52,473,48],[488,54,473,50],[488,59,473,55],[488,60,473,56],[488,62,473,58,"data"],[488,66,473,62],[488,67,473,63],[488,68,473,64],[489,8,475,4],[489,15,475,11,"b58"],[489,33,475,14],[489,34,475,15,"encode"],[489,40,475,21],[489,41,475,22,"data"],[489,45,475,26],[489,46,475,27],[490,6,476,2],[491,4,476,3],[492,6,476,3,"key"],[492,9,476,3],[493,6,476,3,"value"],[493,11,476,3],[493,13,478,2],[493,22,478,2,"_xpubToYpub"],[493,33,478,13,"_xpubToYpub"],[493,34,478,14,"xpub"],[493,38,478,26],[493,40,478,36],[494,8,479,4],[494,12,479,8,"data"],[494,16,479,12],[494,19,479,15,"b58"],[494,37,479,18],[494,38,479,19,"decode"],[494,44,479,25],[494,45,479,26,"xpub"],[494,49,479,30],[494,50,479,31],[495,8,480,4,"data"],[495,12,480,8],[495,15,480,11,"data"],[495,19,480,15],[495,20,480,16,"slice"],[495,25,480,21],[495,26,480,22],[495,27,480,23],[495,28,480,24],[496,8,481,4,"data"],[496,12,481,8],[496,15,481,11,"Buffer"],[496,21,481,17],[496,22,481,18,"concat"],[496,28,481,24],[496,29,481,25],[496,30,481,26,"Buffer"],[496,36,481,32],[496,37,481,33,"from"],[496,41,481,37],[496,42,481,38],[496,52,481,48],[496,54,481,50],[496,59,481,55],[496,60,481,56],[496,62,481,58,"data"],[496,66,481,62],[496,67,481,63],[496,68,481,64],[497,8,483,4],[497,15,483,11,"b58"],[497,33,483,14],[497,34,483,15,"encode"],[497,40,483,21],[497,41,483,22,"data"],[497,45,483,26],[497,46,483,27],[498,6,484,2],[499,4,484,3],[500,6,484,3,"key"],[500,9,484,3],[501,6,484,3,"value"],[501,11,484,3],[501,13,486,2],[501,22,486,2,"prepareForSerialization"],[501,45,486,25,"prepareForSerialization"],[501,46,486,25],[501,48,486,34],[501,49,486,35],[503,6,488,2],[504,0,489,0],[505,0,490,0],[506,0,491,0],[507,0,492,0],[508,0,493,0],[509,4,488,2],[510,6,488,2,"key"],[510,9,488,2],[511,6,488,2,"value"],[511,11,488,2],[511,13,494,2],[511,22,494,2,"getUTXOMetadata"],[511,37,494,17,"getUTXOMetadata"],[511,38,494,18,"txid"],[511,42,494,30],[511,44,494,32,"vout"],[511,48,494,44],[511,50,494,60],[512,8,495,4],[512,15,495,11],[512,19,495,15],[512,20,495,16,"_utxoMetadata"],[512,33,495,29],[512,34,495,30],[512,37,495,33,"txid"],[512,41,495,37],[512,45,495,41,"vout"],[512,49,495,45],[512,51,495,47],[512,52,495,48],[512,56,495,52],[512,57,495,53],[512,58,495,54],[513,6,496,2],[515,6,498,2],[516,0,499,0],[517,0,500,0],[518,0,501,0],[519,0,502,0],[520,0,503,0],[521,0,504,0],[522,4,498,2],[523,6,498,2,"key"],[523,9,498,2],[524,6,498,2,"value"],[524,11,498,2],[524,13,505,2],[524,22,505,2,"setUTXOMetadata"],[524,37,505,17,"setUTXOMetadata"],[524,38,505,18,"txid"],[524,42,505,30],[524,44,505,32,"vout"],[524,48,505,44],[524,50,505,46,"opts"],[524,54,505,64],[524,56,505,72],[525,8,506,4],[525,12,506,10,"meta"],[525,16,506,14],[525,19,506,17],[525,23,506,21],[525,24,506,22,"_utxoMetadata"],[525,37,506,35],[525,38,506,36],[525,41,506,39,"txid"],[525,45,506,43],[525,49,506,47,"vout"],[525,53,506,51],[525,55,506,53],[525,56,506,54],[525,60,506,58],[525,61,506,59],[525,62,506,60],[526,8,507,4],[526,12,507,8],[526,18,507,14],[526,22,507,18,"opts"],[526,26,507,22],[526,28,507,24,"meta"],[526,32,507,28],[526,33,507,29,"memo"],[526,37,507,33],[526,40,507,36,"opts"],[526,44,507,40],[526,45,507,41,"memo"],[526,49,507,45],[527,8,508,4],[527,12,508,8],[527,20,508,16],[527,24,508,20,"opts"],[527,28,508,24],[527,30,508,26,"meta"],[527,34,508,30],[527,35,508,31,"frozen"],[527,41,508,37],[527,44,508,40,"opts"],[527,48,508,44],[527,49,508,45,"frozen"],[527,55,508,51],[528,8,509,4],[528,12,509,8],[528,13,509,9,"_utxoMetadata"],[528,26,509,22],[528,27,509,23],[528,30,509,26,"txid"],[528,34,509,30],[528,38,509,34,"vout"],[528,42,509,38],[528,44,509,40],[528,45,509,41],[528,48,509,44,"meta"],[528,52,509,48],[529,6,510,2],[530,4,510,3],[531,6,510,3,"key"],[531,9,510,3],[532,6,510,3,"value"],[532,11,510,3],[532,13,512,2],[532,22,512,2,"isSegwit"],[532,30,512,10,"isSegwit"],[532,31,512,10],[532,33,512,13],[533,8,513,4],[533,15,513,11],[533,20,513,16],[534,6,514,2],[535,4,514,3],[536,6,514,3,"key"],[536,9,514,3],[537,6,514,3,"value"],[537,11,514,3],[537,13,516,2],[537,22,516,2,"getMasterFingerprintFromHex"],[537,49,516,29,"getMasterFingerprintFromHex"],[537,50,516,30,"hexValue"],[537,58,516,46],[537,60,516,56],[538,8,517,4],[538,12,517,8,"hexValue"],[538,20,517,16],[538,21,517,17,"length"],[538,27,517,23],[538,30,517,26],[538,31,517,27],[538,33,517,29,"hexValue"],[538,41,517,37],[538,44,517,40],[538,47,517,43],[538,50,517,46,"hexValue"],[538,58,517,54],[539,8,518,4],[539,12,518,10,"b"],[539,13,518,11],[539,16,518,14,"Buffer"],[539,22,518,20],[539,23,518,21,"from"],[539,27,518,25],[539,28,518,26,"hexValue"],[539,36,518,34],[539,38,518,36],[539,43,518,41],[539,44,518,42],[540,8,519,4],[540,12,519,8,"b"],[540,13,519,9],[540,14,519,10,"length"],[540,20,519,16],[540,25,519,21],[540,26,519,22],[540,28,519,24],[540,34,519,30],[540,38,519,34,"Error"],[540,43,519,39],[540,44,519,40],[540,69,519,65],[540,70,519,66],[541,8,521,4,"hexValue"],[541,16,521,12],[541,19,521,15,"hexValue"],[541,27,521,23],[541,28,521,24],[541,29,521,25],[541,30,521,26],[541,33,521,29,"hexValue"],[541,41,521,37],[541,42,521,38],[541,43,521,39],[541,44,521,40],[541,47,521,43,"hexValue"],[541,55,521,51],[541,56,521,52],[541,57,521,53],[541,58,521,54],[541,61,521,57,"hexValue"],[541,69,521,65],[541,70,521,66],[541,71,521,67],[541,72,521,68],[541,75,521,71,"hexValue"],[541,83,521,79],[541,84,521,80],[541,85,521,81],[541,86,521,82],[541,89,521,85,"hexValue"],[541,97,521,93],[541,98,521,94],[541,99,521,95],[541,100,521,96],[541,103,521,99,"hexValue"],[541,111,521,107],[541,112,521,108],[541,113,521,109],[541,114,521,110],[541,117,521,113,"hexValue"],[541,125,521,121],[541,126,521,122],[541,127,521,123],[541,128,521,124],[542,8,523,4],[542,15,523,11,"parseInt"],[542,23,523,19],[542,24,523,20,"hexValue"],[542,32,523,28],[542,34,523,30],[542,36,523,32],[542,37,523,33],[543,6,524,2],[544,4,524,3],[545,6,524,3,"key"],[545,9,524,3],[546,6,524,3,"value"],[546,11,524,3],[546,13,22,2],[546,22,22,9,"fromJson"],[546,30,22,17,"fromJson"],[546,31,22,18,"obj"],[546,34,22,29],[546,36,22,47],[547,8,23,4],[547,12,23,10,"obj2"],[547,16,23,14],[547,19,23,17,"JSON"],[547,23,23,21],[547,24,23,22,"parse"],[547,29,23,27],[547,30,23,28,"obj"],[547,33,23,31],[547,34,23,32],[548,8,24,4],[548,12,24,10,"temp"],[548,16,24,14],[548,19,24,17],[548,23,24,21],[548,27,24,25],[548,28,24,26],[548,29,24,27],[549,8,25,4],[549,13,25,9],[549,17,25,15,"key2"],[549,21,25,19],[549,25,25,23,"Object"],[549,31,25,29],[549,32,25,30,"keys"],[549,36,25,34],[549,37,25,35,"obj2"],[549,41,25,39],[549,42,25,40],[549,44,25,42],[550,10,26,6],[551,10,27,6,"temp"],[551,14,27,10],[551,15,27,11,"key2"],[551,19,27,15],[551,20,27,16],[551,23,27,19,"obj2"],[551,27,27,23],[551,28,27,24,"key2"],[551,32,27,28],[551,33,27,29],[552,8,28,4],[553,8,30,4],[553,15,30,11,"temp"],[553,19,30,15],[554,6,31,2],[555,4,31,3],[556,6,31,3,"key"],[556,9,31,3],[557,6,31,3,"value"],[557,11,31,3],[557,13,461,2],[557,22,461,9,"_ypubToXpub"],[557,33,461,20,"_ypubToXpub"],[557,34,461,21,"ypub"],[557,38,461,33],[557,40,461,43],[558,8,462,4],[558,12,462,8,"data"],[558,16,462,12],[558,19,462,15,"b58"],[558,37,462,18],[558,38,462,19,"decode"],[558,44,462,25],[558,45,462,26,"ypub"],[558,49,462,30],[558,50,462,31],[559,8,463,4],[559,12,463,8,"data"],[559,16,463,12],[559,17,463,13,"readUInt32BE"],[559,29,463,25],[559,30,463,26],[559,31,463,27],[559,36,463,32],[559,46,463,42],[559,48,463,44],[559,54,463,50],[559,58,463,54,"Error"],[559,63,463,59],[559,64,463,60],[559,96,463,92],[559,97,463,93],[560,8,464,4,"data"],[560,12,464,8],[560,15,464,11,"data"],[560,19,464,15],[560,20,464,16,"slice"],[560,25,464,21],[560,26,464,22],[560,27,464,23],[560,28,464,24],[561,8,465,4,"data"],[561,12,465,8],[561,15,465,11,"Buffer"],[561,21,465,17],[561,22,465,18,"concat"],[561,28,465,24],[561,29,465,25],[561,30,465,26,"Buffer"],[561,36,465,32],[561,37,465,33,"from"],[561,41,465,37],[561,42,465,38],[561,52,465,48],[561,54,465,50],[561,59,465,55],[561,60,465,56],[561,62,465,58,"data"],[561,66,465,62],[561,67,465,63],[561,68,465,64],[562,8,467,4],[562,15,467,11,"b58"],[562,33,467,14],[562,34,467,15,"encode"],[562,40,467,21],[562,41,467,22,"data"],[562,45,467,26],[562,46,467,27],[563,6,468,2],[564,4,468,3],[565,2,468,3],[566,2,14,13,"AbstractWallet"],[566,16,14,27],[566,17,15,18,"type"],[566,21,15,22],[566,24,15,25],[566,34,15,35],[567,2,14,13,"AbstractWallet"],[567,16,14,27],[567,17,16,18,"typeReadable"],[567,29,16,30],[567,32,16,33],[567,42,16,43],[568,0,16,43],[568,3]],"functionMap":{"names":["<global>","AbstractWallet","AbstractWallet.fromJson","AbstractWallet#constructor","AbstractWallet#getLastTxFetch","AbstractWallet#getID","AbstractWallet#getTransactions","AbstractWallet#getUserHasSavedExport","AbstractWallet#setUserHasSavedExport","AbstractWallet#getHideTransactionsInWalletsList","AbstractWallet#setHideTransactionsInWalletsList","AbstractWallet#getLabel","AbstractWallet#getXpub","AbstractWallet#getBalance","AbstractWallet#getPreferredBalanceUnit","AbstractWallet#allowOnchainAddress","AbstractWallet#allowBIP47","AbstractWallet#switchBIP47","AbstractWallet#allowReceive","AbstractWallet#allowSend","AbstractWallet#allowSilentPaymentSend","AbstractWallet#allowRBF","AbstractWallet#allowPayJoin","AbstractWallet#allowCosignPsbt","AbstractWallet#allowSignVerifyMessage","AbstractWallet#allowMasterFingerprint","AbstractWallet#allowXpub","AbstractWallet#weOwnAddress","AbstractWallet#weOwnTransaction","AbstractWallet#getUnconfirmedBalance","AbstractWallet#setLabel","AbstractWallet#getSecret","AbstractWallet#setSecret","AbstractWallet#getLatestTransactionTime","AbstractWallet#getLatestTransactionTimeEpoch","AbstractWallet#createTx","AbstractWallet#createTransaction","AbstractWallet#getAddress","AbstractWallet#getAddressAsync","Promise$argument_0","AbstractWallet#getChangeAddressAsync","AbstractWallet#useWithHardwareWalletEnabled","AbstractWallet#isBIP47Enabled","AbstractWallet#wasEverUsed","AbstractWallet#getAllExternalAddresses","AbstractWallet#_zpubToXpub","AbstractWallet._ypubToXpub","AbstractWallet#_xpubToZpub","AbstractWallet#_xpubToYpub","AbstractWallet#prepareForSerialization","AbstractWallet#getUTXOMetadata","AbstractWallet#setUTXOMetadata","AbstractWallet#isSegwit","AbstractWallet#getMasterFingerprintFromHex"],"mappings":"AAA;OCa;ECQ;GDS;EEqB;GFiB;EGK;GHE;EIE;GJM;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUM;GVK;EWE;GXE;EYM;GZE;EaE;GbO;EcE;GdE;EeE;GfE;EgBE;GhBE;EiBE;GjBE;EkBE;GlBE;EmBE;GnBE;EoBE;GpBE;EqBE;GrBE;EsBE;GtBE;EuBE;GvBE;EwBE;GxBE;EyBE;GzBE;E0BE;G1BE;E2BE;G3BE;E4BQ;G5BE;E6BE;G7BG;E8BE;G9BE;E+BE;G/B+I;EgCE;GhCE;EiCE;GjCS;EkCO;GlCE;EmCa;GnCa;EoCE;GpCE;EqCE;uBCC,qCD;GrCC;EuCE;uBDC,qCC;GvCC;EwCE;GxCE;EyCE;GzCE;E0CE;G1CE;E2CQ;G3CE;E4CQ;G5CM;E6CO;G7CO;E8CE;G9CM;E+CE;G/CM;EgDE,kChD;EiDQ;GjDE;EkDS;GlDK;EmDE;GnDE;EoDE;GpDQ;CDC"}},"type":"js/module"}]}