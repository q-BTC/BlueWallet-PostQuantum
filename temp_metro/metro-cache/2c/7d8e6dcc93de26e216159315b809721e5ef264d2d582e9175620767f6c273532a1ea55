{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2024 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createDefaultGetter = void 0;\n  /** @internal */\n  function createDefaultGetter(_ref) {\n    var fromBinding = _ref.fromBinding,\n      itemType = _ref.itemType;\n    var isObjectItem = itemType === 7 /* binding.PropertyType.Object */ || itemType === 8 /* binding.PropertyType.LinkingObjects */;\n    return isObjectItem ? function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return getObject.apply(void 0, [fromBinding].concat(args));\n    } : function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return getKnownType.apply(void 0, [fromBinding].concat(args));\n    };\n  }\n  exports.createDefaultGetter = createDefaultGetter;\n  function getObject(fromBinding, collection, index) {\n    return fromBinding(collection.getObj(index));\n  }\n  function getKnownType(fromBinding, collection, index) {\n    return fromBinding(collection.getAny(index));\n  }\n});","lineCount":49,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,19,0,"Object"],[21,8,19,6],[21,9,19,7,"defineProperty"],[21,23,19,21],[21,24,19,22,"exports"],[21,31,19,29],[21,33,19,31],[21,45,19,43],[21,47,19,45],[22,4,19,47,"value"],[22,9,19,52],[22,11,19,54],[23,2,19,59],[23,3,19,60],[23,4,19,61],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"createDefaultGetter"],[24,29,20,27],[24,32,20,30],[24,37,20,35],[24,38,20,36],[25,2,21,0],[26,2,22,0],[26,11,22,9,"createDefaultGetter"],[26,30,22,28,"createDefaultGetter"],[26,31,22,28,"_ref"],[26,35,22,28],[26,37,22,57],[27,4,22,57],[27,8,22,31,"fromBinding"],[27,19,22,42],[27,22,22,42,"_ref"],[27,26,22,42],[27,27,22,31,"fromBinding"],[27,38,22,42],[28,6,22,44,"itemType"],[28,14,22,52],[28,17,22,52,"_ref"],[28,21,22,52],[28,22,22,44,"itemType"],[28,30,22,52],[29,4,23,4],[29,8,23,10,"isObjectItem"],[29,20,23,22],[29,23,23,25,"itemType"],[29,31,23,33],[29,36,23,38],[29,37,23,39],[29,38,23,40],[29,75,23,77,"itemType"],[29,83,23,85],[29,88,23,90],[29,89,23,91],[29,90,23,92],[30,4,24,4],[30,11,24,11,"isObjectItem"],[30,23,24,23],[30,26,24,26],[31,6,24,26],[31,15,24,26,"_len"],[31,19,24,26],[31,22,24,26,"arguments"],[31,31,24,26],[31,32,24,26,"length"],[31,38,24,26],[31,40,24,30,"args"],[31,44,24,34],[31,51,24,34,"Array"],[31,56,24,34],[31,57,24,34,"_len"],[31,61,24,34],[31,64,24,34,"_key"],[31,68,24,34],[31,74,24,34,"_key"],[31,78,24,34],[31,81,24,34,"_len"],[31,85,24,34],[31,87,24,34,"_key"],[31,91,24,34],[32,8,24,30,"args"],[32,12,24,34],[32,13,24,34,"_key"],[32,17,24,34],[32,21,24,34,"arguments"],[32,30,24,34],[32,31,24,34,"_key"],[32,35,24,34],[33,6,24,34],[34,6,24,34],[34,13,24,39,"getObject"],[34,22,24,48],[34,23,24,48,"apply"],[34,28,24,48],[34,38,24,49,"fromBinding"],[34,49,24,60],[34,51,24,60,"concat"],[34,57,24,60],[34,58,24,65,"args"],[34,62,24,69],[34,64,24,70],[35,4,24,70],[35,8,24,73],[36,6,24,73],[36,15,24,73,"_len2"],[36,20,24,73],[36,23,24,73,"arguments"],[36,32,24,73],[36,33,24,73,"length"],[36,39,24,73],[36,41,24,77,"args"],[36,45,24,81],[36,52,24,81,"Array"],[36,57,24,81],[36,58,24,81,"_len2"],[36,63,24,81],[36,66,24,81,"_key2"],[36,71,24,81],[36,77,24,81,"_key2"],[36,82,24,81],[36,85,24,81,"_len2"],[36,90,24,81],[36,92,24,81,"_key2"],[36,97,24,81],[37,8,24,77,"args"],[37,12,24,81],[37,13,24,81,"_key2"],[37,18,24,81],[37,22,24,81,"arguments"],[37,31,24,81],[37,32,24,81,"_key2"],[37,37,24,81],[38,6,24,81],[39,6,24,81],[39,13,24,86,"getKnownType"],[39,25,24,98],[39,26,24,98,"apply"],[39,31,24,98],[39,41,24,99,"fromBinding"],[39,52,24,110],[39,54,24,110,"concat"],[39,60,24,110],[39,61,24,115,"args"],[39,65,24,119],[39,67,24,120],[40,4,24,120],[41,2,25,0],[42,2,26,0,"exports"],[42,9,26,7],[42,10,26,8,"createDefaultGetter"],[42,29,26,27],[42,32,26,30,"createDefaultGetter"],[42,51,26,49],[43,2,27,0],[43,11,27,9,"getObject"],[43,20,27,18,"getObject"],[43,21,27,19,"fromBinding"],[43,32,27,30],[43,34,27,32,"collection"],[43,44,27,42],[43,46,27,44,"index"],[43,51,27,49],[43,53,27,51],[44,4,28,4],[44,11,28,11,"fromBinding"],[44,22,28,22],[44,23,28,23,"collection"],[44,33,28,33],[44,34,28,34,"getObj"],[44,40,28,40],[44,41,28,41,"index"],[44,46,28,46],[44,47,28,47],[44,48,28,48],[45,2,29,0],[46,2,30,0],[46,11,30,9,"getKnownType"],[46,23,30,21,"getKnownType"],[46,24,30,22,"fromBinding"],[46,35,30,33],[46,37,30,35,"collection"],[46,47,30,45],[46,49,30,47,"index"],[46,54,30,52],[46,56,30,54],[47,4,31,4],[47,11,31,11,"fromBinding"],[47,22,31,22],[47,23,31,23,"collection"],[47,33,31,33],[47,34,31,34,"getAny"],[47,40,31,40],[47,41,31,41,"index"],[47,46,31,46],[47,47,31,47],[47,48,31,48],[48,2,32,0],[49,0,32,1],[49,3]],"functionMap":{"names":["<global>","createDefaultGetter","<anonymous>","getObject","getKnownType"],"mappings":"AAA;ACqB;0BCE,4CD,GC,+CD;CDC;AGE;CHE;AIC;CJE"}},"type":"js/module"}]}