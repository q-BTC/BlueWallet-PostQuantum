{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":27,"index":462},"end":{"line":15,"column":54,"index":489}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"../../typeFields.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":24,"index":402},"end":{"line":14,"column":55,"index":433}},{"start":{"line":14,"column":24,"index":402},"end":{"line":14,"column":55,"index":433}}],"key":"6VKrghDrlipK/Kkfa9oBo7LMnas="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[1], \"../../typeFields.cjs\").InputTypes.TAP_LEAF_SCRIPT) {\n      throw new Error('Decode Error: could not decode tapLeafScript with key 0x' + tools.toHex(keyVal.key));\n    }\n    if ((keyVal.key.length - 2) % 32 !== 0) {\n      throw new Error('Decode Error: tapLeafScript has invalid control block in key 0x' + tools.toHex(keyVal.key));\n    }\n    var leafVersion = keyVal.value[keyVal.value.length - 1];\n    if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n      throw new Error('Decode Error: tapLeafScript bad leaf version in key 0x' + tools.toHex(keyVal.key));\n    }\n    var script = keyVal.value.slice(0, -1);\n    var controlBlock = keyVal.key.slice(1);\n    return {\n      controlBlock: controlBlock,\n      script: script,\n      leafVersion: leafVersion\n    };\n  }\n  exports.decode = decode;\n  function encode(tScript) {\n    var head = Uint8Array.from([_$$_REQUIRE(_dependencyMap[1], \"../../typeFields.cjs\").InputTypes.TAP_LEAF_SCRIPT]);\n    var verBuf = Uint8Array.from([tScript.leafVersion]);\n    return {\n      key: tools.concat([head, tScript.controlBlock]),\n      value: tools.concat([tScript.script, verBuf])\n    };\n  }\n  exports.encode = encode;\n  exports.expected = '{ controlBlock: Uint8Array; leafVersion: number, script: Uint8Array; }';\n  function check(data) {\n    return data.controlBlock instanceof Uint8Array && (data.controlBlock.length - 1) % 32 === 0 && (data.controlBlock[0] & 0xfe) === data.leafVersion && data.script instanceof Uint8Array;\n  }\n  exports.check = check;\n  function canAddToArray(array, item, dupeSet) {\n    var dupeString = tools.toHex(item.controlBlock);\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(function (v) {\n      return tools.compare(v.controlBlock, item.controlBlock) === 0;\n    }).length === 0;\n  }\n  exports.canAddToArray = canAddToArray;\n});","lineCount":58,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importStar"],[4,18,2,16],[4,21,3,3],[4,25,3,7],[4,29,3,11],[4,33,3,15],[4,34,3,16,"__importStar"],[4,46,3,28],[4,50,4,2],[4,60,4,11,"mod"],[4,63,4,14],[4,65,4,16],[5,4,5,4],[5,8,5,8,"mod"],[5,11,5,11],[5,15,5,15,"mod"],[5,18,5,18],[5,19,5,19,"__esModule"],[5,29,5,29],[5,31,5,31],[5,38,5,38,"mod"],[5,41,5,41],[6,4,6,4],[6,8,6,8,"result"],[6,14,6,14],[6,17,6,17],[6,18,6,18],[6,19,6,19],[7,4,7,4],[7,8,7,8,"mod"],[7,11,7,11],[7,15,7,15],[7,19,7,19],[7,21,8,6],[7,26,8,11],[7,30,8,15,"k"],[7,31,8,16],[7,35,8,20,"mod"],[7,38,8,23],[7,40,9,8],[7,44,9,12,"Object"],[7,50,9,18],[7,51,9,19,"hasOwnProperty"],[7,65,9,33],[7,66,9,34,"call"],[7,70,9,38],[7,71,9,39,"mod"],[7,74,9,42],[7,76,9,44,"k"],[7,77,9,45],[7,78,9,46],[7,80,9,48,"result"],[7,86,9,54],[7,87,9,55,"k"],[7,88,9,56],[7,89,9,57],[7,92,9,60,"mod"],[7,95,9,63],[7,96,9,64,"k"],[7,97,9,65],[7,98,9,66],[8,4,10,4,"result"],[8,10,10,10],[8,11,10,11],[8,20,10,20],[8,21,10,21],[8,24,10,24,"mod"],[8,27,10,27],[9,4,11,4],[9,11,11,11,"result"],[9,17,11,17],[10,2,12,2],[10,3,12,3],[11,2,13,0,"Object"],[11,8,13,6],[11,9,13,7,"defineProperty"],[11,23,13,21],[11,24,13,22,"exports"],[11,31,13,29],[11,33,13,31],[11,45,13,43],[11,47,13,45],[12,4,13,47,"value"],[12,9,13,52],[12,11,13,54],[13,2,13,59],[13,3,13,60],[13,4,13,61],[14,2,15,0],[14,6,15,6,"tools"],[14,11,15,11],[14,14,15,14,"__importStar"],[14,26,15,26],[14,27,15,27,"require"],[14,38,15,34],[14,39,15,34,"_dependencyMap"],[14,53,15,34],[14,76,15,53],[14,77,15,54],[14,78,15,55],[15,2,16,0],[15,11,16,9,"decode"],[15,17,16,15,"decode"],[15,18,16,16,"keyVal"],[15,24,16,22],[15,26,16,24],[16,4,17,2],[16,8,17,6,"keyVal"],[16,14,17,12],[16,15,17,13,"key"],[16,18,17,16],[16,19,17,17],[16,20,17,18],[16,21,17,19],[16,26,17,24,"_$$_REQUIRE"],[16,37,17,24],[16,38,17,24,"_dependencyMap"],[16,52,17,24],[16,81,17,40,"InputTypes"],[16,91,17,50],[16,92,17,51,"TAP_LEAF_SCRIPT"],[16,107,17,66],[16,109,17,68],[17,6,18,4],[17,12,18,10],[17,16,18,14,"Error"],[17,21,18,19],[17,22,19,6],[17,80,19,64],[17,83,20,8,"tools"],[17,88,20,13],[17,89,20,14,"toHex"],[17,94,20,19],[17,95,20,20,"keyVal"],[17,101,20,26],[17,102,20,27,"key"],[17,105,20,30],[17,106,21,4],[17,107,21,5],[18,4,22,2],[19,4,23,2],[19,8,23,6],[19,9,23,7,"keyVal"],[19,15,23,13],[19,16,23,14,"key"],[19,19,23,17],[19,20,23,18,"length"],[19,26,23,24],[19,29,23,27],[19,30,23,28],[19,34,23,32],[19,36,23,34],[19,41,23,39],[19,42,23,40],[19,44,23,42],[20,6,24,4],[20,12,24,10],[20,16,24,14,"Error"],[20,21,24,19],[20,22,25,6],[20,87,25,71],[20,90,26,8,"tools"],[20,95,26,13],[20,96,26,14,"toHex"],[20,101,26,19],[20,102,26,20,"keyVal"],[20,108,26,26],[20,109,26,27,"key"],[20,112,26,30],[20,113,27,4],[20,114,27,5],[21,4,28,2],[22,4,29,2],[22,8,29,8,"leafVersion"],[22,19,29,19],[22,22,29,22,"keyVal"],[22,28,29,28],[22,29,29,29,"value"],[22,34,29,34],[22,35,29,35,"keyVal"],[22,41,29,41],[22,42,29,42,"value"],[22,47,29,47],[22,48,29,48,"length"],[22,54,29,54],[22,57,29,57],[22,58,29,58],[22,59,29,59],[23,4,30,2],[23,8,30,6],[23,9,30,7,"keyVal"],[23,15,30,13],[23,16,30,14,"key"],[23,19,30,17],[23,20,30,18],[23,21,30,19],[23,22,30,20],[23,25,30,23],[23,29,30,27],[23,35,30,33,"leafVersion"],[23,46,30,44],[23,48,30,46],[24,6,31,4],[24,12,31,10],[24,16,31,14,"Error"],[24,21,31,19],[24,22,32,6],[24,78,32,62],[24,81,33,8,"tools"],[24,86,33,13],[24,87,33,14,"toHex"],[24,92,33,19],[24,93,33,20,"keyVal"],[24,99,33,26],[24,100,33,27,"key"],[24,103,33,30],[24,104,34,4],[24,105,34,5],[25,4,35,2],[26,4,36,2],[26,8,36,8,"script"],[26,14,36,14],[26,17,36,17,"keyVal"],[26,23,36,23],[26,24,36,24,"value"],[26,29,36,29],[26,30,36,30,"slice"],[26,35,36,35],[26,36,36,36],[26,37,36,37],[26,39,36,39],[26,40,36,40],[26,41,36,41],[26,42,36,42],[27,4,37,2],[27,8,37,8,"controlBlock"],[27,20,37,20],[27,23,37,23,"keyVal"],[27,29,37,29],[27,30,37,30,"key"],[27,33,37,33],[27,34,37,34,"slice"],[27,39,37,39],[27,40,37,40],[27,41,37,41],[27,42,37,42],[28,4,38,2],[28,11,38,9],[29,6,38,11,"controlBlock"],[29,18,38,23],[29,20,38,11,"controlBlock"],[29,32,38,23],[30,6,38,25,"script"],[30,12,38,31],[30,14,38,25,"script"],[30,20,38,31],[31,6,38,33,"leafVersion"],[31,17,38,44],[31,19,38,33,"leafVersion"],[32,4,38,45],[32,5,38,46],[33,2,39,0],[34,2,40,0,"exports"],[34,9,40,7],[34,10,40,8,"decode"],[34,16,40,14],[34,19,40,17,"decode"],[34,25,40,23],[35,2,41,0],[35,11,41,9,"encode"],[35,17,41,15,"encode"],[35,18,41,16,"tScript"],[35,25,41,23],[35,27,41,25],[36,4,42,2],[36,8,42,8,"head"],[36,12,42,12],[36,15,42,15,"Uint8Array"],[36,25,42,25],[36,26,42,26,"from"],[36,30,42,30],[36,31,42,31],[36,32,42,32,"_$$_REQUIRE"],[36,43,42,32],[36,44,42,32,"_dependencyMap"],[36,58,42,32],[36,87,42,48,"InputTypes"],[36,97,42,58],[36,98,42,59,"TAP_LEAF_SCRIPT"],[36,113,42,74],[36,114,42,75],[36,115,42,76],[37,4,43,2],[37,8,43,8,"verBuf"],[37,14,43,14],[37,17,43,17,"Uint8Array"],[37,27,43,27],[37,28,43,28,"from"],[37,32,43,32],[37,33,43,33],[37,34,43,34,"tScript"],[37,41,43,41],[37,42,43,42,"leafVersion"],[37,53,43,53],[37,54,43,54],[37,55,43,55],[38,4,44,2],[38,11,44,9],[39,6,45,4,"key"],[39,9,45,7],[39,11,45,9,"tools"],[39,16,45,14],[39,17,45,15,"concat"],[39,23,45,21],[39,24,45,22],[39,25,45,23,"head"],[39,29,45,27],[39,31,45,29,"tScript"],[39,38,45,36],[39,39,45,37,"controlBlock"],[39,51,45,49],[39,52,45,50],[39,53,45,51],[40,6,46,4,"value"],[40,11,46,9],[40,13,46,11,"tools"],[40,18,46,16],[40,19,46,17,"concat"],[40,25,46,23],[40,26,46,24],[40,27,46,25,"tScript"],[40,34,46,32],[40,35,46,33,"script"],[40,41,46,39],[40,43,46,41,"verBuf"],[40,49,46,47],[40,50,46,48],[41,4,47,2],[41,5,47,3],[42,2,48,0],[43,2,49,0,"exports"],[43,9,49,7],[43,10,49,8,"encode"],[43,16,49,14],[43,19,49,17,"encode"],[43,25,49,23],[44,2,50,0,"exports"],[44,9,50,7],[44,10,50,8,"expected"],[44,18,50,16],[44,21,51,2],[44,93,51,74],[45,2,52,0],[45,11,52,9,"check"],[45,16,52,14,"check"],[45,17,52,15,"data"],[45,21,52,19],[45,23,52,21],[46,4,53,2],[46,11,54,4,"data"],[46,15,54,8],[46,16,54,9,"controlBlock"],[46,28,54,21],[46,40,54,33,"Uint8Array"],[46,50,54,43],[46,54,55,4],[46,55,55,5,"data"],[46,59,55,9],[46,60,55,10,"controlBlock"],[46,72,55,22],[46,73,55,23,"length"],[46,79,55,29],[46,82,55,32],[46,83,55,33],[46,87,55,37],[46,89,55,39],[46,94,55,44],[46,95,55,45],[46,99,56,4],[46,100,56,5,"data"],[46,104,56,9],[46,105,56,10,"controlBlock"],[46,117,56,22],[46,118,56,23],[46,119,56,24],[46,120,56,25],[46,123,56,28],[46,127,56,32],[46,133,56,38,"data"],[46,137,56,42],[46,138,56,43,"leafVersion"],[46,149,56,54],[46,153,57,4,"data"],[46,157,57,8],[46,158,57,9,"script"],[46,164,57,15],[46,176,57,27,"Uint8Array"],[46,186,57,37],[47,2,59,0],[48,2,60,0,"exports"],[48,9,60,7],[48,10,60,8,"check"],[48,15,60,13],[48,18,60,16,"check"],[48,23,60,21],[49,2,61,0],[49,11,61,9,"canAddToArray"],[49,24,61,22,"canAddToArray"],[49,25,61,23,"array"],[49,30,61,28],[49,32,61,30,"item"],[49,36,61,34],[49,38,61,36,"dupeSet"],[49,45,61,43],[49,47,61,45],[50,4,62,2],[50,8,62,8,"dupeString"],[50,18,62,18],[50,21,62,21,"tools"],[50,26,62,26],[50,27,62,27,"toHex"],[50,32,62,32],[50,33,62,33,"item"],[50,37,62,37],[50,38,62,38,"controlBlock"],[50,50,62,50],[50,51,62,51],[51,4,63,2],[51,8,63,6,"dupeSet"],[51,15,63,13],[51,16,63,14,"has"],[51,19,63,17],[51,20,63,18,"dupeString"],[51,30,63,28],[51,31,63,29],[51,33,63,31],[51,40,63,38],[51,45,63,43],[52,4,64,2,"dupeSet"],[52,11,64,9],[52,12,64,10,"add"],[52,15,64,13],[52,16,64,14,"dupeString"],[52,26,64,24],[52,27,64,25],[53,4,65,2],[53,11,66,4,"array"],[53,16,66,9],[53,17,66,10,"filter"],[53,23,66,16],[53,24,66,17],[53,34,66,17,"v"],[53,35,66,18],[54,6,66,18],[54,13,66,22,"tools"],[54,18,66,27],[54,19,66,28,"compare"],[54,26,66,35],[54,27,66,36,"v"],[54,28,66,37],[54,29,66,38,"controlBlock"],[54,41,66,50],[54,43,66,52,"item"],[54,47,66,56],[54,48,66,57,"controlBlock"],[54,60,66,69],[54,61,66,70],[54,66,66,75],[54,67,66,76],[55,4,66,76],[55,6,66,77],[55,7,67,7,"length"],[55,13,67,13],[55,18,67,18],[55,19,67,19],[56,2,69,0],[57,2,70,0,"exports"],[57,9,70,7],[57,10,70,8,"canAddToArray"],[57,23,70,21],[57,26,70,24,"canAddToArray"],[57,39,70,37],[58,0,70,38],[58,3]],"functionMap":{"names":["<global>","<anonymous>","decode","encode","check","canAddToArray","array.filter$argument_0"],"mappings":"AAA;ECG;GDQ;AEI;CFuB;AGE;CHO;AII;CJO;AKE;iBCK,2DD;CLG"}},"type":"js/module"}]}