{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":85,"column":0,"index":2645}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var range = function range(n) {\n    return _toConsumableArray(Array(n).keys());\n  };\n  var isValidDERKey = function isValidDERKey(pubkey) {\n    return pubkey.length === 33 && [2, 3].includes(pubkey[0]) || pubkey.length === 65 && 4 === pubkey[0];\n  };\n  function makeConverter(TYPE_BYTE) {\n    var isValidPubkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isValidDERKey;\n    function decode(keyVal) {\n      if (keyVal.key[0] !== TYPE_BYTE) {\n        throw new Error('Decode Error: could not decode bip32Derivation with key 0x' + keyVal.key.toString('hex'));\n      }\n      var pubkey = keyVal.key.slice(1);\n      if (!isValidPubkey(pubkey)) {\n        throw new Error('Decode Error: bip32Derivation has invalid pubkey in key 0x' + keyVal.key.toString('hex'));\n      }\n      if (keyVal.value.length / 4 % 1 !== 0) {\n        throw new Error('Decode Error: Input BIP32_DERIVATION value length should be multiple of 4');\n      }\n      var data = {\n        masterFingerprint: keyVal.value.slice(0, 4),\n        pubkey: pubkey,\n        path: 'm'\n      };\n      for (var i of range(keyVal.value.length / 4 - 1)) {\n        var val = keyVal.value.readUInt32LE(i * 4 + 4);\n        var isHard = !!(val & 0x80000000);\n        var idx = val & 0x7fffffff;\n        data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n      }\n      return data;\n    }\n    function encode(data) {\n      var head = Buffer.from([TYPE_BYTE]);\n      var key = Buffer.concat([head, data.pubkey]);\n      var splitPath = data.path.split('/');\n      var value = Buffer.allocUnsafe(splitPath.length * 4);\n      data.masterFingerprint.copy(value, 0);\n      var offset = 4;\n      splitPath.slice(1).forEach(function (level) {\n        var isHard = level.slice(-1) === \"'\";\n        var num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n        if (isHard) num += 0x80000000;\n        value.writeUInt32LE(num, offset);\n        offset += 4;\n      });\n      return {\n        key: key,\n        value: value\n      };\n    }\n    var expected = '{ masterFingerprint: Buffer; pubkey: Buffer; path: string; }';\n    function check(data) {\n      return Buffer.isBuffer(data.pubkey) && Buffer.isBuffer(data.masterFingerprint) && typeof data.path === 'string' && isValidPubkey(data.pubkey) && data.masterFingerprint.length === 4;\n    }\n    function canAddToArray(array, item, dupeSet) {\n      var dupeString = item.pubkey.toString('hex');\n      if (dupeSet.has(dupeString)) return false;\n      dupeSet.add(dupeString);\n      return array.filter(function (v) {\n        return v.pubkey.equals(item.pubkey);\n      }).length === 0;\n    }\n    return {\n      decode: decode,\n      encode: encode,\n      check: check,\n      expected: expected,\n      canAddToArray: canAddToArray\n    };\n  }\n  exports.makeConverter = makeConverter;\n});","lineCount":80,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,3,0],[8,6,3,6,"range"],[8,11,3,11],[8,14,3,14],[8,23,3,6,"range"],[8,28,3,11,"range"],[8,29,3,14,"n"],[8,30,3,15],[9,4,3,15],[9,11,3,15,"_toConsumableArray"],[9,29,3,15],[9,30,3,23,"Array"],[9,35,3,28],[9,36,3,29,"n"],[9,37,3,30],[9,38,3,31],[9,39,3,32,"keys"],[9,43,3,36],[9,44,3,37],[9,45,3,38],[10,2,3,38],[10,3,3,39],[11,2,4,0],[11,6,4,6,"isValidDERKey"],[11,19,4,19],[11,22,4,22],[11,31,4,6,"isValidDERKey"],[11,44,4,19,"isValidDERKey"],[11,45,4,22,"pubkey"],[11,51,4,28],[12,4,4,28],[12,11,5,3,"pubkey"],[12,17,5,9],[12,18,5,10,"length"],[12,24,5,16],[12,29,5,21],[12,31,5,23],[12,35,5,27],[12,36,5,28],[12,37,5,29],[12,39,5,31],[12,40,5,32],[12,41,5,33],[12,42,5,34,"includes"],[12,50,5,42],[12,51,5,43,"pubkey"],[12,57,5,49],[12,58,5,50],[12,59,5,51],[12,60,5,52],[12,61,5,53],[12,65,6,3,"pubkey"],[12,71,6,9],[12,72,6,10,"length"],[12,78,6,16],[12,83,6,21],[12,85,6,23],[12,89,6,27],[12,90,6,28],[12,95,6,33,"pubkey"],[12,101,6,39],[12,102,6,40],[12,103,6,41],[12,104,6,43],[13,2,6,43],[14,2,7,0],[14,11,7,9,"makeConverter"],[14,24,7,22,"makeConverter"],[14,25,7,23,"TYPE_BYTE"],[14,34,7,32],[14,36,7,65],[15,4,7,65],[15,8,7,34,"isValidPubkey"],[15,21,7,47],[15,24,7,47,"arguments"],[15,33,7,47],[15,34,7,47,"length"],[15,40,7,47],[15,48,7,47,"arguments"],[15,57,7,47],[15,65,7,47,"undefined"],[15,74,7,47],[15,77,7,47,"arguments"],[15,86,7,47],[15,92,7,50,"isValidDERKey"],[15,105,7,63],[16,4,8,2],[16,13,8,11,"decode"],[16,19,8,17,"decode"],[16,20,8,18,"keyVal"],[16,26,8,24],[16,28,8,26],[17,6,9,4],[17,10,9,8,"keyVal"],[17,16,9,14],[17,17,9,15,"key"],[17,20,9,18],[17,21,9,19],[17,22,9,20],[17,23,9,21],[17,28,9,26,"TYPE_BYTE"],[17,37,9,35],[17,39,9,37],[18,8,10,6],[18,14,10,12],[18,18,10,16,"Error"],[18,23,10,21],[18,24,11,8],[18,84,11,68],[18,87,12,10,"keyVal"],[18,93,12,16],[18,94,12,17,"key"],[18,97,12,20],[18,98,12,21,"toString"],[18,106,12,29],[18,107,12,30],[18,112,12,35],[18,113,13,6],[18,114,13,7],[19,6,14,4],[20,6,15,4],[20,10,15,10,"pubkey"],[20,16,15,16],[20,19,15,19,"keyVal"],[20,25,15,25],[20,26,15,26,"key"],[20,29,15,29],[20,30,15,30,"slice"],[20,35,15,35],[20,36,15,36],[20,37,15,37],[20,38,15,38],[21,6,16,4],[21,10,16,8],[21,11,16,9,"isValidPubkey"],[21,24,16,22],[21,25,16,23,"pubkey"],[21,31,16,29],[21,32,16,30],[21,34,16,32],[22,8,17,6],[22,14,17,12],[22,18,17,16,"Error"],[22,23,17,21],[22,24,18,8],[22,84,18,68],[22,87,19,10,"keyVal"],[22,93,19,16],[22,94,19,17,"key"],[22,97,19,20],[22,98,19,21,"toString"],[22,106,19,29],[22,107,19,30],[22,112,19,35],[22,113,20,6],[22,114,20,7],[23,6,21,4],[24,6,22,4],[24,10,22,9,"keyVal"],[24,16,22,15],[24,17,22,16,"value"],[24,22,22,21],[24,23,22,22,"length"],[24,29,22,28],[24,32,22,31],[24,33,22,32],[24,36,22,36],[24,37,22,37],[24,42,22,42],[24,43,22,43],[24,45,22,45],[25,8,23,6],[25,14,23,12],[25,18,23,16,"Error"],[25,23,23,21],[25,24,24,8],[25,99,25,6],[25,100,25,7],[26,6,26,4],[27,6,27,4],[27,10,27,10,"data"],[27,14,27,14],[27,17,27,17],[28,8,28,6,"masterFingerprint"],[28,25,28,23],[28,27,28,25,"keyVal"],[28,33,28,31],[28,34,28,32,"value"],[28,39,28,37],[28,40,28,38,"slice"],[28,45,28,43],[28,46,28,44],[28,47,28,45],[28,49,28,47],[28,50,28,48],[28,51,28,49],[29,8,29,6,"pubkey"],[29,14,29,12],[29,16,29,6,"pubkey"],[29,22,29,12],[30,8,30,6,"path"],[30,12,30,10],[30,14,30,12],[31,6,31,4],[31,7,31,5],[32,6,32,4],[32,11,32,9],[32,15,32,15,"i"],[32,16,32,16],[32,20,32,20,"range"],[32,25,32,25],[32,26,32,26,"keyVal"],[32,32,32,32],[32,33,32,33,"value"],[32,38,32,38],[32,39,32,39,"length"],[32,45,32,45],[32,48,32,48],[32,49,32,49],[32,52,32,52],[32,53,32,53],[32,54,32,54],[32,56,32,56],[33,8,33,6],[33,12,33,12,"val"],[33,15,33,15],[33,18,33,18,"keyVal"],[33,24,33,24],[33,25,33,25,"value"],[33,30,33,30],[33,31,33,31,"readUInt32LE"],[33,43,33,43],[33,44,33,44,"i"],[33,45,33,45],[33,48,33,48],[33,49,33,49],[33,52,33,52],[33,53,33,53],[33,54,33,54],[34,8,34,6],[34,12,34,12,"isHard"],[34,18,34,18],[34,21,34,21],[34,22,34,22],[34,24,34,24,"val"],[34,27,34,27],[34,30,34,30],[34,40,34,40],[34,41,34,41],[35,8,35,6],[35,12,35,12,"idx"],[35,15,35,15],[35,18,35,18,"val"],[35,21,35,21],[35,24,35,24],[35,34,35,34],[36,8,36,6,"data"],[36,12,36,10],[36,13,36,11,"path"],[36,17,36,15],[36,21,36,19],[36,24,36,22],[36,27,36,25,"idx"],[36,30,36,28],[36,31,36,29,"toString"],[36,39,36,37],[36,40,36,38],[36,42,36,40],[36,43,36,41],[36,47,36,45,"isHard"],[36,53,36,51],[36,56,36,54],[36,59,36,57],[36,62,36,60],[36,64,36,62],[36,65,36,63],[37,6,37,4],[38,6,38,4],[38,13,38,11,"data"],[38,17,38,15],[39,4,39,2],[40,4,40,2],[40,13,40,11,"encode"],[40,19,40,17,"encode"],[40,20,40,18,"data"],[40,24,40,22],[40,26,40,24],[41,6,41,4],[41,10,41,10,"head"],[41,14,41,14],[41,17,41,17,"Buffer"],[41,23,41,23],[41,24,41,24,"from"],[41,28,41,28],[41,29,41,29],[41,30,41,30,"TYPE_BYTE"],[41,39,41,39],[41,40,41,40],[41,41,41,41],[42,6,42,4],[42,10,42,10,"key"],[42,13,42,13],[42,16,42,16,"Buffer"],[42,22,42,22],[42,23,42,23,"concat"],[42,29,42,29],[42,30,42,30],[42,31,42,31,"head"],[42,35,42,35],[42,37,42,37,"data"],[42,41,42,41],[42,42,42,42,"pubkey"],[42,48,42,48],[42,49,42,49],[42,50,42,50],[43,6,43,4],[43,10,43,10,"splitPath"],[43,19,43,19],[43,22,43,22,"data"],[43,26,43,26],[43,27,43,27,"path"],[43,31,43,31],[43,32,43,32,"split"],[43,37,43,37],[43,38,43,38],[43,41,43,41],[43,42,43,42],[44,6,44,4],[44,10,44,10,"value"],[44,15,44,15],[44,18,44,18,"Buffer"],[44,24,44,24],[44,25,44,25,"allocUnsafe"],[44,36,44,36],[44,37,44,37,"splitPath"],[44,46,44,46],[44,47,44,47,"length"],[44,53,44,53],[44,56,44,56],[44,57,44,57],[44,58,44,58],[45,6,45,4,"data"],[45,10,45,8],[45,11,45,9,"masterFingerprint"],[45,28,45,26],[45,29,45,27,"copy"],[45,33,45,31],[45,34,45,32,"value"],[45,39,45,37],[45,41,45,39],[45,42,45,40],[45,43,45,41],[46,6,46,4],[46,10,46,8,"offset"],[46,16,46,14],[46,19,46,17],[46,20,46,18],[47,6,47,4,"splitPath"],[47,15,47,13],[47,16,47,14,"slice"],[47,21,47,19],[47,22,47,20],[47,23,47,21],[47,24,47,22],[47,25,47,23,"forEach"],[47,32,47,30],[47,33,47,31],[47,43,47,31,"level"],[47,48,47,36],[47,50,47,40],[48,8,48,6],[48,12,48,12,"isHard"],[48,18,48,18],[48,21,48,21,"level"],[48,26,48,26],[48,27,48,27,"slice"],[48,32,48,32],[48,33,48,33],[48,34,48,34],[48,35,48,35],[48,36,48,36],[48,41,48,41],[48,44,48,44],[49,8,49,6],[49,12,49,10,"num"],[49,15,49,13],[49,18,49,16],[49,28,49,26],[49,31,49,29,"parseInt"],[49,39,49,37],[49,40,49,38,"isHard"],[49,46,49,44],[49,49,49,47,"level"],[49,54,49,52],[49,55,49,53,"slice"],[49,60,49,58],[49,61,49,59],[49,62,49,60],[49,64,49,62],[49,65,49,63],[49,66,49,64],[49,67,49,65],[49,70,49,68,"level"],[49,75,49,73],[49,77,49,75],[49,79,49,77],[49,80,49,78],[50,8,50,6],[50,12,50,10,"isHard"],[50,18,50,16],[50,20,50,18,"num"],[50,23,50,21],[50,27,50,25],[50,37,50,35],[51,8,51,6,"value"],[51,13,51,11],[51,14,51,12,"writeUInt32LE"],[51,27,51,25],[51,28,51,26,"num"],[51,31,51,29],[51,33,51,31,"offset"],[51,39,51,37],[51,40,51,38],[52,8,52,6,"offset"],[52,14,52,12],[52,18,52,16],[52,19,52,17],[53,6,53,4],[53,7,53,5],[53,8,53,6],[54,6,54,4],[54,13,54,11],[55,8,55,6,"key"],[55,11,55,9],[55,13,55,6,"key"],[55,16,55,9],[56,8,56,6,"value"],[56,13,56,11],[56,15,56,6,"value"],[57,6,57,4],[57,7,57,5],[58,4,58,2],[59,4,59,2],[59,8,59,8,"expected"],[59,16,59,16],[59,19,60,4],[59,81,60,66],[60,4,61,2],[60,13,61,11,"check"],[60,18,61,16,"check"],[60,19,61,17,"data"],[60,23,61,21],[60,25,61,23],[61,6,62,4],[61,13,63,6,"Buffer"],[61,19,63,12],[61,20,63,13,"isBuffer"],[61,28,63,21],[61,29,63,22,"data"],[61,33,63,26],[61,34,63,27,"pubkey"],[61,40,63,33],[61,41,63,34],[61,45,64,6,"Buffer"],[61,51,64,12],[61,52,64,13,"isBuffer"],[61,60,64,21],[61,61,64,22,"data"],[61,65,64,26],[61,66,64,27,"masterFingerprint"],[61,83,64,44],[61,84,64,45],[61,88,65,6],[61,95,65,13,"data"],[61,99,65,17],[61,100,65,18,"path"],[61,104,65,22],[61,109,65,27],[61,117,65,35],[61,121,66,6,"isValidPubkey"],[61,134,66,19],[61,135,66,20,"data"],[61,139,66,24],[61,140,66,25,"pubkey"],[61,146,66,31],[61,147,66,32],[61,151,67,6,"data"],[61,155,67,10],[61,156,67,11,"masterFingerprint"],[61,173,67,28],[61,174,67,29,"length"],[61,180,67,35],[61,185,67,40],[61,186,67,41],[62,4,69,2],[63,4,70,2],[63,13,70,11,"canAddToArray"],[63,26,70,24,"canAddToArray"],[63,27,70,25,"array"],[63,32,70,30],[63,34,70,32,"item"],[63,38,70,36],[63,40,70,38,"dupeSet"],[63,47,70,45],[63,49,70,47],[64,6,71,4],[64,10,71,10,"dupeString"],[64,20,71,20],[64,23,71,23,"item"],[64,27,71,27],[64,28,71,28,"pubkey"],[64,34,71,34],[64,35,71,35,"toString"],[64,43,71,43],[64,44,71,44],[64,49,71,49],[64,50,71,50],[65,6,72,4],[65,10,72,8,"dupeSet"],[65,17,72,15],[65,18,72,16,"has"],[65,21,72,19],[65,22,72,20,"dupeString"],[65,32,72,30],[65,33,72,31],[65,35,72,33],[65,42,72,40],[65,47,72,45],[66,6,73,4,"dupeSet"],[66,13,73,11],[66,14,73,12,"add"],[66,17,73,15],[66,18,73,16,"dupeString"],[66,28,73,26],[66,29,73,27],[67,6,74,4],[67,13,74,11,"array"],[67,18,74,16],[67,19,74,17,"filter"],[67,25,74,23],[67,26,74,24],[67,36,74,24,"v"],[67,37,74,25],[68,8,74,25],[68,15,74,29,"v"],[68,16,74,30],[68,17,74,31,"pubkey"],[68,23,74,37],[68,24,74,38,"equals"],[68,30,74,44],[68,31,74,45,"item"],[68,35,74,49],[68,36,74,50,"pubkey"],[68,42,74,56],[68,43,74,57],[69,6,74,57],[69,8,74,58],[69,9,74,59,"length"],[69,15,74,65],[69,20,74,70],[69,21,74,71],[70,4,75,2],[71,4,76,2],[71,11,76,9],[72,6,77,4,"decode"],[72,12,77,10],[72,14,77,4,"decode"],[72,20,77,10],[73,6,78,4,"encode"],[73,12,78,10],[73,14,78,4,"encode"],[73,20,78,10],[74,6,79,4,"check"],[74,11,79,9],[74,13,79,4,"check"],[74,18,79,9],[75,6,80,4,"expected"],[75,14,80,12],[75,16,80,4,"expected"],[75,24,80,12],[76,6,81,4,"canAddToArray"],[76,19,81,17],[76,21,81,4,"canAddToArray"],[77,4,82,2],[77,5,82,3],[78,2,83,0],[79,2,84,0,"exports"],[79,9,84,7],[79,10,84,8,"makeConverter"],[79,23,84,21],[79,26,84,24,"makeConverter"],[79,39,84,37],[80,0,84,38],[80,3]],"functionMap":{"names":["<global>","range","isValidDERKey","makeConverter","decode","encode","splitPath.slice.forEach$argument_0","check","canAddToArray","array.filter$argument_0"],"mappings":"AAA;cCE,yBD;sBEC;2CFE;AGC;ECC;GD+B;EEC;+BCO;KDM;GFK;EIG;GJQ;EKC;wBCI,iCD;GLC;CHQ"}},"type":"js/module"}]}