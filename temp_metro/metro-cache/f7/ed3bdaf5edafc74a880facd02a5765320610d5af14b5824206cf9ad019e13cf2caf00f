{"dependencies":[{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}},{"start":{"line":6,"column":14,"index":204},"end":{"line":6,"column":34,"index":224}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"../networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":19,"index":96},"end":{"line":3,"column":41,"index":118}}],"key":"FiQD0tNYEY+NhtBSAnO78dixigg="}},{"name":"./lazy","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":171},"end":{"line":5,"column":30,"index":188}},{"start":{"line":5,"column":13,"index":171},"end":{"line":5,"column":30,"index":188}}],"key":"g4ye5UxsflvXhbFiS+2Co5sloz8="}},{"name":"../script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":136},"end":{"line":4,"column":36,"index":156}},{"start":{"line":7,"column":12,"index":238},"end":{"line":7,"column":23,"index":249}},{"start":{"line":4,"column":16,"index":136},"end":{"line":4,"column":36,"index":156}},{"start":{"line":4,"column":16,"index":136},"end":{"line":4,"column":36,"index":156}},{"start":{"line":7,"column":12,"index":238},"end":{"line":7,"column":23,"index":249}}],"key":"XOqjZpHZAfPtXF1u3MudqqFxY0c="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function stacksEqual(a, b) {\n    if (a.length !== b.length) return false;\n    return a.every(function (x, i) {\n      return x.equals(b[i]);\n    });\n  }\n  // output: OP_RETURN ...\n  function p2data(a, opts) {\n    if (!a.data && !a.output) throw new TypeError('Not enough data');\n    opts = Object.assign({\n      validate: true\n    }, opts || {});\n    _$$_REQUIRE(_dependencyMap[0], \"typeforce\")({\n      network: _$$_REQUIRE(_dependencyMap[0], \"typeforce\").maybe(_$$_REQUIRE(_dependencyMap[0], \"typeforce\").Object),\n      output: _$$_REQUIRE(_dependencyMap[0], \"typeforce\").maybe(_$$_REQUIRE(_dependencyMap[0], \"typeforce\").Buffer),\n      data: _$$_REQUIRE(_dependencyMap[0], \"typeforce\").maybe(_$$_REQUIRE(_dependencyMap[0], \"typeforce\").arrayOf(_$$_REQUIRE(_dependencyMap[0], \"typeforce\").Buffer))\n    }, a);\n    var network = a.network || _$$_REQUIRE(_dependencyMap[1], \"../networks\").bitcoin;\n    var o = {\n      name: 'embed',\n      network: network\n    };\n    _$$_REQUIRE(_dependencyMap[2], \"./lazy\").prop(o, 'output', function () {\n      if (!a.data) return;\n      return _$$_REQUIRE(_dependencyMap[3], \"../script\").compile([_$$_REQUIRE(_dependencyMap[3], \"../script\").OPS.OP_RETURN].concat(a.data));\n    });\n    _$$_REQUIRE(_dependencyMap[2], \"./lazy\").prop(o, 'data', function () {\n      if (!a.output) return;\n      return _$$_REQUIRE(_dependencyMap[3], \"../script\").decompile(a.output).slice(1);\n    });\n    // extended validation\n    if (opts.validate) {\n      if (a.output) {\n        var chunks = _$$_REQUIRE(_dependencyMap[3], \"../script\").decompile(a.output);\n        if (chunks[0] !== _$$_REQUIRE(_dependencyMap[3], \"../script\").OPS.OP_RETURN) throw new TypeError('Output is invalid');\n        if (!chunks.slice(1).every(_$$_REQUIRE(_dependencyMap[0], \"typeforce\").Buffer)) throw new TypeError('Output is invalid');\n        if (a.data && !stacksEqual(a.data, o.data)) throw new TypeError('Data mismatch');\n      }\n    }\n    return Object.assign(o, a);\n  }\n  exports.p2data = p2data;\n});","lineCount":49,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,8,0],[7,11,8,9,"stacksEqual"],[7,22,8,20,"stacksEqual"],[7,23,8,21,"a"],[7,24,8,22],[7,26,8,24,"b"],[7,27,8,25],[7,29,8,27],[8,4,9,2],[8,8,9,6,"a"],[8,9,9,7],[8,10,9,8,"length"],[8,16,9,14],[8,21,9,19,"b"],[8,22,9,20],[8,23,9,21,"length"],[8,29,9,27],[8,31,9,29],[8,38,9,36],[8,43,9,41],[9,4,10,2],[9,11,10,9,"a"],[9,12,10,10],[9,13,10,11,"every"],[9,18,10,16],[9,19,10,17],[9,29,10,18,"x"],[9,30,10,19],[9,32,10,21,"i"],[9,33,10,22],[9,35,10,27],[10,6,11,4],[10,13,11,11,"x"],[10,14,11,12],[10,15,11,13,"equals"],[10,21,11,19],[10,22,11,20,"b"],[10,23,11,21],[10,24,11,22,"i"],[10,25,11,23],[10,26,11,24],[10,27,11,25],[11,4,12,2],[11,5,12,3],[11,6,12,4],[12,2,13,0],[13,2,14,0],[14,2,15,0],[14,11,15,9,"p2data"],[14,17,15,15,"p2data"],[14,18,15,16,"a"],[14,19,15,17],[14,21,15,19,"opts"],[14,25,15,23],[14,27,15,25],[15,4,16,2],[15,8,16,6],[15,9,16,7,"a"],[15,10,16,8],[15,11,16,9,"data"],[15,15,16,13],[15,19,16,17],[15,20,16,18,"a"],[15,21,16,19],[15,22,16,20,"output"],[15,28,16,26],[15,30,16,28],[15,36,16,34],[15,40,16,38,"TypeError"],[15,49,16,47],[15,50,16,48],[15,67,16,65],[15,68,16,66],[16,4,17,2,"opts"],[16,8,17,6],[16,11,17,9,"Object"],[16,17,17,15],[16,18,17,16,"assign"],[16,24,17,22],[16,25,17,23],[17,6,17,25,"validate"],[17,14,17,33],[17,16,17,35],[18,4,17,40],[18,5,17,41],[18,7,17,43,"opts"],[18,11,17,47],[18,15,17,51],[18,16,17,52],[18,17,17,53],[18,18,17,54],[19,4,18,2,"_$$_REQUIRE"],[19,15,18,2],[19,16,18,2,"_dependencyMap"],[19,30,18,2],[19,48,19,4],[20,6,20,6,"network"],[20,13,20,13],[20,15,20,15,"_$$_REQUIRE"],[20,26,20,15],[20,27,20,15,"_dependencyMap"],[20,41,20,15],[20,59,20,21,"maybe"],[20,64,20,26],[20,65,20,27,"_$$_REQUIRE"],[20,76,20,27],[20,77,20,27,"_dependencyMap"],[20,91,20,27],[20,109,20,33,"Object"],[20,115,20,39],[20,116,20,40],[21,6,21,6,"output"],[21,12,21,12],[21,14,21,14,"_$$_REQUIRE"],[21,25,21,14],[21,26,21,14,"_dependencyMap"],[21,40,21,14],[21,58,21,20,"maybe"],[21,63,21,25],[21,64,21,26,"_$$_REQUIRE"],[21,75,21,26],[21,76,21,26,"_dependencyMap"],[21,90,21,26],[21,108,21,32,"Buffer"],[21,114,21,38],[21,115,21,39],[22,6,22,6,"data"],[22,10,22,10],[22,12,22,12,"_$$_REQUIRE"],[22,23,22,12],[22,24,22,12,"_dependencyMap"],[22,38,22,12],[22,56,22,18,"maybe"],[22,61,22,23],[22,62,22,24,"_$$_REQUIRE"],[22,73,22,24],[22,74,22,24,"_dependencyMap"],[22,88,22,24],[22,106,22,30,"arrayOf"],[22,113,22,37],[22,114,22,38,"_$$_REQUIRE"],[22,125,22,38],[22,126,22,38,"_dependencyMap"],[22,140,22,38],[22,158,22,44,"Buffer"],[22,164,22,50],[22,165,22,51],[23,4,23,4],[23,5,23,5],[23,7,24,4,"a"],[23,8,25,2],[23,9,25,3],[24,4,26,2],[24,8,26,8,"network"],[24,15,26,15],[24,18,26,18,"a"],[24,19,26,19],[24,20,26,20,"network"],[24,27,26,27],[24,31,26,31,"_$$_REQUIRE"],[24,42,26,31],[24,43,26,31,"_dependencyMap"],[24,57,26,31],[24,77,26,42,"bitcoin"],[24,84,26,49],[25,4,27,2],[25,8,27,8,"o"],[25,9,27,9],[25,12,27,12],[26,6,27,14,"name"],[26,10,27,18],[26,12,27,20],[26,19,27,27],[27,6,27,29,"network"],[27,13,27,36],[27,15,27,29,"network"],[28,4,27,37],[28,5,27,38],[29,4,28,2,"_$$_REQUIRE"],[29,15,28,2],[29,16,28,2,"_dependencyMap"],[29,30,28,2],[29,45,28,7,"prop"],[29,49,28,11],[29,50,28,12,"o"],[29,51,28,13],[29,53,28,15],[29,61,28,23],[29,63,28,25],[29,75,28,31],[30,6,29,4],[30,10,29,8],[30,11,29,9,"a"],[30,12,29,10],[30,13,29,11,"data"],[30,17,29,15],[30,19,29,17],[31,6,30,4],[31,13,30,11,"_$$_REQUIRE"],[31,24,30,11],[31,25,30,11,"_dependencyMap"],[31,39,30,11],[31,57,30,19,"compile"],[31,64,30,26],[31,65,30,27],[31,66,30,28,"_$$_REQUIRE"],[31,77,30,28],[31,78,30,28,"_dependencyMap"],[31,92,30,28],[31,110,30,28,"OPS"],[31,113,30,28],[31,114,30,32,"OP_RETURN"],[31,123,30,41],[31,124,30,42],[31,125,30,43,"concat"],[31,131,30,49],[31,132,30,50,"a"],[31,133,30,51],[31,134,30,52,"data"],[31,138,30,56],[31,139,30,57],[31,140,30,58],[32,4,31,2],[32,5,31,3],[32,6,31,4],[33,4,32,2,"_$$_REQUIRE"],[33,15,32,2],[33,16,32,2,"_dependencyMap"],[33,30,32,2],[33,45,32,7,"prop"],[33,49,32,11],[33,50,32,12,"o"],[33,51,32,13],[33,53,32,15],[33,59,32,21],[33,61,32,23],[33,73,32,29],[34,6,33,4],[34,10,33,8],[34,11,33,9,"a"],[34,12,33,10],[34,13,33,11,"output"],[34,19,33,17],[34,21,33,19],[35,6,34,4],[35,13,34,11,"_$$_REQUIRE"],[35,24,34,11],[35,25,34,11,"_dependencyMap"],[35,39,34,11],[35,57,34,19,"decompile"],[35,66,34,28],[35,67,34,29,"a"],[35,68,34,30],[35,69,34,31,"output"],[35,75,34,37],[35,76,34,38],[35,77,34,39,"slice"],[35,82,34,44],[35,83,34,45],[35,84,34,46],[35,85,34,47],[36,4,35,2],[36,5,35,3],[36,6,35,4],[37,4,36,2],[38,4,37,2],[38,8,37,6,"opts"],[38,12,37,10],[38,13,37,11,"validate"],[38,21,37,19],[38,23,37,21],[39,6,38,4],[39,10,38,8,"a"],[39,11,38,9],[39,12,38,10,"output"],[39,18,38,16],[39,20,38,18],[40,8,39,6],[40,12,39,12,"chunks"],[40,18,39,18],[40,21,39,21,"_$$_REQUIRE"],[40,32,39,21],[40,33,39,21,"_dependencyMap"],[40,47,39,21],[40,65,39,29,"decompile"],[40,74,39,38],[40,75,39,39,"a"],[40,76,39,40],[40,77,39,41,"output"],[40,83,39,47],[40,84,39,48],[41,8,40,6],[41,12,40,10,"chunks"],[41,18,40,16],[41,19,40,17],[41,20,40,18],[41,21,40,19],[41,26,40,24,"_$$_REQUIRE"],[41,37,40,24],[41,38,40,24,"_dependencyMap"],[41,52,40,24],[41,70,40,24,"OPS"],[41,73,40,24],[41,74,40,28,"OP_RETURN"],[41,83,40,37],[41,85,40,39],[41,91,40,45],[41,95,40,49,"TypeError"],[41,104,40,58],[41,105,40,59],[41,124,40,78],[41,125,40,79],[42,8,41,6],[42,12,41,10],[42,13,41,11,"chunks"],[42,19,41,17],[42,20,41,18,"slice"],[42,25,41,23],[42,26,41,24],[42,27,41,25],[42,28,41,26],[42,29,41,27,"every"],[42,34,41,32],[42,35,41,33,"_$$_REQUIRE"],[42,46,41,33],[42,47,41,33,"_dependencyMap"],[42,61,41,33],[42,79,41,39,"Buffer"],[42,85,41,45],[42,86,41,46],[42,88,42,8],[42,94,42,14],[42,98,42,18,"TypeError"],[42,107,42,27],[42,108,42,28],[42,127,42,47],[42,128,42,48],[43,8,43,6],[43,12,43,10,"a"],[43,13,43,11],[43,14,43,12,"data"],[43,18,43,16],[43,22,43,20],[43,23,43,21,"stacksEqual"],[43,34,43,32],[43,35,43,33,"a"],[43,36,43,34],[43,37,43,35,"data"],[43,41,43,39],[43,43,43,41,"o"],[43,44,43,42],[43,45,43,43,"data"],[43,49,43,47],[43,50,43,48],[43,52,44,8],[43,58,44,14],[43,62,44,18,"TypeError"],[43,71,44,27],[43,72,44,28],[43,87,44,43],[43,88,44,44],[44,6,45,4],[45,4,46,2],[46,4,47,2],[46,11,47,9,"Object"],[46,17,47,15],[46,18,47,16,"assign"],[46,24,47,22],[46,25,47,23,"o"],[46,26,47,24],[46,28,47,26,"a"],[46,29,47,27],[46,30,47,28],[47,2,48,0],[48,2,49,0,"exports"],[48,9,49,7],[48,10,49,8,"p2data"],[48,16,49,14],[48,19,49,17,"p2data"],[48,25,49,23],[49,0,49,24],[49,3]],"functionMap":{"names":["<global>","stacksEqual","a.every$argument_0","p2data","lazy.prop$argument_2"],"mappings":"AAA;ACO;iBCE;GDE;CDC;AGE;yBCa;GDG;uBCC;GDG;CHa"}},"type":"js/module"}]}