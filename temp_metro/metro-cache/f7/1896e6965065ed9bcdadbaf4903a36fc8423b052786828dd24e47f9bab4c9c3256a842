{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":208,"column":0,"index":6014}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":208,"column":0,"index":6014}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./types.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":50,"column":27,"index":1485},"end":{"line":50,"column":49,"index":1507}}],"key":"WQrrQSPUEy7ImSCQXvQAA3uXTs4="}},{"name":"varuint-bitcoin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":51,"column":29,"index":1539},"end":{"line":51,"column":55,"index":1565}}],"key":"d/MLbboLwipJSIgxTfEgzKAp95s="}},{"name":"valibot","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":53,"column":23,"index":1618},"end":{"line":53,"column":41,"index":1636}}],"key":"rRKi8w2T+ZK7uQFy8MRs6k6j9DA="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":54,"column":27,"index":1666},"end":{"line":54,"column":54,"index":1693}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, 'default', {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o['default'] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.BufferReader = exports.BufferWriter = exports.varuint = void 0;\n  exports.reverseBuffer = reverseBuffer;\n  exports.cloneBuffer = cloneBuffer;\n  var types = __importStar(_$$_REQUIRE(_dependencyMap[2], \"./types.cjs\"));\n  var varuint = __importStar(_$$_REQUIRE(_dependencyMap[3], \"varuint-bitcoin\"));\n  exports.varuint = varuint;\n  var v = __importStar(_$$_REQUIRE(_dependencyMap[4], \"valibot\"));\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[5], \"uint8array-tools\"));\n  var MAX_JS_NUMBER = 0x001fffffffffffff;\n  // https://github.com/feross/buffer/blob/master/index.js#L1127\n  function verifuint(value, max) {\n    if (typeof value !== 'number' && typeof value !== 'bigint') throw new Error('cannot write a non-number as a number');\n    if (value < 0 && value < BigInt(0)) throw new Error('specified a negative value for writing an unsigned value');\n    if (value > max && value > BigInt(max)) throw new Error('RangeError: value out of range');\n    if (Math.floor(Number(value)) !== Number(value)) throw new Error('value has a fractional component');\n  }\n  /**\n   * Reverses the order of bytes in a buffer.\n   * @param buffer - The buffer to reverse.\n   * @returns A new buffer with the bytes reversed.\n   */\n  function reverseBuffer(buffer) {\n    if (buffer.length < 1) return buffer;\n    var j = buffer.length - 1;\n    var tmp = 0;\n    for (var i = 0; i < buffer.length / 2; i++) {\n      tmp = buffer[i];\n      buffer[i] = buffer[j];\n      buffer[j] = tmp;\n      j--;\n    }\n    return buffer;\n  }\n  function cloneBuffer(buffer) {\n    var clone = new Uint8Array(buffer.length);\n    clone.set(buffer);\n    return clone;\n  }\n  /**\n   * Helper class for serialization of bitcoin data types into a pre-allocated buffer.\n   */\n  var BufferWriter = /*#__PURE__*/function () {\n    function BufferWriter(buffer) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      _classCallCheck(this, BufferWriter);\n      this.buffer = buffer;\n      this.offset = offset;\n      v.parse(v.tuple([types.BufferSchema, types.UInt32Schema]), [buffer, offset]);\n    }\n    return _createClass(BufferWriter, [{\n      key: \"writeUInt8\",\n      value: function writeUInt8(i) {\n        this.offset = tools.writeUInt8(this.buffer, this.offset, i);\n      }\n    }, {\n      key: \"writeInt32\",\n      value: function writeInt32(i) {\n        this.offset = tools.writeInt32(this.buffer, this.offset, i, 'LE');\n      }\n    }, {\n      key: \"writeInt64\",\n      value: function writeInt64(i) {\n        this.offset = tools.writeInt64(this.buffer, this.offset, BigInt(i), 'LE');\n      }\n    }, {\n      key: \"writeUInt32\",\n      value: function writeUInt32(i) {\n        this.offset = tools.writeUInt32(this.buffer, this.offset, i, 'LE');\n      }\n    }, {\n      key: \"writeUInt64\",\n      value: function writeUInt64(i) {\n        this.offset = tools.writeUInt64(this.buffer, this.offset, BigInt(i), 'LE');\n      }\n    }, {\n      key: \"writeVarInt\",\n      value: function writeVarInt(i) {\n        var _varuint$encode = varuint.encode(i, this.buffer, this.offset),\n          bytes = _varuint$encode.bytes;\n        this.offset += bytes;\n      }\n    }, {\n      key: \"writeSlice\",\n      value: function writeSlice(slice) {\n        if (this.buffer.length < this.offset + slice.length) {\n          throw new Error('Cannot write slice out of bounds');\n        }\n        this.buffer.set(slice, this.offset);\n        this.offset += slice.length;\n      }\n    }, {\n      key: \"writeVarSlice\",\n      value: function writeVarSlice(slice) {\n        this.writeVarInt(slice.length);\n        this.writeSlice(slice);\n      }\n    }, {\n      key: \"writeVector\",\n      value: function writeVector(vector) {\n        var _this = this;\n        this.writeVarInt(vector.length);\n        vector.forEach(function (buf) {\n          return _this.writeVarSlice(buf);\n        });\n      }\n    }, {\n      key: \"end\",\n      value: function end() {\n        if (this.buffer.length === this.offset) {\n          return this.buffer;\n        }\n        throw new Error(`buffer size ${this.buffer.length}, offset ${this.offset}`);\n      }\n    }], [{\n      key: \"withCapacity\",\n      value: function withCapacity(size) {\n        return new BufferWriter(new Uint8Array(size));\n      }\n    }]);\n  }();\n  exports.BufferWriter = BufferWriter;\n  /**\n   * Helper class for reading of bitcoin data types from a buffer.\n   */\n  var BufferReader = /*#__PURE__*/function () {\n    function BufferReader(buffer) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      _classCallCheck(this, BufferReader);\n      this.buffer = buffer;\n      this.offset = offset;\n      v.parse(v.tuple([types.BufferSchema, types.UInt32Schema]), [buffer, offset]);\n    }\n    return _createClass(BufferReader, [{\n      key: \"readUInt8\",\n      value: function readUInt8() {\n        var result = tools.readUInt8(this.buffer, this.offset);\n        this.offset++;\n        return result;\n      }\n    }, {\n      key: \"readInt32\",\n      value: function readInt32() {\n        var result = tools.readInt32(this.buffer, this.offset, 'LE');\n        this.offset += 4;\n        return result;\n      }\n    }, {\n      key: \"readUInt32\",\n      value: function readUInt32() {\n        var result = tools.readUInt32(this.buffer, this.offset, 'LE');\n        this.offset += 4;\n        return result;\n      }\n    }, {\n      key: \"readInt64\",\n      value: function readInt64() {\n        var result = tools.readInt64(this.buffer, this.offset, 'LE');\n        this.offset += 8;\n        return result;\n      }\n    }, {\n      key: \"readVarInt\",\n      value: function readVarInt() {\n        var _varuint$decode = varuint.decode(this.buffer, this.offset),\n          bigintValue = _varuint$decode.bigintValue,\n          bytes = _varuint$decode.bytes;\n        this.offset += bytes;\n        return bigintValue;\n      }\n    }, {\n      key: \"readSlice\",\n      value: function readSlice(n) {\n        verifuint(n, MAX_JS_NUMBER);\n        var num = Number(n);\n        if (this.buffer.length < this.offset + num) {\n          throw new Error('Cannot read slice out of bounds');\n        }\n        var result = this.buffer.slice(this.offset, this.offset + num);\n        this.offset += num;\n        return result;\n      }\n    }, {\n      key: \"readVarSlice\",\n      value: function readVarSlice() {\n        return this.readSlice(this.readVarInt());\n      }\n    }, {\n      key: \"readVector\",\n      value: function readVector() {\n        var count = this.readVarInt();\n        var vector = [];\n        for (var i = 0; i < count; i++) vector.push(this.readVarSlice());\n        return vector;\n      }\n    }]);\n  }();\n  exports.BufferReader = BufferReader;\n});","lineCount":237,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0],[6,6,2,4,"__createBinding"],[6,21,2,19],[6,24,3,3],[6,28,3,7],[6,32,3,11],[6,36,3,15],[6,37,3,16,"__createBinding"],[6,52,3,31],[6,57,4,3,"Object"],[6,63,4,9],[6,64,4,10,"create"],[6,70,4,16],[6,73,5,6],[6,83,5,16,"o"],[6,84,5,17],[6,86,5,19,"m"],[6,87,5,20],[6,89,5,22,"k"],[6,90,5,23],[6,92,5,25,"k2"],[6,94,5,27],[6,96,5,29],[7,4,6,8],[7,8,6,12,"k2"],[7,10,6,14],[7,15,6,19,"undefined"],[7,24,6,28],[7,26,6,30,"k2"],[7,28,6,32],[7,31,6,35,"k"],[7,32,6,36],[8,4,7,8],[8,8,7,12,"desc"],[8,12,7,16],[8,15,7,19,"Object"],[8,21,7,25],[8,22,7,26,"getOwnPropertyDescriptor"],[8,46,7,50],[8,47,7,51,"m"],[8,48,7,52],[8,50,7,54,"k"],[8,51,7,55],[8,52,7,56],[9,4,8,8],[9,8,9,10],[9,9,9,11,"desc"],[9,13,9,15],[9,18,10,11],[9,23,10,16],[9,27,10,20,"desc"],[9,31,10,24],[9,34,10,27],[9,35,10,28,"m"],[9,36,10,29],[9,37,10,30,"__esModule"],[9,47,10,40],[9,50,10,43,"desc"],[9,54,10,47],[9,55,10,48,"writable"],[9,63,10,56],[9,67,10,60,"desc"],[9,71,10,64],[9,72,10,65,"configurable"],[9,84,10,77],[9,85,10,78],[9,87,11,10],[10,6,12,10,"desc"],[10,10,12,14],[10,13,12,17],[11,8,13,12,"enumerable"],[11,18,13,22],[11,20,13,24],[11,24,13,28],[12,8,14,12,"get"],[12,11,14,15],[12,13,14,17],[12,22,14,12,"get"],[12,25,14,15,"get"],[12,26,14,15],[12,28,14,29],[13,10,15,14],[13,17,15,21,"m"],[13,18,15,22],[13,19,15,23,"k"],[13,20,15,24],[13,21,15,25],[14,8,16,12],[15,6,17,10],[15,7,17,11],[16,4,18,8],[17,4,19,8,"Object"],[17,10,19,14],[17,11,19,15,"defineProperty"],[17,25,19,29],[17,26,19,30,"o"],[17,27,19,31],[17,29,19,33,"k2"],[17,31,19,35],[17,33,19,37,"desc"],[17,37,19,41],[17,38,19,42],[18,2,20,6],[18,3,20,7],[18,6,21,6],[18,16,21,16,"o"],[18,17,21,17],[18,19,21,19,"m"],[18,20,21,20],[18,22,21,22,"k"],[18,23,21,23],[18,25,21,25,"k2"],[18,27,21,27],[18,29,21,29],[19,4,22,8],[19,8,22,12,"k2"],[19,10,22,14],[19,15,22,19,"undefined"],[19,24,22,28],[19,26,22,30,"k2"],[19,28,22,32],[19,31,22,35,"k"],[19,32,22,36],[20,4,23,8,"o"],[20,5,23,9],[20,6,23,10,"k2"],[20,8,23,12],[20,9,23,13],[20,12,23,16,"m"],[20,13,23,17],[20,14,23,18,"k"],[20,15,23,19],[20,16,23,20],[21,2,24,6],[21,3,24,7],[21,4,24,8],[22,2,25,0],[22,6,25,4,"__setModuleDefault"],[22,24,25,22],[22,27,26,3],[22,31,26,7],[22,35,26,11],[22,39,26,15],[22,40,26,16,"__setModuleDefault"],[22,58,26,34],[22,63,27,3,"Object"],[22,69,27,9],[22,70,27,10,"create"],[22,76,27,16],[22,79,28,6],[22,89,28,16,"o"],[22,90,28,17],[22,92,28,19,"v"],[22,93,28,20],[22,95,28,22],[23,4,29,8,"Object"],[23,10,29,14],[23,11,29,15,"defineProperty"],[23,25,29,29],[23,26,29,30,"o"],[23,27,29,31],[23,29,29,33],[23,38,29,42],[23,40,29,44],[24,6,29,46,"enumerable"],[24,16,29,56],[24,18,29,58],[24,22,29,62],[25,6,29,64,"value"],[25,11,29,69],[25,13,29,71,"v"],[26,4,29,73],[26,5,29,74],[26,6,29,75],[27,2,30,6],[27,3,30,7],[27,6,31,6],[27,16,31,16,"o"],[27,17,31,17],[27,19,31,19,"v"],[27,20,31,20],[27,22,31,22],[28,4,32,8,"o"],[28,5,32,9],[28,6,32,10],[28,15,32,19],[28,16,32,20],[28,19,32,23,"v"],[28,20,32,24],[29,2,33,6],[29,3,33,7],[29,4,33,8],[30,2,34,0],[30,6,34,4,"__importStar"],[30,18,34,16],[30,21,35,3],[30,25,35,7],[30,29,35,11],[30,33,35,15],[30,34,35,16,"__importStar"],[30,46,35,28],[30,50,36,2],[30,60,36,12,"mod"],[30,63,36,15],[30,65,36,17],[31,4,37,4],[31,8,37,8,"mod"],[31,11,37,11],[31,15,37,15,"mod"],[31,18,37,18],[31,19,37,19,"__esModule"],[31,29,37,29],[31,31,37,31],[31,38,37,38,"mod"],[31,41,37,41],[32,4,38,4],[32,8,38,8,"result"],[32,14,38,14],[32,17,38,17],[32,18,38,18],[32,19,38,19],[33,4,39,4],[33,8,39,8,"mod"],[33,11,39,11],[33,15,39,15],[33,19,39,19],[33,21,40,6],[33,26,40,11],[33,30,40,15,"k"],[33,31,40,16],[33,35,40,20,"mod"],[33,38,40,23],[33,40,41,8],[33,44,41,12,"k"],[33,45,41,13],[33,50,41,18],[33,59,41,27],[33,63,41,31,"Object"],[33,69,41,37],[33,70,41,38,"prototype"],[33,79,41,47],[33,80,41,48,"hasOwnProperty"],[33,94,41,62],[33,95,41,63,"call"],[33,99,41,67],[33,100,41,68,"mod"],[33,103,41,71],[33,105,41,73,"k"],[33,106,41,74],[33,107,41,75],[33,109,42,10,"__createBinding"],[33,124,42,25],[33,125,42,26,"result"],[33,131,42,32],[33,133,42,34,"mod"],[33,136,42,37],[33,138,42,39,"k"],[33,139,42,40],[33,140,42,41],[34,4,43,4,"__setModuleDefault"],[34,22,43,22],[34,23,43,23,"result"],[34,29,43,29],[34,31,43,31,"mod"],[34,34,43,34],[34,35,43,35],[35,4,44,4],[35,11,44,11,"result"],[35,17,44,17],[36,2,45,2],[36,3,45,3],[37,2,46,0,"Object"],[37,8,46,6],[37,9,46,7,"defineProperty"],[37,23,46,21],[37,24,46,22,"exports"],[37,31,46,29],[37,33,46,31],[37,45,46,43],[37,47,46,45],[38,4,46,47,"value"],[38,9,46,52],[38,11,46,54],[39,2,46,59],[39,3,46,60],[39,4,46,61],[40,2,47,0,"exports"],[40,9,47,7],[40,10,47,8,"BufferReader"],[40,22,47,20],[40,25,47,23,"exports"],[40,32,47,30],[40,33,47,31,"BufferWriter"],[40,45,47,43],[40,48,47,46,"exports"],[40,55,47,53],[40,56,47,54,"varuint"],[40,63,47,61],[40,66,47,64],[40,71,47,69],[40,72,47,70],[41,2,48,0,"exports"],[41,9,48,7],[41,10,48,8,"reverseBuffer"],[41,23,48,21],[41,26,48,24,"reverseBuffer"],[41,39,48,37],[42,2,49,0,"exports"],[42,9,49,7],[42,10,49,8,"cloneBuffer"],[42,21,49,19],[42,24,49,22,"cloneBuffer"],[42,35,49,33],[43,2,50,0],[43,6,50,6,"types"],[43,11,50,11],[43,14,50,14,"__importStar"],[43,26,50,26],[43,27,50,27,"require"],[43,38,50,34],[43,39,50,34,"_dependencyMap"],[43,53,50,34],[43,71,50,48],[43,72,50,49],[43,73,50,50],[44,2,51,0],[44,6,51,6,"varuint"],[44,13,51,13],[44,16,51,16,"__importStar"],[44,28,51,28],[44,29,51,29,"require"],[44,40,51,36],[44,41,51,36,"_dependencyMap"],[44,55,51,36],[44,77,51,54],[44,78,51,55],[44,79,51,56],[45,2,52,0,"exports"],[45,9,52,7],[45,10,52,8,"varuint"],[45,17,52,15],[45,20,52,18,"varuint"],[45,27,52,25],[46,2,53,0],[46,6,53,6,"v"],[46,7,53,7],[46,10,53,10,"__importStar"],[46,22,53,22],[46,23,53,23,"require"],[46,34,53,30],[46,35,53,30,"_dependencyMap"],[46,49,53,30],[46,63,53,40],[46,64,53,41],[46,65,53,42],[47,2,54,0],[47,6,54,6,"tools"],[47,11,54,11],[47,14,54,14,"__importStar"],[47,26,54,26],[47,27,54,27,"require"],[47,38,54,34],[47,39,54,34,"_dependencyMap"],[47,53,54,34],[47,76,54,53],[47,77,54,54],[47,78,54,55],[48,2,55,0],[48,6,55,6,"MAX_JS_NUMBER"],[48,19,55,19],[48,22,55,22],[48,40,55,40],[49,2,56,0],[50,2,57,0],[50,11,57,9,"verifuint"],[50,20,57,18,"verifuint"],[50,21,57,19,"value"],[50,26,57,24],[50,28,57,26,"max"],[50,31,57,29],[50,33,57,31],[51,4,58,2],[51,8,58,6],[51,15,58,13,"value"],[51,20,58,18],[51,25,58,23],[51,33,58,31],[51,37,58,35],[51,44,58,42,"value"],[51,49,58,47],[51,54,58,52],[51,62,58,60],[51,64,59,4],[51,70,59,10],[51,74,59,14,"Error"],[51,79,59,19],[51,80,59,20],[51,119,59,59],[51,120,59,60],[52,4,60,2],[52,8,60,6,"value"],[52,13,60,11],[52,16,60,14],[52,17,60,15],[52,21,60,19,"value"],[52,26,60,24],[52,29,60,27,"BigInt"],[52,35,60,33],[52,36,60,34],[52,37,60,35],[52,38,60,36],[52,40,61,4],[52,46,61,10],[52,50,61,14,"Error"],[52,55,61,19],[52,56,61,20],[52,114,61,78],[52,115,61,79],[53,4,62,2],[53,8,62,6,"value"],[53,13,62,11],[53,16,62,14,"max"],[53,19,62,17],[53,23,62,21,"value"],[53,28,62,26],[53,31,62,29,"BigInt"],[53,37,62,35],[53,38,62,36,"max"],[53,41,62,39],[53,42,62,40],[53,44,63,4],[53,50,63,10],[53,54,63,14,"Error"],[53,59,63,19],[53,60,63,20],[53,92,63,52],[53,93,63,53],[54,4,64,2],[54,8,64,6,"Math"],[54,12,64,10],[54,13,64,11,"floor"],[54,18,64,16],[54,19,64,17,"Number"],[54,25,64,23],[54,26,64,24,"value"],[54,31,64,29],[54,32,64,30],[54,33,64,31],[54,38,64,36,"Number"],[54,44,64,42],[54,45,64,43,"value"],[54,50,64,48],[54,51,64,49],[54,53,65,4],[54,59,65,10],[54,63,65,14,"Error"],[54,68,65,19],[54,69,65,20],[54,103,65,54],[54,104,65,55],[55,2,66,0],[56,2,67,0],[57,0,68,0],[58,0,69,0],[59,0,70,0],[60,0,71,0],[61,2,72,0],[61,11,72,9,"reverseBuffer"],[61,24,72,22,"reverseBuffer"],[61,25,72,23,"buffer"],[61,31,72,29],[61,33,72,31],[62,4,73,2],[62,8,73,6,"buffer"],[62,14,73,12],[62,15,73,13,"length"],[62,21,73,19],[62,24,73,22],[62,25,73,23],[62,27,73,25],[62,34,73,32,"buffer"],[62,40,73,38],[63,4,74,2],[63,8,74,6,"j"],[63,9,74,7],[63,12,74,10,"buffer"],[63,18,74,16],[63,19,74,17,"length"],[63,25,74,23],[63,28,74,26],[63,29,74,27],[64,4,75,2],[64,8,75,6,"tmp"],[64,11,75,9],[64,14,75,12],[64,15,75,13],[65,4,76,2],[65,9,76,7],[65,13,76,11,"i"],[65,14,76,12],[65,17,76,15],[65,18,76,16],[65,20,76,18,"i"],[65,21,76,19],[65,24,76,22,"buffer"],[65,30,76,28],[65,31,76,29,"length"],[65,37,76,35],[65,40,76,38],[65,41,76,39],[65,43,76,41,"i"],[65,44,76,42],[65,46,76,44],[65,48,76,46],[66,6,77,4,"tmp"],[66,9,77,7],[66,12,77,10,"buffer"],[66,18,77,16],[66,19,77,17,"i"],[66,20,77,18],[66,21,77,19],[67,6,78,4,"buffer"],[67,12,78,10],[67,13,78,11,"i"],[67,14,78,12],[67,15,78,13],[67,18,78,16,"buffer"],[67,24,78,22],[67,25,78,23,"j"],[67,26,78,24],[67,27,78,25],[68,6,79,4,"buffer"],[68,12,79,10],[68,13,79,11,"j"],[68,14,79,12],[68,15,79,13],[68,18,79,16,"tmp"],[68,21,79,19],[69,6,80,4,"j"],[69,7,80,5],[69,9,80,7],[70,4,81,2],[71,4,82,2],[71,11,82,9,"buffer"],[71,17,82,15],[72,2,83,0],[73,2,84,0],[73,11,84,9,"cloneBuffer"],[73,22,84,20,"cloneBuffer"],[73,23,84,21,"buffer"],[73,29,84,27],[73,31,84,29],[74,4,85,2],[74,8,85,8,"clone"],[74,13,85,13],[74,16,85,16],[74,20,85,20,"Uint8Array"],[74,30,85,30],[74,31,85,31,"buffer"],[74,37,85,37],[74,38,85,38,"length"],[74,44,85,44],[74,45,85,45],[75,4,86,2,"clone"],[75,9,86,7],[75,10,86,8,"set"],[75,13,86,11],[75,14,86,12,"buffer"],[75,20,86,18],[75,21,86,19],[76,4,87,2],[76,11,87,9,"clone"],[76,16,87,14],[77,2,88,0],[78,2,89,0],[79,0,90,0],[80,0,91,0],[81,2,89,0],[81,6,92,6,"BufferWriter"],[81,18,92,18],[82,4,98,2],[82,13,98,2,"BufferWriter"],[82,26,98,14,"buffer"],[82,32,98,20],[82,34,98,34],[83,6,98,34],[83,10,98,22,"offset"],[83,16,98,28],[83,19,98,28,"arguments"],[83,28,98,28],[83,29,98,28,"length"],[83,35,98,28],[83,43,98,28,"arguments"],[83,52,98,28],[83,60,98,28,"undefined"],[83,69,98,28],[83,72,98,28,"arguments"],[83,81,98,28],[83,87,98,31],[83,88,98,32],[84,6,98,32,"_classCallCheck"],[84,21,98,32],[84,28,98,32,"BufferWriter"],[84,40,98,32],[85,6,99,4],[85,10,99,8],[85,11,99,9,"buffer"],[85,17,99,15],[85,20,99,18,"buffer"],[85,26,99,24],[86,6,100,4],[86,10,100,8],[86,11,100,9,"offset"],[86,17,100,15],[86,20,100,18,"offset"],[86,26,100,24],[87,6,101,4,"v"],[87,7,101,5],[87,8,101,6,"parse"],[87,13,101,11],[87,14,101,12,"v"],[87,15,101,13],[87,16,101,14,"tuple"],[87,21,101,19],[87,22,101,20],[87,23,101,21,"types"],[87,28,101,26],[87,29,101,27,"BufferSchema"],[87,41,101,39],[87,43,101,41,"types"],[87,48,101,46],[87,49,101,47,"UInt32Schema"],[87,61,101,59],[87,62,101,60],[87,63,101,61],[87,65,101,63],[87,66,102,6,"buffer"],[87,72,102,12],[87,74,103,6,"offset"],[87,80,103,12],[87,81,104,5],[87,82,104,6],[88,4,105,2],[89,4,105,3],[89,11,105,3,"_createClass"],[89,23,105,3],[89,24,105,3,"BufferWriter"],[89,36,105,3],[90,6,105,3,"key"],[90,9,105,3],[91,6,105,3,"value"],[91,11,105,3],[91,13,106,2],[91,22,106,2,"writeUInt8"],[91,32,106,12,"writeUInt8"],[91,33,106,13,"i"],[91,34,106,14],[91,36,106,16],[92,8,107,4],[92,12,107,8],[92,13,107,9,"offset"],[92,19,107,15],[92,22,107,18,"tools"],[92,27,107,23],[92,28,107,24,"writeUInt8"],[92,38,107,34],[92,39,107,35],[92,43,107,39],[92,44,107,40,"buffer"],[92,50,107,46],[92,52,107,48],[92,56,107,52],[92,57,107,53,"offset"],[92,63,107,59],[92,65,107,61,"i"],[92,66,107,62],[92,67,107,63],[93,6,108,2],[94,4,108,3],[95,6,108,3,"key"],[95,9,108,3],[96,6,108,3,"value"],[96,11,108,3],[96,13,109,2],[96,22,109,2,"writeInt32"],[96,32,109,12,"writeInt32"],[96,33,109,13,"i"],[96,34,109,14],[96,36,109,16],[97,8,110,4],[97,12,110,8],[97,13,110,9,"offset"],[97,19,110,15],[97,22,110,18,"tools"],[97,27,110,23],[97,28,110,24,"writeInt32"],[97,38,110,34],[97,39,110,35],[97,43,110,39],[97,44,110,40,"buffer"],[97,50,110,46],[97,52,110,48],[97,56,110,52],[97,57,110,53,"offset"],[97,63,110,59],[97,65,110,61,"i"],[97,66,110,62],[97,68,110,64],[97,72,110,68],[97,73,110,69],[98,6,111,2],[99,4,111,3],[100,6,111,3,"key"],[100,9,111,3],[101,6,111,3,"value"],[101,11,111,3],[101,13,112,2],[101,22,112,2,"writeInt64"],[101,32,112,12,"writeInt64"],[101,33,112,13,"i"],[101,34,112,14],[101,36,112,16],[102,8,113,4],[102,12,113,8],[102,13,113,9,"offset"],[102,19,113,15],[102,22,113,18,"tools"],[102,27,113,23],[102,28,113,24,"writeInt64"],[102,38,113,34],[102,39,113,35],[102,43,113,39],[102,44,113,40,"buffer"],[102,50,113,46],[102,52,113,48],[102,56,113,52],[102,57,113,53,"offset"],[102,63,113,59],[102,65,113,61,"BigInt"],[102,71,113,67],[102,72,113,68,"i"],[102,73,113,69],[102,74,113,70],[102,76,113,72],[102,80,113,76],[102,81,113,77],[103,6,114,2],[104,4,114,3],[105,6,114,3,"key"],[105,9,114,3],[106,6,114,3,"value"],[106,11,114,3],[106,13,115,2],[106,22,115,2,"writeUInt32"],[106,33,115,13,"writeUInt32"],[106,34,115,14,"i"],[106,35,115,15],[106,37,115,17],[107,8,116,4],[107,12,116,8],[107,13,116,9,"offset"],[107,19,116,15],[107,22,116,18,"tools"],[107,27,116,23],[107,28,116,24,"writeUInt32"],[107,39,116,35],[107,40,116,36],[107,44,116,40],[107,45,116,41,"buffer"],[107,51,116,47],[107,53,116,49],[107,57,116,53],[107,58,116,54,"offset"],[107,64,116,60],[107,66,116,62,"i"],[107,67,116,63],[107,69,116,65],[107,73,116,69],[107,74,116,70],[108,6,117,2],[109,4,117,3],[110,6,117,3,"key"],[110,9,117,3],[111,6,117,3,"value"],[111,11,117,3],[111,13,118,2],[111,22,118,2,"writeUInt64"],[111,33,118,13,"writeUInt64"],[111,34,118,14,"i"],[111,35,118,15],[111,37,118,17],[112,8,119,4],[112,12,119,8],[112,13,119,9,"offset"],[112,19,119,15],[112,22,119,18,"tools"],[112,27,119,23],[112,28,119,24,"writeUInt64"],[112,39,119,35],[112,40,119,36],[112,44,119,40],[112,45,119,41,"buffer"],[112,51,119,47],[112,53,119,49],[112,57,119,53],[112,58,119,54,"offset"],[112,64,119,60],[112,66,119,62,"BigInt"],[112,72,119,68],[112,73,119,69,"i"],[112,74,119,70],[112,75,119,71],[112,77,119,73],[112,81,119,77],[112,82,119,78],[113,6,120,2],[114,4,120,3],[115,6,120,3,"key"],[115,9,120,3],[116,6,120,3,"value"],[116,11,120,3],[116,13,121,2],[116,22,121,2,"writeVarInt"],[116,33,121,13,"writeVarInt"],[116,34,121,14,"i"],[116,35,121,15],[116,37,121,17],[117,8,122,4],[117,12,122,4,"_varuint$encode"],[117,27,122,4],[117,30,122,22,"varuint"],[117,37,122,29],[117,38,122,30,"encode"],[117,44,122,36],[117,45,122,37,"i"],[117,46,122,38],[117,48,122,40],[117,52,122,44],[117,53,122,45,"buffer"],[117,59,122,51],[117,61,122,53],[117,65,122,57],[117,66,122,58,"offset"],[117,72,122,64],[117,73,122,65],[118,10,122,12,"bytes"],[118,15,122,17],[118,18,122,17,"_varuint$encode"],[118,33,122,17],[118,34,122,12,"bytes"],[118,39,122,17],[119,8,123,4],[119,12,123,8],[119,13,123,9,"offset"],[119,19,123,15],[119,23,123,19,"bytes"],[119,28,123,24],[120,6,124,2],[121,4,124,3],[122,6,124,3,"key"],[122,9,124,3],[123,6,124,3,"value"],[123,11,124,3],[123,13,125,2],[123,22,125,2,"writeSlice"],[123,32,125,12,"writeSlice"],[123,33,125,13,"slice"],[123,38,125,18],[123,40,125,20],[124,8,126,4],[124,12,126,8],[124,16,126,12],[124,17,126,13,"buffer"],[124,23,126,19],[124,24,126,20,"length"],[124,30,126,26],[124,33,126,29],[124,37,126,33],[124,38,126,34,"offset"],[124,44,126,40],[124,47,126,43,"slice"],[124,52,126,48],[124,53,126,49,"length"],[124,59,126,55],[124,61,126,57],[125,10,127,6],[125,16,127,12],[125,20,127,16,"Error"],[125,25,127,21],[125,26,127,22],[125,60,127,56],[125,61,127,57],[126,8,128,4],[127,8,129,4],[127,12,129,8],[127,13,129,9,"buffer"],[127,19,129,15],[127,20,129,16,"set"],[127,23,129,19],[127,24,129,20,"slice"],[127,29,129,25],[127,31,129,27],[127,35,129,31],[127,36,129,32,"offset"],[127,42,129,38],[127,43,129,39],[128,8,130,4],[128,12,130,8],[128,13,130,9,"offset"],[128,19,130,15],[128,23,130,19,"slice"],[128,28,130,24],[128,29,130,25,"length"],[128,35,130,31],[129,6,131,2],[130,4,131,3],[131,6,131,3,"key"],[131,9,131,3],[132,6,131,3,"value"],[132,11,131,3],[132,13,132,2],[132,22,132,2,"writeVarSlice"],[132,35,132,15,"writeVarSlice"],[132,36,132,16,"slice"],[132,41,132,21],[132,43,132,23],[133,8,133,4],[133,12,133,8],[133,13,133,9,"writeVarInt"],[133,24,133,20],[133,25,133,21,"slice"],[133,30,133,26],[133,31,133,27,"length"],[133,37,133,33],[133,38,133,34],[134,8,134,4],[134,12,134,8],[134,13,134,9,"writeSlice"],[134,23,134,19],[134,24,134,20,"slice"],[134,29,134,25],[134,30,134,26],[135,6,135,2],[136,4,135,3],[137,6,135,3,"key"],[137,9,135,3],[138,6,135,3,"value"],[138,11,135,3],[138,13,136,2],[138,22,136,2,"writeVector"],[138,33,136,13,"writeVector"],[138,34,136,14,"vector"],[138,40,136,20],[138,42,136,22],[139,8,136,22],[139,12,136,22,"_this"],[139,17,136,22],[140,8,137,4],[140,12,137,8],[140,13,137,9,"writeVarInt"],[140,24,137,20],[140,25,137,21,"vector"],[140,31,137,27],[140,32,137,28,"length"],[140,38,137,34],[140,39,137,35],[141,8,138,4,"vector"],[141,14,138,10],[141,15,138,11,"forEach"],[141,22,138,18],[141,23,138,19],[141,33,138,19,"buf"],[141,36,138,22],[142,10,138,22],[142,17,138,26,"_this"],[142,22,138,30],[142,23,138,31,"writeVarSlice"],[142,36,138,44],[142,37,138,45,"buf"],[142,40,138,48],[142,41,138,49],[143,8,138,49],[143,10,138,50],[144,6,139,2],[145,4,139,3],[146,6,139,3,"key"],[146,9,139,3],[147,6,139,3,"value"],[147,11,139,3],[147,13,140,2],[147,22,140,2,"end"],[147,25,140,5,"end"],[147,26,140,5],[147,28,140,8],[148,8,141,4],[148,12,141,8],[148,16,141,12],[148,17,141,13,"buffer"],[148,23,141,19],[148,24,141,20,"length"],[148,30,141,26],[148,35,141,31],[148,39,141,35],[148,40,141,36,"offset"],[148,46,141,42],[148,48,141,44],[149,10,142,6],[149,17,142,13],[149,21,142,17],[149,22,142,18,"buffer"],[149,28,142,24],[150,8,143,4],[151,8,144,4],[151,14,144,10],[151,18,144,14,"Error"],[151,23,144,19],[151,24,144,20],[151,39,144,35],[151,43,144,39],[151,44,144,40,"buffer"],[151,50,144,46],[151,51,144,47,"length"],[151,57,144,53],[151,69,144,65],[151,73,144,69],[151,74,144,70,"offset"],[151,80,144,76],[151,82,144,78],[151,83,144,79],[152,6,145,2],[153,4,145,3],[154,6,145,3,"key"],[154,9,145,3],[155,6,145,3,"value"],[155,11,145,3],[155,13,95,2],[155,22,95,9,"withCapacity"],[155,34,95,21,"withCapacity"],[155,35,95,22,"size"],[155,39,95,26],[155,41,95,28],[156,8,96,4],[156,15,96,11],[156,19,96,15,"BufferWriter"],[156,31,96,27],[156,32,96,28],[156,36,96,32,"Uint8Array"],[156,46,96,42],[156,47,96,43,"size"],[156,51,96,47],[156,52,96,48],[156,53,96,49],[157,6,97,2],[158,4,97,3],[159,2,97,3],[160,2,147,0,"exports"],[160,9,147,7],[160,10,147,8,"BufferWriter"],[160,22,147,20],[160,25,147,23,"BufferWriter"],[160,37,147,35],[161,2,148,0],[162,0,149,0],[163,0,150,0],[164,2,148,0],[164,6,151,6,"BufferReader"],[164,18,151,18],[165,4,154,2],[165,13,154,2,"BufferReader"],[165,26,154,14,"buffer"],[165,32,154,20],[165,34,154,34],[166,6,154,34],[166,10,154,22,"offset"],[166,16,154,28],[166,19,154,28,"arguments"],[166,28,154,28],[166,29,154,28,"length"],[166,35,154,28],[166,43,154,28,"arguments"],[166,52,154,28],[166,60,154,28,"undefined"],[166,69,154,28],[166,72,154,28,"arguments"],[166,81,154,28],[166,87,154,31],[166,88,154,32],[167,6,154,32,"_classCallCheck"],[167,21,154,32],[167,28,154,32,"BufferReader"],[167,40,154,32],[168,6,155,4],[168,10,155,8],[168,11,155,9,"buffer"],[168,17,155,15],[168,20,155,18,"buffer"],[168,26,155,24],[169,6,156,4],[169,10,156,8],[169,11,156,9,"offset"],[169,17,156,15],[169,20,156,18,"offset"],[169,26,156,24],[170,6,157,4,"v"],[170,7,157,5],[170,8,157,6,"parse"],[170,13,157,11],[170,14,157,12,"v"],[170,15,157,13],[170,16,157,14,"tuple"],[170,21,157,19],[170,22,157,20],[170,23,157,21,"types"],[170,28,157,26],[170,29,157,27,"BufferSchema"],[170,41,157,39],[170,43,157,41,"types"],[170,48,157,46],[170,49,157,47,"UInt32Schema"],[170,61,157,59],[170,62,157,60],[170,63,157,61],[170,65,157,63],[170,66,158,6,"buffer"],[170,72,158,12],[170,74,159,6,"offset"],[170,80,159,12],[170,81,160,5],[170,82,160,6],[171,4,161,2],[172,4,161,3],[172,11,161,3,"_createClass"],[172,23,161,3],[172,24,161,3,"BufferReader"],[172,36,161,3],[173,6,161,3,"key"],[173,9,161,3],[174,6,161,3,"value"],[174,11,161,3],[174,13,162,2],[174,22,162,2,"readUInt8"],[174,31,162,11,"readUInt8"],[174,32,162,11],[174,34,162,14],[175,8,163,4],[175,12,163,10,"result"],[175,18,163,16],[175,21,163,19,"tools"],[175,26,163,24],[175,27,163,25,"readUInt8"],[175,36,163,34],[175,37,163,35],[175,41,163,39],[175,42,163,40,"buffer"],[175,48,163,46],[175,50,163,48],[175,54,163,52],[175,55,163,53,"offset"],[175,61,163,59],[175,62,163,60],[176,8,164,4],[176,12,164,8],[176,13,164,9,"offset"],[176,19,164,15],[176,21,164,17],[177,8,165,4],[177,15,165,11,"result"],[177,21,165,17],[178,6,166,2],[179,4,166,3],[180,6,166,3,"key"],[180,9,166,3],[181,6,166,3,"value"],[181,11,166,3],[181,13,167,2],[181,22,167,2,"readInt32"],[181,31,167,11,"readInt32"],[181,32,167,11],[181,34,167,14],[182,8,168,4],[182,12,168,10,"result"],[182,18,168,16],[182,21,168,19,"tools"],[182,26,168,24],[182,27,168,25,"readInt32"],[182,36,168,34],[182,37,168,35],[182,41,168,39],[182,42,168,40,"buffer"],[182,48,168,46],[182,50,168,48],[182,54,168,52],[182,55,168,53,"offset"],[182,61,168,59],[182,63,168,61],[182,67,168,65],[182,68,168,66],[183,8,169,4],[183,12,169,8],[183,13,169,9,"offset"],[183,19,169,15],[183,23,169,19],[183,24,169,20],[184,8,170,4],[184,15,170,11,"result"],[184,21,170,17],[185,6,171,2],[186,4,171,3],[187,6,171,3,"key"],[187,9,171,3],[188,6,171,3,"value"],[188,11,171,3],[188,13,172,2],[188,22,172,2,"readUInt32"],[188,32,172,12,"readUInt32"],[188,33,172,12],[188,35,172,15],[189,8,173,4],[189,12,173,10,"result"],[189,18,173,16],[189,21,173,19,"tools"],[189,26,173,24],[189,27,173,25,"readUInt32"],[189,37,173,35],[189,38,173,36],[189,42,173,40],[189,43,173,41,"buffer"],[189,49,173,47],[189,51,173,49],[189,55,173,53],[189,56,173,54,"offset"],[189,62,173,60],[189,64,173,62],[189,68,173,66],[189,69,173,67],[190,8,174,4],[190,12,174,8],[190,13,174,9,"offset"],[190,19,174,15],[190,23,174,19],[190,24,174,20],[191,8,175,4],[191,15,175,11,"result"],[191,21,175,17],[192,6,176,2],[193,4,176,3],[194,6,176,3,"key"],[194,9,176,3],[195,6,176,3,"value"],[195,11,176,3],[195,13,177,2],[195,22,177,2,"readInt64"],[195,31,177,11,"readInt64"],[195,32,177,11],[195,34,177,14],[196,8,178,4],[196,12,178,10,"result"],[196,18,178,16],[196,21,178,19,"tools"],[196,26,178,24],[196,27,178,25,"readInt64"],[196,36,178,34],[196,37,178,35],[196,41,178,39],[196,42,178,40,"buffer"],[196,48,178,46],[196,50,178,48],[196,54,178,52],[196,55,178,53,"offset"],[196,61,178,59],[196,63,178,61],[196,67,178,65],[196,68,178,66],[197,8,179,4],[197,12,179,8],[197,13,179,9,"offset"],[197,19,179,15],[197,23,179,19],[197,24,179,20],[198,8,180,4],[198,15,180,11,"result"],[198,21,180,17],[199,6,181,2],[200,4,181,3],[201,6,181,3,"key"],[201,9,181,3],[202,6,181,3,"value"],[202,11,181,3],[202,13,182,2],[202,22,182,2,"readVarInt"],[202,32,182,12,"readVarInt"],[202,33,182,12],[202,35,182,15],[203,8,183,4],[203,12,183,4,"_varuint$decode"],[203,27,183,4],[203,30,183,35,"varuint"],[203,37,183,42],[203,38,183,43,"decode"],[203,44,183,49],[203,45,183,50],[203,49,183,54],[203,50,183,55,"buffer"],[203,56,183,61],[203,58,183,63],[203,62,183,67],[203,63,183,68,"offset"],[203,69,183,74],[203,70,183,75],[204,10,183,12,"bigintValue"],[204,21,183,23],[204,24,183,23,"_varuint$decode"],[204,39,183,23],[204,40,183,12,"bigintValue"],[204,51,183,23],[205,10,183,25,"bytes"],[205,15,183,30],[205,18,183,30,"_varuint$decode"],[205,33,183,30],[205,34,183,25,"bytes"],[205,39,183,30],[206,8,184,4],[206,12,184,8],[206,13,184,9,"offset"],[206,19,184,15],[206,23,184,19,"bytes"],[206,28,184,24],[207,8,185,4],[207,15,185,11,"bigintValue"],[207,26,185,22],[208,6,186,2],[209,4,186,3],[210,6,186,3,"key"],[210,9,186,3],[211,6,186,3,"value"],[211,11,186,3],[211,13,187,2],[211,22,187,2,"readSlice"],[211,31,187,11,"readSlice"],[211,32,187,12,"n"],[211,33,187,13],[211,35,187,15],[212,8,188,4,"verifuint"],[212,17,188,13],[212,18,188,14,"n"],[212,19,188,15],[212,21,188,17,"MAX_JS_NUMBER"],[212,34,188,30],[212,35,188,31],[213,8,189,4],[213,12,189,10,"num"],[213,15,189,13],[213,18,189,16,"Number"],[213,24,189,22],[213,25,189,23,"n"],[213,26,189,24],[213,27,189,25],[214,8,190,4],[214,12,190,8],[214,16,190,12],[214,17,190,13,"buffer"],[214,23,190,19],[214,24,190,20,"length"],[214,30,190,26],[214,33,190,29],[214,37,190,33],[214,38,190,34,"offset"],[214,44,190,40],[214,47,190,43,"num"],[214,50,190,46],[214,52,190,48],[215,10,191,6],[215,16,191,12],[215,20,191,16,"Error"],[215,25,191,21],[215,26,191,22],[215,59,191,55],[215,60,191,56],[216,8,192,4],[217,8,193,4],[217,12,193,10,"result"],[217,18,193,16],[217,21,193,19],[217,25,193,23],[217,26,193,24,"buffer"],[217,32,193,30],[217,33,193,31,"slice"],[217,38,193,36],[217,39,193,37],[217,43,193,41],[217,44,193,42,"offset"],[217,50,193,48],[217,52,193,50],[217,56,193,54],[217,57,193,55,"offset"],[217,63,193,61],[217,66,193,64,"num"],[217,69,193,67],[217,70,193,68],[218,8,194,4],[218,12,194,8],[218,13,194,9,"offset"],[218,19,194,15],[218,23,194,19,"num"],[218,26,194,22],[219,8,195,4],[219,15,195,11,"result"],[219,21,195,17],[220,6,196,2],[221,4,196,3],[222,6,196,3,"key"],[222,9,196,3],[223,6,196,3,"value"],[223,11,196,3],[223,13,197,2],[223,22,197,2,"readVarSlice"],[223,34,197,14,"readVarSlice"],[223,35,197,14],[223,37,197,17],[224,8,198,4],[224,15,198,11],[224,19,198,15],[224,20,198,16,"readSlice"],[224,29,198,25],[224,30,198,26],[224,34,198,30],[224,35,198,31,"readVarInt"],[224,45,198,41],[224,46,198,42],[224,47,198,43],[224,48,198,44],[225,6,199,2],[226,4,199,3],[227,6,199,3,"key"],[227,9,199,3],[228,6,199,3,"value"],[228,11,199,3],[228,13,200,2],[228,22,200,2,"readVector"],[228,32,200,12,"readVector"],[228,33,200,12],[228,35,200,15],[229,8,201,4],[229,12,201,10,"count"],[229,17,201,15],[229,20,201,18],[229,24,201,22],[229,25,201,23,"readVarInt"],[229,35,201,33],[229,36,201,34],[229,37,201,35],[230,8,202,4],[230,12,202,10,"vector"],[230,18,202,16],[230,21,202,19],[230,23,202,21],[231,8,203,4],[231,13,203,9],[231,17,203,13,"i"],[231,18,203,14],[231,21,203,17],[231,22,203,18],[231,24,203,20,"i"],[231,25,203,21],[231,28,203,24,"count"],[231,33,203,29],[231,35,203,31,"i"],[231,36,203,32],[231,38,203,34],[231,40,203,36,"vector"],[231,46,203,42],[231,47,203,43,"push"],[231,51,203,47],[231,52,203,48],[231,56,203,52],[231,57,203,53,"readVarSlice"],[231,69,203,65],[231,70,203,66],[231,71,203,67],[231,72,203,68],[232,8,204,4],[232,15,204,11,"vector"],[232,21,204,17],[233,6,205,2],[234,4,205,3],[235,2,205,3],[236,2,207,0,"exports"],[236,9,207,7],[236,10,207,8,"BufferReader"],[236,22,207,20],[236,25,207,23,"BufferReader"],[236,37,207,35],[237,0,207,36],[237,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","verifuint","reverseBuffer","cloneBuffer","BufferWriter","BufferWriter.withCapacity","BufferWriter#constructor","BufferWriter#writeUInt8","BufferWriter#writeInt32","BufferWriter#writeInt64","BufferWriter#writeUInt32","BufferWriter#writeUInt64","BufferWriter#writeVarInt","BufferWriter#writeSlice","BufferWriter#writeVarSlice","BufferWriter#writeVector","vector.forEach$argument_0","BufferWriter#end","BufferReader","BufferReader#constructor","BufferReader#readUInt8","BufferReader#readInt32","BufferReader#readUInt32","BufferReader#readInt64","BufferReader#readVarInt","BufferReader#readSlice","BufferReader#readVarSlice","BufferReader#readVector"],"mappings":"AAA;MCI;iBCS;aDE;ODI;MCC;ODG;MCI;ODE;MCC;ODE;ECG;GDS;AGY;CHS;AIM;CJW;AKC;CLI;AMI;ECG;GDE;EEC;GFO;EGC;GHE;EIC;GJE;EKC;GLE;EMC;GNE;EOC;GPE;EQC;GRG;ESC;GTM;EUC;GVG;EWC;mBCE,8BD;GXC;EaC;GbK;CNC;AoBK;ECG;GDO;EEC;GFI;EGC;GHI;EIC;GJI;EKC;GLI;EMC;GNI;EOC;GPS;EQC;GRE;ESC;GTK;CpBC"}},"type":"js/module"}]}