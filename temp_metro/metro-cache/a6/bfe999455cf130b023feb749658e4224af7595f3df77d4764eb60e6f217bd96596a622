{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var SEMICOLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n  var LEFTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n  module.exports = {\n    name: 'AtrulePrelude',\n    structure: {\n      children: [[]]\n    },\n    parse: function parse(name) {\n      var children = null;\n      if (name !== null) {\n        name = name.toLowerCase();\n      }\n      this.scanner.skipSC();\n      if (this.atrule.hasOwnProperty(name) && typeof this.atrule[name].prelude === 'function') {\n        // custom consumer\n        children = this.atrule[name].prelude.call(this);\n      } else {\n        // default consumer\n        children = this.readSequence(this.scope.AtrulePrelude);\n      }\n      this.scanner.skipSC();\n      if (this.scanner.eof !== true && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n        this.error('Semicolon or block is expected');\n      }\n      if (children === null) {\n        children = this.createList();\n      }\n      return {\n        type: 'AtrulePrelude',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    },\n    walkContext: 'atrulePrelude'\n  };\n});","lineCount":40,"map":[[2,2,3,0],[2,6,3,4,"SEMICOLON"],[2,15,3,13],[2,18,3,16,"_$$_REQUIRE"],[2,29,3,16],[2,30,3,16,"_dependencyMap"],[2,44,3,16],[2,68,3,16,"TYPE"],[2,72,3,16],[2,73,3,21,"Semicolon"],[2,82,3,30],[3,2,4,0],[3,6,4,4,"LEFTCURLYBRACKET"],[3,22,4,20],[3,25,4,23,"_$$_REQUIRE"],[3,36,4,23],[3,37,4,23,"_dependencyMap"],[3,51,4,23],[3,75,4,23,"TYPE"],[3,79,4,23],[3,80,4,28,"LeftCurlyBracket"],[3,96,4,44],[4,2,6,0,"module"],[4,8,6,6],[4,9,6,7,"exports"],[4,16,6,14],[4,19,6,17],[5,4,7,4,"name"],[5,8,7,8],[5,10,7,10],[5,25,7,25],[6,4,8,4,"structure"],[6,13,8,13],[6,15,8,15],[7,6,9,8,"children"],[7,14,9,16],[7,16,9,18],[7,17,9,19],[7,19,9,21],[8,4,10,4],[8,5,10,5],[9,4,11,4,"parse"],[9,9,11,9],[9,11,11,11],[9,20,11,4,"parse"],[9,25,11,9,"parse"],[9,26,11,20,"name"],[9,30,11,24],[9,32,11,26],[10,6,12,8],[10,10,12,12,"children"],[10,18,12,20],[10,21,12,23],[10,25,12,27],[11,6,14,8],[11,10,14,12,"name"],[11,14,14,16],[11,19,14,21],[11,23,14,25],[11,25,14,27],[12,8,15,12,"name"],[12,12,15,16],[12,15,15,19,"name"],[12,19,15,23],[12,20,15,24,"toLowerCase"],[12,31,15,35],[12,32,15,36],[12,33,15,37],[13,6,16,8],[14,6,18,8],[14,10,18,12],[14,11,18,13,"scanner"],[14,18,18,20],[14,19,18,21,"skipSC"],[14,25,18,27],[14,26,18,28],[14,27,18,29],[15,6,20,8],[15,10,20,12],[15,14,20,16],[15,15,20,17,"atrule"],[15,21,20,23],[15,22,20,24,"hasOwnProperty"],[15,36,20,38],[15,37,20,39,"name"],[15,41,20,43],[15,42,20,44],[15,46,21,12],[15,53,21,19],[15,57,21,23],[15,58,21,24,"atrule"],[15,64,21,30],[15,65,21,31,"name"],[15,69,21,35],[15,70,21,36],[15,71,21,37,"prelude"],[15,78,21,44],[15,83,21,49],[15,93,21,59],[15,95,21,61],[16,8,22,12],[17,8,23,12,"children"],[17,16,23,20],[17,19,23,23],[17,23,23,27],[17,24,23,28,"atrule"],[17,30,23,34],[17,31,23,35,"name"],[17,35,23,39],[17,36,23,40],[17,37,23,41,"prelude"],[17,44,23,48],[17,45,23,49,"call"],[17,49,23,53],[17,50,23,54],[17,54,23,58],[17,55,23,59],[18,6,24,8],[18,7,24,9],[18,13,24,15],[19,8,25,12],[20,8,26,12,"children"],[20,16,26,20],[20,19,26,23],[20,23,26,27],[20,24,26,28,"readSequence"],[20,36,26,40],[20,37,26,41],[20,41,26,45],[20,42,26,46,"scope"],[20,47,26,51],[20,48,26,52,"AtrulePrelude"],[20,61,26,65],[20,62,26,66],[21,6,27,8],[22,6,29,8],[22,10,29,12],[22,11,29,13,"scanner"],[22,18,29,20],[22,19,29,21,"skipSC"],[22,25,29,27],[22,26,29,28],[22,27,29,29],[23,6,31,8],[23,10,31,12],[23,14,31,16],[23,15,31,17,"scanner"],[23,22,31,24],[23,23,31,25,"eof"],[23,26,31,28],[23,31,31,33],[23,35,31,37],[23,39,32,12],[23,43,32,16],[23,44,32,17,"scanner"],[23,51,32,24],[23,52,32,25,"tokenType"],[23,61,32,34],[23,66,32,39,"LEFTCURLYBRACKET"],[23,82,32,55],[23,86,33,12],[23,90,33,16],[23,91,33,17,"scanner"],[23,98,33,24],[23,99,33,25,"tokenType"],[23,108,33,34],[23,113,33,39,"SEMICOLON"],[23,122,33,48],[23,124,33,50],[24,8,34,12],[24,12,34,16],[24,13,34,17,"error"],[24,18,34,22],[24,19,34,23],[24,51,34,55],[24,52,34,56],[25,6,35,8],[26,6,37,8],[26,10,37,12,"children"],[26,18,37,20],[26,23,37,25],[26,27,37,29],[26,29,37,31],[27,8,38,12,"children"],[27,16,38,20],[27,19,38,23],[27,23,38,27],[27,24,38,28,"createList"],[27,34,38,38],[27,35,38,39],[27,36,38,40],[28,6,39,8],[29,6,41,8],[29,13,41,15],[30,8,42,12,"type"],[30,12,42,16],[30,14,42,18],[30,29,42,33],[31,8,43,12,"loc"],[31,11,43,15],[31,13,43,17],[31,17,43,21],[31,18,43,22,"getLocationFromList"],[31,37,43,41],[31,38,43,42,"children"],[31,46,43,50],[31,47,43,51],[32,8,44,12,"children"],[32,16,44,20],[32,18,44,22,"children"],[33,6,45,8],[33,7,45,9],[34,4,46,4],[34,5,46,5],[35,4,47,4,"generate"],[35,12,47,12],[35,14,47,14],[35,23,47,4,"generate"],[35,31,47,12,"generate"],[35,32,47,23,"node"],[35,36,47,27],[35,38,47,29],[36,6,48,8],[36,10,48,12],[36,11,48,13,"children"],[36,19,48,21],[36,20,48,22,"node"],[36,24,48,26],[36,25,48,27],[37,4,49,4],[37,5,49,5],[38,4,50,4,"walkContext"],[38,15,50,15],[38,17,50,17],[39,2,51,0],[39,3,51,1],[40,0,51,2],[40,3]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCU;KDmC;cEC;KFE"}},"type":"js/module"}]}