{"dependencies":[{"name":"./mode","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":30,"index":30}}],"key":"kP3UoMWYBHY2j1qDa+F4rCzyVl0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function ByteData(data) {\n    this.mode = _$$_REQUIRE(_dependencyMap[0], \"./mode\").BYTE;\n    if (typeof data === 'string') {\n      this.data = new TextEncoder().encode(data);\n    } else {\n      this.data = new Uint8Array(data);\n    }\n  }\n  ByteData.getBitsLength = function getBitsLength(length) {\n    return length * 8;\n  };\n  ByteData.prototype.getLength = function getLength() {\n    return this.data.length;\n  };\n  ByteData.prototype.getBitsLength = function getBitsLength() {\n    return ByteData.getBitsLength(this.data.length);\n  };\n  ByteData.prototype.write = function (bitBuffer) {\n    for (var i = 0, l = this.data.length; i < l; i++) {\n      bitBuffer.put(this.data[i], 8);\n    }\n  };\n  module.exports = ByteData;\n});","lineCount":25,"map":[[2,2,3,0],[2,11,3,9,"ByteData"],[2,19,3,17,"ByteData"],[2,20,3,19,"data"],[2,24,3,23],[2,26,3,25],[3,4,4,2],[3,8,4,6],[3,9,4,7,"mode"],[3,13,4,11],[3,16,4,14,"_$$_REQUIRE"],[3,27,4,14],[3,28,4,14,"_dependencyMap"],[3,42,4,14],[3,57,4,19,"BYTE"],[3,61,4,23],[4,4,5,2],[4,8,5,6],[4,15,5,14,"data"],[4,19,5,19],[4,24,5,24],[4,32,5,32],[4,34,5,34],[5,6,6,4],[5,10,6,8],[5,11,6,9,"data"],[5,15,6,13],[5,18,6,16],[5,22,6,20,"TextEncoder"],[5,33,6,31],[5,34,6,32],[5,35,6,33],[5,36,6,34,"encode"],[5,42,6,40],[5,43,6,41,"data"],[5,47,6,45],[5,48,6,46],[6,4,7,2],[6,5,7,3],[6,11,7,9],[7,6,8,4],[7,10,8,8],[7,11,8,9,"data"],[7,15,8,13],[7,18,8,16],[7,22,8,20,"Uint8Array"],[7,32,8,30],[7,33,8,31,"data"],[7,37,8,35],[7,38,8,36],[8,4,9,2],[9,2,10,0],[10,2,12,0,"ByteData"],[10,10,12,8],[10,11,12,9,"getBitsLength"],[10,24,12,22],[10,27,12,25],[10,36,12,34,"getBitsLength"],[10,49,12,47,"getBitsLength"],[10,50,12,49,"length"],[10,56,12,55],[10,58,12,57],[11,4,13,2],[11,11,13,9,"length"],[11,17,13,15],[11,20,13,18],[11,21,13,19],[12,2,14,0],[12,3,14,1],[13,2,16,0,"ByteData"],[13,10,16,8],[13,11,16,9,"prototype"],[13,20,16,18],[13,21,16,19,"getLength"],[13,30,16,28],[13,33,16,31],[13,42,16,40,"getLength"],[13,51,16,49,"getLength"],[13,52,16,49],[13,54,16,53],[14,4,17,2],[14,11,17,9],[14,15,17,13],[14,16,17,14,"data"],[14,20,17,18],[14,21,17,19,"length"],[14,27,17,25],[15,2,18,0],[15,3,18,1],[16,2,20,0,"ByteData"],[16,10,20,8],[16,11,20,9,"prototype"],[16,20,20,18],[16,21,20,19,"getBitsLength"],[16,34,20,32],[16,37,20,35],[16,46,20,44,"getBitsLength"],[16,59,20,57,"getBitsLength"],[16,60,20,57],[16,62,20,61],[17,4,21,2],[17,11,21,9,"ByteData"],[17,19,21,17],[17,20,21,18,"getBitsLength"],[17,33,21,31],[17,34,21,32],[17,38,21,36],[17,39,21,37,"data"],[17,43,21,41],[17,44,21,42,"length"],[17,50,21,48],[17,51,21,49],[18,2,22,0],[18,3,22,1],[19,2,24,0,"ByteData"],[19,10,24,8],[19,11,24,9,"prototype"],[19,20,24,18],[19,21,24,19,"write"],[19,26,24,24],[19,29,24,27],[19,39,24,37,"bitBuffer"],[19,48,24,46],[19,50,24,48],[20,4,25,2],[20,9,25,7],[20,13,25,11,"i"],[20,14,25,12],[20,17,25,15],[20,18,25,16],[20,20,25,18,"l"],[20,21,25,19],[20,24,25,22],[20,28,25,26],[20,29,25,27,"data"],[20,33,25,31],[20,34,25,32,"length"],[20,40,25,38],[20,42,25,40,"i"],[20,43,25,41],[20,46,25,44,"l"],[20,47,25,45],[20,49,25,47,"i"],[20,50,25,48],[20,52,25,50],[20,54,25,52],[21,6,26,4,"bitBuffer"],[21,15,26,13],[21,16,26,14,"put"],[21,19,26,17],[21,20,26,18],[21,24,26,22],[21,25,26,23,"data"],[21,29,26,27],[21,30,26,28,"i"],[21,31,26,29],[21,32,26,30],[21,34,26,32],[21,35,26,33],[21,36,26,34],[22,4,27,2],[23,2,28,0],[23,3,28,1],[24,2,30,0,"module"],[24,8,30,6],[24,9,30,7,"exports"],[24,16,30,14],[24,19,30,17,"ByteData"],[24,27,30,25],[25,0,30,25],[25,3]],"functionMap":{"names":["<global>","ByteData","getBitsLength","getLength","ByteData.prototype.write"],"mappings":"AAA;ACE;CDO;yBEE;CFE;+BGE;CHE;mCEE;CFE;2BIE;CJI"}},"type":"js/module"}]}