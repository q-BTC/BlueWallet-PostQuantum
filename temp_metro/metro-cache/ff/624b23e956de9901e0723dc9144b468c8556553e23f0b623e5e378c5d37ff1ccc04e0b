{"dependencies":[{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":28,"column":40,"index":1218}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":28,"column":40,"index":1218}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RegistryTypes = exports.RegistryType = void 0;\n  var RegistryType = /*#__PURE__*/_createClass(function RegistryType(type, tag) {\n    var _this = this;\n    _classCallCheck(this, RegistryType);\n    this.type = type;\n    this.tag = tag;\n    this.getTag = function () {\n      return _this.tag;\n    };\n    this.getType = function () {\n      return _this.type;\n    };\n  });\n  exports.RegistryType = RegistryType;\n  exports.RegistryTypes = {\n    UUID: new RegistryType('uuid', 37),\n    BYTES: new RegistryType('bytes', undefined),\n    CRYPTO_HDKEY: new RegistryType('crypto-hdkey', 303),\n    CRYPTO_KEYPATH: new RegistryType('crypto-keypath', 304),\n    CRYPTO_COIN_INFO: new RegistryType('crypto-coin-info', 305),\n    CRYPTO_ECKEY: new RegistryType('crypto-eckey', 306),\n    CRYPTO_OUTPUT: new RegistryType('crypto-output', 308),\n    CRYPTO_PSBT: new RegistryType('crypto-psbt', 310),\n    CRYPTO_ACCOUNT: new RegistryType('crypto-account', 311),\n    CRYPTO_MULTI_ACCOUNTS: new RegistryType(\"crypto-multi-accounts\", 1103),\n    QR_HARDWARE_CALL: new RegistryType(\"qr-hardware-call\", 1201),\n    KEY_DERIVATION_CALL: new RegistryType(\"key-derivation-call\", 1301),\n    KEY_DERIVATION_SCHEMA: new RegistryType(\"key-derivation-schema\", 1302)\n  };\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_createClass"],[4,18,1,13],[4,21,1,13,"_$$_REQUIRE"],[4,32,1,13],[4,33,1,13,"_dependencyMap"],[4,47,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"_$$_REQUIRE"],[5,35,1,13],[5,36,1,13,"_dependencyMap"],[5,50,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0,"exports"],[9,9,3,7],[9,10,3,8,"RegistryTypes"],[9,23,3,21],[9,26,3,24,"exports"],[9,33,3,31],[9,34,3,32,"RegistryType"],[9,46,3,44],[9,49,3,47],[9,54,3,52],[9,55,3,53],[10,2,3,54],[10,6,4,6,"RegistryType"],[10,18,4,18],[10,34,4,18,"_createClass"],[10,46,4,18],[10,47,5,4],[10,56,5,4,"RegistryType"],[10,69,5,16,"type"],[10,73,5,20],[10,75,5,22,"tag"],[10,78,5,25],[10,80,5,27],[11,4,5,27],[11,8,5,27,"_this"],[11,13,5,27],[12,4,5,27,"_classCallCheck"],[12,19,5,27],[12,26,5,27,"RegistryType"],[12,38,5,27],[13,4,6,8],[13,8,6,12],[13,9,6,13,"type"],[13,13,6,17],[13,16,6,20,"type"],[13,20,6,24],[14,4,7,8],[14,8,7,12],[14,9,7,13,"tag"],[14,12,7,16],[14,15,7,19,"tag"],[14,18,7,22],[15,4,8,8],[15,8,8,12],[15,9,8,13,"getTag"],[15,15,8,19],[15,18,8,22],[16,6,8,22],[16,13,8,28,"_this"],[16,18,8,32],[16,19,8,33,"tag"],[16,22,8,36],[17,4,8,36],[18,4,9,8],[18,8,9,12],[18,9,9,13,"getType"],[18,16,9,20],[18,19,9,23],[19,6,9,23],[19,13,9,29,"_this"],[19,18,9,33],[19,19,9,34,"type"],[19,23,9,38],[20,4,9,38],[21,2,10,4],[21,3,10,5],[22,2,12,0,"exports"],[22,9,12,7],[22,10,12,8,"RegistryType"],[22,22,12,20],[22,25,12,23,"RegistryType"],[22,37,12,35],[23,2,13,0,"exports"],[23,9,13,7],[23,10,13,8,"RegistryTypes"],[23,23,13,21],[23,26,13,24],[24,4,14,4,"UUID"],[24,8,14,8],[24,10,14,10],[24,14,14,14,"RegistryType"],[24,26,14,26],[24,27,14,27],[24,33,14,33],[24,35,14,35],[24,37,14,37],[24,38,14,38],[25,4,15,4,"BYTES"],[25,9,15,9],[25,11,15,11],[25,15,15,15,"RegistryType"],[25,27,15,27],[25,28,15,28],[25,35,15,35],[25,37,15,37,"undefined"],[25,46,15,46],[25,47,15,47],[26,4,16,4,"CRYPTO_HDKEY"],[26,16,16,16],[26,18,16,18],[26,22,16,22,"RegistryType"],[26,34,16,34],[26,35,16,35],[26,49,16,49],[26,51,16,51],[26,54,16,54],[26,55,16,55],[27,4,17,4,"CRYPTO_KEYPATH"],[27,18,17,18],[27,20,17,20],[27,24,17,24,"RegistryType"],[27,36,17,36],[27,37,17,37],[27,53,17,53],[27,55,17,55],[27,58,17,58],[27,59,17,59],[28,4,18,4,"CRYPTO_COIN_INFO"],[28,20,18,20],[28,22,18,22],[28,26,18,26,"RegistryType"],[28,38,18,38],[28,39,18,39],[28,57,18,57],[28,59,18,59],[28,62,18,62],[28,63,18,63],[29,4,19,4,"CRYPTO_ECKEY"],[29,16,19,16],[29,18,19,18],[29,22,19,22,"RegistryType"],[29,34,19,34],[29,35,19,35],[29,49,19,49],[29,51,19,51],[29,54,19,54],[29,55,19,55],[30,4,20,4,"CRYPTO_OUTPUT"],[30,17,20,17],[30,19,20,19],[30,23,20,23,"RegistryType"],[30,35,20,35],[30,36,20,36],[30,51,20,51],[30,53,20,53],[30,56,20,56],[30,57,20,57],[31,4,21,4,"CRYPTO_PSBT"],[31,15,21,15],[31,17,21,17],[31,21,21,21,"RegistryType"],[31,33,21,33],[31,34,21,34],[31,47,21,47],[31,49,21,49],[31,52,21,52],[31,53,21,53],[32,4,22,4,"CRYPTO_ACCOUNT"],[32,18,22,18],[32,20,22,20],[32,24,22,24,"RegistryType"],[32,36,22,36],[32,37,22,37],[32,53,22,53],[32,55,22,55],[32,58,22,58],[32,59,22,59],[33,4,23,4,"CRYPTO_MULTI_ACCOUNTS"],[33,25,23,25],[33,27,23,27],[33,31,23,31,"RegistryType"],[33,43,23,43],[33,44,23,44],[33,67,23,67],[33,69,23,69],[33,73,23,73],[33,74,23,74],[34,4,24,4,"QR_HARDWARE_CALL"],[34,20,24,20],[34,22,24,22],[34,26,24,26,"RegistryType"],[34,38,24,38],[34,39,24,39],[34,57,24,57],[34,59,24,59],[34,63,24,63],[34,64,24,64],[35,4,25,4,"KEY_DERIVATION_CALL"],[35,23,25,23],[35,25,25,25],[35,29,25,29,"RegistryType"],[35,41,25,41],[35,42,25,42],[35,63,25,63],[35,65,25,65],[35,69,25,69],[35,70,25,70],[36,4,26,4,"KEY_DERIVATION_SCHEMA"],[36,25,26,25],[36,27,26,27],[36,31,26,31,"RegistryType"],[36,43,26,43],[36,44,26,44],[36,67,26,67],[36,69,26,69],[36,73,26,73],[37,2,27,0],[37,3,27,1],[38,0,27,2],[38,3]],"functionMap":{"names":["<global>","RegistryType","constructor","getTag","getType"],"mappings":"AAA;ACG;ICC;sBCG,cD;uBEC,eF;KDC;CDC"}},"type":"js/module"}]}