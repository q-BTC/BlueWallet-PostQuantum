{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":40,"column":0,"index":1292}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":40,"column":0,"index":1292}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":61,"index":61}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"./context/useStorage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":50,"index":112}},{"start":{"line":2,"column":0,"index":62},"end":{"line":2,"column":50,"index":112}}],"key":"SEEhKPL3PnUNkBu0Kykanid1ewg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = _$$_REQUIRE(_dependencyMap[2], \"react\");\n  var _s = $RefreshSig$();\n  /**\n   * A React hook that provides a proxied wallet instance that automatically updates when new transactions are fetched.\n   */\n  var useWalletSubscribe = function useWalletSubscribe(walletID) {\n    var _wallets$find;\n    _s();\n    var _useStorage = (0, _$$_REQUIRE(_dependencyMap[3], \"./context/useStorage\").useStorage)(),\n      wallets = _useStorage.wallets;\n\n    // get wallet by ID or used cached wallet\n    var previousWallet = (0, _react.useRef)();\n    var origWallet = (_wallets$find = wallets.find(function (w) {\n      return w.getID() === walletID;\n    })) != null ? _wallets$find : previousWallet.current;\n    if (!origWallet) {\n      throw new Error(`Wallet with ID ${walletID} not found`);\n    }\n    previousWallet.current = origWallet;\n    var _useState = (0, _react.useState)(origWallet.getLastTxFetch()),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      lastTxFetch = _useState2[0],\n      setLastTxFetch = _useState2[1];\n    var walletProxy = (0, _react.useMemo)(function () {\n      return new Proxy(origWallet, {});\n      // force update when lastTxFetch changes\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [lastTxFetch, origWallet]);\n\n    // check every second for getLastTxFetch\n    (0, _react.useEffect)(function () {\n      var interval = setInterval(function () {\n        setLastTxFetch(origWallet.getLastTxFetch());\n      }, 1000);\n      return function () {\n        return clearInterval(interval);\n      };\n    }, [origWallet]);\n    return walletProxy;\n  };\n  _s(useWalletSubscribe, \"udTMyb3YzVx2xh3133pgsfHR2mg=\", false, function () {\n    return [_$$_REQUIRE(_dependencyMap[3], \"./context/useStorage\").useStorage];\n  });\n  var _default = exports.default = useWalletSubscribe;\n});","lineCount":53,"map":[[8,2,1,0],[8,6,1,0,"_react"],[8,12,1,0],[8,15,1,0,"_$$_REQUIRE"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,1,61],[9,6,1,61,"_s"],[9,8,1,61],[9,11,1,61,"$RefreshSig$"],[9,23,1,61],[10,2,5,0],[11,0,6,0],[12,0,7,0],[13,2,8,0],[13,6,8,6,"useWalletSubscribe"],[13,24,8,24],[13,27,8,27],[13,36,8,6,"useWalletSubscribe"],[13,54,8,24,"useWalletSubscribe"],[13,55,8,28,"walletID"],[13,63,8,44],[13,65,8,58],[14,4,8,58],[14,8,8,58,"_wallets$find"],[14,21,8,58],[15,4,8,58,"_s"],[15,6,8,58],[16,4,9,2],[16,8,9,2,"_useStorage"],[16,19,9,2],[16,22,9,22],[16,26,9,22,"useStorage"],[16,56,9,22],[16,57,9,22,"useStorage"],[16,91,9,32],[16,93,9,33],[16,94,9,34],[17,6,9,10,"wallets"],[17,13,9,17],[17,16,9,17,"_useStorage"],[17,27,9,17],[17,28,9,10,"wallets"],[17,35,9,17],[19,4,11,2],[20,4,12,2],[20,8,12,8,"previousWallet"],[20,22,12,22],[20,25,12,25],[20,29,12,25,"useRef"],[20,42,12,31],[20,44,12,53],[20,45,12,54],[21,4,13,2],[21,8,13,8,"origWallet"],[21,18,13,18],[21,22,13,18,"_wallets$find"],[21,35,13,18],[21,38,13,21,"wallets"],[21,45,13,28],[21,46,13,29,"find"],[21,50,13,33],[21,51,13,34],[21,61,13,34,"w"],[21,62,13,35],[22,6,13,35],[22,13,13,39,"w"],[22,14,13,40],[22,15,13,41,"getID"],[22,20,13,46],[22,21,13,47],[22,22,13,48],[22,27,13,53,"walletID"],[22,35,13,61],[23,4,13,61],[23,6,13,62],[23,18,13,62,"_wallets$find"],[23,31,13,62],[23,34,13,66,"previousWallet"],[23,48,13,80],[23,49,13,81,"current"],[23,56,13,88],[24,4,14,2],[24,8,14,6],[24,9,14,7,"origWallet"],[24,19,14,17],[24,21,14,19],[25,6,15,4],[25,12,15,10],[25,16,15,14,"Error"],[25,21,15,19],[25,22,15,20],[25,40,15,38,"walletID"],[25,48,15,46],[25,60,15,58],[25,61,15,59],[26,4,16,2],[27,4,17,2,"previousWallet"],[27,18,17,16],[27,19,17,17,"current"],[27,26,17,24],[27,29,17,27,"origWallet"],[27,39,17,37],[28,4,19,2],[28,8,19,2,"_useState"],[28,17,19,2],[28,20,19,40],[28,24,19,40,"useState"],[28,39,19,48],[28,41,19,49,"origWallet"],[28,51,19,59],[28,52,19,60,"getLastTxFetch"],[28,66,19,74],[28,67,19,75],[28,68,19,76],[28,69,19,77],[29,6,19,77,"_useState2"],[29,16,19,77],[29,23,19,77,"_slicedToArray2"],[29,38,19,77],[29,39,19,77,"default"],[29,46,19,77],[29,48,19,77,"_useState"],[29,57,19,77],[30,6,19,9,"lastTxFetch"],[30,17,19,20],[30,20,19,20,"_useState2"],[30,30,19,20],[31,6,19,22,"setLastTxFetch"],[31,20,19,36],[31,23,19,36,"_useState2"],[31,33,19,36],[32,4,21,2],[32,8,21,8,"walletProxy"],[32,19,21,19],[32,22,21,22],[32,26,21,22,"useMemo"],[32,40,21,29],[32,42,21,30],[32,54,21,36],[33,6,22,4],[33,13,22,11],[33,17,22,15,"Proxy"],[33,22,22,20],[33,23,22,21,"origWallet"],[33,33,22,31],[33,35,22,33],[33,36,22,34],[33,37,22,35],[33,38,22,36],[34,6,23,4],[35,6,24,4],[36,4,25,2],[36,5,25,3],[36,7,25,5],[36,8,25,6,"lastTxFetch"],[36,19,25,17],[36,21,25,19,"origWallet"],[36,31,25,29],[36,32,25,30],[36,33,25,31],[38,4,27,2],[39,4,28,2],[39,8,28,2,"useEffect"],[39,24,28,11],[39,26,28,12],[39,38,28,18],[40,6,29,4],[40,10,29,10,"interval"],[40,18,29,18],[40,21,29,21,"setInterval"],[40,32,29,32],[40,33,29,33],[40,45,29,39],[41,8,30,6,"setLastTxFetch"],[41,22,30,20],[41,23,30,21,"origWallet"],[41,33,30,31],[41,34,30,32,"getLastTxFetch"],[41,48,30,46],[41,49,30,47],[41,50,30,48],[41,51,30,49],[42,6,31,4],[42,7,31,5],[42,9,31,7],[42,13,31,11],[42,14,31,12],[43,6,33,4],[43,13,33,11],[44,8,33,11],[44,15,33,17,"clearInterval"],[44,28,33,30],[44,29,33,31,"interval"],[44,37,33,39],[44,38,33,40],[45,6,33,40],[46,4,34,2],[46,5,34,3],[46,7,34,5],[46,8,34,6,"origWallet"],[46,18,34,16],[46,19,34,17],[46,20,34,18],[47,4,36,2],[47,11,36,9,"walletProxy"],[47,22,36,20],[48,2,37,0],[48,3,37,1],[49,2,37,2,"_s"],[49,4,37,2],[49,5,8,6,"useWalletSubscribe"],[49,23,8,24],[50,4,8,24],[50,12,9,22,"useStorage"],[50,42,9,22],[50,43,9,22,"useStorage"],[50,77,9,32],[51,2,9,32],[52,2,9,32],[52,6,9,32,"_default"],[52,14,9,32],[52,17,9,32,"exports"],[52,24,9,32],[52,25,9,32,"default"],[52,32,9,32],[52,35,39,15,"useWalletSubscribe"],[52,53,39,33],[53,0,39,33],[53,3]],"functionMap":{"names":["<global>","useWalletSubscribe","wallets.find$argument_0","useMemo$argument_0","useEffect$argument_0","setInterval$argument_0","<anonymous>"],"mappings":"AAA;2BCO;kCCK,2BD;8BEQ;GFI;YGG;iCCC;KDE;WEE,6BF;GHC;CDG"}},"type":"js/module"}]}