{"dependencies":[{"name":"mdn-data/css/syntaxes.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":20,"index":141},"end":{"line":3,"column":57,"index":178}}],"key":"UYF3BVWB4unbOIB+0Yi9AzZtMsY="}},{"name":"./patch.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":194},"end":{"line":4,"column":37,"index":217}},{"start":{"line":4,"column":14,"index":194},"end":{"line":4,"column":37,"index":217}},{"start":{"line":4,"column":14,"index":194},"end":{"line":4,"column":37,"index":217}}],"key":"IDfuj5YKJbH+qReJhDjXQcbRoss="}},{"name":"mdn-data/css/at-rules.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":19,"index":19},"end":{"line":1,"column":56,"index":56}}],"key":"WDmC3boyaXt2zu6G6DeEb2I5FIE="}},{"name":"mdn-data/css/properties.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":22,"index":80},"end":{"line":2,"column":61,"index":119}}],"key":"EnCVBfPHTLjNo+oup17M4zEpv6g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var extendSyntax = /^\\s*\\|\\s*/;\n  function preprocessAtrules(dict) {\n    var result = Object.create(null);\n    for (var atruleName in dict) {\n      var atrule = dict[atruleName];\n      var descriptors = null;\n      if (atrule.descriptors) {\n        descriptors = Object.create(null);\n        for (var descriptor in atrule.descriptors) {\n          descriptors[descriptor] = atrule.descriptors[descriptor].syntax;\n        }\n      }\n      result[atruleName.substr(1)] = {\n        prelude: atrule.syntax.trim().match(/^@\\S+\\s+([^;\\{]*)/)[1].trim() || null,\n        descriptors: descriptors\n      };\n    }\n    return result;\n  }\n  function patchDictionary(dict, patchDict) {\n    var result = {};\n\n    // copy all syntaxes for an original dict\n    for (var key in dict) {\n      result[key] = dict[key].syntax || dict[key];\n    }\n\n    // apply a patch\n    for (var _key in patchDict) {\n      if (_key in dict) {\n        if (patchDict[_key].syntax) {\n          result[_key] = extendSyntax.test(patchDict[_key].syntax) ? result[_key] + ' ' + patchDict[_key].syntax.trim() : patchDict[_key].syntax;\n        } else {\n          delete result[_key];\n        }\n      } else {\n        if (patchDict[_key].syntax) {\n          result[_key] = patchDict[_key].syntax.replace(extendSyntax, '');\n        }\n      }\n    }\n    return result;\n  }\n  function unpackSyntaxes(dict) {\n    var result = {};\n    for (var key in dict) {\n      result[key] = dict[key].syntax;\n    }\n    return result;\n  }\n  function patchAtrules(dict, patchDict) {\n    var result = {};\n\n    // copy all syntaxes for an original dict\n    for (var key in dict) {\n      var patchDescriptors = patchDict[key] && patchDict[key].descriptors || null;\n      result[key] = {\n        prelude: key in patchDict && 'prelude' in patchDict[key] ? patchDict[key].prelude : dict[key].prelude || null,\n        descriptors: dict[key].descriptors ? patchDictionary(dict[key].descriptors, patchDescriptors || {}) : patchDescriptors && unpackSyntaxes(patchDescriptors)\n      };\n    }\n\n    // apply a patch\n    for (var _key2 in patchDict) {\n      if (!hasOwnProperty.call(dict, _key2)) {\n        result[_key2] = {\n          prelude: patchDict[_key2].prelude || null,\n          descriptors: patchDict[_key2].descriptors && unpackSyntaxes(patchDict[_key2].descriptors)\n        };\n      }\n    }\n    return result;\n  }\n  module.exports = {\n    types: patchDictionary(_$$_REQUIRE(_dependencyMap[0], \"mdn-data/css/syntaxes.json\"), _$$_REQUIRE(_dependencyMap[1], \"./patch.json\").syntaxes),\n    atrules: patchAtrules(preprocessAtrules(_$$_REQUIRE(_dependencyMap[2], \"mdn-data/css/at-rules.json\")), _$$_REQUIRE(_dependencyMap[1], \"./patch.json\").atrules),\n    properties: patchDictionary(_$$_REQUIRE(_dependencyMap[3], \"mdn-data/css/properties.json\"), _$$_REQUIRE(_dependencyMap[1], \"./patch.json\").properties)\n  };\n});","lineCount":80,"map":[[2,2,5,0],[2,6,5,6,"extendSyntax"],[2,18,5,18],[2,21,5,21],[2,32,5,32],[3,2,7,0],[3,11,7,9,"preprocessAtrules"],[3,28,7,26,"preprocessAtrules"],[3,29,7,27,"dict"],[3,33,7,31],[3,35,7,33],[4,4,8,4],[4,8,8,10,"result"],[4,14,8,16],[4,17,8,19,"Object"],[4,23,8,25],[4,24,8,26,"create"],[4,30,8,32],[4,31,8,33],[4,35,8,37],[4,36,8,38],[5,4,10,4],[5,9,10,9],[5,13,10,15,"atruleName"],[5,23,10,25],[5,27,10,29,"dict"],[5,31,10,33],[5,33,10,35],[6,6,11,8],[6,10,11,14,"atrule"],[6,16,11,20],[6,19,11,23,"dict"],[6,23,11,27],[6,24,11,28,"atruleName"],[6,34,11,38],[6,35,11,39],[7,6,12,8],[7,10,12,12,"descriptors"],[7,21,12,23],[7,24,12,26],[7,28,12,30],[8,6,14,8],[8,10,14,12,"atrule"],[8,16,14,18],[8,17,14,19,"descriptors"],[8,28,14,30],[8,30,14,32],[9,8,15,12,"descriptors"],[9,19,15,23],[9,22,15,26,"Object"],[9,28,15,32],[9,29,15,33,"create"],[9,35,15,39],[9,36,15,40],[9,40,15,44],[9,41,15,45],[10,8,17,12],[10,13,17,17],[10,17,17,23,"descriptor"],[10,27,17,33],[10,31,17,37,"atrule"],[10,37,17,43],[10,38,17,44,"descriptors"],[10,49,17,55],[10,51,17,57],[11,10,18,16,"descriptors"],[11,21,18,27],[11,22,18,28,"descriptor"],[11,32,18,38],[11,33,18,39],[11,36,18,42,"atrule"],[11,42,18,48],[11,43,18,49,"descriptors"],[11,54,18,60],[11,55,18,61,"descriptor"],[11,65,18,71],[11,66,18,72],[11,67,18,73,"syntax"],[11,73,18,79],[12,8,19,12],[13,6,20,8],[14,6,22,8,"result"],[14,12,22,14],[14,13,22,15,"atruleName"],[14,23,22,25],[14,24,22,26,"substr"],[14,30,22,32],[14,31,22,33],[14,32,22,34],[14,33,22,35],[14,34,22,36],[14,37,22,39],[15,8,23,12,"prelude"],[15,15,23,19],[15,17,23,21,"atrule"],[15,23,23,27],[15,24,23,28,"syntax"],[15,30,23,34],[15,31,23,35,"trim"],[15,35,23,39],[15,36,23,40],[15,37,23,41],[15,38,23,42,"match"],[15,43,23,47],[15,44,23,48],[15,63,23,67],[15,64,23,68],[15,65,23,69],[15,66,23,70],[15,67,23,71],[15,68,23,72,"trim"],[15,72,23,76],[15,73,23,77],[15,74,23,78],[15,78,23,82],[15,82,23,86],[16,8,24,12,"descriptors"],[16,19,24,23],[16,21,24,12,"descriptors"],[17,6,25,8],[17,7,25,9],[18,4,26,4],[19,4,28,4],[19,11,28,11,"result"],[19,17,28,17],[20,2,29,0],[21,2,31,0],[21,11,31,9,"patchDictionary"],[21,26,31,24,"patchDictionary"],[21,27,31,25,"dict"],[21,31,31,29],[21,33,31,31,"patchDict"],[21,42,31,40],[21,44,31,42],[22,4,32,4],[22,8,32,10,"result"],[22,14,32,16],[22,17,32,19],[22,18,32,20],[22,19,32,21],[24,4,34,4],[25,4,35,4],[25,9,35,9],[25,13,35,15,"key"],[25,16,35,18],[25,20,35,22,"dict"],[25,24,35,26],[25,26,35,28],[26,6,36,8,"result"],[26,12,36,14],[26,13,36,15,"key"],[26,16,36,18],[26,17,36,19],[26,20,36,22,"dict"],[26,24,36,26],[26,25,36,27,"key"],[26,28,36,30],[26,29,36,31],[26,30,36,32,"syntax"],[26,36,36,38],[26,40,36,42,"dict"],[26,44,36,46],[26,45,36,47,"key"],[26,48,36,50],[26,49,36,51],[27,4,37,4],[29,4,39,4],[30,4,40,4],[30,9,40,9],[30,13,40,15,"key"],[30,17,40,18],[30,21,40,22,"patchDict"],[30,30,40,31],[30,32,40,33],[31,6,41,8],[31,10,41,12,"key"],[31,14,41,15],[31,18,41,19,"dict"],[31,22,41,23],[31,24,41,25],[32,8,42,12],[32,12,42,16,"patchDict"],[32,21,42,25],[32,22,42,26,"key"],[32,26,42,29],[32,27,42,30],[32,28,42,31,"syntax"],[32,34,42,37],[32,36,42,39],[33,10,43,16,"result"],[33,16,43,22],[33,17,43,23,"key"],[33,21,43,26],[33,22,43,27],[33,25,43,30,"extendSyntax"],[33,37,43,42],[33,38,43,43,"test"],[33,42,43,47],[33,43,43,48,"patchDict"],[33,52,43,57],[33,53,43,58,"key"],[33,57,43,61],[33,58,43,62],[33,59,43,63,"syntax"],[33,65,43,69],[33,66,43,70],[33,69,44,22,"result"],[33,75,44,28],[33,76,44,29,"key"],[33,80,44,32],[33,81,44,33],[33,84,44,36],[33,87,44,39],[33,90,44,42,"patchDict"],[33,99,44,51],[33,100,44,52,"key"],[33,104,44,55],[33,105,44,56],[33,106,44,57,"syntax"],[33,112,44,63],[33,113,44,64,"trim"],[33,117,44,68],[33,118,44,69],[33,119,44,70],[33,122,45,22,"patchDict"],[33,131,45,31],[33,132,45,32,"key"],[33,136,45,35],[33,137,45,36],[33,138,45,37,"syntax"],[33,144,45,43],[34,8,46,12],[34,9,46,13],[34,15,46,19],[35,10,47,16],[35,17,47,23,"result"],[35,23,47,29],[35,24,47,30,"key"],[35,28,47,33],[35,29,47,34],[36,8,48,12],[37,6,49,8],[37,7,49,9],[37,13,49,15],[38,8,50,12],[38,12,50,16,"patchDict"],[38,21,50,25],[38,22,50,26,"key"],[38,26,50,29],[38,27,50,30],[38,28,50,31,"syntax"],[38,34,50,37],[38,36,50,39],[39,10,51,16,"result"],[39,16,51,22],[39,17,51,23,"key"],[39,21,51,26],[39,22,51,27],[39,25,51,30,"patchDict"],[39,34,51,39],[39,35,51,40,"key"],[39,39,51,43],[39,40,51,44],[39,41,51,45,"syntax"],[39,47,51,51],[39,48,51,52,"replace"],[39,55,51,59],[39,56,51,60,"extendSyntax"],[39,68,51,72],[39,70,51,74],[39,72,51,76],[39,73,51,77],[40,8,52,12],[41,6,53,8],[42,4,54,4],[43,4,56,4],[43,11,56,11,"result"],[43,17,56,17],[44,2,57,0],[45,2,59,0],[45,11,59,9,"unpackSyntaxes"],[45,25,59,23,"unpackSyntaxes"],[45,26,59,24,"dict"],[45,30,59,28],[45,32,59,30],[46,4,60,4],[46,8,60,10,"result"],[46,14,60,16],[46,17,60,19],[46,18,60,20],[46,19,60,21],[47,4,62,4],[47,9,62,9],[47,13,62,15,"key"],[47,16,62,18],[47,20,62,22,"dict"],[47,24,62,26],[47,26,62,28],[48,6,63,8,"result"],[48,12,63,14],[48,13,63,15,"key"],[48,16,63,18],[48,17,63,19],[48,20,63,22,"dict"],[48,24,63,26],[48,25,63,27,"key"],[48,28,63,30],[48,29,63,31],[48,30,63,32,"syntax"],[48,36,63,38],[49,4,64,4],[50,4,66,4],[50,11,66,11,"result"],[50,17,66,17],[51,2,67,0],[52,2,69,0],[52,11,69,9,"patchAtrules"],[52,23,69,21,"patchAtrules"],[52,24,69,22,"dict"],[52,28,69,26],[52,30,69,28,"patchDict"],[52,39,69,37],[52,41,69,39],[53,4,70,4],[53,8,70,10,"result"],[53,14,70,16],[53,17,70,19],[53,18,70,20],[53,19,70,21],[55,4,72,4],[56,4,73,4],[56,9,73,9],[56,13,73,15,"key"],[56,16,73,18],[56,20,73,22,"dict"],[56,24,73,26],[56,26,73,28],[57,6,74,8],[57,10,74,14,"patchDescriptors"],[57,26,74,30],[57,29,74,34,"patchDict"],[57,38,74,43],[57,39,74,44,"key"],[57,42,74,47],[57,43,74,48],[57,47,74,52,"patchDict"],[57,56,74,61],[57,57,74,62,"key"],[57,60,74,65],[57,61,74,66],[57,62,74,67,"descriptors"],[57,73,74,78],[57,77,74,83],[57,81,74,87],[58,6,76,8,"result"],[58,12,76,14],[58,13,76,15,"key"],[58,16,76,18],[58,17,76,19],[58,20,76,22],[59,8,77,12,"prelude"],[59,15,77,19],[59,17,77,21,"key"],[59,20,77,24],[59,24,77,28,"patchDict"],[59,33,77,37],[59,37,77,41],[59,46,77,50],[59,50,77,54,"patchDict"],[59,59,77,63],[59,60,77,64,"key"],[59,63,77,67],[59,64,77,68],[59,67,78,18,"patchDict"],[59,76,78,27],[59,77,78,28,"key"],[59,80,78,31],[59,81,78,32],[59,82,78,33,"prelude"],[59,89,78,40],[59,92,79,18,"dict"],[59,96,79,22],[59,97,79,23,"key"],[59,100,79,26],[59,101,79,27],[59,102,79,28,"prelude"],[59,109,79,35],[59,113,79,39],[59,117,79,43],[60,8,80,12,"descriptors"],[60,19,80,23],[60,21,80,25,"dict"],[60,25,80,29],[60,26,80,30,"key"],[60,29,80,33],[60,30,80,34],[60,31,80,35,"descriptors"],[60,42,80,46],[60,45,81,18,"patchDictionary"],[60,60,81,33],[60,61,81,34,"dict"],[60,65,81,38],[60,66,81,39,"key"],[60,69,81,42],[60,70,81,43],[60,71,81,44,"descriptors"],[60,82,81,55],[60,84,81,57,"patchDescriptors"],[60,100,81,73],[60,104,81,77],[60,105,81,78],[60,106,81,79],[60,107,81,80],[60,110,82,18,"patchDescriptors"],[60,126,82,34],[60,130,82,38,"unpackSyntaxes"],[60,144,82,52],[60,145,82,53,"patchDescriptors"],[60,161,82,69],[61,6,83,8],[61,7,83,9],[62,4,84,4],[64,4,86,4],[65,4,87,4],[65,9,87,9],[65,13,87,15,"key"],[65,18,87,18],[65,22,87,22,"patchDict"],[65,31,87,31],[65,33,87,33],[66,6,88,8],[66,10,88,12],[66,11,88,13,"hasOwnProperty"],[66,25,88,27],[66,26,88,28,"call"],[66,30,88,32],[66,31,88,33,"dict"],[66,35,88,37],[66,37,88,39,"key"],[66,42,88,42],[66,43,88,43],[66,45,88,45],[67,8,89,12,"result"],[67,14,89,18],[67,15,89,19,"key"],[67,20,89,22],[67,21,89,23],[67,24,89,26],[68,10,90,16,"prelude"],[68,17,90,23],[68,19,90,25,"patchDict"],[68,28,90,34],[68,29,90,35,"key"],[68,34,90,38],[68,35,90,39],[68,36,90,40,"prelude"],[68,43,90,47],[68,47,90,51],[68,51,90,55],[69,10,91,16,"descriptors"],[69,21,91,27],[69,23,91,29,"patchDict"],[69,32,91,38],[69,33,91,39,"key"],[69,38,91,42],[69,39,91,43],[69,40,91,44,"descriptors"],[69,51,91,55],[69,55,91,59,"unpackSyntaxes"],[69,69,91,73],[69,70,91,74,"patchDict"],[69,79,91,83],[69,80,91,84,"key"],[69,85,91,87],[69,86,91,88],[69,87,91,89,"descriptors"],[69,98,91,100],[70,8,92,12],[70,9,92,13],[71,6,93,8],[72,4,94,4],[73,4,96,4],[73,11,96,11,"result"],[73,17,96,17],[74,2,97,0],[75,2,99,0,"module"],[75,8,99,6],[75,9,99,7,"exports"],[75,16,99,14],[75,19,99,17],[76,4,100,4,"types"],[76,9,100,9],[76,11,100,11,"patchDictionary"],[76,26,100,26],[76,27,100,26,"_$$_REQUIRE"],[76,38,100,26],[76,39,100,26,"_dependencyMap"],[76,53,100,26],[76,89,100,40,"_$$_REQUIRE"],[76,100,100,40],[76,101,100,40,"_dependencyMap"],[76,115,100,40],[76,136,100,46,"syntaxes"],[76,144,100,54],[76,145,100,55],[77,4,101,4,"atrules"],[77,11,101,11],[77,13,101,13,"patchAtrules"],[77,25,101,25],[77,26,101,26,"preprocessAtrules"],[77,43,101,43],[77,44,101,43,"_$$_REQUIRE"],[77,55,101,43],[77,56,101,43,"_dependencyMap"],[77,70,101,43],[77,104,101,54],[77,105,101,55],[77,107,101,57,"_$$_REQUIRE"],[77,118,101,57],[77,119,101,57,"_dependencyMap"],[77,133,101,57],[77,154,101,63,"atrules"],[77,161,101,70],[77,162,101,71],[78,4,102,4,"properties"],[78,14,102,14],[78,16,102,16,"patchDictionary"],[78,31,102,31],[78,32,102,31,"_$$_REQUIRE"],[78,43,102,31],[78,44,102,31,"_dependencyMap"],[78,58,102,31],[78,96,102,47,"_$$_REQUIRE"],[78,107,102,47],[78,108,102,47,"_dependencyMap"],[78,122,102,47],[78,143,102,53,"properties"],[78,153,102,63],[79,2,103,0],[79,3,103,1],[80,0,103,2],[80,3]],"functionMap":{"names":["<global>","preprocessAtrules","patchDictionary","unpackSyntaxes","patchAtrules"],"mappings":"AAA;ACM;CDsB;AEE;CF0B;AGE;CHQ;AIE;CJ4B"}},"type":"js/module"}]}