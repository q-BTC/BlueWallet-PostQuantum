{"dependencies":[{"name":"../base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":15,"index":51},"end":{"line":2,"column":42,"index":78}},{"start":{"line":2,"column":15,"index":51},"end":{"line":2,"column":42,"index":78}},{"start":{"line":2,"column":15,"index":51},"end":{"line":2,"column":42,"index":78}},{"start":{"line":2,"column":15,"index":51},"end":{"line":2,"column":42,"index":78}}],"key":"ny6ZxiTrxak3kdoRrvP2aWlkG3I="}},{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":93},"end":{"line":3,"column":37,"index":117}},{"start":{"line":3,"column":13,"index":93},"end":{"line":3,"column":37,"index":117}},{"start":{"line":3,"column":13,"index":93},"end":{"line":3,"column":37,"index":117}},{"start":{"line":3,"column":13,"index":93},"end":{"line":3,"column":37,"index":117}},{"start":{"line":3,"column":13,"index":93},"end":{"line":3,"column":37,"index":117}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function DecoderBuffer(base, options) {\n    _$$_REQUIRE(_dependencyMap[0], \"../base\").Reporter.call(this, options);\n    if (!_$$_REQUIRE(_dependencyMap[1], \"buffer\").Buffer.isBuffer(base)) {\n      this.error('Input not Buffer');\n      return;\n    }\n    this.base = base;\n    this.offset = 0;\n    this.length = base.length;\n  }\n  _$$_REQUIRE(_dependencyMap[2], \"inherits\")(DecoderBuffer, _$$_REQUIRE(_dependencyMap[0], \"../base\").Reporter);\n  exports.DecoderBuffer = DecoderBuffer;\n  DecoderBuffer.prototype.save = function save() {\n    return {\n      offset: this.offset,\n      reporter: _$$_REQUIRE(_dependencyMap[0], \"../base\").Reporter.prototype.save.call(this)\n    };\n  };\n  DecoderBuffer.prototype.restore = function restore(save) {\n    // Return skipped data\n    var res = new DecoderBuffer(this.base);\n    res.offset = save.offset;\n    res.length = this.offset;\n    this.offset = save.offset;\n    _$$_REQUIRE(_dependencyMap[0], \"../base\").Reporter.prototype.restore.call(this, save.reporter);\n    return res;\n  };\n  DecoderBuffer.prototype.isEmpty = function isEmpty() {\n    return this.offset === this.length;\n  };\n  DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n    if (this.offset + 1 <= this.length) return this.base.readUInt8(this.offset++, true);else return this.error(fail || 'DecoderBuffer overrun');\n  };\n  DecoderBuffer.prototype.skip = function skip(bytes, fail) {\n    if (!(this.offset + bytes <= this.length)) return this.error(fail || 'DecoderBuffer overrun');\n    var res = new DecoderBuffer(this.base);\n\n    // Share reporter state\n    res._reporterState = this._reporterState;\n    res.offset = this.offset;\n    res.length = this.offset + bytes;\n    this.offset += bytes;\n    return res;\n  };\n  DecoderBuffer.prototype.raw = function raw(save) {\n    return this.base.slice(save ? save.offset : this.offset, this.length);\n  };\n  function EncoderBuffer(value, reporter) {\n    if (Array.isArray(value)) {\n      this.length = 0;\n      this.value = value.map(function (item) {\n        if (!(item instanceof EncoderBuffer)) item = new EncoderBuffer(item, reporter);\n        this.length += item.length;\n        return item;\n      }, this);\n    } else if (typeof value === 'number') {\n      if (!(0 <= value && value <= 0xff)) return reporter.error('non-byte EncoderBuffer value');\n      this.value = value;\n      this.length = 1;\n    } else if (typeof value === 'string') {\n      this.value = value;\n      this.length = _$$_REQUIRE(_dependencyMap[1], \"buffer\").Buffer.byteLength(value);\n    } else if (_$$_REQUIRE(_dependencyMap[1], \"buffer\").Buffer.isBuffer(value)) {\n      this.value = value;\n      this.length = value.length;\n    } else {\n      return reporter.error('Unsupported type: ' + typeof value);\n    }\n  }\n  exports.EncoderBuffer = EncoderBuffer;\n  EncoderBuffer.prototype.join = function join(out, offset) {\n    if (!out) out = new (_$$_REQUIRE(_dependencyMap[1], \"buffer\").Buffer)(this.length);\n    if (!offset) offset = 0;\n    if (this.length === 0) return out;\n    if (Array.isArray(this.value)) {\n      this.value.forEach(function (item) {\n        item.join(out, offset);\n        offset += item.length;\n      });\n    } else {\n      if (typeof this.value === 'number') out[offset] = this.value;else if (typeof this.value === 'string') out.write(this.value, offset);else if (_$$_REQUIRE(_dependencyMap[1], \"buffer\").Buffer.isBuffer(this.value)) this.value.copy(out, offset);\n      offset += this.length;\n    }\n    return out;\n  };\n});","lineCount":87,"map":[[2,2,5,0],[2,11,5,9,"DecoderBuffer"],[2,24,5,22,"DecoderBuffer"],[2,25,5,23,"base"],[2,29,5,27],[2,31,5,29,"options"],[2,38,5,36],[2,40,5,38],[3,4,6,2,"_$$_REQUIRE"],[3,15,6,2],[3,16,6,2,"_dependencyMap"],[3,30,6,2],[3,46,6,2,"Reporter"],[3,54,6,2],[3,55,6,11,"call"],[3,59,6,15],[3,60,6,16],[3,64,6,20],[3,66,6,22,"options"],[3,73,6,29],[3,74,6,30],[4,4,7,2],[4,8,7,6],[4,9,7,7,"_$$_REQUIRE"],[4,20,7,7],[4,21,7,7,"_dependencyMap"],[4,35,7,7],[4,50,7,7,"Buffer"],[4,56,7,7],[4,57,7,14,"isBuffer"],[4,65,7,22],[4,66,7,23,"base"],[4,70,7,27],[4,71,7,28],[4,73,7,30],[5,6,8,4],[5,10,8,8],[5,11,8,9,"error"],[5,16,8,14],[5,17,8,15],[5,35,8,33],[5,36,8,34],[6,6,9,4],[7,4,10,2],[8,4,12,2],[8,8,12,6],[8,9,12,7,"base"],[8,13,12,11],[8,16,12,14,"base"],[8,20,12,18],[9,4,13,2],[9,8,13,6],[9,9,13,7,"offset"],[9,15,13,13],[9,18,13,16],[9,19,13,17],[10,4,14,2],[10,8,14,6],[10,9,14,7,"length"],[10,15,14,13],[10,18,14,16,"base"],[10,22,14,20],[10,23,14,21,"length"],[10,29,14,27],[11,2,15,0],[12,2,16,0,"_$$_REQUIRE"],[12,13,16,0],[12,14,16,0,"_dependencyMap"],[12,28,16,0],[12,45,16,9,"DecoderBuffer"],[12,58,16,22],[12,60,16,22,"_$$_REQUIRE"],[12,71,16,22],[12,72,16,22,"_dependencyMap"],[12,86,16,22],[12,102,16,22,"Reporter"],[12,110,16,32],[12,111,16,33],[13,2,17,0,"exports"],[13,9,17,7],[13,10,17,8,"DecoderBuffer"],[13,23,17,21],[13,26,17,24,"DecoderBuffer"],[13,39,17,37],[14,2,19,0,"DecoderBuffer"],[14,15,19,13],[14,16,19,14,"prototype"],[14,25,19,23],[14,26,19,24,"save"],[14,30,19,28],[14,33,19,31],[14,42,19,40,"save"],[14,46,19,44,"save"],[14,47,19,44],[14,49,19,47],[15,4,20,2],[15,11,20,9],[16,6,20,11,"offset"],[16,12,20,17],[16,14,20,19],[16,18,20,23],[16,19,20,24,"offset"],[16,25,20,30],[17,6,20,32,"reporter"],[17,14,20,40],[17,16,20,42,"_$$_REQUIRE"],[17,27,20,42],[17,28,20,42,"_dependencyMap"],[17,42,20,42],[17,58,20,42,"Reporter"],[17,66,20,42],[17,67,20,51,"prototype"],[17,76,20,60],[17,77,20,61,"save"],[17,81,20,65],[17,82,20,66,"call"],[17,86,20,70],[17,87,20,71],[17,91,20,75],[18,4,20,77],[18,5,20,78],[19,2,21,0],[19,3,21,1],[20,2,23,0,"DecoderBuffer"],[20,15,23,13],[20,16,23,14,"prototype"],[20,25,23,23],[20,26,23,24,"restore"],[20,33,23,31],[20,36,23,34],[20,45,23,43,"restore"],[20,52,23,50,"restore"],[20,53,23,51,"save"],[20,57,23,55],[20,59,23,57],[21,4,24,2],[22,4,25,2],[22,8,25,6,"res"],[22,11,25,9],[22,14,25,12],[22,18,25,16,"DecoderBuffer"],[22,31,25,29],[22,32,25,30],[22,36,25,34],[22,37,25,35,"base"],[22,41,25,39],[22,42,25,40],[23,4,26,2,"res"],[23,7,26,5],[23,8,26,6,"offset"],[23,14,26,12],[23,17,26,15,"save"],[23,21,26,19],[23,22,26,20,"offset"],[23,28,26,26],[24,4,27,2,"res"],[24,7,27,5],[24,8,27,6,"length"],[24,14,27,12],[24,17,27,15],[24,21,27,19],[24,22,27,20,"offset"],[24,28,27,26],[25,4,29,2],[25,8,29,6],[25,9,29,7,"offset"],[25,15,29,13],[25,18,29,16,"save"],[25,22,29,20],[25,23,29,21,"offset"],[25,29,29,27],[26,4,30,2,"_$$_REQUIRE"],[26,15,30,2],[26,16,30,2,"_dependencyMap"],[26,30,30,2],[26,46,30,2,"Reporter"],[26,54,30,2],[26,55,30,11,"prototype"],[26,64,30,20],[26,65,30,21,"restore"],[26,72,30,28],[26,73,30,29,"call"],[26,77,30,33],[26,78,30,34],[26,82,30,38],[26,84,30,40,"save"],[26,88,30,44],[26,89,30,45,"reporter"],[26,97,30,53],[26,98,30,54],[27,4,32,2],[27,11,32,9,"res"],[27,14,32,12],[28,2,33,0],[28,3,33,1],[29,2,35,0,"DecoderBuffer"],[29,15,35,13],[29,16,35,14,"prototype"],[29,25,35,23],[29,26,35,24,"isEmpty"],[29,33,35,31],[29,36,35,34],[29,45,35,43,"isEmpty"],[29,52,35,50,"isEmpty"],[29,53,35,50],[29,55,35,53],[30,4,36,2],[30,11,36,9],[30,15,36,13],[30,16,36,14,"offset"],[30,22,36,20],[30,27,36,25],[30,31,36,29],[30,32,36,30,"length"],[30,38,36,36],[31,2,37,0],[31,3,37,1],[32,2,39,0,"DecoderBuffer"],[32,15,39,13],[32,16,39,14,"prototype"],[32,25,39,23],[32,26,39,24,"readUInt8"],[32,35,39,33],[32,38,39,36],[32,47,39,45,"readUInt8"],[32,56,39,54,"readUInt8"],[32,57,39,55,"fail"],[32,61,39,59],[32,63,39,61],[33,4,40,2],[33,8,40,6],[33,12,40,10],[33,13,40,11,"offset"],[33,19,40,17],[33,22,40,20],[33,23,40,21],[33,27,40,25],[33,31,40,29],[33,32,40,30,"length"],[33,38,40,36],[33,40,41,4],[33,47,41,11],[33,51,41,15],[33,52,41,16,"base"],[33,56,41,20],[33,57,41,21,"readUInt8"],[33,66,41,30],[33,67,41,31],[33,71,41,35],[33,72,41,36,"offset"],[33,78,41,42],[33,80,41,44],[33,82,41,46],[33,86,41,50],[33,87,41,51],[33,88,41,52],[33,93,43,4],[33,100,43,11],[33,104,43,15],[33,105,43,16,"error"],[33,110,43,21],[33,111,43,22,"fail"],[33,115,43,26],[33,119,43,30],[33,142,43,53],[33,143,43,54],[34,2,44,0],[34,3,44,1],[35,2,46,0,"DecoderBuffer"],[35,15,46,13],[35,16,46,14,"prototype"],[35,25,46,23],[35,26,46,24,"skip"],[35,30,46,28],[35,33,46,31],[35,42,46,40,"skip"],[35,46,46,44,"skip"],[35,47,46,45,"bytes"],[35,52,46,50],[35,54,46,52,"fail"],[35,58,46,56],[35,60,46,58],[36,4,47,2],[36,8,47,6],[36,10,47,8],[36,14,47,12],[36,15,47,13,"offset"],[36,21,47,19],[36,24,47,22,"bytes"],[36,29,47,27],[36,33,47,31],[36,37,47,35],[36,38,47,36,"length"],[36,44,47,42],[36,45,47,43],[36,47,48,4],[36,54,48,11],[36,58,48,15],[36,59,48,16,"error"],[36,64,48,21],[36,65,48,22,"fail"],[36,69,48,26],[36,73,48,30],[36,96,48,53],[36,97,48,54],[37,4,50,2],[37,8,50,6,"res"],[37,11,50,9],[37,14,50,12],[37,18,50,16,"DecoderBuffer"],[37,31,50,29],[37,32,50,30],[37,36,50,34],[37,37,50,35,"base"],[37,41,50,39],[37,42,50,40],[39,4,52,2],[40,4,53,2,"res"],[40,7,53,5],[40,8,53,6,"_reporterState"],[40,22,53,20],[40,25,53,23],[40,29,53,27],[40,30,53,28,"_reporterState"],[40,44,53,42],[41,4,55,2,"res"],[41,7,55,5],[41,8,55,6,"offset"],[41,14,55,12],[41,17,55,15],[41,21,55,19],[41,22,55,20,"offset"],[41,28,55,26],[42,4,56,2,"res"],[42,7,56,5],[42,8,56,6,"length"],[42,14,56,12],[42,17,56,15],[42,21,56,19],[42,22,56,20,"offset"],[42,28,56,26],[42,31,56,29,"bytes"],[42,36,56,34],[43,4,57,2],[43,8,57,6],[43,9,57,7,"offset"],[43,15,57,13],[43,19,57,17,"bytes"],[43,24,57,22],[44,4,58,2],[44,11,58,9,"res"],[44,14,58,12],[45,2,59,0],[45,3,59,1],[46,2,61,0,"DecoderBuffer"],[46,15,61,13],[46,16,61,14,"prototype"],[46,25,61,23],[46,26,61,24,"raw"],[46,29,61,27],[46,32,61,30],[46,41,61,39,"raw"],[46,44,61,42,"raw"],[46,45,61,43,"save"],[46,49,61,47],[46,51,61,49],[47,4,62,2],[47,11,62,9],[47,15,62,13],[47,16,62,14,"base"],[47,20,62,18],[47,21,62,19,"slice"],[47,26,62,24],[47,27,62,25,"save"],[47,31,62,29],[47,34,62,32,"save"],[47,38,62,36],[47,39,62,37,"offset"],[47,45,62,43],[47,48,62,46],[47,52,62,50],[47,53,62,51,"offset"],[47,59,62,57],[47,61,62,59],[47,65,62,63],[47,66,62,64,"length"],[47,72,62,70],[47,73,62,71],[48,2,63,0],[48,3,63,1],[49,2,65,0],[49,11,65,9,"EncoderBuffer"],[49,24,65,22,"EncoderBuffer"],[49,25,65,23,"value"],[49,30,65,28],[49,32,65,30,"reporter"],[49,40,65,38],[49,42,65,40],[50,4,66,2],[50,8,66,6,"Array"],[50,13,66,11],[50,14,66,12,"isArray"],[50,21,66,19],[50,22,66,20,"value"],[50,27,66,25],[50,28,66,26],[50,30,66,28],[51,6,67,4],[51,10,67,8],[51,11,67,9,"length"],[51,17,67,15],[51,20,67,18],[51,21,67,19],[52,6,68,4],[52,10,68,8],[52,11,68,9,"value"],[52,16,68,14],[52,19,68,17,"value"],[52,24,68,22],[52,25,68,23,"map"],[52,28,68,26],[52,29,68,27],[52,39,68,36,"item"],[52,43,68,40],[52,45,68,42],[53,8,69,6],[53,12,69,10],[53,14,69,12,"item"],[53,18,69,16],[53,30,69,28,"EncoderBuffer"],[53,43,69,41],[53,44,69,42],[53,46,70,8,"item"],[53,50,70,12],[53,53,70,15],[53,57,70,19,"EncoderBuffer"],[53,70,70,32],[53,71,70,33,"item"],[53,75,70,37],[53,77,70,39,"reporter"],[53,85,70,47],[53,86,70,48],[54,8,71,6],[54,12,71,10],[54,13,71,11,"length"],[54,19,71,17],[54,23,71,21,"item"],[54,27,71,25],[54,28,71,26,"length"],[54,34,71,32],[55,8,72,6],[55,15,72,13,"item"],[55,19,72,17],[56,6,73,4],[56,7,73,5],[56,9,73,7],[56,13,73,11],[56,14,73,12],[57,4,74,2],[57,5,74,3],[57,11,74,9],[57,15,74,13],[57,22,74,20,"value"],[57,27,74,25],[57,32,74,30],[57,40,74,38],[57,42,74,40],[58,6,75,4],[58,10,75,8],[58,12,75,10],[58,13,75,11],[58,17,75,15,"value"],[58,22,75,20],[58,26,75,24,"value"],[58,31,75,29],[58,35,75,33],[58,39,75,37],[58,40,75,38],[58,42,76,6],[58,49,76,13,"reporter"],[58,57,76,21],[58,58,76,22,"error"],[58,63,76,27],[58,64,76,28],[58,94,76,58],[58,95,76,59],[59,6,77,4],[59,10,77,8],[59,11,77,9,"value"],[59,16,77,14],[59,19,77,17,"value"],[59,24,77,22],[60,6,78,4],[60,10,78,8],[60,11,78,9,"length"],[60,17,78,15],[60,20,78,18],[60,21,78,19],[61,4,79,2],[61,5,79,3],[61,11,79,9],[61,15,79,13],[61,22,79,20,"value"],[61,27,79,25],[61,32,79,30],[61,40,79,38],[61,42,79,40],[62,6,80,4],[62,10,80,8],[62,11,80,9,"value"],[62,16,80,14],[62,19,80,17,"value"],[62,24,80,22],[63,6,81,4],[63,10,81,8],[63,11,81,9,"length"],[63,17,81,15],[63,20,81,18,"_$$_REQUIRE"],[63,31,81,18],[63,32,81,18,"_dependencyMap"],[63,46,81,18],[63,61,81,18,"Buffer"],[63,67,81,18],[63,68,81,25,"byteLength"],[63,78,81,35],[63,79,81,36,"value"],[63,84,81,41],[63,85,81,42],[64,4,82,2],[64,5,82,3],[64,11,82,9],[64,15,82,13,"_$$_REQUIRE"],[64,26,82,13],[64,27,82,13,"_dependencyMap"],[64,41,82,13],[64,56,82,13,"Buffer"],[64,62,82,13],[64,63,82,20,"isBuffer"],[64,71,82,28],[64,72,82,29,"value"],[64,77,82,34],[64,78,82,35],[64,80,82,37],[65,6,83,4],[65,10,83,8],[65,11,83,9,"value"],[65,16,83,14],[65,19,83,17,"value"],[65,24,83,22],[66,6,84,4],[66,10,84,8],[66,11,84,9,"length"],[66,17,84,15],[66,20,84,18,"value"],[66,25,84,23],[66,26,84,24,"length"],[66,32,84,30],[67,4,85,2],[67,5,85,3],[67,11,85,9],[68,6,86,4],[68,13,86,11,"reporter"],[68,21,86,19],[68,22,86,20,"error"],[68,27,86,25],[68,28,86,26],[68,48,86,46],[68,51,86,49],[68,58,86,56,"value"],[68,63,86,61],[68,64,86,62],[69,4,87,2],[70,2,88,0],[71,2,89,0,"exports"],[71,9,89,7],[71,10,89,8,"EncoderBuffer"],[71,23,89,21],[71,26,89,24,"EncoderBuffer"],[71,39,89,37],[72,2,91,0,"EncoderBuffer"],[72,15,91,13],[72,16,91,14,"prototype"],[72,25,91,23],[72,26,91,24,"join"],[72,30,91,28],[72,33,91,31],[72,42,91,40,"join"],[72,46,91,44,"join"],[72,47,91,45,"out"],[72,50,91,48],[72,52,91,50,"offset"],[72,58,91,56],[72,60,91,58],[73,4,92,2],[73,8,92,6],[73,9,92,7,"out"],[73,12,92,10],[73,14,93,4,"out"],[73,17,93,7],[73,20,93,10],[73,25,93,10,"_$$_REQUIRE"],[73,36,93,10],[73,37,93,10,"_dependencyMap"],[73,51,93,10],[73,66,93,10,"Buffer"],[73,72,93,10],[73,74,93,21],[73,78,93,25],[73,79,93,26,"length"],[73,85,93,32],[73,86,93,33],[74,4,94,2],[74,8,94,6],[74,9,94,7,"offset"],[74,15,94,13],[74,17,95,4,"offset"],[74,23,95,10],[74,26,95,13],[74,27,95,14],[75,4,97,2],[75,8,97,6],[75,12,97,10],[75,13,97,11,"length"],[75,19,97,17],[75,24,97,22],[75,25,97,23],[75,27,98,4],[75,34,98,11,"out"],[75,37,98,14],[76,4,100,2],[76,8,100,6,"Array"],[76,13,100,11],[76,14,100,12,"isArray"],[76,21,100,19],[76,22,100,20],[76,26,100,24],[76,27,100,25,"value"],[76,32,100,30],[76,33,100,31],[76,35,100,33],[77,6,101,4],[77,10,101,8],[77,11,101,9,"value"],[77,16,101,14],[77,17,101,15,"forEach"],[77,24,101,22],[77,25,101,23],[77,35,101,32,"item"],[77,39,101,36],[77,41,101,38],[78,8,102,6,"item"],[78,12,102,10],[78,13,102,11,"join"],[78,17,102,15],[78,18,102,16,"out"],[78,21,102,19],[78,23,102,21,"offset"],[78,29,102,27],[78,30,102,28],[79,8,103,6,"offset"],[79,14,103,12],[79,18,103,16,"item"],[79,22,103,20],[79,23,103,21,"length"],[79,29,103,27],[80,6,104,4],[80,7,104,5],[80,8,104,6],[81,4,105,2],[81,5,105,3],[81,11,105,9],[82,6,106,4],[82,10,106,8],[82,17,106,15],[82,21,106,19],[82,22,106,20,"value"],[82,27,106,25],[82,32,106,30],[82,40,106,38],[82,42,107,6,"out"],[82,45,107,9],[82,46,107,10,"offset"],[82,52,107,16],[82,53,107,17],[82,56,107,20],[82,60,107,24],[82,61,107,25,"value"],[82,66,107,30],[82,67,107,31],[82,72,108,9],[82,76,108,13],[82,83,108,20],[82,87,108,24],[82,88,108,25,"value"],[82,93,108,30],[82,98,108,35],[82,106,108,43],[82,108,109,6,"out"],[82,111,109,9],[82,112,109,10,"write"],[82,117,109,15],[82,118,109,16],[82,122,109,20],[82,123,109,21,"value"],[82,128,109,26],[82,130,109,28,"offset"],[82,136,109,34],[82,137,109,35],[82,138,109,36],[82,143,110,9],[82,147,110,13,"_$$_REQUIRE"],[82,158,110,13],[82,159,110,13,"_dependencyMap"],[82,173,110,13],[82,188,110,13,"Buffer"],[82,194,110,13],[82,195,110,20,"isBuffer"],[82,203,110,28],[82,204,110,29],[82,208,110,33],[82,209,110,34,"value"],[82,214,110,39],[82,215,110,40],[82,217,111,6],[82,221,111,10],[82,222,111,11,"value"],[82,227,111,16],[82,228,111,17,"copy"],[82,232,111,21],[82,233,111,22,"out"],[82,236,111,25],[82,238,111,27,"offset"],[82,244,111,33],[82,245,111,34],[83,6,112,4,"offset"],[83,12,112,10],[83,16,112,14],[83,20,112,18],[83,21,112,19,"length"],[83,27,112,25],[84,4,113,2],[85,4,115,2],[85,11,115,9,"out"],[85,14,115,12],[86,2,116,0],[86,3,116,1],[87,0,116,2],[87,3]],"functionMap":{"names":["<global>","DecoderBuffer","save","restore","isEmpty","readUInt8","skip","raw","EncoderBuffer","value.map$argument_0","join","value.forEach$argument_0"],"mappings":"AAA;ACI;CDU;+BEI;CFE;kCGE;CHU;kCIE;CJE;oCKE;CLK;+BME;CNa;8BOE;CPE;AQE;2BCG;KDK;CRe;+BUG;uBCU;KDG;CVY"}},"type":"js/module"}]}