{"dependencies":[{"name":"./parse.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":17,"index":174},"end":{"line":4,"column":38,"index":195}},{"start":{"line":4,"column":17,"index":174},"end":{"line":4,"column":38,"index":195}},{"start":{"line":4,"column":17,"index":174},"end":{"line":4,"column":38,"index":195}}],"key":"50OHcTvCyX9nrKoEylX5Cuz5iaY="}},{"name":"./compile.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":19,"index":326},"end":{"line":6,"column":42,"index":349}},{"start":{"line":6,"column":19,"index":326},"end":{"line":6,"column":42,"index":349}},{"start":{"line":6,"column":19,"index":326},"end":{"line":6,"column":42,"index":349}},{"start":{"line":6,"column":19,"index":326},"end":{"line":6,"column":42,"index":349}}],"key":"qi4aIeq20jJn79SC7hW1ldd07js="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.sequence = exports.generate = exports.compile = exports.parse = void 0;\n  Object.defineProperty(exports, \"parse\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[0], \"./parse.js\").parse;\n    }\n  });\n  Object.defineProperty(exports, \"compile\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[1], \"./compile.js\").compile;\n    }\n  });\n  Object.defineProperty(exports, \"generate\", {\n    enumerable: true,\n    get: function get() {\n      return _$$_REQUIRE(_dependencyMap[1], \"./compile.js\").generate;\n    }\n  });\n  /**\n   * Parses and compiles a formula to a highly optimized function.\n   * Combination of {@link parse} and {@link compile}.\n   *\n   * If the formula doesn't match any elements,\n   * it returns [`boolbase`](https://github.com/fb55/boolbase)'s `falseFunc`.\n   * Otherwise, a function accepting an _index_ is returned, which returns\n   * whether or not the passed _index_ matches the formula.\n   *\n   * Note: The nth-rule starts counting at `1`, the returned function at `0`.\n   *\n   * @param formula The formula to compile.\n   * @example\n   * const check = nthCheck(\"2n+3\");\n   *\n   * check(0); // `false`\n   * check(1); // `false`\n   * check(2); // `true`\n   * check(3); // `false`\n   * check(4); // `true`\n   * check(5); // `false`\n   * check(6); // `true`\n   */\n  function nthCheck(formula) {\n    return (0, _$$_REQUIRE(_dependencyMap[1], \"./compile.js\").compile)((0, _$$_REQUIRE(_dependencyMap[0], \"./parse.js\").parse)(formula));\n  }\n  exports.default = nthCheck;\n  /**\n   * Parses and compiles a formula to a generator that produces a sequence of indices.\n   * Combination of {@link parse} and {@link generate}.\n   *\n   * @param formula The formula to compile.\n   * @returns A function that produces a sequence of indices.\n   * @example <caption>Always increasing</caption>\n   *\n   * ```js\n   * const gen = nthCheck.sequence('2n+3')\n   *\n   * gen() // `1`\n   * gen() // `3`\n   * gen() // `5`\n   * gen() // `8`\n   * gen() // `11`\n   * ```\n   *\n   * @example <caption>With end value</caption>\n   *\n   * ```js\n   *\n   * const gen = nthCheck.sequence('-2n+5');\n   *\n   * gen() // 0\n   * gen() // 2\n   * gen() // 4\n   * gen() // null\n   * ```\n   */\n  function sequence(formula) {\n    return (0, _$$_REQUIRE(_dependencyMap[1], \"./compile.js\").generate)((0, _$$_REQUIRE(_dependencyMap[0], \"./parse.js\").parse)(formula));\n  }\n  exports.sequence = sequence;\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"sequence"],[7,18,3,16],[7,21,3,19,"exports"],[7,28,3,26],[7,29,3,27,"generate"],[7,37,3,35],[7,40,3,38,"exports"],[7,47,3,45],[7,48,3,46,"compile"],[7,55,3,53],[7,58,3,56,"exports"],[7,65,3,63],[7,66,3,64,"parse"],[7,71,3,69],[7,74,3,72],[7,79,3,77],[7,80,3,78],[8,2,5,0,"Object"],[8,8,5,6],[8,9,5,7,"defineProperty"],[8,23,5,21],[8,24,5,22,"exports"],[8,31,5,29],[8,33,5,31],[8,40,5,38],[8,42,5,40],[9,4,5,42,"enumerable"],[9,14,5,52],[9,16,5,54],[9,20,5,58],[10,4,5,60,"get"],[10,7,5,63],[10,9,5,65],[10,18,5,60,"get"],[10,21,5,63,"get"],[10,22,5,63],[10,24,5,77],[11,6,5,79],[11,13,5,86,"_$$_REQUIRE"],[11,24,5,86],[11,25,5,86,"_dependencyMap"],[11,39,5,86],[11,58,5,97,"parse"],[11,63,5,102],[12,4,5,104],[13,2,5,106],[13,3,5,107],[13,4,5,108],[14,2,7,0,"Object"],[14,8,7,6],[14,9,7,7,"defineProperty"],[14,23,7,21],[14,24,7,22,"exports"],[14,31,7,29],[14,33,7,31],[14,42,7,40],[14,44,7,42],[15,4,7,44,"enumerable"],[15,14,7,54],[15,16,7,56],[15,20,7,60],[16,4,7,62,"get"],[16,7,7,65],[16,9,7,67],[16,18,7,62,"get"],[16,21,7,65,"get"],[16,22,7,65],[16,24,7,79],[17,6,7,81],[17,13,7,88,"_$$_REQUIRE"],[17,24,7,88],[17,25,7,88,"_dependencyMap"],[17,39,7,88],[17,60,7,101,"compile"],[17,67,7,108],[18,4,7,110],[19,2,7,112],[19,3,7,113],[19,4,7,114],[20,2,8,0,"Object"],[20,8,8,6],[20,9,8,7,"defineProperty"],[20,23,8,21],[20,24,8,22,"exports"],[20,31,8,29],[20,33,8,31],[20,43,8,41],[20,45,8,43],[21,4,8,45,"enumerable"],[21,14,8,55],[21,16,8,57],[21,20,8,61],[22,4,8,63,"get"],[22,7,8,66],[22,9,8,68],[22,18,8,63,"get"],[22,21,8,66,"get"],[22,22,8,66],[22,24,8,80],[23,6,8,82],[23,13,8,89,"_$$_REQUIRE"],[23,24,8,89],[23,25,8,89,"_dependencyMap"],[23,39,8,89],[23,60,8,102,"generate"],[23,68,8,110],[24,4,8,112],[25,2,8,114],[25,3,8,115],[25,4,8,116],[26,2,9,0],[27,0,10,0],[28,0,11,0],[29,0,12,0],[30,0,13,0],[31,0,14,0],[32,0,15,0],[33,0,16,0],[34,0,17,0],[35,0,18,0],[36,0,19,0],[37,0,20,0],[38,0,21,0],[39,0,22,0],[40,0,23,0],[41,0,24,0],[42,0,25,0],[43,0,26,0],[44,0,27,0],[45,0,28,0],[46,0,29,0],[47,0,30,0],[48,0,31,0],[49,2,32,0],[49,11,32,9,"nthCheck"],[49,19,32,17,"nthCheck"],[49,20,32,18,"formula"],[49,27,32,25],[49,29,32,27],[50,4,33,4],[50,11,33,11],[50,12,33,12],[50,13,33,13],[50,15,33,15,"_$$_REQUIRE"],[50,26,33,15],[50,27,33,15,"_dependencyMap"],[50,41,33,15],[50,62,33,28,"compile"],[50,69,33,35],[50,71,33,37],[50,72,33,38],[50,73,33,39],[50,75,33,41,"_$$_REQUIRE"],[50,86,33,41],[50,87,33,41,"_dependencyMap"],[50,101,33,41],[50,120,33,52,"parse"],[50,125,33,57],[50,127,33,59,"formula"],[50,134,33,66],[50,135,33,67],[50,136,33,68],[51,2,34,0],[52,2,35,0,"exports"],[52,9,35,7],[52,10,35,8,"default"],[52,17,35,15],[52,20,35,18,"nthCheck"],[52,28,35,26],[53,2,36,0],[54,0,37,0],[55,0,38,0],[56,0,39,0],[57,0,40,0],[58,0,41,0],[59,0,42,0],[60,0,43,0],[61,0,44,0],[62,0,45,0],[63,0,46,0],[64,0,47,0],[65,0,48,0],[66,0,49,0],[67,0,50,0],[68,0,51,0],[69,0,52,0],[70,0,53,0],[71,0,54,0],[72,0,55,0],[73,0,56,0],[74,0,57,0],[75,0,58,0],[76,0,59,0],[77,0,60,0],[78,0,61,0],[79,0,62,0],[80,0,63,0],[81,0,64,0],[82,0,65,0],[83,2,66,0],[83,11,66,9,"sequence"],[83,19,66,17,"sequence"],[83,20,66,18,"formula"],[83,27,66,25],[83,29,66,27],[84,4,67,4],[84,11,67,11],[84,12,67,12],[84,13,67,13],[84,15,67,15,"_$$_REQUIRE"],[84,26,67,15],[84,27,67,15,"_dependencyMap"],[84,41,67,15],[84,62,67,28,"generate"],[84,70,67,36],[84,72,67,38],[84,73,67,39],[84,74,67,40],[84,76,67,42,"_$$_REQUIRE"],[84,87,67,42],[84,88,67,42,"_dependencyMap"],[84,102,67,42],[84,121,67,53,"parse"],[84,126,67,58],[84,128,67,60,"formula"],[84,135,67,67],[84,136,67,68],[84,137,67,69],[85,2,68,0],[86,2,69,0,"exports"],[86,9,69,7],[86,10,69,8,"sequence"],[86,18,69,16],[86,21,69,19,"sequence"],[86,29,69,27],[87,0,69,28],[87,3]],"functionMap":{"names":["<global>","Object.defineProperty$argument_2.get","nthCheck","sequence"],"mappings":"AAA;iECI,wCD;mECE,4CD;oECC,6CD;AEwB;CFE;AGgC;CHE"}},"type":"js/module"}]}