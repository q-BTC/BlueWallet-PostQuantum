{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":13,"index":1856},"end":{"line":15,"column":31,"index":1874}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  var _slicedToArray = function () {\n    function sliceIterator(arr, i) {\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n      var _e = undefined;\n      try {\n        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"]) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n      return _arr;\n    }\n    return function (arr, i) {\n      if (Array.isArray(arr)) {\n        return arr;\n      } else if (Symbol.iterator in Object(arr)) {\n        return sliceIterator(arr, i);\n      } else {\n        throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n      }\n    };\n  }();\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  var utils = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[0], \"./utils\"));\n  function _interopRequireWildcard(obj) {\n    if (obj && obj.__esModule) {\n      return obj;\n    } else {\n      var newObj = {};\n      if (obj != null) {\n        for (var key in obj) {\n          if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n        }\n      }\n      newObj.default = obj;\n      return newObj;\n    }\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  /**\n   * Simple module to localize the React interface using the same syntax\n   * used in the ReactNativeLocalization module\n   * (https://github.com/stefalda/ReactNativeLocalization)\n   *\n   * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n   *\n   * It uses a call to the Navigator/Browser object to get the current interface language,\n   * then display the correct language strings or the default language (the first\n   * one if a match is not found).\n   *\n   * How to use:\n   * Check the instructions at:\n   * https://github.com/stefalda/localized-strings\n   */\n\n  var placeholderReplaceRegex = /(\\{[\\d|\\w]+\\})/;\n  var placeholderReferenceRegex = /(\\$ref\\{[\\w|.]+\\})/;\n  var LocalizedStrings = function () {\n    /**\n     * Constructor used to provide the strings objects in various language and the optional callback to get\n     * the interface language\n     * @param {*} props - the strings object\n     * @param {Function} options.customLanguageInterface - the optional method to use to get the InterfaceLanguage\n     * @param {Boolean} options.pseudo - convert all strings to pseudo, helpful when implementing\n     * @param {Boolean} options.pseudoMultipleLanguages - add 40% to pseudo, helps with translations in the future\n     * @param {Boolean} options.logsEnabled - Enable/Disable console.log outputs (default=true)\n     */\n    function LocalizedStrings(props, options) {\n      _classCallCheck(this, LocalizedStrings);\n\n      // Compatibility fix with previous version\n      if (typeof options === \"function\") {\n        /* eslint-disable no-param-reassign */\n        options = {\n          customLanguageInterface: options\n        };\n        /* eslint-enable */\n      }\n      this._opts = _extends({}, {\n        customLanguageInterface: utils.getInterfaceLanguage,\n        pseudo: false,\n        pseudoMultipleLanguages: false,\n        logsEnabled: true\n      }, options);\n      this._interfaceLanguage = this._opts.customLanguageInterface();\n      this._language = this._interfaceLanguage;\n      this.setContent(props);\n    }\n\n    /**\n     * Set the strings objects based on the parameter passed in the constructor\n     * @param {*} props\n     */\n\n    _createClass(LocalizedStrings, [{\n      key: \"setContent\",\n      value: function setContent(props) {\n        var _this = this;\n        var _Object$keys = Object.keys(props),\n          _Object$keys2 = _slicedToArray(_Object$keys, 1),\n          defaultLang = _Object$keys2[0];\n        this._defaultLanguage = defaultLang;\n        this._defaultLanguageFirstLevelKeys = [];\n        // Store locally the passed strings\n        this._props = props;\n        utils.validateTranslationKeys(Object.keys(props[this._defaultLanguage]));\n        // Store first level keys (for identifying missing translations)\n        Object.keys(this._props[this._defaultLanguage]).forEach(function (key) {\n          if (typeof _this._props[_this._defaultLanguage][key] === \"string\") {\n            _this._defaultLanguageFirstLevelKeys.push(key);\n          }\n        });\n        // Set language to its default value (the interface)\n        this.setLanguage(this._interfaceLanguage);\n        // Developermode with pseudo\n        if (this._opts.pseudo) {\n          this._pseudoAllValues(this._props);\n        }\n      }\n\n      /**\n       * Replace all strings to pseudo value\n       * @param {Object} obj - Loopable object\n       */\n    }, {\n      key: \"_pseudoAllValues\",\n      value: function _pseudoAllValues(obj) {\n        var _this2 = this;\n        Object.keys(obj).forEach(function (property) {\n          if (_typeof(obj[property]) === \"object\") {\n            _this2._pseudoAllValues(obj[property]);\n          } else if (typeof obj[property] === \"string\") {\n            if (obj[property].indexOf(\"[\") === 0 && obj[property].lastIndexOf(\"]\") === obj[property].length - 1) {\n              // already psuedo fixed\n              return;\n            }\n            // @TODO must be a way to get regex to find all replaceble strings except our replacement variables\n            var strArr = obj[property].split(\" \");\n            for (var i = 0; i < strArr.length; i += 1) {\n              if (strArr[i].match(placeholderReplaceRegex)) {\n                // we want to keep this string, includes specials\n              } else if (strArr[i].match(placeholderReferenceRegex)) {\n                // we want to keep this string, includes specials\n              } else {\n                var len = strArr[i].length;\n                if (_this2._opts.pseudoMultipleLanguages) {\n                  len = parseInt(len * 1.4, 10); // add length with 40%\n                }\n                strArr[i] = utils.randomPseudo(len);\n              }\n            }\n            obj[property] = \"[\" + strArr.join(\" \") + \"]\"; // eslint-disable-line no-param-reassign\n          }\n        });\n      }\n\n      /**\n       * Can be used from ouside the class to force a particular language\n       * indipendently from the interface one\n       * @param {*} language\n       */\n    }, {\n      key: \"setLanguage\",\n      value: function setLanguage(language) {\n        var _this3 = this;\n\n        // Check if exists a translation for the current language or if the default\n        // should be used\n        var bestLanguage = utils.getBestMatchingLanguage(language, this._props);\n        var defaultLanguage = Object.keys(this._props)[0];\n        this._language = bestLanguage;\n        // Associate the language object to the this object\n        if (this._props[bestLanguage]) {\n          // delete default propery values to identify missing translations\n          for (var i = 0; i < this._defaultLanguageFirstLevelKeys.length; i += 1) {\n            delete this[this._defaultLanguageFirstLevelKeys[i]];\n          }\n          var localizedStrings = _extends({}, this._props[this._language]);\n          Object.keys(localizedStrings).forEach(function (key) {\n            _this3[key] = localizedStrings[key];\n          });\n          // Now add any string missing from the translation but existing in the default language\n          if (defaultLanguage !== this._language) {\n            localizedStrings = this._props[defaultLanguage];\n            this._fallbackValues(localizedStrings, this);\n          }\n        }\n      }\n\n      /**\n       * Load fallback values for missing translations\n       * @param {*} defaultStrings\n       * @param {*} strings\n       */\n    }, {\n      key: \"_fallbackValues\",\n      value: function _fallbackValues(defaultStrings, strings) {\n        var _this4 = this;\n        Object.keys(defaultStrings).forEach(function (key) {\n          if (Object.prototype.hasOwnProperty.call(defaultStrings, key) && !strings[key] && strings[key] !== \"\") {\n            strings[key] = defaultStrings[key]; // eslint-disable-line no-param-reassign\n            if (_this4._opts.logsEnabled) {\n              console.log(\"\\uD83D\\uDEA7 \\uD83D\\uDC77 key '\" + key + \"' not found in localizedStrings for language \" + _this4._language + \" \\uD83D\\uDEA7\");\n            }\n          } else if (typeof strings[key] !== \"string\") {\n            // It's an object\n            _this4._fallbackValues(defaultStrings[key], strings[key]);\n          }\n        });\n      }\n\n      /**\n       * The current language displayed (could differ from the interface language\n       * if it has been forced manually and a matching translation has been found)\n       */\n    }, {\n      key: \"getLanguage\",\n      value: function getLanguage() {\n        return this._language;\n      }\n\n      /**\n       * The current interface language (could differ from the language displayed)\n       */\n    }, {\n      key: \"getInterfaceLanguage\",\n      value: function getInterfaceLanguage() {\n        return this._interfaceLanguage;\n      }\n\n      /**\n       * Return an array containing the available languages passed as props in the constructor\n       */\n    }, {\n      key: \"getAvailableLanguages\",\n      value: function getAvailableLanguages() {\n        var _this5 = this;\n        if (!this._availableLanguages) {\n          this._availableLanguages = [];\n          Object.keys(this._props).forEach(function (key) {\n            _this5._availableLanguages.push(key);\n          });\n        }\n        return this._availableLanguages;\n      }\n\n      // Format the passed string replacing the numbered or tokenized placeholders\n      // eg. 1: I'd like some {0} and {1}, or just {0}\n      // eg. 2: I'd like some {bread} and {butter}, or just {bread}\n      // eg. 3: I'd like some $ref{bread} and $ref{butter}, or just $ref{bread}\n      // Use example:\n      // eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n      // eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter })\n      // eg. 3: strings.formatString(strings.question)\n    }, {\n      key: \"formatString\",\n      value: function formatString(str) {\n        var _this6 = this;\n        for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          valuesForPlaceholders[_key - 1] = arguments[_key];\n        }\n        var input = str || \"\";\n        if (typeof input === \"string\") {\n          input = this.getString(str, null, true) || input;\n        }\n        var ref = input.split(placeholderReferenceRegex).filter(function (textPart) {\n          return !!textPart;\n        }).map(function (textPart) {\n          if (textPart.match(placeholderReferenceRegex)) {\n            var matchedKey = textPart.slice(5, -1);\n            var referenceValue = _this6.getString(matchedKey);\n            if (referenceValue) return referenceValue;\n            if (_this6._opts.logsEnabled) {\n              console.log(\"No Localization ref found for '\" + textPart + \"' in string '\" + str + \"'\");\n            }\n            // lets print it another way so next replacer doesn't find it\n            return \"$ref(id:\" + matchedKey + \")\";\n          }\n          return textPart;\n        }).join(\"\");\n        return ref.split(placeholderReplaceRegex).filter(function (textPart) {\n          return !!textPart;\n        }).map(function (textPart) {\n          if (textPart.match(placeholderReplaceRegex)) {\n            var matchedKey = textPart.slice(1, -1);\n            var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n            // If no value found, check if working with an object instead\n            if (valueForPlaceholder === undefined) {\n              var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n              if (valueFromObjectPlaceholder !== undefined) {\n                valueForPlaceholder = valueFromObjectPlaceholder;\n              } else {\n                // If value still isn't found, then it must have been undefined/null\n                return valueForPlaceholder;\n              }\n            }\n            return valueForPlaceholder;\n          }\n          return textPart;\n        }).join(\"\");\n      }\n\n      // Return a string with the passed key in a different language or defalt if not set\n      // We allow deep . notation for finding strings\n    }, {\n      key: \"getString\",\n      value: function getString(key, language) {\n        var omitWarning = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        try {\n          var current = this._props[language || this._language];\n          var paths = key.split(\".\");\n          for (var i = 0; i < paths.length; i += 1) {\n            if (current[paths[i]] === undefined) {\n              throw Error(paths[i]);\n            }\n            current = current[paths[i]];\n          }\n          return current;\n        } catch (ex) {\n          if (!omitWarning && this._opts.logsEnabled) {\n            console.log(\"No localization found for key '\" + key + \"' and language '\" + language + \"', failed on \" + ex.message);\n          }\n        }\n        return null;\n      }\n\n      /**\n       * The current props (locale object)\n       */\n    }, {\n      key: \"getContent\",\n      value: function getContent() {\n        return this._props;\n      }\n    }]);\n    return LocalizedStrings;\n  }();\n  exports.default = LocalizedStrings;\n});","lineCount":392,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,7,0],[7,6,7,4,"_typeof"],[7,13,7,11],[7,16,7,14],[7,23,7,21,"Symbol"],[7,29,7,27],[7,34,7,32],[7,44,7,42],[7,48,7,46],[7,55,7,53,"Symbol"],[7,61,7,59],[7,62,7,60,"iterator"],[7,70,7,68],[7,75,7,73],[7,83,7,81],[7,86,7,84],[7,96,7,94,"obj"],[7,99,7,97],[7,101,7,99],[8,4,7,101],[8,11,7,108],[8,18,7,115,"obj"],[8,21,7,118],[9,2,7,120],[9,3,7,121],[9,6,7,124],[9,16,7,134,"obj"],[9,19,7,137],[9,21,7,139],[10,4,7,141],[10,11,7,148,"obj"],[10,14,7,151],[10,18,7,155],[10,25,7,162,"Symbol"],[10,31,7,168],[10,36,7,173],[10,46,7,183],[10,50,7,187,"obj"],[10,53,7,190],[10,54,7,191,"constructor"],[10,65,7,202],[10,70,7,207,"Symbol"],[10,76,7,213],[10,80,7,217,"obj"],[10,83,7,220],[10,88,7,225,"Symbol"],[10,94,7,231],[10,95,7,232,"prototype"],[10,104,7,241],[10,107,7,244],[10,115,7,252],[10,118,7,255],[10,125,7,262,"obj"],[10,128,7,265],[11,2,7,267],[11,3,7,268],[12,2,9,0],[12,6,9,4,"_slicedToArray"],[12,20,9,18],[12,23,9,21],[12,35,9,33],[13,4,9,35],[13,13,9,44,"sliceIterator"],[13,26,9,57,"sliceIterator"],[13,27,9,58,"arr"],[13,30,9,61],[13,32,9,63,"i"],[13,33,9,64],[13,35,9,66],[14,6,9,68],[14,10,9,72,"_arr"],[14,14,9,76],[14,17,9,79],[14,19,9,81],[15,6,9,83],[15,10,9,87,"_n"],[15,12,9,89],[15,15,9,92],[15,19,9,96],[16,6,9,98],[16,10,9,102,"_d"],[16,12,9,104],[16,15,9,107],[16,20,9,112],[17,6,9,114],[17,10,9,118,"_e"],[17,12,9,120],[17,15,9,123,"undefined"],[17,24,9,132],[18,6,9,134],[18,10,9,138],[19,8,9,140],[19,13,9,145],[19,17,9,149,"_i"],[19,19,9,151],[19,22,9,154,"arr"],[19,25,9,157],[19,26,9,158,"Symbol"],[19,32,9,164],[19,33,9,165,"iterator"],[19,41,9,173],[19,42,9,174],[19,43,9,175],[19,44,9,176],[19,46,9,178,"_s"],[19,48,9,180],[19,50,9,182],[19,52,9,184,"_n"],[19,54,9,186],[19,57,9,189],[19,58,9,190,"_s"],[19,60,9,192],[19,63,9,195,"_i"],[19,65,9,197],[19,66,9,198,"next"],[19,70,9,202],[19,71,9,203],[19,72,9,204],[19,74,9,206,"done"],[19,78,9,210],[19,79,9,211],[19,81,9,213,"_n"],[19,83,9,215],[19,86,9,218],[19,90,9,222],[19,92,9,224],[20,10,9,226,"_arr"],[20,14,9,230],[20,15,9,231,"push"],[20,19,9,235],[20,20,9,236,"_s"],[20,22,9,238],[20,23,9,239,"value"],[20,28,9,244],[20,29,9,245],[21,10,9,247],[21,14,9,251,"i"],[21,15,9,252],[21,19,9,256,"_arr"],[21,23,9,260],[21,24,9,261,"length"],[21,30,9,267],[21,35,9,272,"i"],[21,36,9,273],[21,38,9,275],[22,8,9,282],[23,6,9,284],[23,7,9,285],[23,8,9,286],[23,15,9,293,"err"],[23,18,9,296],[23,20,9,298],[24,8,9,300,"_d"],[24,10,9,302],[24,13,9,305],[24,17,9,309],[25,8,9,311,"_e"],[25,10,9,313],[25,13,9,316,"err"],[25,16,9,319],[26,6,9,321],[26,7,9,322],[26,16,9,331],[27,8,9,333],[27,12,9,337],[28,10,9,339],[28,14,9,343],[28,15,9,344,"_n"],[28,17,9,346],[28,21,9,350,"_i"],[28,23,9,352],[28,24,9,353],[28,32,9,361],[28,33,9,362],[28,35,9,364,"_i"],[28,37,9,366],[28,38,9,367],[28,46,9,375],[28,47,9,376],[28,48,9,377],[28,49,9,378],[29,8,9,380],[29,9,9,381],[29,18,9,390],[30,10,9,392],[30,14,9,396,"_d"],[30,16,9,398],[30,18,9,400],[30,24,9,406,"_e"],[30,26,9,408],[31,8,9,410],[32,6,9,412],[33,6,9,414],[33,13,9,421,"_arr"],[33,17,9,425],[34,4,9,427],[35,4,9,429],[35,11,9,436],[35,21,9,446,"arr"],[35,24,9,449],[35,26,9,451,"i"],[35,27,9,452],[35,29,9,454],[36,6,9,456],[36,10,9,460,"Array"],[36,15,9,465],[36,16,9,466,"isArray"],[36,23,9,473],[36,24,9,474,"arr"],[36,27,9,477],[36,28,9,478],[36,30,9,480],[37,8,9,482],[37,15,9,489,"arr"],[37,18,9,492],[38,6,9,494],[38,7,9,495],[38,13,9,501],[38,17,9,505,"Symbol"],[38,23,9,511],[38,24,9,512,"iterator"],[38,32,9,520],[38,36,9,524,"Object"],[38,42,9,530],[38,43,9,531,"arr"],[38,46,9,534],[38,47,9,535],[38,49,9,537],[39,8,9,539],[39,15,9,546,"sliceIterator"],[39,28,9,559],[39,29,9,560,"arr"],[39,32,9,563],[39,34,9,565,"i"],[39,35,9,566],[39,36,9,567],[40,6,9,569],[40,7,9,570],[40,13,9,576],[41,8,9,578],[41,14,9,584],[41,18,9,588,"TypeError"],[41,27,9,597],[41,28,9,598],[41,82,9,652],[41,83,9,653],[42,6,9,655],[43,4,9,657],[43,5,9,658],[44,2,9,660],[44,3,9,661],[44,4,9,662],[44,5,9,663],[45,2,11,0],[45,6,11,4,"_extends"],[45,14,11,12],[45,17,11,15,"Object"],[45,23,11,21],[45,24,11,22,"assign"],[45,30,11,28],[45,34,11,32],[45,44,11,42,"target"],[45,50,11,48],[45,52,11,50],[46,4,11,52],[46,9,11,57],[46,13,11,61,"i"],[46,14,11,62],[46,17,11,65],[46,18,11,66],[46,20,11,68,"i"],[46,21,11,69],[46,24,11,72,"arguments"],[46,33,11,81],[46,34,11,82,"length"],[46,40,11,88],[46,42,11,90,"i"],[46,43,11,91],[46,45,11,93],[46,47,11,95],[47,6,11,97],[47,10,11,101,"source"],[47,16,11,107],[47,19,11,110,"arguments"],[47,28,11,119],[47,29,11,120,"i"],[47,30,11,121],[47,31,11,122],[48,6,11,124],[48,11,11,129],[48,15,11,133,"key"],[48,18,11,136],[48,22,11,140,"source"],[48,28,11,146],[48,30,11,148],[49,8,11,150],[49,12,11,154,"Object"],[49,18,11,160],[49,19,11,161,"prototype"],[49,28,11,170],[49,29,11,171,"hasOwnProperty"],[49,43,11,185],[49,44,11,186,"call"],[49,48,11,190],[49,49,11,191,"source"],[49,55,11,197],[49,57,11,199,"key"],[49,60,11,202],[49,61,11,203],[49,63,11,205],[50,10,11,207,"target"],[50,16,11,213],[50,17,11,214,"key"],[50,20,11,217],[50,21,11,218],[50,24,11,221,"source"],[50,30,11,227],[50,31,11,228,"key"],[50,34,11,231],[50,35,11,232],[51,8,11,234],[52,6,11,236],[53,4,11,238],[54,4,11,240],[54,11,11,247,"target"],[54,17,11,253],[55,2,11,255],[55,3,11,256],[56,2,13,0],[56,6,13,4,"_createClass"],[56,18,13,16],[56,21,13,19],[56,33,13,31],[57,4,13,33],[57,13,13,42,"defineProperties"],[57,29,13,58,"defineProperties"],[57,30,13,59,"target"],[57,36,13,65],[57,38,13,67,"props"],[57,43,13,72],[57,45,13,74],[58,6,13,76],[58,11,13,81],[58,15,13,85,"i"],[58,16,13,86],[58,19,13,89],[58,20,13,90],[58,22,13,92,"i"],[58,23,13,93],[58,26,13,96,"props"],[58,31,13,101],[58,32,13,102,"length"],[58,38,13,108],[58,40,13,110,"i"],[58,41,13,111],[58,43,13,113],[58,45,13,115],[59,8,13,117],[59,12,13,121,"descriptor"],[59,22,13,131],[59,25,13,134,"props"],[59,30,13,139],[59,31,13,140,"i"],[59,32,13,141],[59,33,13,142],[60,8,13,144,"descriptor"],[60,18,13,154],[60,19,13,155,"enumerable"],[60,29,13,165],[60,32,13,168,"descriptor"],[60,42,13,178],[60,43,13,179,"enumerable"],[60,53,13,189],[60,57,13,193],[60,62,13,198],[61,8,13,200,"descriptor"],[61,18,13,210],[61,19,13,211,"configurable"],[61,31,13,223],[61,34,13,226],[61,38,13,230],[62,8,13,232],[62,12,13,236],[62,19,13,243],[62,23,13,247,"descriptor"],[62,33,13,257],[62,35,13,259,"descriptor"],[62,45,13,269],[62,46,13,270,"writable"],[62,54,13,278],[62,57,13,281],[62,61,13,285],[63,8,13,287,"Object"],[63,14,13,293],[63,15,13,294,"defineProperty"],[63,29,13,308],[63,30,13,309,"target"],[63,36,13,315],[63,38,13,317,"descriptor"],[63,48,13,327],[63,49,13,328,"key"],[63,52,13,331],[63,54,13,333,"descriptor"],[63,64,13,343],[63,65,13,344],[64,6,13,346],[65,4,13,348],[66,4,13,350],[66,11,13,357],[66,21,13,367,"Constructor"],[66,32,13,378],[66,34,13,380,"protoProps"],[66,44,13,390],[66,46,13,392,"staticProps"],[66,57,13,403],[66,59,13,405],[67,6,13,407],[67,10,13,411,"protoProps"],[67,20,13,421],[67,22,13,423,"defineProperties"],[67,38,13,439],[67,39,13,440,"Constructor"],[67,50,13,451],[67,51,13,452,"prototype"],[67,60,13,461],[67,62,13,463,"protoProps"],[67,72,13,473],[67,73,13,474],[68,6,13,476],[68,10,13,480,"staticProps"],[68,21,13,491],[68,23,13,493,"defineProperties"],[68,39,13,509],[68,40,13,510,"Constructor"],[68,51,13,521],[68,53,13,523,"staticProps"],[68,64,13,534],[68,65,13,535],[69,6,13,537],[69,13,13,544,"Constructor"],[69,24,13,555],[70,4,13,557],[70,5,13,558],[71,2,13,560],[71,3,13,561],[71,4,13,562],[71,5,13,563],[72,2,17,0],[72,6,17,4,"utils"],[72,11,17,9],[72,14,17,12,"_interopRequireWildcard"],[72,37,17,35],[72,38,17,35,"_$$_REQUIRE"],[72,49,17,35],[72,50,17,35,"_dependencyMap"],[72,64,17,35],[72,79,17,42],[72,80,17,43],[73,2,19,0],[73,11,19,9,"_interopRequireWildcard"],[73,34,19,32,"_interopRequireWildcard"],[73,35,19,33,"obj"],[73,38,19,36],[73,40,19,38],[74,4,19,40],[74,8,19,44,"obj"],[74,11,19,47],[74,15,19,51,"obj"],[74,18,19,54],[74,19,19,55,"__esModule"],[74,29,19,65],[74,31,19,67],[75,6,19,69],[75,13,19,76,"obj"],[75,16,19,79],[76,4,19,81],[76,5,19,82],[76,11,19,88],[77,6,19,90],[77,10,19,94,"newObj"],[77,16,19,100],[77,19,19,103],[77,20,19,104],[77,21,19,105],[78,6,19,107],[78,10,19,111,"obj"],[78,13,19,114],[78,17,19,118],[78,21,19,122],[78,23,19,124],[79,8,19,126],[79,13,19,131],[79,17,19,135,"key"],[79,20,19,138],[79,24,19,142,"obj"],[79,27,19,145],[79,29,19,147],[80,10,19,149],[80,14,19,153,"Object"],[80,20,19,159],[80,21,19,160,"prototype"],[80,30,19,169],[80,31,19,170,"hasOwnProperty"],[80,45,19,184],[80,46,19,185,"call"],[80,50,19,189],[80,51,19,190,"obj"],[80,54,19,193],[80,56,19,195,"key"],[80,59,19,198],[80,60,19,199],[80,62,19,201,"newObj"],[80,68,19,207],[80,69,19,208,"key"],[80,72,19,211],[80,73,19,212],[80,76,19,215,"obj"],[80,79,19,218],[80,80,19,219,"key"],[80,83,19,222],[80,84,19,223],[81,8,19,225],[82,6,19,227],[83,6,19,229,"newObj"],[83,12,19,235],[83,13,19,236,"default"],[83,20,19,243],[83,23,19,246,"obj"],[83,26,19,249],[84,6,19,251],[84,13,19,258,"newObj"],[84,19,19,264],[85,4,19,266],[86,2,19,268],[87,2,21,0],[87,11,21,9,"_classCallCheck"],[87,26,21,24,"_classCallCheck"],[87,27,21,25,"instance"],[87,35,21,33],[87,37,21,35,"Constructor"],[87,48,21,46],[87,50,21,48],[88,4,21,50],[88,8,21,54],[88,10,21,56,"instance"],[88,18,21,64],[88,30,21,76,"Constructor"],[88,41,21,87],[88,42,21,88],[88,44,21,90],[89,6,21,92],[89,12,21,98],[89,16,21,102,"TypeError"],[89,25,21,111],[89,26,21,112],[89,61,21,147],[89,62,21,148],[90,4,21,150],[91,2,21,152],[93,2,23,0],[94,0,24,0],[95,0,25,0],[96,0,26,0],[97,0,27,0],[98,0,28,0],[99,0,29,0],[100,0,30,0],[101,0,31,0],[102,0,32,0],[103,0,33,0],[104,0,34,0],[105,0,35,0],[106,0,36,0],[107,0,37,0],[109,2,39,0],[109,6,39,4,"placeholderReplaceRegex"],[109,29,39,27],[109,32,39,30],[109,48,39,46],[110,2,40,0],[110,6,40,4,"placeholderReferenceRegex"],[110,31,40,29],[110,34,40,32],[110,54,40,52],[111,2,42,0],[111,6,42,4,"LocalizedStrings"],[111,22,42,20],[111,25,42,23],[111,37,42,35],[112,4,43,2],[113,0,44,0],[114,0,45,0],[115,0,46,0],[116,0,47,0],[117,0,48,0],[118,0,49,0],[119,0,50,0],[120,0,51,0],[121,4,52,2],[121,13,52,11,"LocalizedStrings"],[121,29,52,27,"LocalizedStrings"],[121,30,52,28,"props"],[121,35,52,33],[121,37,52,35,"options"],[121,44,52,42],[121,46,52,44],[122,6,53,4,"_classCallCheck"],[122,21,53,19],[122,22,53,20],[122,26,53,24],[122,28,53,26,"LocalizedStrings"],[122,44,53,42],[122,45,53,43],[124,6,55,4],[125,6,56,4],[125,10,56,8],[125,17,56,15,"options"],[125,24,56,22],[125,29,56,27],[125,39,56,37],[125,41,56,39],[126,8,57,6],[127,8,58,6,"options"],[127,15,58,13],[127,18,58,16],[128,10,58,18,"customLanguageInterface"],[128,33,58,41],[128,35,58,43,"options"],[129,8,58,51],[129,9,58,52],[130,8,59,6],[131,6,60,4],[132,6,61,4],[132,10,61,8],[132,11,61,9,"_opts"],[132,16,61,14],[132,19,61,17,"_extends"],[132,27,61,25],[132,28,61,26],[132,29,61,27],[132,30,61,28],[132,32,61,30],[133,8,62,6,"customLanguageInterface"],[133,31,62,29],[133,33,62,31,"utils"],[133,38,62,36],[133,39,62,37,"getInterfaceLanguage"],[133,59,62,57],[134,8,63,6,"pseudo"],[134,14,63,12],[134,16,63,14],[134,21,63,19],[135,8,64,6,"pseudoMultipleLanguages"],[135,31,64,29],[135,33,64,31],[135,38,64,36],[136,8,65,6,"logsEnabled"],[136,19,65,17],[136,21,65,19],[137,6,66,4],[137,7,66,5],[137,9,66,7,"options"],[137,16,66,14],[137,17,66,15],[138,6,67,4],[138,10,67,8],[138,11,67,9,"_interfaceLanguage"],[138,29,67,27],[138,32,67,30],[138,36,67,34],[138,37,67,35,"_opts"],[138,42,67,40],[138,43,67,41,"customLanguageInterface"],[138,66,67,64],[138,67,67,65],[138,68,67,66],[139,6,68,4],[139,10,68,8],[139,11,68,9,"_language"],[139,20,68,18],[139,23,68,21],[139,27,68,25],[139,28,68,26,"_interfaceLanguage"],[139,46,68,44],[140,6,69,4],[140,10,69,8],[140,11,69,9,"setContent"],[140,21,69,19],[140,22,69,20,"props"],[140,27,69,25],[140,28,69,26],[141,4,70,2],[143,4,72,2],[144,0,73,0],[145,0,74,0],[146,0,75,0],[148,4,78,2,"_createClass"],[148,16,78,14],[148,17,78,15,"LocalizedStrings"],[148,33,78,31],[148,35,78,33],[148,36,78,34],[149,6,79,4,"key"],[149,9,79,7],[149,11,79,9],[149,23,79,21],[150,6,80,4,"value"],[150,11,80,9],[150,13,80,11],[150,22,80,20,"setContent"],[150,32,80,30,"setContent"],[150,33,80,31,"props"],[150,38,80,36],[150,40,80,38],[151,8,81,6],[151,12,81,10,"_this"],[151,17,81,15],[151,20,81,18],[151,24,81,22],[152,8,83,6],[152,12,83,10,"_Object$keys"],[152,24,83,22],[152,27,83,25,"Object"],[152,33,83,31],[152,34,83,32,"keys"],[152,38,83,36],[152,39,83,37,"props"],[152,44,83,42],[152,45,83,43],[153,10,84,10,"_Object$keys2"],[153,23,84,23],[153,26,84,26,"_slicedToArray"],[153,40,84,40],[153,41,84,41,"_Object$keys"],[153,53,84,53],[153,55,84,55],[153,56,84,56],[153,57,84,57],[154,10,85,10,"defaultLang"],[154,21,85,21],[154,24,85,24,"_Object$keys2"],[154,37,85,37],[154,38,85,38],[154,39,85,39],[154,40,85,40],[155,8,87,6],[155,12,87,10],[155,13,87,11,"_defaultLanguage"],[155,29,87,27],[155,32,87,30,"defaultLang"],[155,43,87,41],[156,8,88,6],[156,12,88,10],[156,13,88,11,"_defaultLanguageFirstLevelKeys"],[156,43,88,41],[156,46,88,44],[156,48,88,46],[157,8,89,6],[158,8,90,6],[158,12,90,10],[158,13,90,11,"_props"],[158,19,90,17],[158,22,90,20,"props"],[158,27,90,25],[159,8,91,6,"utils"],[159,13,91,11],[159,14,91,12,"validateTranslationKeys"],[159,37,91,35],[159,38,91,36,"Object"],[159,44,91,42],[159,45,91,43,"keys"],[159,49,91,47],[159,50,91,48,"props"],[159,55,91,53],[159,56,91,54],[159,60,91,58],[159,61,91,59,"_defaultLanguage"],[159,77,91,75],[159,78,91,76],[159,79,91,77],[159,80,91,78],[160,8,92,6],[161,8,93,6,"Object"],[161,14,93,12],[161,15,93,13,"keys"],[161,19,93,17],[161,20,93,18],[161,24,93,22],[161,25,93,23,"_props"],[161,31,93,29],[161,32,93,30],[161,36,93,34],[161,37,93,35,"_defaultLanguage"],[161,53,93,51],[161,54,93,52],[161,55,93,53],[161,56,93,54,"forEach"],[161,63,93,61],[161,64,93,62],[161,74,93,72,"key"],[161,77,93,75],[161,79,93,77],[162,10,94,8],[162,14,94,12],[162,21,94,19,"_this"],[162,26,94,24],[162,27,94,25,"_props"],[162,33,94,31],[162,34,94,32,"_this"],[162,39,94,37],[162,40,94,38,"_defaultLanguage"],[162,56,94,54],[162,57,94,55],[162,58,94,56,"key"],[162,61,94,59],[162,62,94,60],[162,67,94,65],[162,75,94,73],[162,77,94,75],[163,12,95,10,"_this"],[163,17,95,15],[163,18,95,16,"_defaultLanguageFirstLevelKeys"],[163,48,95,46],[163,49,95,47,"push"],[163,53,95,51],[163,54,95,52,"key"],[163,57,95,55],[163,58,95,56],[164,10,96,8],[165,8,97,6],[165,9,97,7],[165,10,97,8],[166,8,98,6],[167,8,99,6],[167,12,99,10],[167,13,99,11,"setLanguage"],[167,24,99,22],[167,25,99,23],[167,29,99,27],[167,30,99,28,"_interfaceLanguage"],[167,48,99,46],[167,49,99,47],[168,8,100,6],[169,8,101,6],[169,12,101,10],[169,16,101,14],[169,17,101,15,"_opts"],[169,22,101,20],[169,23,101,21,"pseudo"],[169,29,101,27],[169,31,101,29],[170,10,102,8],[170,14,102,12],[170,15,102,13,"_pseudoAllValues"],[170,31,102,29],[170,32,102,30],[170,36,102,34],[170,37,102,35,"_props"],[170,43,102,41],[170,44,102,42],[171,8,103,6],[172,6,104,4],[174,6,106,4],[175,0,107,0],[176,0,108,0],[177,0,109,0],[178,4,111,2],[178,5,111,3],[178,7,111,5],[179,6,112,4,"key"],[179,9,112,7],[179,11,112,9],[179,29,112,27],[180,6,113,4,"value"],[180,11,113,9],[180,13,113,11],[180,22,113,20,"_pseudoAllValues"],[180,38,113,36,"_pseudoAllValues"],[180,39,113,37,"obj"],[180,42,113,40],[180,44,113,42],[181,8,114,6],[181,12,114,10,"_this2"],[181,18,114,16],[181,21,114,19],[181,25,114,23],[182,8,116,6,"Object"],[182,14,116,12],[182,15,116,13,"keys"],[182,19,116,17],[182,20,116,18,"obj"],[182,23,116,21],[182,24,116,22],[182,25,116,23,"forEach"],[182,32,116,30],[182,33,116,31],[182,43,116,41,"property"],[182,51,116,49],[182,53,116,51],[183,10,117,8],[183,14,117,12,"_typeof"],[183,21,117,19],[183,22,117,20,"obj"],[183,25,117,23],[183,26,117,24,"property"],[183,34,117,32],[183,35,117,33],[183,36,117,34],[183,41,117,39],[183,49,117,47],[183,51,117,49],[184,12,118,10,"_this2"],[184,18,118,16],[184,19,118,17,"_pseudoAllValues"],[184,35,118,33],[184,36,118,34,"obj"],[184,39,118,37],[184,40,118,38,"property"],[184,48,118,46],[184,49,118,47],[184,50,118,48],[185,10,119,8],[185,11,119,9],[185,17,119,15],[185,21,119,19],[185,28,119,26,"obj"],[185,31,119,29],[185,32,119,30,"property"],[185,40,119,38],[185,41,119,39],[185,46,119,44],[185,54,119,52],[185,56,119,54],[186,12,120,10],[186,16,120,14,"obj"],[186,19,120,17],[186,20,120,18,"property"],[186,28,120,26],[186,29,120,27],[186,30,120,28,"indexOf"],[186,37,120,35],[186,38,120,36],[186,41,120,39],[186,42,120,40],[186,47,120,45],[186,48,120,46],[186,52,120,50,"obj"],[186,55,120,53],[186,56,120,54,"property"],[186,64,120,62],[186,65,120,63],[186,66,120,64,"lastIndexOf"],[186,77,120,75],[186,78,120,76],[186,81,120,79],[186,82,120,80],[186,87,120,85,"obj"],[186,90,120,88],[186,91,120,89,"property"],[186,99,120,97],[186,100,120,98],[186,101,120,99,"length"],[186,107,120,105],[186,110,120,108],[186,111,120,109],[186,113,120,111],[187,14,121,12],[188,14,122,12],[189,12,123,10],[190,12,124,10],[191,12,125,10],[191,16,125,14,"strArr"],[191,22,125,20],[191,25,125,23,"obj"],[191,28,125,26],[191,29,125,27,"property"],[191,37,125,35],[191,38,125,36],[191,39,125,37,"split"],[191,44,125,42],[191,45,125,43],[191,48,125,46],[191,49,125,47],[192,12,126,10],[192,17,126,15],[192,21,126,19,"i"],[192,22,126,20],[192,25,126,23],[192,26,126,24],[192,28,126,26,"i"],[192,29,126,27],[192,32,126,30,"strArr"],[192,38,126,36],[192,39,126,37,"length"],[192,45,126,43],[192,47,126,45,"i"],[192,48,126,46],[192,52,126,50],[192,53,126,51],[192,55,126,53],[193,14,127,12],[193,18,127,16,"strArr"],[193,24,127,22],[193,25,127,23,"i"],[193,26,127,24],[193,27,127,25],[193,28,127,26,"match"],[193,33,127,31],[193,34,127,32,"placeholderReplaceRegex"],[193,57,127,55],[193,58,127,56],[193,60,127,58],[194,16,128,14],[195,14,128,14],[195,15,129,13],[195,21,129,19],[195,25,129,23,"strArr"],[195,31,129,29],[195,32,129,30,"i"],[195,33,129,31],[195,34,129,32],[195,35,129,33,"match"],[195,40,129,38],[195,41,129,39,"placeholderReferenceRegex"],[195,66,129,64],[195,67,129,65],[195,69,129,67],[196,16,130,14],[197,14,130,14],[197,15,131,13],[197,21,131,19],[198,16,132,14],[198,20,132,18,"len"],[198,23,132,21],[198,26,132,24,"strArr"],[198,32,132,30],[198,33,132,31,"i"],[198,34,132,32],[198,35,132,33],[198,36,132,34,"length"],[198,42,132,40],[199,16,133,14],[199,20,133,18,"_this2"],[199,26,133,24],[199,27,133,25,"_opts"],[199,32,133,30],[199,33,133,31,"pseudoMultipleLanguages"],[199,56,133,54],[199,58,133,56],[200,18,134,16,"len"],[200,21,134,19],[200,24,134,22,"parseInt"],[200,32,134,30],[200,33,134,31,"len"],[200,36,134,34],[200,39,134,37],[200,42,134,40],[200,44,134,42],[200,46,134,44],[200,47,134,45],[200,48,134,46],[200,49,134,47],[201,16,135,14],[202,16,136,14,"strArr"],[202,22,136,20],[202,23,136,21,"i"],[202,24,136,22],[202,25,136,23],[202,28,136,26,"utils"],[202,33,136,31],[202,34,136,32,"randomPseudo"],[202,46,136,44],[202,47,136,45,"len"],[202,50,136,48],[202,51,136,49],[203,14,137,12],[204,12,138,10],[205,12,139,10,"obj"],[205,15,139,13],[205,16,139,14,"property"],[205,24,139,22],[205,25,139,23],[205,28,139,26],[205,31,139,29],[205,34,139,32,"strArr"],[205,40,139,38],[205,41,139,39,"join"],[205,45,139,43],[205,46,139,44],[205,49,139,47],[205,50,139,48],[205,53,139,51],[205,56,139,54],[205,57,139,55],[205,58,139,56],[206,10,140,8],[207,8,141,6],[207,9,141,7],[207,10,141,8],[208,6,142,4],[210,6,144,4],[211,0,145,0],[212,0,146,0],[213,0,147,0],[214,0,148,0],[215,4,150,2],[215,5,150,3],[215,7,150,5],[216,6,151,4,"key"],[216,9,151,7],[216,11,151,9],[216,24,151,22],[217,6,152,4,"value"],[217,11,152,9],[217,13,152,11],[217,22,152,20,"setLanguage"],[217,33,152,31,"setLanguage"],[217,34,152,32,"language"],[217,42,152,40],[217,44,152,42],[218,8,153,6],[218,12,153,10,"_this3"],[218,18,153,16],[218,21,153,19],[218,25,153,23],[220,8,155,6],[221,8,156,6],[222,8,157,6],[222,12,157,10,"bestLanguage"],[222,24,157,22],[222,27,157,25,"utils"],[222,32,157,30],[222,33,157,31,"getBestMatchingLanguage"],[222,56,157,54],[222,57,157,55,"language"],[222,65,157,63],[222,67,157,65],[222,71,157,69],[222,72,157,70,"_props"],[222,78,157,76],[222,79,157,77],[223,8,158,6],[223,12,158,10,"defaultLanguage"],[223,27,158,25],[223,30,158,28,"Object"],[223,36,158,34],[223,37,158,35,"keys"],[223,41,158,39],[223,42,158,40],[223,46,158,44],[223,47,158,45,"_props"],[223,53,158,51],[223,54,158,52],[223,55,158,53],[223,56,158,54],[223,57,158,55],[224,8,159,6],[224,12,159,10],[224,13,159,11,"_language"],[224,22,159,20],[224,25,159,23,"bestLanguage"],[224,37,159,35],[225,8,160,6],[226,8,161,6],[226,12,161,10],[226,16,161,14],[226,17,161,15,"_props"],[226,23,161,21],[226,24,161,22,"bestLanguage"],[226,36,161,34],[226,37,161,35],[226,39,161,37],[227,10,162,8],[228,10,163,8],[228,15,163,13],[228,19,163,17,"i"],[228,20,163,18],[228,23,163,21],[228,24,163,22],[228,26,163,24,"i"],[228,27,163,25],[228,30,163,28],[228,34,163,32],[228,35,163,33,"_defaultLanguageFirstLevelKeys"],[228,65,163,63],[228,66,163,64,"length"],[228,72,163,70],[228,74,163,72,"i"],[228,75,163,73],[228,79,163,77],[228,80,163,78],[228,82,163,80],[229,12,164,10],[229,19,164,17],[229,23,164,21],[229,24,164,22],[229,28,164,26],[229,29,164,27,"_defaultLanguageFirstLevelKeys"],[229,59,164,57],[229,60,164,58,"i"],[229,61,164,59],[229,62,164,60],[229,63,164,61],[230,10,165,8],[231,10,166,8],[231,14,166,12,"localizedStrings"],[231,30,166,28],[231,33,166,31,"_extends"],[231,41,166,39],[231,42,166,40],[231,43,166,41],[231,44,166,42],[231,46,166,44],[231,50,166,48],[231,51,166,49,"_props"],[231,57,166,55],[231,58,166,56],[231,62,166,60],[231,63,166,61,"_language"],[231,72,166,70],[231,73,166,71],[231,74,166,72],[232,10,167,8,"Object"],[232,16,167,14],[232,17,167,15,"keys"],[232,21,167,19],[232,22,167,20,"localizedStrings"],[232,38,167,36],[232,39,167,37],[232,40,167,38,"forEach"],[232,47,167,45],[232,48,167,46],[232,58,167,56,"key"],[232,61,167,59],[232,63,167,61],[233,12,168,10,"_this3"],[233,18,168,16],[233,19,168,17,"key"],[233,22,168,20],[233,23,168,21],[233,26,168,24,"localizedStrings"],[233,42,168,40],[233,43,168,41,"key"],[233,46,168,44],[233,47,168,45],[234,10,169,8],[234,11,169,9],[234,12,169,10],[235,10,170,8],[236,10,171,8],[236,14,171,12,"defaultLanguage"],[236,29,171,27],[236,34,171,32],[236,38,171,36],[236,39,171,37,"_language"],[236,48,171,46],[236,50,171,48],[237,12,172,10,"localizedStrings"],[237,28,172,26],[237,31,172,29],[237,35,172,33],[237,36,172,34,"_props"],[237,42,172,40],[237,43,172,41,"defaultLanguage"],[237,58,172,56],[237,59,172,57],[238,12,173,10],[238,16,173,14],[238,17,173,15,"_fallbackValues"],[238,32,173,30],[238,33,173,31,"localizedStrings"],[238,49,173,47],[238,51,173,49],[238,55,173,53],[238,56,173,54],[239,10,174,8],[240,8,175,6],[241,6,176,4],[243,6,178,4],[244,0,179,0],[245,0,180,0],[246,0,181,0],[247,0,182,0],[248,4,184,2],[248,5,184,3],[248,7,184,5],[249,6,185,4,"key"],[249,9,185,7],[249,11,185,9],[249,28,185,26],[250,6,186,4,"value"],[250,11,186,9],[250,13,186,11],[250,22,186,20,"_fallbackValues"],[250,37,186,35,"_fallbackValues"],[250,38,186,36,"defaultStrings"],[250,52,186,50],[250,54,186,52,"strings"],[250,61,186,59],[250,63,186,61],[251,8,187,6],[251,12,187,10,"_this4"],[251,18,187,16],[251,21,187,19],[251,25,187,23],[252,8,189,6,"Object"],[252,14,189,12],[252,15,189,13,"keys"],[252,19,189,17],[252,20,189,18,"defaultStrings"],[252,34,189,32],[252,35,189,33],[252,36,189,34,"forEach"],[252,43,189,41],[252,44,189,42],[252,54,189,52,"key"],[252,57,189,55],[252,59,189,57],[253,10,190,8],[253,14,190,12,"Object"],[253,20,190,18],[253,21,190,19,"prototype"],[253,30,190,28],[253,31,190,29,"hasOwnProperty"],[253,45,190,43],[253,46,190,44,"call"],[253,50,190,48],[253,51,190,49,"defaultStrings"],[253,65,190,63],[253,67,190,65,"key"],[253,70,190,68],[253,71,190,69],[253,75,190,73],[253,76,190,74,"strings"],[253,83,190,81],[253,84,190,82,"key"],[253,87,190,85],[253,88,190,86],[253,92,190,90,"strings"],[253,99,190,97],[253,100,190,98,"key"],[253,103,190,101],[253,104,190,102],[253,109,190,107],[253,111,190,109],[253,113,190,111],[254,12,191,10,"strings"],[254,19,191,17],[254,20,191,18,"key"],[254,23,191,21],[254,24,191,22],[254,27,191,25,"defaultStrings"],[254,41,191,39],[254,42,191,40,"key"],[254,45,191,43],[254,46,191,44],[254,47,191,45],[254,48,191,46],[255,12,192,10],[255,16,192,14,"_this4"],[255,22,192,20],[255,23,192,21,"_opts"],[255,28,192,26],[255,29,192,27,"logsEnabled"],[255,40,192,38],[255,42,192,40],[256,14,193,12,"console"],[256,21,193,19],[256,22,193,20,"log"],[256,25,193,23],[256,26,193,24],[256,59,193,57],[256,62,193,60,"key"],[256,65,193,63],[256,68,193,66],[256,115,193,113],[256,118,193,116,"_this4"],[256,124,193,122],[256,125,193,123,"_language"],[256,134,193,132],[256,137,193,135],[256,152,193,150],[256,153,193,151],[257,12,194,10],[258,10,195,8],[258,11,195,9],[258,17,195,15],[258,21,195,19],[258,28,195,26,"strings"],[258,35,195,33],[258,36,195,34,"key"],[258,39,195,37],[258,40,195,38],[258,45,195,43],[258,53,195,51],[258,55,195,53],[259,12,196,10],[260,12,197,10,"_this4"],[260,18,197,16],[260,19,197,17,"_fallbackValues"],[260,34,197,32],[260,35,197,33,"defaultStrings"],[260,49,197,47],[260,50,197,48,"key"],[260,53,197,51],[260,54,197,52],[260,56,197,54,"strings"],[260,63,197,61],[260,64,197,62,"key"],[260,67,197,65],[260,68,197,66],[260,69,197,67],[261,10,198,8],[262,8,199,6],[262,9,199,7],[262,10,199,8],[263,6,200,4],[265,6,202,4],[266,0,203,0],[267,0,204,0],[268,0,205,0],[269,4,207,2],[269,5,207,3],[269,7,207,5],[270,6,208,4,"key"],[270,9,208,7],[270,11,208,9],[270,24,208,22],[271,6,209,4,"value"],[271,11,209,9],[271,13,209,11],[271,22,209,20,"getLanguage"],[271,33,209,31,"getLanguage"],[271,34,209,31],[271,36,209,34],[272,8,210,6],[272,15,210,13],[272,19,210,17],[272,20,210,18,"_language"],[272,29,210,27],[273,6,211,4],[275,6,213,4],[276,0,214,0],[277,0,215,0],[278,4,217,2],[278,5,217,3],[278,7,217,5],[279,6,218,4,"key"],[279,9,218,7],[279,11,218,9],[279,33,218,31],[280,6,219,4,"value"],[280,11,219,9],[280,13,219,11],[280,22,219,20,"getInterfaceLanguage"],[280,42,219,40,"getInterfaceLanguage"],[280,43,219,40],[280,45,219,43],[281,8,220,6],[281,15,220,13],[281,19,220,17],[281,20,220,18,"_interfaceLanguage"],[281,38,220,36],[282,6,221,4],[284,6,223,4],[285,0,224,0],[286,0,225,0],[287,4,227,2],[287,5,227,3],[287,7,227,5],[288,6,228,4,"key"],[288,9,228,7],[288,11,228,9],[288,34,228,32],[289,6,229,4,"value"],[289,11,229,9],[289,13,229,11],[289,22,229,20,"getAvailableLanguages"],[289,43,229,41,"getAvailableLanguages"],[289,44,229,41],[289,46,229,44],[290,8,230,6],[290,12,230,10,"_this5"],[290,18,230,16],[290,21,230,19],[290,25,230,23],[291,8,232,6],[291,12,232,10],[291,13,232,11],[291,17,232,15],[291,18,232,16,"_availableLanguages"],[291,37,232,35],[291,39,232,37],[292,10,233,8],[292,14,233,12],[292,15,233,13,"_availableLanguages"],[292,34,233,32],[292,37,233,35],[292,39,233,37],[293,10,234,8,"Object"],[293,16,234,14],[293,17,234,15,"keys"],[293,21,234,19],[293,22,234,20],[293,26,234,24],[293,27,234,25,"_props"],[293,33,234,31],[293,34,234,32],[293,35,234,33,"forEach"],[293,42,234,40],[293,43,234,41],[293,53,234,51,"key"],[293,56,234,54],[293,58,234,56],[294,12,235,10,"_this5"],[294,18,235,16],[294,19,235,17,"_availableLanguages"],[294,38,235,36],[294,39,235,37,"push"],[294,43,235,41],[294,44,235,42,"key"],[294,47,235,45],[294,48,235,46],[295,10,236,8],[295,11,236,9],[295,12,236,10],[296,8,237,6],[297,8,238,6],[297,15,238,13],[297,19,238,17],[297,20,238,18,"_availableLanguages"],[297,39,238,37],[298,6,239,4],[300,6,241,4],[301,6,242,4],[302,6,243,4],[303,6,244,4],[304,6,245,4],[305,6,246,4],[306,6,247,4],[307,6,248,4],[308,4,250,2],[308,5,250,3],[308,7,250,5],[309,6,251,4,"key"],[309,9,251,7],[309,11,251,9],[309,25,251,23],[310,6,252,4,"value"],[310,11,252,9],[310,13,252,11],[310,22,252,20,"formatString"],[310,34,252,32,"formatString"],[310,35,252,33,"str"],[310,38,252,36],[310,40,252,38],[311,8,253,6],[311,12,253,10,"_this6"],[311,18,253,16],[311,21,253,19],[311,25,253,23],[312,8,255,6],[312,13,255,11],[312,17,255,15,"_len"],[312,21,255,19],[312,24,255,22,"arguments"],[312,33,255,31],[312,34,255,32,"length"],[312,40,255,38],[312,42,255,40,"valuesForPlaceholders"],[312,63,255,61],[312,66,255,64,"Array"],[312,71,255,69],[312,72,255,70,"_len"],[312,76,255,74],[312,79,255,77],[312,80,255,78],[312,83,255,81,"_len"],[312,87,255,85],[312,90,255,88],[312,91,255,89],[312,94,255,92],[312,95,255,93],[312,96,255,94],[312,98,255,96,"_key"],[312,102,255,100],[312,105,255,103],[312,106,255,104],[312,108,255,106,"_key"],[312,112,255,110],[312,115,255,113,"_len"],[312,119,255,117],[312,121,255,119,"_key"],[312,125,255,123],[312,127,255,125],[312,129,255,127],[313,10,256,8,"valuesForPlaceholders"],[313,31,256,29],[313,32,256,30,"_key"],[313,36,256,34],[313,39,256,37],[313,40,256,38],[313,41,256,39],[313,44,256,42,"arguments"],[313,53,256,51],[313,54,256,52,"_key"],[313,58,256,56],[313,59,256,57],[314,8,257,6],[315,8,259,6],[315,12,259,10,"input"],[315,17,259,15],[315,20,259,18,"str"],[315,23,259,21],[315,27,259,25],[315,29,259,27],[316,8,260,6],[316,12,260,10],[316,19,260,17,"input"],[316,24,260,22],[316,29,260,27],[316,37,260,35],[316,39,260,37],[317,10,261,8,"input"],[317,15,261,13],[317,18,261,16],[317,22,261,20],[317,23,261,21,"getString"],[317,32,261,30],[317,33,261,31,"str"],[317,36,261,34],[317,38,261,36],[317,42,261,40],[317,44,261,42],[317,48,261,46],[317,49,261,47],[317,53,261,51,"input"],[317,58,261,56],[318,8,262,6],[319,8,263,6],[319,12,263,10,"ref"],[319,15,263,13],[319,18,263,16,"input"],[319,23,263,21],[319,24,263,22,"split"],[319,29,263,27],[319,30,263,28,"placeholderReferenceRegex"],[319,55,263,53],[319,56,263,54],[319,57,263,55,"filter"],[319,63,263,61],[319,64,263,62],[319,74,263,72,"textPart"],[319,82,263,80],[319,84,263,82],[320,10,264,8],[320,17,264,15],[320,18,264,16],[320,19,264,17,"textPart"],[320,27,264,25],[321,8,265,6],[321,9,265,7],[321,10,265,8],[321,11,265,9,"map"],[321,14,265,12],[321,15,265,13],[321,25,265,23,"textPart"],[321,33,265,31],[321,35,265,33],[322,10,266,8],[322,14,266,12,"textPart"],[322,22,266,20],[322,23,266,21,"match"],[322,28,266,26],[322,29,266,27,"placeholderReferenceRegex"],[322,54,266,52],[322,55,266,53],[322,57,266,55],[323,12,267,10],[323,16,267,14,"matchedKey"],[323,26,267,24],[323,29,267,27,"textPart"],[323,37,267,35],[323,38,267,36,"slice"],[323,43,267,41],[323,44,267,42],[323,45,267,43],[323,47,267,45],[323,48,267,46],[323,49,267,47],[323,50,267,48],[324,12,268,10],[324,16,268,14,"referenceValue"],[324,30,268,28],[324,33,268,31,"_this6"],[324,39,268,37],[324,40,268,38,"getString"],[324,49,268,47],[324,50,268,48,"matchedKey"],[324,60,268,58],[324,61,268,59],[325,12,269,10],[325,16,269,14,"referenceValue"],[325,30,269,28],[325,32,269,30],[325,39,269,37,"referenceValue"],[325,53,269,51],[326,12,270,10],[326,16,270,14,"_this6"],[326,22,270,20],[326,23,270,21,"_opts"],[326,28,270,26],[326,29,270,27,"logsEnabled"],[326,40,270,38],[326,42,270,40],[327,14,271,12,"console"],[327,21,271,19],[327,22,271,20,"log"],[327,25,271,23],[327,26,271,24],[327,59,271,57],[327,62,271,60,"textPart"],[327,70,271,68],[327,73,271,71],[327,88,271,86],[327,91,271,89,"str"],[327,94,271,92],[327,97,271,95],[327,100,271,98],[327,101,271,99],[328,12,272,10],[329,12,273,10],[330,12,274,10],[330,19,274,17],[330,29,274,27],[330,32,274,30,"matchedKey"],[330,42,274,40],[330,45,274,43],[330,48,274,46],[331,10,275,8],[332,10,276,8],[332,17,276,15,"textPart"],[332,25,276,23],[333,8,277,6],[333,9,277,7],[333,10,277,8],[333,11,277,9,"join"],[333,15,277,13],[333,16,277,14],[333,18,277,16],[333,19,277,17],[334,8,278,6],[334,15,278,13,"ref"],[334,18,278,16],[334,19,278,17,"split"],[334,24,278,22],[334,25,278,23,"placeholderReplaceRegex"],[334,48,278,46],[334,49,278,47],[334,50,278,48,"filter"],[334,56,278,54],[334,57,278,55],[334,67,278,65,"textPart"],[334,75,278,73],[334,77,278,75],[335,10,279,8],[335,17,279,15],[335,18,279,16],[335,19,279,17,"textPart"],[335,27,279,25],[336,8,280,6],[336,9,280,7],[336,10,280,8],[336,11,280,9,"map"],[336,14,280,12],[336,15,280,13],[336,25,280,23,"textPart"],[336,33,280,31],[336,35,280,33],[337,10,281,8],[337,14,281,12,"textPart"],[337,22,281,20],[337,23,281,21,"match"],[337,28,281,26],[337,29,281,27,"placeholderReplaceRegex"],[337,52,281,50],[337,53,281,51],[337,55,281,53],[338,12,282,10],[338,16,282,14,"matchedKey"],[338,26,282,24],[338,29,282,27,"textPart"],[338,37,282,35],[338,38,282,36,"slice"],[338,43,282,41],[338,44,282,42],[338,45,282,43],[338,47,282,45],[338,48,282,46],[338,49,282,47],[338,50,282,48],[339,12,283,10],[339,16,283,14,"valueForPlaceholder"],[339,35,283,33],[339,38,283,36,"valuesForPlaceholders"],[339,59,283,57],[339,60,283,58,"matchedKey"],[339,70,283,68],[339,71,283,69],[340,12,284,10],[341,12,285,10],[341,16,285,14,"valueForPlaceholder"],[341,35,285,33],[341,40,285,38,"undefined"],[341,49,285,47],[341,51,285,49],[342,14,286,12],[342,18,286,16,"valueFromObjectPlaceholder"],[342,44,286,42],[342,47,286,45,"valuesForPlaceholders"],[342,68,286,66],[342,69,286,67],[342,70,286,68],[342,71,286,69],[342,72,286,70,"matchedKey"],[342,82,286,80],[342,83,286,81],[343,14,287,12],[343,18,287,16,"valueFromObjectPlaceholder"],[343,44,287,42],[343,49,287,47,"undefined"],[343,58,287,56],[343,60,287,58],[344,16,288,14,"valueForPlaceholder"],[344,35,288,33],[344,38,288,36,"valueFromObjectPlaceholder"],[344,64,288,62],[345,14,289,12],[345,15,289,13],[345,21,289,19],[346,16,290,14],[347,16,291,14],[347,23,291,21,"valueForPlaceholder"],[347,42,291,40],[348,14,292,12],[349,12,293,10],[350,12,295,10],[350,19,295,17,"valueForPlaceholder"],[350,38,295,36],[351,10,296,8],[352,10,297,8],[352,17,297,15,"textPart"],[352,25,297,23],[353,8,298,6],[353,9,298,7],[353,10,298,8],[353,11,298,9,"join"],[353,15,298,13],[353,16,298,14],[353,18,298,16],[353,19,298,17],[354,6,299,4],[356,6,301,4],[357,6,302,4],[358,4,304,2],[358,5,304,3],[358,7,304,5],[359,6,305,4,"key"],[359,9,305,7],[359,11,305,9],[359,22,305,20],[360,6,306,4,"value"],[360,11,306,9],[360,13,306,11],[360,22,306,20,"getString"],[360,31,306,29,"getString"],[360,32,306,30,"key"],[360,35,306,33],[360,37,306,35,"language"],[360,45,306,43],[360,47,306,45],[361,8,307,6],[361,12,307,10,"omitWarning"],[361,23,307,21],[361,26,307,24,"arguments"],[361,35,307,33],[361,36,307,34,"length"],[361,42,307,40],[361,45,307,43],[361,46,307,44],[361,50,307,48,"arguments"],[361,59,307,57],[361,60,307,58],[361,61,307,59],[361,62,307,60],[361,67,307,65,"undefined"],[361,76,307,74],[361,79,307,77,"arguments"],[361,88,307,86],[361,89,307,87],[361,90,307,88],[361,91,307,89],[361,94,307,92],[361,99,307,97],[362,8,309,6],[362,12,309,10],[363,10,310,8],[363,14,310,12,"current"],[363,21,310,19],[363,24,310,22],[363,28,310,26],[363,29,310,27,"_props"],[363,35,310,33],[363,36,310,34,"language"],[363,44,310,42],[363,48,310,46],[363,52,310,50],[363,53,310,51,"_language"],[363,62,310,60],[363,63,310,61],[364,10,311,8],[364,14,311,12,"paths"],[364,19,311,17],[364,22,311,20,"key"],[364,25,311,23],[364,26,311,24,"split"],[364,31,311,29],[364,32,311,30],[364,35,311,33],[364,36,311,34],[365,10,312,8],[365,15,312,13],[365,19,312,17,"i"],[365,20,312,18],[365,23,312,21],[365,24,312,22],[365,26,312,24,"i"],[365,27,312,25],[365,30,312,28,"paths"],[365,35,312,33],[365,36,312,34,"length"],[365,42,312,40],[365,44,312,42,"i"],[365,45,312,43],[365,49,312,47],[365,50,312,48],[365,52,312,50],[366,12,313,10],[366,16,313,14,"current"],[366,23,313,21],[366,24,313,22,"paths"],[366,29,313,27],[366,30,313,28,"i"],[366,31,313,29],[366,32,313,30],[366,33,313,31],[366,38,313,36,"undefined"],[366,47,313,45],[366,49,313,47],[367,14,314,12],[367,20,314,18,"Error"],[367,25,314,23],[367,26,314,24,"paths"],[367,31,314,29],[367,32,314,30,"i"],[367,33,314,31],[367,34,314,32],[367,35,314,33],[368,12,315,10],[369,12,316,10,"current"],[369,19,316,17],[369,22,316,20,"current"],[369,29,316,27],[369,30,316,28,"paths"],[369,35,316,33],[369,36,316,34,"i"],[369,37,316,35],[369,38,316,36],[369,39,316,37],[370,10,317,8],[371,10,318,8],[371,17,318,15,"current"],[371,24,318,22],[372,8,319,6],[372,9,319,7],[372,10,319,8],[372,17,319,15,"ex"],[372,19,319,17],[372,21,319,19],[373,10,320,8],[373,14,320,12],[373,15,320,13,"omitWarning"],[373,26,320,24],[373,30,320,28],[373,34,320,32],[373,35,320,33,"_opts"],[373,40,320,38],[373,41,320,39,"logsEnabled"],[373,52,320,50],[373,54,320,52],[374,12,321,10,"console"],[374,19,321,17],[374,20,321,18,"log"],[374,23,321,21],[374,24,321,22],[374,57,321,55],[374,60,321,58,"key"],[374,63,321,61],[374,66,321,64],[374,84,321,82],[374,87,321,85,"language"],[374,95,321,93],[374,98,321,96],[374,113,321,111],[374,116,321,114,"ex"],[374,118,321,116],[374,119,321,117,"message"],[374,126,321,124],[374,127,321,125],[375,10,322,8],[376,8,323,6],[377,8,324,6],[377,15,324,13],[377,19,324,17],[378,6,325,4],[380,6,327,4],[381,0,328,0],[382,0,329,0],[383,4,331,2],[383,5,331,3],[383,7,331,5],[384,6,332,4,"key"],[384,9,332,7],[384,11,332,9],[384,23,332,21],[385,6,333,4,"value"],[385,11,333,9],[385,13,333,11],[385,22,333,20,"getContent"],[385,32,333,30,"getContent"],[385,33,333,30],[385,35,333,33],[386,8,334,6],[386,15,334,13],[386,19,334,17],[386,20,334,18,"_props"],[386,26,334,24],[387,6,335,4],[388,4,336,2],[388,5,336,3],[388,6,336,4],[388,7,336,5],[389,4,338,2],[389,11,338,9,"LocalizedStrings"],[389,27,338,25],[390,2,339,0],[390,3,339,1],[390,4,339,2],[390,5,339,3],[391,2,341,0,"exports"],[391,9,341,7],[391,10,341,8,"default"],[391,17,341,15],[391,20,341,18,"LocalizedStrings"],[391,36,341,34],[392,0,341,35],[392,3]],"functionMap":{"names":["<global>","<anonymous>","sliceIterator","defineProperties","_interopRequireWildcard","_classCallCheck","LocalizedStrings","setContent","Object.keys.forEach$argument_0","_pseudoAllValues","setLanguage","_fallbackValues","getLanguage","getInterfaceLanguage","getAvailableLanguages","formatString","input.split.filter$argument_0","input.split.filter.map$argument_0","ref.split.filter$argument_0","ref.split.filter.map$argument_0","getString","getContent"],"mappings":"AAA;oFCM,qCD,GC,gJD;qBCE,cC,yYD,yOD;gCCE,gOD;mBCE,cE,4TF,oND;AIM,6QJ;AKE,yJL;uBCqB;EKU;GLkB;WMU;8DCa;ODI;KNO;WQS;+BDG;OCyB;KRC;WSU;8CFe;SEE;KTO;WUU;0CHG;OGU;KVC;WWS;KXE;WYQ;KZE;WaQ;yCNK;SME;KbG;Wca;8DCW;ODE,ME;OFY;uDGC;OHE,MI;OJkB;KdC;WmBO;KnBmB;WoBQ;KpBE;CDI"}},"type":"js/module"}]}