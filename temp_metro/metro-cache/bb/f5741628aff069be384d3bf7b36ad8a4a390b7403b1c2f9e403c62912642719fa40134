{"dependencies":[{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":64,"column":44,"index":2729}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":64,"column":44,"index":2729}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":64,"column":44,"index":2729}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":64,"column":44,"index":2729}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":64,"column":44,"index":2729}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"../RegistryType","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":23,"index":184},"end":{"line":4,"column":49,"index":210}}],"key":"1e4HRcBlPIR78uNdB0leeQQkHY8="}},{"name":"../lib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":277},"end":{"line":6,"column":31,"index":294}},{"start":{"line":6,"column":14,"index":277},"end":{"line":6,"column":31,"index":294}}],"key":"icNvnF96mfI5rp9y+sdNlNyQT7o="}},{"name":"../RegistryItem","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":23,"index":235},"end":{"line":5,"column":49,"index":261}}],"key":"Q5Wg8RC/nvFVCvjgmu356wk5Nwk="}},{"name":"../CryptoKeypath","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":24,"index":320},"end":{"line":7,"column":51,"index":347}}],"key":"8CY+EbL1JtIRos9OM9RWW9eOQHM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.KeyDerivationSchema = exports.DerivationAlgorithm = exports.Curve = void 0;\n  var Keys;\n  (function (Keys) {\n    Keys[Keys[\"keyPath\"] = 1] = \"keyPath\";\n    Keys[Keys[\"curve\"] = 2] = \"curve\";\n    Keys[Keys[\"algo\"] = 3] = \"algo\";\n    Keys[Keys[\"chainType\"] = 4] = \"chainType\";\n  })(Keys || (Keys = {}));\n  var Curve;\n  (function (Curve) {\n    Curve[Curve[\"secp256k1\"] = 0] = \"secp256k1\";\n    Curve[Curve[\"ed25519\"] = 1] = \"ed25519\";\n  })(Curve = exports.Curve || (exports.Curve = {}));\n  var DerivationAlgorithm;\n  (function (DerivationAlgorithm) {\n    DerivationAlgorithm[DerivationAlgorithm[\"slip10\"] = 0] = \"slip10\";\n    DerivationAlgorithm[DerivationAlgorithm[\"bip32ed25519\"] = 1] = \"bip32ed25519\";\n  })(DerivationAlgorithm = exports.DerivationAlgorithm || (exports.DerivationAlgorithm = {}));\n  var KeyDerivationSchema = /*#__PURE__*/function (_RegistryItem_1$Regis) {\n    function KeyDerivationSchema(keypath) {\n      var _this;\n      var curve = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Curve.secp256k1;\n      var algo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DerivationAlgorithm.slip10;\n      var chainType = arguments.length > 3 ? arguments[3] : undefined;\n      _classCallCheck(this, KeyDerivationSchema);\n      _this = _callSuper(this, KeyDerivationSchema);\n      _this.keypath = keypath;\n      _this.curve = curve;\n      _this.algo = algo;\n      _this.chainType = chainType;\n      _this.getRegistryType = function () {\n        return _$$_REQUIRE(_dependencyMap[5], \"../RegistryType\").RegistryTypes.KEY_DERIVATION_SCHEMA;\n      };\n      _this.getKeypath = function () {\n        return _this.keypath;\n      };\n      _this.getCurve = function () {\n        return _this.curve;\n      };\n      _this.getAlgo = function () {\n        return _this.algo;\n      };\n      _this.getChainType = function () {\n        return _this.chainType;\n      };\n      _this.toDataItem = function () {\n        var map = {};\n        var dataItem = _this.getKeypath().toDataItem();\n        dataItem.setTag(_this.getKeypath().getRegistryType().getTag());\n        map[Keys.keyPath] = dataItem;\n        map[Keys.curve] = _this.curve;\n        map[Keys.algo] = _this.algo;\n        if (_this.chainType) {\n          map[Keys.chainType] = _this.chainType;\n        }\n        return new (_$$_REQUIRE(_dependencyMap[6], \"../lib\").DataItem)(map);\n      };\n      return _this;\n    }\n    _inherits(KeyDerivationSchema, _RegistryItem_1$Regis);\n    return _createClass(KeyDerivationSchema);\n  }(_$$_REQUIRE(_dependencyMap[7], \"../RegistryItem\").RegistryItem);\n  exports.KeyDerivationSchema = KeyDerivationSchema;\n  KeyDerivationSchema.fromDataItem = function (dataItem) {\n    var map = dataItem.getData();\n    var keypaths = _$$_REQUIRE(_dependencyMap[8], \"../CryptoKeypath\").CryptoKeypath.fromDataItem(map[Keys.keyPath]);\n    var curve = map[Keys.curve];\n    var algo = map[Keys.algo];\n    var chainType = map[Keys.chainType];\n    return new KeyDerivationSchema(keypaths, curve, algo, chainType);\n  };\n  KeyDerivationSchema.fromCBOR = function (_cborPayload) {\n    var dataItem = (0, _$$_REQUIRE(_dependencyMap[6], \"../lib\").decodeToDataItem)(_cborPayload);\n    return KeyDerivationSchema.fromDataItem(dataItem);\n  };\n});","lineCount":89,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_createClass"],[4,18,1,13],[4,21,1,13,"_$$_REQUIRE"],[4,32,1,13],[4,33,1,13,"_dependencyMap"],[4,47,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"_$$_REQUIRE"],[5,35,1,13],[5,36,1,13,"_dependencyMap"],[5,50,1,13],[6,2,1,13],[6,6,1,13,"_possibleConstructorReturn"],[6,32,1,13],[6,35,1,13,"_$$_REQUIRE"],[6,46,1,13],[6,47,1,13,"_dependencyMap"],[6,61,1,13],[7,2,1,13],[7,6,1,13,"_getPrototypeOf"],[7,21,1,13],[7,24,1,13,"_$$_REQUIRE"],[7,35,1,13],[7,36,1,13,"_dependencyMap"],[7,50,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"_$$_REQUIRE"],[8,29,1,13],[8,30,1,13,"_dependencyMap"],[8,44,1,13],[9,2,1,13],[9,11,1,13,"_callSuper"],[9,22,1,13,"t"],[9,23,1,13],[9,25,1,13,"o"],[9,26,1,13],[9,28,1,13,"e"],[9,29,1,13],[9,40,1,13,"o"],[9,41,1,13],[9,44,1,13,"_getPrototypeOf"],[9,59,1,13],[9,60,1,13,"o"],[9,61,1,13],[9,64,1,13,"_possibleConstructorReturn"],[9,90,1,13],[9,91,1,13,"t"],[9,92,1,13],[9,94,1,13,"_isNativeReflectConstruct"],[9,119,1,13],[9,124,1,13,"Reflect"],[9,131,1,13],[9,132,1,13,"construct"],[9,141,1,13],[9,142,1,13,"o"],[9,143,1,13],[9,145,1,13,"e"],[9,146,1,13],[9,154,1,13,"_getPrototypeOf"],[9,169,1,13],[9,170,1,13,"t"],[9,171,1,13],[9,173,1,13,"constructor"],[9,184,1,13],[9,188,1,13,"o"],[9,189,1,13],[9,190,1,13,"apply"],[9,195,1,13],[9,196,1,13,"t"],[9,197,1,13],[9,199,1,13,"e"],[9,200,1,13],[10,2,1,13],[10,11,1,13,"_isNativeReflectConstruct"],[10,37,1,13],[10,51,1,13,"t"],[10,52,1,13],[10,56,1,13,"Boolean"],[10,63,1,13],[10,64,1,13,"prototype"],[10,73,1,13],[10,74,1,13,"valueOf"],[10,81,1,13],[10,82,1,13,"call"],[10,86,1,13],[10,87,1,13,"Reflect"],[10,94,1,13],[10,95,1,13,"construct"],[10,104,1,13],[10,105,1,13,"Boolean"],[10,112,1,13],[10,145,1,13,"t"],[10,146,1,13],[10,159,1,13,"_isNativeReflectConstruct"],[10,184,1,13],[10,196,1,13,"_isNativeReflectConstruct"],[10,222,1,13],[10,235,1,13,"t"],[10,236,1,13],[11,2,2,0,"Object"],[11,8,2,6],[11,9,2,7,"defineProperty"],[11,23,2,21],[11,24,2,22,"exports"],[11,31,2,29],[11,33,2,31],[11,45,2,43],[11,47,2,45],[12,4,2,47,"value"],[12,9,2,52],[12,11,2,54],[13,2,2,59],[13,3,2,60],[13,4,2,61],[14,2,3,0,"exports"],[14,9,3,7],[14,10,3,8,"KeyDerivationSchema"],[14,29,3,27],[14,32,3,30,"exports"],[14,39,3,37],[14,40,3,38,"DerivationAlgorithm"],[14,59,3,57],[14,62,3,60,"exports"],[14,69,3,67],[14,70,3,68,"Curve"],[14,75,3,73],[14,78,3,76],[14,83,3,81],[14,84,3,82],[15,2,8,0],[15,6,8,4,"Keys"],[15,10,8,8],[16,2,9,0],[16,3,9,1],[16,13,9,11,"Keys"],[16,17,9,15],[16,19,9,17],[17,4,10,4,"Keys"],[17,8,10,8],[17,9,10,9,"Keys"],[17,13,10,13],[17,14,10,14],[17,23,10,23],[17,24,10,24],[17,27,10,27],[17,28,10,28],[17,29,10,29],[17,32,10,32],[17,41,10,41],[18,4,11,4,"Keys"],[18,8,11,8],[18,9,11,9,"Keys"],[18,13,11,13],[18,14,11,14],[18,21,11,21],[18,22,11,22],[18,25,11,25],[18,26,11,26],[18,27,11,27],[18,30,11,30],[18,37,11,37],[19,4,12,4,"Keys"],[19,8,12,8],[19,9,12,9,"Keys"],[19,13,12,13],[19,14,12,14],[19,20,12,20],[19,21,12,21],[19,24,12,24],[19,25,12,25],[19,26,12,26],[19,29,12,29],[19,35,12,35],[20,4,13,4,"Keys"],[20,8,13,8],[20,9,13,9,"Keys"],[20,13,13,13],[20,14,13,14],[20,25,13,25],[20,26,13,26],[20,29,13,29],[20,30,13,30],[20,31,13,31],[20,34,13,34],[20,45,13,45],[21,2,14,0],[21,3,14,1],[21,5,14,3,"Keys"],[21,9,14,7],[21,14,14,12,"Keys"],[21,18,14,16],[21,21,14,19],[21,22,14,20],[21,23,14,21],[21,24,14,22],[21,25,14,23],[22,2,15,0],[22,6,15,4,"Curve"],[22,11,15,9],[23,2,16,0],[23,3,16,1],[23,13,16,11,"Curve"],[23,18,16,16],[23,20,16,18],[24,4,17,4,"Curve"],[24,9,17,9],[24,10,17,10,"Curve"],[24,15,17,15],[24,16,17,16],[24,27,17,27],[24,28,17,28],[24,31,17,31],[24,32,17,32],[24,33,17,33],[24,36,17,36],[24,47,17,47],[25,4,18,4,"Curve"],[25,9,18,9],[25,10,18,10,"Curve"],[25,15,18,15],[25,16,18,16],[25,25,18,25],[25,26,18,26],[25,29,18,29],[25,30,18,30],[25,31,18,31],[25,34,18,34],[25,43,18,43],[26,2,19,0],[26,3,19,1],[26,5,19,3,"Curve"],[26,10,19,8],[26,13,19,11,"exports"],[26,20,19,18],[26,21,19,19,"Curve"],[26,26,19,24],[26,31,19,29,"exports"],[26,38,19,36],[26,39,19,37,"Curve"],[26,44,19,42],[26,47,19,45],[26,48,19,46],[26,49,19,47],[26,50,19,48],[26,51,19,49],[27,2,20,0],[27,6,20,4,"DerivationAlgorithm"],[27,25,20,23],[28,2,21,0],[28,3,21,1],[28,13,21,11,"DerivationAlgorithm"],[28,32,21,30],[28,34,21,32],[29,4,22,4,"DerivationAlgorithm"],[29,23,22,23],[29,24,22,24,"DerivationAlgorithm"],[29,43,22,43],[29,44,22,44],[29,52,22,52],[29,53,22,53],[29,56,22,56],[29,57,22,57],[29,58,22,58],[29,61,22,61],[29,69,22,69],[30,4,23,4,"DerivationAlgorithm"],[30,23,23,23],[30,24,23,24,"DerivationAlgorithm"],[30,43,23,43],[30,44,23,44],[30,58,23,58],[30,59,23,59],[30,62,23,62],[30,63,23,63],[30,64,23,64],[30,67,23,67],[30,81,23,81],[31,2,24,0],[31,3,24,1],[31,5,24,3,"DerivationAlgorithm"],[31,24,24,22],[31,27,24,25,"exports"],[31,34,24,32],[31,35,24,33,"DerivationAlgorithm"],[31,54,24,52],[31,59,24,57,"exports"],[31,66,24,64],[31,67,24,65,"DerivationAlgorithm"],[31,86,24,84],[31,89,24,87],[31,90,24,88],[31,91,24,89],[31,92,24,90],[31,93,24,91],[32,2,24,92],[32,6,25,6,"KeyDerivationSchema"],[32,25,25,25],[32,51,25,25,"_RegistryItem_1$Regis"],[32,72,25,25],[33,4,26,4],[33,13,26,4,"KeyDerivationSchema"],[33,33,26,16,"keypath"],[33,40,26,23],[33,42,26,96],[34,6,26,96],[34,10,26,96,"_this"],[34,15,26,96],[35,6,26,96],[35,10,26,25,"curve"],[35,15,26,30],[35,18,26,30,"arguments"],[35,27,26,30],[35,28,26,30,"length"],[35,34,26,30],[35,42,26,30,"arguments"],[35,51,26,30],[35,59,26,30,"undefined"],[35,68,26,30],[35,71,26,30,"arguments"],[35,80,26,30],[35,86,26,33,"Curve"],[35,91,26,38],[35,92,26,39,"secp256k1"],[35,101,26,48],[36,6,26,48],[36,10,26,50,"algo"],[36,14,26,54],[36,17,26,54,"arguments"],[36,26,26,54],[36,27,26,54,"length"],[36,33,26,54],[36,41,26,54,"arguments"],[36,50,26,54],[36,58,26,54,"undefined"],[36,67,26,54],[36,70,26,54,"arguments"],[36,79,26,54],[36,85,26,57,"DerivationAlgorithm"],[36,104,26,76],[36,105,26,77,"slip10"],[36,111,26,83],[37,6,26,83],[37,10,26,85,"chainType"],[37,19,26,94],[37,22,26,94,"arguments"],[37,31,26,94],[37,32,26,94,"length"],[37,38,26,94],[37,45,26,94,"arguments"],[37,54,26,94],[37,60,26,94,"undefined"],[37,69,26,94],[38,6,26,94,"_classCallCheck"],[38,21,26,94],[38,28,26,94,"KeyDerivationSchema"],[38,47,26,94],[39,6,27,8,"_this"],[39,11,27,8],[39,14,27,8,"_callSuper"],[39,24,27,8],[39,31,27,8,"KeyDerivationSchema"],[39,50,27,8],[40,6,28,8,"_this"],[40,11,28,8],[40,12,28,13,"keypath"],[40,19,28,20],[40,22,28,23,"keypath"],[40,29,28,30],[41,6,29,8,"_this"],[41,11,29,8],[41,12,29,13,"curve"],[41,17,29,18],[41,20,29,21,"curve"],[41,25,29,26],[42,6,30,8,"_this"],[42,11,30,8],[42,12,30,13,"algo"],[42,16,30,17],[42,19,30,20,"algo"],[42,23,30,24],[43,6,31,8,"_this"],[43,11,31,8],[43,12,31,13,"chainType"],[43,21,31,22],[43,24,31,25,"chainType"],[43,33,31,34],[44,6,32,8,"_this"],[44,11,32,8],[44,12,32,13,"getRegistryType"],[44,27,32,28],[44,30,32,31],[45,8,32,31],[45,15,32,37,"_$$_REQUIRE"],[45,26,32,37],[45,27,32,37,"_dependencyMap"],[45,41,32,37],[45,65,32,52,"RegistryTypes"],[45,78,32,65],[45,79,32,66,"KEY_DERIVATION_SCHEMA"],[45,100,32,87],[46,6,32,87],[47,6,33,8,"_this"],[47,11,33,8],[47,12,33,13,"getKeypath"],[47,22,33,23],[47,25,33,26],[48,8,33,26],[48,15,33,32,"_this"],[48,20,33,32],[48,21,33,37,"keypath"],[48,28,33,44],[49,6,33,44],[50,6,34,8,"_this"],[50,11,34,8],[50,12,34,13,"getCurve"],[50,20,34,21],[50,23,34,24],[51,8,34,24],[51,15,34,30,"_this"],[51,20,34,30],[51,21,34,35,"curve"],[51,26,34,40],[52,6,34,40],[53,6,35,8,"_this"],[53,11,35,8],[53,12,35,13,"getAlgo"],[53,19,35,20],[53,22,35,23],[54,8,35,23],[54,15,35,29,"_this"],[54,20,35,29],[54,21,35,34,"algo"],[54,25,35,38],[55,6,35,38],[56,6,36,8,"_this"],[56,11,36,8],[56,12,36,13,"getChainType"],[56,24,36,25],[56,27,36,28],[57,8,36,28],[57,15,36,34,"_this"],[57,20,36,34],[57,21,36,39,"chainType"],[57,30,36,48],[58,6,36,48],[59,6,37,8,"_this"],[59,11,37,8],[59,12,37,13,"toDataItem"],[59,22,37,23],[59,25,37,26],[59,37,37,32],[60,8,38,12],[60,12,38,18,"map"],[60,15,38,21],[60,18,38,24],[60,19,38,25],[60,20,38,26],[61,8,39,12],[61,12,39,18,"dataItem"],[61,20,39,26],[61,23,39,29,"_this"],[61,28,39,29],[61,29,39,34,"getKeypath"],[61,39,39,44],[61,40,39,45],[61,41,39,46],[61,42,39,47,"toDataItem"],[61,52,39,57],[61,53,39,58],[61,54,39,59],[62,8,40,12,"dataItem"],[62,16,40,20],[62,17,40,21,"setTag"],[62,23,40,27],[62,24,40,28,"_this"],[62,29,40,28],[62,30,40,33,"getKeypath"],[62,40,40,43],[62,41,40,44],[62,42,40,45],[62,43,40,46,"getRegistryType"],[62,58,40,61],[62,59,40,62],[62,60,40,63],[62,61,40,64,"getTag"],[62,67,40,70],[62,68,40,71],[62,69,40,72],[62,70,40,73],[63,8,41,12,"map"],[63,11,41,15],[63,12,41,16,"Keys"],[63,16,41,20],[63,17,41,21,"keyPath"],[63,24,41,28],[63,25,41,29],[63,28,41,32,"dataItem"],[63,36,41,40],[64,8,42,12,"map"],[64,11,42,15],[64,12,42,16,"Keys"],[64,16,42,20],[64,17,42,21,"curve"],[64,22,42,26],[64,23,42,27],[64,26,42,30,"_this"],[64,31,42,30],[64,32,42,35,"curve"],[64,37,42,40],[65,8,43,12,"map"],[65,11,43,15],[65,12,43,16,"Keys"],[65,16,43,20],[65,17,43,21,"algo"],[65,21,43,25],[65,22,43,26],[65,25,43,29,"_this"],[65,30,43,29],[65,31,43,34,"algo"],[65,35,43,38],[66,8,44,12],[66,12,44,16,"_this"],[66,17,44,16],[66,18,44,21,"chainType"],[66,27,44,30],[66,29,44,32],[67,10,45,16,"map"],[67,13,45,19],[67,14,45,20,"Keys"],[67,18,45,24],[67,19,45,25,"chainType"],[67,28,45,34],[67,29,45,35],[67,32,45,38,"_this"],[67,37,45,38],[67,38,45,43,"chainType"],[67,47,45,52],[68,8,46,12],[69,8,47,12],[69,15,47,19],[69,20,47,23,"_$$_REQUIRE"],[69,31,47,23],[69,32,47,23,"_dependencyMap"],[69,46,47,23],[69,61,47,29,"DataItem"],[69,69,47,37],[69,71,47,38,"map"],[69,74,47,41],[69,75,47,42],[70,6,48,8],[70,7,48,9],[71,6,48,10],[71,13,48,10,"_this"],[71,18,48,10],[72,4,49,4],[73,4,49,5,"_inherits"],[73,13,49,5],[73,14,49,5,"KeyDerivationSchema"],[73,33,49,5],[73,35,49,5,"_RegistryItem_1$Regis"],[73,56,49,5],[74,4,49,5],[74,11,49,5,"_createClass"],[74,23,49,5],[74,24,49,5,"KeyDerivationSchema"],[74,43,49,5],[75,2,49,5],[75,4,25,34,"_$$_REQUIRE"],[75,15,25,34],[75,16,25,34,"_dependencyMap"],[75,30,25,34],[75,54,25,49,"RegistryItem"],[75,66,25,61],[76,2,51,0,"exports"],[76,9,51,7],[76,10,51,8,"KeyDerivationSchema"],[76,29,51,27],[76,32,51,30,"KeyDerivationSchema"],[76,51,51,49],[77,2,52,0,"KeyDerivationSchema"],[77,21,52,19],[77,22,52,20,"fromDataItem"],[77,34,52,32],[77,37,52,35],[77,47,52,36,"dataItem"],[77,55,52,44],[77,57,52,49],[78,4,53,4],[78,8,53,10,"map"],[78,11,53,13],[78,14,53,16,"dataItem"],[78,22,53,24],[78,23,53,25,"getData"],[78,30,53,32],[78,31,53,33],[78,32,53,34],[79,4,54,4],[79,8,54,10,"keypaths"],[79,16,54,18],[79,19,54,21,"_$$_REQUIRE"],[79,30,54,21],[79,31,54,21,"_dependencyMap"],[79,45,54,21],[79,70,54,37,"CryptoKeypath"],[79,83,54,50],[79,84,54,51,"fromDataItem"],[79,96,54,63],[79,97,54,64,"map"],[79,100,54,67],[79,101,54,68,"Keys"],[79,105,54,72],[79,106,54,73,"keyPath"],[79,113,54,80],[79,114,54,81],[79,115,54,82],[80,4,55,4],[80,8,55,10,"curve"],[80,13,55,15],[80,16,55,18,"map"],[80,19,55,21],[80,20,55,22,"Keys"],[80,24,55,26],[80,25,55,27,"curve"],[80,30,55,32],[80,31,55,33],[81,4,56,4],[81,8,56,10,"algo"],[81,12,56,14],[81,15,56,17,"map"],[81,18,56,20],[81,19,56,21,"Keys"],[81,23,56,25],[81,24,56,26,"algo"],[81,28,56,30],[81,29,56,31],[82,4,57,4],[82,8,57,10,"chainType"],[82,17,57,19],[82,20,57,22,"map"],[82,23,57,25],[82,24,57,26,"Keys"],[82,28,57,30],[82,29,57,31,"chainType"],[82,38,57,40],[82,39,57,41],[83,4,58,4],[83,11,58,11],[83,15,58,15,"KeyDerivationSchema"],[83,34,58,34],[83,35,58,35,"keypaths"],[83,43,58,43],[83,45,58,45,"curve"],[83,50,58,50],[83,52,58,52,"algo"],[83,56,58,56],[83,58,58,58,"chainType"],[83,67,58,67],[83,68,58,68],[84,2,59,0],[84,3,59,1],[85,2,60,0,"KeyDerivationSchema"],[85,21,60,19],[85,22,60,20,"fromCBOR"],[85,30,60,28],[85,33,60,31],[85,43,60,32,"_cborPayload"],[85,55,60,44],[85,57,60,49],[86,4,61,4],[86,8,61,10,"dataItem"],[86,16,61,18],[86,19,61,21],[86,20,61,22],[86,21,61,23],[86,23,61,25,"_$$_REQUIRE"],[86,34,61,25],[86,35,61,25,"_dependencyMap"],[86,49,61,25],[86,64,61,31,"decodeToDataItem"],[86,80,61,47],[86,82,61,49,"_cborPayload"],[86,94,61,61],[86,95,61,62],[87,4,62,4],[87,11,62,11,"KeyDerivationSchema"],[87,30,62,30],[87,31,62,31,"fromDataItem"],[87,43,62,43],[87,44,62,44,"dataItem"],[87,52,62,52],[87,53,62,53],[88,2,63,0],[88,3,63,1],[89,0,63,2],[89,3]],"functionMap":{"names":["<global>","<anonymous>","KeyDerivationSchema","KeyDerivationSchema#constructor","getRegistryType","getKeypath","getCurve","getAlgo","getChainType","toDataItem","KeyDerivationSchema.fromDataItem","KeyDerivationSchema.fromCBOR"],"mappings":"AAA;CCQ;CDK;CCE;CDG;CCE;CDG;AEC;ICC;+BCM,wDD;0BEC,kBF;wBGC,gBH;uBIC,eJ;4BKC,oBL;0BMC;SNW;KDC;CFC;mCUE;CVO;+BWC;CXG"}},"type":"js/module"}]}