{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.verifyPseudoArgs = exports.pseudos = void 0;\n  // While filters are precompiled, pseudos get called when they are needed\n  exports.pseudos = {\n    empty: function empty(elem, _a) {\n      var adapter = _a.adapter;\n      return !adapter.getChildren(elem).some(function (elem) {\n        // FIXME: `getText` call is potentially expensive.\n        return adapter.isTag(elem) || adapter.getText(elem) !== \"\";\n      });\n    },\n    \"first-child\": function firstChild(elem, _a) {\n      var adapter = _a.adapter,\n        equals = _a.equals;\n      if (adapter.prevElementSibling) {\n        return adapter.prevElementSibling(elem) == null;\n      }\n      var firstChild = adapter.getSiblings(elem).find(function (elem) {\n        return adapter.isTag(elem);\n      });\n      return firstChild != null && equals(elem, firstChild);\n    },\n    \"last-child\": function lastChild(elem, _a) {\n      var adapter = _a.adapter,\n        equals = _a.equals;\n      var siblings = adapter.getSiblings(elem);\n      for (var i = siblings.length - 1; i >= 0; i--) {\n        if (equals(elem, siblings[i])) return true;\n        if (adapter.isTag(siblings[i])) break;\n      }\n      return false;\n    },\n    \"first-of-type\": function firstOfType(elem, _a) {\n      var adapter = _a.adapter,\n        equals = _a.equals;\n      var siblings = adapter.getSiblings(elem);\n      var elemName = adapter.getName(elem);\n      for (var i = 0; i < siblings.length; i++) {\n        var currentSibling = siblings[i];\n        if (equals(elem, currentSibling)) return true;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n          break;\n        }\n      }\n      return false;\n    },\n    \"last-of-type\": function lastOfType(elem, _a) {\n      var adapter = _a.adapter,\n        equals = _a.equals;\n      var siblings = adapter.getSiblings(elem);\n      var elemName = adapter.getName(elem);\n      for (var i = siblings.length - 1; i >= 0; i--) {\n        var currentSibling = siblings[i];\n        if (equals(elem, currentSibling)) return true;\n        if (adapter.isTag(currentSibling) && adapter.getName(currentSibling) === elemName) {\n          break;\n        }\n      }\n      return false;\n    },\n    \"only-of-type\": function onlyOfType(elem, _a) {\n      var adapter = _a.adapter,\n        equals = _a.equals;\n      var elemName = adapter.getName(elem);\n      return adapter.getSiblings(elem).every(function (sibling) {\n        return equals(elem, sibling) || !adapter.isTag(sibling) || adapter.getName(sibling) !== elemName;\n      });\n    },\n    \"only-child\": function onlyChild(elem, _a) {\n      var adapter = _a.adapter,\n        equals = _a.equals;\n      return adapter.getSiblings(elem).every(function (sibling) {\n        return equals(elem, sibling) || !adapter.isTag(sibling);\n      });\n    }\n  };\n  function verifyPseudoArgs(func, name, subselect, argIndex) {\n    if (subselect === null) {\n      if (func.length > argIndex) {\n        throw new Error(\"Pseudo-class :\".concat(name, \" requires an argument\"));\n      }\n    } else if (func.length === argIndex) {\n      throw new Error(\"Pseudo-class :\".concat(name, \" doesn't have any arguments\"));\n    }\n  }\n  exports.verifyPseudoArgs = verifyPseudoArgs;\n});","lineCount":92,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"verifyPseudoArgs"],[7,26,3,24],[7,29,3,27,"exports"],[7,36,3,34],[7,37,3,35,"pseudos"],[7,44,3,42],[7,47,3,45],[7,52,3,50],[7,53,3,51],[8,2,4,0],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"pseudos"],[9,17,5,15],[9,20,5,18],[10,4,6,4,"empty"],[10,9,6,9],[10,11,6,11],[10,20,6,4,"empty"],[10,25,6,9,"empty"],[10,26,6,21,"elem"],[10,30,6,25],[10,32,6,27,"_a"],[10,34,6,29],[10,36,6,31],[11,6,7,8],[11,10,7,12,"adapter"],[11,17,7,19],[11,20,7,22,"_a"],[11,22,7,24],[11,23,7,25,"adapter"],[11,30,7,32],[12,6,8,8],[12,13,8,15],[12,14,8,16,"adapter"],[12,21,8,23],[12,22,8,24,"getChildren"],[12,33,8,35],[12,34,8,36,"elem"],[12,38,8,40],[12,39,8,41],[12,40,8,42,"some"],[12,44,8,46],[12,45,8,47],[12,55,8,57,"elem"],[12,59,8,61],[12,61,8,63],[13,8,9,12],[14,8,10,12],[14,15,10,19,"adapter"],[14,22,10,26],[14,23,10,27,"isTag"],[14,28,10,32],[14,29,10,33,"elem"],[14,33,10,37],[14,34,10,38],[14,38,10,42,"adapter"],[14,45,10,49],[14,46,10,50,"getText"],[14,53,10,57],[14,54,10,58,"elem"],[14,58,10,62],[14,59,10,63],[14,64,10,68],[14,66,10,70],[15,6,11,8],[15,7,11,9],[15,8,11,10],[16,4,12,4],[16,5,12,5],[17,4,13,4],[17,17,13,17],[17,19,13,19],[17,28,13,4,"firstChild"],[17,38,13,17,"firstChild"],[17,39,13,29,"elem"],[17,43,13,33],[17,45,13,35,"_a"],[17,47,13,37],[17,49,13,39],[18,6,14,8],[18,10,14,12,"adapter"],[18,17,14,19],[18,20,14,22,"_a"],[18,22,14,24],[18,23,14,25,"adapter"],[18,30,14,32],[19,8,14,34,"equals"],[19,14,14,40],[19,17,14,43,"_a"],[19,19,14,45],[19,20,14,46,"equals"],[19,26,14,52],[20,6,15,8],[20,10,15,12,"adapter"],[20,17,15,19],[20,18,15,20,"prevElementSibling"],[20,36,15,38],[20,38,15,40],[21,8,16,12],[21,15,16,19,"adapter"],[21,22,16,26],[21,23,16,27,"prevElementSibling"],[21,41,16,45],[21,42,16,46,"elem"],[21,46,16,50],[21,47,16,51],[21,51,16,55],[21,55,16,59],[22,6,17,8],[23,6,18,8],[23,10,18,12,"firstChild"],[23,20,18,22],[23,23,18,25,"adapter"],[23,30,18,32],[23,31,19,13,"getSiblings"],[23,42,19,24],[23,43,19,25,"elem"],[23,47,19,29],[23,48,19,30],[23,49,20,13,"find"],[23,53,20,17],[23,54,20,18],[23,64,20,28,"elem"],[23,68,20,32],[23,70,20,34],[24,8,20,36],[24,15,20,43,"adapter"],[24,22,20,50],[24,23,20,51,"isTag"],[24,28,20,56],[24,29,20,57,"elem"],[24,33,20,61],[24,34,20,62],[25,6,20,64],[25,7,20,65],[25,8,20,66],[26,6,21,8],[26,13,21,15,"firstChild"],[26,23,21,25],[26,27,21,29],[26,31,21,33],[26,35,21,37,"equals"],[26,41,21,43],[26,42,21,44,"elem"],[26,46,21,48],[26,48,21,50,"firstChild"],[26,58,21,60],[26,59,21,61],[27,4,22,4],[27,5,22,5],[28,4,23,4],[28,16,23,16],[28,18,23,18],[28,27,23,4,"lastChild"],[28,36,23,16,"lastChild"],[28,37,23,28,"elem"],[28,41,23,32],[28,43,23,34,"_a"],[28,45,23,36],[28,47,23,38],[29,6,24,8],[29,10,24,12,"adapter"],[29,17,24,19],[29,20,24,22,"_a"],[29,22,24,24],[29,23,24,25,"adapter"],[29,30,24,32],[30,8,24,34,"equals"],[30,14,24,40],[30,17,24,43,"_a"],[30,19,24,45],[30,20,24,46,"equals"],[30,26,24,52],[31,6,25,8],[31,10,25,12,"siblings"],[31,18,25,20],[31,21,25,23,"adapter"],[31,28,25,30],[31,29,25,31,"getSiblings"],[31,40,25,42],[31,41,25,43,"elem"],[31,45,25,47],[31,46,25,48],[32,6,26,8],[32,11,26,13],[32,15,26,17,"i"],[32,16,26,18],[32,19,26,21,"siblings"],[32,27,26,29],[32,28,26,30,"length"],[32,34,26,36],[32,37,26,39],[32,38,26,40],[32,40,26,42,"i"],[32,41,26,43],[32,45,26,47],[32,46,26,48],[32,48,26,50,"i"],[32,49,26,51],[32,51,26,53],[32,53,26,55],[33,8,27,12],[33,12,27,16,"equals"],[33,18,27,22],[33,19,27,23,"elem"],[33,23,27,27],[33,25,27,29,"siblings"],[33,33,27,37],[33,34,27,38,"i"],[33,35,27,39],[33,36,27,40],[33,37,27,41],[33,39,28,16],[33,46,28,23],[33,50,28,27],[34,8,29,12],[34,12,29,16,"adapter"],[34,19,29,23],[34,20,29,24,"isTag"],[34,25,29,29],[34,26,29,30,"siblings"],[34,34,29,38],[34,35,29,39,"i"],[34,36,29,40],[34,37,29,41],[34,38,29,42],[34,40,30,16],[35,6,31,8],[36,6,32,8],[36,13,32,15],[36,18,32,20],[37,4,33,4],[37,5,33,5],[38,4,34,4],[38,19,34,19],[38,21,34,21],[38,30,34,4,"firstOfType"],[38,41,34,19,"firstOfType"],[38,42,34,31,"elem"],[38,46,34,35],[38,48,34,37,"_a"],[38,50,34,39],[38,52,34,41],[39,6,35,8],[39,10,35,12,"adapter"],[39,17,35,19],[39,20,35,22,"_a"],[39,22,35,24],[39,23,35,25,"adapter"],[39,30,35,32],[40,8,35,34,"equals"],[40,14,35,40],[40,17,35,43,"_a"],[40,19,35,45],[40,20,35,46,"equals"],[40,26,35,52],[41,6,36,8],[41,10,36,12,"siblings"],[41,18,36,20],[41,21,36,23,"adapter"],[41,28,36,30],[41,29,36,31,"getSiblings"],[41,40,36,42],[41,41,36,43,"elem"],[41,45,36,47],[41,46,36,48],[42,6,37,8],[42,10,37,12,"elemName"],[42,18,37,20],[42,21,37,23,"adapter"],[42,28,37,30],[42,29,37,31,"getName"],[42,36,37,38],[42,37,37,39,"elem"],[42,41,37,43],[42,42,37,44],[43,6,38,8],[43,11,38,13],[43,15,38,17,"i"],[43,16,38,18],[43,19,38,21],[43,20,38,22],[43,22,38,24,"i"],[43,23,38,25],[43,26,38,28,"siblings"],[43,34,38,36],[43,35,38,37,"length"],[43,41,38,43],[43,43,38,45,"i"],[43,44,38,46],[43,46,38,48],[43,48,38,50],[44,8,39,12],[44,12,39,16,"currentSibling"],[44,26,39,30],[44,29,39,33,"siblings"],[44,37,39,41],[44,38,39,42,"i"],[44,39,39,43],[44,40,39,44],[45,8,40,12],[45,12,40,16,"equals"],[45,18,40,22],[45,19,40,23,"elem"],[45,23,40,27],[45,25,40,29,"currentSibling"],[45,39,40,43],[45,40,40,44],[45,42,41,16],[45,49,41,23],[45,53,41,27],[46,8,42,12],[46,12,42,16,"adapter"],[46,19,42,23],[46,20,42,24,"isTag"],[46,25,42,29],[46,26,42,30,"currentSibling"],[46,40,42,44],[46,41,42,45],[46,45,43,16,"adapter"],[46,52,43,23],[46,53,43,24,"getName"],[46,60,43,31],[46,61,43,32,"currentSibling"],[46,75,43,46],[46,76,43,47],[46,81,43,52,"elemName"],[46,89,43,60],[46,91,43,62],[47,10,44,16],[48,8,45,12],[49,6,46,8],[50,6,47,8],[50,13,47,15],[50,18,47,20],[51,4,48,4],[51,5,48,5],[52,4,49,4],[52,18,49,18],[52,20,49,20],[52,29,49,4,"lastOfType"],[52,39,49,18,"lastOfType"],[52,40,49,30,"elem"],[52,44,49,34],[52,46,49,36,"_a"],[52,48,49,38],[52,50,49,40],[53,6,50,8],[53,10,50,12,"adapter"],[53,17,50,19],[53,20,50,22,"_a"],[53,22,50,24],[53,23,50,25,"adapter"],[53,30,50,32],[54,8,50,34,"equals"],[54,14,50,40],[54,17,50,43,"_a"],[54,19,50,45],[54,20,50,46,"equals"],[54,26,50,52],[55,6,51,8],[55,10,51,12,"siblings"],[55,18,51,20],[55,21,51,23,"adapter"],[55,28,51,30],[55,29,51,31,"getSiblings"],[55,40,51,42],[55,41,51,43,"elem"],[55,45,51,47],[55,46,51,48],[56,6,52,8],[56,10,52,12,"elemName"],[56,18,52,20],[56,21,52,23,"adapter"],[56,28,52,30],[56,29,52,31,"getName"],[56,36,52,38],[56,37,52,39,"elem"],[56,41,52,43],[56,42,52,44],[57,6,53,8],[57,11,53,13],[57,15,53,17,"i"],[57,16,53,18],[57,19,53,21,"siblings"],[57,27,53,29],[57,28,53,30,"length"],[57,34,53,36],[57,37,53,39],[57,38,53,40],[57,40,53,42,"i"],[57,41,53,43],[57,45,53,47],[57,46,53,48],[57,48,53,50,"i"],[57,49,53,51],[57,51,53,53],[57,53,53,55],[58,8,54,12],[58,12,54,16,"currentSibling"],[58,26,54,30],[58,29,54,33,"siblings"],[58,37,54,41],[58,38,54,42,"i"],[58,39,54,43],[58,40,54,44],[59,8,55,12],[59,12,55,16,"equals"],[59,18,55,22],[59,19,55,23,"elem"],[59,23,55,27],[59,25,55,29,"currentSibling"],[59,39,55,43],[59,40,55,44],[59,42,56,16],[59,49,56,23],[59,53,56,27],[60,8,57,12],[60,12,57,16,"adapter"],[60,19,57,23],[60,20,57,24,"isTag"],[60,25,57,29],[60,26,57,30,"currentSibling"],[60,40,57,44],[60,41,57,45],[60,45,58,16,"adapter"],[60,52,58,23],[60,53,58,24,"getName"],[60,60,58,31],[60,61,58,32,"currentSibling"],[60,75,58,46],[60,76,58,47],[60,81,58,52,"elemName"],[60,89,58,60],[60,91,58,62],[61,10,59,16],[62,8,60,12],[63,6,61,8],[64,6,62,8],[64,13,62,15],[64,18,62,20],[65,4,63,4],[65,5,63,5],[66,4,64,4],[66,18,64,18],[66,20,64,20],[66,29,64,4,"onlyOfType"],[66,39,64,18,"onlyOfType"],[66,40,64,30,"elem"],[66,44,64,34],[66,46,64,36,"_a"],[66,48,64,38],[66,50,64,40],[67,6,65,8],[67,10,65,12,"adapter"],[67,17,65,19],[67,20,65,22,"_a"],[67,22,65,24],[67,23,65,25,"adapter"],[67,30,65,32],[68,8,65,34,"equals"],[68,14,65,40],[68,17,65,43,"_a"],[68,19,65,45],[68,20,65,46,"equals"],[68,26,65,52],[69,6,66,8],[69,10,66,12,"elemName"],[69,18,66,20],[69,21,66,23,"adapter"],[69,28,66,30],[69,29,66,31,"getName"],[69,36,66,38],[69,37,66,39,"elem"],[69,41,66,43],[69,42,66,44],[70,6,67,8],[70,13,67,15,"adapter"],[70,20,67,22],[70,21,68,13,"getSiblings"],[70,32,68,24],[70,33,68,25,"elem"],[70,37,68,29],[70,38,68,30],[70,39,69,13,"every"],[70,44,69,18],[70,45,69,19],[70,55,69,29,"sibling"],[70,62,69,36],[70,64,69,38],[71,8,70,12],[71,15,70,19,"equals"],[71,21,70,25],[71,22,70,26,"elem"],[71,26,70,30],[71,28,70,32,"sibling"],[71,35,70,39],[71,36,70,40],[71,40,71,16],[71,41,71,17,"adapter"],[71,48,71,24],[71,49,71,25,"isTag"],[71,54,71,30],[71,55,71,31,"sibling"],[71,62,71,38],[71,63,71,39],[71,67,72,16,"adapter"],[71,74,72,23],[71,75,72,24,"getName"],[71,82,72,31],[71,83,72,32,"sibling"],[71,90,72,39],[71,91,72,40],[71,96,72,45,"elemName"],[71,104,72,53],[72,6,73,8],[72,7,73,9],[72,8,73,10],[73,4,74,4],[73,5,74,5],[74,4,75,4],[74,16,75,16],[74,18,75,18],[74,27,75,4,"onlyChild"],[74,36,75,16,"onlyChild"],[74,37,75,28,"elem"],[74,41,75,32],[74,43,75,34,"_a"],[74,45,75,36],[74,47,75,38],[75,6,76,8],[75,10,76,12,"adapter"],[75,17,76,19],[75,20,76,22,"_a"],[75,22,76,24],[75,23,76,25,"adapter"],[75,30,76,32],[76,8,76,34,"equals"],[76,14,76,40],[76,17,76,43,"_a"],[76,19,76,45],[76,20,76,46,"equals"],[76,26,76,52],[77,6,77,8],[77,13,77,15,"adapter"],[77,20,77,22],[77,21,78,13,"getSiblings"],[77,32,78,24],[77,33,78,25,"elem"],[77,37,78,29],[77,38,78,30],[77,39,79,13,"every"],[77,44,79,18],[77,45,79,19],[77,55,79,29,"sibling"],[77,62,79,36],[77,64,79,38],[78,8,79,40],[78,15,79,47,"equals"],[78,21,79,53],[78,22,79,54,"elem"],[78,26,79,58],[78,28,79,60,"sibling"],[78,35,79,67],[78,36,79,68],[78,40,79,72],[78,41,79,73,"adapter"],[78,48,79,80],[78,49,79,81,"isTag"],[78,54,79,86],[78,55,79,87,"sibling"],[78,62,79,94],[78,63,79,95],[79,6,79,97],[79,7,79,98],[79,8,79,99],[80,4,80,4],[81,2,81,0],[81,3,81,1],[82,2,82,0],[82,11,82,9,"verifyPseudoArgs"],[82,27,82,25,"verifyPseudoArgs"],[82,28,82,26,"func"],[82,32,82,30],[82,34,82,32,"name"],[82,38,82,36],[82,40,82,38,"subselect"],[82,49,82,47],[82,51,82,49,"argIndex"],[82,59,82,57],[82,61,82,59],[83,4,83,4],[83,8,83,8,"subselect"],[83,17,83,17],[83,22,83,22],[83,26,83,26],[83,28,83,28],[84,6,84,8],[84,10,84,12,"func"],[84,14,84,16],[84,15,84,17,"length"],[84,21,84,23],[84,24,84,26,"argIndex"],[84,32,84,34],[84,34,84,36],[85,8,85,12],[85,14,85,18],[85,18,85,22,"Error"],[85,23,85,27],[85,24,85,28],[85,40,85,44],[85,41,85,45,"concat"],[85,47,85,51],[85,48,85,52,"name"],[85,52,85,56],[85,54,85,58],[85,77,85,81],[85,78,85,82],[85,79,85,83],[86,6,86,8],[87,4,87,4],[87,5,87,5],[87,11,88,9],[87,15,88,13,"func"],[87,19,88,17],[87,20,88,18,"length"],[87,26,88,24],[87,31,88,29,"argIndex"],[87,39,88,37],[87,41,88,39],[88,6,89,8],[88,12,89,14],[88,16,89,18,"Error"],[88,21,89,23],[88,22,89,24],[88,38,89,40],[88,39,89,41,"concat"],[88,45,89,47],[88,46,89,48,"name"],[88,50,89,52],[88,52,89,54],[88,81,89,83],[88,82,89,84],[88,83,89,85],[89,4,90,4],[90,2,91,0],[91,2,92,0,"exports"],[91,9,92,7],[91,10,92,8,"verifyPseudoArgs"],[91,26,92,24],[91,29,92,27,"verifyPseudoArgs"],[91,45,92,43],[92,0,92,44],[92,3]],"functionMap":{"names":["<global>","exports.pseudos.empty","adapter.getChildren.some$argument_0","exports.pseudos.firstChild","adapter.getSiblings.find$argument_0","exports.pseudos.lastChild","exports.pseudos.firstOfType","exports.pseudos.lastOfType","exports.pseudos.onlyOfType","adapter.getSiblings.every$argument_0","exports.pseudos.onlyChild","verifyPseudoArgs"],"mappings":"AAA;WCK;+CCE;SDG;KDC;mBGC;kBCO,+CD;KHE;kBKC;KLU;qBMC;KNc;oBOC;KPc;oBQC;mBCK;SDI;KRC;kBUC;mBDI,+EC;KVC;AWE;CXS"}},"type":"js/module"}]}