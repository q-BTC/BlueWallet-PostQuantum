{"dependencies":[{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":42,"index":1915}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":42,"index":1915}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":42,"index":1915}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":42,"index":1915}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":58,"column":42,"index":1915}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"./RegistryType","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":248},"end":{"line":6,"column":48,"index":273}}],"key":"LPUP/TAq37xuO8ooMbxlwV9h4p8="}},{"name":"./lib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":157},"end":{"line":4,"column":30,"index":173}},{"start":{"line":4,"column":14,"index":157},"end":{"line":4,"column":30,"index":173}}],"key":"5dKqPXW0qdcMzvptnv+UmplALm0="}},{"name":"./RegistryItem","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":23,"index":198},"end":{"line":5,"column":48,"index":223}}],"key":"SW7XmPTWRvaX1Vzi+7OSQ9f7aD0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/createClass\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _possibleConstructorReturn = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\");\n  var _getPrototypeOf = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\");\n  var _inherits = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/inherits\");\n  function _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.CryptoCoinInfo = exports.Network = exports.Type = void 0;\n  var Keys;\n  (function (Keys) {\n    Keys[\"type\"] = \"1\";\n    Keys[\"network\"] = \"2\";\n  })(Keys || (Keys = {}));\n  var Type;\n  (function (Type) {\n    Type[Type[\"bitcoin\"] = 0] = \"bitcoin\";\n  })(Type = exports.Type || (exports.Type = {}));\n  var Network;\n  (function (Network) {\n    Network[Network[\"mainnet\"] = 0] = \"mainnet\";\n    Network[Network[\"testnet\"] = 1] = \"testnet\";\n  })(Network = exports.Network || (exports.Network = {}));\n  var CryptoCoinInfo = /*#__PURE__*/function (_RegistryItem_1$Regis) {\n    function CryptoCoinInfo(type, network) {\n      var _this;\n      _classCallCheck(this, CryptoCoinInfo);\n      _this = _callSuper(this, CryptoCoinInfo);\n      _this.type = type;\n      _this.network = network;\n      _this.getRegistryType = function () {\n        return _$$_REQUIRE(_dependencyMap[5], \"./RegistryType\").RegistryTypes.CRYPTO_COIN_INFO;\n      };\n      _this.getType = function () {\n        return _this.type || Type.bitcoin;\n      };\n      _this.getNetwork = function () {\n        return _this.network || Network.mainnet;\n      };\n      _this.toDataItem = function () {\n        var map = {};\n        if (_this.type) {\n          map[Keys.type] = _this.type;\n        }\n        if (_this.network) {\n          map[Keys.network] = _this.network;\n        }\n        return new (_$$_REQUIRE(_dependencyMap[6], \"./lib\").DataItem)(map);\n      };\n      return _this;\n    }\n    _inherits(CryptoCoinInfo, _RegistryItem_1$Regis);\n    return _createClass(CryptoCoinInfo);\n  }(_$$_REQUIRE(_dependencyMap[7], \"./RegistryItem\").RegistryItem);\n  exports.CryptoCoinInfo = CryptoCoinInfo;\n  CryptoCoinInfo.fromDataItem = function (dataItem) {\n    var map = dataItem.getData();\n    var type = map[Keys.type];\n    var network = map[Keys.network];\n    return new CryptoCoinInfo(type, network);\n  };\n  CryptoCoinInfo.fromCBOR = function (_cborPayload) {\n    var dataItem = (0, _$$_REQUIRE(_dependencyMap[6], \"./lib\").decodeToDataItem)(_cborPayload);\n    return CryptoCoinInfo.fromDataItem(dataItem);\n  };\n});","lineCount":71,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_createClass"],[4,18,1,13],[4,21,1,13,"_$$_REQUIRE"],[4,32,1,13],[4,33,1,13,"_dependencyMap"],[4,47,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"_$$_REQUIRE"],[5,35,1,13],[5,36,1,13,"_dependencyMap"],[5,50,1,13],[6,2,1,13],[6,6,1,13,"_possibleConstructorReturn"],[6,32,1,13],[6,35,1,13,"_$$_REQUIRE"],[6,46,1,13],[6,47,1,13,"_dependencyMap"],[6,61,1,13],[7,2,1,13],[7,6,1,13,"_getPrototypeOf"],[7,21,1,13],[7,24,1,13,"_$$_REQUIRE"],[7,35,1,13],[7,36,1,13,"_dependencyMap"],[7,50,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"_$$_REQUIRE"],[8,29,1,13],[8,30,1,13,"_dependencyMap"],[8,44,1,13],[9,2,1,13],[9,11,1,13,"_callSuper"],[9,22,1,13,"t"],[9,23,1,13],[9,25,1,13,"o"],[9,26,1,13],[9,28,1,13,"e"],[9,29,1,13],[9,40,1,13,"o"],[9,41,1,13],[9,44,1,13,"_getPrototypeOf"],[9,59,1,13],[9,60,1,13,"o"],[9,61,1,13],[9,64,1,13,"_possibleConstructorReturn"],[9,90,1,13],[9,91,1,13,"t"],[9,92,1,13],[9,94,1,13,"_isNativeReflectConstruct"],[9,119,1,13],[9,124,1,13,"Reflect"],[9,131,1,13],[9,132,1,13,"construct"],[9,141,1,13],[9,142,1,13,"o"],[9,143,1,13],[9,145,1,13,"e"],[9,146,1,13],[9,154,1,13,"_getPrototypeOf"],[9,169,1,13],[9,170,1,13,"t"],[9,171,1,13],[9,173,1,13,"constructor"],[9,184,1,13],[9,188,1,13,"o"],[9,189,1,13],[9,190,1,13,"apply"],[9,195,1,13],[9,196,1,13,"t"],[9,197,1,13],[9,199,1,13,"e"],[9,200,1,13],[10,2,1,13],[10,11,1,13,"_isNativeReflectConstruct"],[10,37,1,13],[10,51,1,13,"t"],[10,52,1,13],[10,56,1,13,"Boolean"],[10,63,1,13],[10,64,1,13,"prototype"],[10,73,1,13],[10,74,1,13,"valueOf"],[10,81,1,13],[10,82,1,13,"call"],[10,86,1,13],[10,87,1,13,"Reflect"],[10,94,1,13],[10,95,1,13,"construct"],[10,104,1,13],[10,105,1,13,"Boolean"],[10,112,1,13],[10,145,1,13,"t"],[10,146,1,13],[10,159,1,13,"_isNativeReflectConstruct"],[10,184,1,13],[10,196,1,13,"_isNativeReflectConstruct"],[10,222,1,13],[10,235,1,13,"t"],[10,236,1,13],[11,2,2,0,"Object"],[11,8,2,6],[11,9,2,7,"defineProperty"],[11,23,2,21],[11,24,2,22,"exports"],[11,31,2,29],[11,33,2,31],[11,45,2,43],[11,47,2,45],[12,4,2,47,"value"],[12,9,2,52],[12,11,2,54],[13,2,2,59],[13,3,2,60],[13,4,2,61],[14,2,3,0,"exports"],[14,9,3,7],[14,10,3,8,"CryptoCoinInfo"],[14,24,3,22],[14,27,3,25,"exports"],[14,34,3,32],[14,35,3,33,"Network"],[14,42,3,40],[14,45,3,43,"exports"],[14,52,3,50],[14,53,3,51,"Type"],[14,57,3,55],[14,60,3,58],[14,65,3,63],[14,66,3,64],[15,2,7,0],[15,6,7,4,"Keys"],[15,10,7,8],[16,2,8,0],[16,3,8,1],[16,13,8,11,"Keys"],[16,17,8,15],[16,19,8,17],[17,4,9,4,"Keys"],[17,8,9,8],[17,9,9,9],[17,15,9,15],[17,16,9,16],[17,19,9,19],[17,22,9,22],[18,4,10,4,"Keys"],[18,8,10,8],[18,9,10,9],[18,18,10,18],[18,19,10,19],[18,22,10,22],[18,25,10,25],[19,2,11,0],[19,3,11,1],[19,5,11,3,"Keys"],[19,9,11,7],[19,14,11,12,"Keys"],[19,18,11,16],[19,21,11,19],[19,22,11,20],[19,23,11,21],[19,24,11,22],[19,25,11,23],[20,2,12,0],[20,6,12,4,"Type"],[20,10,12,8],[21,2,13,0],[21,3,13,1],[21,13,13,11,"Type"],[21,17,13,15],[21,19,13,17],[22,4,14,4,"Type"],[22,8,14,8],[22,9,14,9,"Type"],[22,13,14,13],[22,14,14,14],[22,23,14,23],[22,24,14,24],[22,27,14,27],[22,28,14,28],[22,29,14,29],[22,32,14,32],[22,41,14,41],[23,2,15,0],[23,3,15,1],[23,5,15,3,"Type"],[23,9,15,7],[23,12,15,10,"exports"],[23,19,15,17],[23,20,15,18,"Type"],[23,24,15,22],[23,29,15,27,"exports"],[23,36,15,34],[23,37,15,35,"Type"],[23,41,15,39],[23,44,15,42],[23,45,15,43],[23,46,15,44],[23,47,15,45],[23,48,15,46],[24,2,16,0],[24,6,16,4,"Network"],[24,13,16,11],[25,2,17,0],[25,3,17,1],[25,13,17,11,"Network"],[25,20,17,18],[25,22,17,20],[26,4,18,4,"Network"],[26,11,18,11],[26,12,18,12,"Network"],[26,19,18,19],[26,20,18,20],[26,29,18,29],[26,30,18,30],[26,33,18,33],[26,34,18,34],[26,35,18,35],[26,38,18,38],[26,47,18,47],[27,4,19,4,"Network"],[27,11,19,11],[27,12,19,12,"Network"],[27,19,19,19],[27,20,19,20],[27,29,19,29],[27,30,19,30],[27,33,19,33],[27,34,19,34],[27,35,19,35],[27,38,19,38],[27,47,19,47],[28,2,20,0],[28,3,20,1],[28,5,20,3,"Network"],[28,12,20,10],[28,15,20,13,"exports"],[28,22,20,20],[28,23,20,21,"Network"],[28,30,20,28],[28,35,20,33,"exports"],[28,42,20,40],[28,43,20,41,"Network"],[28,50,20,48],[28,53,20,51],[28,54,20,52],[28,55,20,53],[28,56,20,54],[28,57,20,55],[29,2,20,56],[29,6,21,6,"CryptoCoinInfo"],[29,20,21,20],[29,46,21,20,"_RegistryItem_1$Regis"],[29,67,21,20],[30,4,22,4],[30,13,22,4,"CryptoCoinInfo"],[30,28,22,16,"type"],[30,32,22,20],[30,34,22,22,"network"],[30,41,22,29],[30,43,22,31],[31,6,22,31],[31,10,22,31,"_this"],[31,15,22,31],[32,6,22,31,"_classCallCheck"],[32,21,22,31],[32,28,22,31,"CryptoCoinInfo"],[32,42,22,31],[33,6,23,8,"_this"],[33,11,23,8],[33,14,23,8,"_callSuper"],[33,24,23,8],[33,31,23,8,"CryptoCoinInfo"],[33,45,23,8],[34,6,24,8,"_this"],[34,11,24,8],[34,12,24,13,"type"],[34,16,24,17],[34,19,24,20,"type"],[34,23,24,24],[35,6,25,8,"_this"],[35,11,25,8],[35,12,25,13,"network"],[35,19,25,20],[35,22,25,23,"network"],[35,29,25,30],[36,6,26,8,"_this"],[36,11,26,8],[36,12,26,13,"getRegistryType"],[36,27,26,28],[36,30,26,31],[36,42,26,37],[37,8,27,12],[37,15,27,19,"_$$_REQUIRE"],[37,26,27,19],[37,27,27,19,"_dependencyMap"],[37,41,27,19],[37,64,27,34,"RegistryTypes"],[37,77,27,47],[37,78,27,48,"CRYPTO_COIN_INFO"],[37,94,27,64],[38,6,28,8],[38,7,28,9],[39,6,29,8,"_this"],[39,11,29,8],[39,12,29,13,"getType"],[39,19,29,20],[39,22,29,23],[39,34,29,29],[40,8,30,12],[40,15,30,19,"_this"],[40,20,30,19],[40,21,30,24,"type"],[40,25,30,28],[40,29,30,32,"Type"],[40,33,30,36],[40,34,30,37,"bitcoin"],[40,41,30,44],[41,6,31,8],[41,7,31,9],[42,6,32,8,"_this"],[42,11,32,8],[42,12,32,13,"getNetwork"],[42,22,32,23],[42,25,32,26],[42,37,32,32],[43,8,33,12],[43,15,33,19,"_this"],[43,20,33,19],[43,21,33,24,"network"],[43,28,33,31],[43,32,33,35,"Network"],[43,39,33,42],[43,40,33,43,"mainnet"],[43,47,33,50],[44,6,34,8],[44,7,34,9],[45,6,35,8,"_this"],[45,11,35,8],[45,12,35,13,"toDataItem"],[45,22,35,23],[45,25,35,26],[45,37,35,32],[46,8,36,12],[46,12,36,18,"map"],[46,15,36,21],[46,18,36,24],[46,19,36,25],[46,20,36,26],[47,8,37,12],[47,12,37,16,"_this"],[47,17,37,16],[47,18,37,21,"type"],[47,22,37,25],[47,24,37,27],[48,10,38,16,"map"],[48,13,38,19],[48,14,38,20,"Keys"],[48,18,38,24],[48,19,38,25,"type"],[48,23,38,29],[48,24,38,30],[48,27,38,33,"_this"],[48,32,38,33],[48,33,38,38,"type"],[48,37,38,42],[49,8,39,12],[50,8,40,12],[50,12,40,16,"_this"],[50,17,40,16],[50,18,40,21,"network"],[50,25,40,28],[50,27,40,30],[51,10,41,16,"map"],[51,13,41,19],[51,14,41,20,"Keys"],[51,18,41,24],[51,19,41,25,"network"],[51,26,41,32],[51,27,41,33],[51,30,41,36,"_this"],[51,35,41,36],[51,36,41,41,"network"],[51,43,41,48],[52,8,42,12],[53,8,43,12],[53,15,43,19],[53,20,43,23,"_$$_REQUIRE"],[53,31,43,23],[53,32,43,23,"_dependencyMap"],[53,46,43,23],[53,60,43,29,"DataItem"],[53,68,43,37],[53,70,43,38,"map"],[53,73,43,41],[53,74,43,42],[54,6,44,8],[54,7,44,9],[55,6,44,10],[55,13,44,10,"_this"],[55,18,44,10],[56,4,45,4],[57,4,45,5,"_inherits"],[57,13,45,5],[57,14,45,5,"CryptoCoinInfo"],[57,28,45,5],[57,30,45,5,"_RegistryItem_1$Regis"],[57,51,45,5],[58,4,45,5],[58,11,45,5,"_createClass"],[58,23,45,5],[58,24,45,5,"CryptoCoinInfo"],[58,38,45,5],[59,2,45,5],[59,4,21,29,"_$$_REQUIRE"],[59,15,21,29],[59,16,21,29,"_dependencyMap"],[59,30,21,29],[59,53,21,44,"RegistryItem"],[59,65,21,56],[60,2,47,0,"exports"],[60,9,47,7],[60,10,47,8,"CryptoCoinInfo"],[60,24,47,22],[60,27,47,25,"CryptoCoinInfo"],[60,41,47,39],[61,2,48,0,"CryptoCoinInfo"],[61,16,48,14],[61,17,48,15,"fromDataItem"],[61,29,48,27],[61,32,48,30],[61,42,48,31,"dataItem"],[61,50,48,39],[61,52,48,44],[62,4,49,4],[62,8,49,10,"map"],[62,11,49,13],[62,14,49,16,"dataItem"],[62,22,49,24],[62,23,49,25,"getData"],[62,30,49,32],[62,31,49,33],[62,32,49,34],[63,4,50,4],[63,8,50,10,"type"],[63,12,50,14],[63,15,50,17,"map"],[63,18,50,20],[63,19,50,21,"Keys"],[63,23,50,25],[63,24,50,26,"type"],[63,28,50,30],[63,29,50,31],[64,4,51,4],[64,8,51,10,"network"],[64,15,51,17],[64,18,51,20,"map"],[64,21,51,23],[64,22,51,24,"Keys"],[64,26,51,28],[64,27,51,29,"network"],[64,34,51,36],[64,35,51,37],[65,4,52,4],[65,11,52,11],[65,15,52,15,"CryptoCoinInfo"],[65,29,52,29],[65,30,52,30,"type"],[65,34,52,34],[65,36,52,36,"network"],[65,43,52,43],[65,44,52,44],[66,2,53,0],[66,3,53,1],[67,2,54,0,"CryptoCoinInfo"],[67,16,54,14],[67,17,54,15,"fromCBOR"],[67,25,54,23],[67,28,54,26],[67,38,54,27,"_cborPayload"],[67,50,54,39],[67,52,54,44],[68,4,55,4],[68,8,55,10,"dataItem"],[68,16,55,18],[68,19,55,21],[68,20,55,22],[68,21,55,23],[68,23,55,25,"_$$_REQUIRE"],[68,34,55,25],[68,35,55,25,"_dependencyMap"],[68,49,55,25],[68,63,55,31,"decodeToDataItem"],[68,79,55,47],[68,81,55,49,"_cborPayload"],[68,93,55,61],[68,94,55,62],[69,4,56,4],[69,11,56,11,"CryptoCoinInfo"],[69,25,56,25],[69,26,56,26,"fromDataItem"],[69,38,56,38],[69,39,56,39,"dataItem"],[69,47,56,47],[69,48,56,48],[70,2,57,0],[70,3,57,1],[71,0,57,2],[71,3]],"functionMap":{"names":["<global>","<anonymous>","CryptoCoinInfo","constructor","getRegistryType","getType","getNetwork","toDataItem","fromDataItem","fromCBOR"],"mappings":"AAA;CCO;CDG;CCE;CDE;CCE;CDG;AEC;ICC;+BCI;SDE;uBEC;SFE;0BGC;SHE;0BIC;SJS;KDC;CFC;8BQE;CRK;0BSC;CTG"}},"type":"js/module"}]}