{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":482,"column":34,"index":22065}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":482,"column":34,"index":22065}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":482,"column":34,"index":22065}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":482,"column":34,"index":22065}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./symbols","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}},{"start":{"line":29,"column":18,"index":1261},"end":{"line":29,"column":38,"index":1281}}],"key":"ab2m4Asmhdk58sCF6nygJvPWckI="}},{"name":"./JSONCacheMap","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":23,"index":1124},"end":{"line":26,"column":48,"index":1149}}],"key":"NrP2NvZk5rz4RifIC0KG21NDgxU="}},{"name":"./indirect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":19,"index":1006},"end":{"line":23,"column":40,"index":1027}},{"start":{"line":23,"column":19,"index":1006},"end":{"line":23,"column":40,"index":1027}},{"start":{"line":23,"column":19,"index":1006},"end":{"line":23,"column":40,"index":1027}},{"start":{"line":23,"column":19,"index":1006},"end":{"line":23,"column":40,"index":1027}},{"start":{"line":23,"column":19,"index":1006},"end":{"line":23,"column":40,"index":1027}}],"key":"cYlSegnhnQg7iiD9MQpYQJJgaGk="}},{"name":"./assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}},{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}},{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}},{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}},{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}},{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}},{"start":{"line":22,"column":17,"index":966},"end":{"line":22,"column":36,"index":985}}],"key":"PRSWv9Op+8jXiipitv94+qE/Tqo="}},{"name":"./binding","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}},{"start":{"line":21,"column":18,"index":927},"end":{"line":21,"column":38,"index":947}}],"key":"OjrA0Bxm3t0WtSdWtaEky0moQW8="}},{"name":"./collection-accessors/Results","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":18,"index":1301},"end":{"line":30,"column":59,"index":1342}}],"key":"iCk25Vic0sR8BAxm4z6trJmyqZQ="}},{"name":"./ObjectListeners","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":26,"index":1177},"end":{"line":27,"column":54,"index":1205}}],"key":"RAGGmMBgPrYipDPZ3wEdBf2LiQA="}},{"name":"./schema","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":17,"index":1080},"end":{"line":25,"column":36,"index":1099}}],"key":"W26pFxeC1eoZg5NMFFVJmgEOTqQ="}},{"name":"./bson","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":15,"index":1044},"end":{"line":24,"column":32,"index":1061}},{"start":{"line":24,"column":15,"index":1044},"end":{"line":24,"column":32,"index":1061}},{"start":{"line":24,"column":15,"index":1044},"end":{"line":24,"column":32,"index":1061}}],"key":"ouC/zxpsjOFqkX4HasHsvsHGBeI="}},{"name":"./flags","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":16,"index":1223},"end":{"line":28,"column":34,"index":1241}}],"key":"n0WP4GhqtGGf9NpeD2G/jTx3Xak="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2022 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.RealmObject = exports.KEY_SET = exports.KEY_ARRAY = exports.UpdateMode = void 0;\n  /**\n   * The update mode to use when creating an object that already exists,\n   * which is determined by a matching primary key.\n   */\n  var UpdateMode;\n  (function (UpdateMode) {\n    /**\n     * Objects are only created. If an existing object exists (determined by a\n     * matching primary key), an exception is thrown.\n     */\n    UpdateMode[\"Never\"] = \"never\";\n    /**\n     * If an existing object exists (determined by a matching primary key), only\n     * properties where the value has actually changed will be updated. This improves\n     * notifications and server side performance but also have implications for how\n     * changes across devices are merged. For most use cases, the behavior will match\n     * the intuitive behavior of how changes should be merged, but if updating an\n     * entire object is considered an atomic operation, this mode should not be used.\n     */\n    UpdateMode[\"Modified\"] = \"modified\";\n    /**\n     * If an existing object exists (determined by a matching primary key), all\n     * properties provided will be updated, any other properties will remain unchanged.\n     */\n    UpdateMode[\"All\"] = \"all\";\n  })(UpdateMode = exports.UpdateMode || (exports.UpdateMode = {}));\n  exports.KEY_ARRAY = Symbol(\"Object#keys\");\n  exports.KEY_SET = Symbol(\"Object#keySet\");\n  var INTERNAL_LISTENERS = Symbol(\"Object#listeners\");\n  var DEFAULT_PROPERTY_DESCRIPTOR = {\n    configurable: true,\n    enumerable: true,\n    writable: true\n  };\n  /* eslint-disable-next-line @typescript-eslint/no-explicit-any */\n  var PROXY_HANDLER = {\n    ownKeys: function ownKeys(target) {\n      return Reflect.ownKeys(target).concat(target[exports.KEY_ARRAY]);\n    },\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, prop) {\n      if (typeof prop === \"string\" && target[exports.KEY_SET].has(prop)) {\n        return DEFAULT_PROPERTY_DESCRIPTOR;\n      }\n      var result = Reflect.getOwnPropertyDescriptor(target, prop);\n      if (result && typeof prop === \"symbol\") {\n        if (prop === _$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL) {\n          result.enumerable = false;\n          result.writable = false;\n        } else if (prop === INTERNAL_LISTENERS) {\n          result.enumerable = false;\n        }\n      }\n      return result;\n    }\n  };\n  /**\n   * Base class for a Realm Object.\n   * @example\n   * To define a class `Person` with required `name` and `age`\n   * properties, define a `static schema`:\n   * ```\n   * class Person extends Realm.Object<Person> {\n   *   _id!: Realm.BSON.ObjectId;\n   *   name!: string;\n   *   age!: number;\n   *   static schema: Realm.ObjectSchema = {\n   *     name: \"Person\",\n   *     primaryKey: \"_id\",\n   *     properties: {\n   *       _id: \"objectId\",\n   *       name: \"string\",\n   *       age: \"int\",\n   *     },\n   *   };\n   * }\n   * ```\n   * @example\n   * If using the [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin):\n   * To define a class `Person` with required `name` and `age` properties, they would\n   * need to be specified in the type argument when it is being constructed to allow\n   * Typescript-only model definitions:\n   * ```\n   * class Person extends Realm.Object<Person, \"name\" | \"age\"> {\n   *   _id = new Realm.Types.ObjectId();\n   *   name: Realm.Types.String;\n   *   age: Realm.Types.Int;\n   *   static primaryKey = \"_id\";\n   * }\n   * ```\n   * @see {@link ObjectSchema}\n   * @typeParam `T` - The type of this class (e.g. if your class is `Person`,\n   * `T` should also be `Person` - this duplication is required due to how\n   * TypeScript works)\n   * @typeParam `RequiredProperties` - The names of any properties of this\n   * class which are required when an instance is constructed with `new`. Any\n   * properties not specified will be optional, and will default to a sensible\n   * null value if no default is specified elsewhere.\n   */\n  var RealmObject = /*#__PURE__*/function () {\n    /**\n     * Create a `RealmObject` wrapping an `Obj` from the binding.\n     * @param realm - The Realm managing the object.\n     * @param values - The values of the object's properties at creation.\n     */\n    function RealmObject(realm, values) {\n      _classCallCheck(this, RealmObject);\n      return realm.create(this.constructor, values);\n    }\n    /**\n     * @returns An array of the names of the object's properties.\n     * @deprecated Please use {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys | Object.keys()}\n     */\n    return _createClass(RealmObject, [{\n      key: \"keys\",\n      value: function keys() {\n        // copying to prevent caller from modifying the static array.\n        return _toConsumableArray(this[exports.KEY_ARRAY]);\n      }\n      /**\n       * @returns An array of key/value pairs of the object's properties.\n       * @deprecated Please use {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries | Object.entries()}\n       */\n    }, {\n      key: \"entries\",\n      value: function entries() {\n        return Object.entries(this);\n      }\n      /** @internal */\n    }, {\n      key: \"toJSON\",\n      value: function toJSON(_) {\n        var cache = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new (_$$_REQUIRE(_dependencyMap[5], \"./JSONCacheMap\").JSONCacheMap)();\n        // Construct a reference-id of table-name & primaryKey if it exists, or fall back to objectId.\n        // Check if current objectId has already processed, to keep object references the same.\n        var existing = cache.find(this);\n        if (existing) {\n          return existing;\n        }\n        var result = {};\n        cache.add(this, result);\n        // Move all enumerable keys to result, triggering any specific toJSON implementation in the process.\n        for (var key in this) {\n          var value = this[key];\n          if (typeof value == \"function\") {\n            continue;\n          }\n          if (value instanceof _$$_REQUIRE(_dependencyMap[6], \"./indirect\").indirect.Object || value instanceof _$$_REQUIRE(_dependencyMap[6], \"./indirect\").indirect.OrderedCollection || value instanceof _$$_REQUIRE(_dependencyMap[6], \"./indirect\").indirect.Dictionary) {\n            // recursively trigger `toJSON` for Realm instances with the same cache.\n            result[key] = value.toJSON(key, cache);\n          } else {\n            // Other cases, including null and undefined.\n            result[key] = value;\n          }\n        }\n        return result;\n      }\n      /**\n       * Checks if this object has not been deleted and is part of a valid Realm.\n       * @returns `true` if the object can be safely accessed, `false` if not.\n       */\n    }, {\n      key: \"isValid\",\n      value: function isValid() {\n        return this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL] && this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL].isValid;\n      }\n      /**\n       * The schema for the type this object belongs to.\n       * @returns The {@link CanonicalObjectSchema} that describes this object.\n       */\n    }, {\n      key: \"objectSchema\",\n      value: function objectSchema() {\n        return this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_REALM].getClassHelpers(this).canonicalObjectSchema;\n      }\n    }, {\n      key: \"linkingObjects\",\n      value: function linkingObjects(objectType, propertyName) {\n        var realm = this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_REALM];\n        var targetClassHelpers = realm.getClassHelpers(objectType);\n        var targetObjectSchema = targetClassHelpers.objectSchema,\n          properties = targetClassHelpers.properties,\n          wrapObject = targetClassHelpers.wrapObject;\n        var targetProperty = properties.get(propertyName);\n        var originObjectSchema = this.objectSchema();\n        (0, _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert)(originObjectSchema.name === targetProperty.objectType, function () {\n          return `'${targetObjectSchema.name}#${propertyName}' is not a relationship to '${originObjectSchema.name}'`;\n        });\n        var typeHelpers = {\n          // See `[binding.PropertyType.LinkingObjects]` in `TypeHelpers.ts`.\n          toBinding: function toBinding(value) {\n            return value;\n          },\n          fromBinding: function fromBinding(value) {\n            _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert.instanceOf(value, _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Obj);\n            return wrapObject(value);\n          }\n        };\n        var accessor = (0, _$$_REQUIRE(_dependencyMap[9], \"./collection-accessors/Results\").createResultsAccessor)({\n          realm: realm,\n          typeHelpers: typeHelpers,\n          itemType: 7 /* binding.PropertyType.Object */\n        });\n        // Create the Result for the backlink view.\n        var tableRef = _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Helpers.getTable(realm.internal, targetObjectSchema.tableKey);\n        var tableView = this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL].getBacklinkView(tableRef, targetProperty.columnKey);\n        var results = _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Results.fromTableView(realm.internal, tableView);\n        return new (_$$_REQUIRE(_dependencyMap[6], \"./indirect\").indirect.Results)(realm, results, accessor, typeHelpers);\n      }\n      /**\n       * Returns the total count of incoming links to this object\n       * @returns The number of links to this object.\n       */\n    }, {\n      key: \"linkingObjectsCount\",\n      value: function linkingObjectsCount() {\n        return this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL].getBacklinkCount();\n      }\n      /**\n       * @deprecated\n       * TODO: Remove completely once the type tests are abandoned.\n       */\n    }, {\n      key: \"_objectId\",\n      value: function _objectId() {\n        throw new Error(\"This is now removed!\");\n      }\n      /**\n       * A string uniquely identifying the object across all objects of the same type.\n       */\n    }, {\n      key: \"_objectKey\",\n      value: function _objectKey() {\n        return this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL].key.toString();\n      }\n      /**\n       * Add a listener `callback` which will be called when a **live** object instance changes.\n       * @param callback - A function to be called when changes occur.\n       * @param keyPaths - Indicates a lower bound on the changes relevant for the listener. This is a lower bound, since if multiple listeners are added (each with their own `keyPaths`) the union of these key-paths will determine the changes that are considered relevant for all listeners registered on the object. In other words: A listener might fire more than the key-paths specify, if other listeners with different key-paths are present.\n       * @throws A {@link TypeAssertionError} if `callback` is not a function.\n       * @note\n       * Adding the listener is an asynchronous operation, so the callback is invoked the first time to notify the caller when the listener has been added.\n       * Thus, when the callback is invoked the first time it will contain an empty array for {@link Realm.ObjectChangeSet.changedProperties | changes.changedProperties}.\n       *\n       * Unlike {@link Collection.addListener}, changes on properties containing other objects (both standalone and embedded) will not trigger this listener.\n       * @example\n       * wine.addListener((obj, changes) => {\n       *  // obj === wine\n       *  console.log(`object is deleted: ${changes.deleted}`);\n       *  console.log(`${changes.changedProperties.length} properties have been changed:`);\n       *  changes.changedProperties.forEach(prop => {\n       *      console.log(` ${prop}`);\n       *   });\n       * })\n       * @example\n       * wine.addListener((obj, changes) => {\n       *  console.log(\"The wine got deleted or its brand might have changed\");\n       * }, [\"brand\"])\n       */\n    }, {\n      key: \"addListener\",\n      value: function addListener(callback, keyPaths) {\n        _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert.function(callback);\n        if (!this[INTERNAL_LISTENERS]) {\n          this[INTERNAL_LISTENERS] = new (_$$_REQUIRE(_dependencyMap[10], \"./ObjectListeners\").ObjectListeners)(this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_REALM].internal, this);\n        }\n        this[INTERNAL_LISTENERS].addListener(callback, typeof keyPaths === \"string\" ? [keyPaths] : keyPaths);\n      }\n      /**\n       * Remove the listener `callback` from this object.\n       * @throws A {@link TypeAssertionError} if `callback` is not a function.\n       * @param callback A function previously added as listener\n       */\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(callback) {\n        var _this$INTERNAL_LISTEN;\n        _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert.function(callback);\n        // Note: if the INTERNAL_LISTENERS field hasn't been initialized, then we have no listeners to remove.\n        (_this$INTERNAL_LISTEN = this[INTERNAL_LISTENERS]) == null || _this$INTERNAL_LISTEN.removeListener(callback);\n      }\n      /**\n       * Remove all listeners from this object.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        var _this$INTERNAL_LISTEN2;\n        // Note: if the INTERNAL_LISTENERS field hasn't been initialized, then we have no listeners to remove.\n        (_this$INTERNAL_LISTEN2 = this[INTERNAL_LISTENERS]) == null || _this$INTERNAL_LISTEN2.removeAllListeners();\n      }\n      /**\n       * Get underlying type of a property value.\n       * @param propertyName - The name of the property to retrieve the type of.\n       * @throws An {@link Error} if property does not exist.\n       * @returns Underlying type of the property value.\n       */\n    }, {\n      key: \"getPropertyType\",\n      value: function getPropertyType(propertyName) {\n        var _this$symbols_1$OBJEC = this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_REALM].getClassHelpers(this),\n          properties = _this$symbols_1$OBJEC.properties;\n        var _properties$get = properties.get(propertyName),\n          type = _properties$get.type,\n          objectType = _properties$get.objectType,\n          columnKey = _properties$get.columnKey;\n        var typeName = (0, _$$_REQUIRE(_dependencyMap[11], \"./schema\").getTypeName)(type, objectType);\n        if (typeName === \"mixed\") {\n          // This requires actually getting the object and inferring its type\n          var value = this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL].getAny(columnKey);\n          if (value === null) {\n            return \"null\";\n          } else if (_$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Int64.isInt(value)) {\n            return \"int\";\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Float) {\n            return \"float\";\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Timestamp) {\n            return \"date\";\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Obj) {\n            var _this$symbols_1$OBJEC2 = this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_REALM].getClassHelpers(value.table.key),\n              objectSchema = _this$symbols_1$OBJEC2.objectSchema;\n            return `<${objectSchema.name}>`;\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.ObjLink) {\n            var _this$symbols_1$OBJEC3 = this[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_REALM].getClassHelpers(value.tableKey),\n              _objectSchema = _this$symbols_1$OBJEC3.objectSchema;\n            return `<${_objectSchema.name}>`;\n          } else if (value instanceof ArrayBuffer) {\n            return \"data\";\n          } else if (typeof value === \"number\") {\n            return \"double\";\n          } else if (typeof value === \"string\") {\n            return \"string\";\n          } else if (typeof value === \"boolean\") {\n            return \"bool\";\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[12], \"./bson\").BSON.ObjectId) {\n            return \"objectId\";\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[12], \"./bson\").BSON.Decimal128) {\n            return \"decimal128\";\n          } else if (value instanceof _$$_REQUIRE(_dependencyMap[12], \"./bson\").BSON.UUID) {\n            return \"uuid\";\n          } else if (value === _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.ListSentinel) {\n            return \"list\";\n          } else if (value === _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.DictionarySentinel) {\n            return \"dictionary\";\n          } else if (typeof value === \"symbol\") {\n            throw new Error(`Unexpected Symbol: ${value.toString()}`);\n          } else {\n            _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert.never(value, \"value\");\n          }\n        } else {\n          return typeName;\n        }\n      }\n    }], [{\n      key: \"create\",\n      value:\n      /**\n       * Optionally specify the primary key of the schema when using [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin).\n       */\n\n      /**\n       * Optionally specify that the schema is an embedded schema when using [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin).\n       */\n\n      /**\n       * Optionally specify that the schema should sync unidirectionally if using flexible sync when using [@realm/babel-plugin](https://www.npmjs.com/package/@realm/babel-plugin).\n       */\n\n      /**\n       * Create an object in the database and set values on it\n       * @internal\n       */\n      function create(realm, values, mode, context) {\n        _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert.inTransaction(realm);\n        if (Array.isArray(values)) {\n          if (_$$_REQUIRE(_dependencyMap[13], \"./flags\").flags.ALLOW_VALUES_ARRAYS) {\n            var _persistedProperties = context.helpers.objectSchema.persistedProperties;\n            return RealmObject.create(realm, Object.fromEntries(values.map(function (value, index) {\n              var property = _persistedProperties[index];\n              var propertyName = property.publicName || property.name;\n              return [propertyName, value];\n            })), mode, context);\n          } else {\n            throw new Error(\"Array values on object creation is no longer supported\");\n          }\n        }\n        var _context$helpers = context.helpers,\n          properties = _context$helpers.properties,\n          wrapObject = _context$helpers.wrapObject,\n          persistedProperties = _context$helpers.objectSchema.persistedProperties,\n          createObj = context.createObj;\n        // Create the underlying object\n        var _ref = createObj ? createObj() : this.createObj(realm, values, mode, context),\n          _ref2 = _slicedToArray(_ref, 2),\n          obj = _ref2[0],\n          created = _ref2[1];\n        var result = wrapObject(obj);\n        (0, _$$_REQUIRE(_dependencyMap[7], \"./assert\").assert)(result);\n        // Persist any values provided\n        for (var property of persistedProperties) {\n          var propertyName = property.publicName || property.name;\n          var _properties$get2 = properties.get(propertyName),\n            defaultValue = _properties$get2.default,\n            getProperty = _properties$get2.get,\n            setProperty = _properties$get2.set;\n          if (property.isPrimary) {\n            continue; // Skip setting this, as we already provided it on object creation\n          }\n          var propertyValue = values[propertyName];\n          if (typeof propertyValue !== \"undefined\") {\n            if (mode !== UpdateMode.Modified || getProperty(obj) !== propertyValue) {\n              // Calling `set`/`setProperty` (or `result[propertyName] = propertyValue`)\n              // will call into the property setter in PropertyHelpers.ts.\n              // (E.g. the setter for [binding.PropertyType.Array] in the case of lists.)\n              setProperty(obj, propertyValue, created);\n            }\n          } else {\n            // If the user has omitted a value for the `property`, and the underlying\n            // object was just created, set the `property` to the default if provided.\n            if (created) {\n              if (typeof defaultValue !== \"undefined\") {\n                var extractedValue = typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n                setProperty(obj, extractedValue, created);\n              } else if (!(property.type & 896 /* binding.PropertyType.Collection */) && !(property.type & 64 /* binding.PropertyType.Nullable */)) {\n                throw new Error(`Missing value for property '${propertyName}'`);\n              }\n            }\n          }\n        }\n        return result;\n      }\n      /**\n       * Create an object in the database and populate its primary key value, if required\n       * @internal\n       */\n    }, {\n      key: \"createObj\",\n      value: function createObj(realm, values, mode, context) {\n        var _context$helpers2 = context.helpers,\n          _context$helpers2$obj = _context$helpers2.objectSchema,\n          name = _context$helpers2$obj.name,\n          tableKey = _context$helpers2$obj.tableKey,\n          primaryKey = _context$helpers2$obj.primaryKey,\n          properties = _context$helpers2.properties;\n        // Create the underlying object\n        var table = _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Helpers.getTable(realm.internal, tableKey);\n        if (primaryKey) {\n          var primaryKeyHelpers = properties.get(primaryKey);\n          var primaryKeyValue = values[primaryKey];\n          // If the value for the primary key was not set, use the default value\n          if (primaryKeyValue === undefined) {\n            var defaultValue = primaryKeyHelpers.default;\n            primaryKeyValue = typeof defaultValue === \"function\" ? defaultValue() : defaultValue;\n          }\n          var pk = primaryKeyHelpers.toBinding(\n          // Fallback to default value if the provided value is undefined or null\n          typeof primaryKeyValue !== \"undefined\" && primaryKeyValue !== null ? primaryKeyValue : primaryKeyHelpers.default);\n          var result = _$$_REQUIRE(_dependencyMap[8], \"./binding\").binding.Helpers.getOrCreateObjectWithPrimaryKey(table, pk);\n          var _result = _slicedToArray(result, 2),\n            created = _result[1];\n          if (mode === UpdateMode.Never && !created) {\n            throw new Error(`Attempting to create an object of type '${name}' with an existing primary key value '${primaryKeyValue}'.`);\n          }\n          return result;\n        } else {\n          return [table.createObject(), true];\n        }\n      }\n      /**\n       * Create a wrapper for accessing an object from the database\n       * @internal\n       */\n    }, {\n      key: \"createWrapper\",\n      value: function createWrapper(internal, constructor) {\n        var result = Object.create(constructor.prototype);\n        result[_$$_REQUIRE(_dependencyMap[4], \"./symbols\").OBJECT_INTERNAL] = internal;\n        // Initializing INTERNAL_LISTENERS here rather than letting it just be implicitly undefined since JS engines\n        // prefer adding all fields to objects upfront. Adding optional fields later can sometimes trigger deoptimizations.\n        result[INTERNAL_LISTENERS] = null;\n        // Wrap in a proxy to trap keys, enabling the spread operator, and hiding our internal fields.\n        return new Proxy(result, PROXY_HANDLER);\n      }\n    }]);\n  }();\n  /**\n   * This property is stored on the per class prototype when transforming the schema.\n   * @internal\n   */\n  RealmObject.allowValuesArrays = false;\n  exports.RealmObject = RealmObject;\n  // We like to refer to this as \"Realm.Object\"\n  // TODO: Determine if we want to revisit this if we're going away from a namespaced API\n  Object.defineProperty(RealmObject, \"name\", {\n    value: \"Realm.Object\"\n  });\n  (0, _$$_REQUIRE(_dependencyMap[6], \"./indirect\").injectIndirect)(\"Object\", RealmObject);\n});","lineCount":525,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,18,0],[21,6,18,0,"_slicedToArray"],[21,20,18,0],[21,23,18,0,"_$$_REQUIRE"],[21,34,18,0],[21,35,18,0,"_dependencyMap"],[21,49,18,0],[22,2,18,0],[22,6,18,0,"_toConsumableArray"],[22,24,18,0],[22,27,18,0,"_$$_REQUIRE"],[22,38,18,0],[22,39,18,0,"_dependencyMap"],[22,53,18,0],[23,2,18,0],[23,6,18,0,"_classCallCheck"],[23,21,18,0],[23,24,18,0,"_$$_REQUIRE"],[23,35,18,0],[23,36,18,0,"_dependencyMap"],[23,50,18,0],[24,2,18,0],[24,6,18,0,"_createClass"],[24,18,18,0],[24,21,18,0,"_$$_REQUIRE"],[24,32,18,0],[24,33,18,0,"_dependencyMap"],[24,47,18,0],[25,2,19,0,"Object"],[25,8,19,6],[25,9,19,7,"defineProperty"],[25,23,19,21],[25,24,19,22,"exports"],[25,31,19,29],[25,33,19,31],[25,45,19,43],[25,47,19,45],[26,4,19,47,"value"],[26,9,19,52],[26,11,19,54],[27,2,19,59],[27,3,19,60],[27,4,19,61],[28,2,20,0,"exports"],[28,9,20,7],[28,10,20,8,"RealmObject"],[28,21,20,19],[28,24,20,22,"exports"],[28,31,20,29],[28,32,20,30,"KEY_SET"],[28,39,20,37],[28,42,20,40,"exports"],[28,49,20,47],[28,50,20,48,"KEY_ARRAY"],[28,59,20,57],[28,62,20,60,"exports"],[28,69,20,67],[28,70,20,68,"UpdateMode"],[28,80,20,78],[28,83,20,81],[28,88,20,86],[28,89,20,87],[29,2,31,0],[30,0,32,0],[31,0,33,0],[32,0,34,0],[33,2,35,0],[33,6,35,4,"UpdateMode"],[33,16,35,14],[34,2,36,0],[34,3,36,1],[34,13,36,11,"UpdateMode"],[34,23,36,21],[34,25,36,23],[35,4,37,4],[36,0,38,0],[37,0,39,0],[38,0,40,0],[39,4,41,4,"UpdateMode"],[39,14,41,14],[39,15,41,15],[39,22,41,22],[39,23,41,23],[39,26,41,26],[39,33,41,33],[40,4,42,4],[41,0,43,0],[42,0,44,0],[43,0,45,0],[44,0,46,0],[45,0,47,0],[46,0,48,0],[47,0,49,0],[48,4,50,4,"UpdateMode"],[48,14,50,14],[48,15,50,15],[48,25,50,25],[48,26,50,26],[48,29,50,29],[48,39,50,39],[49,4,51,4],[50,0,52,0],[51,0,53,0],[52,0,54,0],[53,4,55,4,"UpdateMode"],[53,14,55,14],[53,15,55,15],[53,20,55,20],[53,21,55,21],[53,24,55,24],[53,29,55,29],[54,2,56,0],[54,3,56,1],[54,5,56,3,"UpdateMode"],[54,15,56,13],[54,18,56,16,"exports"],[54,25,56,23],[54,26,56,24,"UpdateMode"],[54,36,56,34],[54,41,56,39,"exports"],[54,48,56,46],[54,49,56,47,"UpdateMode"],[54,59,56,57],[54,62,56,60],[54,63,56,61],[54,64,56,62],[54,65,56,63],[54,66,56,64],[55,2,57,0,"exports"],[55,9,57,7],[55,10,57,8,"KEY_ARRAY"],[55,19,57,17],[55,22,57,20,"Symbol"],[55,28,57,26],[55,29,57,27],[55,42,57,40],[55,43,57,41],[56,2,58,0,"exports"],[56,9,58,7],[56,10,58,8,"KEY_SET"],[56,17,58,15],[56,20,58,18,"Symbol"],[56,26,58,24],[56,27,58,25],[56,42,58,40],[56,43,58,41],[57,2,59,0],[57,6,59,6,"INTERNAL_LISTENERS"],[57,24,59,24],[57,27,59,27,"Symbol"],[57,33,59,33],[57,34,59,34],[57,52,59,52],[57,53,59,53],[58,2,60,0],[58,6,60,6,"DEFAULT_PROPERTY_DESCRIPTOR"],[58,33,60,33],[58,36,60,36],[59,4,60,38,"configurable"],[59,16,60,50],[59,18,60,52],[59,22,60,56],[60,4,60,58,"enumerable"],[60,14,60,68],[60,16,60,70],[60,20,60,74],[61,4,60,76,"writable"],[61,12,60,84],[61,14,60,86],[62,2,60,91],[62,3,60,92],[63,2,61,0],[64,2,62,0],[64,6,62,6,"PROXY_HANDLER"],[64,19,62,19],[64,22,62,22],[65,4,63,4,"ownKeys"],[65,11,63,11],[65,22,63,4,"ownKeys"],[65,29,63,11,"ownKeys"],[65,30,63,12,"target"],[65,36,63,18],[65,38,63,20],[66,6,64,8],[66,13,64,15,"Reflect"],[66,20,64,22],[66,21,64,23,"ownKeys"],[66,28,64,30],[66,29,64,31,"target"],[66,35,64,37],[66,36,64,38],[66,37,64,39,"concat"],[66,43,64,45],[66,44,64,46,"target"],[66,50,64,52],[66,51,64,53,"exports"],[66,58,64,60],[66,59,64,61,"KEY_ARRAY"],[66,68,64,70],[66,69,64,71],[66,70,64,72],[67,4,65,4],[67,5,65,5],[68,4,66,4,"getOwnPropertyDescriptor"],[68,28,66,28],[68,39,66,4,"getOwnPropertyDescriptor"],[68,63,66,28,"getOwnPropertyDescriptor"],[68,64,66,29,"target"],[68,70,66,35],[68,72,66,37,"prop"],[68,76,66,41],[68,78,66,43],[69,6,67,8],[69,10,67,12],[69,17,67,19,"prop"],[69,21,67,23],[69,26,67,28],[69,34,67,36],[69,38,67,40,"target"],[69,44,67,46],[69,45,67,47,"exports"],[69,52,67,54],[69,53,67,55,"KEY_SET"],[69,60,67,62],[69,61,67,63],[69,62,67,64,"has"],[69,65,67,67],[69,66,67,68,"prop"],[69,70,67,72],[69,71,67,73],[69,73,67,75],[70,8,68,12],[70,15,68,19,"DEFAULT_PROPERTY_DESCRIPTOR"],[70,42,68,46],[71,6,69,8],[72,6,70,8],[72,10,70,14,"result"],[72,16,70,20],[72,19,70,23,"Reflect"],[72,26,70,30],[72,27,70,31,"getOwnPropertyDescriptor"],[72,51,70,55],[72,52,70,56,"target"],[72,58,70,62],[72,60,70,64,"prop"],[72,64,70,68],[72,65,70,69],[73,6,71,8],[73,10,71,12,"result"],[73,16,71,18],[73,20,71,22],[73,27,71,29,"prop"],[73,31,71,33],[73,36,71,38],[73,44,71,46],[73,46,71,48],[74,8,72,12],[74,12,72,16,"prop"],[74,16,72,20],[74,21,72,25,"_$$_REQUIRE"],[74,32,72,25],[74,33,72,25,"_dependencyMap"],[74,47,72,25],[74,65,72,35,"OBJECT_INTERNAL"],[74,80,72,50],[74,82,72,52],[75,10,73,16,"result"],[75,16,73,22],[75,17,73,23,"enumerable"],[75,27,73,33],[75,30,73,36],[75,35,73,41],[76,10,74,16,"result"],[76,16,74,22],[76,17,74,23,"writable"],[76,25,74,31],[76,28,74,34],[76,33,74,39],[77,8,75,12],[77,9,75,13],[77,15,76,17],[77,19,76,21,"prop"],[77,23,76,25],[77,28,76,30,"INTERNAL_LISTENERS"],[77,46,76,48],[77,48,76,50],[78,10,77,16,"result"],[78,16,77,22],[78,17,77,23,"enumerable"],[78,27,77,33],[78,30,77,36],[78,35,77,41],[79,8,78,12],[80,6,79,8],[81,6,80,8],[81,13,80,15,"result"],[81,19,80,21],[82,4,81,4],[83,2,82,0],[83,3,82,1],[84,2,83,0],[85,0,84,0],[86,0,85,0],[87,0,86,0],[88,0,87,0],[89,0,88,0],[90,0,89,0],[91,0,90,0],[92,0,91,0],[93,0,92,0],[94,0,93,0],[95,0,94,0],[96,0,95,0],[97,0,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,0,104,0],[106,0,105,0],[107,0,106,0],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,0,117,0],[119,0,118,0],[120,0,119,0],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,0,123,0],[125,0,124,0],[126,0,125,0],[127,2,83,0],[127,6,126,6,"RealmObject"],[127,17,126,17],[128,4,247,4],[129,0,248,0],[130,0,249,0],[131,0,250,0],[132,0,251,0],[133,4,252,4],[133,13,252,4,"RealmObject"],[133,25,252,16,"realm"],[133,30,252,21],[133,32,252,23,"values"],[133,38,252,29],[133,40,252,31],[134,6,252,31,"_classCallCheck"],[134,21,252,31],[134,28,252,31,"RealmObject"],[134,39,252,31],[135,6,253,8],[135,13,253,15,"realm"],[135,18,253,20],[135,19,253,21,"create"],[135,25,253,27],[135,26,253,28],[135,30,253,32],[135,31,253,33,"constructor"],[135,42,253,44],[135,44,253,46,"values"],[135,50,253,52],[135,51,253,53],[136,4,254,4],[137,4,255,4],[138,0,256,0],[139,0,257,0],[140,0,258,0],[141,4,255,4],[141,11,255,4,"_createClass"],[141,23,255,4],[141,24,255,4,"RealmObject"],[141,35,255,4],[142,6,255,4,"key"],[142,9,255,4],[143,6,255,4,"value"],[143,11,255,4],[143,13,259,4],[143,22,259,4,"keys"],[143,26,259,8,"keys"],[143,27,259,8],[143,29,259,11],[144,8,260,8],[145,8,261,8],[145,15,261,8,"_toConsumableArray"],[145,33,261,8],[145,34,261,19],[145,38,261,23],[145,39,261,24,"exports"],[145,46,261,31],[145,47,261,32,"KEY_ARRAY"],[145,56,261,41],[145,57,261,42],[146,6,262,4],[147,6,263,4],[148,0,264,0],[149,0,265,0],[150,0,266,0],[151,4,263,4],[152,6,263,4,"key"],[152,9,263,4],[153,6,263,4,"value"],[153,11,263,4],[153,13,267,4],[153,22,267,4,"entries"],[153,29,267,11,"entries"],[153,30,267,11],[153,32,267,14],[154,8,268,8],[154,15,268,15,"Object"],[154,21,268,21],[154,22,268,22,"entries"],[154,29,268,29],[154,30,268,30],[154,34,268,34],[154,35,268,35],[155,6,269,4],[156,6,270,4],[157,4,270,4],[158,6,270,4,"key"],[158,9,270,4],[159,6,270,4,"value"],[159,11,270,4],[159,13,271,4],[159,22,271,4,"toJSON"],[159,28,271,10,"toJSON"],[159,29,271,11,"_"],[159,30,271,12],[159,32,271,57],[160,8,271,57],[160,12,271,14,"cache"],[160,17,271,19],[160,20,271,19,"arguments"],[160,29,271,19],[160,30,271,19,"length"],[160,36,271,19],[160,44,271,19,"arguments"],[160,53,271,19],[160,61,271,19,"undefined"],[160,70,271,19],[160,73,271,19,"arguments"],[160,82,271,19],[160,88,271,22],[160,93,271,26,"_$$_REQUIRE"],[160,104,271,26],[160,105,271,26,"_dependencyMap"],[160,119,271,26],[160,142,271,41,"JSONCacheMap"],[160,154,271,53],[160,156,271,54],[160,157,271,55],[161,8,272,8],[162,8,273,8],[163,8,274,8],[163,12,274,14,"existing"],[163,20,274,22],[163,23,274,25,"cache"],[163,28,274,30],[163,29,274,31,"find"],[163,33,274,35],[163,34,274,36],[163,38,274,40],[163,39,274,41],[164,8,275,8],[164,12,275,12,"existing"],[164,20,275,20],[164,22,275,22],[165,10,276,12],[165,17,276,19,"existing"],[165,25,276,27],[166,8,277,8],[167,8,278,8],[167,12,278,14,"result"],[167,18,278,20],[167,21,278,23],[167,22,278,24],[167,23,278,25],[168,8,279,8,"cache"],[168,13,279,13],[168,14,279,14,"add"],[168,17,279,17],[168,18,279,18],[168,22,279,22],[168,24,279,24,"result"],[168,30,279,30],[168,31,279,31],[169,8,280,8],[170,8,281,8],[170,13,281,13],[170,17,281,19,"key"],[170,20,281,22],[170,24,281,26],[170,28,281,30],[170,30,281,32],[171,10,282,12],[171,14,282,18,"value"],[171,19,282,23],[171,22,282,26],[171,26,282,30],[171,27,282,31,"key"],[171,30,282,34],[171,31,282,35],[172,10,283,12],[172,14,283,16],[172,21,283,23,"value"],[172,26,283,28],[172,30,283,32],[172,40,283,42],[172,42,283,44],[173,12,284,16],[174,10,285,12],[175,10,286,12],[175,14,286,16,"value"],[175,19,286,21],[175,31,286,33,"_$$_REQUIRE"],[175,42,286,33],[175,43,286,33,"_dependencyMap"],[175,57,286,33],[175,76,286,44,"indirect"],[175,84,286,52],[175,85,286,53,"Object"],[175,91,286,59],[175,95,287,16,"value"],[175,100,287,21],[175,112,287,33,"_$$_REQUIRE"],[175,123,287,33],[175,124,287,33,"_dependencyMap"],[175,138,287,33],[175,157,287,44,"indirect"],[175,165,287,52],[175,166,287,53,"OrderedCollection"],[175,183,287,70],[175,187,288,16,"value"],[175,192,288,21],[175,204,288,33,"_$$_REQUIRE"],[175,215,288,33],[175,216,288,33,"_dependencyMap"],[175,230,288,33],[175,249,288,44,"indirect"],[175,257,288,52],[175,258,288,53,"Dictionary"],[175,268,288,63],[175,270,288,65],[176,12,289,16],[177,12,290,16,"result"],[177,18,290,22],[177,19,290,23,"key"],[177,22,290,26],[177,23,290,27],[177,26,290,30,"value"],[177,31,290,35],[177,32,290,36,"toJSON"],[177,38,290,42],[177,39,290,43,"key"],[177,42,290,46],[177,44,290,48,"cache"],[177,49,290,53],[177,50,290,54],[178,10,291,12],[178,11,291,13],[178,17,292,17],[179,12,293,16],[180,12,294,16,"result"],[180,18,294,22],[180,19,294,23,"key"],[180,22,294,26],[180,23,294,27],[180,26,294,30,"value"],[180,31,294,35],[181,10,295,12],[182,8,296,8],[183,8,297,8],[183,15,297,15,"result"],[183,21,297,21],[184,6,298,4],[185,6,299,4],[186,0,300,0],[187,0,301,0],[188,0,302,0],[189,4,299,4],[190,6,299,4,"key"],[190,9,299,4],[191,6,299,4,"value"],[191,11,299,4],[191,13,303,4],[191,22,303,4,"isValid"],[191,29,303,11,"isValid"],[191,30,303,11],[191,32,303,14],[192,8,304,8],[192,15,304,15],[192,19,304,19],[192,20,304,20,"_$$_REQUIRE"],[192,31,304,20],[192,32,304,20,"_dependencyMap"],[192,46,304,20],[192,64,304,30,"OBJECT_INTERNAL"],[192,79,304,45],[192,80,304,46],[192,84,304,50],[192,88,304,54],[192,89,304,55,"_$$_REQUIRE"],[192,100,304,55],[192,101,304,55,"_dependencyMap"],[192,115,304,55],[192,133,304,65,"OBJECT_INTERNAL"],[192,148,304,80],[192,149,304,81],[192,150,304,82,"isValid"],[192,157,304,89],[193,6,305,4],[194,6,306,4],[195,0,307,0],[196,0,308,0],[197,0,309,0],[198,4,306,4],[199,6,306,4,"key"],[199,9,306,4],[200,6,306,4,"value"],[200,11,306,4],[200,13,310,4],[200,22,310,4,"objectSchema"],[200,34,310,16,"objectSchema"],[200,35,310,16],[200,37,310,19],[201,8,311,8],[201,15,311,15],[201,19,311,19],[201,20,311,20,"_$$_REQUIRE"],[201,31,311,20],[201,32,311,20,"_dependencyMap"],[201,46,311,20],[201,64,311,30,"OBJECT_REALM"],[201,76,311,42],[201,77,311,43],[201,78,311,44,"getClassHelpers"],[201,93,311,59],[201,94,311,60],[201,98,311,64],[201,99,311,65],[201,100,311,66,"canonicalObjectSchema"],[201,121,311,87],[202,6,312,4],[203,4,312,5],[204,6,312,5,"key"],[204,9,312,5],[205,6,312,5,"value"],[205,11,312,5],[205,13,313,4],[205,22,313,4,"linkingObjects"],[205,36,313,18,"linkingObjects"],[205,37,313,19,"objectType"],[205,47,313,29],[205,49,313,31,"propertyName"],[205,61,313,43],[205,63,313,45],[206,8,314,8],[206,12,314,14,"realm"],[206,17,314,19],[206,20,314,22],[206,24,314,26],[206,25,314,27,"_$$_REQUIRE"],[206,36,314,27],[206,37,314,27,"_dependencyMap"],[206,51,314,27],[206,69,314,37,"OBJECT_REALM"],[206,81,314,49],[206,82,314,50],[207,8,315,8],[207,12,315,14,"targetClassHelpers"],[207,30,315,32],[207,33,315,35,"realm"],[207,38,315,40],[207,39,315,41,"getClassHelpers"],[207,54,315,56],[207,55,315,57,"objectType"],[207,65,315,67],[207,66,315,68],[208,8,316,8],[208,12,316,30,"targetObjectSchema"],[208,30,316,48],[208,33,316,77,"targetClassHelpers"],[208,51,316,95],[208,52,316,16,"objectSchema"],[208,64,316,28],[209,10,316,50,"properties"],[209,20,316,60],[209,23,316,77,"targetClassHelpers"],[209,41,316,95],[209,42,316,50,"properties"],[209,52,316,60],[210,10,316,62,"wrapObject"],[210,20,316,72],[210,23,316,77,"targetClassHelpers"],[210,41,316,95],[210,42,316,62,"wrapObject"],[210,52,316,72],[211,8,317,8],[211,12,317,14,"targetProperty"],[211,26,317,28],[211,29,317,31,"properties"],[211,39,317,41],[211,40,317,42,"get"],[211,43,317,45],[211,44,317,46,"propertyName"],[211,56,317,58],[211,57,317,59],[212,8,318,8],[212,12,318,14,"originObjectSchema"],[212,30,318,32],[212,33,318,35],[212,37,318,39],[212,38,318,40,"objectSchema"],[212,50,318,52],[212,51,318,53],[212,52,318,54],[213,8,319,8],[213,9,319,9],[213,10,319,10],[213,12,319,12,"_$$_REQUIRE"],[213,23,319,12],[213,24,319,12,"_dependencyMap"],[213,38,319,12],[213,55,319,21,"assert"],[213,61,319,27],[213,63,319,29,"originObjectSchema"],[213,81,319,47],[213,82,319,48,"name"],[213,86,319,52],[213,91,319,57,"targetProperty"],[213,105,319,71],[213,106,319,72,"objectType"],[213,116,319,82],[213,118,319,84],[214,10,319,84],[214,17,319,90],[214,21,319,94,"targetObjectSchema"],[214,39,319,112],[214,40,319,113,"name"],[214,44,319,117],[214,48,319,121,"propertyName"],[214,60,319,133],[214,91,319,164,"originObjectSchema"],[214,109,319,182],[214,110,319,183,"name"],[214,114,319,187],[214,117,319,190],[215,8,319,190],[215,10,319,191],[216,8,320,8],[216,12,320,14,"typeHelpers"],[216,23,320,25],[216,26,320,28],[217,10,321,12],[218,10,322,12,"toBinding"],[218,19,322,21],[218,30,322,12,"toBinding"],[218,39,322,21,"toBinding"],[218,40,322,22,"value"],[218,45,322,27],[218,47,322,29],[219,12,323,16],[219,19,323,23,"value"],[219,24,323,28],[220,10,324,12],[220,11,324,13],[221,10,325,12,"fromBinding"],[221,21,325,23],[221,32,325,12,"fromBinding"],[221,43,325,23,"fromBinding"],[221,44,325,24,"value"],[221,49,325,29],[221,51,325,31],[222,12,326,16,"_$$_REQUIRE"],[222,23,326,16],[222,24,326,16,"_dependencyMap"],[222,38,326,16],[222,55,326,25,"assert"],[222,61,326,31],[222,62,326,32,"instanceOf"],[222,72,326,42],[222,73,326,43,"value"],[222,78,326,48],[222,80,326,50,"_$$_REQUIRE"],[222,91,326,50],[222,92,326,50,"_dependencyMap"],[222,106,326,50],[222,124,326,60,"binding"],[222,131,326,67],[222,132,326,68,"Obj"],[222,135,326,71],[222,136,326,72],[223,12,327,16],[223,19,327,23,"wrapObject"],[223,29,327,33],[223,30,327,34,"value"],[223,35,327,39],[223,36,327,40],[224,10,328,12],[225,8,329,8],[225,9,329,9],[226,8,330,8],[226,12,330,14,"accessor"],[226,20,330,22],[226,23,330,25],[226,24,330,26],[226,25,330,27],[226,27,330,29,"_$$_REQUIRE"],[226,38,330,29],[226,39,330,29,"_dependencyMap"],[226,53,330,29],[226,92,330,39,"createResultsAccessor"],[226,113,330,60],[226,115,330,62],[227,10,330,64,"realm"],[227,15,330,69],[227,17,330,64,"realm"],[227,22,330,69],[228,10,330,71,"typeHelpers"],[228,21,330,82],[228,23,330,71,"typeHelpers"],[228,34,330,82],[229,10,330,84,"itemType"],[229,18,330,92],[229,20,330,94],[229,21,330,95],[229,22,330,96],[230,8,330,130],[230,9,330,131],[230,10,330,132],[231,8,331,8],[232,8,332,8],[232,12,332,14,"tableRef"],[232,20,332,22],[232,23,332,25,"_$$_REQUIRE"],[232,34,332,25],[232,35,332,25,"_dependencyMap"],[232,49,332,25],[232,67,332,35,"binding"],[232,74,332,42],[232,75,332,43,"Helpers"],[232,82,332,50],[232,83,332,51,"getTable"],[232,91,332,59],[232,92,332,60,"realm"],[232,97,332,65],[232,98,332,66,"internal"],[232,106,332,74],[232,108,332,76,"targetObjectSchema"],[232,126,332,94],[232,127,332,95,"tableKey"],[232,135,332,103],[232,136,332,104],[233,8,333,8],[233,12,333,14,"tableView"],[233,21,333,23],[233,24,333,26],[233,28,333,30],[233,29,333,31,"_$$_REQUIRE"],[233,40,333,31],[233,41,333,31,"_dependencyMap"],[233,55,333,31],[233,73,333,41,"OBJECT_INTERNAL"],[233,88,333,56],[233,89,333,57],[233,90,333,58,"getBacklinkView"],[233,105,333,73],[233,106,333,74,"tableRef"],[233,114,333,82],[233,116,333,84,"targetProperty"],[233,130,333,98],[233,131,333,99,"columnKey"],[233,140,333,108],[233,141,333,109],[234,8,334,8],[234,12,334,14,"results"],[234,19,334,21],[234,22,334,24,"_$$_REQUIRE"],[234,33,334,24],[234,34,334,24,"_dependencyMap"],[234,48,334,24],[234,66,334,34,"binding"],[234,73,334,41],[234,74,334,42,"Results"],[234,81,334,49],[234,82,334,50,"fromTableView"],[234,95,334,63],[234,96,334,64,"realm"],[234,101,334,69],[234,102,334,70,"internal"],[234,110,334,78],[234,112,334,80,"tableView"],[234,121,334,89],[234,122,334,90],[235,8,335,8],[235,15,335,15],[235,20,335,19,"_$$_REQUIRE"],[235,31,335,19],[235,32,335,19,"_dependencyMap"],[235,46,335,19],[235,65,335,30,"indirect"],[235,73,335,38],[235,74,335,39,"Results"],[235,81,335,46],[235,83,335,47,"realm"],[235,88,335,52],[235,90,335,54,"results"],[235,97,335,61],[235,99,335,63,"accessor"],[235,107,335,71],[235,109,335,73,"typeHelpers"],[235,120,335,84],[235,121,335,85],[236,6,336,4],[237,6,337,4],[238,0,338,0],[239,0,339,0],[240,0,340,0],[241,4,337,4],[242,6,337,4,"key"],[242,9,337,4],[243,6,337,4,"value"],[243,11,337,4],[243,13,341,4],[243,22,341,4,"linkingObjectsCount"],[243,41,341,23,"linkingObjectsCount"],[243,42,341,23],[243,44,341,26],[244,8,342,8],[244,15,342,15],[244,19,342,19],[244,20,342,20,"_$$_REQUIRE"],[244,31,342,20],[244,32,342,20,"_dependencyMap"],[244,46,342,20],[244,64,342,30,"OBJECT_INTERNAL"],[244,79,342,45],[244,80,342,46],[244,81,342,47,"getBacklinkCount"],[244,97,342,63],[244,98,342,64],[244,99,342,65],[245,6,343,4],[246,6,344,4],[247,0,345,0],[248,0,346,0],[249,0,347,0],[250,4,344,4],[251,6,344,4,"key"],[251,9,344,4],[252,6,344,4,"value"],[252,11,344,4],[252,13,348,4],[252,22,348,4,"_objectId"],[252,31,348,13,"_objectId"],[252,32,348,13],[252,34,348,16],[253,8,349,8],[253,14,349,14],[253,18,349,18,"Error"],[253,23,349,23],[253,24,349,24],[253,46,349,46],[253,47,349,47],[254,6,350,4],[255,6,351,4],[256,0,352,0],[257,0,353,0],[258,4,351,4],[259,6,351,4,"key"],[259,9,351,4],[260,6,351,4,"value"],[260,11,351,4],[260,13,354,4],[260,22,354,4,"_objectKey"],[260,32,354,14,"_objectKey"],[260,33,354,14],[260,35,354,17],[261,8,355,8],[261,15,355,15],[261,19,355,19],[261,20,355,20,"_$$_REQUIRE"],[261,31,355,20],[261,32,355,20,"_dependencyMap"],[261,46,355,20],[261,64,355,30,"OBJECT_INTERNAL"],[261,79,355,45],[261,80,355,46],[261,81,355,47,"key"],[261,84,355,50],[261,85,355,51,"toString"],[261,93,355,59],[261,94,355,60],[261,95,355,61],[262,6,356,4],[263,6,357,4],[264,0,358,0],[265,0,359,0],[266,0,360,0],[267,0,361,0],[268,0,362,0],[269,0,363,0],[270,0,364,0],[271,0,365,0],[272,0,366,0],[273,0,367,0],[274,0,368,0],[275,0,369,0],[276,0,370,0],[277,0,371,0],[278,0,372,0],[279,0,373,0],[280,0,374,0],[281,0,375,0],[282,0,376,0],[283,0,377,0],[284,0,378,0],[285,0,379,0],[286,0,380,0],[287,4,357,4],[288,6,357,4,"key"],[288,9,357,4],[289,6,357,4,"value"],[289,11,357,4],[289,13,381,4],[289,22,381,4,"addListener"],[289,33,381,15,"addListener"],[289,34,381,16,"callback"],[289,42,381,24],[289,44,381,26,"keyPaths"],[289,52,381,34],[289,54,381,36],[290,8,382,8,"_$$_REQUIRE"],[290,19,382,8],[290,20,382,8,"_dependencyMap"],[290,34,382,8],[290,51,382,17,"assert"],[290,57,382,23],[290,58,382,24,"function"],[290,66,382,32],[290,67,382,33,"callback"],[290,75,382,41],[290,76,382,42],[291,8,383,8],[291,12,383,12],[291,13,383,13],[291,17,383,17],[291,18,383,18,"INTERNAL_LISTENERS"],[291,36,383,36],[291,37,383,37],[291,39,383,39],[292,10,384,12],[292,14,384,16],[292,15,384,17,"INTERNAL_LISTENERS"],[292,33,384,35],[292,34,384,36],[292,37,384,39],[292,42,384,43,"_$$_REQUIRE"],[292,53,384,43],[292,54,384,43,"_dependencyMap"],[292,68,384,43],[292,95,384,61,"ObjectListeners"],[292,110,384,76],[292,112,384,77],[292,116,384,81],[292,117,384,82,"_$$_REQUIRE"],[292,128,384,82],[292,129,384,82,"_dependencyMap"],[292,143,384,82],[292,161,384,92,"OBJECT_REALM"],[292,173,384,104],[292,174,384,105],[292,175,384,106,"internal"],[292,183,384,114],[292,185,384,116],[292,189,384,120],[292,190,384,121],[293,8,385,8],[294,8,386,8],[294,12,386,12],[294,13,386,13,"INTERNAL_LISTENERS"],[294,31,386,31],[294,32,386,32],[294,33,386,33,"addListener"],[294,44,386,44],[294,45,386,45,"callback"],[294,53,386,53],[294,55,386,55],[294,62,386,62,"keyPaths"],[294,70,386,70],[294,75,386,75],[294,83,386,83],[294,86,386,86],[294,87,386,87,"keyPaths"],[294,95,386,95],[294,96,386,96],[294,99,386,99,"keyPaths"],[294,107,386,107],[294,108,386,108],[295,6,387,4],[296,6,388,4],[297,0,389,0],[298,0,390,0],[299,0,391,0],[300,0,392,0],[301,4,388,4],[302,6,388,4,"key"],[302,9,388,4],[303,6,388,4,"value"],[303,11,388,4],[303,13,393,4],[303,22,393,4,"removeListener"],[303,36,393,18,"removeListener"],[303,37,393,19,"callback"],[303,45,393,27],[303,47,393,29],[304,8,393,29],[304,12,393,29,"_this$INTERNAL_LISTEN"],[304,33,393,29],[305,8,394,8,"_$$_REQUIRE"],[305,19,394,8],[305,20,394,8,"_dependencyMap"],[305,34,394,8],[305,51,394,17,"assert"],[305,57,394,23],[305,58,394,24,"function"],[305,66,394,32],[305,67,394,33,"callback"],[305,75,394,41],[305,76,394,42],[306,8,395,8],[307,8,396,8],[307,9,396,8,"_this$INTERNAL_LISTEN"],[307,30,396,8],[307,37,396,12],[307,38,396,13,"INTERNAL_LISTENERS"],[307,56,396,31],[307,57,396,32],[307,70,396,8,"_this$INTERNAL_LISTEN"],[307,91,396,8],[307,92,396,34,"removeListener"],[307,106,396,48],[307,107,396,49,"callback"],[307,115,396,57],[307,116,396,58],[308,6,397,4],[309,6,398,4],[310,0,399,0],[311,0,400,0],[312,4,398,4],[313,6,398,4,"key"],[313,9,398,4],[314,6,398,4,"value"],[314,11,398,4],[314,13,401,4],[314,22,401,4,"removeAllListeners"],[314,40,401,22,"removeAllListeners"],[314,41,401,22],[314,43,401,25],[315,8,401,25],[315,12,401,25,"_this$INTERNAL_LISTEN2"],[315,34,401,25],[316,8,402,8],[317,8,403,8],[317,9,403,8,"_this$INTERNAL_LISTEN2"],[317,31,403,8],[317,38,403,12],[317,39,403,13,"INTERNAL_LISTENERS"],[317,57,403,31],[317,58,403,32],[317,71,403,8,"_this$INTERNAL_LISTEN2"],[317,93,403,8],[317,94,403,34,"removeAllListeners"],[317,112,403,52],[317,113,403,53],[317,114,403,54],[318,6,404,4],[319,6,405,4],[320,0,406,0],[321,0,407,0],[322,0,408,0],[323,0,409,0],[324,0,410,0],[325,4,405,4],[326,6,405,4,"key"],[326,9,405,4],[327,6,405,4,"value"],[327,11,405,4],[327,13,411,4],[327,22,411,4,"getPropertyType"],[327,37,411,19,"getPropertyType"],[327,38,411,20,"propertyName"],[327,50,411,32],[327,52,411,34],[328,8,412,8],[328,12,412,8,"_this$symbols_1$OBJEC"],[328,33,412,8],[328,36,412,31],[328,40,412,35],[328,41,412,36,"_$$_REQUIRE"],[328,52,412,36],[328,53,412,36,"_dependencyMap"],[328,67,412,36],[328,85,412,46,"OBJECT_REALM"],[328,97,412,58],[328,98,412,59],[328,99,412,60,"getClassHelpers"],[328,114,412,75],[328,115,412,76],[328,119,412,80],[328,120,412,81],[329,10,412,16,"properties"],[329,20,412,26],[329,23,412,26,"_this$symbols_1$OBJEC"],[329,44,412,26],[329,45,412,16,"properties"],[329,55,412,26],[330,8,413,8],[330,12,413,8,"_properties$get"],[330,27,413,8],[330,30,413,48,"properties"],[330,40,413,58],[330,41,413,59,"get"],[330,44,413,62],[330,45,413,63,"propertyName"],[330,57,413,75],[330,58,413,76],[331,10,413,16,"type"],[331,14,413,20],[331,17,413,20,"_properties$get"],[331,32,413,20],[331,33,413,16,"type"],[331,37,413,20],[332,10,413,22,"objectType"],[332,20,413,32],[332,23,413,32,"_properties$get"],[332,38,413,32],[332,39,413,22,"objectType"],[332,49,413,32],[333,10,413,34,"columnKey"],[333,19,413,43],[333,22,413,43,"_properties$get"],[333,37,413,43],[333,38,413,34,"columnKey"],[333,47,413,43],[334,8,414,8],[334,12,414,14,"typeName"],[334,20,414,22],[334,23,414,25],[334,24,414,26],[334,25,414,27],[334,27,414,29,"_$$_REQUIRE"],[334,38,414,29],[334,39,414,29,"_dependencyMap"],[334,53,414,29],[334,71,414,38,"getTypeName"],[334,82,414,49],[334,84,414,51,"type"],[334,88,414,55],[334,90,414,57,"objectType"],[334,100,414,67],[334,101,414,68],[335,8,415,8],[335,12,415,12,"typeName"],[335,20,415,20],[335,25,415,25],[335,32,415,32],[335,34,415,34],[336,10,416,12],[337,10,417,12],[337,14,417,18,"value"],[337,19,417,23],[337,22,417,26],[337,26,417,30],[337,27,417,31,"_$$_REQUIRE"],[337,38,417,31],[337,39,417,31,"_dependencyMap"],[337,53,417,31],[337,71,417,41,"OBJECT_INTERNAL"],[337,86,417,56],[337,87,417,57],[337,88,417,58,"getAny"],[337,94,417,64],[337,95,417,65,"columnKey"],[337,104,417,74],[337,105,417,75],[338,10,418,12],[338,14,418,16,"value"],[338,19,418,21],[338,24,418,26],[338,28,418,30],[338,30,418,32],[339,12,419,16],[339,19,419,23],[339,25,419,29],[340,10,420,12],[340,11,420,13],[340,17,421,17],[340,21,421,21,"_$$_REQUIRE"],[340,32,421,21],[340,33,421,21,"_dependencyMap"],[340,47,421,21],[340,65,421,31,"binding"],[340,72,421,38],[340,73,421,39,"Int64"],[340,78,421,44],[340,79,421,45,"isInt"],[340,84,421,50],[340,85,421,51,"value"],[340,90,421,56],[340,91,421,57],[340,93,421,59],[341,12,422,16],[341,19,422,23],[341,24,422,28],[342,10,423,12],[342,11,423,13],[342,17,424,17],[342,21,424,21,"value"],[342,26,424,26],[342,38,424,38,"_$$_REQUIRE"],[342,49,424,38],[342,50,424,38,"_dependencyMap"],[342,64,424,38],[342,82,424,48,"binding"],[342,89,424,55],[342,90,424,56,"Float"],[342,95,424,61],[342,97,424,63],[343,12,425,16],[343,19,425,23],[343,26,425,30],[344,10,426,12],[344,11,426,13],[344,17,427,17],[344,21,427,21,"value"],[344,26,427,26],[344,38,427,38,"_$$_REQUIRE"],[344,49,427,38],[344,50,427,38,"_dependencyMap"],[344,64,427,38],[344,82,427,48,"binding"],[344,89,427,55],[344,90,427,56,"Timestamp"],[344,99,427,65],[344,101,427,67],[345,12,428,16],[345,19,428,23],[345,25,428,29],[346,10,429,12],[346,11,429,13],[346,17,430,17],[346,21,430,21,"value"],[346,26,430,26],[346,38,430,38,"_$$_REQUIRE"],[346,49,430,38],[346,50,430,38,"_dependencyMap"],[346,64,430,38],[346,82,430,48,"binding"],[346,89,430,55],[346,90,430,56,"Obj"],[346,93,430,59],[346,95,430,61],[347,12,431,16],[347,16,431,16,"_this$symbols_1$OBJEC2"],[347,38,431,16],[347,41,431,41],[347,45,431,45],[347,46,431,46,"_$$_REQUIRE"],[347,57,431,46],[347,58,431,46,"_dependencyMap"],[347,72,431,46],[347,90,431,56,"OBJECT_REALM"],[347,102,431,68],[347,103,431,69],[347,104,431,70,"getClassHelpers"],[347,119,431,85],[347,120,431,86,"value"],[347,125,431,91],[347,126,431,92,"table"],[347,131,431,97],[347,132,431,98,"key"],[347,135,431,101],[347,136,431,102],[348,14,431,24,"objectSchema"],[348,26,431,36],[348,29,431,36,"_this$symbols_1$OBJEC2"],[348,51,431,36],[348,52,431,24,"objectSchema"],[348,64,431,36],[349,12,432,16],[349,19,432,23],[349,23,432,27,"objectSchema"],[349,35,432,39],[349,36,432,40,"name"],[349,40,432,44],[349,43,432,47],[350,10,433,12],[350,11,433,13],[350,17,434,17],[350,21,434,21,"value"],[350,26,434,26],[350,38,434,38,"_$$_REQUIRE"],[350,49,434,38],[350,50,434,38,"_dependencyMap"],[350,64,434,38],[350,82,434,48,"binding"],[350,89,434,55],[350,90,434,56,"ObjLink"],[350,97,434,63],[350,99,434,65],[351,12,435,16],[351,16,435,16,"_this$symbols_1$OBJEC3"],[351,38,435,16],[351,41,435,41],[351,45,435,45],[351,46,435,46,"_$$_REQUIRE"],[351,57,435,46],[351,58,435,46,"_dependencyMap"],[351,72,435,46],[351,90,435,56,"OBJECT_REALM"],[351,102,435,68],[351,103,435,69],[351,104,435,70,"getClassHelpers"],[351,119,435,85],[351,120,435,86,"value"],[351,125,435,91],[351,126,435,92,"tableKey"],[351,134,435,100],[351,135,435,101],[352,14,435,24,"objectSchema"],[352,27,435,36],[352,30,435,36,"_this$symbols_1$OBJEC3"],[352,52,435,36],[352,53,435,24,"objectSchema"],[352,65,435,36],[353,12,436,16],[353,19,436,23],[353,23,436,27,"objectSchema"],[353,36,436,39],[353,37,436,40,"name"],[353,41,436,44],[353,44,436,47],[354,10,437,12],[354,11,437,13],[354,17,438,17],[354,21,438,21,"value"],[354,26,438,26],[354,38,438,38,"ArrayBuffer"],[354,49,438,49],[354,51,438,51],[355,12,439,16],[355,19,439,23],[355,25,439,29],[356,10,440,12],[356,11,440,13],[356,17,441,17],[356,21,441,21],[356,28,441,28,"value"],[356,33,441,33],[356,38,441,38],[356,46,441,46],[356,48,441,48],[357,12,442,16],[357,19,442,23],[357,27,442,31],[358,10,443,12],[358,11,443,13],[358,17,444,17],[358,21,444,21],[358,28,444,28,"value"],[358,33,444,33],[358,38,444,38],[358,46,444,46],[358,48,444,48],[359,12,445,16],[359,19,445,23],[359,27,445,31],[360,10,446,12],[360,11,446,13],[360,17,447,17],[360,21,447,21],[360,28,447,28,"value"],[360,33,447,33],[360,38,447,38],[360,47,447,47],[360,49,447,49],[361,12,448,16],[361,19,448,23],[361,25,448,29],[362,10,449,12],[362,11,449,13],[362,17,450,17],[362,21,450,21,"value"],[362,26,450,26],[362,38,450,38,"_$$_REQUIRE"],[362,49,450,38],[362,50,450,38,"_dependencyMap"],[362,64,450,38],[362,80,450,45,"BSON"],[362,84,450,49],[362,85,450,50,"ObjectId"],[362,93,450,58],[362,95,450,60],[363,12,451,16],[363,19,451,23],[363,29,451,33],[364,10,452,12],[364,11,452,13],[364,17,453,17],[364,21,453,21,"value"],[364,26,453,26],[364,38,453,38,"_$$_REQUIRE"],[364,49,453,38],[364,50,453,38,"_dependencyMap"],[364,64,453,38],[364,80,453,45,"BSON"],[364,84,453,49],[364,85,453,50,"Decimal128"],[364,95,453,60],[364,97,453,62],[365,12,454,16],[365,19,454,23],[365,31,454,35],[366,10,455,12],[366,11,455,13],[366,17,456,17],[366,21,456,21,"value"],[366,26,456,26],[366,38,456,38,"_$$_REQUIRE"],[366,49,456,38],[366,50,456,38,"_dependencyMap"],[366,64,456,38],[366,80,456,45,"BSON"],[366,84,456,49],[366,85,456,50,"UUID"],[366,89,456,54],[366,91,456,56],[367,12,457,16],[367,19,457,23],[367,25,457,29],[368,10,458,12],[368,11,458,13],[368,17,459,17],[368,21,459,21,"value"],[368,26,459,26],[368,31,459,31,"_$$_REQUIRE"],[368,42,459,31],[368,43,459,31,"_dependencyMap"],[368,57,459,31],[368,75,459,41,"binding"],[368,82,459,48],[368,83,459,49,"ListSentinel"],[368,95,459,61],[368,97,459,63],[369,12,460,16],[369,19,460,23],[369,25,460,29],[370,10,461,12],[370,11,461,13],[370,17,462,17],[370,21,462,21,"value"],[370,26,462,26],[370,31,462,31,"_$$_REQUIRE"],[370,42,462,31],[370,43,462,31,"_dependencyMap"],[370,57,462,31],[370,75,462,41,"binding"],[370,82,462,48],[370,83,462,49,"DictionarySentinel"],[370,101,462,67],[370,103,462,69],[371,12,463,16],[371,19,463,23],[371,31,463,35],[372,10,464,12],[372,11,464,13],[372,17,465,17],[372,21,465,21],[372,28,465,28,"value"],[372,33,465,33],[372,38,465,38],[372,46,465,46],[372,48,465,48],[373,12,466,16],[373,18,466,22],[373,22,466,26,"Error"],[373,27,466,31],[373,28,466,32],[373,50,466,54,"value"],[373,55,466,59],[373,56,466,60,"toString"],[373,64,466,68],[373,65,466,69],[373,66,466,70],[373,68,466,72],[373,69,466,73],[374,10,467,12],[374,11,467,13],[374,17,468,17],[375,12,469,16,"_$$_REQUIRE"],[375,23,469,16],[375,24,469,16,"_dependencyMap"],[375,38,469,16],[375,55,469,25,"assert"],[375,61,469,31],[375,62,469,32,"never"],[375,67,469,37],[375,68,469,38,"value"],[375,73,469,43],[375,75,469,45],[375,82,469,52],[375,83,469,53],[376,10,470,12],[377,8,471,8],[377,9,471,9],[377,15,472,13],[378,10,473,12],[378,17,473,19,"typeName"],[378,25,473,27],[379,8,474,8],[380,6,475,4],[381,4,475,5],[382,6,475,5,"key"],[382,9,475,5],[383,6,475,5,"value"],[383,11,475,5],[384,6,133,4],[385,0,134,0],[386,0,135,0],[388,6,137,4],[389,0,138,0],[390,0,139,0],[392,6,141,4],[393,0,142,0],[394,0,143,0],[396,6,145,4],[397,0,146,0],[398,0,147,0],[399,0,148,0],[400,6,149,4],[400,15,149,11,"create"],[400,21,149,17,"create"],[400,22,149,18,"realm"],[400,27,149,23],[400,29,149,25,"values"],[400,35,149,31],[400,37,149,33,"mode"],[400,41,149,37],[400,43,149,39,"context"],[400,50,149,46],[400,52,149,48],[401,8,150,8,"_$$_REQUIRE"],[401,19,150,8],[401,20,150,8,"_dependencyMap"],[401,34,150,8],[401,51,150,17,"assert"],[401,57,150,23],[401,58,150,24,"inTransaction"],[401,71,150,37],[401,72,150,38,"realm"],[401,77,150,43],[401,78,150,44],[402,8,151,8],[402,12,151,12,"Array"],[402,17,151,17],[402,18,151,18,"isArray"],[402,25,151,25],[402,26,151,26,"values"],[402,32,151,32],[402,33,151,33],[402,35,151,35],[403,10,152,12],[403,14,152,16,"_$$_REQUIRE"],[403,25,152,16],[403,26,152,16,"_dependencyMap"],[403,40,152,16],[403,57,152,24,"flags"],[403,62,152,29],[403,63,152,30,"ALLOW_VALUES_ARRAYS"],[403,82,152,49],[403,84,152,51],[404,12,153,16],[404,16,153,24,"persistedProperties"],[404,36,153,43],[404,39,153,48,"context"],[404,46,153,55],[404,47,153,56,"helpers"],[404,54,153,63],[404,55,153,64,"objectSchema"],[404,67,153,76],[404,68,153,24,"persistedProperties"],[404,87,153,43],[405,12,154,16],[405,19,154,23,"RealmObject"],[405,30,154,34],[405,31,154,35,"create"],[405,37,154,41],[405,38,154,42,"realm"],[405,43,154,47],[405,45,154,49,"Object"],[405,51,154,55],[405,52,154,56,"fromEntries"],[405,63,154,67],[405,64,154,68,"values"],[405,70,154,74],[405,71,154,75,"map"],[405,74,154,78],[405,75,154,79],[405,85,154,80,"value"],[405,90,154,85],[405,92,154,87,"index"],[405,97,154,92],[405,99,154,97],[406,14,155,20],[406,18,155,26,"property"],[406,26,155,34],[406,29,155,37,"persistedProperties"],[406,49,155,56],[406,50,155,57,"index"],[406,55,155,62],[406,56,155,63],[407,14,156,20],[407,18,156,26,"propertyName"],[407,30,156,38],[407,33,156,41,"property"],[407,41,156,49],[407,42,156,50,"publicName"],[407,52,156,60],[407,56,156,64,"property"],[407,64,156,72],[407,65,156,73,"name"],[407,69,156,77],[408,14,157,20],[408,21,157,27],[408,22,157,28,"propertyName"],[408,34,157,40],[408,36,157,42,"value"],[408,41,157,47],[408,42,157,48],[409,12,158,16],[409,13,158,17],[409,14,158,18],[409,15,158,19],[409,17,158,21,"mode"],[409,21,158,25],[409,23,158,27,"context"],[409,30,158,34],[409,31,158,35],[410,10,159,12],[410,11,159,13],[410,17,160,17],[411,12,161,16],[411,18,161,22],[411,22,161,26,"Error"],[411,27,161,31],[411,28,161,32],[411,84,161,88],[411,85,161,89],[412,10,162,12],[413,8,163,8],[414,8,164,8],[414,12,164,8,"_context$helpers"],[414,28,164,8],[414,31,164,108,"context"],[414,38,164,115],[414,39,164,16,"helpers"],[414,46,164,23],[415,10,164,27,"properties"],[415,20,164,37],[415,23,164,37,"_context$helpers"],[415,39,164,37],[415,40,164,27,"properties"],[415,50,164,37],[416,10,164,39,"wrapObject"],[416,20,164,49],[416,23,164,49,"_context$helpers"],[416,39,164,49],[416,40,164,39,"wrapObject"],[416,50,164,49],[417,10,164,67,"persistedProperties"],[417,29,164,86],[417,32,164,86,"_context$helpers"],[417,48,164,86],[417,49,164,51,"objectSchema"],[417,61,164,63],[417,62,164,67,"persistedProperties"],[417,81,164,86],[418,10,164,93,"createObj"],[418,19,164,102],[418,22,164,108,"context"],[418,29,164,115],[418,30,164,93,"createObj"],[418,39,164,102],[419,8,165,8],[420,8,166,8],[420,12,166,8,"_ref"],[420,16,166,8],[420,19,166,31,"createObj"],[420,28,166,40],[420,31,166,43,"createObj"],[420,40,166,52],[420,41,166,53],[420,42,166,54],[420,45,166,57],[420,49,166,61],[420,50,166,62,"createObj"],[420,59,166,71],[420,60,166,72,"realm"],[420,65,166,77],[420,67,166,79,"values"],[420,73,166,85],[420,75,166,87,"mode"],[420,79,166,91],[420,81,166,93,"context"],[420,88,166,100],[420,89,166,101],[421,10,166,101,"_ref2"],[421,15,166,101],[421,18,166,101,"_slicedToArray"],[421,32,166,101],[421,33,166,101,"_ref"],[421,37,166,101],[422,10,166,15,"obj"],[422,13,166,18],[422,16,166,18,"_ref2"],[422,21,166,18],[423,10,166,20,"created"],[423,17,166,27],[423,20,166,27,"_ref2"],[423,25,166,27],[424,8,167,8],[424,12,167,14,"result"],[424,18,167,20],[424,21,167,23,"wrapObject"],[424,31,167,33],[424,32,167,34,"obj"],[424,35,167,37],[424,36,167,38],[425,8,168,8],[425,9,168,9],[425,10,168,10],[425,12,168,12,"_$$_REQUIRE"],[425,23,168,12],[425,24,168,12,"_dependencyMap"],[425,38,168,12],[425,55,168,21,"assert"],[425,61,168,27],[425,63,168,29,"result"],[425,69,168,35],[425,70,168,36],[426,8,169,8],[427,8,170,8],[427,13,170,13],[427,17,170,19,"property"],[427,25,170,27],[427,29,170,31,"persistedProperties"],[427,48,170,50],[427,50,170,52],[428,10,171,12],[428,14,171,18,"propertyName"],[428,26,171,30],[428,29,171,33,"property"],[428,37,171,41],[428,38,171,42,"publicName"],[428,48,171,52],[428,52,171,56,"property"],[428,60,171,64],[428,61,171,65,"name"],[428,65,171,69],[429,10,172,12],[429,14,172,12,"_properties$get2"],[429,30,172,12],[429,33,172,82,"properties"],[429,43,172,92],[429,44,172,93,"get"],[429,47,172,96],[429,48,172,97,"propertyName"],[429,60,172,109],[429,61,172,110],[430,12,172,29,"defaultValue"],[430,24,172,41],[430,27,172,41,"_properties$get2"],[430,43,172,41],[430,44,172,20,"default"],[430,51,172,27],[431,12,172,48,"getProperty"],[431,23,172,59],[431,26,172,59,"_properties$get2"],[431,42,172,59],[431,43,172,43,"get"],[431,46,172,46],[432,12,172,66,"setProperty"],[432,23,172,77],[432,26,172,77,"_properties$get2"],[432,42,172,77],[432,43,172,61,"set"],[432,46,172,64],[433,10,173,12],[433,14,173,16,"property"],[433,22,173,24],[433,23,173,25,"isPrimary"],[433,32,173,34],[433,34,173,36],[434,12,174,16],[434,21,174,25],[434,22,174,26],[435,10,175,12],[436,10,176,12],[436,14,176,18,"propertyValue"],[436,27,176,31],[436,30,176,34,"values"],[436,36,176,40],[436,37,176,41,"propertyName"],[436,49,176,53],[436,50,176,54],[437,10,177,12],[437,14,177,16],[437,21,177,23,"propertyValue"],[437,34,177,36],[437,39,177,41],[437,50,177,52],[437,52,177,54],[438,12,178,16],[438,16,178,20,"mode"],[438,20,178,24],[438,25,178,29,"UpdateMode"],[438,35,178,39],[438,36,178,40,"Modified"],[438,44,178,48],[438,48,178,52,"getProperty"],[438,59,178,63],[438,60,178,64,"obj"],[438,63,178,67],[438,64,178,68],[438,69,178,73,"propertyValue"],[438,82,178,86],[438,84,178,88],[439,14,179,20],[440,14,180,20],[441,14,181,20],[442,14,182,20,"setProperty"],[442,25,182,31],[442,26,182,32,"obj"],[442,29,182,35],[442,31,182,37,"propertyValue"],[442,44,182,50],[442,46,182,52,"created"],[442,53,182,59],[442,54,182,60],[443,12,183,16],[444,10,184,12],[444,11,184,13],[444,17,185,17],[445,12,186,16],[446,12,187,16],[447,12,188,16],[447,16,188,20,"created"],[447,23,188,27],[447,25,188,29],[448,14,189,20],[448,18,189,24],[448,25,189,31,"defaultValue"],[448,37,189,43],[448,42,189,48],[448,53,189,59],[448,55,189,61],[449,16,190,24],[449,20,190,30,"extractedValue"],[449,34,190,44],[449,37,190,47],[449,44,190,54,"defaultValue"],[449,56,190,66],[449,61,190,71],[449,71,190,81],[449,74,190,84,"defaultValue"],[449,86,190,96],[449,87,190,97],[449,88,190,98],[449,91,190,101,"defaultValue"],[449,103,190,113],[450,16,191,24,"setProperty"],[450,27,191,35],[450,28,191,36,"obj"],[450,31,191,39],[450,33,191,41,"extractedValue"],[450,47,191,55],[450,49,191,57,"created"],[450,56,191,64],[450,57,191,65],[451,14,192,20],[451,15,192,21],[451,21,193,25],[451,25,193,29],[451,27,193,31,"property"],[451,35,193,39],[451,36,193,40,"type"],[451,40,193,44],[451,43,193,47],[451,46,193,50],[451,47,193,51],[451,85,193,89],[451,89,194,24],[451,91,194,26,"property"],[451,99,194,34],[451,100,194,35,"type"],[451,104,194,39],[451,107,194,42],[451,109,194,44],[451,110,194,45],[451,146,194,81],[451,148,194,83],[452,16,195,24],[452,22,195,30],[452,26,195,34,"Error"],[452,31,195,39],[452,32,195,40],[452,63,195,71,"propertyName"],[452,75,195,83],[452,78,195,86],[452,79,195,87],[453,14,196,20],[454,12,197,16],[455,10,198,12],[456,8,199,8],[457,8,200,8],[457,15,200,15,"result"],[457,21,200,21],[458,6,201,4],[459,6,202,4],[460,0,203,0],[461,0,204,0],[462,0,205,0],[463,4,202,4],[464,6,202,4,"key"],[464,9,202,4],[465,6,202,4,"value"],[465,11,202,4],[465,13,206,4],[465,22,206,11,"createObj"],[465,31,206,20,"createObj"],[465,32,206,21,"realm"],[465,37,206,26],[465,39,206,28,"values"],[465,45,206,34],[465,47,206,36,"mode"],[465,51,206,40],[465,53,206,42,"context"],[465,60,206,49],[465,62,206,51],[466,8,207,8],[466,12,207,8,"_context$helpers2"],[466,29,207,8],[466,32,207,92,"context"],[466,39,207,99],[466,40,207,16,"helpers"],[466,47,207,23],[467,10,207,23,"_context$helpers2$obj"],[467,31,207,23],[467,34,207,23,"_context$helpers2"],[467,51,207,23],[467,52,207,27,"objectSchema"],[467,64,207,39],[468,10,207,43,"name"],[468,14,207,47],[468,17,207,47,"_context$helpers2$obj"],[468,38,207,47],[468,39,207,43,"name"],[468,43,207,47],[469,10,207,49,"tableKey"],[469,18,207,57],[469,21,207,57,"_context$helpers2$obj"],[469,42,207,57],[469,43,207,49,"tableKey"],[469,51,207,57],[470,10,207,59,"primaryKey"],[470,20,207,69],[470,23,207,69,"_context$helpers2$obj"],[470,44,207,69],[470,45,207,59,"primaryKey"],[470,55,207,69],[471,10,207,73,"properties"],[471,20,207,83],[471,23,207,83,"_context$helpers2"],[471,40,207,83],[471,41,207,73,"properties"],[471,51,207,83],[472,8,208,8],[473,8,209,8],[473,12,209,14,"table"],[473,17,209,19],[473,20,209,22,"_$$_REQUIRE"],[473,31,209,22],[473,32,209,22,"_dependencyMap"],[473,46,209,22],[473,64,209,32,"binding"],[473,71,209,39],[473,72,209,40,"Helpers"],[473,79,209,47],[473,80,209,48,"getTable"],[473,88,209,56],[473,89,209,57,"realm"],[473,94,209,62],[473,95,209,63,"internal"],[473,103,209,71],[473,105,209,73,"tableKey"],[473,113,209,81],[473,114,209,82],[474,8,210,8],[474,12,210,12,"primaryKey"],[474,22,210,22],[474,24,210,24],[475,10,211,12],[475,14,211,18,"primaryKeyHelpers"],[475,31,211,35],[475,34,211,38,"properties"],[475,44,211,48],[475,45,211,49,"get"],[475,48,211,52],[475,49,211,53,"primaryKey"],[475,59,211,63],[475,60,211,64],[476,10,212,12],[476,14,212,16,"primaryKeyValue"],[476,29,212,31],[476,32,212,34,"values"],[476,38,212,40],[476,39,212,41,"primaryKey"],[476,49,212,51],[476,50,212,52],[477,10,213,12],[478,10,214,12],[478,14,214,16,"primaryKeyValue"],[478,29,214,31],[478,34,214,36,"undefined"],[478,43,214,45],[478,45,214,47],[479,12,215,16],[479,16,215,22,"defaultValue"],[479,28,215,34],[479,31,215,37,"primaryKeyHelpers"],[479,48,215,54],[479,49,215,55,"default"],[479,56,215,62],[480,12,216,16,"primaryKeyValue"],[480,27,216,31],[480,30,216,34],[480,37,216,41,"defaultValue"],[480,49,216,53],[480,54,216,58],[480,64,216,68],[480,67,216,71,"defaultValue"],[480,79,216,83],[480,80,216,84],[480,81,216,85],[480,84,216,88,"defaultValue"],[480,96,216,100],[481,10,217,12],[482,10,218,12],[482,14,218,18,"pk"],[482,16,218,20],[482,19,218,23,"primaryKeyHelpers"],[482,36,218,40],[482,37,218,41,"toBinding"],[482,46,218,50],[483,10,219,12],[484,10,220,12],[484,17,220,19,"primaryKeyValue"],[484,32,220,34],[484,37,220,39],[484,48,220,50],[484,52,220,54,"primaryKeyValue"],[484,67,220,69],[484,72,220,74],[484,76,220,78],[484,79,221,18,"primaryKeyValue"],[484,94,221,33],[484,97,222,18,"primaryKeyHelpers"],[484,114,222,35],[484,115,222,36,"default"],[484,122,222,43],[484,123,222,44],[485,10,223,12],[485,14,223,18,"result"],[485,20,223,24],[485,23,223,27,"_$$_REQUIRE"],[485,34,223,27],[485,35,223,27,"_dependencyMap"],[485,49,223,27],[485,67,223,37,"binding"],[485,74,223,44],[485,75,223,45,"Helpers"],[485,82,223,52],[485,83,223,53,"getOrCreateObjectWithPrimaryKey"],[485,114,223,84],[485,115,223,85,"table"],[485,120,223,90],[485,122,223,92,"pk"],[485,124,223,94],[485,125,223,95],[486,10,224,12],[486,14,224,12,"_result"],[486,21,224,12],[486,24,224,12,"_slicedToArray"],[486,38,224,12],[486,39,224,32,"result"],[486,45,224,38],[487,12,224,21,"created"],[487,19,224,28],[487,22,224,28,"_result"],[487,29,224,28],[488,10,225,12],[488,14,225,16,"mode"],[488,18,225,20],[488,23,225,25,"UpdateMode"],[488,33,225,35],[488,34,225,36,"Never"],[488,39,225,41],[488,43,225,45],[488,44,225,46,"created"],[488,51,225,53],[488,53,225,55],[489,12,226,16],[489,18,226,22],[489,22,226,26,"Error"],[489,27,226,31],[489,28,226,32],[489,71,226,75,"name"],[489,75,226,79],[489,116,226,120,"primaryKeyValue"],[489,131,226,135],[489,135,226,139],[489,136,226,140],[490,10,227,12],[491,10,228,12],[491,17,228,19,"result"],[491,23,228,25],[492,8,229,8],[492,9,229,9],[492,15,230,13],[493,10,231,12],[493,17,231,19],[493,18,231,20,"table"],[493,23,231,25],[493,24,231,26,"createObject"],[493,36,231,38],[493,37,231,39],[493,38,231,40],[493,40,231,42],[493,44,231,46],[493,45,231,47],[494,8,232,8],[495,6,233,4],[496,6,234,4],[497,0,235,0],[498,0,236,0],[499,0,237,0],[500,4,234,4],[501,6,234,4,"key"],[501,9,234,4],[502,6,234,4,"value"],[502,11,234,4],[502,13,238,4],[502,22,238,11,"createWrapper"],[502,35,238,24,"createWrapper"],[502,36,238,25,"internal"],[502,44,238,33],[502,46,238,35,"constructor"],[502,57,238,46],[502,59,238,48],[503,8,239,8],[503,12,239,14,"result"],[503,18,239,20],[503,21,239,23,"Object"],[503,27,239,29],[503,28,239,30,"create"],[503,34,239,36],[503,35,239,37,"constructor"],[503,46,239,48],[503,47,239,49,"prototype"],[503,56,239,58],[503,57,239,59],[504,8,240,8,"result"],[504,14,240,14],[504,15,240,15,"_$$_REQUIRE"],[504,26,240,15],[504,27,240,15,"_dependencyMap"],[504,41,240,15],[504,59,240,25,"OBJECT_INTERNAL"],[504,74,240,40],[504,75,240,41],[504,78,240,44,"internal"],[504,86,240,52],[505,8,241,8],[506,8,242,8],[507,8,243,8,"result"],[507,14,243,14],[507,15,243,15,"INTERNAL_LISTENERS"],[507,33,243,33],[507,34,243,34],[507,37,243,37],[507,41,243,41],[508,8,244,8],[509,8,245,8],[509,15,245,15],[509,19,245,19,"Proxy"],[509,24,245,24],[509,25,245,25,"result"],[509,31,245,31],[509,33,245,33,"PROXY_HANDLER"],[509,46,245,46],[509,47,245,47],[510,6,246,4],[511,4,246,5],[512,2,246,5],[513,2,127,4],[514,0,128,0],[515,0,129,0],[516,0,130,0],[517,2,126,6,"RealmObject"],[517,13,126,17],[517,14,132,11,"allowValuesArrays"],[517,31,132,28],[517,34,132,31],[517,39,132,36],[518,2,477,0,"exports"],[518,9,477,7],[518,10,477,8,"RealmObject"],[518,21,477,19],[518,24,477,22,"RealmObject"],[518,35,477,33],[519,2,478,0],[520,2,479,0],[521,2,480,0,"Object"],[521,8,480,6],[521,9,480,7,"defineProperty"],[521,23,480,21],[521,24,480,22,"RealmObject"],[521,35,480,33],[521,37,480,35],[521,43,480,41],[521,45,480,43],[522,4,480,45,"value"],[522,9,480,50],[522,11,480,52],[523,2,480,67],[523,3,480,68],[523,4,480,69],[524,2,481,0],[524,3,481,1],[524,4,481,2],[524,6,481,4,"_$$_REQUIRE"],[524,17,481,4],[524,18,481,4,"_dependencyMap"],[524,32,481,4],[524,51,481,15,"injectIndirect"],[524,65,481,29],[524,67,481,31],[524,75,481,39],[524,77,481,41,"RealmObject"],[524,88,481,52],[524,89,481,53],[525,0,481,54],[525,3]],"functionMap":{"names":["<global>","<anonymous>","PROXY_HANDLER.ownKeys","PROXY_HANDLER.getOwnPropertyDescriptor","RealmObject","RealmObject.create","values.map$argument_0","RealmObject.createObj","RealmObject.createWrapper","RealmObject#constructor","RealmObject#keys","RealmObject#entries","RealmObject#toJSON","RealmObject#isValid","RealmObject#objectSchema","RealmObject#linkingObjects","typeHelpers.toBinding","typeHelpers.fromBinding","RealmObject#linkingObjectsCount","RealmObject#_objectId","RealmObject#_objectKey","RealmObject#addListener","RealmObject#removeListener","RealmObject#removeAllListeners","RealmObject#getPropertyType"],"mappings":"AAA;CCmC;CDoB;IEO;KFE;IGC;KHe;AI6C;ICuB;+ECK;iBDI;KD2C;IGK;KH2B;IIK;KJQ;IKM;KLE;IMK;KNG;IOK;KPE;IQE;KR2B;ISK;KTE;IUK;KVE;IWC;oFdM,0Gc;YCG;aDE;YEC;aFG;KXQ;IcK;KdE;IeK;KfE;IgBI;KhBE;IiByB;KjBM;IkBM;KlBI;ImBI;KnBG;IoBO;KpBgE;CJC"}},"type":"js/module"}]}