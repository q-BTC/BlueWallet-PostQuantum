{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":3,"column":11,"index":109},"end":{"line":3,"column":42,"index":140}},{"start":{"line":2,"column":13,"index":63},"end":{"line":2,"column":46,"index":96}},{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":48,"index":48}},{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":48,"index":48}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n  var STRING = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.String;\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Number;\n  var FUNCTION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Function;\n  var URL = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Url;\n  var HASH = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Hash;\n  var DIMENSION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Dimension;\n  var PERCENTAGE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Percentage;\n  var LEFTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftParenthesis;\n  var LEFTSQUAREBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftSquareBracket;\n  var COMMA = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comma;\n  var DELIM = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Delim;\n  var NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\n  var ASTERISK = 0x002A; // U+002A ASTERISK (*)\n  var PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n  var HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n  var SOLIDUS = 0x002F; // U+002F SOLIDUS (/)\n  var U = 0x0075; // U+0075 LATIN SMALL LETTER U (u)\n\n  module.exports = function defaultRecognizer(context) {\n    switch (this.scanner.tokenType) {\n      case HASH:\n        return this.Hash();\n      case COMMA:\n        context.space = null;\n        context.ignoreWSAfter = true;\n        return this.Operator();\n      case LEFTPARENTHESIS:\n        return this.Parentheses(this.readSequence, context.recognizer);\n      case LEFTSQUAREBRACKET:\n        return this.Brackets(this.readSequence, context.recognizer);\n      case STRING:\n        return this.String();\n      case DIMENSION:\n        return this.Dimension();\n      case PERCENTAGE:\n        return this.Percentage();\n      case NUMBER:\n        return this.Number();\n      case FUNCTION:\n        return _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(') ? this.Url() : this.Function(this.readSequence, context.recognizer);\n      case URL:\n        return this.Url();\n      case IDENT:\n        // check for unicode range, it should start with u+ or U+\n        if (_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar(this.scanner.source, this.scanner.tokenStart, U) && _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\n          return this.UnicodeRange();\n        } else {\n          return this.Identifier();\n        }\n      case DELIM:\n        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n        if (code === SOLIDUS || code === ASTERISK || code === PLUSSIGN || code === HYPHENMINUS) {\n          return this.Operator(); // TODO: replace with Delim\n        }\n\n        // TODO: produce a node with Delim node type\n\n        if (code === NUMBERSIGN) {\n          this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\n        }\n        break;\n    }\n  };\n});","lineCount":66,"map":[[2,2,5,0],[2,6,5,4,"IDENT"],[2,11,5,9],[2,14,5,12,"_$$_REQUIRE"],[2,25,5,12],[2,26,5,12,"_dependencyMap"],[2,40,5,12],[2,64,5,12,"TYPE"],[2,68,5,12],[2,69,5,17,"Ident"],[2,74,5,22],[3,2,6,0],[3,6,6,4,"STRING"],[3,12,6,10],[3,15,6,13,"_$$_REQUIRE"],[3,26,6,13],[3,27,6,13,"_dependencyMap"],[3,41,6,13],[3,65,6,13,"TYPE"],[3,69,6,13],[3,70,6,18,"String"],[3,76,6,24],[4,2,7,0],[4,6,7,4,"NUMBER"],[4,12,7,10],[4,15,7,13,"_$$_REQUIRE"],[4,26,7,13],[4,27,7,13,"_dependencyMap"],[4,41,7,13],[4,65,7,13,"TYPE"],[4,69,7,13],[4,70,7,18,"Number"],[4,76,7,24],[5,2,8,0],[5,6,8,4,"FUNCTION"],[5,14,8,12],[5,17,8,15,"_$$_REQUIRE"],[5,28,8,15],[5,29,8,15,"_dependencyMap"],[5,43,8,15],[5,67,8,15,"TYPE"],[5,71,8,15],[5,72,8,20,"Function"],[5,80,8,28],[6,2,9,0],[6,6,9,4,"URL"],[6,9,9,7],[6,12,9,10,"_$$_REQUIRE"],[6,23,9,10],[6,24,9,10,"_dependencyMap"],[6,38,9,10],[6,62,9,10,"TYPE"],[6,66,9,10],[6,67,9,15,"Url"],[6,70,9,18],[7,2,10,0],[7,6,10,4,"HASH"],[7,10,10,8],[7,13,10,11,"_$$_REQUIRE"],[7,24,10,11],[7,25,10,11,"_dependencyMap"],[7,39,10,11],[7,63,10,11,"TYPE"],[7,67,10,11],[7,68,10,16,"Hash"],[7,72,10,20],[8,2,11,0],[8,6,11,4,"DIMENSION"],[8,15,11,13],[8,18,11,16,"_$$_REQUIRE"],[8,29,11,16],[8,30,11,16,"_dependencyMap"],[8,44,11,16],[8,68,11,16,"TYPE"],[8,72,11,16],[8,73,11,21,"Dimension"],[8,82,11,30],[9,2,12,0],[9,6,12,4,"PERCENTAGE"],[9,16,12,14],[9,19,12,17,"_$$_REQUIRE"],[9,30,12,17],[9,31,12,17,"_dependencyMap"],[9,45,12,17],[9,69,12,17,"TYPE"],[9,73,12,17],[9,74,12,22,"Percentage"],[9,84,12,32],[10,2,13,0],[10,6,13,4,"LEFTPARENTHESIS"],[10,21,13,19],[10,24,13,22,"_$$_REQUIRE"],[10,35,13,22],[10,36,13,22,"_dependencyMap"],[10,50,13,22],[10,74,13,22,"TYPE"],[10,78,13,22],[10,79,13,27,"LeftParenthesis"],[10,94,13,42],[11,2,14,0],[11,6,14,4,"LEFTSQUAREBRACKET"],[11,23,14,21],[11,26,14,24,"_$$_REQUIRE"],[11,37,14,24],[11,38,14,24,"_dependencyMap"],[11,52,14,24],[11,76,14,24,"TYPE"],[11,80,14,24],[11,81,14,29,"LeftSquareBracket"],[11,98,14,46],[12,2,15,0],[12,6,15,4,"COMMA"],[12,11,15,9],[12,14,15,12,"_$$_REQUIRE"],[12,25,15,12],[12,26,15,12,"_dependencyMap"],[12,40,15,12],[12,64,15,12,"TYPE"],[12,68,15,12],[12,69,15,17,"Comma"],[12,74,15,22],[13,2,16,0],[13,6,16,4,"DELIM"],[13,11,16,9],[13,14,16,12,"_$$_REQUIRE"],[13,25,16,12],[13,26,16,12,"_dependencyMap"],[13,40,16,12],[13,64,16,12,"TYPE"],[13,68,16,12],[13,69,16,17,"Delim"],[13,74,16,22],[14,2,17,0],[14,6,17,4,"NUMBERSIGN"],[14,16,17,14],[14,19,17,17],[14,25,17,23],[14,26,17,24],[14,27,17,26],[15,2,18,0],[15,6,18,4,"ASTERISK"],[15,14,18,12],[15,17,18,15],[15,23,18,21],[15,24,18,22],[15,25,18,26],[16,2,19,0],[16,6,19,4,"PLUSSIGN"],[16,14,19,12],[16,17,19,15],[16,23,19,21],[16,24,19,22],[16,25,19,26],[17,2,20,0],[17,6,20,4,"HYPHENMINUS"],[17,17,20,15],[17,20,20,18],[17,26,20,24],[17,27,20,25],[17,28,20,26],[18,2,21,0],[18,6,21,4,"SOLIDUS"],[18,13,21,11],[18,16,21,14],[18,22,21,20],[18,23,21,21],[18,24,21,26],[19,2,22,0],[19,6,22,4,"U"],[19,7,22,5],[19,10,22,8],[19,16,22,14],[19,17,22,15],[19,18,22,26],[21,2,24,0,"module"],[21,8,24,6],[21,9,24,7,"exports"],[21,16,24,14],[21,19,24,17],[21,28,24,26,"defaultRecognizer"],[21,45,24,43,"defaultRecognizer"],[21,46,24,44,"context"],[21,53,24,51],[21,55,24,53],[22,4,25,4],[22,12,25,12],[22,16,25,16],[22,17,25,17,"scanner"],[22,24,25,24],[22,25,25,25,"tokenType"],[22,34,25,34],[23,6,26,8],[23,11,26,13,"HASH"],[23,15,26,17],[24,8,27,12],[24,15,27,19],[24,19,27,23],[24,20,27,24,"Hash"],[24,24,27,28],[24,25,27,29],[24,26,27,30],[25,6,29,8],[25,11,29,13,"COMMA"],[25,16,29,18],[26,8,30,12,"context"],[26,15,30,19],[26,16,30,20,"space"],[26,21,30,25],[26,24,30,28],[26,28,30,32],[27,8,31,12,"context"],[27,15,31,19],[27,16,31,20,"ignoreWSAfter"],[27,29,31,33],[27,32,31,36],[27,36,31,40],[28,8,32,12],[28,15,32,19],[28,19,32,23],[28,20,32,24,"Operator"],[28,28,32,32],[28,29,32,33],[28,30,32,34],[29,6,34,8],[29,11,34,13,"LEFTPARENTHESIS"],[29,26,34,28],[30,8,35,12],[30,15,35,19],[30,19,35,23],[30,20,35,24,"Parentheses"],[30,31,35,35],[30,32,35,36],[30,36,35,40],[30,37,35,41,"readSequence"],[30,49,35,53],[30,51,35,55,"context"],[30,58,35,62],[30,59,35,63,"recognizer"],[30,69,35,73],[30,70,35,74],[31,6,37,8],[31,11,37,13,"LEFTSQUAREBRACKET"],[31,28,37,30],[32,8,38,12],[32,15,38,19],[32,19,38,23],[32,20,38,24,"Brackets"],[32,28,38,32],[32,29,38,33],[32,33,38,37],[32,34,38,38,"readSequence"],[32,46,38,50],[32,48,38,52,"context"],[32,55,38,59],[32,56,38,60,"recognizer"],[32,66,38,70],[32,67,38,71],[33,6,40,8],[33,11,40,13,"STRING"],[33,17,40,19],[34,8,41,12],[34,15,41,19],[34,19,41,23],[34,20,41,24,"String"],[34,26,41,30],[34,27,41,31],[34,28,41,32],[35,6,43,8],[35,11,43,13,"DIMENSION"],[35,20,43,22],[36,8,44,12],[36,15,44,19],[36,19,44,23],[36,20,44,24,"Dimension"],[36,29,44,33],[36,30,44,34],[36,31,44,35],[37,6,46,8],[37,11,46,13,"PERCENTAGE"],[37,21,46,23],[38,8,47,12],[38,15,47,19],[38,19,47,23],[38,20,47,24,"Percentage"],[38,30,47,34],[38,31,47,35],[38,32,47,36],[39,6,49,8],[39,11,49,13,"NUMBER"],[39,17,49,19],[40,8,50,12],[40,15,50,19],[40,19,50,23],[40,20,50,24,"Number"],[40,26,50,30],[40,27,50,31],[40,28,50,32],[41,6,52,8],[41,11,52,13,"FUNCTION"],[41,19,52,21],[42,8,53,12],[42,15,53,19,"_$$_REQUIRE"],[42,26,53,19],[42,27,53,19,"_dependencyMap"],[42,41,53,19],[42,65,53,19,"cmpStr"],[42,71,53,19],[42,72,53,26],[42,76,53,30],[42,77,53,31,"scanner"],[42,84,53,38],[42,85,53,39,"source"],[42,91,53,45],[42,93,53,47],[42,97,53,51],[42,98,53,52,"scanner"],[42,105,53,59],[42,106,53,60,"tokenStart"],[42,116,53,70],[42,118,53,72],[42,122,53,76],[42,123,53,77,"scanner"],[42,130,53,84],[42,131,53,85,"tokenEnd"],[42,139,53,93],[42,141,53,95],[42,147,53,101],[42,148,53,102],[42,151,54,18],[42,155,54,22],[42,156,54,23,"Url"],[42,159,54,26],[42,160,54,27],[42,161,54,28],[42,164,55,18],[42,168,55,22],[42,169,55,23,"Function"],[42,177,55,31],[42,178,55,32],[42,182,55,36],[42,183,55,37,"readSequence"],[42,195,55,49],[42,197,55,51,"context"],[42,204,55,58],[42,205,55,59,"recognizer"],[42,215,55,69],[42,216,55,70],[43,6,57,8],[43,11,57,13,"URL"],[43,14,57,16],[44,8,58,12],[44,15,58,19],[44,19,58,23],[44,20,58,24,"Url"],[44,23,58,27],[44,24,58,28],[44,25,58,29],[45,6,60,8],[45,11,60,13,"IDENT"],[45,16,60,18],[46,8,61,12],[47,8,62,12],[47,12,62,16,"_$$_REQUIRE"],[47,23,62,16],[47,24,62,16,"_dependencyMap"],[47,38,62,16],[47,62,62,16,"cmpChar"],[47,69,62,16],[47,70,62,24],[47,74,62,28],[47,75,62,29,"scanner"],[47,82,62,36],[47,83,62,37,"source"],[47,89,62,43],[47,91,62,45],[47,95,62,49],[47,96,62,50,"scanner"],[47,103,62,57],[47,104,62,58,"tokenStart"],[47,114,62,68],[47,116,62,70,"U"],[47,117,62,71],[47,118,62,72],[47,122,63,16,"_$$_REQUIRE"],[47,133,63,16],[47,134,63,16,"_dependencyMap"],[47,148,63,16],[47,172,63,16,"cmpChar"],[47,179,63,16],[47,180,63,24],[47,184,63,28],[47,185,63,29,"scanner"],[47,192,63,36],[47,193,63,37,"source"],[47,199,63,43],[47,201,63,45],[47,205,63,49],[47,206,63,50,"scanner"],[47,213,63,57],[47,214,63,58,"tokenStart"],[47,224,63,68],[47,227,63,71],[47,228,63,72],[47,230,63,74,"PLUSSIGN"],[47,238,63,82],[47,239,63,83],[47,241,63,85],[48,10,64,16],[48,17,64,23],[48,21,64,27],[48,22,64,28,"UnicodeRange"],[48,34,64,40],[48,35,64,41],[48,36,64,42],[49,8,65,12],[49,9,65,13],[49,15,65,19],[50,10,66,16],[50,17,66,23],[50,21,66,27],[50,22,66,28,"Identifier"],[50,32,66,38],[50,33,66,39],[50,34,66,40],[51,8,67,12],[52,6,69,8],[52,11,69,13,"DELIM"],[52,16,69,18],[53,8,70,12],[53,12,70,16,"code"],[53,16,70,20],[53,19,70,23],[53,23,70,27],[53,24,70,28,"scanner"],[53,31,70,35],[53,32,70,36,"source"],[53,38,70,42],[53,39,70,43,"charCodeAt"],[53,49,70,53],[53,50,70,54],[53,54,70,58],[53,55,70,59,"scanner"],[53,62,70,66],[53,63,70,67,"tokenStart"],[53,73,70,77],[53,74,70,78],[54,8,72,12],[54,12,72,16,"code"],[54,16,72,20],[54,21,72,25,"SOLIDUS"],[54,28,72,32],[54,32,73,16,"code"],[54,36,73,20],[54,41,73,25,"ASTERISK"],[54,49,73,33],[54,53,74,16,"code"],[54,57,74,20],[54,62,74,25,"PLUSSIGN"],[54,70,74,33],[54,74,75,16,"code"],[54,78,75,20],[54,83,75,25,"HYPHENMINUS"],[54,94,75,36],[54,96,75,38],[55,10,76,16],[55,17,76,23],[55,21,76,27],[55,22,76,28,"Operator"],[55,30,76,36],[55,31,76,37],[55,32,76,38],[55,33,76,39],[55,34,76,40],[56,8,77,12],[58,8,79,12],[60,8,81,12],[60,12,81,16,"code"],[60,16,81,20],[60,21,81,25,"NUMBERSIGN"],[60,31,81,35],[60,33,81,37],[61,10,82,16],[61,14,82,20],[61,15,82,21,"error"],[61,20,82,26],[61,21,82,27],[61,52,82,58],[61,54,82,60],[61,58,82,64],[61,59,82,65,"scanner"],[61,66,82,72],[61,67,82,73,"tokenStart"],[61,77,82,83],[61,80,82,86],[61,81,82,87],[61,82,82,88],[62,8,83,12],[63,8,85,12],[64,4,86,4],[65,2,87,0],[65,3,87,1],[66,0,87,2],[66,3]],"functionMap":{"names":["<global>","defaultRecognizer"],"mappings":"AAA;iBCuB;CD+D"}},"type":"js/module"}]}