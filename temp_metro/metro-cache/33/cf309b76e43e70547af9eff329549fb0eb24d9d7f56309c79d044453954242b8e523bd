{"dependencies":[{"name":"bs58check","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":18,"index":448},"end":{"line":15,"column":38,"index":468}},{"start":{"line":15,"column":18,"index":448},"end":{"line":15,"column":38,"index":468}}],"key":"4OUKwPALIMTasKbVl6WljOsf4WA="}},{"name":"bech32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":17,"index":411},"end":{"line":14,"column":34,"index":428}},{"start":{"line":14,"column":17,"index":411},"end":{"line":14,"column":34,"index":428}},{"start":{"line":14,"column":17,"index":411},"end":{"line":14,"column":34,"index":428}},{"start":{"line":14,"column":17,"index":411},"end":{"line":14,"column":34,"index":428}},{"start":{"line":14,"column":17,"index":411},"end":{"line":14,"column":34,"index":428}},{"start":{"line":14,"column":17,"index":411},"end":{"line":14,"column":34,"index":428}}],"key":"ugm55roL35z1WKOi63WbzCYR5fI=","isOptional":false}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":16,"index":374},"end":{"line":13,"column":34,"index":392}},{"start":{"line":13,"column":16,"index":374},"end":{"line":13,"column":34,"index":392}},{"start":{"line":13,"column":16,"index":374},"end":{"line":13,"column":34,"index":392}},{"start":{"line":13,"column":16,"index":374},"end":{"line":13,"column":34,"index":392}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":17,"index":258},"end":{"line":10,"column":38,"index":279}},{"start":{"line":10,"column":17,"index":258},"end":{"line":10,"column":38,"index":279}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}},{"name":"./payments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}},{"start":{"line":11,"column":17,"index":298},"end":{"line":11,"column":38,"index":319}}],"key":"jFG+uchKeOlOOhe0V9dHvbyfUWQ=","isOptional":false}},{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":337},"end":{"line":12,"column":35,"index":356}},{"start":{"line":12,"column":16,"index":337},"end":{"line":12,"column":35,"index":356}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.toOutputScript = exports.fromOutputScript = exports.toBech32 = exports.toBase58Check = exports.fromBech32 = exports.fromBase58Check = void 0;\n  var FUTURE_SEGWIT_MAX_SIZE = 40;\n  var FUTURE_SEGWIT_MIN_SIZE = 2;\n  var FUTURE_SEGWIT_MAX_VERSION = 16;\n  var FUTURE_SEGWIT_MIN_VERSION = 2;\n  var FUTURE_SEGWIT_VERSION_DIFF = 0x50;\n  var FUTURE_SEGWIT_VERSION_WARNING = 'WARNING: Sending to a future segwit version address can lead to loss of funds. ' + 'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' + 'with caution. Wallets should verify the segwit version from the output of fromBech32, ' + 'then decide when it is safe to use which version of segwit.';\n  function _toFutureSegwitAddress(output, network) {\n    var data = output.slice(2);\n    if (data.length < FUTURE_SEGWIT_MIN_SIZE || data.length > FUTURE_SEGWIT_MAX_SIZE) throw new TypeError('Invalid program length for segwit address');\n    var version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n    if (version < FUTURE_SEGWIT_MIN_VERSION || version > FUTURE_SEGWIT_MAX_VERSION) throw new TypeError('Invalid version for segwit address');\n    if (output[1] !== data.length) throw new TypeError('Invalid script for segwit address');\n    console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n    return toBech32(data, version, network.bech32);\n  }\n  /**\n   * decode address with base58 specification,  return address version and address hash if valid\n   */\n  function fromBase58Check(address) {\n    var payload = Buffer.from(_$$_REQUIRE(_dependencyMap[0], \"bs58check\").decode(address));\n    // TODO: 4.0.0, move to \"toOutputScript\"\n    if (payload.length < 21) throw new TypeError(address + ' is too short');\n    if (payload.length > 21) throw new TypeError(address + ' is too long');\n    var version = payload.readUInt8(0);\n    var hash = payload.slice(1);\n    return {\n      version: version,\n      hash: hash\n    };\n  }\n  exports.fromBase58Check = fromBase58Check;\n  /**\n   * decode address with bech32 specification,  return address version„ÄÅaddress prefix and address data if valid\n   */\n  function fromBech32(address) {\n    var result;\n    var version;\n    try {\n      result = _$$_REQUIRE(_dependencyMap[1], \"bech32\").bech32.decode(address);\n    } catch (e) {}\n    if (result) {\n      version = result.words[0];\n      if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n    } else {\n      result = _$$_REQUIRE(_dependencyMap[1], \"bech32\").bech32m.decode(address);\n      version = result.words[0];\n      if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n    }\n    var data = _$$_REQUIRE(_dependencyMap[1], \"bech32\").bech32.fromWords(result.words.slice(1));\n    return {\n      version: version,\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    };\n  }\n  exports.fromBech32 = fromBech32;\n  /**\n   * encode address hash to base58 address with version\n   */\n  function toBase58Check(hash, version) {\n    (0, _$$_REQUIRE(_dependencyMap[2], \"./types\").typeforce)((0, _$$_REQUIRE(_dependencyMap[2], \"./types\").tuple)(_$$_REQUIRE(_dependencyMap[2], \"./types\").Hash160bit, _$$_REQUIRE(_dependencyMap[2], \"./types\").UInt8), arguments);\n    var payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(version, 0);\n    hash.copy(payload, 1);\n    return _$$_REQUIRE(_dependencyMap[0], \"bs58check\").encode(payload);\n  }\n  exports.toBase58Check = toBase58Check;\n  /**\n   * encode address hash to bech32 address with version and prefix\n   */\n  function toBech32(data, version, prefix) {\n    var words = _$$_REQUIRE(_dependencyMap[1], \"bech32\").bech32.toWords(data);\n    words.unshift(version);\n    return version === 0 ? _$$_REQUIRE(_dependencyMap[1], \"bech32\").bech32.encode(prefix, words) : _$$_REQUIRE(_dependencyMap[1], \"bech32\").bech32m.encode(prefix, words);\n  }\n  exports.toBech32 = toBech32;\n  /**\n   * decode address from output script with network, return address if matched\n   */\n  function fromOutputScript(output, network) {\n    // TODO: Network\n    network = network || _$$_REQUIRE(_dependencyMap[3], \"./networks\").bitcoin;\n    try {\n      return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2pkh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2sh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2wpkh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2wsh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2tr({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _toFutureSegwitAddress(output, network);\n    } catch (e) {}\n    throw new Error(_$$_REQUIRE(_dependencyMap[5], \"./script\").toASM(output) + ' has no matching Address');\n  }\n  exports.fromOutputScript = fromOutputScript;\n  /**\n   * encodes address to output script with network, return output script if address matched\n   */\n  function toOutputScript(address, network) {\n    network = network || _$$_REQUIRE(_dependencyMap[3], \"./networks\").bitcoin;\n    var decodeBase58;\n    var decodeBech32;\n    try {\n      decodeBase58 = fromBase58Check(address);\n    } catch (e) {}\n    if (decodeBase58) {\n      if (decodeBase58.version === network.pubKeyHash) return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2pkh({\n        hash: decodeBase58.hash\n      }).output;\n      if (decodeBase58.version === network.scriptHash) return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2sh({\n        hash: decodeBase58.hash\n      }).output;\n    } else {\n      try {\n        decodeBech32 = fromBech32(address);\n      } catch (e) {}\n      if (decodeBech32) {\n        if (decodeBech32.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix');\n        if (decodeBech32.version === 0) {\n          if (decodeBech32.data.length === 20) return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2wpkh({\n            hash: decodeBech32.data\n          }).output;\n          if (decodeBech32.data.length === 32) return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2wsh({\n            hash: decodeBech32.data\n          }).output;\n        } else if (decodeBech32.version === 1) {\n          if (decodeBech32.data.length === 32) return _$$_REQUIRE(_dependencyMap[4], \"./payments\").p2tr({\n            pubkey: decodeBech32.data\n          }).output;\n        } else if (decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION && decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION && decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE && decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE) {\n          console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n          return _$$_REQUIRE(_dependencyMap[5], \"./script\").compile([decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF, decodeBech32.data]);\n        }\n      }\n    }\n    throw new Error(address + ' has no matching Script');\n  }\n  exports.toOutputScript = toOutputScript;\n});","lineCount":169,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"toOutputScript"],[7,24,3,22],[7,27,4,2,"exports"],[7,34,4,9],[7,35,4,10,"fromOutputScript"],[7,51,4,26],[7,54,5,2,"exports"],[7,61,5,9],[7,62,5,10,"toBech32"],[7,70,5,18],[7,73,6,2,"exports"],[7,80,6,9],[7,81,6,10,"toBase58Check"],[7,94,6,23],[7,97,7,2,"exports"],[7,104,7,9],[7,105,7,10,"fromBech32"],[7,115,7,20],[7,118,8,2,"exports"],[7,125,8,9],[7,126,8,10,"fromBase58Check"],[7,141,8,25],[7,144,9,4],[7,149,9,9],[7,150,9,10],[8,2,16,0],[8,6,16,6,"FUTURE_SEGWIT_MAX_SIZE"],[8,28,16,28],[8,31,16,31],[8,33,16,33],[9,2,17,0],[9,6,17,6,"FUTURE_SEGWIT_MIN_SIZE"],[9,28,17,28],[9,31,17,31],[9,32,17,32],[10,2,18,0],[10,6,18,6,"FUTURE_SEGWIT_MAX_VERSION"],[10,31,18,31],[10,34,18,34],[10,36,18,36],[11,2,19,0],[11,6,19,6,"FUTURE_SEGWIT_MIN_VERSION"],[11,31,19,31],[11,34,19,34],[11,35,19,35],[12,2,20,0],[12,6,20,6,"FUTURE_SEGWIT_VERSION_DIFF"],[12,32,20,32],[12,35,20,35],[12,39,20,39],[13,2,21,0],[13,6,21,6,"FUTURE_SEGWIT_VERSION_WARNING"],[13,35,21,35],[13,38,22,2],[13,119,22,83],[13,122,23,2],[13,204,23,84],[13,207,24,2],[13,295,24,90],[13,298,25,2],[13,359,25,63],[14,2,26,0],[14,11,26,9,"_toFutureSegwitAddress"],[14,33,26,31,"_toFutureSegwitAddress"],[14,34,26,32,"output"],[14,40,26,38],[14,42,26,40,"network"],[14,49,26,47],[14,51,26,49],[15,4,27,2],[15,8,27,8,"data"],[15,12,27,12],[15,15,27,15,"output"],[15,21,27,21],[15,22,27,22,"slice"],[15,27,27,27],[15,28,27,28],[15,29,27,29],[15,30,27,30],[16,4,28,2],[16,8,29,4,"data"],[16,12,29,8],[16,13,29,9,"length"],[16,19,29,15],[16,22,29,18,"FUTURE_SEGWIT_MIN_SIZE"],[16,44,29,40],[16,48,30,4,"data"],[16,52,30,8],[16,53,30,9,"length"],[16,59,30,15],[16,62,30,18,"FUTURE_SEGWIT_MAX_SIZE"],[16,84,30,40],[16,86,32,4],[16,92,32,10],[16,96,32,14,"TypeError"],[16,105,32,23],[16,106,32,24],[16,149,32,67],[16,150,32,68],[17,4,33,2],[17,8,33,8,"version"],[17,15,33,15],[17,18,33,18,"output"],[17,24,33,24],[17,25,33,25],[17,26,33,26],[17,27,33,27],[17,30,33,30,"FUTURE_SEGWIT_VERSION_DIFF"],[17,56,33,56],[18,4,34,2],[18,8,35,4,"version"],[18,15,35,11],[18,18,35,14,"FUTURE_SEGWIT_MIN_VERSION"],[18,43,35,39],[18,47,36,4,"version"],[18,54,36,11],[18,57,36,14,"FUTURE_SEGWIT_MAX_VERSION"],[18,82,36,39],[18,84,38,4],[18,90,38,10],[18,94,38,14,"TypeError"],[18,103,38,23],[18,104,38,24],[18,140,38,60],[18,141,38,61],[19,4,39,2],[19,8,39,6,"output"],[19,14,39,12],[19,15,39,13],[19,16,39,14],[19,17,39,15],[19,22,39,20,"data"],[19,26,39,24],[19,27,39,25,"length"],[19,33,39,31],[19,35,40,4],[19,41,40,10],[19,45,40,14,"TypeError"],[19,54,40,23],[19,55,40,24],[19,90,40,59],[19,91,40,60],[20,4,41,2,"console"],[20,11,41,9],[20,12,41,10,"warn"],[20,16,41,14],[20,17,41,15,"FUTURE_SEGWIT_VERSION_WARNING"],[20,46,41,44],[20,47,41,45],[21,4,42,2],[21,11,42,9,"toBech32"],[21,19,42,17],[21,20,42,18,"data"],[21,24,42,22],[21,26,42,24,"version"],[21,33,42,31],[21,35,42,33,"network"],[21,42,42,40],[21,43,42,41,"bech32"],[21,49,42,47],[21,50,42,48],[22,2,43,0],[23,2,44,0],[24,0,45,0],[25,0,46,0],[26,2,47,0],[26,11,47,9,"fromBase58Check"],[26,26,47,24,"fromBase58Check"],[26,27,47,25,"address"],[26,34,47,32],[26,36,47,34],[27,4,48,2],[27,8,48,8,"payload"],[27,15,48,15],[27,18,48,18,"Buffer"],[27,24,48,24],[27,25,48,25,"from"],[27,29,48,29],[27,30,48,30,"_$$_REQUIRE"],[27,41,48,30],[27,42,48,30,"_dependencyMap"],[27,56,48,30],[27,74,48,40,"decode"],[27,80,48,46],[27,81,48,47,"address"],[27,88,48,54],[27,89,48,55],[27,90,48,56],[28,4,49,2],[29,4,50,2],[29,8,50,6,"payload"],[29,15,50,13],[29,16,50,14,"length"],[29,22,50,20],[29,25,50,23],[29,27,50,25],[29,29,50,27],[29,35,50,33],[29,39,50,37,"TypeError"],[29,48,50,46],[29,49,50,47,"address"],[29,56,50,54],[29,59,50,57],[29,74,50,72],[29,75,50,73],[30,4,51,2],[30,8,51,6,"payload"],[30,15,51,13],[30,16,51,14,"length"],[30,22,51,20],[30,25,51,23],[30,27,51,25],[30,29,51,27],[30,35,51,33],[30,39,51,37,"TypeError"],[30,48,51,46],[30,49,51,47,"address"],[30,56,51,54],[30,59,51,57],[30,73,51,71],[30,74,51,72],[31,4,52,2],[31,8,52,8,"version"],[31,15,52,15],[31,18,52,18,"payload"],[31,25,52,25],[31,26,52,26,"readUInt8"],[31,35,52,35],[31,36,52,36],[31,37,52,37],[31,38,52,38],[32,4,53,2],[32,8,53,8,"hash"],[32,12,53,12],[32,15,53,15,"payload"],[32,22,53,22],[32,23,53,23,"slice"],[32,28,53,28],[32,29,53,29],[32,30,53,30],[32,31,53,31],[33,4,54,2],[33,11,54,9],[34,6,54,11,"version"],[34,13,54,18],[34,15,54,11,"version"],[34,22,54,18],[35,6,54,20,"hash"],[35,10,54,24],[35,12,54,20,"hash"],[36,4,54,25],[36,5,54,26],[37,2,55,0],[38,2,56,0,"exports"],[38,9,56,7],[38,10,56,8,"fromBase58Check"],[38,25,56,23],[38,28,56,26,"fromBase58Check"],[38,43,56,41],[39,2,57,0],[40,0,58,0],[41,0,59,0],[42,2,60,0],[42,11,60,9,"fromBech32"],[42,21,60,19,"fromBech32"],[42,22,60,20,"address"],[42,29,60,27],[42,31,60,29],[43,4,61,2],[43,8,61,6,"result"],[43,14,61,12],[44,4,62,2],[44,8,62,6,"version"],[44,15,62,13],[45,4,63,2],[45,8,63,6],[46,6,64,4,"result"],[46,12,64,10],[46,15,64,13,"_$$_REQUIRE"],[46,26,64,13],[46,27,64,13,"_dependencyMap"],[46,41,64,13],[46,56,64,22,"bech32"],[46,62,64,28],[46,63,64,29,"decode"],[46,69,64,35],[46,70,64,36,"address"],[46,77,64,43],[46,78,64,44],[47,4,65,2],[47,5,65,3],[47,6,65,4],[47,13,65,11,"e"],[47,14,65,12],[47,16,65,14],[47,17,65,15],[48,4,66,2],[48,8,66,6,"result"],[48,14,66,12],[48,16,66,14],[49,6,67,4,"version"],[49,13,67,11],[49,16,67,14,"result"],[49,22,67,20],[49,23,67,21,"words"],[49,28,67,26],[49,29,67,27],[49,30,67,28],[49,31,67,29],[50,6,68,4],[50,10,68,8,"version"],[50,17,68,15],[50,22,68,20],[50,23,68,21],[50,25,68,23],[50,31,68,29],[50,35,68,33,"TypeError"],[50,44,68,42],[50,45,68,43,"address"],[50,52,68,50],[50,55,68,53],[50,77,68,75],[50,78,68,76],[51,4,69,2],[51,5,69,3],[51,11,69,9],[52,6,70,4,"result"],[52,12,70,10],[52,15,70,13,"_$$_REQUIRE"],[52,26,70,13],[52,27,70,13,"_dependencyMap"],[52,41,70,13],[52,56,70,22,"bech32m"],[52,63,70,29],[52,64,70,30,"decode"],[52,70,70,36],[52,71,70,37,"address"],[52,78,70,44],[52,79,70,45],[53,6,71,4,"version"],[53,13,71,11],[53,16,71,14,"result"],[53,22,71,20],[53,23,71,21,"words"],[53,28,71,26],[53,29,71,27],[53,30,71,28],[53,31,71,29],[54,6,72,4],[54,10,72,8,"version"],[54,17,72,15],[54,22,72,20],[54,23,72,21],[54,25,72,23],[54,31,72,29],[54,35,72,33,"TypeError"],[54,44,72,42],[54,45,72,43,"address"],[54,52,72,50],[54,55,72,53],[54,77,72,75],[54,78,72,76],[55,4,73,2],[56,4,74,2],[56,8,74,8,"data"],[56,12,74,12],[56,15,74,15,"_$$_REQUIRE"],[56,26,74,15],[56,27,74,15,"_dependencyMap"],[56,41,74,15],[56,56,74,24,"bech32"],[56,62,74,30],[56,63,74,31,"fromWords"],[56,72,74,40],[56,73,74,41,"result"],[56,79,74,47],[56,80,74,48,"words"],[56,85,74,53],[56,86,74,54,"slice"],[56,91,74,59],[56,92,74,60],[56,93,74,61],[56,94,74,62],[56,95,74,63],[57,4,75,2],[57,11,75,9],[58,6,76,4,"version"],[58,13,76,11],[58,15,76,4,"version"],[58,22,76,11],[59,6,77,4,"prefix"],[59,12,77,10],[59,14,77,12,"result"],[59,20,77,18],[59,21,77,19,"prefix"],[59,27,77,25],[60,6,78,4,"data"],[60,10,78,8],[60,12,78,10,"Buffer"],[60,18,78,16],[60,19,78,17,"from"],[60,23,78,21],[60,24,78,22,"data"],[60,28,78,26],[61,4,79,2],[61,5,79,3],[62,2,80,0],[63,2,81,0,"exports"],[63,9,81,7],[63,10,81,8,"fromBech32"],[63,20,81,18],[63,23,81,21,"fromBech32"],[63,33,81,31],[64,2,82,0],[65,0,83,0],[66,0,84,0],[67,2,85,0],[67,11,85,9,"toBase58Check"],[67,24,85,22,"toBase58Check"],[67,25,85,23,"hash"],[67,29,85,27],[67,31,85,29,"version"],[67,38,85,36],[67,40,85,38],[68,4,86,2],[68,5,86,3],[68,6,86,4],[68,8,86,6,"_$$_REQUIRE"],[68,19,86,6],[68,20,86,6,"_dependencyMap"],[68,34,86,6],[68,50,86,14,"typeforce"],[68,59,86,23],[68,61,87,4],[68,62,87,5],[68,63,87,6],[68,65,87,8,"_$$_REQUIRE"],[68,76,87,8],[68,77,87,8,"_dependencyMap"],[68,91,87,8],[68,107,87,16,"tuple"],[68,112,87,21],[68,114,87,23,"_$$_REQUIRE"],[68,125,87,23],[68,126,87,23,"_dependencyMap"],[68,140,87,23],[68,156,87,31,"Hash160bit"],[68,166,87,41],[68,168,87,43,"_$$_REQUIRE"],[68,179,87,43],[68,180,87,43,"_dependencyMap"],[68,194,87,43],[68,210,87,51,"UInt8"],[68,215,87,56],[68,216,87,57],[68,218,88,4,"arguments"],[68,227,89,2],[68,228,89,3],[69,4,90,2],[69,8,90,8,"payload"],[69,15,90,15],[69,18,90,18,"Buffer"],[69,24,90,24],[69,25,90,25,"allocUnsafe"],[69,36,90,36],[69,37,90,37],[69,39,90,39],[69,40,90,40],[70,4,91,2,"payload"],[70,11,91,9],[70,12,91,10,"writeUInt8"],[70,22,91,20],[70,23,91,21,"version"],[70,30,91,28],[70,32,91,30],[70,33,91,31],[70,34,91,32],[71,4,92,2,"hash"],[71,8,92,6],[71,9,92,7,"copy"],[71,13,92,11],[71,14,92,12,"payload"],[71,21,92,19],[71,23,92,21],[71,24,92,22],[71,25,92,23],[72,4,93,2],[72,11,93,9,"_$$_REQUIRE"],[72,22,93,9],[72,23,93,9,"_dependencyMap"],[72,37,93,9],[72,55,93,19,"encode"],[72,61,93,25],[72,62,93,26,"payload"],[72,69,93,33],[72,70,93,34],[73,2,94,0],[74,2,95,0,"exports"],[74,9,95,7],[74,10,95,8,"toBase58Check"],[74,23,95,21],[74,26,95,24,"toBase58Check"],[74,39,95,37],[75,2,96,0],[76,0,97,0],[77,0,98,0],[78,2,99,0],[78,11,99,9,"toBech32"],[78,19,99,17,"toBech32"],[78,20,99,18,"data"],[78,24,99,22],[78,26,99,24,"version"],[78,33,99,31],[78,35,99,33,"prefix"],[78,41,99,39],[78,43,99,41],[79,4,100,2],[79,8,100,8,"words"],[79,13,100,13],[79,16,100,16,"_$$_REQUIRE"],[79,27,100,16],[79,28,100,16,"_dependencyMap"],[79,42,100,16],[79,57,100,25,"bech32"],[79,63,100,31],[79,64,100,32,"toWords"],[79,71,100,39],[79,72,100,40,"data"],[79,76,100,44],[79,77,100,45],[80,4,101,2,"words"],[80,9,101,7],[80,10,101,8,"unshift"],[80,17,101,15],[80,18,101,16,"version"],[80,25,101,23],[80,26,101,24],[81,4,102,2],[81,11,102,9,"version"],[81,18,102,16],[81,23,102,21],[81,24,102,22],[81,27,103,6,"_$$_REQUIRE"],[81,38,103,6],[81,39,103,6,"_dependencyMap"],[81,53,103,6],[81,68,103,15,"bech32"],[81,74,103,21],[81,75,103,22,"encode"],[81,81,103,28],[81,82,103,29,"prefix"],[81,88,103,35],[81,90,103,37,"words"],[81,95,103,42],[81,96,103,43],[81,99,104,6,"_$$_REQUIRE"],[81,110,104,6],[81,111,104,6,"_dependencyMap"],[81,125,104,6],[81,140,104,15,"bech32m"],[81,147,104,22],[81,148,104,23,"encode"],[81,154,104,29],[81,155,104,30,"prefix"],[81,161,104,36],[81,163,104,38,"words"],[81,168,104,43],[81,169,104,44],[82,2,105,0],[83,2,106,0,"exports"],[83,9,106,7],[83,10,106,8,"toBech32"],[83,18,106,16],[83,21,106,19,"toBech32"],[83,29,106,27],[84,2,107,0],[85,0,108,0],[86,0,109,0],[87,2,110,0],[87,11,110,9,"fromOutputScript"],[87,27,110,25,"fromOutputScript"],[87,28,110,26,"output"],[87,34,110,32],[87,36,110,34,"network"],[87,43,110,41],[87,45,110,43],[88,4,111,2],[89,4,112,2,"network"],[89,11,112,9],[89,14,112,12,"network"],[89,21,112,19],[89,25,112,23,"_$$_REQUIRE"],[89,36,112,23],[89,37,112,23,"_dependencyMap"],[89,51,112,23],[89,70,112,32,"bitcoin"],[89,77,112,39],[90,4,113,2],[90,8,113,6],[91,6,114,4],[91,13,114,11,"_$$_REQUIRE"],[91,24,114,11],[91,25,114,11,"_dependencyMap"],[91,39,114,11],[91,58,114,20,"p2pkh"],[91,63,114,25],[91,64,114,26],[92,8,114,28,"output"],[92,14,114,34],[92,16,114,28,"output"],[92,22,114,34],[93,8,114,36,"network"],[93,15,114,43],[93,17,114,36,"network"],[94,6,114,44],[94,7,114,45],[94,8,114,46],[94,9,114,47,"address"],[94,16,114,54],[95,4,115,2],[95,5,115,3],[95,6,115,4],[95,13,115,11,"e"],[95,14,115,12],[95,16,115,14],[95,17,115,15],[96,4,116,2],[96,8,116,6],[97,6,117,4],[97,13,117,11,"_$$_REQUIRE"],[97,24,117,11],[97,25,117,11,"_dependencyMap"],[97,39,117,11],[97,58,117,20,"p2sh"],[97,62,117,24],[97,63,117,25],[98,8,117,27,"output"],[98,14,117,33],[98,16,117,27,"output"],[98,22,117,33],[99,8,117,35,"network"],[99,15,117,42],[99,17,117,35,"network"],[100,6,117,43],[100,7,117,44],[100,8,117,45],[100,9,117,46,"address"],[100,16,117,53],[101,4,118,2],[101,5,118,3],[101,6,118,4],[101,13,118,11,"e"],[101,14,118,12],[101,16,118,14],[101,17,118,15],[102,4,119,2],[102,8,119,6],[103,6,120,4],[103,13,120,11,"_$$_REQUIRE"],[103,24,120,11],[103,25,120,11,"_dependencyMap"],[103,39,120,11],[103,58,120,20,"p2wpkh"],[103,64,120,26],[103,65,120,27],[104,8,120,29,"output"],[104,14,120,35],[104,16,120,29,"output"],[104,22,120,35],[105,8,120,37,"network"],[105,15,120,44],[105,17,120,37,"network"],[106,6,120,45],[106,7,120,46],[106,8,120,47],[106,9,120,48,"address"],[106,16,120,55],[107,4,121,2],[107,5,121,3],[107,6,121,4],[107,13,121,11,"e"],[107,14,121,12],[107,16,121,14],[107,17,121,15],[108,4,122,2],[108,8,122,6],[109,6,123,4],[109,13,123,11,"_$$_REQUIRE"],[109,24,123,11],[109,25,123,11,"_dependencyMap"],[109,39,123,11],[109,58,123,20,"p2wsh"],[109,63,123,25],[109,64,123,26],[110,8,123,28,"output"],[110,14,123,34],[110,16,123,28,"output"],[110,22,123,34],[111,8,123,36,"network"],[111,15,123,43],[111,17,123,36,"network"],[112,6,123,44],[112,7,123,45],[112,8,123,46],[112,9,123,47,"address"],[112,16,123,54],[113,4,124,2],[113,5,124,3],[113,6,124,4],[113,13,124,11,"e"],[113,14,124,12],[113,16,124,14],[113,17,124,15],[114,4,125,2],[114,8,125,6],[115,6,126,4],[115,13,126,11,"_$$_REQUIRE"],[115,24,126,11],[115,25,126,11,"_dependencyMap"],[115,39,126,11],[115,58,126,20,"p2tr"],[115,62,126,24],[115,63,126,25],[116,8,126,27,"output"],[116,14,126,33],[116,16,126,27,"output"],[116,22,126,33],[117,8,126,35,"network"],[117,15,126,42],[117,17,126,35,"network"],[118,6,126,43],[118,7,126,44],[118,8,126,45],[118,9,126,46,"address"],[118,16,126,53],[119,4,127,2],[119,5,127,3],[119,6,127,4],[119,13,127,11,"e"],[119,14,127,12],[119,16,127,14],[119,17,127,15],[120,4,128,2],[120,8,128,6],[121,6,129,4],[121,13,129,11,"_toFutureSegwitAddress"],[121,35,129,33],[121,36,129,34,"output"],[121,42,129,40],[121,44,129,42,"network"],[121,51,129,49],[121,52,129,50],[122,4,130,2],[122,5,130,3],[122,6,130,4],[122,13,130,11,"e"],[122,14,130,12],[122,16,130,14],[122,17,130,15],[123,4,131,2],[123,10,131,8],[123,14,131,12,"Error"],[123,19,131,17],[123,20,131,18,"_$$_REQUIRE"],[123,31,131,18],[123,32,131,18,"_dependencyMap"],[123,46,131,18],[123,63,131,26,"toASM"],[123,68,131,31],[123,69,131,32,"output"],[123,75,131,38],[123,76,131,39],[123,79,131,42],[123,105,131,68],[123,106,131,69],[124,2,132,0],[125,2,133,0,"exports"],[125,9,133,7],[125,10,133,8,"fromOutputScript"],[125,26,133,24],[125,29,133,27,"fromOutputScript"],[125,45,133,43],[126,2,134,0],[127,0,135,0],[128,0,136,0],[129,2,137,0],[129,11,137,9,"toOutputScript"],[129,25,137,23,"toOutputScript"],[129,26,137,24,"address"],[129,33,137,31],[129,35,137,33,"network"],[129,42,137,40],[129,44,137,42],[130,4,138,2,"network"],[130,11,138,9],[130,14,138,12,"network"],[130,21,138,19],[130,25,138,23,"_$$_REQUIRE"],[130,36,138,23],[130,37,138,23,"_dependencyMap"],[130,51,138,23],[130,70,138,32,"bitcoin"],[130,77,138,39],[131,4,139,2],[131,8,139,6,"decodeBase58"],[131,20,139,18],[132,4,140,2],[132,8,140,6,"decodeBech32"],[132,20,140,18],[133,4,141,2],[133,8,141,6],[134,6,142,4,"decodeBase58"],[134,18,142,16],[134,21,142,19,"fromBase58Check"],[134,36,142,34],[134,37,142,35,"address"],[134,44,142,42],[134,45,142,43],[135,4,143,2],[135,5,143,3],[135,6,143,4],[135,13,143,11,"e"],[135,14,143,12],[135,16,143,14],[135,17,143,15],[136,4,144,2],[136,8,144,6,"decodeBase58"],[136,20,144,18],[136,22,144,20],[137,6,145,4],[137,10,145,8,"decodeBase58"],[137,22,145,20],[137,23,145,21,"version"],[137,30,145,28],[137,35,145,33,"network"],[137,42,145,40],[137,43,145,41,"pubKeyHash"],[137,53,145,51],[137,55,146,6],[137,62,146,13,"_$$_REQUIRE"],[137,73,146,13],[137,74,146,13,"_dependencyMap"],[137,88,146,13],[137,107,146,22,"p2pkh"],[137,112,146,27],[137,113,146,28],[138,8,146,30,"hash"],[138,12,146,34],[138,14,146,36,"decodeBase58"],[138,26,146,48],[138,27,146,49,"hash"],[139,6,146,54],[139,7,146,55],[139,8,146,56],[139,9,146,57,"output"],[139,15,146,63],[140,6,147,4],[140,10,147,8,"decodeBase58"],[140,22,147,20],[140,23,147,21,"version"],[140,30,147,28],[140,35,147,33,"network"],[140,42,147,40],[140,43,147,41,"scriptHash"],[140,53,147,51],[140,55,148,6],[140,62,148,13,"_$$_REQUIRE"],[140,73,148,13],[140,74,148,13,"_dependencyMap"],[140,88,148,13],[140,107,148,22,"p2sh"],[140,111,148,26],[140,112,148,27],[141,8,148,29,"hash"],[141,12,148,33],[141,14,148,35,"decodeBase58"],[141,26,148,47],[141,27,148,48,"hash"],[142,6,148,53],[142,7,148,54],[142,8,148,55],[142,9,148,56,"output"],[142,15,148,62],[143,4,149,2],[143,5,149,3],[143,11,149,9],[144,6,150,4],[144,10,150,8],[145,8,151,6,"decodeBech32"],[145,20,151,18],[145,23,151,21,"fromBech32"],[145,33,151,31],[145,34,151,32,"address"],[145,41,151,39],[145,42,151,40],[146,6,152,4],[146,7,152,5],[146,8,152,6],[146,15,152,13,"e"],[146,16,152,14],[146,18,152,16],[146,19,152,17],[147,6,153,4],[147,10,153,8,"decodeBech32"],[147,22,153,20],[147,24,153,22],[148,8,154,6],[148,12,154,10,"decodeBech32"],[148,24,154,22],[148,25,154,23,"prefix"],[148,31,154,29],[148,36,154,34,"network"],[148,43,154,41],[148,44,154,42,"bech32"],[148,50,154,48],[148,52,155,8],[148,58,155,14],[148,62,155,18,"Error"],[148,67,155,23],[148,68,155,24,"address"],[148,75,155,31],[148,78,155,34],[148,102,155,58],[148,103,155,59],[149,8,156,6],[149,12,156,10,"decodeBech32"],[149,24,156,22],[149,25,156,23,"version"],[149,32,156,30],[149,37,156,35],[149,38,156,36],[149,40,156,38],[150,10,157,8],[150,14,157,12,"decodeBech32"],[150,26,157,24],[150,27,157,25,"data"],[150,31,157,29],[150,32,157,30,"length"],[150,38,157,36],[150,43,157,41],[150,45,157,43],[150,47,158,10],[150,54,158,17,"_$$_REQUIRE"],[150,65,158,17],[150,66,158,17,"_dependencyMap"],[150,80,158,17],[150,99,158,26,"p2wpkh"],[150,105,158,32],[150,106,158,33],[151,12,158,35,"hash"],[151,16,158,39],[151,18,158,41,"decodeBech32"],[151,30,158,53],[151,31,158,54,"data"],[152,10,158,59],[152,11,158,60],[152,12,158,61],[152,13,158,62,"output"],[152,19,158,68],[153,10,159,8],[153,14,159,12,"decodeBech32"],[153,26,159,24],[153,27,159,25,"data"],[153,31,159,29],[153,32,159,30,"length"],[153,38,159,36],[153,43,159,41],[153,45,159,43],[153,47,160,10],[153,54,160,17,"_$$_REQUIRE"],[153,65,160,17],[153,66,160,17,"_dependencyMap"],[153,80,160,17],[153,99,160,26,"p2wsh"],[153,104,160,31],[153,105,160,32],[154,12,160,34,"hash"],[154,16,160,38],[154,18,160,40,"decodeBech32"],[154,30,160,52],[154,31,160,53,"data"],[155,10,160,58],[155,11,160,59],[155,12,160,60],[155,13,160,61,"output"],[155,19,160,67],[156,8,161,6],[156,9,161,7],[156,15,161,13],[156,19,161,17,"decodeBech32"],[156,31,161,29],[156,32,161,30,"version"],[156,39,161,37],[156,44,161,42],[156,45,161,43],[156,47,161,45],[157,10,162,8],[157,14,162,12,"decodeBech32"],[157,26,162,24],[157,27,162,25,"data"],[157,31,162,29],[157,32,162,30,"length"],[157,38,162,36],[157,43,162,41],[157,45,162,43],[157,47,163,10],[157,54,163,17,"_$$_REQUIRE"],[157,65,163,17],[157,66,163,17,"_dependencyMap"],[157,80,163,17],[157,99,163,26,"p2tr"],[157,103,163,30],[157,104,163,31],[158,12,163,33,"pubkey"],[158,18,163,39],[158,20,163,41,"decodeBech32"],[158,32,163,53],[158,33,163,54,"data"],[159,10,163,59],[159,11,163,60],[159,12,163,61],[159,13,163,62,"output"],[159,19,163,68],[160,8,164,6],[160,9,164,7],[160,15,164,13],[160,19,165,8,"decodeBech32"],[160,31,165,20],[160,32,165,21,"version"],[160,39,165,28],[160,43,165,32,"FUTURE_SEGWIT_MIN_VERSION"],[160,68,165,57],[160,72,166,8,"decodeBech32"],[160,84,166,20],[160,85,166,21,"version"],[160,92,166,28],[160,96,166,32,"FUTURE_SEGWIT_MAX_VERSION"],[160,121,166,57],[160,125,167,8,"decodeBech32"],[160,137,167,20],[160,138,167,21,"data"],[160,142,167,25],[160,143,167,26,"length"],[160,149,167,32],[160,153,167,36,"FUTURE_SEGWIT_MIN_SIZE"],[160,175,167,58],[160,179,168,8,"decodeBech32"],[160,191,168,20],[160,192,168,21,"data"],[160,196,168,25],[160,197,168,26,"length"],[160,203,168,32],[160,207,168,36,"FUTURE_SEGWIT_MAX_SIZE"],[160,229,168,58],[160,231,169,8],[161,10,170,8,"console"],[161,17,170,15],[161,18,170,16,"warn"],[161,22,170,20],[161,23,170,21,"FUTURE_SEGWIT_VERSION_WARNING"],[161,52,170,50],[161,53,170,51],[162,10,171,8],[162,17,171,15,"_$$_REQUIRE"],[162,28,171,15],[162,29,171,15,"_dependencyMap"],[162,43,171,15],[162,60,171,23,"compile"],[162,67,171,30],[162,68,171,31],[162,69,172,10,"decodeBech32"],[162,81,172,22],[162,82,172,23,"version"],[162,89,172,30],[162,92,172,33,"FUTURE_SEGWIT_VERSION_DIFF"],[162,118,172,59],[162,120,173,10,"decodeBech32"],[162,132,173,22],[162,133,173,23,"data"],[162,137,173,27],[162,138,174,9],[162,139,174,10],[163,8,175,6],[164,6,176,4],[165,4,177,2],[166,4,178,2],[166,10,178,8],[166,14,178,12,"Error"],[166,19,178,17],[166,20,178,18,"address"],[166,27,178,25],[166,30,178,28],[166,55,178,53],[166,56,178,54],[167,2,179,0],[168,2,180,0,"exports"],[168,9,180,7],[168,10,180,8,"toOutputScript"],[168,24,180,22],[168,27,180,25,"toOutputScript"],[168,41,180,39],[169,0,180,40],[169,3]],"functionMap":{"names":["<global>","_toFutureSegwitAddress","fromBase58Check","fromBech32","toBase58Check","toBech32","fromOutputScript","toOutputScript"],"mappings":"AAA;ACyB;CDiB;AEI;CFQ;AGK;CHoB;AIK;CJS;AKK;CLM;AMK;CNsB;AOK;CP0C"}},"type":"js/module"}]}