{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":142},"end":{"line":7,"column":25,"index":154}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":7,"column":13,"index":142},"end":{"line":7,"column":25,"index":154}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":6,"column":13,"index":115},"end":{"line":6,"column":25,"index":127}},{"start":{"line":4,"column":12,"index":54},"end":{"line":4,"column":31,"index":73}},{"start":{"line":7,"column":13,"index":142},"end":{"line":7,"column":25,"index":154}},{"start":{"line":7,"column":13,"index":142},"end":{"line":7,"column":25,"index":154}},{"start":{"line":4,"column":12,"index":54},"end":{"line":4,"column":31,"index":73}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function BaseCurve(type, conf) {\n    this.type = type;\n    this.p = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(conf.p, 16);\n\n    // Use Montgomery, when there is no fast reduction for the prime\n    this.red = conf.prime ? _$$_REQUIRE(_dependencyMap[0], \"bn.js\").red(conf.prime) : _$$_REQUIRE(_dependencyMap[0], \"bn.js\").mont(this.p);\n\n    // Useful for many curves\n    this.zero = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(0).toRed(this.red);\n    this.one = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1).toRed(this.red);\n    this.two = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(2).toRed(this.red);\n\n    // Curve configuration, optional\n    this.n = conf.n && new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(conf.n, 16);\n    this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n    // Temporary arrays\n    this._wnafT1 = new Array(4);\n    this._wnafT2 = new Array(4);\n    this._wnafT3 = new Array(4);\n    this._wnafT4 = new Array(4);\n    this._bitLength = this.n ? this.n.bitLength() : 0;\n\n    // Generalized Greg Maxwell's trick\n    var adjustCount = this.n && this.p.div(this.n);\n    if (!adjustCount || adjustCount.cmpn(100) > 0) {\n      this.redN = null;\n    } else {\n      this._maxwellTrick = true;\n      this.redN = this.n.toRed(this.red);\n    }\n  }\n  module.exports = BaseCurve;\n  BaseCurve.prototype.point = function point() {\n    throw new Error('Not implemented');\n  };\n  BaseCurve.prototype.validate = function validate() {\n    throw new Error('Not implemented');\n  };\n  BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n    _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(p.precomputed);\n    var doubles = p._getDoubles();\n    var naf = _$$_REQUIRE(_dependencyMap[1], \"../utils\").getNAF(k, 1, this._bitLength);\n    var I = (1 << doubles.step + 1) - (doubles.step % 2 === 0 ? 2 : 1);\n    I /= 3;\n\n    // Translate into more windowed form\n    var repr = [];\n    var j;\n    var nafW;\n    for (j = 0; j < naf.length; j += doubles.step) {\n      nafW = 0;\n      for (var l = j + doubles.step - 1; l >= j; l--) nafW = (nafW << 1) + naf[l];\n      repr.push(nafW);\n    }\n    var a = this.jpoint(null, null, null);\n    var b = this.jpoint(null, null, null);\n    for (var i = I; i > 0; i--) {\n      for (j = 0; j < repr.length; j++) {\n        nafW = repr[j];\n        if (nafW === i) b = b.mixedAdd(doubles.points[j]);else if (nafW === -i) b = b.mixedAdd(doubles.points[j].neg());\n      }\n      a = a.add(b);\n    }\n    return a.toP();\n  };\n  BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n    var w = 4;\n\n    // Precompute window\n    var nafPoints = p._getNAFPoints(w);\n    w = nafPoints.wnd;\n    var wnd = nafPoints.points;\n\n    // Get NAF form\n    var naf = _$$_REQUIRE(_dependencyMap[1], \"../utils\").getNAF(k, w, this._bitLength);\n\n    // Add `this`*(N+1) for every w-NAF index\n    var acc = this.jpoint(null, null, null);\n    for (var i = naf.length - 1; i >= 0; i--) {\n      // Count zeroes\n      for (var l = 0; i >= 0 && naf[i] === 0; i--) l++;\n      if (i >= 0) l++;\n      acc = acc.dblp(l);\n      if (i < 0) break;\n      var z = naf[i];\n      _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(z !== 0);\n      if (p.type === 'affine') {\n        // J +- P\n        if (z > 0) acc = acc.mixedAdd(wnd[z - 1 >> 1]);else acc = acc.mixedAdd(wnd[-z - 1 >> 1].neg());\n      } else {\n        // J +- J\n        if (z > 0) acc = acc.add(wnd[z - 1 >> 1]);else acc = acc.add(wnd[-z - 1 >> 1].neg());\n      }\n    }\n    return p.type === 'affine' ? acc.toP() : acc;\n  };\n  BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW, points, coeffs, len, jacobianResult) {\n    var wndWidth = this._wnafT1;\n    var wnd = this._wnafT2;\n    var naf = this._wnafT3;\n\n    // Fill all arrays\n    var max = 0;\n    var i;\n    var j;\n    var p;\n    for (i = 0; i < len; i++) {\n      p = points[i];\n      var nafPoints = p._getNAFPoints(defW);\n      wndWidth[i] = nafPoints.wnd;\n      wnd[i] = nafPoints.points;\n    }\n\n    // Comb small window NAFs\n    for (i = len - 1; i >= 1; i -= 2) {\n      var a = i - 1;\n      var b = i;\n      if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n        naf[a] = _$$_REQUIRE(_dependencyMap[1], \"../utils\").getNAF(coeffs[a], wndWidth[a], this._bitLength);\n        naf[b] = _$$_REQUIRE(_dependencyMap[1], \"../utils\").getNAF(coeffs[b], wndWidth[b], this._bitLength);\n        max = Math.max(naf[a].length, max);\n        max = Math.max(naf[b].length, max);\n        continue;\n      }\n      var comb = [points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */];\n\n      // Try to avoid Projective points, if possible\n      if (points[a].y.cmp(points[b].y) === 0) {\n        comb[1] = points[a].add(points[b]);\n        comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n      } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n        comb[1] = points[a].toJ().mixedAdd(points[b]);\n        comb[2] = points[a].add(points[b].neg());\n      } else {\n        comb[1] = points[a].toJ().mixedAdd(points[b]);\n        comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n      }\n      var index = [-3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3 /* 1 1 */];\n      var jsf = _$$_REQUIRE(_dependencyMap[1], \"../utils\").getJSF(coeffs[a], coeffs[b]);\n      max = Math.max(jsf[0].length, max);\n      naf[a] = new Array(max);\n      naf[b] = new Array(max);\n      for (j = 0; j < max; j++) {\n        var ja = jsf[0][j] | 0;\n        var jb = jsf[1][j] | 0;\n        naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n        naf[b][j] = 0;\n        wnd[a] = comb;\n      }\n    }\n    var acc = this.jpoint(null, null, null);\n    var tmp = this._wnafT4;\n    for (i = max; i >= 0; i--) {\n      var k = 0;\n      while (i >= 0) {\n        var zero = true;\n        for (j = 0; j < len; j++) {\n          tmp[j] = naf[j][i] | 0;\n          if (tmp[j] !== 0) zero = false;\n        }\n        if (!zero) break;\n        k++;\n        i--;\n      }\n      if (i >= 0) k++;\n      acc = acc.dblp(k);\n      if (i < 0) break;\n      for (j = 0; j < len; j++) {\n        var z = tmp[j];\n        p;\n        if (z === 0) continue;else if (z > 0) p = wnd[j][z - 1 >> 1];else if (z < 0) p = wnd[j][-z - 1 >> 1].neg();\n        if (p.type === 'affine') acc = acc.mixedAdd(p);else acc = acc.add(p);\n      }\n    }\n    // Zeroify references\n    for (i = 0; i < len; i++) wnd[i] = null;\n    if (jacobianResult) return acc;else return acc.toP();\n  };\n  function BasePoint(curve, type) {\n    this.curve = curve;\n    this.type = type;\n    this.precomputed = null;\n  }\n  BaseCurve.BasePoint = BasePoint;\n  BasePoint.prototype.eq = function eq(/*other*/\n  ) {\n    throw new Error('Not implemented');\n  };\n  BasePoint.prototype.validate = function validate() {\n    return this.curve.validate(this);\n  };\n  BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n    bytes = _$$_REQUIRE(_dependencyMap[1], \"../utils\").toArray(bytes, enc);\n    var len = this.p.byteLength();\n\n    // uncompressed, hybrid-odd, hybrid-even\n    if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) && bytes.length - 1 === 2 * len) {\n      if (bytes[0] === 0x06) _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(bytes[bytes.length - 1] % 2 === 0);else if (bytes[0] === 0x07) _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(bytes[bytes.length - 1] % 2 === 1);\n      var res = this.point(bytes.slice(1, 1 + len), bytes.slice(1 + len, 1 + 2 * len));\n      return res;\n    } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) && bytes.length - 1 === len) {\n      return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n    }\n    throw new Error('Unknown point format');\n  };\n  BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n    return this.encode(enc, true);\n  };\n  BasePoint.prototype._encode = function _encode(compact) {\n    var len = this.curve.p.byteLength();\n    var x = this.getX().toArray('be', len);\n    if (compact) return [this.getY().isEven() ? 0x02 : 0x03].concat(x);\n    return [0x04].concat(x, this.getY().toArray('be', len));\n  };\n  BasePoint.prototype.encode = function encode(enc, compact) {\n    return _$$_REQUIRE(_dependencyMap[1], \"../utils\").encode(this._encode(compact), enc);\n  };\n  BasePoint.prototype.precompute = function precompute(power) {\n    if (this.precomputed) return this;\n    var precomputed = {\n      doubles: null,\n      naf: null,\n      beta: null\n    };\n    precomputed.naf = this._getNAFPoints(8);\n    precomputed.doubles = this._getDoubles(4, power);\n    precomputed.beta = this._getBeta();\n    this.precomputed = precomputed;\n    return this;\n  };\n  BasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n    if (!this.precomputed) return false;\n    var doubles = this.precomputed.doubles;\n    if (!doubles) return false;\n    return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n  };\n  BasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n    if (this.precomputed && this.precomputed.doubles) return this.precomputed.doubles;\n    var doubles = [this];\n    var acc = this;\n    for (var i = 0; i < power; i += step) {\n      for (var j = 0; j < step; j++) acc = acc.dbl();\n      doubles.push(acc);\n    }\n    return {\n      step: step,\n      points: doubles\n    };\n  };\n  BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n    if (this.precomputed && this.precomputed.naf) return this.precomputed.naf;\n    var res = [this];\n    var max = (1 << wnd) - 1;\n    var dbl = max === 1 ? null : this.dbl();\n    for (var i = 1; i < max; i++) res[i] = res[i - 1].add(dbl);\n    return {\n      wnd: wnd,\n      points: res\n    };\n  };\n  BasePoint.prototype._getBeta = function _getBeta() {\n    return null;\n  };\n  BasePoint.prototype.dblp = function dblp(k) {\n    var r = this;\n    for (var i = 0; i < k; i++) r = r.dbl();\n    return r;\n  };\n});","lineCount":284,"map":[[2,2,1,0],[2,14,1,12],[4,2,9,0],[4,11,9,9,"BaseCurve"],[4,20,9,18,"BaseCurve"],[4,21,9,19,"type"],[4,25,9,23],[4,27,9,25,"conf"],[4,31,9,29],[4,33,9,31],[5,4,10,2],[5,8,10,6],[5,9,10,7,"type"],[5,13,10,11],[5,16,10,14,"type"],[5,20,10,18],[6,4,11,2],[6,8,11,6],[6,9,11,7,"p"],[6,10,11,8],[6,13,11,11],[6,18,11,11,"_$$_REQUIRE"],[6,29,11,11],[6,30,11,11,"_dependencyMap"],[6,44,11,11],[6,59,11,18,"conf"],[6,63,11,22],[6,64,11,23,"p"],[6,65,11,24],[6,67,11,26],[6,69,11,28],[6,70,11,29],[8,4,13,2],[9,4,14,2],[9,8,14,6],[9,9,14,7,"red"],[9,12,14,10],[9,15,14,13,"conf"],[9,19,14,17],[9,20,14,18,"prime"],[9,25,14,23],[9,28,14,26,"_$$_REQUIRE"],[9,39,14,26],[9,40,14,26,"_dependencyMap"],[9,54,14,26],[9,68,14,29,"red"],[9,71,14,32],[9,72,14,33,"conf"],[9,76,14,37],[9,77,14,38,"prime"],[9,82,14,43],[9,83,14,44],[9,86,14,47,"_$$_REQUIRE"],[9,97,14,47],[9,98,14,47,"_dependencyMap"],[9,112,14,47],[9,126,14,50,"mont"],[9,130,14,54],[9,131,14,55],[9,135,14,59],[9,136,14,60,"p"],[9,137,14,61],[9,138,14,62],[11,4,16,2],[12,4,17,2],[12,8,17,6],[12,9,17,7,"zero"],[12,13,17,11],[12,16,17,14],[12,21,17,14,"_$$_REQUIRE"],[12,32,17,14],[12,33,17,14,"_dependencyMap"],[12,47,17,14],[12,62,17,21],[12,63,17,22],[12,64,17,23],[12,65,17,24,"toRed"],[12,70,17,29],[12,71,17,30],[12,75,17,34],[12,76,17,35,"red"],[12,79,17,38],[12,80,17,39],[13,4,18,2],[13,8,18,6],[13,9,18,7,"one"],[13,12,18,10],[13,15,18,13],[13,20,18,13,"_$$_REQUIRE"],[13,31,18,13],[13,32,18,13,"_dependencyMap"],[13,46,18,13],[13,61,18,20],[13,62,18,21],[13,63,18,22],[13,64,18,23,"toRed"],[13,69,18,28],[13,70,18,29],[13,74,18,33],[13,75,18,34,"red"],[13,78,18,37],[13,79,18,38],[14,4,19,2],[14,8,19,6],[14,9,19,7,"two"],[14,12,19,10],[14,15,19,13],[14,20,19,13,"_$$_REQUIRE"],[14,31,19,13],[14,32,19,13,"_dependencyMap"],[14,46,19,13],[14,61,19,20],[14,62,19,21],[14,63,19,22],[14,64,19,23,"toRed"],[14,69,19,28],[14,70,19,29],[14,74,19,33],[14,75,19,34,"red"],[14,78,19,37],[14,79,19,38],[16,4,21,2],[17,4,22,2],[17,8,22,6],[17,9,22,7,"n"],[17,10,22,8],[17,13,22,11,"conf"],[17,17,22,15],[17,18,22,16,"n"],[17,19,22,17],[17,23,22,21],[17,28,22,21,"_$$_REQUIRE"],[17,39,22,21],[17,40,22,21,"_dependencyMap"],[17,54,22,21],[17,69,22,28,"conf"],[17,73,22,32],[17,74,22,33,"n"],[17,75,22,34],[17,77,22,36],[17,79,22,38],[17,80,22,39],[18,4,23,2],[18,8,23,6],[18,9,23,7,"g"],[18,10,23,8],[18,13,23,11,"conf"],[18,17,23,15],[18,18,23,16,"g"],[18,19,23,17],[18,23,23,21],[18,27,23,25],[18,28,23,26,"pointFromJSON"],[18,41,23,39],[18,42,23,40,"conf"],[18,46,23,44],[18,47,23,45,"g"],[18,48,23,46],[18,50,23,48,"conf"],[18,54,23,52],[18,55,23,53,"gRed"],[18,59,23,57],[18,60,23,58],[20,4,25,2],[21,4,26,2],[21,8,26,6],[21,9,26,7,"_wnafT1"],[21,16,26,14],[21,19,26,17],[21,23,26,21,"Array"],[21,28,26,26],[21,29,26,27],[21,30,26,28],[21,31,26,29],[22,4,27,2],[22,8,27,6],[22,9,27,7,"_wnafT2"],[22,16,27,14],[22,19,27,17],[22,23,27,21,"Array"],[22,28,27,26],[22,29,27,27],[22,30,27,28],[22,31,27,29],[23,4,28,2],[23,8,28,6],[23,9,28,7,"_wnafT3"],[23,16,28,14],[23,19,28,17],[23,23,28,21,"Array"],[23,28,28,26],[23,29,28,27],[23,30,28,28],[23,31,28,29],[24,4,29,2],[24,8,29,6],[24,9,29,7,"_wnafT4"],[24,16,29,14],[24,19,29,17],[24,23,29,21,"Array"],[24,28,29,26],[24,29,29,27],[24,30,29,28],[24,31,29,29],[25,4,31,2],[25,8,31,6],[25,9,31,7,"_bitLength"],[25,19,31,17],[25,22,31,20],[25,26,31,24],[25,27,31,25,"n"],[25,28,31,26],[25,31,31,29],[25,35,31,33],[25,36,31,34,"n"],[25,37,31,35],[25,38,31,36,"bitLength"],[25,47,31,45],[25,48,31,46],[25,49,31,47],[25,52,31,50],[25,53,31,51],[27,4,33,2],[28,4,34,2],[28,8,34,6,"adjustCount"],[28,19,34,17],[28,22,34,20],[28,26,34,24],[28,27,34,25,"n"],[28,28,34,26],[28,32,34,30],[28,36,34,34],[28,37,34,35,"p"],[28,38,34,36],[28,39,34,37,"div"],[28,42,34,40],[28,43,34,41],[28,47,34,45],[28,48,34,46,"n"],[28,49,34,47],[28,50,34,48],[29,4,35,2],[29,8,35,6],[29,9,35,7,"adjustCount"],[29,20,35,18],[29,24,35,22,"adjustCount"],[29,35,35,33],[29,36,35,34,"cmpn"],[29,40,35,38],[29,41,35,39],[29,44,35,42],[29,45,35,43],[29,48,35,46],[29,49,35,47],[29,51,35,49],[30,6,36,4],[30,10,36,8],[30,11,36,9,"redN"],[30,15,36,13],[30,18,36,16],[30,22,36,20],[31,4,37,2],[31,5,37,3],[31,11,37,9],[32,6,38,4],[32,10,38,8],[32,11,38,9,"_maxwellTrick"],[32,24,38,22],[32,27,38,25],[32,31,38,29],[33,6,39,4],[33,10,39,8],[33,11,39,9,"redN"],[33,15,39,13],[33,18,39,16],[33,22,39,20],[33,23,39,21,"n"],[33,24,39,22],[33,25,39,23,"toRed"],[33,30,39,28],[33,31,39,29],[33,35,39,33],[33,36,39,34,"red"],[33,39,39,37],[33,40,39,38],[34,4,40,2],[35,2,41,0],[36,2,42,0,"module"],[36,8,42,6],[36,9,42,7,"exports"],[36,16,42,14],[36,19,42,17,"BaseCurve"],[36,28,42,26],[37,2,44,0,"BaseCurve"],[37,11,44,9],[37,12,44,10,"prototype"],[37,21,44,19],[37,22,44,20,"point"],[37,27,44,25],[37,30,44,28],[37,39,44,37,"point"],[37,44,44,42,"point"],[37,45,44,42],[37,47,44,45],[38,4,45,2],[38,10,45,8],[38,14,45,12,"Error"],[38,19,45,17],[38,20,45,18],[38,37,45,35],[38,38,45,36],[39,2,46,0],[39,3,46,1],[40,2,48,0,"BaseCurve"],[40,11,48,9],[40,12,48,10,"prototype"],[40,21,48,19],[40,22,48,20,"validate"],[40,30,48,28],[40,33,48,31],[40,42,48,40,"validate"],[40,50,48,48,"validate"],[40,51,48,48],[40,53,48,51],[41,4,49,2],[41,10,49,8],[41,14,49,12,"Error"],[41,19,49,17],[41,20,49,18],[41,37,49,35],[41,38,49,36],[42,2,50,0],[42,3,50,1],[43,2,52,0,"BaseCurve"],[43,11,52,9],[43,12,52,10,"prototype"],[43,21,52,19],[43,22,52,20,"_fixedNafMul"],[43,34,52,32],[43,37,52,35],[43,46,52,44,"_fixedNafMul"],[43,58,52,56,"_fixedNafMul"],[43,59,52,57,"p"],[43,60,52,58],[43,62,52,60,"k"],[43,63,52,61],[43,65,52,63],[44,4,53,2,"_$$_REQUIRE"],[44,15,53,2],[44,16,53,2,"_dependencyMap"],[44,30,53,2],[44,47,53,2,"assert"],[44,53,53,2],[44,54,53,9,"p"],[44,55,53,10],[44,56,53,11,"precomputed"],[44,67,53,22],[44,68,53,23],[45,4,54,2],[45,8,54,6,"doubles"],[45,15,54,13],[45,18,54,16,"p"],[45,19,54,17],[45,20,54,18,"_getDoubles"],[45,31,54,29],[45,32,54,30],[45,33,54,31],[46,4,56,2],[46,8,56,6,"naf"],[46,11,56,9],[46,14,56,12,"_$$_REQUIRE"],[46,25,56,12],[46,26,56,12,"_dependencyMap"],[46,40,56,12],[46,57,56,12,"getNAF"],[46,63,56,12],[46,64,56,19,"k"],[46,65,56,20],[46,67,56,22],[46,68,56,23],[46,70,56,25],[46,74,56,29],[46,75,56,30,"_bitLength"],[46,85,56,40],[46,86,56,41],[47,4,57,2],[47,8,57,6,"I"],[47,9,57,7],[47,12,57,10],[47,13,57,11],[47,14,57,12],[47,18,57,17,"doubles"],[47,25,57,24],[47,26,57,25,"step"],[47,30,57,29],[47,33,57,32],[47,34,57,34],[47,39,57,39,"doubles"],[47,46,57,46],[47,47,57,47,"step"],[47,51,57,51],[47,54,57,54],[47,55,57,55],[47,60,57,60],[47,61,57,61],[47,64,57,64],[47,65,57,65],[47,68,57,68],[47,69,57,69],[47,70,57,70],[48,4,58,2,"I"],[48,5,58,3],[48,9,58,7],[48,10,58,8],[50,4,60,2],[51,4,61,2],[51,8,61,6,"repr"],[51,12,61,10],[51,15,61,13],[51,17,61,15],[52,4,62,2],[52,8,62,6,"j"],[52,9,62,7],[53,4,63,2],[53,8,63,6,"nafW"],[53,12,63,10],[54,4,64,2],[54,9,64,7,"j"],[54,10,64,8],[54,13,64,11],[54,14,64,12],[54,16,64,14,"j"],[54,17,64,15],[54,20,64,18,"naf"],[54,23,64,21],[54,24,64,22,"length"],[54,30,64,28],[54,32,64,30,"j"],[54,33,64,31],[54,37,64,35,"doubles"],[54,44,64,42],[54,45,64,43,"step"],[54,49,64,47],[54,51,64,49],[55,6,65,4,"nafW"],[55,10,65,8],[55,13,65,11],[55,14,65,12],[56,6,66,4],[56,11,66,9],[56,15,66,13,"l"],[56,16,66,14],[56,19,66,17,"j"],[56,20,66,18],[56,23,66,21,"doubles"],[56,30,66,28],[56,31,66,29,"step"],[56,35,66,33],[56,38,66,36],[56,39,66,37],[56,41,66,39,"l"],[56,42,66,40],[56,46,66,44,"j"],[56,47,66,45],[56,49,66,47,"l"],[56,50,66,48],[56,52,66,50],[56,54,67,6,"nafW"],[56,58,67,10],[56,61,67,13],[56,62,67,14,"nafW"],[56,66,67,18],[56,70,67,22],[56,71,67,23],[56,75,67,27,"naf"],[56,78,67,30],[56,79,67,31,"l"],[56,80,67,32],[56,81,67,33],[57,6,68,4,"repr"],[57,10,68,8],[57,11,68,9,"push"],[57,15,68,13],[57,16,68,14,"nafW"],[57,20,68,18],[57,21,68,19],[58,4,69,2],[59,4,71,2],[59,8,71,6,"a"],[59,9,71,7],[59,12,71,10],[59,16,71,14],[59,17,71,15,"jpoint"],[59,23,71,21],[59,24,71,22],[59,28,71,26],[59,30,71,28],[59,34,71,32],[59,36,71,34],[59,40,71,38],[59,41,71,39],[60,4,72,2],[60,8,72,6,"b"],[60,9,72,7],[60,12,72,10],[60,16,72,14],[60,17,72,15,"jpoint"],[60,23,72,21],[60,24,72,22],[60,28,72,26],[60,30,72,28],[60,34,72,32],[60,36,72,34],[60,40,72,38],[60,41,72,39],[61,4,73,2],[61,9,73,7],[61,13,73,11,"i"],[61,14,73,12],[61,17,73,15,"I"],[61,18,73,16],[61,20,73,18,"i"],[61,21,73,19],[61,24,73,22],[61,25,73,23],[61,27,73,25,"i"],[61,28,73,26],[61,30,73,28],[61,32,73,30],[62,6,74,4],[62,11,74,9,"j"],[62,12,74,10],[62,15,74,13],[62,16,74,14],[62,18,74,16,"j"],[62,19,74,17],[62,22,74,20,"repr"],[62,26,74,24],[62,27,74,25,"length"],[62,33,74,31],[62,35,74,33,"j"],[62,36,74,34],[62,38,74,36],[62,40,74,38],[63,8,75,6,"nafW"],[63,12,75,10],[63,15,75,13,"repr"],[63,19,75,17],[63,20,75,18,"j"],[63,21,75,19],[63,22,75,20],[64,8,76,6],[64,12,76,10,"nafW"],[64,16,76,14],[64,21,76,19,"i"],[64,22,76,20],[64,24,77,8,"b"],[64,25,77,9],[64,28,77,12,"b"],[64,29,77,13],[64,30,77,14,"mixedAdd"],[64,38,77,22],[64,39,77,23,"doubles"],[64,46,77,30],[64,47,77,31,"points"],[64,53,77,37],[64,54,77,38,"j"],[64,55,77,39],[64,56,77,40],[64,57,77,41],[64,58,77,42],[64,63,78,11],[64,67,78,15,"nafW"],[64,71,78,19],[64,76,78,24],[64,77,78,25,"i"],[64,78,78,26],[64,80,79,8,"b"],[64,81,79,9],[64,84,79,12,"b"],[64,85,79,13],[64,86,79,14,"mixedAdd"],[64,94,79,22],[64,95,79,23,"doubles"],[64,102,79,30],[64,103,79,31,"points"],[64,109,79,37],[64,110,79,38,"j"],[64,111,79,39],[64,112,79,40],[64,113,79,41,"neg"],[64,116,79,44],[64,117,79,45],[64,118,79,46],[64,119,79,47],[65,6,80,4],[66,6,81,4,"a"],[66,7,81,5],[66,10,81,8,"a"],[66,11,81,9],[66,12,81,10,"add"],[66,15,81,13],[66,16,81,14,"b"],[66,17,81,15],[66,18,81,16],[67,4,82,2],[68,4,83,2],[68,11,83,9,"a"],[68,12,83,10],[68,13,83,11,"toP"],[68,16,83,14],[68,17,83,15],[68,18,83,16],[69,2,84,0],[69,3,84,1],[70,2,86,0,"BaseCurve"],[70,11,86,9],[70,12,86,10,"prototype"],[70,21,86,19],[70,22,86,20,"_wnafMul"],[70,30,86,28],[70,33,86,31],[70,42,86,40,"_wnafMul"],[70,50,86,48,"_wnafMul"],[70,51,86,49,"p"],[70,52,86,50],[70,54,86,52,"k"],[70,55,86,53],[70,57,86,55],[71,4,87,2],[71,8,87,6,"w"],[71,9,87,7],[71,12,87,10],[71,13,87,11],[73,4,89,2],[74,4,90,2],[74,8,90,6,"nafPoints"],[74,17,90,15],[74,20,90,18,"p"],[74,21,90,19],[74,22,90,20,"_getNAFPoints"],[74,35,90,33],[74,36,90,34,"w"],[74,37,90,35],[74,38,90,36],[75,4,91,2,"w"],[75,5,91,3],[75,8,91,6,"nafPoints"],[75,17,91,15],[75,18,91,16,"wnd"],[75,21,91,19],[76,4,92,2],[76,8,92,6,"wnd"],[76,11,92,9],[76,14,92,12,"nafPoints"],[76,23,92,21],[76,24,92,22,"points"],[76,30,92,28],[78,4,94,2],[79,4,95,2],[79,8,95,6,"naf"],[79,11,95,9],[79,14,95,12,"_$$_REQUIRE"],[79,25,95,12],[79,26,95,12,"_dependencyMap"],[79,40,95,12],[79,57,95,12,"getNAF"],[79,63,95,12],[79,64,95,19,"k"],[79,65,95,20],[79,67,95,22,"w"],[79,68,95,23],[79,70,95,25],[79,74,95,29],[79,75,95,30,"_bitLength"],[79,85,95,40],[79,86,95,41],[81,4,97,2],[82,4,98,2],[82,8,98,6,"acc"],[82,11,98,9],[82,14,98,12],[82,18,98,16],[82,19,98,17,"jpoint"],[82,25,98,23],[82,26,98,24],[82,30,98,28],[82,32,98,30],[82,36,98,34],[82,38,98,36],[82,42,98,40],[82,43,98,41],[83,4,99,2],[83,9,99,7],[83,13,99,11,"i"],[83,14,99,12],[83,17,99,15,"naf"],[83,20,99,18],[83,21,99,19,"length"],[83,27,99,25],[83,30,99,28],[83,31,99,29],[83,33,99,31,"i"],[83,34,99,32],[83,38,99,36],[83,39,99,37],[83,41,99,39,"i"],[83,42,99,40],[83,44,99,42],[83,46,99,44],[84,6,100,4],[85,6,101,4],[85,11,101,9],[85,15,101,13,"l"],[85,16,101,14],[85,19,101,17],[85,20,101,18],[85,22,101,20,"i"],[85,23,101,21],[85,27,101,25],[85,28,101,26],[85,32,101,30,"naf"],[85,35,101,33],[85,36,101,34,"i"],[85,37,101,35],[85,38,101,36],[85,43,101,41],[85,44,101,42],[85,46,101,44,"i"],[85,47,101,45],[85,49,101,47],[85,51,102,6,"l"],[85,52,102,7],[85,54,102,9],[86,6,103,4],[86,10,103,8,"i"],[86,11,103,9],[86,15,103,13],[86,16,103,14],[86,18,104,6,"l"],[86,19,104,7],[86,21,104,9],[87,6,105,4,"acc"],[87,9,105,7],[87,12,105,10,"acc"],[87,15,105,13],[87,16,105,14,"dblp"],[87,20,105,18],[87,21,105,19,"l"],[87,22,105,20],[87,23,105,21],[88,6,107,4],[88,10,107,8,"i"],[88,11,107,9],[88,14,107,12],[88,15,107,13],[88,17,108,6],[89,6,109,4],[89,10,109,8,"z"],[89,11,109,9],[89,14,109,12,"naf"],[89,17,109,15],[89,18,109,16,"i"],[89,19,109,17],[89,20,109,18],[90,6,110,4,"_$$_REQUIRE"],[90,17,110,4],[90,18,110,4,"_dependencyMap"],[90,32,110,4],[90,49,110,4,"assert"],[90,55,110,4],[90,56,110,11,"z"],[90,57,110,12],[90,62,110,17],[90,63,110,18],[90,64,110,19],[91,6,111,4],[91,10,111,8,"p"],[91,11,111,9],[91,12,111,10,"type"],[91,16,111,14],[91,21,111,19],[91,29,111,27],[91,31,111,29],[92,8,112,6],[93,8,113,6],[93,12,113,10,"z"],[93,13,113,11],[93,16,113,14],[93,17,113,15],[93,19,114,8,"acc"],[93,22,114,11],[93,25,114,14,"acc"],[93,28,114,17],[93,29,114,18,"mixedAdd"],[93,37,114,26],[93,38,114,27,"wnd"],[93,41,114,30],[93,42,114,32,"z"],[93,43,114,33],[93,46,114,36],[93,47,114,37],[93,51,114,42],[93,52,114,43],[93,53,114,44],[93,54,114,45],[93,55,114,46],[93,60,116,8,"acc"],[93,63,116,11],[93,66,116,14,"acc"],[93,69,116,17],[93,70,116,18,"mixedAdd"],[93,78,116,26],[93,79,116,27,"wnd"],[93,82,116,30],[93,83,116,32],[93,84,116,33,"z"],[93,85,116,34],[93,88,116,37],[93,89,116,38],[93,93,116,43],[93,94,116,44],[93,95,116,45],[93,96,116,46,"neg"],[93,99,116,49],[93,100,116,50],[93,101,116,51],[93,102,116,52],[94,6,117,4],[94,7,117,5],[94,13,117,11],[95,8,118,6],[96,8,119,6],[96,12,119,10,"z"],[96,13,119,11],[96,16,119,14],[96,17,119,15],[96,19,120,8,"acc"],[96,22,120,11],[96,25,120,14,"acc"],[96,28,120,17],[96,29,120,18,"add"],[96,32,120,21],[96,33,120,22,"wnd"],[96,36,120,25],[96,37,120,27,"z"],[96,38,120,28],[96,41,120,31],[96,42,120,32],[96,46,120,37],[96,47,120,38],[96,48,120,39],[96,49,120,40],[96,50,120,41],[96,55,122,8,"acc"],[96,58,122,11],[96,61,122,14,"acc"],[96,64,122,17],[96,65,122,18,"add"],[96,68,122,21],[96,69,122,22,"wnd"],[96,72,122,25],[96,73,122,27],[96,74,122,28,"z"],[96,75,122,29],[96,78,122,32],[96,79,122,33],[96,83,122,38],[96,84,122,39],[96,85,122,40],[96,86,122,41,"neg"],[96,89,122,44],[96,90,122,45],[96,91,122,46],[96,92,122,47],[97,6,123,4],[98,4,124,2],[99,4,125,2],[99,11,125,9,"p"],[99,12,125,10],[99,13,125,11,"type"],[99,17,125,15],[99,22,125,20],[99,30,125,28],[99,33,125,31,"acc"],[99,36,125,34],[99,37,125,35,"toP"],[99,40,125,38],[99,41,125,39],[99,42,125,40],[99,45,125,43,"acc"],[99,48,125,46],[100,2,126,0],[100,3,126,1],[101,2,128,0,"BaseCurve"],[101,11,128,9],[101,12,128,10,"prototype"],[101,21,128,19],[101,22,128,20,"_wnafMulAdd"],[101,33,128,31],[101,36,128,34],[101,45,128,43,"_wnafMulAdd"],[101,56,128,54,"_wnafMulAdd"],[101,57,128,55,"defW"],[101,61,128,59],[101,63,129,2,"points"],[101,69,129,8],[101,71,130,2,"coeffs"],[101,77,130,8],[101,79,131,2,"len"],[101,82,131,5],[101,84,132,2,"jacobianResult"],[101,98,132,16],[101,100,132,18],[102,4,133,2],[102,8,133,6,"wndWidth"],[102,16,133,14],[102,19,133,17],[102,23,133,21],[102,24,133,22,"_wnafT1"],[102,31,133,29],[103,4,134,2],[103,8,134,6,"wnd"],[103,11,134,9],[103,14,134,12],[103,18,134,16],[103,19,134,17,"_wnafT2"],[103,26,134,24],[104,4,135,2],[104,8,135,6,"naf"],[104,11,135,9],[104,14,135,12],[104,18,135,16],[104,19,135,17,"_wnafT3"],[104,26,135,24],[106,4,137,2],[107,4,138,2],[107,8,138,6,"max"],[107,11,138,9],[107,14,138,12],[107,15,138,13],[108,4,139,2],[108,8,139,6,"i"],[108,9,139,7],[109,4,140,2],[109,8,140,6,"j"],[109,9,140,7],[110,4,141,2],[110,8,141,6,"p"],[110,9,141,7],[111,4,142,2],[111,9,142,7,"i"],[111,10,142,8],[111,13,142,11],[111,14,142,12],[111,16,142,14,"i"],[111,17,142,15],[111,20,142,18,"len"],[111,23,142,21],[111,25,142,23,"i"],[111,26,142,24],[111,28,142,26],[111,30,142,28],[112,6,143,4,"p"],[112,7,143,5],[112,10,143,8,"points"],[112,16,143,14],[112,17,143,15,"i"],[112,18,143,16],[112,19,143,17],[113,6,144,4],[113,10,144,8,"nafPoints"],[113,19,144,17],[113,22,144,20,"p"],[113,23,144,21],[113,24,144,22,"_getNAFPoints"],[113,37,144,35],[113,38,144,36,"defW"],[113,42,144,40],[113,43,144,41],[114,6,145,4,"wndWidth"],[114,14,145,12],[114,15,145,13,"i"],[114,16,145,14],[114,17,145,15],[114,20,145,18,"nafPoints"],[114,29,145,27],[114,30,145,28,"wnd"],[114,33,145,31],[115,6,146,4,"wnd"],[115,9,146,7],[115,10,146,8,"i"],[115,11,146,9],[115,12,146,10],[115,15,146,13,"nafPoints"],[115,24,146,22],[115,25,146,23,"points"],[115,31,146,29],[116,4,147,2],[118,4,149,2],[119,4,150,2],[119,9,150,7,"i"],[119,10,150,8],[119,13,150,11,"len"],[119,16,150,14],[119,19,150,17],[119,20,150,18],[119,22,150,20,"i"],[119,23,150,21],[119,27,150,25],[119,28,150,26],[119,30,150,28,"i"],[119,31,150,29],[119,35,150,33],[119,36,150,34],[119,38,150,36],[120,6,151,4],[120,10,151,8,"a"],[120,11,151,9],[120,14,151,12,"i"],[120,15,151,13],[120,18,151,16],[120,19,151,17],[121,6,152,4],[121,10,152,8,"b"],[121,11,152,9],[121,14,152,12,"i"],[121,15,152,13],[122,6,153,4],[122,10,153,8,"wndWidth"],[122,18,153,16],[122,19,153,17,"a"],[122,20,153,18],[122,21,153,19],[122,26,153,24],[122,27,153,25],[122,31,153,29,"wndWidth"],[122,39,153,37],[122,40,153,38,"b"],[122,41,153,39],[122,42,153,40],[122,47,153,45],[122,48,153,46],[122,50,153,48],[123,8,154,6,"naf"],[123,11,154,9],[123,12,154,10,"a"],[123,13,154,11],[123,14,154,12],[123,17,154,15,"_$$_REQUIRE"],[123,28,154,15],[123,29,154,15,"_dependencyMap"],[123,43,154,15],[123,60,154,15,"getNAF"],[123,66,154,15],[123,67,154,22,"coeffs"],[123,73,154,28],[123,74,154,29,"a"],[123,75,154,30],[123,76,154,31],[123,78,154,33,"wndWidth"],[123,86,154,41],[123,87,154,42,"a"],[123,88,154,43],[123,89,154,44],[123,91,154,46],[123,95,154,50],[123,96,154,51,"_bitLength"],[123,106,154,61],[123,107,154,62],[124,8,155,6,"naf"],[124,11,155,9],[124,12,155,10,"b"],[124,13,155,11],[124,14,155,12],[124,17,155,15,"_$$_REQUIRE"],[124,28,155,15],[124,29,155,15,"_dependencyMap"],[124,43,155,15],[124,60,155,15,"getNAF"],[124,66,155,15],[124,67,155,22,"coeffs"],[124,73,155,28],[124,74,155,29,"b"],[124,75,155,30],[124,76,155,31],[124,78,155,33,"wndWidth"],[124,86,155,41],[124,87,155,42,"b"],[124,88,155,43],[124,89,155,44],[124,91,155,46],[124,95,155,50],[124,96,155,51,"_bitLength"],[124,106,155,61],[124,107,155,62],[125,8,156,6,"max"],[125,11,156,9],[125,14,156,12,"Math"],[125,18,156,16],[125,19,156,17,"max"],[125,22,156,20],[125,23,156,21,"naf"],[125,26,156,24],[125,27,156,25,"a"],[125,28,156,26],[125,29,156,27],[125,30,156,28,"length"],[125,36,156,34],[125,38,156,36,"max"],[125,41,156,39],[125,42,156,40],[126,8,157,6,"max"],[126,11,157,9],[126,14,157,12,"Math"],[126,18,157,16],[126,19,157,17,"max"],[126,22,157,20],[126,23,157,21,"naf"],[126,26,157,24],[126,27,157,25,"b"],[126,28,157,26],[126,29,157,27],[126,30,157,28,"length"],[126,36,157,34],[126,38,157,36,"max"],[126,41,157,39],[126,42,157,40],[127,8,158,6],[128,6,159,4],[129,6,161,4],[129,10,161,8,"comb"],[129,14,161,12],[129,17,161,15],[129,18,162,6,"points"],[129,24,162,12],[129,25,162,13,"a"],[129,26,162,14],[129,27,162,15],[129,29,162,17],[130,6,163,6],[130,10,163,10],[130,12,163,12],[131,6,164,6],[131,10,164,10],[131,12,164,12],[132,6,165,6,"points"],[132,12,165,12],[132,13,165,13,"b"],[132,14,165,14],[132,15,165,15],[132,16,165,17],[132,24,166,5],[134,6,168,4],[135,6,169,4],[135,10,169,8,"points"],[135,16,169,14],[135,17,169,15,"a"],[135,18,169,16],[135,19,169,17],[135,20,169,18,"y"],[135,21,169,19],[135,22,169,20,"cmp"],[135,25,169,23],[135,26,169,24,"points"],[135,32,169,30],[135,33,169,31,"b"],[135,34,169,32],[135,35,169,33],[135,36,169,34,"y"],[135,37,169,35],[135,38,169,36],[135,43,169,41],[135,44,169,42],[135,46,169,44],[136,8,170,6,"comb"],[136,12,170,10],[136,13,170,11],[136,14,170,12],[136,15,170,13],[136,18,170,16,"points"],[136,24,170,22],[136,25,170,23,"a"],[136,26,170,24],[136,27,170,25],[136,28,170,26,"add"],[136,31,170,29],[136,32,170,30,"points"],[136,38,170,36],[136,39,170,37,"b"],[136,40,170,38],[136,41,170,39],[136,42,170,40],[137,8,171,6,"comb"],[137,12,171,10],[137,13,171,11],[137,14,171,12],[137,15,171,13],[137,18,171,16,"points"],[137,24,171,22],[137,25,171,23,"a"],[137,26,171,24],[137,27,171,25],[137,28,171,26,"toJ"],[137,31,171,29],[137,32,171,30],[137,33,171,31],[137,34,171,32,"mixedAdd"],[137,42,171,40],[137,43,171,41,"points"],[137,49,171,47],[137,50,171,48,"b"],[137,51,171,49],[137,52,171,50],[137,53,171,51,"neg"],[137,56,171,54],[137,57,171,55],[137,58,171,56],[137,59,171,57],[138,6,172,4],[138,7,172,5],[138,13,172,11],[138,17,172,15,"points"],[138,23,172,21],[138,24,172,22,"a"],[138,25,172,23],[138,26,172,24],[138,27,172,25,"y"],[138,28,172,26],[138,29,172,27,"cmp"],[138,32,172,30],[138,33,172,31,"points"],[138,39,172,37],[138,40,172,38,"b"],[138,41,172,39],[138,42,172,40],[138,43,172,41,"y"],[138,44,172,42],[138,45,172,43,"redNeg"],[138,51,172,49],[138,52,172,50],[138,53,172,51],[138,54,172,52],[138,59,172,57],[138,60,172,58],[138,62,172,60],[139,8,173,6,"comb"],[139,12,173,10],[139,13,173,11],[139,14,173,12],[139,15,173,13],[139,18,173,16,"points"],[139,24,173,22],[139,25,173,23,"a"],[139,26,173,24],[139,27,173,25],[139,28,173,26,"toJ"],[139,31,173,29],[139,32,173,30],[139,33,173,31],[139,34,173,32,"mixedAdd"],[139,42,173,40],[139,43,173,41,"points"],[139,49,173,47],[139,50,173,48,"b"],[139,51,173,49],[139,52,173,50],[139,53,173,51],[140,8,174,6,"comb"],[140,12,174,10],[140,13,174,11],[140,14,174,12],[140,15,174,13],[140,18,174,16,"points"],[140,24,174,22],[140,25,174,23,"a"],[140,26,174,24],[140,27,174,25],[140,28,174,26,"add"],[140,31,174,29],[140,32,174,30,"points"],[140,38,174,36],[140,39,174,37,"b"],[140,40,174,38],[140,41,174,39],[140,42,174,40,"neg"],[140,45,174,43],[140,46,174,44],[140,47,174,45],[140,48,174,46],[141,6,175,4],[141,7,175,5],[141,13,175,11],[142,8,176,6,"comb"],[142,12,176,10],[142,13,176,11],[142,14,176,12],[142,15,176,13],[142,18,176,16,"points"],[142,24,176,22],[142,25,176,23,"a"],[142,26,176,24],[142,27,176,25],[142,28,176,26,"toJ"],[142,31,176,29],[142,32,176,30],[142,33,176,31],[142,34,176,32,"mixedAdd"],[142,42,176,40],[142,43,176,41,"points"],[142,49,176,47],[142,50,176,48,"b"],[142,51,176,49],[142,52,176,50],[142,53,176,51],[143,8,177,6,"comb"],[143,12,177,10],[143,13,177,11],[143,14,177,12],[143,15,177,13],[143,18,177,16,"points"],[143,24,177,22],[143,25,177,23,"a"],[143,26,177,24],[143,27,177,25],[143,28,177,26,"toJ"],[143,31,177,29],[143,32,177,30],[143,33,177,31],[143,34,177,32,"mixedAdd"],[143,42,177,40],[143,43,177,41,"points"],[143,49,177,47],[143,50,177,48,"b"],[143,51,177,49],[143,52,177,50],[143,53,177,51,"neg"],[143,56,177,54],[143,57,177,55],[143,58,177,56],[143,59,177,57],[144,6,178,4],[145,6,180,4],[145,10,180,8,"index"],[145,15,180,13],[145,18,180,16],[145,19,181,6],[145,20,181,7],[145,21,181,8],[145,23,181,10],[146,6,182,6],[146,7,182,7],[146,8,182,8],[146,10,182,10],[147,6,183,6],[147,7,183,7],[147,8,183,8],[147,10,183,10],[148,6,184,6],[148,7,184,7],[148,8,184,8],[148,10,184,10],[149,6,185,6],[149,7,185,7],[149,9,185,9],[150,6,186,6],[150,7,186,7],[150,9,186,9],[151,6,187,6],[151,7,187,7],[151,9,187,9],[152,6,188,6],[152,7,188,7],[152,9,188,9],[153,6,189,6],[153,7,189,7],[153,8,189,10],[153,18,190,5],[154,6,192,4],[154,10,192,8,"jsf"],[154,13,192,11],[154,16,192,14,"_$$_REQUIRE"],[154,27,192,14],[154,28,192,14,"_dependencyMap"],[154,42,192,14],[154,59,192,14,"getJSF"],[154,65,192,14],[154,66,192,21,"coeffs"],[154,72,192,27],[154,73,192,28,"a"],[154,74,192,29],[154,75,192,30],[154,77,192,32,"coeffs"],[154,83,192,38],[154,84,192,39,"b"],[154,85,192,40],[154,86,192,41],[154,87,192,42],[155,6,193,4,"max"],[155,9,193,7],[155,12,193,10,"Math"],[155,16,193,14],[155,17,193,15,"max"],[155,20,193,18],[155,21,193,19,"jsf"],[155,24,193,22],[155,25,193,23],[155,26,193,24],[155,27,193,25],[155,28,193,26,"length"],[155,34,193,32],[155,36,193,34,"max"],[155,39,193,37],[155,40,193,38],[156,6,194,4,"naf"],[156,9,194,7],[156,10,194,8,"a"],[156,11,194,9],[156,12,194,10],[156,15,194,13],[156,19,194,17,"Array"],[156,24,194,22],[156,25,194,23,"max"],[156,28,194,26],[156,29,194,27],[157,6,195,4,"naf"],[157,9,195,7],[157,10,195,8,"b"],[157,11,195,9],[157,12,195,10],[157,15,195,13],[157,19,195,17,"Array"],[157,24,195,22],[157,25,195,23,"max"],[157,28,195,26],[157,29,195,27],[158,6,196,4],[158,11,196,9,"j"],[158,12,196,10],[158,15,196,13],[158,16,196,14],[158,18,196,16,"j"],[158,19,196,17],[158,22,196,20,"max"],[158,25,196,23],[158,27,196,25,"j"],[158,28,196,26],[158,30,196,28],[158,32,196,30],[159,8,197,6],[159,12,197,10,"ja"],[159,14,197,12],[159,17,197,15,"jsf"],[159,20,197,18],[159,21,197,19],[159,22,197,20],[159,23,197,21],[159,24,197,22,"j"],[159,25,197,23],[159,26,197,24],[159,29,197,27],[159,30,197,28],[160,8,198,6],[160,12,198,10,"jb"],[160,14,198,12],[160,17,198,15,"jsf"],[160,20,198,18],[160,21,198,19],[160,22,198,20],[160,23,198,21],[160,24,198,22,"j"],[160,25,198,23],[160,26,198,24],[160,29,198,27],[160,30,198,28],[161,8,200,6,"naf"],[161,11,200,9],[161,12,200,10,"a"],[161,13,200,11],[161,14,200,12],[161,15,200,13,"j"],[161,16,200,14],[161,17,200,15],[161,20,200,18,"index"],[161,25,200,23],[161,26,200,24],[161,27,200,25,"ja"],[161,29,200,27],[161,32,200,30],[161,33,200,31],[161,37,200,35],[161,38,200,36],[161,42,200,40,"jb"],[161,44,200,42],[161,47,200,45],[161,48,200,46],[161,49,200,47],[161,50,200,48],[162,8,201,6,"naf"],[162,11,201,9],[162,12,201,10,"b"],[162,13,201,11],[162,14,201,12],[162,15,201,13,"j"],[162,16,201,14],[162,17,201,15],[162,20,201,18],[162,21,201,19],[163,8,202,6,"wnd"],[163,11,202,9],[163,12,202,10,"a"],[163,13,202,11],[163,14,202,12],[163,17,202,15,"comb"],[163,21,202,19],[164,6,203,4],[165,4,204,2],[166,4,206,2],[166,8,206,6,"acc"],[166,11,206,9],[166,14,206,12],[166,18,206,16],[166,19,206,17,"jpoint"],[166,25,206,23],[166,26,206,24],[166,30,206,28],[166,32,206,30],[166,36,206,34],[166,38,206,36],[166,42,206,40],[166,43,206,41],[167,4,207,2],[167,8,207,6,"tmp"],[167,11,207,9],[167,14,207,12],[167,18,207,16],[167,19,207,17,"_wnafT4"],[167,26,207,24],[168,4,208,2],[168,9,208,7,"i"],[168,10,208,8],[168,13,208,11,"max"],[168,16,208,14],[168,18,208,16,"i"],[168,19,208,17],[168,23,208,21],[168,24,208,22],[168,26,208,24,"i"],[168,27,208,25],[168,29,208,27],[168,31,208,29],[169,6,209,4],[169,10,209,8,"k"],[169,11,209,9],[169,14,209,12],[169,15,209,13],[170,6,211,4],[170,13,211,11,"i"],[170,14,211,12],[170,18,211,16],[170,19,211,17],[170,21,211,19],[171,8,212,6],[171,12,212,10,"zero"],[171,16,212,14],[171,19,212,17],[171,23,212,21],[172,8,213,6],[172,13,213,11,"j"],[172,14,213,12],[172,17,213,15],[172,18,213,16],[172,20,213,18,"j"],[172,21,213,19],[172,24,213,22,"len"],[172,27,213,25],[172,29,213,27,"j"],[172,30,213,28],[172,32,213,30],[172,34,213,32],[173,10,214,8,"tmp"],[173,13,214,11],[173,14,214,12,"j"],[173,15,214,13],[173,16,214,14],[173,19,214,17,"naf"],[173,22,214,20],[173,23,214,21,"j"],[173,24,214,22],[173,25,214,23],[173,26,214,24,"i"],[173,27,214,25],[173,28,214,26],[173,31,214,29],[173,32,214,30],[174,10,215,8],[174,14,215,12,"tmp"],[174,17,215,15],[174,18,215,16,"j"],[174,19,215,17],[174,20,215,18],[174,25,215,23],[174,26,215,24],[174,28,216,10,"zero"],[174,32,216,14],[174,35,216,17],[174,40,216,22],[175,8,217,6],[176,8,218,6],[176,12,218,10],[176,13,218,11,"zero"],[176,17,218,15],[176,19,219,8],[177,8,220,6,"k"],[177,9,220,7],[177,11,220,9],[178,8,221,6,"i"],[178,9,221,7],[178,11,221,9],[179,6,222,4],[180,6,223,4],[180,10,223,8,"i"],[180,11,223,9],[180,15,223,13],[180,16,223,14],[180,18,224,6,"k"],[180,19,224,7],[180,21,224,9],[181,6,225,4,"acc"],[181,9,225,7],[181,12,225,10,"acc"],[181,15,225,13],[181,16,225,14,"dblp"],[181,20,225,18],[181,21,225,19,"k"],[181,22,225,20],[181,23,225,21],[182,6,226,4],[182,10,226,8,"i"],[182,11,226,9],[182,14,226,12],[182,15,226,13],[182,17,227,6],[183,6,229,4],[183,11,229,9,"j"],[183,12,229,10],[183,15,229,13],[183,16,229,14],[183,18,229,16,"j"],[183,19,229,17],[183,22,229,20,"len"],[183,25,229,23],[183,27,229,25,"j"],[183,28,229,26],[183,30,229,28],[183,32,229,30],[184,8,230,6],[184,12,230,10,"z"],[184,13,230,11],[184,16,230,14,"tmp"],[184,19,230,17],[184,20,230,18,"j"],[184,21,230,19],[184,22,230,20],[185,8,231,6,"p"],[185,9,231,7],[186,8,232,6],[186,12,232,10,"z"],[186,13,232,11],[186,18,232,16],[186,19,232,17],[186,21,233,8],[186,30,233,17],[186,35,234,11],[186,39,234,15,"z"],[186,40,234,16],[186,43,234,19],[186,44,234,20],[186,46,235,8,"p"],[186,47,235,9],[186,50,235,12,"wnd"],[186,53,235,15],[186,54,235,16,"j"],[186,55,235,17],[186,56,235,18],[186,57,235,20,"z"],[186,58,235,21],[186,61,235,24],[186,62,235,25],[186,66,235,30],[186,67,235,31],[186,68,235,32],[186,69,235,33],[186,74,236,11],[186,78,236,15,"z"],[186,79,236,16],[186,82,236,19],[186,83,236,20],[186,85,237,8,"p"],[186,86,237,9],[186,89,237,12,"wnd"],[186,92,237,15],[186,93,237,16,"j"],[186,94,237,17],[186,95,237,18],[186,96,237,20],[186,97,237,21,"z"],[186,98,237,22],[186,101,237,25],[186,102,237,26],[186,106,237,31],[186,107,237,32],[186,108,237,33],[186,109,237,34,"neg"],[186,112,237,37],[186,113,237,38],[186,114,237,39],[187,8,239,6],[187,12,239,10,"p"],[187,13,239,11],[187,14,239,12,"type"],[187,18,239,16],[187,23,239,21],[187,31,239,29],[187,33,240,8,"acc"],[187,36,240,11],[187,39,240,14,"acc"],[187,42,240,17],[187,43,240,18,"mixedAdd"],[187,51,240,26],[187,52,240,27,"p"],[187,53,240,28],[187,54,240,29],[187,55,240,30],[187,60,242,8,"acc"],[187,63,242,11],[187,66,242,14,"acc"],[187,69,242,17],[187,70,242,18,"add"],[187,73,242,21],[187,74,242,22,"p"],[187,75,242,23],[187,76,242,24],[188,6,243,4],[189,4,244,2],[190,4,245,2],[191,4,246,2],[191,9,246,7,"i"],[191,10,246,8],[191,13,246,11],[191,14,246,12],[191,16,246,14,"i"],[191,17,246,15],[191,20,246,18,"len"],[191,23,246,21],[191,25,246,23,"i"],[191,26,246,24],[191,28,246,26],[191,30,247,4,"wnd"],[191,33,247,7],[191,34,247,8,"i"],[191,35,247,9],[191,36,247,10],[191,39,247,13],[191,43,247,17],[192,4,249,2],[192,8,249,6,"jacobianResult"],[192,22,249,20],[192,24,250,4],[192,31,250,11,"acc"],[192,34,250,14],[192,35,250,15],[192,40,252,4],[192,47,252,11,"acc"],[192,50,252,14],[192,51,252,15,"toP"],[192,54,252,18],[192,55,252,19],[192,56,252,20],[193,2,253,0],[193,3,253,1],[194,2,255,0],[194,11,255,9,"BasePoint"],[194,20,255,18,"BasePoint"],[194,21,255,19,"curve"],[194,26,255,24],[194,28,255,26,"type"],[194,32,255,30],[194,34,255,32],[195,4,256,2],[195,8,256,6],[195,9,256,7,"curve"],[195,14,256,12],[195,17,256,15,"curve"],[195,22,256,20],[196,4,257,2],[196,8,257,6],[196,9,257,7,"type"],[196,13,257,11],[196,16,257,14,"type"],[196,20,257,18],[197,4,258,2],[197,8,258,6],[197,9,258,7,"precomputed"],[197,20,258,18],[197,23,258,21],[197,27,258,25],[198,2,259,0],[199,2,260,0,"BaseCurve"],[199,11,260,9],[199,12,260,10,"BasePoint"],[199,21,260,19],[199,24,260,22,"BasePoint"],[199,33,260,31],[200,2,262,0,"BasePoint"],[200,11,262,9],[200,12,262,10,"prototype"],[200,21,262,19],[200,22,262,20,"eq"],[200,24,262,22],[200,27,262,25],[200,36,262,34,"eq"],[200,38,262,36,"eq"],[200,39,262,37],[201,2,262,37],[201,4,262,48],[202,4,263,2],[202,10,263,8],[202,14,263,12,"Error"],[202,19,263,17],[202,20,263,18],[202,37,263,35],[202,38,263,36],[203,2,264,0],[203,3,264,1],[204,2,266,0,"BasePoint"],[204,11,266,9],[204,12,266,10,"prototype"],[204,21,266,19],[204,22,266,20,"validate"],[204,30,266,28],[204,33,266,31],[204,42,266,40,"validate"],[204,50,266,48,"validate"],[204,51,266,48],[204,53,266,51],[205,4,267,2],[205,11,267,9],[205,15,267,13],[205,16,267,14,"curve"],[205,21,267,19],[205,22,267,20,"validate"],[205,30,267,28],[205,31,267,29],[205,35,267,33],[205,36,267,34],[206,2,268,0],[206,3,268,1],[207,2,270,0,"BaseCurve"],[207,11,270,9],[207,12,270,10,"prototype"],[207,21,270,19],[207,22,270,20,"decodePoint"],[207,33,270,31],[207,36,270,34],[207,45,270,43,"decodePoint"],[207,56,270,54,"decodePoint"],[207,57,270,55,"bytes"],[207,62,270,60],[207,64,270,62,"enc"],[207,67,270,65],[207,69,270,67],[208,4,271,2,"bytes"],[208,9,271,7],[208,12,271,10,"_$$_REQUIRE"],[208,23,271,10],[208,24,271,10,"_dependencyMap"],[208,38,271,10],[208,55,271,16,"toArray"],[208,62,271,23],[208,63,271,24,"bytes"],[208,68,271,29],[208,70,271,31,"enc"],[208,73,271,34],[208,74,271,35],[209,4,273,2],[209,8,273,6,"len"],[209,11,273,9],[209,14,273,12],[209,18,273,16],[209,19,273,17,"p"],[209,20,273,18],[209,21,273,19,"byteLength"],[209,31,273,29],[209,32,273,30],[209,33,273,31],[211,4,275,2],[212,4,276,2],[212,8,276,6],[212,9,276,7,"bytes"],[212,14,276,12],[212,15,276,13],[212,16,276,14],[212,17,276,15],[212,22,276,20],[212,26,276,24],[212,30,276,28,"bytes"],[212,35,276,33],[212,36,276,34],[212,37,276,35],[212,38,276,36],[212,43,276,41],[212,47,276,45],[212,51,276,49,"bytes"],[212,56,276,54],[212,57,276,55],[212,58,276,56],[212,59,276,57],[212,64,276,62],[212,68,276,66],[212,73,277,6,"bytes"],[212,78,277,11],[212,79,277,12,"length"],[212,85,277,18],[212,88,277,21],[212,89,277,22],[212,94,277,27],[212,95,277,28],[212,98,277,31,"len"],[212,101,277,34],[212,103,277,36],[213,6,278,4],[213,10,278,8,"bytes"],[213,15,278,13],[213,16,278,14],[213,17,278,15],[213,18,278,16],[213,23,278,21],[213,27,278,25],[213,29,279,6,"_$$_REQUIRE"],[213,40,279,6],[213,41,279,6,"_dependencyMap"],[213,55,279,6],[213,72,279,6,"assert"],[213,78,279,6],[213,79,279,13,"bytes"],[213,84,279,18],[213,85,279,19,"bytes"],[213,90,279,24],[213,91,279,25,"length"],[213,97,279,31],[213,100,279,34],[213,101,279,35],[213,102,279,36],[213,105,279,39],[213,106,279,40],[213,111,279,45],[213,112,279,46],[213,113,279,47],[213,114,279,48],[213,119,280,9],[213,123,280,13,"bytes"],[213,128,280,18],[213,129,280,19],[213,130,280,20],[213,131,280,21],[213,136,280,26],[213,140,280,30],[213,142,281,6,"_$$_REQUIRE"],[213,153,281,6],[213,154,281,6,"_dependencyMap"],[213,168,281,6],[213,185,281,6,"assert"],[213,191,281,6],[213,192,281,13,"bytes"],[213,197,281,18],[213,198,281,19,"bytes"],[213,203,281,24],[213,204,281,25,"length"],[213,210,281,31],[213,213,281,34],[213,214,281,35],[213,215,281,36],[213,218,281,39],[213,219,281,40],[213,224,281,45],[213,225,281,46],[213,226,281,47],[214,6,283,4],[214,10,283,8,"res"],[214,13,283,11],[214,16,283,15],[214,20,283,19],[214,21,283,20,"point"],[214,26,283,25],[214,27,283,26,"bytes"],[214,32,283,31],[214,33,283,32,"slice"],[214,38,283,37],[214,39,283,38],[214,40,283,39],[214,42,283,41],[214,43,283,42],[214,46,283,45,"len"],[214,49,283,48],[214,50,283,49],[214,52,284,6,"bytes"],[214,57,284,11],[214,58,284,12,"slice"],[214,63,284,17],[214,64,284,18],[214,65,284,19],[214,68,284,22,"len"],[214,71,284,25],[214,73,284,27],[214,74,284,28],[214,77,284,31],[214,78,284,32],[214,81,284,35,"len"],[214,84,284,38],[214,85,284,39],[214,86,284,40],[215,6,286,4],[215,13,286,11,"res"],[215,16,286,14],[216,4,287,2],[216,5,287,3],[216,11,287,9],[216,15,287,13],[216,16,287,14,"bytes"],[216,21,287,19],[216,22,287,20],[216,23,287,21],[216,24,287,22],[216,29,287,27],[216,33,287,31],[216,37,287,35,"bytes"],[216,42,287,40],[216,43,287,41],[216,44,287,42],[216,45,287,43],[216,50,287,48],[216,54,287,52],[216,59,288,14,"bytes"],[216,64,288,19],[216,65,288,20,"length"],[216,71,288,26],[216,74,288,29],[216,75,288,30],[216,80,288,35,"len"],[216,83,288,38],[216,85,288,40],[217,6,289,4],[217,13,289,11],[217,17,289,15],[217,18,289,16,"pointFromX"],[217,28,289,26],[217,29,289,27,"bytes"],[217,34,289,32],[217,35,289,33,"slice"],[217,40,289,38],[217,41,289,39],[217,42,289,40],[217,44,289,42],[217,45,289,43],[217,48,289,46,"len"],[217,51,289,49],[217,52,289,50],[217,54,289,52,"bytes"],[217,59,289,57],[217,60,289,58],[217,61,289,59],[217,62,289,60],[217,67,289,65],[217,71,289,69],[217,72,289,70],[218,4,290,2],[219,4,291,2],[219,10,291,8],[219,14,291,12,"Error"],[219,19,291,17],[219,20,291,18],[219,42,291,40],[219,43,291,41],[220,2,292,0],[220,3,292,1],[221,2,294,0,"BasePoint"],[221,11,294,9],[221,12,294,10,"prototype"],[221,21,294,19],[221,22,294,20,"encodeCompressed"],[221,38,294,36],[221,41,294,39],[221,50,294,48,"encodeCompressed"],[221,66,294,64,"encodeCompressed"],[221,67,294,65,"enc"],[221,70,294,68],[221,72,294,70],[222,4,295,2],[222,11,295,9],[222,15,295,13],[222,16,295,14,"encode"],[222,22,295,20],[222,23,295,21,"enc"],[222,26,295,24],[222,28,295,26],[222,32,295,30],[222,33,295,31],[223,2,296,0],[223,3,296,1],[224,2,298,0,"BasePoint"],[224,11,298,9],[224,12,298,10,"prototype"],[224,21,298,19],[224,22,298,20,"_encode"],[224,29,298,27],[224,32,298,30],[224,41,298,39,"_encode"],[224,48,298,46,"_encode"],[224,49,298,47,"compact"],[224,56,298,54],[224,58,298,56],[225,4,299,2],[225,8,299,6,"len"],[225,11,299,9],[225,14,299,12],[225,18,299,16],[225,19,299,17,"curve"],[225,24,299,22],[225,25,299,23,"p"],[225,26,299,24],[225,27,299,25,"byteLength"],[225,37,299,35],[225,38,299,36],[225,39,299,37],[226,4,300,2],[226,8,300,6,"x"],[226,9,300,7],[226,12,300,10],[226,16,300,14],[226,17,300,15,"getX"],[226,21,300,19],[226,22,300,20],[226,23,300,21],[226,24,300,22,"toArray"],[226,31,300,29],[226,32,300,30],[226,36,300,34],[226,38,300,36,"len"],[226,41,300,39],[226,42,300,40],[227,4,302,2],[227,8,302,6,"compact"],[227,15,302,13],[227,17,303,4],[227,24,303,11],[227,25,303,13],[227,29,303,17],[227,30,303,18,"getY"],[227,34,303,22],[227,35,303,23],[227,36,303,24],[227,37,303,25,"isEven"],[227,43,303,31],[227,44,303,32],[227,45,303,33],[227,48,303,36],[227,52,303,40],[227,55,303,43],[227,59,303,47],[227,60,303,49],[227,61,303,50,"concat"],[227,67,303,56],[227,68,303,57,"x"],[227,69,303,58],[227,70,303,59],[228,4,305,2],[228,11,305,9],[228,12,305,11],[228,16,305,15],[228,17,305,17],[228,18,305,18,"concat"],[228,24,305,24],[228,25,305,25,"x"],[228,26,305,26],[228,28,305,28],[228,32,305,32],[228,33,305,33,"getY"],[228,37,305,37],[228,38,305,38],[228,39,305,39],[228,40,305,40,"toArray"],[228,47,305,47],[228,48,305,48],[228,52,305,52],[228,54,305,54,"len"],[228,57,305,57],[228,58,305,58],[228,59,305,59],[229,2,306,0],[229,3,306,1],[230,2,308,0,"BasePoint"],[230,11,308,9],[230,12,308,10,"prototype"],[230,21,308,19],[230,22,308,20,"encode"],[230,28,308,26],[230,31,308,29],[230,40,308,38,"encode"],[230,46,308,44,"encode"],[230,47,308,45,"enc"],[230,50,308,48],[230,52,308,50,"compact"],[230,59,308,57],[230,61,308,59],[231,4,309,2],[231,11,309,9,"_$$_REQUIRE"],[231,22,309,9],[231,23,309,9,"_dependencyMap"],[231,37,309,9],[231,54,309,15,"encode"],[231,60,309,21],[231,61,309,22],[231,65,309,26],[231,66,309,27,"_encode"],[231,73,309,34],[231,74,309,35,"compact"],[231,81,309,42],[231,82,309,43],[231,84,309,45,"enc"],[231,87,309,48],[231,88,309,49],[232,2,310,0],[232,3,310,1],[233,2,312,0,"BasePoint"],[233,11,312,9],[233,12,312,10,"prototype"],[233,21,312,19],[233,22,312,20,"precompute"],[233,32,312,30],[233,35,312,33],[233,44,312,42,"precompute"],[233,54,312,52,"precompute"],[233,55,312,53,"power"],[233,60,312,58],[233,62,312,60],[234,4,313,2],[234,8,313,6],[234,12,313,10],[234,13,313,11,"precomputed"],[234,24,313,22],[234,26,314,4],[234,33,314,11],[234,37,314,15],[235,4,316,2],[235,8,316,6,"precomputed"],[235,19,316,17],[235,22,316,20],[236,6,317,4,"doubles"],[236,13,317,11],[236,15,317,13],[236,19,317,17],[237,6,318,4,"naf"],[237,9,318,7],[237,11,318,9],[237,15,318,13],[238,6,319,4,"beta"],[238,10,319,8],[238,12,319,10],[239,4,320,2],[239,5,320,3],[240,4,321,2,"precomputed"],[240,15,321,13],[240,16,321,14,"naf"],[240,19,321,17],[240,22,321,20],[240,26,321,24],[240,27,321,25,"_getNAFPoints"],[240,40,321,38],[240,41,321,39],[240,42,321,40],[240,43,321,41],[241,4,322,2,"precomputed"],[241,15,322,13],[241,16,322,14,"doubles"],[241,23,322,21],[241,26,322,24],[241,30,322,28],[241,31,322,29,"_getDoubles"],[241,42,322,40],[241,43,322,41],[241,44,322,42],[241,46,322,44,"power"],[241,51,322,49],[241,52,322,50],[242,4,323,2,"precomputed"],[242,15,323,13],[242,16,323,14,"beta"],[242,20,323,18],[242,23,323,21],[242,27,323,25],[242,28,323,26,"_getBeta"],[242,36,323,34],[242,37,323,35],[242,38,323,36],[243,4,324,2],[243,8,324,6],[243,9,324,7,"precomputed"],[243,20,324,18],[243,23,324,21,"precomputed"],[243,34,324,32],[244,4,326,2],[244,11,326,9],[244,15,326,13],[245,2,327,0],[245,3,327,1],[246,2,329,0,"BasePoint"],[246,11,329,9],[246,12,329,10,"prototype"],[246,21,329,19],[246,22,329,20,"_hasDoubles"],[246,33,329,31],[246,36,329,34],[246,45,329,43,"_hasDoubles"],[246,56,329,54,"_hasDoubles"],[246,57,329,55,"k"],[246,58,329,56],[246,60,329,58],[247,4,330,2],[247,8,330,6],[247,9,330,7],[247,13,330,11],[247,14,330,12,"precomputed"],[247,25,330,23],[247,27,331,4],[247,34,331,11],[247,39,331,16],[248,4,333,2],[248,8,333,6,"doubles"],[248,15,333,13],[248,18,333,16],[248,22,333,20],[248,23,333,21,"precomputed"],[248,34,333,32],[248,35,333,33,"doubles"],[248,42,333,40],[249,4,334,2],[249,8,334,6],[249,9,334,7,"doubles"],[249,16,334,14],[249,18,335,4],[249,25,335,11],[249,30,335,16],[250,4,337,2],[250,11,337,9,"doubles"],[250,18,337,16],[250,19,337,17,"points"],[250,25,337,23],[250,26,337,24,"length"],[250,32,337,30],[250,36,337,34,"Math"],[250,40,337,38],[250,41,337,39,"ceil"],[250,45,337,43],[250,46,337,44],[250,47,337,45,"k"],[250,48,337,46],[250,49,337,47,"bitLength"],[250,58,337,56],[250,59,337,57],[250,60,337,58],[250,63,337,61],[250,64,337,62],[250,68,337,66,"doubles"],[250,75,337,73],[250,76,337,74,"step"],[250,80,337,78],[250,81,337,79],[251,2,338,0],[251,3,338,1],[252,2,340,0,"BasePoint"],[252,11,340,9],[252,12,340,10,"prototype"],[252,21,340,19],[252,22,340,20,"_getDoubles"],[252,33,340,31],[252,36,340,34],[252,45,340,43,"_getDoubles"],[252,56,340,54,"_getDoubles"],[252,57,340,55,"step"],[252,61,340,59],[252,63,340,61,"power"],[252,68,340,66],[252,70,340,68],[253,4,341,2],[253,8,341,6],[253,12,341,10],[253,13,341,11,"precomputed"],[253,24,341,22],[253,28,341,26],[253,32,341,30],[253,33,341,31,"precomputed"],[253,44,341,42],[253,45,341,43,"doubles"],[253,52,341,50],[253,54,342,4],[253,61,342,11],[253,65,342,15],[253,66,342,16,"precomputed"],[253,77,342,27],[253,78,342,28,"doubles"],[253,85,342,35],[254,4,344,2],[254,8,344,6,"doubles"],[254,15,344,13],[254,18,344,16],[254,19,344,18],[254,23,344,22],[254,24,344,24],[255,4,345,2],[255,8,345,6,"acc"],[255,11,345,9],[255,14,345,12],[255,18,345,16],[256,4,346,2],[256,9,346,7],[256,13,346,11,"i"],[256,14,346,12],[256,17,346,15],[256,18,346,16],[256,20,346,18,"i"],[256,21,346,19],[256,24,346,22,"power"],[256,29,346,27],[256,31,346,29,"i"],[256,32,346,30],[256,36,346,34,"step"],[256,40,346,38],[256,42,346,40],[257,6,347,4],[257,11,347,9],[257,15,347,13,"j"],[257,16,347,14],[257,19,347,17],[257,20,347,18],[257,22,347,20,"j"],[257,23,347,21],[257,26,347,24,"step"],[257,30,347,28],[257,32,347,30,"j"],[257,33,347,31],[257,35,347,33],[257,37,348,6,"acc"],[257,40,348,9],[257,43,348,12,"acc"],[257,46,348,15],[257,47,348,16,"dbl"],[257,50,348,19],[257,51,348,20],[257,52,348,21],[258,6,349,4,"doubles"],[258,13,349,11],[258,14,349,12,"push"],[258,18,349,16],[258,19,349,17,"acc"],[258,22,349,20],[258,23,349,21],[259,4,350,2],[260,4,351,2],[260,11,351,9],[261,6,352,4,"step"],[261,10,352,8],[261,12,352,10,"step"],[261,16,352,14],[262,6,353,4,"points"],[262,12,353,10],[262,14,353,12,"doubles"],[263,4,354,2],[263,5,354,3],[264,2,355,0],[264,3,355,1],[265,2,357,0,"BasePoint"],[265,11,357,9],[265,12,357,10,"prototype"],[265,21,357,19],[265,22,357,20,"_getNAFPoints"],[265,35,357,33],[265,38,357,36],[265,47,357,45,"_getNAFPoints"],[265,60,357,58,"_getNAFPoints"],[265,61,357,59,"wnd"],[265,64,357,62],[265,66,357,64],[266,4,358,2],[266,8,358,6],[266,12,358,10],[266,13,358,11,"precomputed"],[266,24,358,22],[266,28,358,26],[266,32,358,30],[266,33,358,31,"precomputed"],[266,44,358,42],[266,45,358,43,"naf"],[266,48,358,46],[266,50,359,4],[266,57,359,11],[266,61,359,15],[266,62,359,16,"precomputed"],[266,73,359,27],[266,74,359,28,"naf"],[266,77,359,31],[267,4,361,2],[267,8,361,6,"res"],[267,11,361,9],[267,14,361,12],[267,15,361,14],[267,19,361,18],[267,20,361,20],[268,4,362,2],[268,8,362,6,"max"],[268,11,362,9],[268,14,362,12],[268,15,362,13],[268,16,362,14],[268,20,362,18,"wnd"],[268,23,362,21],[268,27,362,25],[268,28,362,26],[269,4,363,2],[269,8,363,6,"dbl"],[269,11,363,9],[269,14,363,12,"max"],[269,17,363,15],[269,22,363,20],[269,23,363,21],[269,26,363,24],[269,30,363,28],[269,33,363,31],[269,37,363,35],[269,38,363,36,"dbl"],[269,41,363,39],[269,42,363,40],[269,43,363,41],[270,4,364,2],[270,9,364,7],[270,13,364,11,"i"],[270,14,364,12],[270,17,364,15],[270,18,364,16],[270,20,364,18,"i"],[270,21,364,19],[270,24,364,22,"max"],[270,27,364,25],[270,29,364,27,"i"],[270,30,364,28],[270,32,364,30],[270,34,365,4,"res"],[270,37,365,7],[270,38,365,8,"i"],[270,39,365,9],[270,40,365,10],[270,43,365,13,"res"],[270,46,365,16],[270,47,365,17,"i"],[270,48,365,18],[270,51,365,21],[270,52,365,22],[270,53,365,23],[270,54,365,24,"add"],[270,57,365,27],[270,58,365,28,"dbl"],[270,61,365,31],[270,62,365,32],[271,4,366,2],[271,11,366,9],[272,6,367,4,"wnd"],[272,9,367,7],[272,11,367,9,"wnd"],[272,14,367,12],[273,6,368,4,"points"],[273,12,368,10],[273,14,368,12,"res"],[274,4,369,2],[274,5,369,3],[275,2,370,0],[275,3,370,1],[276,2,372,0,"BasePoint"],[276,11,372,9],[276,12,372,10,"prototype"],[276,21,372,19],[276,22,372,20,"_getBeta"],[276,30,372,28],[276,33,372,31],[276,42,372,40,"_getBeta"],[276,50,372,48,"_getBeta"],[276,51,372,48],[276,53,372,51],[277,4,373,2],[277,11,373,9],[277,15,373,13],[278,2,374,0],[278,3,374,1],[279,2,376,0,"BasePoint"],[279,11,376,9],[279,12,376,10,"prototype"],[279,21,376,19],[279,22,376,20,"dblp"],[279,26,376,24],[279,29,376,27],[279,38,376,36,"dblp"],[279,42,376,40,"dblp"],[279,43,376,41,"k"],[279,44,376,42],[279,46,376,44],[280,4,377,2],[280,8,377,6,"r"],[280,9,377,7],[280,12,377,10],[280,16,377,14],[281,4,378,2],[281,9,378,7],[281,13,378,11,"i"],[281,14,378,12],[281,17,378,15],[281,18,378,16],[281,20,378,18,"i"],[281,21,378,19],[281,24,378,22,"k"],[281,25,378,23],[281,27,378,25,"i"],[281,28,378,26],[281,30,378,28],[281,32,379,4,"r"],[281,33,379,5],[281,36,379,8,"r"],[281,37,379,9],[281,38,379,10,"dbl"],[281,41,379,13],[281,42,379,14],[281,43,379,15],[282,4,380,2],[282,11,380,9,"r"],[282,12,380,10],[283,2,381,0],[283,3,381,1],[284,0,381,2],[284,3]],"functionMap":{"names":["<global>","BaseCurve","point","validate","_fixedNafMul","_wnafMul","_wnafMulAdd","BasePoint","eq","decodePoint","encodeCompressed","_encode","encode","precompute","_hasDoubles","_getDoubles","_getNAFPoints","_getBeta","dblp"],"mappings":"AAA;ACQ;CDgC;4BEG;CFE;+BGE;CHE;mCIE;CJgC;+BKE;CLwC;kCME;CN6H;AOE;CPI;yBQG;CRE;+BGE;CHE;kCSE;CTsB;uCUE;CVE;8BWE;CXQ;6BYE;CZE;iCaE;Cbe;kCcE;CdS;kCeE;Cfe;oCgBE;ChBa;+BiBE;CjBE;2BkBE;ClBK"}},"type":"js/module"}]}