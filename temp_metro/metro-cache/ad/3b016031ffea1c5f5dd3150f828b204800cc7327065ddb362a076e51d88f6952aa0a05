{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function KeyPair(ec, options) {\n    this.ec = ec;\n    this.priv = null;\n    this.pub = null;\n\n    // KeyPair(ec, { priv: ..., pub: ... })\n    if (options.priv) this._importPrivate(options.priv, options.privEnc);\n    if (options.pub) this._importPublic(options.pub, options.pubEnc);\n  }\n  module.exports = KeyPair;\n  KeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n    if (pub instanceof KeyPair) return pub;\n    return new KeyPair(ec, {\n      pub: pub,\n      pubEnc: enc\n    });\n  };\n  KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n    if (priv instanceof KeyPair) return priv;\n    return new KeyPair(ec, {\n      priv: priv,\n      privEnc: enc\n    });\n  };\n  KeyPair.prototype.validate = function validate() {\n    var pub = this.getPublic();\n    if (pub.isInfinity()) return {\n      result: false,\n      reason: 'Invalid public key'\n    };\n    if (!pub.validate()) return {\n      result: false,\n      reason: 'Public key is not a point'\n    };\n    if (!pub.mul(this.ec.curve.n).isInfinity()) return {\n      result: false,\n      reason: 'Public key * N != O'\n    };\n    return {\n      result: true,\n      reason: null\n    };\n  };\n  KeyPair.prototype.getPublic = function getPublic(compact, enc) {\n    // compact is optional argument\n    if (typeof compact === 'string') {\n      enc = compact;\n      compact = null;\n    }\n    if (!this.pub) this.pub = this.ec.g.mul(this.priv);\n    if (!enc) return this.pub;\n    return this.pub.encode(enc, compact);\n  };\n  KeyPair.prototype.getPrivate = function getPrivate(enc) {\n    if (enc === 'hex') return this.priv.toString(16, 2);else return this.priv;\n  };\n  KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n    this.priv = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(key, enc || 16);\n\n    // Ensure that the priv won't be bigger than n, otherwise we may fail\n    // in fixed multiplication method\n    this.priv = this.priv.umod(this.ec.curve.n);\n  };\n  KeyPair.prototype._importPublic = function _importPublic(key, enc) {\n    if (key.x || key.y) {\n      // Montgomery points only have an `x` coordinate.\n      // Weierstrass/Edwards points on the other hand have both `x` and\n      // `y` coordinates.\n      if (this.ec.curve.type === 'mont') {\n        _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(key.x, 'Need x coordinate');\n      } else if (this.ec.curve.type === 'short' || this.ec.curve.type === 'edwards') {\n        _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(key.x && key.y, 'Need both x and y coordinate');\n      }\n      this.pub = this.ec.curve.point(key.x, key.y);\n      return;\n    }\n    this.pub = this.ec.curve.decodePoint(key, enc);\n  };\n\n  // ECDH\n  KeyPair.prototype.derive = function derive(pub) {\n    if (!pub.validate()) {\n      _$$_REQUIRE(_dependencyMap[1], \"../utils\").assert(pub.validate(), 'public point not validated');\n    }\n    return pub.mul(this.priv).getX();\n  };\n\n  // ECDSA\n  KeyPair.prototype.sign = function sign(msg, enc, options) {\n    return this.ec.sign(msg, this, enc, options);\n  };\n  KeyPair.prototype.verify = function verify(msg, signature, options) {\n    return this.ec.verify(msg, signature, this, undefined, options);\n  };\n  KeyPair.prototype.inspect = function inspect() {\n    return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) + ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n  };\n});","lineCount":101,"map":[[2,2,1,0],[2,14,1,12],[4,2,7,0],[4,11,7,9,"KeyPair"],[4,18,7,16,"KeyPair"],[4,19,7,17,"ec"],[4,21,7,19],[4,23,7,21,"options"],[4,30,7,28],[4,32,7,30],[5,4,8,2],[5,8,8,6],[5,9,8,7,"ec"],[5,11,8,9],[5,14,8,12,"ec"],[5,16,8,14],[6,4,9,2],[6,8,9,6],[6,9,9,7,"priv"],[6,13,9,11],[6,16,9,14],[6,20,9,18],[7,4,10,2],[7,8,10,6],[7,9,10,7,"pub"],[7,12,10,10],[7,15,10,13],[7,19,10,17],[9,4,12,2],[10,4,13,2],[10,8,13,6,"options"],[10,15,13,13],[10,16,13,14,"priv"],[10,20,13,18],[10,22,14,4],[10,26,14,8],[10,27,14,9,"_importPrivate"],[10,41,14,23],[10,42,14,24,"options"],[10,49,14,31],[10,50,14,32,"priv"],[10,54,14,36],[10,56,14,38,"options"],[10,63,14,45],[10,64,14,46,"privEnc"],[10,71,14,53],[10,72,14,54],[11,4,15,2],[11,8,15,6,"options"],[11,15,15,13],[11,16,15,14,"pub"],[11,19,15,17],[11,21,16,4],[11,25,16,8],[11,26,16,9,"_importPublic"],[11,39,16,22],[11,40,16,23,"options"],[11,47,16,30],[11,48,16,31,"pub"],[11,51,16,34],[11,53,16,36,"options"],[11,60,16,43],[11,61,16,44,"pubEnc"],[11,67,16,50],[11,68,16,51],[12,2,17,0],[13,2,18,0,"module"],[13,8,18,6],[13,9,18,7,"exports"],[13,16,18,14],[13,19,18,17,"KeyPair"],[13,26,18,24],[14,2,20,0,"KeyPair"],[14,9,20,7],[14,10,20,8,"fromPublic"],[14,20,20,18],[14,23,20,21],[14,32,20,30,"fromPublic"],[14,42,20,40,"fromPublic"],[14,43,20,41,"ec"],[14,45,20,43],[14,47,20,45,"pub"],[14,50,20,48],[14,52,20,50,"enc"],[14,55,20,53],[14,57,20,55],[15,4,21,2],[15,8,21,6,"pub"],[15,11,21,9],[15,23,21,21,"KeyPair"],[15,30,21,28],[15,32,22,4],[15,39,22,11,"pub"],[15,42,22,14],[16,4,24,2],[16,11,24,9],[16,15,24,13,"KeyPair"],[16,22,24,20],[16,23,24,21,"ec"],[16,25,24,23],[16,27,24,25],[17,6,25,4,"pub"],[17,9,25,7],[17,11,25,9,"pub"],[17,14,25,12],[18,6,26,4,"pubEnc"],[18,12,26,10],[18,14,26,12,"enc"],[19,4,27,2],[19,5,27,3],[19,6,27,4],[20,2,28,0],[20,3,28,1],[21,2,30,0,"KeyPair"],[21,9,30,7],[21,10,30,8,"fromPrivate"],[21,21,30,19],[21,24,30,22],[21,33,30,31,"fromPrivate"],[21,44,30,42,"fromPrivate"],[21,45,30,43,"ec"],[21,47,30,45],[21,49,30,47,"priv"],[21,53,30,51],[21,55,30,53,"enc"],[21,58,30,56],[21,60,30,58],[22,4,31,2],[22,8,31,6,"priv"],[22,12,31,10],[22,24,31,22,"KeyPair"],[22,31,31,29],[22,33,32,4],[22,40,32,11,"priv"],[22,44,32,15],[23,4,34,2],[23,11,34,9],[23,15,34,13,"KeyPair"],[23,22,34,20],[23,23,34,21,"ec"],[23,25,34,23],[23,27,34,25],[24,6,35,4,"priv"],[24,10,35,8],[24,12,35,10,"priv"],[24,16,35,14],[25,6,36,4,"privEnc"],[25,13,36,11],[25,15,36,13,"enc"],[26,4,37,2],[26,5,37,3],[26,6,37,4],[27,2,38,0],[27,3,38,1],[28,2,40,0,"KeyPair"],[28,9,40,7],[28,10,40,8,"prototype"],[28,19,40,17],[28,20,40,18,"validate"],[28,28,40,26],[28,31,40,29],[28,40,40,38,"validate"],[28,48,40,46,"validate"],[28,49,40,46],[28,51,40,49],[29,4,41,2],[29,8,41,6,"pub"],[29,11,41,9],[29,14,41,12],[29,18,41,16],[29,19,41,17,"getPublic"],[29,28,41,26],[29,29,41,27],[29,30,41,28],[30,4,43,2],[30,8,43,6,"pub"],[30,11,43,9],[30,12,43,10,"isInfinity"],[30,22,43,20],[30,23,43,21],[30,24,43,22],[30,26,44,4],[30,33,44,11],[31,6,44,13,"result"],[31,12,44,19],[31,14,44,21],[31,19,44,26],[32,6,44,28,"reason"],[32,12,44,34],[32,14,44,36],[33,4,44,57],[33,5,44,58],[34,4,45,2],[34,8,45,6],[34,9,45,7,"pub"],[34,12,45,10],[34,13,45,11,"validate"],[34,21,45,19],[34,22,45,20],[34,23,45,21],[34,25,46,4],[34,32,46,11],[35,6,46,13,"result"],[35,12,46,19],[35,14,46,21],[35,19,46,26],[36,6,46,28,"reason"],[36,12,46,34],[36,14,46,36],[37,4,46,64],[37,5,46,65],[38,4,47,2],[38,8,47,6],[38,9,47,7,"pub"],[38,12,47,10],[38,13,47,11,"mul"],[38,16,47,14],[38,17,47,15],[38,21,47,19],[38,22,47,20,"ec"],[38,24,47,22],[38,25,47,23,"curve"],[38,30,47,28],[38,31,47,29,"n"],[38,32,47,30],[38,33,47,31],[38,34,47,32,"isInfinity"],[38,44,47,42],[38,45,47,43],[38,46,47,44],[38,48,48,4],[38,55,48,11],[39,6,48,13,"result"],[39,12,48,19],[39,14,48,21],[39,19,48,26],[40,6,48,28,"reason"],[40,12,48,34],[40,14,48,36],[41,4,48,58],[41,5,48,59],[42,4,50,2],[42,11,50,9],[43,6,50,11,"result"],[43,12,50,17],[43,14,50,19],[43,18,50,23],[44,6,50,25,"reason"],[44,12,50,31],[44,14,50,33],[45,4,50,38],[45,5,50,39],[46,2,51,0],[46,3,51,1],[47,2,53,0,"KeyPair"],[47,9,53,7],[47,10,53,8,"prototype"],[47,19,53,17],[47,20,53,18,"getPublic"],[47,29,53,27],[47,32,53,30],[47,41,53,39,"getPublic"],[47,50,53,48,"getPublic"],[47,51,53,49,"compact"],[47,58,53,56],[47,60,53,58,"enc"],[47,63,53,61],[47,65,53,63],[48,4,54,2],[49,4,55,2],[49,8,55,6],[49,15,55,13,"compact"],[49,22,55,20],[49,27,55,25],[49,35,55,33],[49,37,55,35],[50,6,56,4,"enc"],[50,9,56,7],[50,12,56,10,"compact"],[50,19,56,17],[51,6,57,4,"compact"],[51,13,57,11],[51,16,57,14],[51,20,57,18],[52,4,58,2],[53,4,60,2],[53,8,60,6],[53,9,60,7],[53,13,60,11],[53,14,60,12,"pub"],[53,17,60,15],[53,19,61,4],[53,23,61,8],[53,24,61,9,"pub"],[53,27,61,12],[53,30,61,15],[53,34,61,19],[53,35,61,20,"ec"],[53,37,61,22],[53,38,61,23,"g"],[53,39,61,24],[53,40,61,25,"mul"],[53,43,61,28],[53,44,61,29],[53,48,61,33],[53,49,61,34,"priv"],[53,53,61,38],[53,54,61,39],[54,4,63,2],[54,8,63,6],[54,9,63,7,"enc"],[54,12,63,10],[54,14,64,4],[54,21,64,11],[54,25,64,15],[54,26,64,16,"pub"],[54,29,64,19],[55,4,66,2],[55,11,66,9],[55,15,66,13],[55,16,66,14,"pub"],[55,19,66,17],[55,20,66,18,"encode"],[55,26,66,24],[55,27,66,25,"enc"],[55,30,66,28],[55,32,66,30,"compact"],[55,39,66,37],[55,40,66,38],[56,2,67,0],[56,3,67,1],[57,2,69,0,"KeyPair"],[57,9,69,7],[57,10,69,8,"prototype"],[57,19,69,17],[57,20,69,18,"getPrivate"],[57,30,69,28],[57,33,69,31],[57,42,69,40,"getPrivate"],[57,52,69,50,"getPrivate"],[57,53,69,51,"enc"],[57,56,69,54],[57,58,69,56],[58,4,70,2],[58,8,70,6,"enc"],[58,11,70,9],[58,16,70,14],[58,21,70,19],[58,23,71,4],[58,30,71,11],[58,34,71,15],[58,35,71,16,"priv"],[58,39,71,20],[58,40,71,21,"toString"],[58,48,71,29],[58,49,71,30],[58,51,71,32],[58,53,71,34],[58,54,71,35],[58,55,71,36],[58,56,71,37],[58,61,73,4],[58,68,73,11],[58,72,73,15],[58,73,73,16,"priv"],[58,77,73,20],[59,2,74,0],[59,3,74,1],[60,2,76,0,"KeyPair"],[60,9,76,7],[60,10,76,8,"prototype"],[60,19,76,17],[60,20,76,18,"_importPrivate"],[60,34,76,32],[60,37,76,35],[60,46,76,44,"_importPrivate"],[60,60,76,58,"_importPrivate"],[60,61,76,59,"key"],[60,64,76,62],[60,66,76,64,"enc"],[60,69,76,67],[60,71,76,69],[61,4,77,2],[61,8,77,6],[61,9,77,7,"priv"],[61,13,77,11],[61,16,77,14],[61,21,77,14,"_$$_REQUIRE"],[61,32,77,14],[61,33,77,14,"_dependencyMap"],[61,47,77,14],[61,62,77,21,"key"],[61,65,77,24],[61,67,77,26,"enc"],[61,70,77,29],[61,74,77,33],[61,76,77,35],[61,77,77,36],[63,4,79,2],[64,4,80,2],[65,4,81,2],[65,8,81,6],[65,9,81,7,"priv"],[65,13,81,11],[65,16,81,14],[65,20,81,18],[65,21,81,19,"priv"],[65,25,81,23],[65,26,81,24,"umod"],[65,30,81,28],[65,31,81,29],[65,35,81,33],[65,36,81,34,"ec"],[65,38,81,36],[65,39,81,37,"curve"],[65,44,81,42],[65,45,81,43,"n"],[65,46,81,44],[65,47,81,45],[66,2,82,0],[66,3,82,1],[67,2,84,0,"KeyPair"],[67,9,84,7],[67,10,84,8,"prototype"],[67,19,84,17],[67,20,84,18,"_importPublic"],[67,33,84,31],[67,36,84,34],[67,45,84,43,"_importPublic"],[67,58,84,56,"_importPublic"],[67,59,84,57,"key"],[67,62,84,60],[67,64,84,62,"enc"],[67,67,84,65],[67,69,84,67],[68,4,85,2],[68,8,85,6,"key"],[68,11,85,9],[68,12,85,10,"x"],[68,13,85,11],[68,17,85,15,"key"],[68,20,85,18],[68,21,85,19,"y"],[68,22,85,20],[68,24,85,22],[69,6,86,4],[70,6,87,4],[71,6,88,4],[72,6,89,4],[72,10,89,8],[72,14,89,12],[72,15,89,13,"ec"],[72,17,89,15],[72,18,89,16,"curve"],[72,23,89,21],[72,24,89,22,"type"],[72,28,89,26],[72,33,89,31],[72,39,89,37],[72,41,89,39],[73,8,90,6,"_$$_REQUIRE"],[73,19,90,6],[73,20,90,6,"_dependencyMap"],[73,34,90,6],[73,51,90,6,"assert"],[73,57,90,6],[73,58,90,13,"key"],[73,61,90,16],[73,62,90,17,"x"],[73,63,90,18],[73,65,90,20],[73,84,90,39],[73,85,90,40],[74,6,91,4],[74,7,91,5],[74,13,91,11],[74,17,91,15],[74,21,91,19],[74,22,91,20,"ec"],[74,24,91,22],[74,25,91,23,"curve"],[74,30,91,28],[74,31,91,29,"type"],[74,35,91,33],[74,40,91,38],[74,47,91,45],[74,51,92,15],[74,55,92,19],[74,56,92,20,"ec"],[74,58,92,22],[74,59,92,23,"curve"],[74,64,92,28],[74,65,92,29,"type"],[74,69,92,33],[74,74,92,38],[74,83,92,47],[74,85,92,49],[75,8,93,6,"_$$_REQUIRE"],[75,19,93,6],[75,20,93,6,"_dependencyMap"],[75,34,93,6],[75,51,93,6,"assert"],[75,57,93,6],[75,58,93,13,"key"],[75,61,93,16],[75,62,93,17,"x"],[75,63,93,18],[75,67,93,22,"key"],[75,70,93,25],[75,71,93,26,"y"],[75,72,93,27],[75,74,93,29],[75,104,93,59],[75,105,93,60],[76,6,94,4],[77,6,95,4],[77,10,95,8],[77,11,95,9,"pub"],[77,14,95,12],[77,17,95,15],[77,21,95,19],[77,22,95,20,"ec"],[77,24,95,22],[77,25,95,23,"curve"],[77,30,95,28],[77,31,95,29,"point"],[77,36,95,34],[77,37,95,35,"key"],[77,40,95,38],[77,41,95,39,"x"],[77,42,95,40],[77,44,95,42,"key"],[77,47,95,45],[77,48,95,46,"y"],[77,49,95,47],[77,50,95,48],[78,6,96,4],[79,4,97,2],[80,4,98,2],[80,8,98,6],[80,9,98,7,"pub"],[80,12,98,10],[80,15,98,13],[80,19,98,17],[80,20,98,18,"ec"],[80,22,98,20],[80,23,98,21,"curve"],[80,28,98,26],[80,29,98,27,"decodePoint"],[80,40,98,38],[80,41,98,39,"key"],[80,44,98,42],[80,46,98,44,"enc"],[80,49,98,47],[80,50,98,48],[81,2,99,0],[81,3,99,1],[83,2,101,0],[84,2,102,0,"KeyPair"],[84,9,102,7],[84,10,102,8,"prototype"],[84,19,102,17],[84,20,102,18,"derive"],[84,26,102,24],[84,29,102,27],[84,38,102,36,"derive"],[84,44,102,42,"derive"],[84,45,102,43,"pub"],[84,48,102,46],[84,50,102,48],[85,4,103,2],[85,8,103,5],[85,9,103,6,"pub"],[85,12,103,9],[85,13,103,10,"validate"],[85,21,103,18],[85,22,103,19],[85,23,103,20],[85,25,103,22],[86,6,104,4,"_$$_REQUIRE"],[86,17,104,4],[86,18,104,4,"_dependencyMap"],[86,32,104,4],[86,49,104,4,"assert"],[86,55,104,4],[86,56,104,11,"pub"],[86,59,104,14],[86,60,104,15,"validate"],[86,68,104,23],[86,69,104,24],[86,70,104,25],[86,72,104,27],[86,100,104,55],[86,101,104,56],[87,4,105,2],[88,4,106,2],[88,11,106,9,"pub"],[88,14,106,12],[88,15,106,13,"mul"],[88,18,106,16],[88,19,106,17],[88,23,106,21],[88,24,106,22,"priv"],[88,28,106,26],[88,29,106,27],[88,30,106,28,"getX"],[88,34,106,32],[88,35,106,33],[88,36,106,34],[89,2,107,0],[89,3,107,1],[91,2,109,0],[92,2,110,0,"KeyPair"],[92,9,110,7],[92,10,110,8,"prototype"],[92,19,110,17],[92,20,110,18,"sign"],[92,24,110,22],[92,27,110,25],[92,36,110,34,"sign"],[92,40,110,38,"sign"],[92,41,110,39,"msg"],[92,44,110,42],[92,46,110,44,"enc"],[92,49,110,47],[92,51,110,49,"options"],[92,58,110,56],[92,60,110,58],[93,4,111,2],[93,11,111,9],[93,15,111,13],[93,16,111,14,"ec"],[93,18,111,16],[93,19,111,17,"sign"],[93,23,111,21],[93,24,111,22,"msg"],[93,27,111,25],[93,29,111,27],[93,33,111,31],[93,35,111,33,"enc"],[93,38,111,36],[93,40,111,38,"options"],[93,47,111,45],[93,48,111,46],[94,2,112,0],[94,3,112,1],[95,2,114,0,"KeyPair"],[95,9,114,7],[95,10,114,8,"prototype"],[95,19,114,17],[95,20,114,18,"verify"],[95,26,114,24],[95,29,114,27],[95,38,114,36,"verify"],[95,44,114,42,"verify"],[95,45,114,43,"msg"],[95,48,114,46],[95,50,114,48,"signature"],[95,59,114,57],[95,61,114,59,"options"],[95,68,114,66],[95,70,114,68],[96,4,115,2],[96,11,115,9],[96,15,115,13],[96,16,115,14,"ec"],[96,18,115,16],[96,19,115,17,"verify"],[96,25,115,23],[96,26,115,24,"msg"],[96,29,115,27],[96,31,115,29,"signature"],[96,40,115,38],[96,42,115,40],[96,46,115,44],[96,48,115,46,"undefined"],[96,57,115,55],[96,59,115,57,"options"],[96,66,115,64],[96,67,115,65],[97,2,116,0],[97,3,116,1],[98,2,118,0,"KeyPair"],[98,9,118,7],[98,10,118,8,"prototype"],[98,19,118,17],[98,20,118,18,"inspect"],[98,27,118,25],[98,30,118,28],[98,39,118,37,"inspect"],[98,46,118,44,"inspect"],[98,47,118,44],[98,49,118,47],[99,4,119,2],[99,11,119,9],[99,24,119,22],[99,28,119,26],[99,32,119,30],[99,33,119,31,"priv"],[99,37,119,35],[99,41,119,39],[99,45,119,43],[99,46,119,44,"priv"],[99,50,119,48],[99,51,119,49,"toString"],[99,59,119,57],[99,60,119,58],[99,62,119,60],[99,64,119,62],[99,65,119,63],[99,66,119,64],[99,67,119,65],[99,70,120,9],[99,78,120,17],[99,82,120,21],[99,86,120,25],[99,87,120,26,"pub"],[99,90,120,29],[99,94,120,33],[99,98,120,37],[99,99,120,38,"pub"],[99,102,120,41],[99,103,120,42,"inspect"],[99,110,120,49],[99,111,120,50],[99,112,120,51],[99,113,120,52],[99,116,120,55],[99,120,120,59],[100,2,121,0],[100,3,121,1],[101,0,121,2],[101,3]],"functionMap":{"names":["<global>","KeyPair","fromPublic","fromPrivate","validate","getPublic","getPrivate","_importPrivate","_importPublic","derive","sign","verify","inspect"],"mappings":"AAA;ACM;CDU;qBEG;CFQ;sBGE;CHQ;6BIE;CJW;8BKE;CLc;+BME;CNK;mCOE;CPM;kCQE;CRe;2BSG;CTK;yBUG;CVE;2BWE;CXE;4BYE;CZG"}},"type":"js/module"}]}