{"dependencies":[{"name":"../../typeFields","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}},{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}}],"key":"JA6Y4U+9BJNyHBqSRMPAJW1YgVo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.PARTIAL_SIG) {\n      throw new Error('Decode Error: could not decode partialSig with key 0x' + keyVal.key.toString('hex'));\n    }\n    if (!(keyVal.key.length === 34 || keyVal.key.length === 66) || ![2, 3, 4].includes(keyVal.key[1])) {\n      throw new Error('Decode Error: partialSig has invalid pubkey in key 0x' + keyVal.key.toString('hex'));\n    }\n    var pubkey = keyVal.key.slice(1);\n    return {\n      pubkey: pubkey,\n      signature: keyVal.value\n    };\n  }\n  exports.decode = decode;\n  function encode(pSig) {\n    var head = Buffer.from([_$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.PARTIAL_SIG]);\n    return {\n      key: Buffer.concat([head, pSig.pubkey]),\n      value: pSig.signature\n    };\n  }\n  exports.encode = encode;\n  exports.expected = '{ pubkey: Buffer; signature: Buffer; }';\n  function check(data) {\n    return Buffer.isBuffer(data.pubkey) && Buffer.isBuffer(data.signature) && [33, 65].includes(data.pubkey.length) && [2, 3, 4].includes(data.pubkey[0]) && isDerSigWithSighash(data.signature);\n  }\n  exports.check = check;\n  function isDerSigWithSighash(buf) {\n    if (!Buffer.isBuffer(buf) || buf.length < 9) return false;\n    if (buf[0] !== 0x30) return false;\n    if (buf.length !== buf[1] + 3) return false;\n    if (buf[2] !== 0x02) return false;\n    var rLen = buf[3];\n    if (rLen > 33 || rLen < 1) return false;\n    if (buf[3 + rLen + 1] !== 0x02) return false;\n    var sLen = buf[3 + rLen + 2];\n    if (sLen > 33 || sLen < 1) return false;\n    if (buf.length !== 3 + rLen + 2 + sLen + 2) return false;\n    return true;\n  }\n  function canAddToArray(array, item, dupeSet) {\n    var dupeString = item.pubkey.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(function (v) {\n      return v.pubkey.equals(item.pubkey);\n    }).length === 0;\n  }\n  exports.canAddToArray = canAddToArray;\n});","lineCount":56,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,4,0],[7,11,4,9,"decode"],[7,17,4,15,"decode"],[7,18,4,16,"keyVal"],[7,24,4,22],[7,26,4,24],[8,4,5,2],[8,8,5,6,"keyVal"],[8,14,5,12],[8,15,5,13,"key"],[8,18,5,16],[8,19,5,17],[8,20,5,18],[8,21,5,19],[8,26,5,24,"_$$_REQUIRE"],[8,37,5,24],[8,38,5,24,"_dependencyMap"],[8,52,5,24],[8,77,5,37,"InputTypes"],[8,87,5,47],[8,88,5,48,"PARTIAL_SIG"],[8,99,5,59],[8,101,5,61],[9,6,6,4],[9,12,6,10],[9,16,6,14,"Error"],[9,21,6,19],[9,22,7,6],[9,77,7,61],[9,80,8,8,"keyVal"],[9,86,8,14],[9,87,8,15,"key"],[9,90,8,18],[9,91,8,19,"toString"],[9,99,8,27],[9,100,8,28],[9,105,8,33],[9,106,9,4],[9,107,9,5],[10,4,10,2],[11,4,11,2],[11,8,12,4],[11,10,12,6,"keyVal"],[11,16,12,12],[11,17,12,13,"key"],[11,20,12,16],[11,21,12,17,"length"],[11,27,12,23],[11,32,12,28],[11,34,12,30],[11,38,12,34,"keyVal"],[11,44,12,40],[11,45,12,41,"key"],[11,48,12,44],[11,49,12,45,"length"],[11,55,12,51],[11,60,12,56],[11,62,12,58],[11,63,12,59],[11,67,13,4],[11,68,13,5],[11,69,13,6],[11,70,13,7],[11,72,13,9],[11,73,13,10],[11,75,13,12],[11,76,13,13],[11,77,13,14],[11,78,13,15,"includes"],[11,86,13,23],[11,87,13,24,"keyVal"],[11,93,13,30],[11,94,13,31,"key"],[11,97,13,34],[11,98,13,35],[11,99,13,36],[11,100,13,37],[11,101,13,38],[11,103,14,4],[12,6,15,4],[12,12,15,10],[12,16,15,14,"Error"],[12,21,15,19],[12,22,16,6],[12,77,16,61],[12,80,17,8,"keyVal"],[12,86,17,14],[12,87,17,15,"key"],[12,90,17,18],[12,91,17,19,"toString"],[12,99,17,27],[12,100,17,28],[12,105,17,33],[12,106,18,4],[12,107,18,5],[13,4,19,2],[14,4,20,2],[14,8,20,8,"pubkey"],[14,14,20,14],[14,17,20,17,"keyVal"],[14,23,20,23],[14,24,20,24,"key"],[14,27,20,27],[14,28,20,28,"slice"],[14,33,20,33],[14,34,20,34],[14,35,20,35],[14,36,20,36],[15,4,21,2],[15,11,21,9],[16,6,22,4,"pubkey"],[16,12,22,10],[16,14,22,4,"pubkey"],[16,20,22,10],[17,6,23,4,"signature"],[17,15,23,13],[17,17,23,15,"keyVal"],[17,23,23,21],[17,24,23,22,"value"],[18,4,24,2],[18,5,24,3],[19,2,25,0],[20,2,26,0,"exports"],[20,9,26,7],[20,10,26,8,"decode"],[20,16,26,14],[20,19,26,17,"decode"],[20,25,26,23],[21,2,27,0],[21,11,27,9,"encode"],[21,17,27,15,"encode"],[21,18,27,16,"pSig"],[21,22,27,20],[21,24,27,22],[22,4,28,2],[22,8,28,8,"head"],[22,12,28,12],[22,15,28,15,"Buffer"],[22,21,28,21],[22,22,28,22,"from"],[22,26,28,26],[22,27,28,27],[22,28,28,28,"_$$_REQUIRE"],[22,39,28,28],[22,40,28,28,"_dependencyMap"],[22,54,28,28],[22,79,28,41,"InputTypes"],[22,89,28,51],[22,90,28,52,"PARTIAL_SIG"],[22,101,28,63],[22,102,28,64],[22,103,28,65],[23,4,29,2],[23,11,29,9],[24,6,30,4,"key"],[24,9,30,7],[24,11,30,9,"Buffer"],[24,17,30,15],[24,18,30,16,"concat"],[24,24,30,22],[24,25,30,23],[24,26,30,24,"head"],[24,30,30,28],[24,32,30,30,"pSig"],[24,36,30,34],[24,37,30,35,"pubkey"],[24,43,30,41],[24,44,30,42],[24,45,30,43],[25,6,31,4,"value"],[25,11,31,9],[25,13,31,11,"pSig"],[25,17,31,15],[25,18,31,16,"signature"],[26,4,32,2],[26,5,32,3],[27,2,33,0],[28,2,34,0,"exports"],[28,9,34,7],[28,10,34,8,"encode"],[28,16,34,14],[28,19,34,17,"encode"],[28,25,34,23],[29,2,35,0,"exports"],[29,9,35,7],[29,10,35,8,"expected"],[29,18,35,16],[29,21,35,19],[29,61,35,59],[30,2,36,0],[30,11,36,9,"check"],[30,16,36,14,"check"],[30,17,36,15,"data"],[30,21,36,19],[30,23,36,21],[31,4,37,2],[31,11,38,4,"Buffer"],[31,17,38,10],[31,18,38,11,"isBuffer"],[31,26,38,19],[31,27,38,20,"data"],[31,31,38,24],[31,32,38,25,"pubkey"],[31,38,38,31],[31,39,38,32],[31,43,39,4,"Buffer"],[31,49,39,10],[31,50,39,11,"isBuffer"],[31,58,39,19],[31,59,39,20,"data"],[31,63,39,24],[31,64,39,25,"signature"],[31,73,39,34],[31,74,39,35],[31,78,40,4],[31,79,40,5],[31,81,40,7],[31,83,40,9],[31,85,40,11],[31,86,40,12],[31,87,40,13,"includes"],[31,95,40,21],[31,96,40,22,"data"],[31,100,40,26],[31,101,40,27,"pubkey"],[31,107,40,33],[31,108,40,34,"length"],[31,114,40,40],[31,115,40,41],[31,119,41,4],[31,120,41,5],[31,121,41,6],[31,123,41,8],[31,124,41,9],[31,126,41,11],[31,127,41,12],[31,128,41,13],[31,129,41,14,"includes"],[31,137,41,22],[31,138,41,23,"data"],[31,142,41,27],[31,143,41,28,"pubkey"],[31,149,41,34],[31,150,41,35],[31,151,41,36],[31,152,41,37],[31,153,41,38],[31,157,42,4,"isDerSigWithSighash"],[31,176,42,23],[31,177,42,24,"data"],[31,181,42,28],[31,182,42,29,"signature"],[31,191,42,38],[31,192,42,39],[32,2,44,0],[33,2,45,0,"exports"],[33,9,45,7],[33,10,45,8,"check"],[33,15,45,13],[33,18,45,16,"check"],[33,23,45,21],[34,2,46,0],[34,11,46,9,"isDerSigWithSighash"],[34,30,46,28,"isDerSigWithSighash"],[34,31,46,29,"buf"],[34,34,46,32],[34,36,46,34],[35,4,47,2],[35,8,47,6],[35,9,47,7,"Buffer"],[35,15,47,13],[35,16,47,14,"isBuffer"],[35,24,47,22],[35,25,47,23,"buf"],[35,28,47,26],[35,29,47,27],[35,33,47,31,"buf"],[35,36,47,34],[35,37,47,35,"length"],[35,43,47,41],[35,46,47,44],[35,47,47,45],[35,49,47,47],[35,56,47,54],[35,61,47,59],[36,4,48,2],[36,8,48,6,"buf"],[36,11,48,9],[36,12,48,10],[36,13,48,11],[36,14,48,12],[36,19,48,17],[36,23,48,21],[36,25,48,23],[36,32,48,30],[36,37,48,35],[37,4,49,2],[37,8,49,6,"buf"],[37,11,49,9],[37,12,49,10,"length"],[37,18,49,16],[37,23,49,21,"buf"],[37,26,49,24],[37,27,49,25],[37,28,49,26],[37,29,49,27],[37,32,49,30],[37,33,49,31],[37,35,49,33],[37,42,49,40],[37,47,49,45],[38,4,50,2],[38,8,50,6,"buf"],[38,11,50,9],[38,12,50,10],[38,13,50,11],[38,14,50,12],[38,19,50,17],[38,23,50,21],[38,25,50,23],[38,32,50,30],[38,37,50,35],[39,4,51,2],[39,8,51,8,"rLen"],[39,12,51,12],[39,15,51,15,"buf"],[39,18,51,18],[39,19,51,19],[39,20,51,20],[39,21,51,21],[40,4,52,2],[40,8,52,6,"rLen"],[40,12,52,10],[40,15,52,13],[40,17,52,15],[40,21,52,19,"rLen"],[40,25,52,23],[40,28,52,26],[40,29,52,27],[40,31,52,29],[40,38,52,36],[40,43,52,41],[41,4,53,2],[41,8,53,6,"buf"],[41,11,53,9],[41,12,53,10],[41,13,53,11],[41,16,53,14,"rLen"],[41,20,53,18],[41,23,53,21],[41,24,53,22],[41,25,53,23],[41,30,53,28],[41,34,53,32],[41,36,53,34],[41,43,53,41],[41,48,53,46],[42,4,54,2],[42,8,54,8,"sLen"],[42,12,54,12],[42,15,54,15,"buf"],[42,18,54,18],[42,19,54,19],[42,20,54,20],[42,23,54,23,"rLen"],[42,27,54,27],[42,30,54,30],[42,31,54,31],[42,32,54,32],[43,4,55,2],[43,8,55,6,"sLen"],[43,12,55,10],[43,15,55,13],[43,17,55,15],[43,21,55,19,"sLen"],[43,25,55,23],[43,28,55,26],[43,29,55,27],[43,31,55,29],[43,38,55,36],[43,43,55,41],[44,4,56,2],[44,8,56,6,"buf"],[44,11,56,9],[44,12,56,10,"length"],[44,18,56,16],[44,23,56,21],[44,24,56,22],[44,27,56,25,"rLen"],[44,31,56,29],[44,34,56,32],[44,35,56,33],[44,38,56,36,"sLen"],[44,42,56,40],[44,45,56,43],[44,46,56,44],[44,48,56,46],[44,55,56,53],[44,60,56,58],[45,4,57,2],[45,11,57,9],[45,15,57,13],[46,2,58,0],[47,2,59,0],[47,11,59,9,"canAddToArray"],[47,24,59,22,"canAddToArray"],[47,25,59,23,"array"],[47,30,59,28],[47,32,59,30,"item"],[47,36,59,34],[47,38,59,36,"dupeSet"],[47,45,59,43],[47,47,59,45],[48,4,60,2],[48,8,60,8,"dupeString"],[48,18,60,18],[48,21,60,21,"item"],[48,25,60,25],[48,26,60,26,"pubkey"],[48,32,60,32],[48,33,60,33,"toString"],[48,41,60,41],[48,42,60,42],[48,47,60,47],[48,48,60,48],[49,4,61,2],[49,8,61,6,"dupeSet"],[49,15,61,13],[49,16,61,14,"has"],[49,19,61,17],[49,20,61,18,"dupeString"],[49,30,61,28],[49,31,61,29],[49,33,61,31],[49,40,61,38],[49,45,61,43],[50,4,62,2,"dupeSet"],[50,11,62,9],[50,12,62,10,"add"],[50,15,62,13],[50,16,62,14,"dupeString"],[50,26,62,24],[50,27,62,25],[51,4,63,2],[51,11,63,9,"array"],[51,16,63,14],[51,17,63,15,"filter"],[51,23,63,21],[51,24,63,22],[51,34,63,22,"v"],[51,35,63,23],[52,6,63,23],[52,13,63,27,"v"],[52,14,63,28],[52,15,63,29,"pubkey"],[52,21,63,35],[52,22,63,36,"equals"],[52,28,63,42],[52,29,63,43,"item"],[52,33,63,47],[52,34,63,48,"pubkey"],[52,40,63,54],[52,41,63,55],[53,4,63,55],[53,6,63,56],[53,7,63,57,"length"],[53,13,63,63],[53,18,63,68],[53,19,63,69],[54,2,64,0],[55,2,65,0,"exports"],[55,9,65,7],[55,10,65,8,"canAddToArray"],[55,23,65,21],[55,26,65,24,"canAddToArray"],[55,39,65,37],[56,0,65,38],[56,3]],"functionMap":{"names":["<global>","decode","encode","check","isDerSigWithSighash","canAddToArray","array.filter$argument_0"],"mappings":"AAA;ACG;CDqB;AEE;CFM;AGG;CHQ;AIE;CJY;AKC;sBCI,iCD;CLC"}},"type":"js/module"}]}