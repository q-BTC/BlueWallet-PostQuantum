{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":27,"index":405},"end":{"line":14,"column":54,"index":432}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  function makeConverter(TYPE_BYTE) {\n    function decode(keyVal) {\n      if (keyVal.key[0] !== TYPE_BYTE) {\n        throw new Error('Decode Error: could not decode witnessScript with key 0x' + tools.toHex(keyVal.key));\n      }\n      return keyVal.value;\n    }\n    function encode(data) {\n      var key = Uint8Array.from([TYPE_BYTE]);\n      return {\n        key: key,\n        value: data\n      };\n    }\n    var expected = 'Uint8Array';\n    function check(data) {\n      return data instanceof Uint8Array;\n    }\n    function canAdd(currentData, newData) {\n      return !!currentData && !!newData && currentData.witnessScript === undefined;\n    }\n    return {\n      decode: decode,\n      encode: encode,\n      check: check,\n      expected: expected,\n      canAdd: canAdd\n    };\n  }\n  exports.makeConverter = makeConverter;\n});","lineCount":45,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importStar"],[4,18,2,16],[4,21,3,3],[4,25,3,7],[4,29,3,11],[4,33,3,15],[4,34,3,16,"__importStar"],[4,46,3,28],[4,50,4,2],[4,60,4,11,"mod"],[4,63,4,14],[4,65,4,16],[5,4,5,4],[5,8,5,8,"mod"],[5,11,5,11],[5,15,5,15,"mod"],[5,18,5,18],[5,19,5,19,"__esModule"],[5,29,5,29],[5,31,5,31],[5,38,5,38,"mod"],[5,41,5,41],[6,4,6,4],[6,8,6,8,"result"],[6,14,6,14],[6,17,6,17],[6,18,6,18],[6,19,6,19],[7,4,7,4],[7,8,7,8,"mod"],[7,11,7,11],[7,15,7,15],[7,19,7,19],[7,21,8,6],[7,26,8,11],[7,30,8,15,"k"],[7,31,8,16],[7,35,8,20,"mod"],[7,38,8,23],[7,40,9,8],[7,44,9,12,"Object"],[7,50,9,18],[7,51,9,19,"hasOwnProperty"],[7,65,9,33],[7,66,9,34,"call"],[7,70,9,38],[7,71,9,39,"mod"],[7,74,9,42],[7,76,9,44,"k"],[7,77,9,45],[7,78,9,46],[7,80,9,48,"result"],[7,86,9,54],[7,87,9,55,"k"],[7,88,9,56],[7,89,9,57],[7,92,9,60,"mod"],[7,95,9,63],[7,96,9,64,"k"],[7,97,9,65],[7,98,9,66],[8,4,10,4,"result"],[8,10,10,10],[8,11,10,11],[8,20,10,20],[8,21,10,21],[8,24,10,24,"mod"],[8,27,10,27],[9,4,11,4],[9,11,11,11,"result"],[9,17,11,17],[10,2,12,2],[10,3,12,3],[11,2,13,0,"Object"],[11,8,13,6],[11,9,13,7,"defineProperty"],[11,23,13,21],[11,24,13,22,"exports"],[11,31,13,29],[11,33,13,31],[11,45,13,43],[11,47,13,45],[12,4,13,47,"value"],[12,9,13,52],[12,11,13,54],[13,2,13,59],[13,3,13,60],[13,4,13,61],[14,2,14,0],[14,6,14,6,"tools"],[14,11,14,11],[14,14,14,14,"__importStar"],[14,26,14,26],[14,27,14,27,"require"],[14,38,14,34],[14,39,14,34,"_dependencyMap"],[14,53,14,34],[14,76,14,53],[14,77,14,54],[14,78,14,55],[15,2,15,0],[15,11,15,9,"makeConverter"],[15,24,15,22,"makeConverter"],[15,25,15,23,"TYPE_BYTE"],[15,34,15,32],[15,36,15,34],[16,4,16,2],[16,13,16,11,"decode"],[16,19,16,17,"decode"],[16,20,16,18,"keyVal"],[16,26,16,24],[16,28,16,26],[17,6,17,4],[17,10,17,8,"keyVal"],[17,16,17,14],[17,17,17,15,"key"],[17,20,17,18],[17,21,17,19],[17,22,17,20],[17,23,17,21],[17,28,17,26,"TYPE_BYTE"],[17,37,17,35],[17,39,17,37],[18,8,18,6],[18,14,18,12],[18,18,18,16,"Error"],[18,23,18,21],[18,24,19,8],[18,82,19,66],[18,85,20,10,"tools"],[18,90,20,15],[18,91,20,16,"toHex"],[18,96,20,21],[18,97,20,22,"keyVal"],[18,103,20,28],[18,104,20,29,"key"],[18,107,20,32],[18,108,21,6],[18,109,21,7],[19,6,22,4],[20,6,23,4],[20,13,23,11,"keyVal"],[20,19,23,17],[20,20,23,18,"value"],[20,25,23,23],[21,4,24,2],[22,4,25,2],[22,13,25,11,"encode"],[22,19,25,17,"encode"],[22,20,25,18,"data"],[22,24,25,22],[22,26,25,24],[23,6,26,4],[23,10,26,10,"key"],[23,13,26,13],[23,16,26,16,"Uint8Array"],[23,26,26,26],[23,27,26,27,"from"],[23,31,26,31],[23,32,26,32],[23,33,26,33,"TYPE_BYTE"],[23,42,26,42],[23,43,26,43],[23,44,26,44],[24,6,27,4],[24,13,27,11],[25,8,28,6,"key"],[25,11,28,9],[25,13,28,6,"key"],[25,16,28,9],[26,8,29,6,"value"],[26,13,29,11],[26,15,29,13,"data"],[27,6,30,4],[27,7,30,5],[28,4,31,2],[29,4,32,2],[29,8,32,8,"expected"],[29,16,32,16],[29,19,32,19],[29,31,32,31],[30,4,33,2],[30,13,33,11,"check"],[30,18,33,16,"check"],[30,19,33,17,"data"],[30,23,33,21],[30,25,33,23],[31,6,34,4],[31,13,34,11,"data"],[31,17,34,15],[31,29,34,27,"Uint8Array"],[31,39,34,37],[32,4,35,2],[33,4,36,2],[33,13,36,11,"canAdd"],[33,19,36,17,"canAdd"],[33,20,36,18,"currentData"],[33,31,36,29],[33,33,36,31,"newData"],[33,40,36,38],[33,42,36,40],[34,6,37,4],[34,13,38,6],[34,14,38,7],[34,15,38,8,"currentData"],[34,26,38,19],[34,30,38,23],[34,31,38,24],[34,32,38,25,"newData"],[34,39,38,32],[34,43,38,36,"currentData"],[34,54,38,47],[34,55,38,48,"witnessScript"],[34,68,38,61],[34,73,38,66,"undefined"],[34,82,38,75],[35,4,40,2],[36,4,41,2],[36,11,41,9],[37,6,42,4,"decode"],[37,12,42,10],[37,14,42,4,"decode"],[37,20,42,10],[38,6,43,4,"encode"],[38,12,43,10],[38,14,43,4,"encode"],[38,20,43,10],[39,6,44,4,"check"],[39,11,44,9],[39,13,44,4,"check"],[39,18,44,9],[40,6,45,4,"expected"],[40,14,45,12],[40,16,45,4,"expected"],[40,24,45,12],[41,6,46,4,"canAdd"],[41,12,46,10],[41,14,46,4,"canAdd"],[42,4,47,2],[42,5,47,3],[43,2,48,0],[44,2,49,0,"exports"],[44,9,49,7],[44,10,49,8,"makeConverter"],[44,23,49,21],[44,26,49,24,"makeConverter"],[44,39,49,37],[45,0,49,38],[45,3]],"functionMap":{"names":["<global>","<anonymous>","makeConverter","decode","encode","check","canAdd"],"mappings":"AAA;ECG;GDQ;AEG;ECC;GDQ;EEC;GFM;EGE;GHE;EIC;GJI;CFQ"}},"type":"js/module"}]}