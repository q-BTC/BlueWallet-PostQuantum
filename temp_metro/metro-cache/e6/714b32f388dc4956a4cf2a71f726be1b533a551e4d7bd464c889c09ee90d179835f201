{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":135,"column":0,"index":4217}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bip32","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"N06/O/9WKiQ+JvkVogn1t6zAaK0="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":41,"index":75}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"bs58check","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":28,"index":104}}],"key":"NLzwLXOhrhT51Y7aP9purlo+2cM="}},{"name":"electrum-mnemonic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":105},"end":{"line":4,"column":40,"index":145}}],"key":"b4QCQvkNs+MSdAmkDbo2ZB62QY4="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":147},"end":{"line":6,"column":47,"index":194}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"./hd-segwit-bech32-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":195},"end":{"line":7,"column":65,"index":260}}],"key":"/8jf+Tn+k3gWwMozMZchY/gL0gE="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.HDSegwitElectrumSeedP2WPKHWallet = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _bip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"bip32\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"bitcoinjs-lib\"));\n  var _bs58check = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"bs58check\"));\n  var mn = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"electrum-mnemonic\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../../blue_modules/noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var bip32 = (0, _bip.default)(_noble_ecc.default);\n  var PREFIX = mn.PREFIXES.segwit;\n  /**\n   * ElectrumSeed means that instead of BIP39 seed format it works with the format invented by Electrum wallet. Otherwise\n   * its a regular HD wallet that has all the properties of parent class.\n   *\n   * @see https://electrum.readthedocs.io/en/latest/seedphrase.html\n   */\n  var HDSegwitElectrumSeedP2WPKHWallet = exports.HDSegwitElectrumSeedP2WPKHWallet = /*#__PURE__*/function (_HDSegwitBech32Wallet) {\n    function HDSegwitElectrumSeedP2WPKHWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, HDSegwitElectrumSeedP2WPKHWallet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HDSegwitElectrumSeedP2WPKHWallet, [].concat(args));\n      // @ts-ignore: override\n      _this.type = HDSegwitElectrumSeedP2WPKHWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = HDSegwitElectrumSeedP2WPKHWallet.typeReadable;\n      return _this;\n    }\n    (0, _inherits2.default)(HDSegwitElectrumSeedP2WPKHWallet, _HDSegwitBech32Wallet);\n    return (0, _createClass2.default)(HDSegwitElectrumSeedP2WPKHWallet, [{\n      key: \"validateMnemonic\",\n      value: function validateMnemonic() {\n        return mn.validateMnemonic(this.secret, PREFIX);\n      }\n    }, {\n      key: \"allowBIP47\",\n      value: function allowBIP47() {\n        return false;\n      }\n    }, {\n      key: \"generate\",\n      value: function () {\n        var _generate = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('Not implemented');\n        });\n        function generate() {\n          return _generate.apply(this, arguments);\n        }\n        return generate;\n      }()\n    }, {\n      key: \"getXpub\",\n      value: function getXpub() {\n        if (this._xpub) {\n          return this._xpub; // cache hit\n        }\n        var args = {\n          prefix: PREFIX\n        };\n        if (this.passphrase) args.passphrase = this.passphrase;\n        var root = bip32.fromSeed(mn.mnemonicToSeedSync(this.secret, args));\n        var xpub = root.derivePath(\"m/0'\").neutered().toBase58();\n\n        // bitcoinjs does not support zpub yet, so we just convert it from xpub\n        var data = _bs58check.default.decode(xpub);\n        data = data.slice(4);\n        data = Buffer.concat([Buffer.from('04b24746', 'hex'), data]);\n        this._xpub = _bs58check.default.encode(data);\n        return this._xpub;\n      }\n    }, {\n      key: \"_getInternalAddressByIndex\",\n      value: function _getInternalAddressByIndex(index) {\n        index = index * 1; // cast to int\n        if (this.internal_addresses_cache[index]) return this.internal_addresses_cache[index]; // cache hit\n\n        var xpub = this._zpubToXpub(this.getXpub());\n        var node = bip32.fromBase58(xpub);\n        var address = bitcoin.payments.p2wpkh({\n          pubkey: node.derive(1).derive(index).publicKey\n        }).address;\n        if (!address) {\n          throw new Error('Internal error: no address in _getInternalAddressByIndex');\n        }\n        return this.internal_addresses_cache[index] = address;\n      }\n    }, {\n      key: \"_getExternalAddressByIndex\",\n      value: function _getExternalAddressByIndex(index) {\n        index = index * 1; // cast to int\n        if (this.external_addresses_cache[index]) return this.external_addresses_cache[index]; // cache hit\n\n        var xpub = this._zpubToXpub(this.getXpub());\n        var node = bip32.fromBase58(xpub);\n        var address = bitcoin.payments.p2wpkh({\n          pubkey: node.derive(0).derive(index).publicKey\n        }).address;\n        if (!address) {\n          throw new Error('Internal error: no address in _getExternalAddressByIndex');\n        }\n        return this.external_addresses_cache[index] = address;\n      }\n    }, {\n      key: \"_getWIFByIndex\",\n      value: function _getWIFByIndex(internal, index) {\n        if (!this.secret) return false;\n        var args = {\n          prefix: PREFIX\n        };\n        if (this.passphrase) args.passphrase = this.passphrase;\n        var root = bip32.fromSeed(mn.mnemonicToSeedSync(this.secret, args));\n        var path = `m/0'/${internal ? 1 : 0}/${index}`;\n        var child = root.derivePath(path);\n        return child.toWIF();\n      }\n    }, {\n      key: \"_getNodePubkeyByIndex\",\n      value: function _getNodePubkeyByIndex(node, index) {\n        index = index * 1; // cast to int\n\n        if (node === 0 && !this._node0) {\n          var xpub = this._zpubToXpub(this.getXpub());\n          var hdNode = bip32.fromBase58(xpub);\n          this._node0 = hdNode.derive(node);\n        }\n        if (node === 1 && !this._node1) {\n          var _xpub = this._zpubToXpub(this.getXpub());\n          var _hdNode = bip32.fromBase58(_xpub);\n          this._node1 = _hdNode.derive(node);\n        }\n        if (node === 0 && this._node0) {\n          return this._node0.derive(index).publicKey;\n        }\n        if (node === 1 && this._node1) {\n          return this._node1.derive(index).publicKey;\n        }\n        throw new Error('Internal error: this._node0 or this._node1 is undefined');\n      }\n    }, {\n      key: \"isSegwit\",\n      value: function isSegwit() {\n        return true;\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[12], \"./hd-segwit-bech32-wallet\").HDSegwitBech32Wallet);\n  HDSegwitElectrumSeedP2WPKHWallet.type = 'HDSegwitElectrumSeedP2WPKHWallet';\n  HDSegwitElectrumSeedP2WPKHWallet.typeReadable = 'HD Electrum (BIP32 P2WPKH)';\n  HDSegwitElectrumSeedP2WPKHWallet.derivationPath = \"m/0'\";\n});","lineCount":164,"map":[[13,2,1,0],[13,6,1,0,"_bip"],[13,10,1,0],[13,13,1,0,"_interopRequireDefault"],[13,35,1,0],[13,36,1,0,"_$$_REQUIRE"],[13,47,1,0],[13,48,1,0,"_dependencyMap"],[13,62,1,0],[14,2,2,0],[14,6,2,0,"bitcoin"],[14,13,2,0],[14,16,2,0,"_interopRequireWildcard"],[14,39,2,0],[14,40,2,0,"_$$_REQUIRE"],[14,51,2,0],[14,52,2,0,"_dependencyMap"],[14,66,2,0],[15,2,3,0],[15,6,3,0,"_bs58check"],[15,16,3,0],[15,19,3,0,"_interopRequireDefault"],[15,41,3,0],[15,42,3,0,"_$$_REQUIRE"],[15,53,3,0],[15,54,3,0,"_dependencyMap"],[15,68,3,0],[16,2,4,0],[16,6,4,0,"mn"],[16,8,4,0],[16,11,4,0,"_interopRequireWildcard"],[16,34,4,0],[16,35,4,0,"_$$_REQUIRE"],[16,46,4,0],[16,47,4,0,"_dependencyMap"],[16,61,4,0],[17,2,6,0],[17,6,6,0,"_noble_ecc"],[17,16,6,0],[17,19,6,0,"_interopRequireDefault"],[17,41,6,0],[17,42,6,0,"_$$_REQUIRE"],[17,53,6,0],[17,54,6,0,"_dependencyMap"],[17,68,6,0],[18,2,6,47],[18,11,6,47,"_getRequireWildcardCache"],[18,36,6,47,"e"],[18,37,6,47],[18,66,6,47,"WeakMap"],[18,73,6,47],[18,92,6,47,"r"],[18,93,6,47],[18,100,6,47,"WeakMap"],[18,107,6,47],[18,111,6,47,"t"],[18,112,6,47],[18,119,6,47,"WeakMap"],[18,126,6,47],[18,138,6,47,"_getRequireWildcardCache"],[18,162,6,47],[18,174,6,47,"_getRequireWildcardCache"],[18,199,6,47,"e"],[18,200,6,47],[18,211,6,47,"e"],[18,212,6,47],[18,215,6,47,"t"],[18,216,6,47],[18,219,6,47,"r"],[18,220,6,47],[18,225,6,47,"e"],[18,226,6,47],[19,2,6,47],[19,11,6,47,"_interopRequireWildcard"],[19,35,6,47,"e"],[19,36,6,47],[19,38,6,47,"r"],[19,39,6,47],[19,48,6,47,"r"],[19,49,6,47],[19,53,6,47,"e"],[19,54,6,47],[19,58,6,47,"e"],[19,59,6,47],[19,60,6,47,"__esModule"],[19,70,6,47],[19,79,6,47,"e"],[19,80,6,47],[19,95,6,47,"e"],[19,96,6,47],[19,119,6,47,"e"],[19,120,6,47],[19,145,6,47,"e"],[19,146,6,47],[19,157,6,47,"default"],[19,164,6,47],[19,166,6,47,"e"],[19,167,6,47],[19,175,6,47,"t"],[19,176,6,47],[19,179,6,47,"_getRequireWildcardCache"],[19,203,6,47],[19,204,6,47,"r"],[19,205,6,47],[19,212,6,47,"t"],[19,213,6,47],[19,217,6,47,"t"],[19,218,6,47],[19,219,6,47,"has"],[19,222,6,47],[19,223,6,47,"e"],[19,224,6,47],[19,234,6,47,"t"],[19,235,6,47],[19,236,6,47,"get"],[19,239,6,47],[19,240,6,47,"e"],[19,241,6,47],[19,248,6,47,"n"],[19,249,6,47],[19,254,6,47,"__proto__"],[19,263,6,47],[19,273,6,47,"a"],[19,274,6,47],[19,277,6,47,"Object"],[19,283,6,47],[19,284,6,47,"defineProperty"],[19,298,6,47],[19,302,6,47,"Object"],[19,308,6,47],[19,309,6,47,"getOwnPropertyDescriptor"],[19,333,6,47],[19,344,6,47,"u"],[19,345,6,47],[19,349,6,47,"e"],[19,350,6,47],[19,370,6,47,"u"],[19,371,6,47],[19,378,6,47,"hasOwnProperty"],[19,392,6,47],[19,393,6,47,"call"],[19,397,6,47],[19,398,6,47,"e"],[19,399,6,47],[19,401,6,47,"u"],[19,402,6,47],[19,411,6,47,"i"],[19,412,6,47],[19,415,6,47,"a"],[19,416,6,47],[19,419,6,47,"Object"],[19,425,6,47],[19,426,6,47,"getOwnPropertyDescriptor"],[19,450,6,47],[19,451,6,47,"e"],[19,452,6,47],[19,454,6,47,"u"],[19,455,6,47],[19,465,6,47,"i"],[19,466,6,47],[19,471,6,47,"i"],[19,472,6,47],[19,473,6,47,"get"],[19,476,6,47],[19,480,6,47,"i"],[19,481,6,47],[19,482,6,47,"set"],[19,485,6,47],[19,489,6,47,"Object"],[19,495,6,47],[19,496,6,47,"defineProperty"],[19,510,6,47],[19,511,6,47,"n"],[19,512,6,47],[19,514,6,47,"u"],[19,515,6,47],[19,517,6,47,"i"],[19,518,6,47],[19,522,6,47,"n"],[19,523,6,47],[19,524,6,47,"u"],[19,525,6,47],[19,529,6,47,"e"],[19,530,6,47],[19,531,6,47,"u"],[19,532,6,47],[19,544,6,47,"n"],[19,545,6,47],[19,546,6,47,"default"],[19,553,6,47],[19,556,6,47,"e"],[19,557,6,47],[19,559,6,47,"t"],[19,560,6,47],[19,564,6,47,"t"],[19,565,6,47],[19,566,6,47,"set"],[19,569,6,47],[19,570,6,47,"e"],[19,571,6,47],[19,573,6,47,"n"],[19,574,6,47],[19,577,6,47,"n"],[19,578,6,47],[20,2,6,47],[20,11,6,47,"_callSuper"],[20,22,6,47,"t"],[20,23,6,47],[20,25,6,47,"o"],[20,26,6,47],[20,28,6,47,"e"],[20,29,6,47],[20,40,6,47,"o"],[20,41,6,47],[20,48,6,47,"_getPrototypeOf2"],[20,64,6,47],[20,65,6,47,"default"],[20,72,6,47],[20,74,6,47,"o"],[20,75,6,47],[20,82,6,47,"_possibleConstructorReturn2"],[20,109,6,47],[20,110,6,47,"default"],[20,117,6,47],[20,119,6,47,"t"],[20,120,6,47],[20,122,6,47,"_isNativeReflectConstruct"],[20,147,6,47],[20,152,6,47,"Reflect"],[20,159,6,47],[20,160,6,47,"construct"],[20,169,6,47],[20,170,6,47,"o"],[20,171,6,47],[20,173,6,47,"e"],[20,174,6,47],[20,186,6,47,"_getPrototypeOf2"],[20,202,6,47],[20,203,6,47,"default"],[20,210,6,47],[20,212,6,47,"t"],[20,213,6,47],[20,215,6,47,"constructor"],[20,226,6,47],[20,230,6,47,"o"],[20,231,6,47],[20,232,6,47,"apply"],[20,237,6,47],[20,238,6,47,"t"],[20,239,6,47],[20,241,6,47,"e"],[20,242,6,47],[21,2,6,47],[21,11,6,47,"_isNativeReflectConstruct"],[21,37,6,47],[21,51,6,47,"t"],[21,52,6,47],[21,56,6,47,"Boolean"],[21,63,6,47],[21,64,6,47,"prototype"],[21,73,6,47],[21,74,6,47,"valueOf"],[21,81,6,47],[21,82,6,47,"call"],[21,86,6,47],[21,87,6,47,"Reflect"],[21,94,6,47],[21,95,6,47,"construct"],[21,104,6,47],[21,105,6,47,"Boolean"],[21,112,6,47],[21,145,6,47,"t"],[21,146,6,47],[21,159,6,47,"_isNativeReflectConstruct"],[21,184,6,47],[21,196,6,47,"_isNativeReflectConstruct"],[21,222,6,47],[21,235,6,47,"t"],[21,236,6,47],[22,2,9,0],[22,6,9,6,"bip32"],[22,11,9,11],[22,14,9,14],[22,18,9,14,"BIP32Factory"],[22,30,9,26],[22,32,9,27,"ecc"],[22,50,9,30],[22,51,9,31],[23,2,10,0],[23,6,10,6,"PREFIX"],[23,12,10,12],[23,15,10,15,"mn"],[23,17,10,17],[23,18,10,18,"PREFIXES"],[23,26,10,26],[23,27,10,27,"segwit"],[23,33,10,33],[24,2,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,2,17,0],[30,6,23,13,"HDSegwitElectrumSeedP2WPKHWallet"],[30,38,23,45],[30,41,23,45,"exports"],[30,48,23,45],[30,49,23,45,"HDSegwitElectrumSeedP2WPKHWallet"],[30,81,23,45],[30,107,23,45,"_HDSegwitBech32Wallet"],[30,128,23,45],[31,4,23,45],[31,13,23,45,"HDSegwitElectrumSeedP2WPKHWallet"],[31,46,23,45],[32,6,23,45],[32,10,23,45,"_this"],[32,15,23,45],[33,6,23,45],[33,10,23,45,"_classCallCheck2"],[33,26,23,45],[33,27,23,45,"default"],[33,34,23,45],[33,42,23,45,"HDSegwitElectrumSeedP2WPKHWallet"],[33,74,23,45],[34,6,23,45],[34,15,23,45,"_len"],[34,19,23,45],[34,22,23,45,"arguments"],[34,31,23,45],[34,32,23,45,"length"],[34,38,23,45],[34,40,23,45,"args"],[34,44,23,45],[34,51,23,45,"Array"],[34,56,23,45],[34,57,23,45,"_len"],[34,61,23,45],[34,64,23,45,"_key"],[34,68,23,45],[34,74,23,45,"_key"],[34,78,23,45],[34,81,23,45,"_len"],[34,85,23,45],[34,87,23,45,"_key"],[34,91,23,45],[35,8,23,45,"args"],[35,12,23,45],[35,13,23,45,"_key"],[35,17,23,45],[35,21,23,45,"arguments"],[35,30,23,45],[35,31,23,45,"_key"],[35,35,23,45],[36,6,23,45],[37,6,23,45,"_this"],[37,11,23,45],[37,14,23,45,"_callSuper"],[37,24,23,45],[37,31,23,45,"HDSegwitElectrumSeedP2WPKHWallet"],[37,63,23,45],[37,68,23,45,"concat"],[37,74,23,45],[37,75,23,45,"args"],[37,79,23,45],[38,6,26,2],[39,6,26,2,"_this"],[39,11,26,2],[39,12,27,18,"type"],[39,16,27,22],[39,19,27,25,"HDSegwitElectrumSeedP2WPKHWallet"],[39,51,27,57],[39,52,27,58,"type"],[39,56,27,62],[40,6,28,2],[41,6,28,2,"_this"],[41,11,28,2],[41,12,29,18,"typeReadable"],[41,24,29,30],[41,27,29,33,"HDSegwitElectrumSeedP2WPKHWallet"],[41,59,29,65],[41,60,29,66,"typeReadable"],[41,72,29,78],[42,6,29,78],[42,13,29,78,"_this"],[42,18,29,78],[43,4,29,78],[44,4,29,78],[44,8,29,78,"_inherits2"],[44,18,29,78],[44,19,29,78,"default"],[44,26,29,78],[44,28,29,78,"HDSegwitElectrumSeedP2WPKHWallet"],[44,60,29,78],[44,62,29,78,"_HDSegwitBech32Wallet"],[44,83,29,78],[45,4,29,78],[45,15,29,78,"_createClass2"],[45,28,29,78],[45,29,29,78,"default"],[45,36,29,78],[45,38,29,78,"HDSegwitElectrumSeedP2WPKHWallet"],[45,70,29,78],[46,6,29,78,"key"],[46,9,29,78],[47,6,29,78,"value"],[47,11,29,78],[47,13,32,2],[47,22,32,2,"validateMnemonic"],[47,38,32,18,"validateMnemonic"],[47,39,32,18],[47,41,32,21],[48,8,33,4],[48,15,33,11,"mn"],[48,17,33,13],[48,18,33,14,"validateMnemonic"],[48,34,33,30],[48,35,33,31],[48,39,33,35],[48,40,33,36,"secret"],[48,46,33,42],[48,48,33,44,"PREFIX"],[48,54,33,50],[48,55,33,51],[49,6,34,2],[50,4,34,3],[51,6,34,3,"key"],[51,9,34,3],[52,6,34,3,"value"],[52,11,34,3],[52,13,36,2],[52,22,36,2,"allowBIP47"],[52,32,36,12,"allowBIP47"],[52,33,36,12],[52,35,36,15],[53,8,37,4],[53,15,37,11],[53,20,37,16],[54,6,38,2],[55,4,38,3],[56,6,38,3,"key"],[56,9,38,3],[57,6,38,3,"value"],[57,11,38,3],[58,8,38,3],[58,12,38,3,"_generate"],[58,21,38,3],[58,28,38,3,"_asyncToGenerator2"],[58,46,38,3],[58,47,38,3,"default"],[58,54,38,3],[58,56,40,2],[58,69,40,19],[59,10,41,4],[59,16,41,10],[59,20,41,14,"Error"],[59,25,41,19],[59,26,41,20],[59,43,41,37],[59,44,41,38],[60,8,42,2],[60,9,42,3],[61,8,42,3],[61,17,40,8,"generate"],[61,25,40,16,"generate"],[61,26,40,16],[62,10,40,16],[62,17,40,16,"_generate"],[62,26,40,16],[62,27,40,16,"apply"],[62,32,40,16],[62,39,40,16,"arguments"],[62,48,40,16],[63,8,40,16],[64,8,40,16],[64,15,40,8,"generate"],[64,23,40,16],[65,6,40,16],[66,4,40,16],[67,6,40,16,"key"],[67,9,40,16],[68,6,40,16,"value"],[68,11,40,16],[68,13,44,2],[68,22,44,2,"getXpub"],[68,29,44,9,"getXpub"],[68,30,44,9],[68,32,44,12],[69,8,45,4],[69,12,45,8],[69,16,45,12],[69,17,45,13,"_xpub"],[69,22,45,18],[69,24,45,20],[70,10,46,6],[70,17,46,13],[70,21,46,17],[70,22,46,18,"_xpub"],[70,27,46,23],[70,28,46,24],[70,29,46,25],[71,8,47,4],[72,8,48,4],[72,12,48,10,"args"],[72,16,48,24],[72,19,48,27],[73,10,48,29,"prefix"],[73,16,48,35],[73,18,48,37,"PREFIX"],[74,8,48,44],[74,9,48,45],[75,8,49,4],[75,12,49,8],[75,16,49,12],[75,17,49,13,"passphrase"],[75,27,49,23],[75,29,49,25,"args"],[75,33,49,29],[75,34,49,30,"passphrase"],[75,44,49,40],[75,47,49,43],[75,51,49,47],[75,52,49,48,"passphrase"],[75,62,49,58],[76,8,50,4],[76,12,50,10,"root"],[76,16,50,14],[76,19,50,17,"bip32"],[76,24,50,22],[76,25,50,23,"fromSeed"],[76,33,50,31],[76,34,50,32,"mn"],[76,36,50,34],[76,37,50,35,"mnemonicToSeedSync"],[76,55,50,53],[76,56,50,54],[76,60,50,58],[76,61,50,59,"secret"],[76,67,50,65],[76,69,50,67,"args"],[76,73,50,71],[76,74,50,72],[76,75,50,73],[77,8,51,4],[77,12,51,10,"xpub"],[77,16,51,14],[77,19,51,17,"root"],[77,23,51,21],[77,24,51,22,"derivePath"],[77,34,51,32],[77,35,51,33],[77,41,51,39],[77,42,51,40],[77,43,51,41,"neutered"],[77,51,51,49],[77,52,51,50],[77,53,51,51],[77,54,51,52,"toBase58"],[77,62,51,60],[77,63,51,61],[77,64,51,62],[79,8,53,4],[80,8,54,4],[80,12,54,8,"data"],[80,16,54,12],[80,19,54,15,"b58"],[80,37,54,18],[80,38,54,19,"decode"],[80,44,54,25],[80,45,54,26,"xpub"],[80,49,54,30],[80,50,54,31],[81,8,55,4,"data"],[81,12,55,8],[81,15,55,11,"data"],[81,19,55,15],[81,20,55,16,"slice"],[81,25,55,21],[81,26,55,22],[81,27,55,23],[81,28,55,24],[82,8,56,4,"data"],[82,12,56,8],[82,15,56,11,"Buffer"],[82,21,56,17],[82,22,56,18,"concat"],[82,28,56,24],[82,29,56,25],[82,30,56,26,"Buffer"],[82,36,56,32],[82,37,56,33,"from"],[82,41,56,37],[82,42,56,38],[82,52,56,48],[82,54,56,50],[82,59,56,55],[82,60,56,56],[82,62,56,58,"data"],[82,66,56,62],[82,67,56,63],[82,68,56,64],[83,8,57,4],[83,12,57,8],[83,13,57,9,"_xpub"],[83,18,57,14],[83,21,57,17,"b58"],[83,39,57,20],[83,40,57,21,"encode"],[83,46,57,27],[83,47,57,28,"data"],[83,51,57,32],[83,52,57,33],[84,8,59,4],[84,15,59,11],[84,19,59,15],[84,20,59,16,"_xpub"],[84,25,59,21],[85,6,60,2],[86,4,60,3],[87,6,60,3,"key"],[87,9,60,3],[88,6,60,3,"value"],[88,11,60,3],[88,13,62,2],[88,22,62,2,"_getInternalAddressByIndex"],[88,48,62,28,"_getInternalAddressByIndex"],[88,49,62,29,"index"],[88,54,62,42],[88,56,62,44],[89,8,63,4,"index"],[89,13,63,9],[89,16,63,12,"index"],[89,21,63,17],[89,24,63,20],[89,25,63,21],[89,26,63,22],[89,27,63,23],[90,8,64,4],[90,12,64,8],[90,16,64,12],[90,17,64,13,"internal_addresses_cache"],[90,41,64,37],[90,42,64,38,"index"],[90,47,64,43],[90,48,64,44],[90,50,64,46],[90,57,64,53],[90,61,64,57],[90,62,64,58,"internal_addresses_cache"],[90,86,64,82],[90,87,64,83,"index"],[90,92,64,88],[90,93,64,89],[90,94,64,90],[90,95,64,91],[92,8,66,4],[92,12,66,10,"xpub"],[92,16,66,14],[92,19,66,17],[92,23,66,21],[92,24,66,22,"_zpubToXpub"],[92,35,66,33],[92,36,66,34],[92,40,66,38],[92,41,66,39,"getXpub"],[92,48,66,46],[92,49,66,47],[92,50,66,48],[92,51,66,49],[93,8,67,4],[93,12,67,10,"node"],[93,16,67,14],[93,19,67,17,"bip32"],[93,24,67,22],[93,25,67,23,"fromBase58"],[93,35,67,33],[93,36,67,34,"xpub"],[93,40,67,38],[93,41,67,39],[94,8,68,4],[94,12,68,10,"address"],[94,19,68,17],[94,22,68,20,"bitcoin"],[94,29,68,27],[94,30,68,28,"payments"],[94,38,68,36],[94,39,68,37,"p2wpkh"],[94,45,68,43],[94,46,68,44],[95,10,69,6,"pubkey"],[95,16,69,12],[95,18,69,14,"node"],[95,22,69,18],[95,23,69,19,"derive"],[95,29,69,25],[95,30,69,26],[95,31,69,27],[95,32,69,28],[95,33,69,29,"derive"],[95,39,69,35],[95,40,69,36,"index"],[95,45,69,41],[95,46,69,42],[95,47,69,43,"publicKey"],[96,8,70,4],[96,9,70,5],[96,10,70,6],[96,11,70,7,"address"],[96,18,70,14],[97,8,71,4],[97,12,71,8],[97,13,71,9,"address"],[97,20,71,16],[97,22,71,18],[98,10,72,6],[98,16,72,12],[98,20,72,16,"Error"],[98,25,72,21],[98,26,72,22],[98,84,72,80],[98,85,72,81],[99,8,73,4],[100,8,75,4],[100,15,75,12],[100,19,75,16],[100,20,75,17,"internal_addresses_cache"],[100,44,75,41],[100,45,75,42,"index"],[100,50,75,47],[100,51,75,48],[100,54,75,51,"address"],[100,61,75,58],[101,6,76,2],[102,4,76,3],[103,6,76,3,"key"],[103,9,76,3],[104,6,76,3,"value"],[104,11,76,3],[104,13,78,2],[104,22,78,2,"_getExternalAddressByIndex"],[104,48,78,28,"_getExternalAddressByIndex"],[104,49,78,29,"index"],[104,54,78,42],[104,56,78,44],[105,8,79,4,"index"],[105,13,79,9],[105,16,79,12,"index"],[105,21,79,17],[105,24,79,20],[105,25,79,21],[105,26,79,22],[105,27,79,23],[106,8,80,4],[106,12,80,8],[106,16,80,12],[106,17,80,13,"external_addresses_cache"],[106,41,80,37],[106,42,80,38,"index"],[106,47,80,43],[106,48,80,44],[106,50,80,46],[106,57,80,53],[106,61,80,57],[106,62,80,58,"external_addresses_cache"],[106,86,80,82],[106,87,80,83,"index"],[106,92,80,88],[106,93,80,89],[106,94,80,90],[106,95,80,91],[108,8,82,4],[108,12,82,10,"xpub"],[108,16,82,14],[108,19,82,17],[108,23,82,21],[108,24,82,22,"_zpubToXpub"],[108,35,82,33],[108,36,82,34],[108,40,82,38],[108,41,82,39,"getXpub"],[108,48,82,46],[108,49,82,47],[108,50,82,48],[108,51,82,49],[109,8,83,4],[109,12,83,10,"node"],[109,16,83,14],[109,19,83,17,"bip32"],[109,24,83,22],[109,25,83,23,"fromBase58"],[109,35,83,33],[109,36,83,34,"xpub"],[109,40,83,38],[109,41,83,39],[110,8,84,4],[110,12,84,10,"address"],[110,19,84,17],[110,22,84,20,"bitcoin"],[110,29,84,27],[110,30,84,28,"payments"],[110,38,84,36],[110,39,84,37,"p2wpkh"],[110,45,84,43],[110,46,84,44],[111,10,85,6,"pubkey"],[111,16,85,12],[111,18,85,14,"node"],[111,22,85,18],[111,23,85,19,"derive"],[111,29,85,25],[111,30,85,26],[111,31,85,27],[111,32,85,28],[111,33,85,29,"derive"],[111,39,85,35],[111,40,85,36,"index"],[111,45,85,41],[111,46,85,42],[111,47,85,43,"publicKey"],[112,8,86,4],[112,9,86,5],[112,10,86,6],[112,11,86,7,"address"],[112,18,86,14],[113,8,87,4],[113,12,87,8],[113,13,87,9,"address"],[113,20,87,16],[113,22,87,18],[114,10,88,6],[114,16,88,12],[114,20,88,16,"Error"],[114,25,88,21],[114,26,88,22],[114,84,88,80],[114,85,88,81],[115,8,89,4],[116,8,91,4],[116,15,91,12],[116,19,91,16],[116,20,91,17,"external_addresses_cache"],[116,44,91,41],[116,45,91,42,"index"],[116,50,91,47],[116,51,91,48],[116,54,91,51,"address"],[116,61,91,58],[117,6,92,2],[118,4,92,3],[119,6,92,3,"key"],[119,9,92,3],[120,6,92,3,"value"],[120,11,92,3],[120,13,94,2],[120,22,94,2,"_getWIFByIndex"],[120,36,94,16,"_getWIFByIndex"],[120,37,94,17,"internal"],[120,45,94,34],[120,47,94,36,"index"],[120,52,94,49],[120,54,94,67],[121,8,95,4],[121,12,95,8],[121,13,95,9],[121,17,95,13],[121,18,95,14,"secret"],[121,24,95,20],[121,26,95,22],[121,33,95,29],[121,38,95,34],[122,8,96,4],[122,12,96,10,"args"],[122,16,96,24],[122,19,96,27],[123,10,96,29,"prefix"],[123,16,96,35],[123,18,96,37,"PREFIX"],[124,8,96,44],[124,9,96,45],[125,8,97,4],[125,12,97,8],[125,16,97,12],[125,17,97,13,"passphrase"],[125,27,97,23],[125,29,97,25,"args"],[125,33,97,29],[125,34,97,30,"passphrase"],[125,44,97,40],[125,47,97,43],[125,51,97,47],[125,52,97,48,"passphrase"],[125,62,97,58],[126,8,98,4],[126,12,98,10,"root"],[126,16,98,14],[126,19,98,17,"bip32"],[126,24,98,22],[126,25,98,23,"fromSeed"],[126,33,98,31],[126,34,98,32,"mn"],[126,36,98,34],[126,37,98,35,"mnemonicToSeedSync"],[126,55,98,53],[126,56,98,54],[126,60,98,58],[126,61,98,59,"secret"],[126,67,98,65],[126,69,98,67,"args"],[126,73,98,71],[126,74,98,72],[126,75,98,73],[127,8,99,4],[127,12,99,10,"path"],[127,16,99,14],[127,19,99,17],[127,27,99,25,"internal"],[127,35,99,33],[127,38,99,36],[127,39,99,37],[127,42,99,40],[127,43,99,41],[127,47,99,45,"index"],[127,52,99,50],[127,54,99,52],[128,8,100,4],[128,12,100,10,"child"],[128,17,100,15],[128,20,100,18,"root"],[128,24,100,22],[128,25,100,23,"derivePath"],[128,35,100,33],[128,36,100,34,"path"],[128,40,100,38],[128,41,100,39],[129,8,102,4],[129,15,102,11,"child"],[129,20,102,16],[129,21,102,17,"toWIF"],[129,26,102,22],[129,27,102,23],[129,28,102,24],[130,6,103,2],[131,4,103,3],[132,6,103,3,"key"],[132,9,103,3],[133,6,103,3,"value"],[133,11,103,3],[133,13,105,2],[133,22,105,2,"_getNodePubkeyByIndex"],[133,43,105,23,"_getNodePubkeyByIndex"],[133,44,105,24,"node"],[133,48,105,36],[133,50,105,38,"index"],[133,55,105,51],[133,57,105,53],[134,8,106,4,"index"],[134,13,106,9],[134,16,106,12,"index"],[134,21,106,17],[134,24,106,20],[134,25,106,21],[134,26,106,22],[134,27,106,23],[136,8,108,4],[136,12,108,8,"node"],[136,16,108,12],[136,21,108,17],[136,22,108,18],[136,26,108,22],[136,27,108,23],[136,31,108,27],[136,32,108,28,"_node0"],[136,38,108,34],[136,40,108,36],[137,10,109,6],[137,14,109,12,"xpub"],[137,18,109,16],[137,21,109,19],[137,25,109,23],[137,26,109,24,"_zpubToXpub"],[137,37,109,35],[137,38,109,36],[137,42,109,40],[137,43,109,41,"getXpub"],[137,50,109,48],[137,51,109,49],[137,52,109,50],[137,53,109,51],[138,10,110,6],[138,14,110,12,"hdNode"],[138,20,110,18],[138,23,110,21,"bip32"],[138,28,110,26],[138,29,110,27,"fromBase58"],[138,39,110,37],[138,40,110,38,"xpub"],[138,44,110,42],[138,45,110,43],[139,10,111,6],[139,14,111,10],[139,15,111,11,"_node0"],[139,21,111,17],[139,24,111,20,"hdNode"],[139,30,111,26],[139,31,111,27,"derive"],[139,37,111,33],[139,38,111,34,"node"],[139,42,111,38],[139,43,111,39],[140,8,112,4],[141,8,114,4],[141,12,114,8,"node"],[141,16,114,12],[141,21,114,17],[141,22,114,18],[141,26,114,22],[141,27,114,23],[141,31,114,27],[141,32,114,28,"_node1"],[141,38,114,34],[141,40,114,36],[142,10,115,6],[142,14,115,12,"xpub"],[142,19,115,16],[142,22,115,19],[142,26,115,23],[142,27,115,24,"_zpubToXpub"],[142,38,115,35],[142,39,115,36],[142,43,115,40],[142,44,115,41,"getXpub"],[142,51,115,48],[142,52,115,49],[142,53,115,50],[142,54,115,51],[143,10,116,6],[143,14,116,12,"hdNode"],[143,21,116,18],[143,24,116,21,"bip32"],[143,29,116,26],[143,30,116,27,"fromBase58"],[143,40,116,37],[143,41,116,38,"xpub"],[143,46,116,42],[143,47,116,43],[144,10,117,6],[144,14,117,10],[144,15,117,11,"_node1"],[144,21,117,17],[144,24,117,20,"hdNode"],[144,31,117,26],[144,32,117,27,"derive"],[144,38,117,33],[144,39,117,34,"node"],[144,43,117,38],[144,44,117,39],[145,8,118,4],[146,8,120,4],[146,12,120,8,"node"],[146,16,120,12],[146,21,120,17],[146,22,120,18],[146,26,120,22],[146,30,120,26],[146,31,120,27,"_node0"],[146,37,120,33],[146,39,120,35],[147,10,121,6],[147,17,121,13],[147,21,121,17],[147,22,121,18,"_node0"],[147,28,121,24],[147,29,121,25,"derive"],[147,35,121,31],[147,36,121,32,"index"],[147,41,121,37],[147,42,121,38],[147,43,121,39,"publicKey"],[147,52,121,48],[148,8,122,4],[149,8,124,4],[149,12,124,8,"node"],[149,16,124,12],[149,21,124,17],[149,22,124,18],[149,26,124,22],[149,30,124,26],[149,31,124,27,"_node1"],[149,37,124,33],[149,39,124,35],[150,10,125,6],[150,17,125,13],[150,21,125,17],[150,22,125,18,"_node1"],[150,28,125,24],[150,29,125,25,"derive"],[150,35,125,31],[150,36,125,32,"index"],[150,41,125,37],[150,42,125,38],[150,43,125,39,"publicKey"],[150,52,125,48],[151,8,126,4],[152,8,128,4],[152,14,128,10],[152,18,128,14,"Error"],[152,23,128,19],[152,24,128,20],[152,81,128,77],[152,82,128,78],[153,6,129,2],[154,4,129,3],[155,6,129,3,"key"],[155,9,129,3],[156,6,129,3,"value"],[156,11,129,3],[156,13,131,2],[156,22,131,2,"isSegwit"],[156,30,131,10,"isSegwit"],[156,31,131,10],[156,33,131,13],[157,8,132,4],[157,15,132,11],[157,19,132,15],[158,6,133,2],[159,4,133,3],[160,2,133,3],[160,4,23,54,"HDSegwitBech32Wallet"],[160,35,23,54],[160,36,23,54,"HDSegwitBech32Wallet"],[160,85,23,74],[161,2,23,13,"HDSegwitElectrumSeedP2WPKHWallet"],[161,34,23,45],[161,35,24,18,"type"],[161,39,24,22],[161,42,24,25],[161,76,24,59],[162,2,23,13,"HDSegwitElectrumSeedP2WPKHWallet"],[162,34,23,45],[162,35,25,18,"typeReadable"],[162,47,25,30],[162,50,25,33],[162,78,25,61],[163,2,23,13,"HDSegwitElectrumSeedP2WPKHWallet"],[163,34,23,45],[163,35,30,18,"derivationPath"],[163,49,30,32],[163,52,30,35],[163,58,30,41],[164,0,30,41],[164,3]],"functionMap":{"names":["<global>","HDSegwitElectrumSeedP2WPKHWallet","HDSegwitElectrumSeedP2WPKHWallet#validateMnemonic","HDSegwitElectrumSeedP2WPKHWallet#allowBIP47","HDSegwitElectrumSeedP2WPKHWallet#generate","HDSegwitElectrumSeedP2WPKHWallet#getXpub","HDSegwitElectrumSeedP2WPKHWallet#_getInternalAddressByIndex","HDSegwitElectrumSeedP2WPKHWallet#_getExternalAddressByIndex","HDSegwitElectrumSeedP2WPKHWallet#_getWIFByIndex","HDSegwitElectrumSeedP2WPKHWallet#_getNodePubkeyByIndex","HDSegwitElectrumSeedP2WPKHWallet#isSegwit"],"mappings":"AAA;OCsB;ECS;GDE;EEE;GFE;EGE;GHE;EIE;GJgB;EKE;GLc;EME;GNc;EOE;GPS;EQE;GRwB;ESE;GTE;CDC"}},"type":"js/module"}]}