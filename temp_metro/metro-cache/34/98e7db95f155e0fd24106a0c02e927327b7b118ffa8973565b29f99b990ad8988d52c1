{"dependencies":[{"name":"./networks.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":58,"column":30,"index":1713},"end":{"line":58,"column":55,"index":1738}}],"key":"VwSWqjLk3lF+0uJetUWOf3RnSCs="}},{"name":"./payments/index.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":59,"column":30,"index":1771},"end":{"line":59,"column":61,"index":1802}}],"key":"7vBGlj2RIOjcpFXncnqqi6q14uc="}},{"name":"./script.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":60,"column":29,"index":1834},"end":{"line":60,"column":52,"index":1857}}],"key":"YwKathlCh3lFwWqarM8qXink2No="}},{"name":"bs58check","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":63,"column":36,"index":1975},"end":{"line":63,"column":56,"index":1995}}],"key":"4OUKwPALIMTasKbVl6WljOsf4WA="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":64,"column":27,"index":2025},"end":{"line":64,"column":54,"index":2052}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"valibot","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":65,"column":23,"index":2078},"end":{"line":65,"column":41,"index":2096}}],"key":"rRKi8w2T+ZK7uQFy8MRs6k6j9DA="}},{"name":"bech32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":62,"column":17,"index":1920},"end":{"line":62,"column":34,"index":1937}},{"start":{"line":62,"column":17,"index":1920},"end":{"line":62,"column":34,"index":1937}},{"start":{"line":62,"column":17,"index":1920},"end":{"line":62,"column":34,"index":1937}},{"start":{"line":62,"column":17,"index":1920},"end":{"line":62,"column":34,"index":1937}},{"start":{"line":62,"column":17,"index":1920},"end":{"line":62,"column":34,"index":1937}},{"start":{"line":62,"column":17,"index":1920},"end":{"line":62,"column":34,"index":1937}}],"key":"ugm55roL35z1WKOi63WbzCYR5fI=","isOptional":false}},{"name":"./types.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":61,"column":19,"index":1879},"end":{"line":61,"column":41,"index":1901}},{"start":{"line":61,"column":19,"index":1879},"end":{"line":61,"column":41,"index":1901}}],"key":"WQrrQSPUEy7ImSCQXvQAA3uXTs4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, 'default', {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o['default'] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      default: mod\n    };\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.fromBase58Check = fromBase58Check;\n  exports.fromBech32 = fromBech32;\n  exports.toBase58Check = toBase58Check;\n  exports.toBech32 = toBech32;\n  exports.fromOutputScript = fromOutputScript;\n  exports.toOutputScript = toOutputScript;\n  var networks = __importStar(_$$_REQUIRE(_dependencyMap[0], \"./networks.cjs\"));\n  var payments = __importStar(_$$_REQUIRE(_dependencyMap[1], \"./payments/index.cjs\"));\n  var bscript = __importStar(_$$_REQUIRE(_dependencyMap[2], \"./script.cjs\"));\n  var bs58check_1 = __importDefault(_$$_REQUIRE(_dependencyMap[3], \"bs58check\"));\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[4], \"uint8array-tools\"));\n  var v = __importStar(_$$_REQUIRE(_dependencyMap[5], \"valibot\"));\n  var FUTURE_SEGWIT_MAX_SIZE = 40;\n  var FUTURE_SEGWIT_MIN_SIZE = 2;\n  var FUTURE_SEGWIT_MAX_VERSION = 16;\n  var FUTURE_SEGWIT_MIN_VERSION = 2;\n  var FUTURE_SEGWIT_VERSION_DIFF = 0x50;\n  var FUTURE_SEGWIT_VERSION_WARNING = 'WARNING: Sending to a future segwit version address can lead to loss of funds. ' + 'End users MUST be warned carefully in the GUI and asked if they wish to proceed ' + 'with caution. Wallets should verify the segwit version from the output of fromBech32, ' + 'then decide when it is safe to use which version of segwit.';\n  /**\n   * Converts an output buffer to a future segwit address.\n   * @param output - The output buffer.\n   * @param network - The network object.\n   * @returns The future segwit address.\n   * @throws {TypeError} If the program length or version is invalid for segwit address.\n   */\n  function _toFutureSegwitAddress(output, network) {\n    var data = output.slice(2);\n    if (data.length < FUTURE_SEGWIT_MIN_SIZE || data.length > FUTURE_SEGWIT_MAX_SIZE) throw new TypeError('Invalid program length for segwit address');\n    var version = output[0] - FUTURE_SEGWIT_VERSION_DIFF;\n    if (version < FUTURE_SEGWIT_MIN_VERSION || version > FUTURE_SEGWIT_MAX_VERSION) throw new TypeError('Invalid version for segwit address');\n    if (output[1] !== data.length) throw new TypeError('Invalid script for segwit address');\n    console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n    return toBech32(data, version, network.bech32);\n  }\n  /**\n   * Decodes a base58check encoded Bitcoin address and returns the version and hash.\n   *\n   * @param address - The base58check encoded Bitcoin address to decode.\n   * @returns An object containing the version and hash of the decoded address.\n   * @throws {TypeError} If the address is too short or too long.\n   */\n  function fromBase58Check(address) {\n    var payload = bs58check_1.default.decode(address);\n    // TODO: 4.0.0, move to \"toOutputScript\"\n    if (payload.length < 21) throw new TypeError(address + ' is too short');\n    if (payload.length > 21) throw new TypeError(address + ' is too long');\n    var version = tools.readUInt8(payload, 0);\n    var hash = payload.slice(1);\n    return {\n      version: version,\n      hash: hash\n    };\n  }\n  /**\n   * Converts a Bech32 or Bech32m encoded address to its corresponding data representation.\n   * @param address - The Bech32 or Bech32m encoded address.\n   * @returns An object containing the version, prefix, and data of the address.\n   * @throws {TypeError} If the address uses the wrong encoding.\n   */\n  function fromBech32(address) {\n    var result;\n    var version;\n    try {\n      result = _$$_REQUIRE(_dependencyMap[6], \"bech32\").bech32.decode(address);\n    } catch (e) {}\n    if (result) {\n      version = result.words[0];\n      if (version !== 0) throw new TypeError(address + ' uses wrong encoding');\n    } else {\n      result = _$$_REQUIRE(_dependencyMap[6], \"bech32\").bech32m.decode(address);\n      version = result.words[0];\n      if (version === 0) throw new TypeError(address + ' uses wrong encoding');\n    }\n    var data = _$$_REQUIRE(_dependencyMap[6], \"bech32\").bech32.fromWords(result.words.slice(1));\n    return {\n      version: version,\n      prefix: result.prefix,\n      data: Uint8Array.from(data)\n    };\n  }\n  /**\n   * Converts a hash to a Base58Check-encoded string.\n   * @param hash - The hash to be encoded.\n   * @param version - The version byte to be prepended to the encoded string.\n   * @returns The Base58Check-encoded string.\n   */\n  function toBase58Check(hash, version) {\n    v.parse(v.tuple([_$$_REQUIRE(_dependencyMap[7], \"./types.cjs\").Hash160bitSchema, _$$_REQUIRE(_dependencyMap[7], \"./types.cjs\").UInt8Schema]), [hash, version]);\n    var payload = new Uint8Array(21);\n    tools.writeUInt8(payload, 0, version);\n    payload.set(hash, 1);\n    return bs58check_1.default.encode(payload);\n  }\n  /**\n   * Converts a buffer to a Bech32 or Bech32m encoded string.\n   * @param data - The buffer to be encoded.\n   * @param version - The version number to be used in the encoding.\n   * @param prefix - The prefix string to be used in the encoding.\n   * @returns The Bech32 or Bech32m encoded string.\n   */\n  function toBech32(data, version, prefix) {\n    var words = _$$_REQUIRE(_dependencyMap[6], \"bech32\").bech32.toWords(data);\n    words.unshift(version);\n    return version === 0 ? _$$_REQUIRE(_dependencyMap[6], \"bech32\").bech32.encode(prefix, words) : _$$_REQUIRE(_dependencyMap[6], \"bech32\").bech32m.encode(prefix, words);\n  }\n  /**\n   * Converts an output script to a Bitcoin address.\n   * @param output - The output script as a Buffer.\n   * @param network - The Bitcoin network (optional).\n   * @returns The Bitcoin address corresponding to the output script.\n   * @throws If the output script has no matching address.\n   */\n  function fromOutputScript(output, network) {\n    // TODO: Network\n    network = network || networks.bitcoin;\n    try {\n      return payments.p2pkh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return payments.p2sh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return payments.p2wpkh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return payments.p2wsh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return payments.p2tr({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _toFutureSegwitAddress(output, network);\n    } catch (e) {}\n    throw new Error(bscript.toASM(output) + ' has no matching Address');\n  }\n  /**\n   * Converts a Bitcoin address to its corresponding output script.\n   * @param address - The Bitcoin address to convert.\n   * @param network - The Bitcoin network to use. Defaults to the Bitcoin network.\n   * @returns The corresponding output script as a Buffer.\n   * @throws If the address has an invalid prefix or no matching script.\n   */\n  function toOutputScript(address, network) {\n    network = network || networks.bitcoin;\n    var decodeBase58;\n    var decodeBech32;\n    try {\n      decodeBase58 = fromBase58Check(address);\n    } catch (e) {}\n    if (decodeBase58) {\n      if (decodeBase58.version === network.pubKeyHash) return payments.p2pkh({\n        hash: decodeBase58.hash\n      }).output;\n      if (decodeBase58.version === network.scriptHash) return payments.p2sh({\n        hash: decodeBase58.hash\n      }).output;\n    } else {\n      try {\n        decodeBech32 = fromBech32(address);\n      } catch (e) {}\n      if (decodeBech32) {\n        if (decodeBech32.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix');\n        if (decodeBech32.version === 0) {\n          if (decodeBech32.data.length === 20) return payments.p2wpkh({\n            hash: decodeBech32.data\n          }).output;\n          if (decodeBech32.data.length === 32) return payments.p2wsh({\n            hash: decodeBech32.data\n          }).output;\n        } else if (decodeBech32.version === 1) {\n          if (decodeBech32.data.length === 32) return payments.p2tr({\n            pubkey: decodeBech32.data\n          }).output;\n        } else if (decodeBech32.version >= FUTURE_SEGWIT_MIN_VERSION && decodeBech32.version <= FUTURE_SEGWIT_MAX_VERSION && decodeBech32.data.length >= FUTURE_SEGWIT_MIN_SIZE && decodeBech32.data.length <= FUTURE_SEGWIT_MAX_SIZE) {\n          console.warn(FUTURE_SEGWIT_VERSION_WARNING);\n          return bscript.compile([decodeBech32.version + FUTURE_SEGWIT_VERSION_DIFF, decodeBech32.data]);\n        }\n      }\n    }\n    throw new Error(address + ' has no matching Script');\n  }\n});","lineCount":239,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__createBinding"],[4,21,2,19],[4,24,3,3],[4,28,3,7],[4,32,3,11],[4,36,3,15],[4,37,3,16,"__createBinding"],[4,52,3,31],[4,57,4,3,"Object"],[4,63,4,9],[4,64,4,10,"create"],[4,70,4,16],[4,73,5,6],[4,83,5,16,"o"],[4,84,5,17],[4,86,5,19,"m"],[4,87,5,20],[4,89,5,22,"k"],[4,90,5,23],[4,92,5,25,"k2"],[4,94,5,27],[4,96,5,29],[5,4,6,8],[5,8,6,12,"k2"],[5,10,6,14],[5,15,6,19,"undefined"],[5,24,6,28],[5,26,6,30,"k2"],[5,28,6,32],[5,31,6,35,"k"],[5,32,6,36],[6,4,7,8],[6,8,7,12,"desc"],[6,12,7,16],[6,15,7,19,"Object"],[6,21,7,25],[6,22,7,26,"getOwnPropertyDescriptor"],[6,46,7,50],[6,47,7,51,"m"],[6,48,7,52],[6,50,7,54,"k"],[6,51,7,55],[6,52,7,56],[7,4,8,8],[7,8,9,10],[7,9,9,11,"desc"],[7,13,9,15],[7,18,10,11],[7,23,10,16],[7,27,10,20,"desc"],[7,31,10,24],[7,34,10,27],[7,35,10,28,"m"],[7,36,10,29],[7,37,10,30,"__esModule"],[7,47,10,40],[7,50,10,43,"desc"],[7,54,10,47],[7,55,10,48,"writable"],[7,63,10,56],[7,67,10,60,"desc"],[7,71,10,64],[7,72,10,65,"configurable"],[7,84,10,77],[7,85,10,78],[7,87,11,10],[8,6,12,10,"desc"],[8,10,12,14],[8,13,12,17],[9,8,13,12,"enumerable"],[9,18,13,22],[9,20,13,24],[9,24,13,28],[10,8,14,12,"get"],[10,11,14,15],[10,13,14,17],[10,22,14,12,"get"],[10,25,14,15,"get"],[10,26,14,15],[10,28,14,29],[11,10,15,14],[11,17,15,21,"m"],[11,18,15,22],[11,19,15,23,"k"],[11,20,15,24],[11,21,15,25],[12,8,16,12],[13,6,17,10],[13,7,17,11],[14,4,18,8],[15,4,19,8,"Object"],[15,10,19,14],[15,11,19,15,"defineProperty"],[15,25,19,29],[15,26,19,30,"o"],[15,27,19,31],[15,29,19,33,"k2"],[15,31,19,35],[15,33,19,37,"desc"],[15,37,19,41],[15,38,19,42],[16,2,20,6],[16,3,20,7],[16,6,21,6],[16,16,21,16,"o"],[16,17,21,17],[16,19,21,19,"m"],[16,20,21,20],[16,22,21,22,"k"],[16,23,21,23],[16,25,21,25,"k2"],[16,27,21,27],[16,29,21,29],[17,4,22,8],[17,8,22,12,"k2"],[17,10,22,14],[17,15,22,19,"undefined"],[17,24,22,28],[17,26,22,30,"k2"],[17,28,22,32],[17,31,22,35,"k"],[17,32,22,36],[18,4,23,8,"o"],[18,5,23,9],[18,6,23,10,"k2"],[18,8,23,12],[18,9,23,13],[18,12,23,16,"m"],[18,13,23,17],[18,14,23,18,"k"],[18,15,23,19],[18,16,23,20],[19,2,24,6],[19,3,24,7],[19,4,24,8],[20,2,25,0],[20,6,25,4,"__setModuleDefault"],[20,24,25,22],[20,27,26,3],[20,31,26,7],[20,35,26,11],[20,39,26,15],[20,40,26,16,"__setModuleDefault"],[20,58,26,34],[20,63,27,3,"Object"],[20,69,27,9],[20,70,27,10,"create"],[20,76,27,16],[20,79,28,6],[20,89,28,16,"o"],[20,90,28,17],[20,92,28,19,"v"],[20,93,28,20],[20,95,28,22],[21,4,29,8,"Object"],[21,10,29,14],[21,11,29,15,"defineProperty"],[21,25,29,29],[21,26,29,30,"o"],[21,27,29,31],[21,29,29,33],[21,38,29,42],[21,40,29,44],[22,6,29,46,"enumerable"],[22,16,29,56],[22,18,29,58],[22,22,29,62],[23,6,29,64,"value"],[23,11,29,69],[23,13,29,71,"v"],[24,4,29,73],[24,5,29,74],[24,6,29,75],[25,2,30,6],[25,3,30,7],[25,6,31,6],[25,16,31,16,"o"],[25,17,31,17],[25,19,31,19,"v"],[25,20,31,20],[25,22,31,22],[26,4,32,8,"o"],[26,5,32,9],[26,6,32,10],[26,15,32,19],[26,16,32,20],[26,19,32,23,"v"],[26,20,32,24],[27,2,33,6],[27,3,33,7],[27,4,33,8],[28,2,34,0],[28,6,34,4,"__importStar"],[28,18,34,16],[28,21,35,3],[28,25,35,7],[28,29,35,11],[28,33,35,15],[28,34,35,16,"__importStar"],[28,46,35,28],[28,50,36,2],[28,60,36,12,"mod"],[28,63,36,15],[28,65,36,17],[29,4,37,4],[29,8,37,8,"mod"],[29,11,37,11],[29,15,37,15,"mod"],[29,18,37,18],[29,19,37,19,"__esModule"],[29,29,37,29],[29,31,37,31],[29,38,37,38,"mod"],[29,41,37,41],[30,4,38,4],[30,8,38,8,"result"],[30,14,38,14],[30,17,38,17],[30,18,38,18],[30,19,38,19],[31,4,39,4],[31,8,39,8,"mod"],[31,11,39,11],[31,15,39,15],[31,19,39,19],[31,21,40,6],[31,26,40,11],[31,30,40,15,"k"],[31,31,40,16],[31,35,40,20,"mod"],[31,38,40,23],[31,40,41,8],[31,44,41,12,"k"],[31,45,41,13],[31,50,41,18],[31,59,41,27],[31,63,41,31,"Object"],[31,69,41,37],[31,70,41,38,"prototype"],[31,79,41,47],[31,80,41,48,"hasOwnProperty"],[31,94,41,62],[31,95,41,63,"call"],[31,99,41,67],[31,100,41,68,"mod"],[31,103,41,71],[31,105,41,73,"k"],[31,106,41,74],[31,107,41,75],[31,109,42,10,"__createBinding"],[31,124,42,25],[31,125,42,26,"result"],[31,131,42,32],[31,133,42,34,"mod"],[31,136,42,37],[31,138,42,39,"k"],[31,139,42,40],[31,140,42,41],[32,4,43,4,"__setModuleDefault"],[32,22,43,22],[32,23,43,23,"result"],[32,29,43,29],[32,31,43,31,"mod"],[32,34,43,34],[32,35,43,35],[33,4,44,4],[33,11,44,11,"result"],[33,17,44,17],[34,2,45,2],[34,3,45,3],[35,2,46,0],[35,6,46,4,"__importDefault"],[35,21,46,19],[35,24,47,3],[35,28,47,7],[35,32,47,11],[35,36,47,15],[35,37,47,16,"__importDefault"],[35,52,47,31],[35,56,48,2],[35,66,48,12,"mod"],[35,69,48,15],[35,71,48,17],[36,4,49,4],[36,11,49,11,"mod"],[36,14,49,14],[36,18,49,18,"mod"],[36,21,49,21],[36,22,49,22,"__esModule"],[36,32,49,32],[36,35,49,35,"mod"],[36,38,49,38],[36,41,49,41],[37,6,49,43,"default"],[37,13,49,50],[37,15,49,52,"mod"],[38,4,49,56],[38,5,49,57],[39,2,50,2],[39,3,50,3],[40,2,51,0,"Object"],[40,8,51,6],[40,9,51,7,"defineProperty"],[40,23,51,21],[40,24,51,22,"exports"],[40,31,51,29],[40,33,51,31],[40,45,51,43],[40,47,51,45],[41,4,51,47,"value"],[41,9,51,52],[41,11,51,54],[42,2,51,59],[42,3,51,60],[42,4,51,61],[43,2,52,0,"exports"],[43,9,52,7],[43,10,52,8,"fromBase58Check"],[43,25,52,23],[43,28,52,26,"fromBase58Check"],[43,43,52,41],[44,2,53,0,"exports"],[44,9,53,7],[44,10,53,8,"fromBech32"],[44,20,53,18],[44,23,53,21,"fromBech32"],[44,33,53,31],[45,2,54,0,"exports"],[45,9,54,7],[45,10,54,8,"toBase58Check"],[45,23,54,21],[45,26,54,24,"toBase58Check"],[45,39,54,37],[46,2,55,0,"exports"],[46,9,55,7],[46,10,55,8,"toBech32"],[46,18,55,16],[46,21,55,19,"toBech32"],[46,29,55,27],[47,2,56,0,"exports"],[47,9,56,7],[47,10,56,8,"fromOutputScript"],[47,26,56,24],[47,29,56,27,"fromOutputScript"],[47,45,56,43],[48,2,57,0,"exports"],[48,9,57,7],[48,10,57,8,"toOutputScript"],[48,24,57,22],[48,27,57,25,"toOutputScript"],[48,41,57,39],[49,2,58,0],[49,6,58,6,"networks"],[49,14,58,14],[49,17,58,17,"__importStar"],[49,29,58,29],[49,30,58,30,"require"],[49,41,58,37],[49,42,58,37,"_dependencyMap"],[49,56,58,37],[49,77,58,54],[49,78,58,55],[49,79,58,56],[50,2,59,0],[50,6,59,6,"payments"],[50,14,59,14],[50,17,59,17,"__importStar"],[50,29,59,29],[50,30,59,30,"require"],[50,41,59,37],[50,42,59,37,"_dependencyMap"],[50,56,59,37],[50,83,59,60],[50,84,59,61],[50,85,59,62],[51,2,60,0],[51,6,60,6,"bscript"],[51,13,60,13],[51,16,60,16,"__importStar"],[51,28,60,28],[51,29,60,29,"require"],[51,40,60,36],[51,41,60,36,"_dependencyMap"],[51,55,60,36],[51,74,60,51],[51,75,60,52],[51,76,60,53],[52,2,63,0],[52,6,63,6,"bs58check_1"],[52,17,63,17],[52,20,63,20,"__importDefault"],[52,35,63,35],[52,36,63,36,"require"],[52,47,63,43],[52,48,63,43,"_dependencyMap"],[52,62,63,43],[52,78,63,55],[52,79,63,56],[52,80,63,57],[53,2,64,0],[53,6,64,6,"tools"],[53,11,64,11],[53,14,64,14,"__importStar"],[53,26,64,26],[53,27,64,27,"require"],[53,38,64,34],[53,39,64,34,"_dependencyMap"],[53,53,64,34],[53,76,64,53],[53,77,64,54],[53,78,64,55],[54,2,65,0],[54,6,65,6,"v"],[54,7,65,7],[54,10,65,10,"__importStar"],[54,22,65,22],[54,23,65,23,"require"],[54,34,65,30],[54,35,65,30,"_dependencyMap"],[54,49,65,30],[54,63,65,40],[54,64,65,41],[54,65,65,42],[55,2,66,0],[55,6,66,6,"FUTURE_SEGWIT_MAX_SIZE"],[55,28,66,28],[55,31,66,31],[55,33,66,33],[56,2,67,0],[56,6,67,6,"FUTURE_SEGWIT_MIN_SIZE"],[56,28,67,28],[56,31,67,31],[56,32,67,32],[57,2,68,0],[57,6,68,6,"FUTURE_SEGWIT_MAX_VERSION"],[57,31,68,31],[57,34,68,34],[57,36,68,36],[58,2,69,0],[58,6,69,6,"FUTURE_SEGWIT_MIN_VERSION"],[58,31,69,31],[58,34,69,34],[58,35,69,35],[59,2,70,0],[59,6,70,6,"FUTURE_SEGWIT_VERSION_DIFF"],[59,32,70,32],[59,35,70,35],[59,39,70,39],[60,2,71,0],[60,6,71,6,"FUTURE_SEGWIT_VERSION_WARNING"],[60,35,71,35],[60,38,72,2],[60,119,72,83],[60,122,73,2],[60,204,73,84],[60,207,74,2],[60,295,74,90],[60,298,75,2],[60,359,75,63],[61,2,76,0],[62,0,77,0],[63,0,78,0],[64,0,79,0],[65,0,80,0],[66,0,81,0],[67,0,82,0],[68,2,83,0],[68,11,83,9,"_toFutureSegwitAddress"],[68,33,83,31,"_toFutureSegwitAddress"],[68,34,83,32,"output"],[68,40,83,38],[68,42,83,40,"network"],[68,49,83,47],[68,51,83,49],[69,4,84,2],[69,8,84,8,"data"],[69,12,84,12],[69,15,84,15,"output"],[69,21,84,21],[69,22,84,22,"slice"],[69,27,84,27],[69,28,84,28],[69,29,84,29],[69,30,84,30],[70,4,85,2],[70,8,86,4,"data"],[70,12,86,8],[70,13,86,9,"length"],[70,19,86,15],[70,22,86,18,"FUTURE_SEGWIT_MIN_SIZE"],[70,44,86,40],[70,48,87,4,"data"],[70,52,87,8],[70,53,87,9,"length"],[70,59,87,15],[70,62,87,18,"FUTURE_SEGWIT_MAX_SIZE"],[70,84,87,40],[70,86,89,4],[70,92,89,10],[70,96,89,14,"TypeError"],[70,105,89,23],[70,106,89,24],[70,149,89,67],[70,150,89,68],[71,4,90,2],[71,8,90,8,"version"],[71,15,90,15],[71,18,90,18,"output"],[71,24,90,24],[71,25,90,25],[71,26,90,26],[71,27,90,27],[71,30,90,30,"FUTURE_SEGWIT_VERSION_DIFF"],[71,56,90,56],[72,4,91,2],[72,8,92,4,"version"],[72,15,92,11],[72,18,92,14,"FUTURE_SEGWIT_MIN_VERSION"],[72,43,92,39],[72,47,93,4,"version"],[72,54,93,11],[72,57,93,14,"FUTURE_SEGWIT_MAX_VERSION"],[72,82,93,39],[72,84,95,4],[72,90,95,10],[72,94,95,14,"TypeError"],[72,103,95,23],[72,104,95,24],[72,140,95,60],[72,141,95,61],[73,4,96,2],[73,8,96,6,"output"],[73,14,96,12],[73,15,96,13],[73,16,96,14],[73,17,96,15],[73,22,96,20,"data"],[73,26,96,24],[73,27,96,25,"length"],[73,33,96,31],[73,35,97,4],[73,41,97,10],[73,45,97,14,"TypeError"],[73,54,97,23],[73,55,97,24],[73,90,97,59],[73,91,97,60],[74,4,98,2,"console"],[74,11,98,9],[74,12,98,10,"warn"],[74,16,98,14],[74,17,98,15,"FUTURE_SEGWIT_VERSION_WARNING"],[74,46,98,44],[74,47,98,45],[75,4,99,2],[75,11,99,9,"toBech32"],[75,19,99,17],[75,20,99,18,"data"],[75,24,99,22],[75,26,99,24,"version"],[75,33,99,31],[75,35,99,33,"network"],[75,42,99,40],[75,43,99,41,"bech32"],[75,49,99,47],[75,50,99,48],[76,2,100,0],[77,2,101,0],[78,0,102,0],[79,0,103,0],[80,0,104,0],[81,0,105,0],[82,0,106,0],[83,0,107,0],[84,2,108,0],[84,11,108,9,"fromBase58Check"],[84,26,108,24,"fromBase58Check"],[84,27,108,25,"address"],[84,34,108,32],[84,36,108,34],[85,4,109,2],[85,8,109,8,"payload"],[85,15,109,15],[85,18,109,18,"bs58check_1"],[85,29,109,29],[85,30,109,30,"default"],[85,37,109,37],[85,38,109,38,"decode"],[85,44,109,44],[85,45,109,45,"address"],[85,52,109,52],[85,53,109,53],[86,4,110,2],[87,4,111,2],[87,8,111,6,"payload"],[87,15,111,13],[87,16,111,14,"length"],[87,22,111,20],[87,25,111,23],[87,27,111,25],[87,29,111,27],[87,35,111,33],[87,39,111,37,"TypeError"],[87,48,111,46],[87,49,111,47,"address"],[87,56,111,54],[87,59,111,57],[87,74,111,72],[87,75,111,73],[88,4,112,2],[88,8,112,6,"payload"],[88,15,112,13],[88,16,112,14,"length"],[88,22,112,20],[88,25,112,23],[88,27,112,25],[88,29,112,27],[88,35,112,33],[88,39,112,37,"TypeError"],[88,48,112,46],[88,49,112,47,"address"],[88,56,112,54],[88,59,112,57],[88,73,112,71],[88,74,112,72],[89,4,113,2],[89,8,113,8,"version"],[89,15,113,15],[89,18,113,18,"tools"],[89,23,113,23],[89,24,113,24,"readUInt8"],[89,33,113,33],[89,34,113,34,"payload"],[89,41,113,41],[89,43,113,43],[89,44,113,44],[89,45,113,45],[90,4,114,2],[90,8,114,8,"hash"],[90,12,114,12],[90,15,114,15,"payload"],[90,22,114,22],[90,23,114,23,"slice"],[90,28,114,28],[90,29,114,29],[90,30,114,30],[90,31,114,31],[91,4,115,2],[91,11,115,9],[92,6,115,11,"version"],[92,13,115,18],[92,15,115,11,"version"],[92,22,115,18],[93,6,115,20,"hash"],[93,10,115,24],[93,12,115,20,"hash"],[94,4,115,25],[94,5,115,26],[95,2,116,0],[96,2,117,0],[97,0,118,0],[98,0,119,0],[99,0,120,0],[100,0,121,0],[101,0,122,0],[102,2,123,0],[102,11,123,9,"fromBech32"],[102,21,123,19,"fromBech32"],[102,22,123,20,"address"],[102,29,123,27],[102,31,123,29],[103,4,124,2],[103,8,124,6,"result"],[103,14,124,12],[104,4,125,2],[104,8,125,6,"version"],[104,15,125,13],[105,4,126,2],[105,8,126,6],[106,6,127,4,"result"],[106,12,127,10],[106,15,127,13,"_$$_REQUIRE"],[106,26,127,13],[106,27,127,13,"_dependencyMap"],[106,41,127,13],[106,56,127,22,"bech32"],[106,62,127,28],[106,63,127,29,"decode"],[106,69,127,35],[106,70,127,36,"address"],[106,77,127,43],[106,78,127,44],[107,4,128,2],[107,5,128,3],[107,6,128,4],[107,13,128,11,"e"],[107,14,128,12],[107,16,128,14],[107,17,128,15],[108,4,129,2],[108,8,129,6,"result"],[108,14,129,12],[108,16,129,14],[109,6,130,4,"version"],[109,13,130,11],[109,16,130,14,"result"],[109,22,130,20],[109,23,130,21,"words"],[109,28,130,26],[109,29,130,27],[109,30,130,28],[109,31,130,29],[110,6,131,4],[110,10,131,8,"version"],[110,17,131,15],[110,22,131,20],[110,23,131,21],[110,25,131,23],[110,31,131,29],[110,35,131,33,"TypeError"],[110,44,131,42],[110,45,131,43,"address"],[110,52,131,50],[110,55,131,53],[110,77,131,75],[110,78,131,76],[111,4,132,2],[111,5,132,3],[111,11,132,9],[112,6,133,4,"result"],[112,12,133,10],[112,15,133,13,"_$$_REQUIRE"],[112,26,133,13],[112,27,133,13,"_dependencyMap"],[112,41,133,13],[112,56,133,22,"bech32m"],[112,63,133,29],[112,64,133,30,"decode"],[112,70,133,36],[112,71,133,37,"address"],[112,78,133,44],[112,79,133,45],[113,6,134,4,"version"],[113,13,134,11],[113,16,134,14,"result"],[113,22,134,20],[113,23,134,21,"words"],[113,28,134,26],[113,29,134,27],[113,30,134,28],[113,31,134,29],[114,6,135,4],[114,10,135,8,"version"],[114,17,135,15],[114,22,135,20],[114,23,135,21],[114,25,135,23],[114,31,135,29],[114,35,135,33,"TypeError"],[114,44,135,42],[114,45,135,43,"address"],[114,52,135,50],[114,55,135,53],[114,77,135,75],[114,78,135,76],[115,4,136,2],[116,4,137,2],[116,8,137,8,"data"],[116,12,137,12],[116,15,137,15,"_$$_REQUIRE"],[116,26,137,15],[116,27,137,15,"_dependencyMap"],[116,41,137,15],[116,56,137,24,"bech32"],[116,62,137,30],[116,63,137,31,"fromWords"],[116,72,137,40],[116,73,137,41,"result"],[116,79,137,47],[116,80,137,48,"words"],[116,85,137,53],[116,86,137,54,"slice"],[116,91,137,59],[116,92,137,60],[116,93,137,61],[116,94,137,62],[116,95,137,63],[117,4,138,2],[117,11,138,9],[118,6,139,4,"version"],[118,13,139,11],[118,15,139,4,"version"],[118,22,139,11],[119,6,140,4,"prefix"],[119,12,140,10],[119,14,140,12,"result"],[119,20,140,18],[119,21,140,19,"prefix"],[119,27,140,25],[120,6,141,4,"data"],[120,10,141,8],[120,12,141,10,"Uint8Array"],[120,22,141,20],[120,23,141,21,"from"],[120,27,141,25],[120,28,141,26,"data"],[120,32,141,30],[121,4,142,2],[121,5,142,3],[122,2,143,0],[123,2,144,0],[124,0,145,0],[125,0,146,0],[126,0,147,0],[127,0,148,0],[128,0,149,0],[129,2,150,0],[129,11,150,9,"toBase58Check"],[129,24,150,22,"toBase58Check"],[129,25,150,23,"hash"],[129,29,150,27],[129,31,150,29,"version"],[129,38,150,36],[129,40,150,38],[130,4,151,2,"v"],[130,5,151,3],[130,6,151,4,"parse"],[130,11,151,9],[130,12,151,10,"v"],[130,13,151,11],[130,14,151,12,"tuple"],[130,19,151,17],[130,20,151,18],[130,21,151,19,"_$$_REQUIRE"],[130,32,151,19],[130,33,151,19,"_dependencyMap"],[130,47,151,19],[130,67,151,30,"Hash160bitSchema"],[130,83,151,46],[130,85,151,48,"_$$_REQUIRE"],[130,96,151,48],[130,97,151,48,"_dependencyMap"],[130,111,151,48],[130,131,151,59,"UInt8Schema"],[130,142,151,70],[130,143,151,71],[130,144,151,72],[130,146,151,74],[130,147,152,4,"hash"],[130,151,152,8],[130,153,153,4,"version"],[130,160,153,11],[130,161,154,3],[130,162,154,4],[131,4,155,2],[131,8,155,8,"payload"],[131,15,155,15],[131,18,155,18],[131,22,155,22,"Uint8Array"],[131,32,155,32],[131,33,155,33],[131,35,155,35],[131,36,155,36],[132,4,156,2,"tools"],[132,9,156,7],[132,10,156,8,"writeUInt8"],[132,20,156,18],[132,21,156,19,"payload"],[132,28,156,26],[132,30,156,28],[132,31,156,29],[132,33,156,31,"version"],[132,40,156,38],[132,41,156,39],[133,4,157,2,"payload"],[133,11,157,9],[133,12,157,10,"set"],[133,15,157,13],[133,16,157,14,"hash"],[133,20,157,18],[133,22,157,20],[133,23,157,21],[133,24,157,22],[134,4,158,2],[134,11,158,9,"bs58check_1"],[134,22,158,20],[134,23,158,21,"default"],[134,30,158,28],[134,31,158,29,"encode"],[134,37,158,35],[134,38,158,36,"payload"],[134,45,158,43],[134,46,158,44],[135,2,159,0],[136,2,160,0],[137,0,161,0],[138,0,162,0],[139,0,163,0],[140,0,164,0],[141,0,165,0],[142,0,166,0],[143,2,167,0],[143,11,167,9,"toBech32"],[143,19,167,17,"toBech32"],[143,20,167,18,"data"],[143,24,167,22],[143,26,167,24,"version"],[143,33,167,31],[143,35,167,33,"prefix"],[143,41,167,39],[143,43,167,41],[144,4,168,2],[144,8,168,8,"words"],[144,13,168,13],[144,16,168,16,"_$$_REQUIRE"],[144,27,168,16],[144,28,168,16,"_dependencyMap"],[144,42,168,16],[144,57,168,25,"bech32"],[144,63,168,31],[144,64,168,32,"toWords"],[144,71,168,39],[144,72,168,40,"data"],[144,76,168,44],[144,77,168,45],[145,4,169,2,"words"],[145,9,169,7],[145,10,169,8,"unshift"],[145,17,169,15],[145,18,169,16,"version"],[145,25,169,23],[145,26,169,24],[146,4,170,2],[146,11,170,9,"version"],[146,18,170,16],[146,23,170,21],[146,24,170,22],[146,27,171,6,"_$$_REQUIRE"],[146,38,171,6],[146,39,171,6,"_dependencyMap"],[146,53,171,6],[146,68,171,15,"bech32"],[146,74,171,21],[146,75,171,22,"encode"],[146,81,171,28],[146,82,171,29,"prefix"],[146,88,171,35],[146,90,171,37,"words"],[146,95,171,42],[146,96,171,43],[146,99,172,6,"_$$_REQUIRE"],[146,110,172,6],[146,111,172,6,"_dependencyMap"],[146,125,172,6],[146,140,172,15,"bech32m"],[146,147,172,22],[146,148,172,23,"encode"],[146,154,172,29],[146,155,172,30,"prefix"],[146,161,172,36],[146,163,172,38,"words"],[146,168,172,43],[146,169,172,44],[147,2,173,0],[148,2,174,0],[149,0,175,0],[150,0,176,0],[151,0,177,0],[152,0,178,0],[153,0,179,0],[154,0,180,0],[155,2,181,0],[155,11,181,9,"fromOutputScript"],[155,27,181,25,"fromOutputScript"],[155,28,181,26,"output"],[155,34,181,32],[155,36,181,34,"network"],[155,43,181,41],[155,45,181,43],[156,4,182,2],[157,4,183,2,"network"],[157,11,183,9],[157,14,183,12,"network"],[157,21,183,19],[157,25,183,23,"networks"],[157,33,183,31],[157,34,183,32,"bitcoin"],[157,41,183,39],[158,4,184,2],[158,8,184,6],[159,6,185,4],[159,13,185,11,"payments"],[159,21,185,19],[159,22,185,20,"p2pkh"],[159,27,185,25],[159,28,185,26],[160,8,185,28,"output"],[160,14,185,34],[160,16,185,28,"output"],[160,22,185,34],[161,8,185,36,"network"],[161,15,185,43],[161,17,185,36,"network"],[162,6,185,44],[162,7,185,45],[162,8,185,46],[162,9,185,47,"address"],[162,16,185,54],[163,4,186,2],[163,5,186,3],[163,6,186,4],[163,13,186,11,"e"],[163,14,186,12],[163,16,186,14],[163,17,186,15],[164,4,187,2],[164,8,187,6],[165,6,188,4],[165,13,188,11,"payments"],[165,21,188,19],[165,22,188,20,"p2sh"],[165,26,188,24],[165,27,188,25],[166,8,188,27,"output"],[166,14,188,33],[166,16,188,27,"output"],[166,22,188,33],[167,8,188,35,"network"],[167,15,188,42],[167,17,188,35,"network"],[168,6,188,43],[168,7,188,44],[168,8,188,45],[168,9,188,46,"address"],[168,16,188,53],[169,4,189,2],[169,5,189,3],[169,6,189,4],[169,13,189,11,"e"],[169,14,189,12],[169,16,189,14],[169,17,189,15],[170,4,190,2],[170,8,190,6],[171,6,191,4],[171,13,191,11,"payments"],[171,21,191,19],[171,22,191,20,"p2wpkh"],[171,28,191,26],[171,29,191,27],[172,8,191,29,"output"],[172,14,191,35],[172,16,191,29,"output"],[172,22,191,35],[173,8,191,37,"network"],[173,15,191,44],[173,17,191,37,"network"],[174,6,191,45],[174,7,191,46],[174,8,191,47],[174,9,191,48,"address"],[174,16,191,55],[175,4,192,2],[175,5,192,3],[175,6,192,4],[175,13,192,11,"e"],[175,14,192,12],[175,16,192,14],[175,17,192,15],[176,4,193,2],[176,8,193,6],[177,6,194,4],[177,13,194,11,"payments"],[177,21,194,19],[177,22,194,20,"p2wsh"],[177,27,194,25],[177,28,194,26],[178,8,194,28,"output"],[178,14,194,34],[178,16,194,28,"output"],[178,22,194,34],[179,8,194,36,"network"],[179,15,194,43],[179,17,194,36,"network"],[180,6,194,44],[180,7,194,45],[180,8,194,46],[180,9,194,47,"address"],[180,16,194,54],[181,4,195,2],[181,5,195,3],[181,6,195,4],[181,13,195,11,"e"],[181,14,195,12],[181,16,195,14],[181,17,195,15],[182,4,196,2],[182,8,196,6],[183,6,197,4],[183,13,197,11,"payments"],[183,21,197,19],[183,22,197,20,"p2tr"],[183,26,197,24],[183,27,197,25],[184,8,197,27,"output"],[184,14,197,33],[184,16,197,27,"output"],[184,22,197,33],[185,8,197,35,"network"],[185,15,197,42],[185,17,197,35,"network"],[186,6,197,43],[186,7,197,44],[186,8,197,45],[186,9,197,46,"address"],[186,16,197,53],[187,4,198,2],[187,5,198,3],[187,6,198,4],[187,13,198,11,"e"],[187,14,198,12],[187,16,198,14],[187,17,198,15],[188,4,199,2],[188,8,199,6],[189,6,200,4],[189,13,200,11,"_toFutureSegwitAddress"],[189,35,200,33],[189,36,200,34,"output"],[189,42,200,40],[189,44,200,42,"network"],[189,51,200,49],[189,52,200,50],[190,4,201,2],[190,5,201,3],[190,6,201,4],[190,13,201,11,"e"],[190,14,201,12],[190,16,201,14],[190,17,201,15],[191,4,202,2],[191,10,202,8],[191,14,202,12,"Error"],[191,19,202,17],[191,20,202,18,"bscript"],[191,27,202,25],[191,28,202,26,"toASM"],[191,33,202,31],[191,34,202,32,"output"],[191,40,202,38],[191,41,202,39],[191,44,202,42],[191,70,202,68],[191,71,202,69],[192,2,203,0],[193,2,204,0],[194,0,205,0],[195,0,206,0],[196,0,207,0],[197,0,208,0],[198,0,209,0],[199,0,210,0],[200,2,211,0],[200,11,211,9,"toOutputScript"],[200,25,211,23,"toOutputScript"],[200,26,211,24,"address"],[200,33,211,31],[200,35,211,33,"network"],[200,42,211,40],[200,44,211,42],[201,4,212,2,"network"],[201,11,212,9],[201,14,212,12,"network"],[201,21,212,19],[201,25,212,23,"networks"],[201,33,212,31],[201,34,212,32,"bitcoin"],[201,41,212,39],[202,4,213,2],[202,8,213,6,"decodeBase58"],[202,20,213,18],[203,4,214,2],[203,8,214,6,"decodeBech32"],[203,20,214,18],[204,4,215,2],[204,8,215,6],[205,6,216,4,"decodeBase58"],[205,18,216,16],[205,21,216,19,"fromBase58Check"],[205,36,216,34],[205,37,216,35,"address"],[205,44,216,42],[205,45,216,43],[206,4,217,2],[206,5,217,3],[206,6,217,4],[206,13,217,11,"e"],[206,14,217,12],[206,16,217,14],[206,17,217,15],[207,4,218,2],[207,8,218,6,"decodeBase58"],[207,20,218,18],[207,22,218,20],[208,6,219,4],[208,10,219,8,"decodeBase58"],[208,22,219,20],[208,23,219,21,"version"],[208,30,219,28],[208,35,219,33,"network"],[208,42,219,40],[208,43,219,41,"pubKeyHash"],[208,53,219,51],[208,55,220,6],[208,62,220,13,"payments"],[208,70,220,21],[208,71,220,22,"p2pkh"],[208,76,220,27],[208,77,220,28],[209,8,220,30,"hash"],[209,12,220,34],[209,14,220,36,"decodeBase58"],[209,26,220,48],[209,27,220,49,"hash"],[210,6,220,54],[210,7,220,55],[210,8,220,56],[210,9,220,57,"output"],[210,15,220,63],[211,6,221,4],[211,10,221,8,"decodeBase58"],[211,22,221,20],[211,23,221,21,"version"],[211,30,221,28],[211,35,221,33,"network"],[211,42,221,40],[211,43,221,41,"scriptHash"],[211,53,221,51],[211,55,222,6],[211,62,222,13,"payments"],[211,70,222,21],[211,71,222,22,"p2sh"],[211,75,222,26],[211,76,222,27],[212,8,222,29,"hash"],[212,12,222,33],[212,14,222,35,"decodeBase58"],[212,26,222,47],[212,27,222,48,"hash"],[213,6,222,53],[213,7,222,54],[213,8,222,55],[213,9,222,56,"output"],[213,15,222,62],[214,4,223,2],[214,5,223,3],[214,11,223,9],[215,6,224,4],[215,10,224,8],[216,8,225,6,"decodeBech32"],[216,20,225,18],[216,23,225,21,"fromBech32"],[216,33,225,31],[216,34,225,32,"address"],[216,41,225,39],[216,42,225,40],[217,6,226,4],[217,7,226,5],[217,8,226,6],[217,15,226,13,"e"],[217,16,226,14],[217,18,226,16],[217,19,226,17],[218,6,227,4],[218,10,227,8,"decodeBech32"],[218,22,227,20],[218,24,227,22],[219,8,228,6],[219,12,228,10,"decodeBech32"],[219,24,228,22],[219,25,228,23,"prefix"],[219,31,228,29],[219,36,228,34,"network"],[219,43,228,41],[219,44,228,42,"bech32"],[219,50,228,48],[219,52,229,8],[219,58,229,14],[219,62,229,18,"Error"],[219,67,229,23],[219,68,229,24,"address"],[219,75,229,31],[219,78,229,34],[219,102,229,58],[219,103,229,59],[220,8,230,6],[220,12,230,10,"decodeBech32"],[220,24,230,22],[220,25,230,23,"version"],[220,32,230,30],[220,37,230,35],[220,38,230,36],[220,40,230,38],[221,10,231,8],[221,14,231,12,"decodeBech32"],[221,26,231,24],[221,27,231,25,"data"],[221,31,231,29],[221,32,231,30,"length"],[221,38,231,36],[221,43,231,41],[221,45,231,43],[221,47,232,10],[221,54,232,17,"payments"],[221,62,232,25],[221,63,232,26,"p2wpkh"],[221,69,232,32],[221,70,232,33],[222,12,232,35,"hash"],[222,16,232,39],[222,18,232,41,"decodeBech32"],[222,30,232,53],[222,31,232,54,"data"],[223,10,232,59],[223,11,232,60],[223,12,232,61],[223,13,232,62,"output"],[223,19,232,68],[224,10,233,8],[224,14,233,12,"decodeBech32"],[224,26,233,24],[224,27,233,25,"data"],[224,31,233,29],[224,32,233,30,"length"],[224,38,233,36],[224,43,233,41],[224,45,233,43],[224,47,234,10],[224,54,234,17,"payments"],[224,62,234,25],[224,63,234,26,"p2wsh"],[224,68,234,31],[224,69,234,32],[225,12,234,34,"hash"],[225,16,234,38],[225,18,234,40,"decodeBech32"],[225,30,234,52],[225,31,234,53,"data"],[226,10,234,58],[226,11,234,59],[226,12,234,60],[226,13,234,61,"output"],[226,19,234,67],[227,8,235,6],[227,9,235,7],[227,15,235,13],[227,19,235,17,"decodeBech32"],[227,31,235,29],[227,32,235,30,"version"],[227,39,235,37],[227,44,235,42],[227,45,235,43],[227,47,235,45],[228,10,236,8],[228,14,236,12,"decodeBech32"],[228,26,236,24],[228,27,236,25,"data"],[228,31,236,29],[228,32,236,30,"length"],[228,38,236,36],[228,43,236,41],[228,45,236,43],[228,47,237,10],[228,54,237,17,"payments"],[228,62,237,25],[228,63,237,26,"p2tr"],[228,67,237,30],[228,68,237,31],[229,12,237,33,"pubkey"],[229,18,237,39],[229,20,237,41,"decodeBech32"],[229,32,237,53],[229,33,237,54,"data"],[230,10,237,59],[230,11,237,60],[230,12,237,61],[230,13,237,62,"output"],[230,19,237,68],[231,8,238,6],[231,9,238,7],[231,15,238,13],[231,19,239,8,"decodeBech32"],[231,31,239,20],[231,32,239,21,"version"],[231,39,239,28],[231,43,239,32,"FUTURE_SEGWIT_MIN_VERSION"],[231,68,239,57],[231,72,240,8,"decodeBech32"],[231,84,240,20],[231,85,240,21,"version"],[231,92,240,28],[231,96,240,32,"FUTURE_SEGWIT_MAX_VERSION"],[231,121,240,57],[231,125,241,8,"decodeBech32"],[231,137,241,20],[231,138,241,21,"data"],[231,142,241,25],[231,143,241,26,"length"],[231,149,241,32],[231,153,241,36,"FUTURE_SEGWIT_MIN_SIZE"],[231,175,241,58],[231,179,242,8,"decodeBech32"],[231,191,242,20],[231,192,242,21,"data"],[231,196,242,25],[231,197,242,26,"length"],[231,203,242,32],[231,207,242,36,"FUTURE_SEGWIT_MAX_SIZE"],[231,229,242,58],[231,231,243,8],[232,10,244,8,"console"],[232,17,244,15],[232,18,244,16,"warn"],[232,22,244,20],[232,23,244,21,"FUTURE_SEGWIT_VERSION_WARNING"],[232,52,244,50],[232,53,244,51],[233,10,245,8],[233,17,245,15,"bscript"],[233,24,245,22],[233,25,245,23,"compile"],[233,32,245,30],[233,33,245,31],[233,34,246,10,"decodeBech32"],[233,46,246,22],[233,47,246,23,"version"],[233,54,246,30],[233,57,246,33,"FUTURE_SEGWIT_VERSION_DIFF"],[233,83,246,59],[233,85,247,10,"decodeBech32"],[233,97,247,22],[233,98,247,23,"data"],[233,102,247,27],[233,103,248,9],[233,104,248,10],[234,8,249,6],[235,6,250,4],[236,4,251,2],[237,4,252,2],[237,10,252,8],[237,14,252,12,"Error"],[237,19,252,17],[237,20,252,18,"address"],[237,27,252,25],[237,30,252,28],[237,55,252,53],[237,56,252,54],[238,2,253,0],[239,0,253,1],[239,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","_toFutureSegwitAddress","fromBase58Check","fromBech32","toBase58Check","toBech32","fromOutputScript","toOutputScript"],"mappings":"AAA;MCI;iBCS;aDE;ODI;MCC;ODG;MCI;ODE;MCC;ODE;ECG;GDS;ECG;GDE;AGiC;CHiB;AIQ;CJQ;AKO;CLoB;AMO;CNS;AOQ;CPM;AQQ;CRsB;ASQ;CT0C"}},"type":"js/module"}]}