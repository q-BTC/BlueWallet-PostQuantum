{"dependencies":[{"name":"../../asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":11,"index":87},"end":{"line":4,"column":32,"index":108}},{"start":{"line":5,"column":11,"index":121},"end":{"line":5,"column":20,"index":130}},{"start":{"line":5,"column":11,"index":121},"end":{"line":5,"column":20,"index":130}}],"key":"eTtXjgveLOBDW6odk2vWaoMUiPI="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}},{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Import DER constants\n  var der = _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").constants.der;\n  function DEREncoder(entity) {\n    this.enc = 'der';\n    this.name = entity.name;\n    this.entity = entity;\n\n    // Construct base tree\n    this.tree = new DERNode();\n    this.tree._init(entity.body);\n  }\n  ;\n  module.exports = DEREncoder;\n  DEREncoder.prototype.encode = function encode(data, reporter) {\n    return this.tree._encode(data, reporter).join();\n  };\n\n  // Tree methods\n\n  function DERNode(parent) {\n    _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").base.Node.call(this, 'der', parent);\n  }\n  _$$_REQUIRE(_dependencyMap[1], \"inherits\")(DERNode, _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").base.Node);\n  DERNode.prototype._encodeComposite = function encodeComposite(tag, primitive, cls, content) {\n    var encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n    // Short form\n    if (content.length < 0x80) {\n      var header = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(2);\n      header[0] = encodedTag;\n      header[1] = content.length;\n      return this._createEncoderBuffer([header, content]);\n    }\n\n    // Long form\n    // Count octets required to store length\n    var lenOctets = 1;\n    for (var i = content.length; i >= 0x100; i >>= 8) lenOctets++;\n    var header = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(1 + 1 + lenOctets);\n    header[0] = encodedTag;\n    header[1] = 0x80 | lenOctets;\n    for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8) header[i] = j & 0xff;\n    return this._createEncoderBuffer([header, content]);\n  };\n  DERNode.prototype._encodeStr = function encodeStr(str, tag) {\n    if (tag === 'bitstr') {\n      return this._createEncoderBuffer([str.unused | 0, str.data]);\n    } else if (tag === 'bmpstr') {\n      var buf = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(str.length * 2);\n      for (var i = 0; i < str.length; i++) {\n        buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n      }\n      return this._createEncoderBuffer(buf);\n    } else if (tag === 'numstr') {\n      if (!this._isNumstr(str)) {\n        return this.reporter.error('Encoding of string type: numstr supports ' + 'only digits and space');\n      }\n      return this._createEncoderBuffer(str);\n    } else if (tag === 'printstr') {\n      if (!this._isPrintstr(str)) {\n        return this.reporter.error('Encoding of string type: printstr supports ' + 'only latin upper and lower case letters, ' + 'digits, space, apostrophe, left and rigth ' + 'parenthesis, plus sign, comma, hyphen, ' + 'dot, slash, colon, equal sign, ' + 'question mark');\n      }\n      return this._createEncoderBuffer(str);\n    } else if (/str$/.test(tag)) {\n      return this._createEncoderBuffer(str);\n    } else if (tag === 'objDesc') {\n      return this._createEncoderBuffer(str);\n    } else {\n      return this.reporter.error('Encoding of string type: ' + tag + ' unsupported');\n    }\n  };\n  DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n    if (typeof id === 'string') {\n      if (!values) return this.reporter.error('string objid given, but no values map found');\n      if (!values.hasOwnProperty(id)) return this.reporter.error('objid not found in values map');\n      id = values[id].split(/[\\s\\.]+/g);\n      for (var i = 0; i < id.length; i++) id[i] |= 0;\n    } else if (Array.isArray(id)) {\n      id = id.slice();\n      for (var i = 0; i < id.length; i++) id[i] |= 0;\n    }\n    if (!Array.isArray(id)) {\n      return this.reporter.error('objid() should be either array or string, ' + 'got: ' + JSON.stringify(id));\n    }\n    if (!relative) {\n      if (id[1] >= 40) return this.reporter.error('Second objid identifier OOB');\n      id.splice(0, 2, id[0] * 40 + id[1]);\n    }\n\n    // Count number of octets\n    var size = 0;\n    for (var i = 0; i < id.length; i++) {\n      var ident = id[i];\n      for (size++; ident >= 0x80; ident >>= 7) size++;\n    }\n    var objid = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(size);\n    var offset = objid.length - 1;\n    for (var i = id.length - 1; i >= 0; i--) {\n      var ident = id[i];\n      objid[offset--] = ident & 0x7f;\n      while ((ident >>= 7) > 0) objid[offset--] = 0x80 | ident & 0x7f;\n    }\n    return this._createEncoderBuffer(objid);\n  };\n  function two(num) {\n    if (num < 10) return '0' + num;else return num;\n  }\n  DERNode.prototype._encodeTime = function encodeTime(time, tag) {\n    var str;\n    var date = new Date(time);\n    if (tag === 'gentime') {\n      str = [two(date.getFullYear()), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n    } else if (tag === 'utctime') {\n      str = [two(date.getFullYear() % 100), two(date.getUTCMonth() + 1), two(date.getUTCDate()), two(date.getUTCHours()), two(date.getUTCMinutes()), two(date.getUTCSeconds()), 'Z'].join('');\n    } else {\n      this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n    }\n    return this._encodeStr(str, 'octstr');\n  };\n  DERNode.prototype._encodeNull = function encodeNull() {\n    return this._createEncoderBuffer('');\n  };\n  DERNode.prototype._encodeInt = function encodeInt(num, values) {\n    if (typeof num === 'string') {\n      if (!values) return this.reporter.error('String int or enum given, but no values map');\n      if (!values.hasOwnProperty(num)) {\n        return this.reporter.error('Values map doesn\\'t contain: ' + JSON.stringify(num));\n      }\n      num = values[num];\n    }\n\n    // Bignum, assume big endian\n    if (typeof num !== 'number' && !_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer.isBuffer(num)) {\n      var numArray = num.toArray();\n      if (!num.sign && numArray[0] & 0x80) {\n        numArray.unshift(0);\n      }\n      num = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(numArray);\n    }\n    if (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer.isBuffer(num)) {\n      var size = num.length;\n      if (num.length === 0) size++;\n      var out = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(size);\n      num.copy(out);\n      if (num.length === 0) out[0] = 0;\n      return this._createEncoderBuffer(out);\n    }\n    if (num < 0x80) return this._createEncoderBuffer(num);\n    if (num < 0x100) return this._createEncoderBuffer([0, num]);\n    var size = 1;\n    for (var i = num; i >= 0x100; i >>= 8) size++;\n    var out = new Array(size);\n    for (var i = out.length - 1; i >= 0; i--) {\n      out[i] = num & 0xff;\n      num >>= 8;\n    }\n    if (out[0] & 0x80) {\n      out.unshift(0);\n    }\n    return this._createEncoderBuffer(new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(out));\n  };\n  DERNode.prototype._encodeBool = function encodeBool(value) {\n    return this._createEncoderBuffer(value ? 0xff : 0);\n  };\n  DERNode.prototype._use = function use(entity, obj) {\n    if (typeof entity === 'function') entity = entity(obj);\n    return entity._getEncoder('der').tree;\n  };\n  DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n    var state = this._baseState;\n    var i;\n    if (state['default'] === null) return false;\n    var data = dataBuffer.join();\n    if (state.defaultBuffer === undefined) state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n    if (data.length !== state.defaultBuffer.length) return false;\n    for (i = 0; i < data.length; i++) if (data[i] !== state.defaultBuffer[i]) return false;\n    return true;\n  };\n\n  // Utility methods\n\n  function encodeTag(tag, primitive, cls, reporter) {\n    var res;\n    if (tag === 'seqof') tag = 'seq';else if (tag === 'setof') tag = 'set';\n    if (der.tagByName.hasOwnProperty(tag)) res = der.tagByName[tag];else if (typeof tag === 'number' && (tag | 0) === tag) res = tag;else return reporter.error('Unknown tag: ' + tag);\n    if (res >= 0x1f) return reporter.error('Multi-octet tag encoding unsupported');\n    if (!primitive) res |= 0x20;\n    res |= der.tagClassByName[cls || 'universal'] << 6;\n    return res;\n  }\n});","lineCount":192,"map":[[2,2,7,0],[3,2,8,0],[3,6,8,4,"der"],[3,9,8,7],[3,12,8,10,"_$$_REQUIRE"],[3,23,8,10],[3,24,8,10,"_dependencyMap"],[3,38,8,10],[3,57,8,15,"constants"],[3,66,8,24],[3,67,8,25,"der"],[3,70,8,28],[4,2,10,0],[4,11,10,9,"DEREncoder"],[4,21,10,19,"DEREncoder"],[4,22,10,20,"entity"],[4,28,10,26],[4,30,10,28],[5,4,11,2],[5,8,11,6],[5,9,11,7,"enc"],[5,12,11,10],[5,15,11,13],[5,20,11,18],[6,4,12,2],[6,8,12,6],[6,9,12,7,"name"],[6,13,12,11],[6,16,12,14,"entity"],[6,22,12,20],[6,23,12,21,"name"],[6,27,12,25],[7,4,13,2],[7,8,13,6],[7,9,13,7,"entity"],[7,15,13,13],[7,18,13,16,"entity"],[7,24,13,22],[9,4,15,2],[10,4,16,2],[10,8,16,6],[10,9,16,7,"tree"],[10,13,16,11],[10,16,16,14],[10,20,16,18,"DERNode"],[10,27,16,25],[10,28,16,26],[10,29,16,27],[11,4,17,2],[11,8,17,6],[11,9,17,7,"tree"],[11,13,17,11],[11,14,17,12,"_init"],[11,19,17,17],[11,20,17,18,"entity"],[11,26,17,24],[11,27,17,25,"body"],[11,31,17,29],[11,32,17,30],[12,2,18,0],[13,2,18,1],[14,2,19,0,"module"],[14,8,19,6],[14,9,19,7,"exports"],[14,16,19,14],[14,19,19,17,"DEREncoder"],[14,29,19,27],[15,2,21,0,"DEREncoder"],[15,12,21,10],[15,13,21,11,"prototype"],[15,22,21,20],[15,23,21,21,"encode"],[15,29,21,27],[15,32,21,30],[15,41,21,39,"encode"],[15,47,21,45,"encode"],[15,48,21,46,"data"],[15,52,21,50],[15,54,21,52,"reporter"],[15,62,21,60],[15,64,21,62],[16,4,22,2],[16,11,22,9],[16,15,22,13],[16,16,22,14,"tree"],[16,20,22,18],[16,21,22,19,"_encode"],[16,28,22,26],[16,29,22,27,"data"],[16,33,22,31],[16,35,22,33,"reporter"],[16,43,22,41],[16,44,22,42],[16,45,22,43,"join"],[16,49,22,47],[16,50,22,48],[16,51,22,49],[17,2,23,0],[17,3,23,1],[19,2,25,0],[21,2,27,0],[21,11,27,9,"DERNode"],[21,18,27,16,"DERNode"],[21,19,27,17,"parent"],[21,25,27,23],[21,27,27,25],[22,4,28,2,"_$$_REQUIRE"],[22,15,28,2],[22,16,28,2,"_dependencyMap"],[22,30,28,2],[22,49,28,2,"base"],[22,53,28,2],[22,54,28,7,"Node"],[22,58,28,11],[22,59,28,12,"call"],[22,63,28,16],[22,64,28,17],[22,68,28,21],[22,70,28,23],[22,75,28,28],[22,77,28,30,"parent"],[22,83,28,36],[22,84,28,37],[23,2,29,0],[24,2,30,0,"_$$_REQUIRE"],[24,13,30,0],[24,14,30,0,"_dependencyMap"],[24,28,30,0],[24,45,30,9,"DERNode"],[24,52,30,16],[24,54,30,18,"_$$_REQUIRE"],[24,65,30,18],[24,66,30,18,"_dependencyMap"],[24,80,30,18],[24,99,30,18,"base"],[24,103,30,18],[24,104,30,23,"Node"],[24,108,30,27],[24,109,30,28],[25,2,32,0,"DERNode"],[25,9,32,7],[25,10,32,8,"prototype"],[25,19,32,17],[25,20,32,18,"_encodeComposite"],[25,36,32,34],[25,39,32,37],[25,48,32,46,"encodeComposite"],[25,63,32,61,"encodeComposite"],[25,64,32,62,"tag"],[25,67,32,65],[25,69,33,62,"primitive"],[25,78,33,71],[25,80,34,62,"cls"],[25,83,34,65],[25,85,35,62,"content"],[25,92,35,69],[25,94,35,71],[26,4,36,2],[26,8,36,6,"encodedTag"],[26,18,36,16],[26,21,36,19,"encodeTag"],[26,30,36,28],[26,31,36,29,"tag"],[26,34,36,32],[26,36,36,34,"primitive"],[26,45,36,43],[26,47,36,45,"cls"],[26,50,36,48],[26,52,36,50],[26,56,36,54],[26,57,36,55,"reporter"],[26,65,36,63],[26,66,36,64],[28,4,38,2],[29,4,39,2],[29,8,39,6,"content"],[29,15,39,13],[29,16,39,14,"length"],[29,22,39,20],[29,25,39,23],[29,29,39,27],[29,31,39,29],[30,6,40,4],[30,10,40,8,"header"],[30,16,40,14],[30,19,40,17],[30,24,40,17,"_$$_REQUIRE"],[30,35,40,17],[30,36,40,17,"_dependencyMap"],[30,50,40,17],[30,65,40,17,"Buffer"],[30,71,40,17],[30,73,40,28],[30,74,40,29],[30,75,40,30],[31,6,41,4,"header"],[31,12,41,10],[31,13,41,11],[31,14,41,12],[31,15,41,13],[31,18,41,16,"encodedTag"],[31,28,41,26],[32,6,42,4,"header"],[32,12,42,10],[32,13,42,11],[32,14,42,12],[32,15,42,13],[32,18,42,16,"content"],[32,25,42,23],[32,26,42,24,"length"],[32,32,42,30],[33,6,43,4],[33,13,43,11],[33,17,43,15],[33,18,43,16,"_createEncoderBuffer"],[33,38,43,36],[33,39,43,37],[33,40,43,39,"header"],[33,46,43,45],[33,48,43,47,"content"],[33,55,43,54],[33,56,43,56],[33,57,43,57],[34,4,44,2],[36,4,46,2],[37,4,47,2],[38,4,48,2],[38,8,48,6,"lenOctets"],[38,17,48,15],[38,20,48,18],[38,21,48,19],[39,4,49,2],[39,9,49,7],[39,13,49,11,"i"],[39,14,49,12],[39,17,49,15,"content"],[39,24,49,22],[39,25,49,23,"length"],[39,31,49,29],[39,33,49,31,"i"],[39,34,49,32],[39,38,49,36],[39,43,49,41],[39,45,49,43,"i"],[39,46,49,44],[39,51,49,49],[39,52,49,50],[39,54,50,4,"lenOctets"],[39,63,50,13],[39,65,50,15],[40,4,52,2],[40,8,52,6,"header"],[40,14,52,12],[40,17,52,15],[40,22,52,15,"_$$_REQUIRE"],[40,33,52,15],[40,34,52,15,"_dependencyMap"],[40,48,52,15],[40,63,52,15,"Buffer"],[40,69,52,15],[40,71,52,26],[40,72,52,27],[40,75,52,30],[40,76,52,31],[40,79,52,34,"lenOctets"],[40,88,52,43],[40,89,52,44],[41,4,53,2,"header"],[41,10,53,8],[41,11,53,9],[41,12,53,10],[41,13,53,11],[41,16,53,14,"encodedTag"],[41,26,53,24],[42,4,54,2,"header"],[42,10,54,8],[42,11,54,9],[42,12,54,10],[42,13,54,11],[42,16,54,14],[42,20,54,18],[42,23,54,21,"lenOctets"],[42,32,54,30],[43,4,56,2],[43,9,56,7],[43,13,56,11,"i"],[43,14,56,12],[43,17,56,15],[43,18,56,16],[43,21,56,19,"lenOctets"],[43,30,56,28],[43,32,56,30,"j"],[43,33,56,31],[43,36,56,34,"content"],[43,43,56,41],[43,44,56,42,"length"],[43,50,56,48],[43,52,56,50,"j"],[43,53,56,51],[43,56,56,54],[43,57,56,55],[43,59,56,57,"i"],[43,60,56,58],[43,62,56,60],[43,64,56,62,"j"],[43,65,56,63],[43,70,56,68],[43,71,56,69],[43,73,57,4,"header"],[43,79,57,10],[43,80,57,11,"i"],[43,81,57,12],[43,82,57,13],[43,85,57,16,"j"],[43,86,57,17],[43,89,57,20],[43,93,57,24],[44,4,59,2],[44,11,59,9],[44,15,59,13],[44,16,59,14,"_createEncoderBuffer"],[44,36,59,34],[44,37,59,35],[44,38,59,37,"header"],[44,44,59,43],[44,46,59,45,"content"],[44,53,59,52],[44,54,59,54],[44,55,59,55],[45,2,60,0],[45,3,60,1],[46,2,62,0,"DERNode"],[46,9,62,7],[46,10,62,8,"prototype"],[46,19,62,17],[46,20,62,18,"_encodeStr"],[46,30,62,28],[46,33,62,31],[46,42,62,40,"encodeStr"],[46,51,62,49,"encodeStr"],[46,52,62,50,"str"],[46,55,62,53],[46,57,62,55,"tag"],[46,60,62,58],[46,62,62,60],[47,4,63,2],[47,8,63,6,"tag"],[47,11,63,9],[47,16,63,14],[47,24,63,22],[47,26,63,24],[48,6,64,4],[48,13,64,11],[48,17,64,15],[48,18,64,16,"_createEncoderBuffer"],[48,38,64,36],[48,39,64,37],[48,40,64,39,"str"],[48,43,64,42],[48,44,64,43,"unused"],[48,50,64,49],[48,53,64,52],[48,54,64,53],[48,56,64,55,"str"],[48,59,64,58],[48,60,64,59,"data"],[48,64,64,63],[48,65,64,65],[48,66,64,66],[49,4,65,2],[49,5,65,3],[49,11,65,9],[49,15,65,13,"tag"],[49,18,65,16],[49,23,65,21],[49,31,65,29],[49,33,65,31],[50,6,66,4],[50,10,66,8,"buf"],[50,13,66,11],[50,16,66,14],[50,21,66,14,"_$$_REQUIRE"],[50,32,66,14],[50,33,66,14,"_dependencyMap"],[50,47,66,14],[50,62,66,14,"Buffer"],[50,68,66,14],[50,70,66,25,"str"],[50,73,66,28],[50,74,66,29,"length"],[50,80,66,35],[50,83,66,38],[50,84,66,39],[50,85,66,40],[51,6,67,4],[51,11,67,9],[51,15,67,13,"i"],[51,16,67,14],[51,19,67,17],[51,20,67,18],[51,22,67,20,"i"],[51,23,67,21],[51,26,67,24,"str"],[51,29,67,27],[51,30,67,28,"length"],[51,36,67,34],[51,38,67,36,"i"],[51,39,67,37],[51,41,67,39],[51,43,67,41],[52,8,68,6,"buf"],[52,11,68,9],[52,12,68,10,"writeUInt16BE"],[52,25,68,23],[52,26,68,24,"str"],[52,29,68,27],[52,30,68,28,"charCodeAt"],[52,40,68,38],[52,41,68,39,"i"],[52,42,68,40],[52,43,68,41],[52,45,68,43,"i"],[52,46,68,44],[52,49,68,47],[52,50,68,48],[52,51,68,49],[53,6,69,4],[54,6,70,4],[54,13,70,11],[54,17,70,15],[54,18,70,16,"_createEncoderBuffer"],[54,38,70,36],[54,39,70,37,"buf"],[54,42,70,40],[54,43,70,41],[55,4,71,2],[55,5,71,3],[55,11,71,9],[55,15,71,13,"tag"],[55,18,71,16],[55,23,71,21],[55,31,71,29],[55,33,71,31],[56,6,72,4],[56,10,72,8],[56,11,72,9],[56,15,72,13],[56,16,72,14,"_isNumstr"],[56,25,72,23],[56,26,72,24,"str"],[56,29,72,27],[56,30,72,28],[56,32,72,30],[57,8,73,6],[57,15,73,13],[57,19,73,17],[57,20,73,18,"reporter"],[57,28,73,26],[57,29,73,27,"error"],[57,34,73,32],[57,35,73,33],[57,78,73,76],[57,81,74,33],[57,104,74,56],[57,105,74,57],[58,6,75,4],[59,6,76,4],[59,13,76,11],[59,17,76,15],[59,18,76,16,"_createEncoderBuffer"],[59,38,76,36],[59,39,76,37,"str"],[59,42,76,40],[59,43,76,41],[60,4,77,2],[60,5,77,3],[60,11,77,9],[60,15,77,13,"tag"],[60,18,77,16],[60,23,77,21],[60,33,77,31],[60,35,77,33],[61,6,78,4],[61,10,78,8],[61,11,78,9],[61,15,78,13],[61,16,78,14,"_isPrintstr"],[61,27,78,25],[61,28,78,26,"str"],[61,31,78,29],[61,32,78,30],[61,34,78,32],[62,8,79,6],[62,15,79,13],[62,19,79,17],[62,20,79,18,"reporter"],[62,28,79,26],[62,29,79,27,"error"],[62,34,79,32],[62,35,79,33],[62,80,79,78],[62,83,80,33],[62,126,80,76],[62,129,81,33],[62,173,81,77],[62,176,82,33],[62,217,82,74],[62,220,83,33],[62,253,83,66],[62,256,84,33],[62,271,84,48],[62,272,84,49],[63,6,85,4],[64,6,86,4],[64,13,86,11],[64,17,86,15],[64,18,86,16,"_createEncoderBuffer"],[64,38,86,36],[64,39,86,37,"str"],[64,42,86,40],[64,43,86,41],[65,4,87,2],[65,5,87,3],[65,11,87,9],[65,15,87,13],[65,21,87,19],[65,22,87,20,"test"],[65,26,87,24],[65,27,87,25,"tag"],[65,30,87,28],[65,31,87,29],[65,33,87,31],[66,6,88,4],[66,13,88,11],[66,17,88,15],[66,18,88,16,"_createEncoderBuffer"],[66,38,88,36],[66,39,88,37,"str"],[66,42,88,40],[66,43,88,41],[67,4,89,2],[67,5,89,3],[67,11,89,9],[67,15,89,13,"tag"],[67,18,89,16],[67,23,89,21],[67,32,89,30],[67,34,89,32],[68,6,90,4],[68,13,90,11],[68,17,90,15],[68,18,90,16,"_createEncoderBuffer"],[68,38,90,36],[68,39,90,37,"str"],[68,42,90,40],[68,43,90,41],[69,4,91,2],[69,5,91,3],[69,11,91,9],[70,6,92,4],[70,13,92,11],[70,17,92,15],[70,18,92,16,"reporter"],[70,26,92,24],[70,27,92,25,"error"],[70,32,92,30],[70,33,92,31],[70,60,92,58],[70,63,92,61,"tag"],[70,66,92,64],[70,69,93,31],[70,83,93,45],[70,84,93,46],[71,4,94,2],[72,2,95,0],[72,3,95,1],[73,2,97,0,"DERNode"],[73,9,97,7],[73,10,97,8,"prototype"],[73,19,97,17],[73,20,97,18,"_encodeObjid"],[73,32,97,30],[73,35,97,33],[73,44,97,42,"encodeObjid"],[73,55,97,53,"encodeObjid"],[73,56,97,54,"id"],[73,58,97,56],[73,60,97,58,"values"],[73,66,97,64],[73,68,97,66,"relative"],[73,76,97,74],[73,78,97,76],[74,4,98,2],[74,8,98,6],[74,15,98,13,"id"],[74,17,98,15],[74,22,98,20],[74,30,98,28],[74,32,98,30],[75,6,99,4],[75,10,99,8],[75,11,99,9,"values"],[75,17,99,15],[75,19,100,6],[75,26,100,13],[75,30,100,17],[75,31,100,18,"reporter"],[75,39,100,26],[75,40,100,27,"error"],[75,45,100,32],[75,46,100,33],[75,91,100,78],[75,92,100,79],[76,6,101,4],[76,10,101,8],[76,11,101,9,"values"],[76,17,101,15],[76,18,101,16,"hasOwnProperty"],[76,32,101,30],[76,33,101,31,"id"],[76,35,101,33],[76,36,101,34],[76,38,102,6],[76,45,102,13],[76,49,102,17],[76,50,102,18,"reporter"],[76,58,102,26],[76,59,102,27,"error"],[76,64,102,32],[76,65,102,33],[76,96,102,64],[76,97,102,65],[77,6,103,4,"id"],[77,8,103,6],[77,11,103,9,"values"],[77,17,103,15],[77,18,103,16,"id"],[77,20,103,18],[77,21,103,19],[77,22,103,20,"split"],[77,27,103,25],[77,28,103,26],[77,38,103,36],[77,39,103,37],[78,6,104,4],[78,11,104,9],[78,15,104,13,"i"],[78,16,104,14],[78,19,104,17],[78,20,104,18],[78,22,104,20,"i"],[78,23,104,21],[78,26,104,24,"id"],[78,28,104,26],[78,29,104,27,"length"],[78,35,104,33],[78,37,104,35,"i"],[78,38,104,36],[78,40,104,38],[78,42,105,6,"id"],[78,44,105,8],[78,45,105,9,"i"],[78,46,105,10],[78,47,105,11],[78,51,105,15],[78,52,105,16],[79,4,106,2],[79,5,106,3],[79,11,106,9],[79,15,106,13,"Array"],[79,20,106,18],[79,21,106,19,"isArray"],[79,28,106,26],[79,29,106,27,"id"],[79,31,106,29],[79,32,106,30],[79,34,106,32],[80,6,107,4,"id"],[80,8,107,6],[80,11,107,9,"id"],[80,13,107,11],[80,14,107,12,"slice"],[80,19,107,17],[80,20,107,18],[80,21,107,19],[81,6,108,4],[81,11,108,9],[81,15,108,13,"i"],[81,16,108,14],[81,19,108,17],[81,20,108,18],[81,22,108,20,"i"],[81,23,108,21],[81,26,108,24,"id"],[81,28,108,26],[81,29,108,27,"length"],[81,35,108,33],[81,37,108,35,"i"],[81,38,108,36],[81,40,108,38],[81,42,109,6,"id"],[81,44,109,8],[81,45,109,9,"i"],[81,46,109,10],[81,47,109,11],[81,51,109,15],[81,52,109,16],[82,4,110,2],[83,4,112,2],[83,8,112,6],[83,9,112,7,"Array"],[83,14,112,12],[83,15,112,13,"isArray"],[83,22,112,20],[83,23,112,21,"id"],[83,25,112,23],[83,26,112,24],[83,28,112,26],[84,6,113,4],[84,13,113,11],[84,17,113,15],[84,18,113,16,"reporter"],[84,26,113,24],[84,27,113,25,"error"],[84,32,113,30],[84,33,113,31],[84,77,113,75],[84,80,114,31],[84,87,114,38],[84,90,114,41,"JSON"],[84,94,114,45],[84,95,114,46,"stringify"],[84,104,114,55],[84,105,114,56,"id"],[84,107,114,58],[84,108,114,59],[84,109,114,60],[85,4,115,2],[86,4,117,2],[86,8,117,6],[86,9,117,7,"relative"],[86,17,117,15],[86,19,117,17],[87,6,118,4],[87,10,118,8,"id"],[87,12,118,10],[87,13,118,11],[87,14,118,12],[87,15,118,13],[87,19,118,17],[87,21,118,19],[87,23,119,6],[87,30,119,13],[87,34,119,17],[87,35,119,18,"reporter"],[87,43,119,26],[87,44,119,27,"error"],[87,49,119,32],[87,50,119,33],[87,79,119,62],[87,80,119,63],[88,6,120,4,"id"],[88,8,120,6],[88,9,120,7,"splice"],[88,15,120,13],[88,16,120,14],[88,17,120,15],[88,19,120,17],[88,20,120,18],[88,22,120,20,"id"],[88,24,120,22],[88,25,120,23],[88,26,120,24],[88,27,120,25],[88,30,120,28],[88,32,120,30],[88,35,120,33,"id"],[88,37,120,35],[88,38,120,36],[88,39,120,37],[88,40,120,38],[88,41,120,39],[89,4,121,2],[91,4,123,2],[92,4,124,2],[92,8,124,6,"size"],[92,12,124,10],[92,15,124,13],[92,16,124,14],[93,4,125,2],[93,9,125,7],[93,13,125,11,"i"],[93,14,125,12],[93,17,125,15],[93,18,125,16],[93,20,125,18,"i"],[93,21,125,19],[93,24,125,22,"id"],[93,26,125,24],[93,27,125,25,"length"],[93,33,125,31],[93,35,125,33,"i"],[93,36,125,34],[93,38,125,36],[93,40,125,38],[94,6,126,4],[94,10,126,8,"ident"],[94,15,126,13],[94,18,126,16,"id"],[94,20,126,18],[94,21,126,19,"i"],[94,22,126,20],[94,23,126,21],[95,6,127,4],[95,11,127,9,"size"],[95,15,127,13],[95,17,127,15],[95,19,127,17,"ident"],[95,24,127,22],[95,28,127,26],[95,32,127,30],[95,34,127,32,"ident"],[95,39,127,37],[95,44,127,42],[95,45,127,43],[95,47,128,6,"size"],[95,51,128,10],[95,53,128,12],[96,4,129,2],[97,4,131,2],[97,8,131,6,"objid"],[97,13,131,11],[97,16,131,14],[97,21,131,14,"_$$_REQUIRE"],[97,32,131,14],[97,33,131,14,"_dependencyMap"],[97,47,131,14],[97,62,131,14,"Buffer"],[97,68,131,14],[97,70,131,25,"size"],[97,74,131,29],[97,75,131,30],[98,4,132,2],[98,8,132,6,"offset"],[98,14,132,12],[98,17,132,15,"objid"],[98,22,132,20],[98,23,132,21,"length"],[98,29,132,27],[98,32,132,30],[98,33,132,31],[99,4,133,2],[99,9,133,7],[99,13,133,11,"i"],[99,14,133,12],[99,17,133,15,"id"],[99,19,133,17],[99,20,133,18,"length"],[99,26,133,24],[99,29,133,27],[99,30,133,28],[99,32,133,30,"i"],[99,33,133,31],[99,37,133,35],[99,38,133,36],[99,40,133,38,"i"],[99,41,133,39],[99,43,133,41],[99,45,133,43],[100,6,134,4],[100,10,134,8,"ident"],[100,15,134,13],[100,18,134,16,"id"],[100,20,134,18],[100,21,134,19,"i"],[100,22,134,20],[100,23,134,21],[101,6,135,4,"objid"],[101,11,135,9],[101,12,135,10,"offset"],[101,18,135,16],[101,20,135,18],[101,21,135,19],[101,24,135,22,"ident"],[101,29,135,27],[101,32,135,30],[101,36,135,34],[102,6,136,4],[102,13,136,11],[102,14,136,12,"ident"],[102,19,136,17],[102,24,136,22],[102,25,136,23],[102,29,136,27],[102,30,136,28],[102,32,137,6,"objid"],[102,37,137,11],[102,38,137,12,"offset"],[102,44,137,18],[102,46,137,20],[102,47,137,21],[102,50,137,24],[102,54,137,28],[102,57,137,32,"ident"],[102,62,137,37],[102,65,137,40],[102,69,137,45],[103,4,138,2],[104,4,140,2],[104,11,140,9],[104,15,140,13],[104,16,140,14,"_createEncoderBuffer"],[104,36,140,34],[104,37,140,35,"objid"],[104,42,140,40],[104,43,140,41],[105,2,141,0],[105,3,141,1],[106,2,143,0],[106,11,143,9,"two"],[106,14,143,12,"two"],[106,15,143,13,"num"],[106,18,143,16],[106,20,143,18],[107,4,144,2],[107,8,144,6,"num"],[107,11,144,9],[107,14,144,12],[107,16,144,14],[107,18,145,4],[107,25,145,11],[107,28,145,14],[107,31,145,17,"num"],[107,34,145,20],[107,35,145,21],[107,40,147,4],[107,47,147,11,"num"],[107,50,147,14],[108,2,148,0],[109,2,150,0,"DERNode"],[109,9,150,7],[109,10,150,8,"prototype"],[109,19,150,17],[109,20,150,18,"_encodeTime"],[109,31,150,29],[109,34,150,32],[109,43,150,41,"encodeTime"],[109,53,150,51,"encodeTime"],[109,54,150,52,"time"],[109,58,150,56],[109,60,150,58,"tag"],[109,63,150,61],[109,65,150,63],[110,4,151,2],[110,8,151,6,"str"],[110,11,151,9],[111,4,152,2],[111,8,152,6,"date"],[111,12,152,10],[111,15,152,13],[111,19,152,17,"Date"],[111,23,152,21],[111,24,152,22,"time"],[111,28,152,26],[111,29,152,27],[112,4,154,2],[112,8,154,6,"tag"],[112,11,154,9],[112,16,154,14],[112,25,154,23],[112,27,154,25],[113,6,155,4,"str"],[113,9,155,7],[113,12,155,10],[113,13,156,6,"two"],[113,16,156,9],[113,17,156,10,"date"],[113,21,156,14],[113,22,156,15,"getFullYear"],[113,33,156,26],[113,34,156,27],[113,35,156,28],[113,36,156,29],[113,38,157,6,"two"],[113,41,157,9],[113,42,157,10,"date"],[113,46,157,14],[113,47,157,15,"getUTCMonth"],[113,58,157,26],[113,59,157,27],[113,60,157,28],[113,63,157,31],[113,64,157,32],[113,65,157,33],[113,67,158,6,"two"],[113,70,158,9],[113,71,158,10,"date"],[113,75,158,14],[113,76,158,15,"getUTCDate"],[113,86,158,25],[113,87,158,26],[113,88,158,27],[113,89,158,28],[113,91,159,6,"two"],[113,94,159,9],[113,95,159,10,"date"],[113,99,159,14],[113,100,159,15,"getUTCHours"],[113,111,159,26],[113,112,159,27],[113,113,159,28],[113,114,159,29],[113,116,160,6,"two"],[113,119,160,9],[113,120,160,10,"date"],[113,124,160,14],[113,125,160,15,"getUTCMinutes"],[113,138,160,28],[113,139,160,29],[113,140,160,30],[113,141,160,31],[113,143,161,6,"two"],[113,146,161,9],[113,147,161,10,"date"],[113,151,161,14],[113,152,161,15,"getUTCSeconds"],[113,165,161,28],[113,166,161,29],[113,167,161,30],[113,168,161,31],[113,170,162,6],[113,173,162,9],[113,174,163,5],[113,175,163,6,"join"],[113,179,163,10],[113,180,163,11],[113,182,163,13],[113,183,163,14],[114,4,164,2],[114,5,164,3],[114,11,164,9],[114,15,164,13,"tag"],[114,18,164,16],[114,23,164,21],[114,32,164,30],[114,34,164,32],[115,6,165,4,"str"],[115,9,165,7],[115,12,165,10],[115,13,166,6,"two"],[115,16,166,9],[115,17,166,10,"date"],[115,21,166,14],[115,22,166,15,"getFullYear"],[115,33,166,26],[115,34,166,27],[115,35,166,28],[115,38,166,31],[115,41,166,34],[115,42,166,35],[115,44,167,6,"two"],[115,47,167,9],[115,48,167,10,"date"],[115,52,167,14],[115,53,167,15,"getUTCMonth"],[115,64,167,26],[115,65,167,27],[115,66,167,28],[115,69,167,31],[115,70,167,32],[115,71,167,33],[115,73,168,6,"two"],[115,76,168,9],[115,77,168,10,"date"],[115,81,168,14],[115,82,168,15,"getUTCDate"],[115,92,168,25],[115,93,168,26],[115,94,168,27],[115,95,168,28],[115,97,169,6,"two"],[115,100,169,9],[115,101,169,10,"date"],[115,105,169,14],[115,106,169,15,"getUTCHours"],[115,117,169,26],[115,118,169,27],[115,119,169,28],[115,120,169,29],[115,122,170,6,"two"],[115,125,170,9],[115,126,170,10,"date"],[115,130,170,14],[115,131,170,15,"getUTCMinutes"],[115,144,170,28],[115,145,170,29],[115,146,170,30],[115,147,170,31],[115,149,171,6,"two"],[115,152,171,9],[115,153,171,10,"date"],[115,157,171,14],[115,158,171,15,"getUTCSeconds"],[115,171,171,28],[115,172,171,29],[115,173,171,30],[115,174,171,31],[115,176,172,6],[115,179,172,9],[115,180,173,5],[115,181,173,6,"join"],[115,185,173,10],[115,186,173,11],[115,188,173,13],[115,189,173,14],[116,4,174,2],[116,5,174,3],[116,11,174,9],[117,6,175,4],[117,10,175,8],[117,11,175,9,"reporter"],[117,19,175,17],[117,20,175,18,"error"],[117,25,175,23],[117,26,175,24],[117,37,175,35],[117,40,175,38,"tag"],[117,43,175,41],[117,46,175,44],[117,74,175,72],[117,75,175,73],[118,4,176,2],[119,4,178,2],[119,11,178,9],[119,15,178,13],[119,16,178,14,"_encodeStr"],[119,26,178,24],[119,27,178,25,"str"],[119,30,178,28],[119,32,178,30],[119,40,178,38],[119,41,178,39],[120,2,179,0],[120,3,179,1],[121,2,181,0,"DERNode"],[121,9,181,7],[121,10,181,8,"prototype"],[121,19,181,17],[121,20,181,18,"_encodeNull"],[121,31,181,29],[121,34,181,32],[121,43,181,41,"encodeNull"],[121,53,181,51,"encodeNull"],[121,54,181,51],[121,56,181,54],[122,4,182,2],[122,11,182,9],[122,15,182,13],[122,16,182,14,"_createEncoderBuffer"],[122,36,182,34],[122,37,182,35],[122,39,182,37],[122,40,182,38],[123,2,183,0],[123,3,183,1],[124,2,185,0,"DERNode"],[124,9,185,7],[124,10,185,8,"prototype"],[124,19,185,17],[124,20,185,18,"_encodeInt"],[124,30,185,28],[124,33,185,31],[124,42,185,40,"encodeInt"],[124,51,185,49,"encodeInt"],[124,52,185,50,"num"],[124,55,185,53],[124,57,185,55,"values"],[124,63,185,61],[124,65,185,63],[125,4,186,2],[125,8,186,6],[125,15,186,13,"num"],[125,18,186,16],[125,23,186,21],[125,31,186,29],[125,33,186,31],[126,6,187,4],[126,10,187,8],[126,11,187,9,"values"],[126,17,187,15],[126,19,188,6],[126,26,188,13],[126,30,188,17],[126,31,188,18,"reporter"],[126,39,188,26],[126,40,188,27,"error"],[126,45,188,32],[126,46,188,33],[126,91,188,78],[126,92,188,79],[127,6,189,4],[127,10,189,8],[127,11,189,9,"values"],[127,17,189,15],[127,18,189,16,"hasOwnProperty"],[127,32,189,30],[127,33,189,31,"num"],[127,36,189,34],[127,37,189,35],[127,39,189,37],[128,8,190,6],[128,15,190,13],[128,19,190,17],[128,20,190,18,"reporter"],[128,28,190,26],[128,29,190,27,"error"],[128,34,190,32],[128,35,190,33],[128,66,190,64],[128,69,191,33,"JSON"],[128,73,191,37],[128,74,191,38,"stringify"],[128,83,191,47],[128,84,191,48,"num"],[128,87,191,51],[128,88,191,52],[128,89,191,53],[129,6,192,4],[130,6,193,4,"num"],[130,9,193,7],[130,12,193,10,"values"],[130,18,193,16],[130,19,193,17,"num"],[130,22,193,20],[130,23,193,21],[131,4,194,2],[133,4,196,2],[134,4,197,2],[134,8,197,6],[134,15,197,13,"num"],[134,18,197,16],[134,23,197,21],[134,31,197,29],[134,35,197,33],[134,36,197,34,"_$$_REQUIRE"],[134,47,197,34],[134,48,197,34,"_dependencyMap"],[134,62,197,34],[134,77,197,34,"Buffer"],[134,83,197,34],[134,84,197,41,"isBuffer"],[134,92,197,49],[134,93,197,50,"num"],[134,96,197,53],[134,97,197,54],[134,99,197,56],[135,6,198,4],[135,10,198,8,"numArray"],[135,18,198,16],[135,21,198,19,"num"],[135,24,198,22],[135,25,198,23,"toArray"],[135,32,198,30],[135,33,198,31],[135,34,198,32],[136,6,199,4],[136,10,199,8],[136,11,199,9,"num"],[136,14,199,12],[136,15,199,13,"sign"],[136,19,199,17],[136,23,199,21,"numArray"],[136,31,199,29],[136,32,199,30],[136,33,199,31],[136,34,199,32],[136,37,199,35],[136,41,199,39],[136,43,199,41],[137,8,200,6,"numArray"],[137,16,200,14],[137,17,200,15,"unshift"],[137,24,200,22],[137,25,200,23],[137,26,200,24],[137,27,200,25],[138,6,201,4],[139,6,202,4,"num"],[139,9,202,7],[139,12,202,10],[139,17,202,10,"_$$_REQUIRE"],[139,28,202,10],[139,29,202,10,"_dependencyMap"],[139,43,202,10],[139,58,202,10,"Buffer"],[139,64,202,10],[139,66,202,21,"numArray"],[139,74,202,29],[139,75,202,30],[140,4,203,2],[141,4,205,2],[141,8,205,6,"_$$_REQUIRE"],[141,19,205,6],[141,20,205,6,"_dependencyMap"],[141,34,205,6],[141,49,205,6,"Buffer"],[141,55,205,6],[141,56,205,13,"isBuffer"],[141,64,205,21],[141,65,205,22,"num"],[141,68,205,25],[141,69,205,26],[141,71,205,28],[142,6,206,4],[142,10,206,8,"size"],[142,14,206,12],[142,17,206,15,"num"],[142,20,206,18],[142,21,206,19,"length"],[142,27,206,25],[143,6,207,4],[143,10,207,8,"num"],[143,13,207,11],[143,14,207,12,"length"],[143,20,207,18],[143,25,207,23],[143,26,207,24],[143,28,208,6,"size"],[143,32,208,10],[143,34,208,12],[144,6,210,4],[144,10,210,8,"out"],[144,13,210,11],[144,16,210,14],[144,21,210,14,"_$$_REQUIRE"],[144,32,210,14],[144,33,210,14,"_dependencyMap"],[144,47,210,14],[144,62,210,14,"Buffer"],[144,68,210,14],[144,70,210,25,"size"],[144,74,210,29],[144,75,210,30],[145,6,211,4,"num"],[145,9,211,7],[145,10,211,8,"copy"],[145,14,211,12],[145,15,211,13,"out"],[145,18,211,16],[145,19,211,17],[146,6,212,4],[146,10,212,8,"num"],[146,13,212,11],[146,14,212,12,"length"],[146,20,212,18],[146,25,212,23],[146,26,212,24],[146,28,213,6,"out"],[146,31,213,9],[146,32,213,10],[146,33,213,11],[146,34,213,12],[146,37,213,15],[146,38,213,16],[147,6,214,4],[147,13,214,11],[147,17,214,15],[147,18,214,16,"_createEncoderBuffer"],[147,38,214,36],[147,39,214,37,"out"],[147,42,214,40],[147,43,214,41],[148,4,215,2],[149,4,217,2],[149,8,217,6,"num"],[149,11,217,9],[149,14,217,12],[149,18,217,16],[149,20,218,4],[149,27,218,11],[149,31,218,15],[149,32,218,16,"_createEncoderBuffer"],[149,52,218,36],[149,53,218,37,"num"],[149,56,218,40],[149,57,218,41],[150,4,220,2],[150,8,220,6,"num"],[150,11,220,9],[150,14,220,12],[150,19,220,17],[150,21,221,4],[150,28,221,11],[150,32,221,15],[150,33,221,16,"_createEncoderBuffer"],[150,53,221,36],[150,54,221,37],[150,55,221,38],[150,56,221,39],[150,58,221,41,"num"],[150,61,221,44],[150,62,221,45],[150,63,221,46],[151,4,223,2],[151,8,223,6,"size"],[151,12,223,10],[151,15,223,13],[151,16,223,14],[152,4,224,2],[152,9,224,7],[152,13,224,11,"i"],[152,14,224,12],[152,17,224,15,"num"],[152,20,224,18],[152,22,224,20,"i"],[152,23,224,21],[152,27,224,25],[152,32,224,30],[152,34,224,32,"i"],[152,35,224,33],[152,40,224,38],[152,41,224,39],[152,43,225,4,"size"],[152,47,225,8],[152,49,225,10],[153,4,227,2],[153,8,227,6,"out"],[153,11,227,9],[153,14,227,12],[153,18,227,16,"Array"],[153,23,227,21],[153,24,227,22,"size"],[153,28,227,26],[153,29,227,27],[154,4,228,2],[154,9,228,7],[154,13,228,11,"i"],[154,14,228,12],[154,17,228,15,"out"],[154,20,228,18],[154,21,228,19,"length"],[154,27,228,25],[154,30,228,28],[154,31,228,29],[154,33,228,31,"i"],[154,34,228,32],[154,38,228,36],[154,39,228,37],[154,41,228,39,"i"],[154,42,228,40],[154,44,228,42],[154,46,228,44],[155,6,229,4,"out"],[155,9,229,7],[155,10,229,8,"i"],[155,11,229,9],[155,12,229,10],[155,15,229,13,"num"],[155,18,229,16],[155,21,229,19],[155,25,229,23],[156,6,230,4,"num"],[156,9,230,7],[156,14,230,12],[156,15,230,13],[157,4,231,2],[158,4,232,2],[158,8,232,5,"out"],[158,11,232,8],[158,12,232,9],[158,13,232,10],[158,14,232,11],[158,17,232,14],[158,21,232,18],[158,23,232,20],[159,6,233,4,"out"],[159,9,233,7],[159,10,233,8,"unshift"],[159,17,233,15],[159,18,233,16],[159,19,233,17],[159,20,233,18],[160,4,234,2],[161,4,236,2],[161,11,236,9],[161,15,236,13],[161,16,236,14,"_createEncoderBuffer"],[161,36,236,34],[161,37,236,35],[161,42,236,35,"_$$_REQUIRE"],[161,53,236,35],[161,54,236,35,"_dependencyMap"],[161,68,236,35],[161,83,236,35,"Buffer"],[161,89,236,35],[161,91,236,46,"out"],[161,94,236,49],[161,95,236,50],[161,96,236,51],[162,2,237,0],[162,3,237,1],[163,2,239,0,"DERNode"],[163,9,239,7],[163,10,239,8,"prototype"],[163,19,239,17],[163,20,239,18,"_encodeBool"],[163,31,239,29],[163,34,239,32],[163,43,239,41,"encodeBool"],[163,53,239,51,"encodeBool"],[163,54,239,52,"value"],[163,59,239,57],[163,61,239,59],[164,4,240,2],[164,11,240,9],[164,15,240,13],[164,16,240,14,"_createEncoderBuffer"],[164,36,240,34],[164,37,240,35,"value"],[164,42,240,40],[164,45,240,43],[164,49,240,47],[164,52,240,50],[164,53,240,51],[164,54,240,52],[165,2,241,0],[165,3,241,1],[166,2,243,0,"DERNode"],[166,9,243,7],[166,10,243,8,"prototype"],[166,19,243,17],[166,20,243,18,"_use"],[166,24,243,22],[166,27,243,25],[166,36,243,34,"use"],[166,39,243,37,"use"],[166,40,243,38,"entity"],[166,46,243,44],[166,48,243,46,"obj"],[166,51,243,49],[166,53,243,51],[167,4,244,2],[167,8,244,6],[167,15,244,13,"entity"],[167,21,244,19],[167,26,244,24],[167,36,244,34],[167,38,245,4,"entity"],[167,44,245,10],[167,47,245,13,"entity"],[167,53,245,19],[167,54,245,20,"obj"],[167,57,245,23],[167,58,245,24],[168,4,246,2],[168,11,246,9,"entity"],[168,17,246,15],[168,18,246,16,"_getEncoder"],[168,29,246,27],[168,30,246,28],[168,35,246,33],[168,36,246,34],[168,37,246,35,"tree"],[168,41,246,39],[169,2,247,0],[169,3,247,1],[170,2,249,0,"DERNode"],[170,9,249,7],[170,10,249,8,"prototype"],[170,19,249,17],[170,20,249,18,"_skipDefault"],[170,32,249,30],[170,35,249,33],[170,44,249,42,"skipDefault"],[170,55,249,53,"skipDefault"],[170,56,249,54,"dataBuffer"],[170,66,249,64],[170,68,249,66,"reporter"],[170,76,249,74],[170,78,249,76,"parent"],[170,84,249,82],[170,86,249,84],[171,4,250,2],[171,8,250,6,"state"],[171,13,250,11],[171,16,250,14],[171,20,250,18],[171,21,250,19,"_baseState"],[171,31,250,29],[172,4,251,2],[172,8,251,6,"i"],[172,9,251,7],[173,4,252,2],[173,8,252,6,"state"],[173,13,252,11],[173,14,252,12],[173,23,252,21],[173,24,252,22],[173,29,252,27],[173,33,252,31],[173,35,253,4],[173,42,253,11],[173,47,253,16],[174,4,255,2],[174,8,255,6,"data"],[174,12,255,10],[174,15,255,13,"dataBuffer"],[174,25,255,23],[174,26,255,24,"join"],[174,30,255,28],[174,31,255,29],[174,32,255,30],[175,4,256,2],[175,8,256,6,"state"],[175,13,256,11],[175,14,256,12,"defaultBuffer"],[175,27,256,25],[175,32,256,30,"undefined"],[175,41,256,39],[175,43,257,4,"state"],[175,48,257,9],[175,49,257,10,"defaultBuffer"],[175,62,257,23],[175,65,257,26],[175,69,257,30],[175,70,257,31,"_encodeValue"],[175,82,257,43],[175,83,257,44,"state"],[175,88,257,49],[175,89,257,50],[175,98,257,59],[175,99,257,60],[175,101,257,62,"reporter"],[175,109,257,70],[175,111,257,72,"parent"],[175,117,257,78],[175,118,257,79],[175,119,257,80,"join"],[175,123,257,84],[175,124,257,85],[175,125,257,86],[176,4,259,2],[176,8,259,6,"data"],[176,12,259,10],[176,13,259,11,"length"],[176,19,259,17],[176,24,259,22,"state"],[176,29,259,27],[176,30,259,28,"defaultBuffer"],[176,43,259,41],[176,44,259,42,"length"],[176,50,259,48],[176,52,260,4],[176,59,260,11],[176,64,260,16],[177,4,262,2],[177,9,262,7,"i"],[177,10,262,8],[177,13,262,9],[177,14,262,10],[177,16,262,12,"i"],[177,17,262,13],[177,20,262,16,"data"],[177,24,262,20],[177,25,262,21,"length"],[177,31,262,27],[177,33,262,29,"i"],[177,34,262,30],[177,36,262,32],[177,38,263,4],[177,42,263,8,"data"],[177,46,263,12],[177,47,263,13,"i"],[177,48,263,14],[177,49,263,15],[177,54,263,20,"state"],[177,59,263,25],[177,60,263,26,"defaultBuffer"],[177,73,263,39],[177,74,263,40,"i"],[177,75,263,41],[177,76,263,42],[177,78,264,6],[177,85,264,13],[177,90,264,18],[178,4,266,2],[178,11,266,9],[178,15,266,13],[179,2,267,0],[179,3,267,1],[181,2,269,0],[183,2,271,0],[183,11,271,9,"encodeTag"],[183,20,271,18,"encodeTag"],[183,21,271,19,"tag"],[183,24,271,22],[183,26,271,24,"primitive"],[183,35,271,33],[183,37,271,35,"cls"],[183,40,271,38],[183,42,271,40,"reporter"],[183,50,271,48],[183,52,271,50],[184,4,272,2],[184,8,272,6,"res"],[184,11,272,9],[185,4,274,2],[185,8,274,6,"tag"],[185,11,274,9],[185,16,274,14],[185,23,274,21],[185,25,275,4,"tag"],[185,28,275,7],[185,31,275,10],[185,36,275,15],[185,37,275,16],[185,42,276,7],[185,46,276,11,"tag"],[185,49,276,14],[185,54,276,19],[185,61,276,26],[185,63,277,4,"tag"],[185,66,277,7],[185,69,277,10],[185,74,277,15],[186,4,279,2],[186,8,279,6,"der"],[186,11,279,9],[186,12,279,10,"tagByName"],[186,21,279,19],[186,22,279,20,"hasOwnProperty"],[186,36,279,34],[186,37,279,35,"tag"],[186,40,279,38],[186,41,279,39],[186,43,280,4,"res"],[186,46,280,7],[186,49,280,10,"der"],[186,52,280,13],[186,53,280,14,"tagByName"],[186,62,280,23],[186,63,280,24,"tag"],[186,66,280,27],[186,67,280,28],[186,68,280,29],[186,73,281,7],[186,77,281,11],[186,84,281,18,"tag"],[186,87,281,21],[186,92,281,26],[186,100,281,34],[186,104,281,38],[186,105,281,39,"tag"],[186,108,281,42],[186,111,281,45],[186,112,281,46],[186,118,281,52,"tag"],[186,121,281,55],[186,123,282,4,"res"],[186,126,282,7],[186,129,282,10,"tag"],[186,132,282,13],[186,133,282,14],[186,138,284,4],[186,145,284,11,"reporter"],[186,153,284,19],[186,154,284,20,"error"],[186,159,284,25],[186,160,284,26],[186,175,284,41],[186,178,284,44,"tag"],[186,181,284,47],[186,182,284,48],[187,4,286,2],[187,8,286,6,"res"],[187,11,286,9],[187,15,286,13],[187,19,286,17],[187,21,287,4],[187,28,287,11,"reporter"],[187,36,287,19],[187,37,287,20,"error"],[187,42,287,25],[187,43,287,26],[187,81,287,64],[187,82,287,65],[188,4,289,2],[188,8,289,6],[188,9,289,7,"primitive"],[188,18,289,16],[188,20,290,4,"res"],[188,23,290,7],[188,27,290,11],[188,31,290,15],[189,4,292,2,"res"],[189,7,292,5],[189,11,292,10,"der"],[189,14,292,13],[189,15,292,14,"tagClassByName"],[189,29,292,28],[189,30,292,29,"cls"],[189,33,292,32],[189,37,292,36],[189,48,292,47],[189,49,292,48],[189,53,292,52],[189,54,292,54],[190,4,294,2],[190,11,294,9,"res"],[190,14,294,12],[191,2,295,0],[192,0,295,1],[192,3]],"functionMap":{"names":["<global>","DEREncoder","encode","DERNode","encodeComposite","encodeStr","encodeObjid","two","encodeTime","encodeNull","encodeInt","encodeBool","use","skipDefault","encodeTag"],"mappings":"AAA;ACS;CDQ;8BEG;CFE;AGI;CHE;qCIG;CJ4B;+BKE;CLiC;iCME;CN4C;AOE;CPK;gCQE;CR6B;gCSE;CTE;+BUE;CVoD;gCWE;CXE;yBYE;CZI;iCaE;CbkB;AcI;CdwB"}},"type":"js/module"}]}