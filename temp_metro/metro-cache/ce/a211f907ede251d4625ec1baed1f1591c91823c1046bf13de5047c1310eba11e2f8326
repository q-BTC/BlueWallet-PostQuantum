{"dependencies":[{"name":"./sourceMap","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":38,"index":38}}],"key":"CrxdFUmy2fPoMRjCdOCGKdqTdPI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  function processChildren(node, delimeter) {\n    var list = node.children;\n    var prev = null;\n    if (typeof delimeter !== 'function') {\n      list.forEach(this.node, this);\n    } else {\n      list.forEach(function (node) {\n        if (prev !== null) {\n          delimeter.call(this, prev);\n        }\n        this.node(node);\n        prev = node;\n      }, this);\n    }\n  }\n  module.exports = function createGenerator(config) {\n    function processNode(node) {\n      if (hasOwnProperty.call(types, node.type)) {\n        types[node.type].call(this, node);\n      } else {\n        throw new Error('Unknown node type: ' + node.type);\n      }\n    }\n    var types = {};\n    if (config.node) {\n      for (var name in config.node) {\n        types[name] = config.node[name].generate;\n      }\n    }\n    return function (node, options) {\n      var buffer = '';\n      var handlers = {\n        children: processChildren,\n        node: processNode,\n        chunk: function chunk(_chunk) {\n          buffer += _chunk;\n        },\n        result: function result() {\n          return buffer;\n        }\n      };\n      if (options) {\n        if (typeof options.decorator === 'function') {\n          handlers = options.decorator(handlers);\n        }\n        if (options.sourceMap) {\n          handlers = _$$_REQUIRE(_dependencyMap[0], \"./sourceMap\")(handlers);\n        }\n      }\n      handlers.node(node);\n      return handlers.result();\n    };\n  };\n});","lineCount":56,"map":[[2,2,2,0],[2,6,2,4,"hasOwnProperty"],[2,20,2,18],[2,23,2,21,"Object"],[2,29,2,27],[2,30,2,28,"prototype"],[2,39,2,37],[2,40,2,38,"hasOwnProperty"],[2,54,2,52],[3,2,4,0],[3,11,4,9,"processChildren"],[3,26,4,24,"processChildren"],[3,27,4,25,"node"],[3,31,4,29],[3,33,4,31,"delimeter"],[3,42,4,40],[3,44,4,42],[4,4,5,4],[4,8,5,8,"list"],[4,12,5,12],[4,15,5,15,"node"],[4,19,5,19],[4,20,5,20,"children"],[4,28,5,28],[5,4,6,4],[5,8,6,8,"prev"],[5,12,6,12],[5,15,6,15],[5,19,6,19],[6,4,8,4],[6,8,8,8],[6,15,8,15,"delimeter"],[6,24,8,24],[6,29,8,29],[6,39,8,39],[6,41,8,41],[7,6,9,8,"list"],[7,10,9,12],[7,11,9,13,"forEach"],[7,18,9,20],[7,19,9,21],[7,23,9,25],[7,24,9,26,"node"],[7,28,9,30],[7,30,9,32],[7,34,9,36],[7,35,9,37],[8,4,10,4],[8,5,10,5],[8,11,10,11],[9,6,11,8,"list"],[9,10,11,12],[9,11,11,13,"forEach"],[9,18,11,20],[9,19,11,21],[9,29,11,30,"node"],[9,33,11,34],[9,35,11,36],[10,8,12,12],[10,12,12,16,"prev"],[10,16,12,20],[10,21,12,25],[10,25,12,29],[10,27,12,31],[11,10,13,16,"delimeter"],[11,19,13,25],[11,20,13,26,"call"],[11,24,13,30],[11,25,13,31],[11,29,13,35],[11,31,13,37,"prev"],[11,35,13,41],[11,36,13,42],[12,8,14,12],[13,8,16,12],[13,12,16,16],[13,13,16,17,"node"],[13,17,16,21],[13,18,16,22,"node"],[13,22,16,26],[13,23,16,27],[14,8,17,12,"prev"],[14,12,17,16],[14,15,17,19,"node"],[14,19,17,23],[15,6,18,8],[15,7,18,9],[15,9,18,11],[15,13,18,15],[15,14,18,16],[16,4,19,4],[17,2,20,0],[18,2,22,0,"module"],[18,8,22,6],[18,9,22,7,"exports"],[18,16,22,14],[18,19,22,17],[18,28,22,26,"createGenerator"],[18,43,22,41,"createGenerator"],[18,44,22,42,"config"],[18,50,22,48],[18,52,22,50],[19,4,23,4],[19,13,23,13,"processNode"],[19,24,23,24,"processNode"],[19,25,23,25,"node"],[19,29,23,29],[19,31,23,31],[20,6,24,8],[20,10,24,12,"hasOwnProperty"],[20,24,24,26],[20,25,24,27,"call"],[20,29,24,31],[20,30,24,32,"types"],[20,35,24,37],[20,37,24,39,"node"],[20,41,24,43],[20,42,24,44,"type"],[20,46,24,48],[20,47,24,49],[20,49,24,51],[21,8,25,12,"types"],[21,13,25,17],[21,14,25,18,"node"],[21,18,25,22],[21,19,25,23,"type"],[21,23,25,27],[21,24,25,28],[21,25,25,29,"call"],[21,29,25,33],[21,30,25,34],[21,34,25,38],[21,36,25,40,"node"],[21,40,25,44],[21,41,25,45],[22,6,26,8],[22,7,26,9],[22,13,26,15],[23,8,27,12],[23,14,27,18],[23,18,27,22,"Error"],[23,23,27,27],[23,24,27,28],[23,45,27,49],[23,48,27,52,"node"],[23,52,27,56],[23,53,27,57,"type"],[23,57,27,61],[23,58,27,62],[24,6,28,8],[25,4,29,4],[26,4,31,4],[26,8,31,8,"types"],[26,13,31,13],[26,16,31,16],[26,17,31,17],[26,18,31,18],[27,4,33,4],[27,8,33,8,"config"],[27,14,33,14],[27,15,33,15,"node"],[27,19,33,19],[27,21,33,21],[28,6,34,8],[28,11,34,13],[28,15,34,17,"name"],[28,19,34,21],[28,23,34,25,"config"],[28,29,34,31],[28,30,34,32,"node"],[28,34,34,36],[28,36,34,38],[29,8,35,12,"types"],[29,13,35,17],[29,14,35,18,"name"],[29,18,35,22],[29,19,35,23],[29,22,35,26,"config"],[29,28,35,32],[29,29,35,33,"node"],[29,33,35,37],[29,34,35,38,"name"],[29,38,35,42],[29,39,35,43],[29,40,35,44,"generate"],[29,48,35,52],[30,6,36,8],[31,4,37,4],[32,4,39,4],[32,11,39,11],[32,21,39,20,"node"],[32,25,39,24],[32,27,39,26,"options"],[32,34,39,33],[32,36,39,35],[33,6,40,8],[33,10,40,12,"buffer"],[33,16,40,18],[33,19,40,21],[33,21,40,23],[34,6,41,8],[34,10,41,12,"handlers"],[34,18,41,20],[34,21,41,23],[35,8,42,12,"children"],[35,16,42,20],[35,18,42,22,"processChildren"],[35,33,42,37],[36,8,43,12,"node"],[36,12,43,16],[36,14,43,18,"processNode"],[36,25,43,29],[37,8,44,12,"chunk"],[37,13,44,17],[37,15,44,19],[37,24,44,12,"chunk"],[37,29,44,17,"chunk"],[37,30,44,28,"chunk"],[37,36,44,33],[37,38,44,35],[38,10,45,16,"buffer"],[38,16,45,22],[38,20,45,26,"chunk"],[38,26,45,31],[39,8,46,12],[39,9,46,13],[40,8,47,12,"result"],[40,14,47,18],[40,16,47,20],[40,25,47,12,"result"],[40,31,47,18,"result"],[40,32,47,18],[40,34,47,31],[41,10,48,16],[41,17,48,23,"buffer"],[41,23,48,29],[42,8,49,12],[43,6,50,8],[43,7,50,9],[44,6,52,8],[44,10,52,12,"options"],[44,17,52,19],[44,19,52,21],[45,8,53,12],[45,12,53,16],[45,19,53,23,"options"],[45,26,53,30],[45,27,53,31,"decorator"],[45,36,53,40],[45,41,53,45],[45,51,53,55],[45,53,53,57],[46,10,54,16,"handlers"],[46,18,54,24],[46,21,54,27,"options"],[46,28,54,34],[46,29,54,35,"decorator"],[46,38,54,44],[46,39,54,45,"handlers"],[46,47,54,53],[46,48,54,54],[47,8,55,12],[48,8,57,12],[48,12,57,16,"options"],[48,19,57,23],[48,20,57,24,"sourceMap"],[48,29,57,33],[48,31,57,35],[49,10,58,16,"handlers"],[49,18,58,24],[49,21,58,27,"_$$_REQUIRE"],[49,32,58,27],[49,33,58,27,"_dependencyMap"],[49,47,58,27],[49,67,58,37,"handlers"],[49,75,58,45],[49,76,58,46],[50,8,59,12],[51,6,60,8],[52,6,62,8,"handlers"],[52,14,62,16],[52,15,62,17,"node"],[52,19,62,21],[52,20,62,22,"node"],[52,24,62,26],[52,25,62,27],[53,6,64,8],[53,13,64,15,"handlers"],[53,21,64,23],[53,22,64,24,"result"],[53,28,64,30],[53,29,64,31],[53,30,64,32],[54,4,65,4],[54,5,65,5],[55,2,66,0],[55,3,66,1],[56,0,66,2],[56,3]],"functionMap":{"names":["<global>","processChildren","list.forEach$argument_0","createGenerator","processNode","<anonymous>","handlers.chunk","handlers.result"],"mappings":"AAA;ACG;qBCO;SDO;CDE;iBGE;ICC;KDM;WEU;mBCK;aDE;oBEC;aFE;KFgB;CHC"}},"type":"js/module"}]}