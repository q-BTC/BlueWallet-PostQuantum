{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":206,"column":0,"index":7229}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@bugsnag/core/lib/es-utils/includes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":52},"end":{"line":3,"column":63,"index":98}},{"start":{"line":3,"column":17,"index":52},"end":{"line":3,"column":63,"index":98}}],"key":"XrNE1vrqaGWsBrmf0KLiQMXRo0M="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var BREADCRUMB_TYPE = 'request';\n  /*\n   * Leaves breadcrumbs when network requests occur\n   */\n  module.exports = function () {\n    var _ignoredUrls = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var win = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window;\n    var restoreFunctions = [];\n    var plugin = {\n      load: function load(client) {\n        if (!client._isBreadcrumbTypeEnabled('request')) return;\n        var ignoredUrls = [client._config.endpoints.notify, client._config.endpoints.sessions].concat(_ignoredUrls);\n        monkeyPatchXMLHttpRequest();\n        monkeyPatchFetch();\n\n        // XMLHttpRequest monkey patch\n        function monkeyPatchXMLHttpRequest() {\n          if (!('addEventListener' in win.XMLHttpRequest.prototype) || !('WeakMap' in win)) return;\n          var trackedRequests = new WeakMap();\n          var requestHandlers = new WeakMap();\n          var originalOpen = win.XMLHttpRequest.prototype.open;\n          win.XMLHttpRequest.prototype.open = function open(method, url) {\n            // it's possible for `this` to be `undefined`, which is not a valid key for a WeakMap\n            if (this) {\n              trackedRequests.set(this, {\n                method: method,\n                url: url\n              });\n            }\n            originalOpen.apply(this, arguments);\n          };\n          var originalSend = win.XMLHttpRequest.prototype.send;\n          win.XMLHttpRequest.prototype.send = function send(body) {\n            var _this = this;\n            var requestData = trackedRequests.get(this);\n            if (requestData) {\n              // if we have already setup listeners then this request instance is being reused,\n              // so we need to remove the listeners from the previous send\n              var listeners = requestHandlers.get(this);\n              if (listeners) {\n                this.removeEventListener('load', listeners.load);\n                this.removeEventListener('error', listeners.error);\n              }\n              var requestStart = new Date();\n              var error = function error() {\n                return handleXHRError(requestData.method, requestData.url, getDuration(requestStart));\n              };\n              var load = function load() {\n                return handleXHRLoad(requestData.method, requestData.url, _this.status, getDuration(requestStart));\n              };\n              this.addEventListener('load', load);\n              this.addEventListener('error', error);\n              // it's possible for `this` to be `undefined`, which is not a valid key for a WeakMap\n              if (this) {\n                requestHandlers.set(this, {\n                  load: load,\n                  error: error\n                });\n              }\n            }\n            originalSend.apply(this, arguments);\n          };\n          if (process.env.NODE_ENV !== 'production') {\n            restoreFunctions.push(function () {\n              win.XMLHttpRequest.prototype.open = originalOpen;\n              win.XMLHttpRequest.prototype.send = originalSend;\n            });\n          }\n        }\n        function handleXHRLoad(method, url, status, duration) {\n          if (url === undefined) {\n            client._logger.warn('The request URL is no longer present on this XMLHttpRequest. A breadcrumb cannot be left for this request.');\n            return;\n          }\n\n          // an XMLHttpRequest's URL can be an object as long as its 'toString'\n          // returns a URL, e.g. a HTMLAnchorElement\n          if (typeof url === 'string' && _$$_REQUIRE(_dependencyMap[1], \"@bugsnag/core/lib/es-utils/includes\")(ignoredUrls, url.replace(/\\?.*$/, ''))) {\n            // don't leave a network breadcrumb from bugsnag notify calls\n            return;\n          }\n          var metadata = {\n            status: status,\n            method: String(method),\n            url: String(url),\n            duration: duration\n          };\n          if (status >= 400) {\n            // contacted server but got an error response\n            client.leaveBreadcrumb('XMLHttpRequest failed', metadata, BREADCRUMB_TYPE);\n          } else {\n            client.leaveBreadcrumb('XMLHttpRequest succeeded', metadata, BREADCRUMB_TYPE);\n          }\n        }\n        function handleXHRError(method, url, duration) {\n          if (url === undefined) {\n            client._logger.warn('The request URL is no longer present on this XMLHttpRequest. A breadcrumb cannot be left for this request.');\n            return;\n          }\n          if (typeof url === 'string' && _$$_REQUIRE(_dependencyMap[1], \"@bugsnag/core/lib/es-utils/includes\")(ignoredUrls, url.replace(/\\?.*$/, ''))) {\n            // don't leave a network breadcrumb from bugsnag notify calls\n            return;\n          }\n\n          // failed to contact server\n          client.leaveBreadcrumb('XMLHttpRequest error', {\n            method: String(method),\n            url: String(url),\n            duration: duration\n          }, BREADCRUMB_TYPE);\n        }\n\n        // window.fetch monkey patch\n        function monkeyPatchFetch() {\n          // only patch it if it exists and if it is not a polyfill (patching a polyfilled\n          // fetch() results in duplicate breadcrumbs for the same request because the\n          // implementation uses XMLHttpRequest which is also patched)\n          if (!('fetch' in win) || win.fetch.polyfill) return;\n          var oldFetch = win.fetch;\n          win.fetch = function fetch() {\n            var _arguments = arguments;\n            var urlOrRequest = arguments[0];\n            var options = arguments[1];\n            var method;\n            var url = null;\n            if (urlOrRequest && typeof urlOrRequest === 'object') {\n              url = urlOrRequest.url;\n              if (options && 'method' in options) {\n                method = options.method;\n              } else if (urlOrRequest && 'method' in urlOrRequest) {\n                method = urlOrRequest.method;\n              }\n            } else {\n              url = urlOrRequest;\n              if (options && 'method' in options) {\n                method = options.method;\n              }\n            }\n            if (method === undefined) {\n              method = 'GET';\n            }\n            return new Promise(function (resolve, reject) {\n              var requestStart = new Date();\n\n              // pass through to native fetch\n              oldFetch.apply(void 0, _toConsumableArray(_arguments)).then(function (response) {\n                handleFetchSuccess(response, method, url, getDuration(requestStart));\n                resolve(response);\n              }).catch(function (error) {\n                handleFetchError(method, url, getDuration(requestStart));\n                reject(error);\n              });\n            });\n          };\n          if (process.env.NODE_ENV !== 'production') {\n            restoreFunctions.push(function () {\n              win.fetch = oldFetch;\n            });\n          }\n        }\n        var handleFetchSuccess = function handleFetchSuccess(response, method, url, duration) {\n          var metadata = {\n            method: String(method),\n            status: response.status,\n            url: String(url),\n            duration: duration\n          };\n          if (response.status >= 400) {\n            // when the request comes back with a 4xx or 5xx status it does not reject the fetch promise,\n            client.leaveBreadcrumb('fetch() failed', metadata, BREADCRUMB_TYPE);\n          } else {\n            client.leaveBreadcrumb('fetch() succeeded', metadata, BREADCRUMB_TYPE);\n          }\n        };\n        var handleFetchError = function handleFetchError(method, url, duration) {\n          client.leaveBreadcrumb('fetch() error', {\n            method: String(method),\n            url: String(url),\n            duration: duration\n          }, BREADCRUMB_TYPE);\n        };\n      }\n    };\n    if (process.env.NODE_ENV !== 'production') {\n      plugin.destroy = function () {\n        restoreFunctions.forEach(function (fn) {\n          return fn();\n        });\n        restoreFunctions = [];\n      };\n    }\n    return plugin;\n  };\n  var getDuration = function getDuration(startTime) {\n    return startTime && new Date() - startTime;\n  };\n});","lineCount":199,"map":[[3,2,1,0],[3,6,1,6,"BREADCRUMB_TYPE"],[3,21,1,21],[3,24,1,24],[3,33,1,33],[4,2,5,0],[5,0,6,0],[6,0,7,0],[7,2,8,0,"module"],[7,8,8,6],[7,9,8,7,"exports"],[7,16,8,14],[7,19,8,17],[7,31,8,54],[8,4,8,54],[8,8,8,18,"_ignoredUrls"],[8,20,8,30],[8,23,8,30,"arguments"],[8,32,8,30],[8,33,8,30,"length"],[8,39,8,30],[8,47,8,30,"arguments"],[8,56,8,30],[8,64,8,30,"undefined"],[8,73,8,30],[8,76,8,30,"arguments"],[8,85,8,30],[8,91,8,33],[8,93,8,35],[9,4,8,35],[9,8,8,37,"win"],[9,11,8,40],[9,14,8,40,"arguments"],[9,23,8,40],[9,24,8,40,"length"],[9,30,8,40],[9,38,8,40,"arguments"],[9,47,8,40],[9,55,8,40,"undefined"],[9,64,8,40],[9,67,8,40,"arguments"],[9,76,8,40],[9,82,8,43,"window"],[9,88,8,49],[10,4,9,2],[10,8,9,6,"restoreFunctions"],[10,24,9,22],[10,27,9,25],[10,29,9,27],[11,4,10,2],[11,8,10,8,"plugin"],[11,14,10,14],[11,17,10,17],[12,6,11,4,"load"],[12,10,11,8],[12,12,11,10],[12,21,11,4,"load"],[12,25,11,8,"load"],[12,26,11,10,"client"],[12,32,11,16],[12,34,11,20],[13,8,12,6],[13,12,12,10],[13,13,12,11,"client"],[13,19,12,17],[13,20,12,18,"_isBreadcrumbTypeEnabled"],[13,44,12,42],[13,45,12,43],[13,54,12,52],[13,55,12,53],[13,57,12,55],[14,8,14,6],[14,12,14,12,"ignoredUrls"],[14,23,14,23],[14,26,14,26],[14,27,15,8,"client"],[14,33,15,14],[14,34,15,15,"_config"],[14,41,15,22],[14,42,15,23,"endpoints"],[14,51,15,32],[14,52,15,33,"notify"],[14,58,15,39],[14,60,16,8,"client"],[14,66,16,14],[14,67,16,15,"_config"],[14,74,16,22],[14,75,16,23,"endpoints"],[14,84,16,32],[14,85,16,33,"sessions"],[14,93,16,41],[14,94,17,7],[14,95,17,8,"concat"],[14,101,17,14],[14,102,17,15,"_ignoredUrls"],[14,114,17,27],[14,115,17,28],[15,8,19,6,"monkeyPatchXMLHttpRequest"],[15,33,19,31],[15,34,19,32],[15,35,19,33],[16,8,20,6,"monkeyPatchFetch"],[16,24,20,22],[16,25,20,23],[16,26,20,24],[18,8,22,6],[19,8,23,6],[19,17,23,15,"monkeyPatchXMLHttpRequest"],[19,42,23,40,"monkeyPatchXMLHttpRequest"],[19,43,23,40],[19,45,23,44],[20,10,24,8],[20,14,24,12],[20,16,24,14],[20,34,24,32],[20,38,24,36,"win"],[20,41,24,39],[20,42,24,40,"XMLHttpRequest"],[20,56,24,54],[20,57,24,55,"prototype"],[20,66,24,64],[20,67,24,65],[20,71,24,69],[20,73,24,71],[20,82,24,80],[20,86,24,84,"win"],[20,89,24,87],[20,90,24,88],[20,92,24,90],[21,10,26,8],[21,14,26,14,"trackedRequests"],[21,29,26,29],[21,32,26,32],[21,36,26,36,"WeakMap"],[21,43,26,43],[21,44,26,44],[21,45,26,45],[22,10,27,8],[22,14,27,14,"requestHandlers"],[22,29,27,29],[22,32,27,32],[22,36,27,36,"WeakMap"],[22,43,27,43],[22,44,27,44],[22,45,27,45],[23,10,29,8],[23,14,29,14,"originalOpen"],[23,26,29,26],[23,29,29,29,"win"],[23,32,29,32],[23,33,29,33,"XMLHttpRequest"],[23,47,29,47],[23,48,29,48,"prototype"],[23,57,29,57],[23,58,29,58,"open"],[23,62,29,62],[24,10,30,8,"win"],[24,13,30,11],[24,14,30,12,"XMLHttpRequest"],[24,28,30,26],[24,29,30,27,"prototype"],[24,38,30,36],[24,39,30,37,"open"],[24,43,30,41],[24,46,30,44],[24,55,30,53,"open"],[24,59,30,57,"open"],[24,60,30,59,"method"],[24,66,30,65],[24,68,30,67,"url"],[24,71,30,70],[24,73,30,72],[25,12,31,10],[26,12,32,10],[26,16,32,14],[26,20,32,18],[26,22,32,20],[27,14,33,12,"trackedRequests"],[27,29,33,27],[27,30,33,28,"set"],[27,33,33,31],[27,34,33,32],[27,38,33,36],[27,40,33,38],[28,16,33,40,"method"],[28,22,33,46],[28,24,33,40,"method"],[28,30,33,46],[29,16,33,48,"url"],[29,19,33,51],[29,21,33,48,"url"],[30,14,33,52],[30,15,33,53],[30,16,33,54],[31,12,34,10],[32,12,35,10,"originalOpen"],[32,24,35,22],[32,25,35,23,"apply"],[32,30,35,28],[32,31,35,29],[32,35,35,33],[32,37,35,35,"arguments"],[32,46,35,44],[32,47,35,45],[33,10,36,8],[33,11,36,9],[34,10,38,8],[34,14,38,14,"originalSend"],[34,26,38,26],[34,29,38,29,"win"],[34,32,38,32],[34,33,38,33,"XMLHttpRequest"],[34,47,38,47],[34,48,38,48,"prototype"],[34,57,38,57],[34,58,38,58,"send"],[34,62,38,62],[35,10,39,8,"win"],[35,13,39,11],[35,14,39,12,"XMLHttpRequest"],[35,28,39,26],[35,29,39,27,"prototype"],[35,38,39,36],[35,39,39,37,"send"],[35,43,39,41],[35,46,39,44],[35,55,39,53,"send"],[35,59,39,57,"send"],[35,60,39,59,"body"],[35,64,39,63],[35,66,39,65],[36,12,39,65],[36,16,39,65,"_this"],[36,21,39,65],[37,12,40,10],[37,16,40,16,"requestData"],[37,27,40,27],[37,30,40,30,"trackedRequests"],[37,45,40,45],[37,46,40,46,"get"],[37,49,40,49],[37,50,40,50],[37,54,40,54],[37,55,40,55],[38,12,41,10],[38,16,41,14,"requestData"],[38,27,41,25],[38,29,41,27],[39,14,42,10],[40,14,43,10],[41,14,44,12],[41,18,44,18,"listeners"],[41,27,44,27],[41,30,44,30,"requestHandlers"],[41,45,44,45],[41,46,44,46,"get"],[41,49,44,49],[41,50,44,50],[41,54,44,54],[41,55,44,55],[42,14,45,12],[42,18,45,16,"listeners"],[42,27,45,25],[42,29,45,27],[43,16,46,14],[43,20,46,18],[43,21,46,19,"removeEventListener"],[43,40,46,38],[43,41,46,39],[43,47,46,45],[43,49,46,47,"listeners"],[43,58,46,56],[43,59,46,57,"load"],[43,63,46,61],[43,64,46,62],[44,16,47,14],[44,20,47,18],[44,21,47,19,"removeEventListener"],[44,40,47,38],[44,41,47,39],[44,48,47,46],[44,50,47,48,"listeners"],[44,59,47,57],[44,60,47,58,"error"],[44,65,47,63],[44,66,47,64],[45,14,48,12],[46,14,50,12],[46,18,50,18,"requestStart"],[46,30,50,30],[46,33,50,33],[46,37,50,37,"Date"],[46,41,50,41],[46,42,50,42],[46,43,50,43],[47,14,51,12],[47,18,51,18,"error"],[47,23,51,23],[47,26,51,26],[47,35,51,18,"error"],[47,40,51,23,"error"],[47,41,51,23],[48,16,51,23],[48,23,51,32,"handleXHRError"],[48,37,51,46],[48,38,51,47,"requestData"],[48,49,51,58],[48,50,51,59,"method"],[48,56,51,65],[48,58,51,67,"requestData"],[48,69,51,78],[48,70,51,79,"url"],[48,73,51,82],[48,75,51,84,"getDuration"],[48,86,51,95],[48,87,51,96,"requestStart"],[48,99,51,108],[48,100,51,109],[48,101,51,110],[49,14,51,110],[50,14,52,12],[50,18,52,18,"load"],[50,22,52,22],[50,25,52,25],[50,34,52,18,"load"],[50,38,52,22,"load"],[50,39,52,22],[51,16,52,22],[51,23,52,31,"handleXHRLoad"],[51,36,52,44],[51,37,52,45,"requestData"],[51,48,52,56],[51,49,52,57,"method"],[51,55,52,63],[51,57,52,65,"requestData"],[51,68,52,76],[51,69,52,77,"url"],[51,72,52,80],[51,74,52,82,"_this"],[51,79,52,86],[51,80,52,87,"status"],[51,86,52,93],[51,88,52,95,"getDuration"],[51,99,52,106],[51,100,52,107,"requestStart"],[51,112,52,119],[51,113,52,120],[51,114,52,121],[52,14,52,121],[53,14,54,12],[53,18,54,16],[53,19,54,17,"addEventListener"],[53,35,54,33],[53,36,54,34],[53,42,54,40],[53,44,54,42,"load"],[53,48,54,46],[53,49,54,47],[54,14,55,12],[54,18,55,16],[54,19,55,17,"addEventListener"],[54,35,55,33],[54,36,55,34],[54,43,55,41],[54,45,55,43,"error"],[54,50,55,48],[54,51,55,49],[55,14,56,12],[56,14,57,12],[56,18,57,16],[56,22,57,20],[56,24,57,22],[57,16,58,14,"requestHandlers"],[57,31,58,29],[57,32,58,30,"set"],[57,35,58,33],[57,36,58,34],[57,40,58,38],[57,42,58,40],[58,18,58,42,"load"],[58,22,58,46],[58,24,58,42,"load"],[58,28,58,46],[59,18,58,48,"error"],[59,23,58,53],[59,25,58,48,"error"],[60,16,58,54],[60,17,58,55],[60,18,58,56],[61,14,59,12],[62,12,60,10],[63,12,62,10,"originalSend"],[63,24,62,22],[63,25,62,23,"apply"],[63,30,62,28],[63,31,62,29],[63,35,62,33],[63,37,62,35,"arguments"],[63,46,62,44],[63,47,62,45],[64,10,63,8],[64,11,63,9],[65,10,65,8],[65,14,65,12,"process"],[65,21,65,19],[65,22,65,20,"env"],[65,25,65,23],[65,26,65,24,"NODE_ENV"],[65,34,65,32],[65,39,65,37],[65,51,65,49],[65,53,65,51],[66,12,66,10,"restoreFunctions"],[66,28,66,26],[66,29,66,27,"push"],[66,33,66,31],[66,34,66,32],[66,46,66,38],[67,14,67,12,"win"],[67,17,67,15],[67,18,67,16,"XMLHttpRequest"],[67,32,67,30],[67,33,67,31,"prototype"],[67,42,67,40],[67,43,67,41,"open"],[67,47,67,45],[67,50,67,48,"originalOpen"],[67,62,67,60],[68,14,68,12,"win"],[68,17,68,15],[68,18,68,16,"XMLHttpRequest"],[68,32,68,30],[68,33,68,31,"prototype"],[68,42,68,40],[68,43,68,41,"send"],[68,47,68,45],[68,50,68,48,"originalSend"],[68,62,68,60],[69,12,69,10],[69,13,69,11],[69,14,69,12],[70,10,70,8],[71,8,71,6],[72,8,73,6],[72,17,73,15,"handleXHRLoad"],[72,30,73,28,"handleXHRLoad"],[72,31,73,30,"method"],[72,37,73,36],[72,39,73,38,"url"],[72,42,73,41],[72,44,73,43,"status"],[72,50,73,49],[72,52,73,51,"duration"],[72,60,73,59],[72,62,73,61],[73,10,74,8],[73,14,74,12,"url"],[73,17,74,15],[73,22,74,20,"undefined"],[73,31,74,29],[73,33,74,31],[74,12,75,10,"client"],[74,18,75,16],[74,19,75,17,"_logger"],[74,26,75,24],[74,27,75,25,"warn"],[74,31,75,29],[74,32,75,30],[74,140,75,138],[74,141,75,139],[75,12,76,10],[76,10,77,8],[78,10,79,8],[79,10,80,8],[80,10,81,8],[80,14,81,12],[80,21,81,19,"url"],[80,24,81,22],[80,29,81,27],[80,37,81,35],[80,41,81,39,"_$$_REQUIRE"],[80,52,81,39],[80,53,81,39,"_dependencyMap"],[80,67,81,39],[80,111,81,48,"ignoredUrls"],[80,122,81,59],[80,124,81,61,"url"],[80,127,81,64],[80,128,81,65,"replace"],[80,135,81,72],[80,136,81,73],[80,143,81,80],[80,145,81,82],[80,147,81,84],[80,148,81,85],[80,149,81,86],[80,151,81,88],[81,12,82,10],[82,12,83,10],[83,10,84,8],[84,10,85,8],[84,14,85,14,"metadata"],[84,22,85,22],[84,25,85,25],[85,12,86,10,"status"],[85,18,86,16],[85,20,86,10,"status"],[85,26,86,16],[86,12,87,10,"method"],[86,18,87,16],[86,20,87,18,"String"],[86,26,87,24],[86,27,87,25,"method"],[86,33,87,31],[86,34,87,32],[87,12,88,10,"url"],[87,15,88,13],[87,17,88,15,"String"],[87,23,88,21],[87,24,88,22,"url"],[87,27,88,25],[87,28,88,26],[88,12,89,10,"duration"],[88,20,89,18],[88,22,89,20,"duration"],[89,10,90,8],[89,11,90,9],[90,10,91,8],[90,14,91,12,"status"],[90,20,91,18],[90,24,91,22],[90,27,91,25],[90,29,91,27],[91,12,92,10],[92,12,93,10,"client"],[92,18,93,16],[92,19,93,17,"leaveBreadcrumb"],[92,34,93,32],[92,35,93,33],[92,58,93,56],[92,60,93,58,"metadata"],[92,68,93,66],[92,70,93,68,"BREADCRUMB_TYPE"],[92,85,93,83],[92,86,93,84],[93,10,94,8],[93,11,94,9],[93,17,94,15],[94,12,95,10,"client"],[94,18,95,16],[94,19,95,17,"leaveBreadcrumb"],[94,34,95,32],[94,35,95,33],[94,61,95,59],[94,63,95,61,"metadata"],[94,71,95,69],[94,73,95,71,"BREADCRUMB_TYPE"],[94,88,95,86],[94,89,95,87],[95,10,96,8],[96,8,97,6],[97,8,99,6],[97,17,99,15,"handleXHRError"],[97,31,99,29,"handleXHRError"],[97,32,99,31,"method"],[97,38,99,37],[97,40,99,39,"url"],[97,43,99,42],[97,45,99,44,"duration"],[97,53,99,52],[97,55,99,54],[98,10,100,8],[98,14,100,12,"url"],[98,17,100,15],[98,22,100,20,"undefined"],[98,31,100,29],[98,33,100,31],[99,12,101,10,"client"],[99,18,101,16],[99,19,101,17,"_logger"],[99,26,101,24],[99,27,101,25,"warn"],[99,31,101,29],[99,32,101,30],[99,140,101,138],[99,141,101,139],[100,12,102,10],[101,10,103,8],[102,10,105,8],[102,14,105,12],[102,21,105,19,"url"],[102,24,105,22],[102,29,105,27],[102,37,105,35],[102,41,105,39,"_$$_REQUIRE"],[102,52,105,39],[102,53,105,39,"_dependencyMap"],[102,67,105,39],[102,111,105,48,"ignoredUrls"],[102,122,105,59],[102,124,105,61,"url"],[102,127,105,64],[102,128,105,65,"replace"],[102,135,105,72],[102,136,105,73],[102,143,105,80],[102,145,105,82],[102,147,105,84],[102,148,105,85],[102,149,105,86],[102,151,105,88],[103,12,106,10],[104,12,107,10],[105,10,108,8],[107,10,110,8],[108,10,111,8,"client"],[108,16,111,14],[108,17,111,15,"leaveBreadcrumb"],[108,32,111,30],[108,33,111,31],[108,55,111,53],[108,57,111,55],[109,12,112,10,"method"],[109,18,112,16],[109,20,112,18,"String"],[109,26,112,24],[109,27,112,25,"method"],[109,33,112,31],[109,34,112,32],[110,12,113,10,"url"],[110,15,113,13],[110,17,113,15,"String"],[110,23,113,21],[110,24,113,22,"url"],[110,27,113,25],[110,28,113,26],[111,12,114,10,"duration"],[111,20,114,18],[111,22,114,20,"duration"],[112,10,115,8],[112,11,115,9],[112,13,115,11,"BREADCRUMB_TYPE"],[112,28,115,26],[112,29,115,27],[113,8,116,6],[115,8,118,6],[116,8,119,6],[116,17,119,15,"monkeyPatchFetch"],[116,33,119,31,"monkeyPatchFetch"],[116,34,119,31],[116,36,119,35],[117,10,120,8],[118,10,121,8],[119,10,122,8],[120,10,123,8],[120,14,123,12],[120,16,123,14],[120,23,123,21],[120,27,123,25,"win"],[120,30,123,28],[120,31,123,29],[120,35,123,33,"win"],[120,38,123,36],[120,39,123,37,"fetch"],[120,44,123,42],[120,45,123,43,"polyfill"],[120,53,123,51],[120,55,123,53],[121,10,125,8],[121,14,125,14,"oldFetch"],[121,22,125,22],[121,25,125,25,"win"],[121,28,125,28],[121,29,125,29,"fetch"],[121,34,125,34],[122,10,126,8,"win"],[122,13,126,11],[122,14,126,12,"fetch"],[122,19,126,17],[122,22,126,20],[122,31,126,29,"fetch"],[122,36,126,34,"fetch"],[122,37,126,34],[122,39,126,38],[123,12,126,38],[123,16,126,38,"_arguments"],[123,26,126,38],[123,29,126,38,"arguments"],[123,38,126,38],[124,12,127,10],[124,16,127,16,"urlOrRequest"],[124,28,127,28],[124,31,127,31,"arguments"],[124,40,127,40],[124,41,127,41],[124,42,127,42],[124,43,127,43],[125,12,128,10],[125,16,128,16,"options"],[125,23,128,23],[125,26,128,26,"arguments"],[125,35,128,35],[125,36,128,36],[125,37,128,37],[125,38,128,38],[126,12,130,10],[126,16,130,14,"method"],[126,22,130,20],[127,12,131,10],[127,16,131,14,"url"],[127,19,131,17],[127,22,131,20],[127,26,131,24],[128,12,133,10],[128,16,133,14,"urlOrRequest"],[128,28,133,26],[128,32,133,30],[128,39,133,37,"urlOrRequest"],[128,51,133,49],[128,56,133,54],[128,64,133,62],[128,66,133,64],[129,14,134,12,"url"],[129,17,134,15],[129,20,134,18,"urlOrRequest"],[129,32,134,30],[129,33,134,31,"url"],[129,36,134,34],[130,14,135,12],[130,18,135,16,"options"],[130,25,135,23],[130,29,135,27],[130,37,135,35],[130,41,135,39,"options"],[130,48,135,46],[130,50,135,48],[131,16,136,14,"method"],[131,22,136,20],[131,25,136,23,"options"],[131,32,136,30],[131,33,136,31,"method"],[131,39,136,37],[132,14,137,12],[132,15,137,13],[132,21,137,19],[132,25,137,23,"urlOrRequest"],[132,37,137,35],[132,41,137,39],[132,49,137,47],[132,53,137,51,"urlOrRequest"],[132,65,137,63],[132,67,137,65],[133,16,138,14,"method"],[133,22,138,20],[133,25,138,23,"urlOrRequest"],[133,37,138,35],[133,38,138,36,"method"],[133,44,138,42],[134,14,139,12],[135,12,140,10],[135,13,140,11],[135,19,140,17],[136,14,141,12,"url"],[136,17,141,15],[136,20,141,18,"urlOrRequest"],[136,32,141,30],[137,14,142,12],[137,18,142,16,"options"],[137,25,142,23],[137,29,142,27],[137,37,142,35],[137,41,142,39,"options"],[137,48,142,46],[137,50,142,48],[138,16,143,14,"method"],[138,22,143,20],[138,25,143,23,"options"],[138,32,143,30],[138,33,143,31,"method"],[138,39,143,37],[139,14,144,12],[140,12,145,10],[141,12,147,10],[141,16,147,14,"method"],[141,22,147,20],[141,27,147,25,"undefined"],[141,36,147,34],[141,38,147,36],[142,14,148,12,"method"],[142,20,148,18],[142,23,148,21],[142,28,148,26],[143,12,149,10],[144,12,151,10],[144,19,151,17],[144,23,151,21,"Promise"],[144,30,151,28],[144,31,151,29],[144,41,151,30,"resolve"],[144,48,151,37],[144,50,151,39,"reject"],[144,56,151,45],[144,58,151,50],[145,14,152,12],[145,18,152,18,"requestStart"],[145,30,152,30],[145,33,152,33],[145,37,152,37,"Date"],[145,41,152,41],[145,42,152,42],[145,43,152,43],[147,14,154,12],[148,14,155,12,"oldFetch"],[148,22,155,20],[148,23,155,20,"apply"],[148,28,155,20],[148,37,155,20,"_toConsumableArray"],[148,55,155,20],[148,56,155,24,"arguments"],[148,66,155,33],[148,68,155,34],[148,69,156,15,"then"],[148,73,156,19],[148,74,156,20],[148,84,156,20,"response"],[148,92,156,28],[148,94,156,32],[149,16,157,16,"handleFetchSuccess"],[149,34,157,34],[149,35,157,35,"response"],[149,43,157,43],[149,45,157,45,"method"],[149,51,157,51],[149,53,157,53,"url"],[149,56,157,56],[149,58,157,58,"getDuration"],[149,69,157,69],[149,70,157,70,"requestStart"],[149,82,157,82],[149,83,157,83],[149,84,157,84],[150,16,158,16,"resolve"],[150,23,158,23],[150,24,158,24,"response"],[150,32,158,32],[150,33,158,33],[151,14,159,14],[151,15,159,15],[151,16,159,16],[151,17,160,15,"catch"],[151,22,160,20],[151,23,160,21],[151,33,160,21,"error"],[151,38,160,26],[151,40,160,30],[152,16,161,16,"handleFetchError"],[152,32,161,32],[152,33,161,33,"method"],[152,39,161,39],[152,41,161,41,"url"],[152,44,161,44],[152,46,161,46,"getDuration"],[152,57,161,57],[152,58,161,58,"requestStart"],[152,70,161,70],[152,71,161,71],[152,72,161,72],[153,16,162,16,"reject"],[153,22,162,22],[153,23,162,23,"error"],[153,28,162,28],[153,29,162,29],[154,14,163,14],[154,15,163,15],[154,16,163,16],[155,12,164,10],[155,13,164,11],[155,14,164,12],[156,10,165,8],[156,11,165,9],[157,10,167,8],[157,14,167,12,"process"],[157,21,167,19],[157,22,167,20,"env"],[157,25,167,23],[157,26,167,24,"NODE_ENV"],[157,34,167,32],[157,39,167,37],[157,51,167,49],[157,53,167,51],[158,12,168,10,"restoreFunctions"],[158,28,168,26],[158,29,168,27,"push"],[158,33,168,31],[158,34,168,32],[158,46,168,38],[159,14,169,12,"win"],[159,17,169,15],[159,18,169,16,"fetch"],[159,23,169,21],[159,26,169,24,"oldFetch"],[159,34,169,32],[160,12,170,10],[160,13,170,11],[160,14,170,12],[161,10,171,8],[162,8,172,6],[163,8,174,6],[163,12,174,12,"handleFetchSuccess"],[163,30,174,30],[163,33,174,33],[163,42,174,12,"handleFetchSuccess"],[163,60,174,30,"handleFetchSuccess"],[163,61,174,34,"response"],[163,69,174,42],[163,71,174,44,"method"],[163,77,174,50],[163,79,174,52,"url"],[163,82,174,55],[163,84,174,57,"duration"],[163,92,174,65],[163,94,174,70],[164,10,175,8],[164,14,175,14,"metadata"],[164,22,175,22],[164,25,175,25],[165,12,176,10,"method"],[165,18,176,16],[165,20,176,18,"String"],[165,26,176,24],[165,27,176,25,"method"],[165,33,176,31],[165,34,176,32],[166,12,177,10,"status"],[166,18,177,16],[166,20,177,18,"response"],[166,28,177,26],[166,29,177,27,"status"],[166,35,177,33],[167,12,178,10,"url"],[167,15,178,13],[167,17,178,15,"String"],[167,23,178,21],[167,24,178,22,"url"],[167,27,178,25],[167,28,178,26],[168,12,179,10,"duration"],[168,20,179,18],[168,22,179,20,"duration"],[169,10,180,8],[169,11,180,9],[170,10,181,8],[170,14,181,12,"response"],[170,22,181,20],[170,23,181,21,"status"],[170,29,181,27],[170,33,181,31],[170,36,181,34],[170,38,181,36],[171,12,182,10],[172,12,183,10,"client"],[172,18,183,16],[172,19,183,17,"leaveBreadcrumb"],[172,34,183,32],[172,35,183,33],[172,51,183,49],[172,53,183,51,"metadata"],[172,61,183,59],[172,63,183,61,"BREADCRUMB_TYPE"],[172,78,183,76],[172,79,183,77],[173,10,184,8],[173,11,184,9],[173,17,184,15],[174,12,185,10,"client"],[174,18,185,16],[174,19,185,17,"leaveBreadcrumb"],[174,34,185,32],[174,35,185,33],[174,54,185,52],[174,56,185,54,"metadata"],[174,64,185,62],[174,66,185,64,"BREADCRUMB_TYPE"],[174,81,185,79],[174,82,185,80],[175,10,186,8],[176,8,187,6],[176,9,187,7],[177,8,189,6],[177,12,189,12,"handleFetchError"],[177,28,189,28],[177,31,189,31],[177,40,189,12,"handleFetchError"],[177,56,189,28,"handleFetchError"],[177,57,189,32,"method"],[177,63,189,38],[177,65,189,40,"url"],[177,68,189,43],[177,70,189,45,"duration"],[177,78,189,53],[177,80,189,58],[178,10,190,8,"client"],[178,16,190,14],[178,17,190,15,"leaveBreadcrumb"],[178,32,190,30],[178,33,190,31],[178,48,190,46],[178,50,190,48],[179,12,190,50,"method"],[179,18,190,56],[179,20,190,58,"String"],[179,26,190,64],[179,27,190,65,"method"],[179,33,190,71],[179,34,190,72],[180,12,190,74,"url"],[180,15,190,77],[180,17,190,79,"String"],[180,23,190,85],[180,24,190,86,"url"],[180,27,190,89],[180,28,190,90],[181,12,190,92,"duration"],[181,20,190,100],[181,22,190,102,"duration"],[182,10,190,111],[182,11,190,112],[182,13,190,114,"BREADCRUMB_TYPE"],[182,28,190,129],[182,29,190,130],[183,8,191,6],[183,9,191,7],[184,6,192,4],[185,4,193,2],[185,5,193,3],[186,4,195,2],[186,8,195,6,"process"],[186,15,195,13],[186,16,195,14,"env"],[186,19,195,17],[186,20,195,18,"NODE_ENV"],[186,28,195,26],[186,33,195,31],[186,45,195,43],[186,47,195,45],[187,6,196,4,"plugin"],[187,12,196,10],[187,13,196,11,"destroy"],[187,20,196,18],[187,23,196,21],[187,35,196,27],[188,8,197,6,"restoreFunctions"],[188,24,197,22],[188,25,197,23,"forEach"],[188,32,197,30],[188,33,197,31],[188,43,197,31,"fn"],[188,45,197,33],[189,10,197,33],[189,17,197,37,"fn"],[189,19,197,39],[189,20,197,40],[189,21,197,41],[190,8,197,41],[190,10,197,42],[191,8,198,6,"restoreFunctions"],[191,24,198,22],[191,27,198,25],[191,29,198,27],[192,6,199,4],[192,7,199,5],[193,4,200,2],[194,4,202,2],[194,11,202,9,"plugin"],[194,17,202,15],[195,2,203,0],[195,3,203,1],[196,2,205,0],[196,6,205,6,"getDuration"],[196,17,205,17],[196,20,205,20],[196,29,205,6,"getDuration"],[196,40,205,17,"getDuration"],[196,41,205,21,"startTime"],[196,50,205,30],[197,4,205,30],[197,11,205,35,"startTime"],[197,20,205,44],[197,24,205,48],[197,28,205,52,"Date"],[197,32,205,56],[197,33,205,57],[197,34,205,58],[197,37,205,61,"startTime"],[197,46,205,70],[198,2,205,70],[199,0,205,70],[199,3]],"functionMap":{"names":["<global>","module.exports","plugin.load","monkeyPatchXMLHttpRequest","open","send","error","load","restoreFunctions.push$argument_0","handleXHRLoad","handleXHRError","monkeyPatchFetch","fetch","Promise$argument_0","oldFetch.then$argument_0","oldFetch.then._catch$argument_0","handleFetchSuccess","handleFetchError","plugin.destroy","restoreFunctions.forEach$argument_0","getDuration"],"mappings":"AAA;iBCO;UCG;MCY;4CCO;SDM;4CEG;0BCY,oFD;yBEC,gGF;SFW;gCKG;WLG;ODE;MOE;OPwB;MQE;ORiB;MSG;oBCO;6BCyB;oBCK;eDG;qBEC;eFG;WDC;SDC;gCHG;WGE;OTE;iCcE;Oda;+BeE;OfE;KDC;qBiBI;+BCC,UD;KjBE;CDI;oBoBE,kDpB"}},"type":"js/module"}]}