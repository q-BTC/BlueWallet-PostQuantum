{"dependencies":[{"name":"is-callable","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":39,"index":54}}],"key":"YREip3IyKdnq9dIJP97ubahRdn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var toStr = Object.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /** @type {<This, A extends readonly unknown[]>(arr: A, iterator: (this: This | void, value: A[number], index: number, arr: A) => void, receiver: This | undefined) => void} */\n  var forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (hasOwnProperty.call(array, i)) {\n        if (receiver == null) {\n          iterator(array[i], i, array);\n        } else {\n          iterator.call(receiver, array[i], i, array);\n        }\n      }\n    }\n  };\n\n  /** @type {<This, S extends string>(string: S, iterator: (this: This | void, value: S[number], index: number, string: S) => void, receiver: This | undefined) => void} */\n  var forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n      // no such thing as a sparse string.\n      if (receiver == null) {\n        iterator(string.charAt(i), i, string);\n      } else {\n        iterator.call(receiver, string.charAt(i), i, string);\n      }\n    }\n  };\n\n  /** @type {<This, O>(obj: O, iterator: (this: This | void, value: O[keyof O], index: keyof O, obj: O) => void, receiver: This | undefined) => void} */\n  var forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n      if (hasOwnProperty.call(object, k)) {\n        if (receiver == null) {\n          iterator(object[k], k, object);\n        } else {\n          iterator.call(receiver, object[k], k, object);\n        }\n      }\n    }\n  };\n\n  /** @type {(x: unknown) => x is readonly unknown[]} */\n  function isArray(x) {\n    return toStr.call(x) === '[object Array]';\n  }\n\n  /** @type {import('.')._internal} */\n  module.exports = function forEach(list, iterator, thisArg) {\n    if (!_$$_REQUIRE(_dependencyMap[0], \"is-callable\")(iterator)) {\n      throw new TypeError('iterator must be a function');\n    }\n    var receiver;\n    if (arguments.length >= 3) {\n      receiver = thisArg;\n    }\n    if (isArray(list)) {\n      forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n      forEachString(list, iterator, receiver);\n    } else {\n      forEachObject(list, iterator, receiver);\n    }\n  };\n});","lineCount":67,"map":[[2,2,1,0],[2,14,1,12],[4,2,5,0],[4,6,5,4,"toStr"],[4,11,5,9],[4,14,5,12,"Object"],[4,20,5,18],[4,21,5,19,"prototype"],[4,30,5,28],[4,31,5,29,"toString"],[4,39,5,37],[5,2,6,0],[5,6,6,4,"hasOwnProperty"],[5,20,6,18],[5,23,6,21,"Object"],[5,29,6,27],[5,30,6,28,"prototype"],[5,39,6,37],[5,40,6,38,"hasOwnProperty"],[5,54,6,52],[7,2,8,0],[8,2,9,0],[8,6,9,4,"forEachArray"],[8,18,9,16],[8,21,9,19],[8,30,9,28,"forEachArray"],[8,42,9,40,"forEachArray"],[8,43,9,41,"array"],[8,48,9,46],[8,50,9,48,"iterator"],[8,58,9,56],[8,60,9,58,"receiver"],[8,68,9,66],[8,70,9,68],[9,4,10,4],[9,9,10,9],[9,13,10,13,"i"],[9,14,10,14],[9,17,10,17],[9,18,10,18],[9,20,10,20,"len"],[9,23,10,23],[9,26,10,26,"array"],[9,31,10,31],[9,32,10,32,"length"],[9,38,10,38],[9,40,10,40,"i"],[9,41,10,41],[9,44,10,44,"len"],[9,47,10,47],[9,49,10,49,"i"],[9,50,10,50],[9,52,10,52],[9,54,10,54],[10,6,11,8],[10,10,11,12,"hasOwnProperty"],[10,24,11,26],[10,25,11,27,"call"],[10,29,11,31],[10,30,11,32,"array"],[10,35,11,37],[10,37,11,39,"i"],[10,38,11,40],[10,39,11,41],[10,41,11,43],[11,8,12,12],[11,12,12,16,"receiver"],[11,20,12,24],[11,24,12,28],[11,28,12,32],[11,30,12,34],[12,10,13,16,"iterator"],[12,18,13,24],[12,19,13,25,"array"],[12,24,13,30],[12,25,13,31,"i"],[12,26,13,32],[12,27,13,33],[12,29,13,35,"i"],[12,30,13,36],[12,32,13,38,"array"],[12,37,13,43],[12,38,13,44],[13,8,14,12],[13,9,14,13],[13,15,14,19],[14,10,15,16,"iterator"],[14,18,15,24],[14,19,15,25,"call"],[14,23,15,29],[14,24,15,30,"receiver"],[14,32,15,38],[14,34,15,40,"array"],[14,39,15,45],[14,40,15,46,"i"],[14,41,15,47],[14,42,15,48],[14,44,15,50,"i"],[14,45,15,51],[14,47,15,53,"array"],[14,52,15,58],[14,53,15,59],[15,8,16,12],[16,6,17,8],[17,4,18,4],[18,2,19,0],[18,3,19,1],[20,2,21,0],[21,2,22,0],[21,6,22,4,"forEachString"],[21,19,22,17],[21,22,22,20],[21,31,22,29,"forEachString"],[21,44,22,42,"forEachString"],[21,45,22,43,"string"],[21,51,22,49],[21,53,22,51,"iterator"],[21,61,22,59],[21,63,22,61,"receiver"],[21,71,22,69],[21,73,22,71],[22,4,23,4],[22,9,23,9],[22,13,23,13,"i"],[22,14,23,14],[22,17,23,17],[22,18,23,18],[22,20,23,20,"len"],[22,23,23,23],[22,26,23,26,"string"],[22,32,23,32],[22,33,23,33,"length"],[22,39,23,39],[22,41,23,41,"i"],[22,42,23,42],[22,45,23,45,"len"],[22,48,23,48],[22,50,23,50,"i"],[22,51,23,51],[22,53,23,53],[22,55,23,55],[23,6,24,8],[24,6,25,8],[24,10,25,12,"receiver"],[24,18,25,20],[24,22,25,24],[24,26,25,28],[24,28,25,30],[25,8,26,12,"iterator"],[25,16,26,20],[25,17,26,21,"string"],[25,23,26,27],[25,24,26,28,"charAt"],[25,30,26,34],[25,31,26,35,"i"],[25,32,26,36],[25,33,26,37],[25,35,26,39,"i"],[25,36,26,40],[25,38,26,42,"string"],[25,44,26,48],[25,45,26,49],[26,6,27,8],[26,7,27,9],[26,13,27,15],[27,8,28,12,"iterator"],[27,16,28,20],[27,17,28,21,"call"],[27,21,28,25],[27,22,28,26,"receiver"],[27,30,28,34],[27,32,28,36,"string"],[27,38,28,42],[27,39,28,43,"charAt"],[27,45,28,49],[27,46,28,50,"i"],[27,47,28,51],[27,48,28,52],[27,50,28,54,"i"],[27,51,28,55],[27,53,28,57,"string"],[27,59,28,63],[27,60,28,64],[28,6,29,8],[29,4,30,4],[30,2,31,0],[30,3,31,1],[32,2,33,0],[33,2,34,0],[33,6,34,4,"forEachObject"],[33,19,34,17],[33,22,34,20],[33,31,34,29,"forEachObject"],[33,44,34,42,"forEachObject"],[33,45,34,43,"object"],[33,51,34,49],[33,53,34,51,"iterator"],[33,61,34,59],[33,63,34,61,"receiver"],[33,71,34,69],[33,73,34,71],[34,4,35,4],[34,9,35,9],[34,13,35,13,"k"],[34,14,35,14],[34,18,35,18,"object"],[34,24,35,24],[34,26,35,26],[35,6,36,8],[35,10,36,12,"hasOwnProperty"],[35,24,36,26],[35,25,36,27,"call"],[35,29,36,31],[35,30,36,32,"object"],[35,36,36,38],[35,38,36,40,"k"],[35,39,36,41],[35,40,36,42],[35,42,36,44],[36,8,37,12],[36,12,37,16,"receiver"],[36,20,37,24],[36,24,37,28],[36,28,37,32],[36,30,37,34],[37,10,38,16,"iterator"],[37,18,38,24],[37,19,38,25,"object"],[37,25,38,31],[37,26,38,32,"k"],[37,27,38,33],[37,28,38,34],[37,30,38,36,"k"],[37,31,38,37],[37,33,38,39,"object"],[37,39,38,45],[37,40,38,46],[38,8,39,12],[38,9,39,13],[38,15,39,19],[39,10,40,16,"iterator"],[39,18,40,24],[39,19,40,25,"call"],[39,23,40,29],[39,24,40,30,"receiver"],[39,32,40,38],[39,34,40,40,"object"],[39,40,40,46],[39,41,40,47,"k"],[39,42,40,48],[39,43,40,49],[39,45,40,51,"k"],[39,46,40,52],[39,48,40,54,"object"],[39,54,40,60],[39,55,40,61],[40,8,41,12],[41,6,42,8],[42,4,43,4],[43,2,44,0],[43,3,44,1],[45,2,46,0],[46,2,47,0],[46,11,47,9,"isArray"],[46,18,47,16,"isArray"],[46,19,47,17,"x"],[46,20,47,18],[46,22,47,20],[47,4,48,4],[47,11,48,11,"toStr"],[47,16,48,16],[47,17,48,17,"call"],[47,21,48,21],[47,22,48,22,"x"],[47,23,48,23],[47,24,48,24],[47,29,48,29],[47,45,48,45],[48,2,49,0],[50,2,51,0],[51,2,52,0,"module"],[51,8,52,6],[51,9,52,7,"exports"],[51,16,52,14],[51,19,52,17],[51,28,52,26,"forEach"],[51,35,52,33,"forEach"],[51,36,52,34,"list"],[51,40,52,38],[51,42,52,40,"iterator"],[51,50,52,48],[51,52,52,50,"thisArg"],[51,59,52,57],[51,61,52,59],[52,4,53,4],[52,8,53,8],[52,9,53,9,"_$$_REQUIRE"],[52,20,53,9],[52,21,53,9,"_dependencyMap"],[52,35,53,9],[52,55,53,20,"iterator"],[52,63,53,28],[52,64,53,29],[52,66,53,31],[53,6,54,8],[53,12,54,14],[53,16,54,18,"TypeError"],[53,25,54,27],[53,26,54,28],[53,55,54,57],[53,56,54,58],[54,4,55,4],[55,4,57,4],[55,8,57,8,"receiver"],[55,16,57,16],[56,4,58,4],[56,8,58,8,"arguments"],[56,17,58,17],[56,18,58,18,"length"],[56,24,58,24],[56,28,58,28],[56,29,58,29],[56,31,58,31],[57,6,59,8,"receiver"],[57,14,59,16],[57,17,59,19,"thisArg"],[57,24,59,26],[58,4,60,4],[59,4,62,4],[59,8,62,8,"isArray"],[59,15,62,15],[59,16,62,16,"list"],[59,20,62,20],[59,21,62,21],[59,23,62,23],[60,6,63,8,"forEachArray"],[60,18,63,20],[60,19,63,21,"list"],[60,23,63,25],[60,25,63,27,"iterator"],[60,33,63,35],[60,35,63,37,"receiver"],[60,43,63,45],[60,44,63,46],[61,4,64,4],[61,5,64,5],[61,11,64,11],[61,15,64,15],[61,22,64,22,"list"],[61,26,64,26],[61,31,64,31],[61,39,64,39],[61,41,64,41],[62,6,65,8,"forEachString"],[62,19,65,21],[62,20,65,22,"list"],[62,24,65,26],[62,26,65,28,"iterator"],[62,34,65,36],[62,36,65,38,"receiver"],[62,44,65,46],[62,45,65,47],[63,4,66,4],[63,5,66,5],[63,11,66,11],[64,6,67,8,"forEachObject"],[64,19,67,21],[64,20,67,22,"list"],[64,24,67,26],[64,26,67,28,"iterator"],[64,34,67,36],[64,36,67,38,"receiver"],[64,44,67,46],[64,45,67,47],[65,4,68,4],[66,2,69,0],[66,3,69,1],[67,0,69,2],[67,3]],"functionMap":{"names":["<global>","forEachArray","forEachString","forEachObject","isArray","forEach"],"mappings":"AAA;mBCQ;CDU;oBEG;CFS;oBGG;CHU;AIG;CJE;iBKG;CLiB"}},"type":"js/module"}]}