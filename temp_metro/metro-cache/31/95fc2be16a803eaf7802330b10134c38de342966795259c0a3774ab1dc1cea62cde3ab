{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":403,"column":0,"index":13267}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":403,"column":0,"index":13267}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"varuint-bitcoin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":327},"end":{"line":9,"column":42,"index":353}},{"start":{"line":9,"column":16,"index":327},"end":{"line":9,"column":42,"index":353}},{"start":{"line":9,"column":16,"index":327},"end":{"line":9,"column":42,"index":353}},{"start":{"line":9,"column":16,"index":327},"end":{"line":9,"column":42,"index":353}}],"key":"d/MLbboLwipJSIgxTfEgzKAp95s="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}},{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}},{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}},{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}},{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}},{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}},{"start":{"line":8,"column":18,"index":289},"end":{"line":8,"column":38,"index":309}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}},{"start":{"line":7,"column":14,"index":251},"end":{"line":7,"column":32,"index":269}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":178},"end":{"line":5,"column":35,"index":197}},{"start":{"line":5,"column":16,"index":178},"end":{"line":5,"column":35,"index":197}},{"start":{"line":6,"column":17,"index":216},"end":{"line":6,"column":36,"index":235}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}},{"name":"./bufferutils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}}],"key":"8h+4nPdiw4lgWqmpJE4tN3Ks+fM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function varSliceSize(someScript) {\n    var length = someScript.length;\n    return _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encodingLength(length) + length;\n  }\n  function vectorSize(someVector) {\n    var length = someVector.length;\n    return _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encodingLength(length) + someVector.reduce(function (sum, witness) {\n      return sum + varSliceSize(witness);\n    }, 0);\n  }\n  var EMPTY_SCRIPT = Buffer.allocUnsafe(0);\n  var EMPTY_WITNESS = [];\n  var ZERO = Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex');\n  var ONE = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex');\n  var VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\n  var BLANK_OUTPUT = {\n    script: EMPTY_SCRIPT,\n    valueBuffer: VALUE_UINT64_MAX\n  };\n  function isOutput(out) {\n    return out.value !== undefined;\n  }\n  var Transaction = /*#__PURE__*/function () {\n    function Transaction() {\n      _classCallCheck(this, Transaction);\n      this.version = 1;\n      this.locktime = 0;\n      this.ins = [];\n      this.outs = [];\n    }\n    return _createClass(Transaction, [{\n      key: \"isCoinbase\",\n      value: function isCoinbase() {\n        return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash);\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(hash, index, sequence, scriptSig) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[4], \"./types\").Hash256bit, _$$_REQUIRE(_dependencyMap[4], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[4], \"./types\").maybe(_$$_REQUIRE(_dependencyMap[4], \"./types\").UInt32), _$$_REQUIRE(_dependencyMap[4], \"./types\").maybe(_$$_REQUIRE(_dependencyMap[4], \"./types\").Buffer)), arguments);\n        if (_$$_REQUIRE(_dependencyMap[4], \"./types\").Null(sequence)) {\n          sequence = Transaction.DEFAULT_SEQUENCE;\n        }\n        // Add the input and return the input's index\n        return this.ins.push({\n          hash: hash,\n          index: index,\n          script: scriptSig || EMPTY_SCRIPT,\n          sequence: sequence,\n          witness: EMPTY_WITNESS\n        }) - 1;\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(scriptPubKey, value) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[4], \"./types\").Buffer, _$$_REQUIRE(_dependencyMap[4], \"./types\").Satoshi), arguments);\n        // Add the output and return the output's index\n        return this.outs.push({\n          script: scriptPubKey,\n          value: value\n        }) - 1;\n      }\n    }, {\n      key: \"hasWitnesses\",\n      value: function hasWitnesses() {\n        return this.ins.some(function (x) {\n          return x.witness.length !== 0;\n        });\n      }\n    }, {\n      key: \"weight\",\n      value: function weight() {\n        var base = this.byteLength(false);\n        var total = this.byteLength(true);\n        return base * 3 + total;\n      }\n    }, {\n      key: \"virtualSize\",\n      value: function virtualSize() {\n        return Math.ceil(this.weight() / 4);\n      }\n    }, {\n      key: \"byteLength\",\n      value: function byteLength() {\n        var _ALLOW_WITNESS = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n        return (hasWitnesses ? 10 : 8) + _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encodingLength(this.ins.length) + _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encodingLength(this.outs.length) + this.ins.reduce(function (sum, input) {\n          return sum + 40 + varSliceSize(input.script);\n        }, 0) + this.outs.reduce(function (sum, output) {\n          return sum + 8 + varSliceSize(output.script);\n        }, 0) + (hasWitnesses ? this.ins.reduce(function (sum, input) {\n          return sum + vectorSize(input.witness);\n        }, 0) : 0);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var newTx = new Transaction();\n        newTx.version = this.version;\n        newTx.locktime = this.locktime;\n        newTx.ins = this.ins.map(function (txIn) {\n          return {\n            hash: txIn.hash,\n            index: txIn.index,\n            script: txIn.script,\n            sequence: txIn.sequence,\n            witness: txIn.witness\n          };\n        });\n        newTx.outs = this.outs.map(function (txOut) {\n          return {\n            script: txOut.script,\n            value: txOut.value\n          };\n        });\n        return newTx;\n      }\n      /**\n       * Hash transaction for signing a specific input.\n       *\n       * Bitcoin uses a different hash for each signed transaction input.\n       * This method copies the transaction, makes the necessary changes based on the\n       * hashType, and then hashes the result.\n       * This hash can then be used to sign the provided transaction input.\n       */\n    }, {\n      key: \"hashForSignature\",\n      value: function hashForSignature(inIndex, prevOutScript, hashType) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[4], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[4], \"./types\").Buffer, /* types.UInt8 */_$$_REQUIRE(_dependencyMap[4], \"./types\").Number), arguments);\n        // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n        if (inIndex >= this.ins.length) return ONE;\n        // ignore OP_CODESEPARATOR\n        var ourScript = _$$_REQUIRE(_dependencyMap[5], \"./script\").compile(_$$_REQUIRE(_dependencyMap[5], \"./script\").decompile(prevOutScript).filter(function (x) {\n          return x !== _$$_REQUIRE(_dependencyMap[5], \"./script\").OPS.OP_CODESEPARATOR;\n        }));\n        var txTmp = this.clone();\n        // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n        if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n          txTmp.outs = [];\n          // ignore sequence numbers (except at inIndex)\n          txTmp.ins.forEach(function (input, i) {\n            if (i === inIndex) return;\n            input.sequence = 0;\n          });\n          // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n        } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n          // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n          if (inIndex >= this.outs.length) return ONE;\n          // truncate outputs after\n          txTmp.outs.length = inIndex + 1;\n          // \"blank\" outputs before\n          for (var i = 0; i < inIndex; i++) {\n            txTmp.outs[i] = BLANK_OUTPUT;\n          }\n          // ignore sequence numbers (except at inIndex)\n          txTmp.ins.forEach(function (input, y) {\n            if (y === inIndex) return;\n            input.sequence = 0;\n          });\n        }\n        // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n        if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n          txTmp.ins = [txTmp.ins[inIndex]];\n          txTmp.ins[0].script = ourScript;\n          // SIGHASH_ALL: only ignore input scripts\n        } else {\n          // \"blank\" others input scripts\n          txTmp.ins.forEach(function (input) {\n            input.script = EMPTY_SCRIPT;\n          });\n          txTmp.ins[inIndex].script = ourScript;\n        }\n        // serialize and hash\n        var buffer = Buffer.allocUnsafe(txTmp.byteLength(false) + 4);\n        buffer.writeInt32LE(hashType, buffer.length - 4);\n        txTmp.__toBuffer(buffer, 0, false);\n        return _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(buffer);\n      }\n    }, {\n      key: \"hashForWitnessV0\",\n      value: function hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[4], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[4], \"./types\").Buffer, _$$_REQUIRE(_dependencyMap[4], \"./types\").Satoshi, _$$_REQUIRE(_dependencyMap[4], \"./types\").UInt32), arguments);\n        var tbuffer = Buffer.from([]);\n        var bufferWriter;\n        var hashOutputs = ZERO;\n        var hashPrevouts = ZERO;\n        var hashSequence = ZERO;\n        if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n          tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeSlice(txIn.hash);\n            bufferWriter.writeUInt32(txIn.index);\n          });\n          hashPrevouts = _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(tbuffer);\n        }\n        if (!(hashType & Transaction.SIGHASH_ANYONECANPAY) && (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n          tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeUInt32(txIn.sequence);\n          });\n          hashSequence = _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(tbuffer);\n        }\n        if ((hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n          var txOutsSize = this.outs.reduce(function (sum, output) {\n            return sum + 8 + varSliceSize(output.script);\n          }, 0);\n          tbuffer = Buffer.allocUnsafe(txOutsSize);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          this.outs.forEach(function (out) {\n            bufferWriter.writeUInt64(out.value);\n            bufferWriter.writeVarSlice(out.script);\n          });\n          hashOutputs = _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(tbuffer);\n        } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE && inIndex < this.outs.length) {\n          var output = this.outs[inIndex];\n          tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          bufferWriter.writeUInt64(output.value);\n          bufferWriter.writeVarSlice(output.script);\n          hashOutputs = _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(tbuffer);\n        }\n        tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n        bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n        var input = this.ins[inIndex];\n        bufferWriter.writeUInt32(this.version);\n        bufferWriter.writeSlice(hashPrevouts);\n        bufferWriter.writeSlice(hashSequence);\n        bufferWriter.writeSlice(input.hash);\n        bufferWriter.writeUInt32(input.index);\n        bufferWriter.writeVarSlice(prevOutScript);\n        bufferWriter.writeUInt64(value);\n        bufferWriter.writeUInt32(input.sequence);\n        bufferWriter.writeSlice(hashOutputs);\n        bufferWriter.writeUInt32(this.locktime);\n        bufferWriter.writeUInt32(hashType);\n        return _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(tbuffer);\n      }\n    }, {\n      key: \"getHash\",\n      value: function getHash(forWitness) {\n        // wtxid for coinbase is always 32 bytes of 0x00\n        if (forWitness && this.isCoinbase()) return Buffer.alloc(32, 0);\n        return _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hash256(this.__toBuffer(undefined, undefined, forWitness));\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        // transaction hash's are displayed in reverse order\n        return _$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").reverseBuffer(this.getHash(false)).toString('hex');\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer(buffer, initialOffset) {\n        return this.__toBuffer(buffer, initialOffset, true);\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex() {\n        return this.toBuffer(undefined, undefined).toString('hex');\n      }\n    }, {\n      key: \"setInputScript\",\n      value: function setInputScript(index, scriptSig) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[4], \"./types\").Number, _$$_REQUIRE(_dependencyMap[4], \"./types\").Buffer), arguments);\n        this.ins[index].script = scriptSig;\n      }\n    }, {\n      key: \"setWitness\",\n      value: function setWitness(index, witness) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[4], \"./types\").Number, [_$$_REQUIRE(_dependencyMap[4], \"./types\").Buffer]), arguments);\n        this.ins[index].witness = witness;\n      }\n    }, {\n      key: \"__toBuffer\",\n      value: function __toBuffer(buffer, initialOffset) {\n        var _ALLOW_WITNESS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (!buffer) buffer = Buffer.allocUnsafe(this.byteLength(_ALLOW_WITNESS));\n        var bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferWriter)(buffer, initialOffset || 0);\n        bufferWriter.writeInt32(this.version);\n        var hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n        if (hasWitnesses) {\n          bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n          bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n        }\n        bufferWriter.writeVarInt(this.ins.length);\n        this.ins.forEach(function (txIn) {\n          bufferWriter.writeSlice(txIn.hash);\n          bufferWriter.writeUInt32(txIn.index);\n          bufferWriter.writeVarSlice(txIn.script);\n          bufferWriter.writeUInt32(txIn.sequence);\n        });\n        bufferWriter.writeVarInt(this.outs.length);\n        this.outs.forEach(function (txOut) {\n          if (isOutput(txOut)) {\n            bufferWriter.writeUInt64(txOut.value);\n          } else {\n            bufferWriter.writeSlice(txOut.valueBuffer);\n          }\n          bufferWriter.writeVarSlice(txOut.script);\n        });\n        if (hasWitnesses) {\n          this.ins.forEach(function (input) {\n            bufferWriter.writeVector(input.witness);\n          });\n        }\n        bufferWriter.writeUInt32(this.locktime);\n        // avoid slicing unless necessary\n        if (initialOffset !== undefined) return buffer.slice(initialOffset, bufferWriter.offset);\n        return buffer;\n      }\n    }], [{\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer, _NO_STRICT) {\n        var bufferReader = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").BufferReader)(buffer);\n        var tx = new Transaction();\n        tx.version = bufferReader.readInt32();\n        var marker = bufferReader.readUInt8();\n        var flag = bufferReader.readUInt8();\n        var hasWitnesses = false;\n        if (marker === Transaction.ADVANCED_TRANSACTION_MARKER && flag === Transaction.ADVANCED_TRANSACTION_FLAG) {\n          hasWitnesses = true;\n        } else {\n          bufferReader.offset -= 2;\n        }\n        var vinLen = bufferReader.readVarInt();\n        for (var i = 0; i < vinLen; ++i) {\n          tx.ins.push({\n            hash: bufferReader.readSlice(32),\n            index: bufferReader.readUInt32(),\n            script: bufferReader.readVarSlice(),\n            sequence: bufferReader.readUInt32(),\n            witness: EMPTY_WITNESS\n          });\n        }\n        var voutLen = bufferReader.readVarInt();\n        for (var _i = 0; _i < voutLen; ++_i) {\n          tx.outs.push({\n            value: bufferReader.readUInt64(),\n            script: bufferReader.readVarSlice()\n          });\n        }\n        if (hasWitnesses) {\n          for (var _i2 = 0; _i2 < vinLen; ++_i2) {\n            tx.ins[_i2].witness = bufferReader.readVector();\n          }\n          // was this pointless?\n          if (!tx.hasWitnesses()) throw new Error('Transaction has superfluous witness data');\n        }\n        tx.locktime = bufferReader.readUInt32();\n        if (_NO_STRICT) return tx;\n        if (bufferReader.offset !== buffer.length) throw new Error('Transaction has unexpected data');\n        return tx;\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(hex) {\n        return Transaction.fromBuffer(Buffer.from(hex, 'hex'), false);\n      }\n    }, {\n      key: \"isCoinbaseHash\",\n      value: function isCoinbaseHash(buffer) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[4], \"./types\").Hash256bit, buffer);\n        for (var i = 0; i < 32; ++i) {\n          if (buffer[i] !== 0) return false;\n        }\n        return true;\n      }\n    }]);\n  }();\n  Transaction.DEFAULT_SEQUENCE = 0xffffffff;\n  Transaction.SIGHASH_ALL = 0x01;\n  Transaction.SIGHASH_NONE = 0x02;\n  Transaction.SIGHASH_SINGLE = 0x03;\n  Transaction.SIGHASH_ANYONECANPAY = 0x80;\n  Transaction.ADVANCED_TRANSACTION_MARKER = 0x00;\n  Transaction.ADVANCED_TRANSACTION_FLAG = 0x01;\n  exports.Transaction = Transaction;\n});","lineCount":387,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,10,0],[9,11,10,9,"varSliceSize"],[9,23,10,21,"varSliceSize"],[9,24,10,22,"someScript"],[9,34,10,32],[9,36,10,34],[10,4,11,2],[10,8,11,8,"length"],[10,14,11,14],[10,17,11,17,"someScript"],[10,27,11,27],[10,28,11,28,"length"],[10,34,11,34],[11,4,12,2],[11,11,12,9,"_$$_REQUIRE"],[11,22,12,9],[11,23,12,9,"_dependencyMap"],[11,37,12,9],[11,61,12,17,"encodingLength"],[11,75,12,31],[11,76,12,32,"length"],[11,82,12,38],[11,83,12,39],[11,86,12,42,"length"],[11,92,12,48],[12,2,13,0],[13,2,14,0],[13,11,14,9,"vectorSize"],[13,21,14,19,"vectorSize"],[13,22,14,20,"someVector"],[13,32,14,30],[13,34,14,32],[14,4,15,2],[14,8,15,8,"length"],[14,14,15,14],[14,17,15,17,"someVector"],[14,27,15,27],[14,28,15,28,"length"],[14,34,15,34],[15,4,16,2],[15,11,17,4,"_$$_REQUIRE"],[15,22,17,4],[15,23,17,4,"_dependencyMap"],[15,37,17,4],[15,61,17,12,"encodingLength"],[15,75,17,26],[15,76,17,27,"length"],[15,82,17,33],[15,83,17,34],[15,86,18,4,"someVector"],[15,96,18,14],[15,97,18,15,"reduce"],[15,103,18,21],[15,104,18,22],[15,114,18,23,"sum"],[15,117,18,26],[15,119,18,28,"witness"],[15,126,18,35],[15,128,18,40],[16,6,19,6],[16,13,19,13,"sum"],[16,16,19,16],[16,19,19,19,"varSliceSize"],[16,31,19,31],[16,32,19,32,"witness"],[16,39,19,39],[16,40,19,40],[17,4,20,4],[17,5,20,5],[17,7,20,7],[17,8,20,8],[17,9,20,9],[18,2,22,0],[19,2,23,0],[19,6,23,6,"EMPTY_SCRIPT"],[19,18,23,18],[19,21,23,21,"Buffer"],[19,27,23,27],[19,28,23,28,"allocUnsafe"],[19,39,23,39],[19,40,23,40],[19,41,23,41],[19,42,23,42],[20,2,24,0],[20,6,24,6,"EMPTY_WITNESS"],[20,19,24,19],[20,22,24,22],[20,24,24,24],[21,2,25,0],[21,6,25,6,"ZERO"],[21,10,25,10],[21,13,25,13,"Buffer"],[21,19,25,19],[21,20,25,20,"from"],[21,24,25,24],[21,25,26,2],[21,91,26,68],[21,93,27,2],[21,98,28,0],[21,99,28,1],[22,2,29,0],[22,6,29,6,"ONE"],[22,9,29,9],[22,12,29,12,"Buffer"],[22,18,29,18],[22,19,29,19,"from"],[22,23,29,23],[22,24,30,2],[22,90,30,68],[22,92,31,2],[22,97,32,0],[22,98,32,1],[23,2,33,0],[23,6,33,6,"VALUE_UINT64_MAX"],[23,22,33,22],[23,25,33,25,"Buffer"],[23,31,33,31],[23,32,33,32,"from"],[23,36,33,36],[23,37,33,37],[23,55,33,55],[23,57,33,57],[23,62,33,62],[23,63,33,63],[24,2,34,0],[24,6,34,6,"BLANK_OUTPUT"],[24,18,34,18],[24,21,34,21],[25,4,35,2,"script"],[25,10,35,8],[25,12,35,10,"EMPTY_SCRIPT"],[25,24,35,22],[26,4,36,2,"valueBuffer"],[26,15,36,13],[26,17,36,15,"VALUE_UINT64_MAX"],[27,2,37,0],[27,3,37,1],[28,2,38,0],[28,11,38,9,"isOutput"],[28,19,38,17,"isOutput"],[28,20,38,18,"out"],[28,23,38,21],[28,25,38,23],[29,4,39,2],[29,11,39,9,"out"],[29,14,39,12],[29,15,39,13,"value"],[29,20,39,18],[29,25,39,23,"undefined"],[29,34,39,32],[30,2,40,0],[31,2,40,1],[31,6,41,6,"Transaction"],[31,17,41,17],[32,4,42,2],[32,13,42,2,"Transaction"],[32,25,42,2],[32,27,42,16],[33,6,42,16,"_classCallCheck"],[33,21,42,16],[33,28,42,16,"Transaction"],[33,39,42,16],[34,6,43,4],[34,10,43,8],[34,11,43,9,"version"],[34,18,43,16],[34,21,43,19],[34,22,43,20],[35,6,44,4],[35,10,44,8],[35,11,44,9,"locktime"],[35,19,44,17],[35,22,44,20],[35,23,44,21],[36,6,45,4],[36,10,45,8],[36,11,45,9,"ins"],[36,14,45,12],[36,17,45,15],[36,19,45,17],[37,6,46,4],[37,10,46,8],[37,11,46,9,"outs"],[37,15,46,13],[37,18,46,16],[37,20,46,18],[38,4,47,2],[39,4,47,3],[39,11,47,3,"_createClass"],[39,23,47,3],[39,24,47,3,"Transaction"],[39,35,47,3],[40,6,47,3,"key"],[40,9,47,3],[41,6,47,3,"value"],[41,11,47,3],[41,13,104,2],[41,22,104,2,"isCoinbase"],[41,32,104,12,"isCoinbase"],[41,33,104,12],[41,35,104,15],[42,8,105,4],[42,15,106,6],[42,19,106,10],[42,20,106,11,"ins"],[42,23,106,14],[42,24,106,15,"length"],[42,30,106,21],[42,35,106,26],[42,36,106,27],[42,40,106,31,"Transaction"],[42,51,106,42],[42,52,106,43,"isCoinbaseHash"],[42,66,106,57],[42,67,106,58],[42,71,106,62],[42,72,106,63,"ins"],[42,75,106,66],[42,76,106,67],[42,77,106,68],[42,78,106,69],[42,79,106,70,"hash"],[42,83,106,74],[42,84,106,75],[43,6,108,2],[44,4,108,3],[45,6,108,3,"key"],[45,9,108,3],[46,6,108,3,"value"],[46,11,108,3],[46,13,109,2],[46,22,109,2,"addInput"],[46,30,109,10,"addInput"],[46,31,109,11,"hash"],[46,35,109,15],[46,37,109,17,"index"],[46,42,109,22],[46,44,109,24,"sequence"],[46,52,109,32],[46,54,109,34,"scriptSig"],[46,63,109,43],[46,65,109,45],[47,8,110,4,"_$$_REQUIRE"],[47,19,110,4],[47,20,110,4,"_dependencyMap"],[47,34,110,4],[47,52,111,6,"_$$_REQUIRE"],[47,63,111,6],[47,64,111,6,"_dependencyMap"],[47,78,111,6],[47,94,111,12,"tuple"],[47,99,111,17],[47,100,112,8,"_$$_REQUIRE"],[47,111,112,8],[47,112,112,8,"_dependencyMap"],[47,126,112,8],[47,142,112,14,"Hash256bit"],[47,152,112,24],[47,154,113,8,"_$$_REQUIRE"],[47,165,113,8],[47,166,113,8,"_dependencyMap"],[47,180,113,8],[47,196,113,14,"UInt32"],[47,202,113,20],[47,204,114,8,"_$$_REQUIRE"],[47,215,114,8],[47,216,114,8,"_dependencyMap"],[47,230,114,8],[47,246,114,14,"maybe"],[47,251,114,19],[47,252,114,20,"_$$_REQUIRE"],[47,263,114,20],[47,264,114,20,"_dependencyMap"],[47,278,114,20],[47,294,114,26,"UInt32"],[47,300,114,32],[47,301,114,33],[47,303,115,8,"_$$_REQUIRE"],[47,314,115,8],[47,315,115,8,"_dependencyMap"],[47,329,115,8],[47,345,115,14,"maybe"],[47,350,115,19],[47,351,115,20,"_$$_REQUIRE"],[47,362,115,20],[47,363,115,20,"_dependencyMap"],[47,377,115,20],[47,393,115,26,"Buffer"],[47,399,115,32],[47,400,116,6],[47,401,116,7],[47,403,117,6,"arguments"],[47,412,118,4],[47,413,118,5],[48,8,119,4],[48,12,119,8,"_$$_REQUIRE"],[48,23,119,8],[48,24,119,8,"_dependencyMap"],[48,38,119,8],[48,54,119,14,"Null"],[48,58,119,18],[48,59,119,19,"sequence"],[48,67,119,27],[48,68,119,28],[48,70,119,30],[49,10,120,6,"sequence"],[49,18,120,14],[49,21,120,17,"Transaction"],[49,32,120,28],[49,33,120,29,"DEFAULT_SEQUENCE"],[49,49,120,45],[50,8,121,4],[51,8,122,4],[52,8,123,4],[52,15,124,6],[52,19,124,10],[52,20,124,11,"ins"],[52,23,124,14],[52,24,124,15,"push"],[52,28,124,19],[52,29,124,20],[53,10,125,8,"hash"],[53,14,125,12],[53,16,125,8,"hash"],[53,20,125,12],[54,10,126,8,"index"],[54,15,126,13],[54,17,126,8,"index"],[54,22,126,13],[55,10,127,8,"script"],[55,16,127,14],[55,18,127,16,"scriptSig"],[55,27,127,25],[55,31,127,29,"EMPTY_SCRIPT"],[55,43,127,41],[56,10,128,8,"sequence"],[56,18,128,16],[56,20,128,18,"sequence"],[56,28,128,26],[57,10,129,8,"witness"],[57,17,129,15],[57,19,129,17,"EMPTY_WITNESS"],[58,8,130,6],[58,9,130,7],[58,10,130,8],[58,13,130,11],[58,14,130,12],[59,6,132,2],[60,4,132,3],[61,6,132,3,"key"],[61,9,132,3],[62,6,132,3,"value"],[62,11,132,3],[62,13,133,2],[62,22,133,2,"addOutput"],[62,31,133,11,"addOutput"],[62,32,133,12,"scriptPubKey"],[62,44,133,24],[62,46,133,26,"value"],[62,51,133,31],[62,53,133,33],[63,8,134,4,"_$$_REQUIRE"],[63,19,134,4],[63,20,134,4,"_dependencyMap"],[63,34,134,4],[63,52,134,14,"_$$_REQUIRE"],[63,63,134,14],[63,64,134,14,"_dependencyMap"],[63,78,134,14],[63,94,134,20,"tuple"],[63,99,134,25],[63,100,134,26,"_$$_REQUIRE"],[63,111,134,26],[63,112,134,26,"_dependencyMap"],[63,126,134,26],[63,142,134,32,"Buffer"],[63,148,134,38],[63,150,134,40,"_$$_REQUIRE"],[63,161,134,40],[63,162,134,40,"_dependencyMap"],[63,176,134,40],[63,192,134,46,"Satoshi"],[63,199,134,53],[63,200,134,54],[63,202,134,56,"arguments"],[63,211,134,65],[63,212,134,66],[64,8,135,4],[65,8,136,4],[65,15,137,6],[65,19,137,10],[65,20,137,11,"outs"],[65,24,137,15],[65,25,137,16,"push"],[65,29,137,20],[65,30,137,21],[66,10,138,8,"script"],[66,16,138,14],[66,18,138,16,"scriptPubKey"],[66,30,138,28],[67,10,139,8,"value"],[67,15,139,13],[67,17,139,8,"value"],[68,8,140,6],[68,9,140,7],[68,10,140,8],[68,13,140,11],[68,14,140,12],[69,6,142,2],[70,4,142,3],[71,6,142,3,"key"],[71,9,142,3],[72,6,142,3,"value"],[72,11,142,3],[72,13,143,2],[72,22,143,2,"hasWitnesses"],[72,34,143,14,"hasWitnesses"],[72,35,143,14],[72,37,143,17],[73,8,144,4],[73,15,144,11],[73,19,144,15],[73,20,144,16,"ins"],[73,23,144,19],[73,24,144,20,"some"],[73,28,144,24],[73,29,144,25],[73,39,144,25,"x"],[73,40,144,26],[73,42,144,30],[74,10,145,6],[74,17,145,13,"x"],[74,18,145,14],[74,19,145,15,"witness"],[74,26,145,22],[74,27,145,23,"length"],[74,33,145,29],[74,38,145,34],[74,39,145,35],[75,8,146,4],[75,9,146,5],[75,10,146,6],[76,6,147,2],[77,4,147,3],[78,6,147,3,"key"],[78,9,147,3],[79,6,147,3,"value"],[79,11,147,3],[79,13,148,2],[79,22,148,2,"weight"],[79,28,148,8,"weight"],[79,29,148,8],[79,31,148,11],[80,8,149,4],[80,12,149,10,"base"],[80,16,149,14],[80,19,149,17],[80,23,149,21],[80,24,149,22,"byteLength"],[80,34,149,32],[80,35,149,33],[80,40,149,38],[80,41,149,39],[81,8,150,4],[81,12,150,10,"total"],[81,17,150,15],[81,20,150,18],[81,24,150,22],[81,25,150,23,"byteLength"],[81,35,150,33],[81,36,150,34],[81,40,150,38],[81,41,150,39],[82,8,151,4],[82,15,151,11,"base"],[82,19,151,15],[82,22,151,18],[82,23,151,19],[82,26,151,22,"total"],[82,31,151,27],[83,6,152,2],[84,4,152,3],[85,6,152,3,"key"],[85,9,152,3],[86,6,152,3,"value"],[86,11,152,3],[86,13,153,2],[86,22,153,2,"virtualSize"],[86,33,153,13,"virtualSize"],[86,34,153,13],[86,36,153,16],[87,8,154,4],[87,15,154,11,"Math"],[87,19,154,15],[87,20,154,16,"ceil"],[87,24,154,20],[87,25,154,21],[87,29,154,25],[87,30,154,26,"weight"],[87,36,154,32],[87,37,154,33],[87,38,154,34],[87,41,154,37],[87,42,154,38],[87,43,154,39],[88,6,155,2],[89,4,155,3],[90,6,155,3,"key"],[90,9,155,3],[91,6,155,3,"value"],[91,11,155,3],[91,13,156,2],[91,22,156,2,"byteLength"],[91,32,156,12,"byteLength"],[91,33,156,12],[91,35,156,36],[92,8,156,36],[92,12,156,13,"_ALLOW_WITNESS"],[92,26,156,27],[92,29,156,27,"arguments"],[92,38,156,27],[92,39,156,27,"length"],[92,45,156,27],[92,53,156,27,"arguments"],[92,62,156,27],[92,70,156,27,"undefined"],[92,79,156,27],[92,82,156,27,"arguments"],[92,91,156,27],[92,97,156,30],[92,101,156,34],[93,8,157,4],[93,12,157,10,"hasWitnesses"],[93,24,157,22],[93,27,157,25,"_ALLOW_WITNESS"],[93,41,157,39],[93,45,157,43],[93,49,157,47],[93,50,157,48,"hasWitnesses"],[93,62,157,60],[93,63,157,61],[93,64,157,62],[94,8,158,4],[94,15,159,6],[94,16,159,7,"hasWitnesses"],[94,28,159,19],[94,31,159,22],[94,33,159,24],[94,36,159,27],[94,37,159,28],[94,41,160,6,"_$$_REQUIRE"],[94,52,160,6],[94,53,160,6,"_dependencyMap"],[94,67,160,6],[94,91,160,14,"encodingLength"],[94,105,160,28],[94,106,160,29],[94,110,160,33],[94,111,160,34,"ins"],[94,114,160,37],[94,115,160,38,"length"],[94,121,160,44],[94,122,160,45],[94,125,161,6,"_$$_REQUIRE"],[94,136,161,6],[94,137,161,6,"_dependencyMap"],[94,151,161,6],[94,175,161,14,"encodingLength"],[94,189,161,28],[94,190,161,29],[94,194,161,33],[94,195,161,34,"outs"],[94,199,161,38],[94,200,161,39,"length"],[94,206,161,45],[94,207,161,46],[94,210,162,6],[94,214,162,10],[94,215,162,11,"ins"],[94,218,162,14],[94,219,162,15,"reduce"],[94,225,162,21],[94,226,162,22],[94,236,162,23,"sum"],[94,239,162,26],[94,241,162,28,"input"],[94,246,162,33],[94,248,162,38],[95,10,163,8],[95,17,163,15,"sum"],[95,20,163,18],[95,23,163,21],[95,25,163,23],[95,28,163,26,"varSliceSize"],[95,40,163,38],[95,41,163,39,"input"],[95,46,163,44],[95,47,163,45,"script"],[95,53,163,51],[95,54,163,52],[96,8,164,6],[96,9,164,7],[96,11,164,9],[96,12,164,10],[96,13,164,11],[96,16,165,6],[96,20,165,10],[96,21,165,11,"outs"],[96,25,165,15],[96,26,165,16,"reduce"],[96,32,165,22],[96,33,165,23],[96,43,165,24,"sum"],[96,46,165,27],[96,48,165,29,"output"],[96,54,165,35],[96,56,165,40],[97,10,166,8],[97,17,166,15,"sum"],[97,20,166,18],[97,23,166,21],[97,24,166,22],[97,27,166,25,"varSliceSize"],[97,39,166,37],[97,40,166,38,"output"],[97,46,166,44],[97,47,166,45,"script"],[97,53,166,51],[97,54,166,52],[98,8,167,6],[98,9,167,7],[98,11,167,9],[98,12,167,10],[98,13,167,11],[98,17,168,7,"hasWitnesses"],[98,29,168,19],[98,32,169,10],[98,36,169,14],[98,37,169,15,"ins"],[98,40,169,18],[98,41,169,19,"reduce"],[98,47,169,25],[98,48,169,26],[98,58,169,27,"sum"],[98,61,169,30],[98,63,169,32,"input"],[98,68,169,37],[98,70,169,42],[99,10,170,12],[99,17,170,19,"sum"],[99,20,170,22],[99,23,170,25,"vectorSize"],[99,33,170,35],[99,34,170,36,"input"],[99,39,170,41],[99,40,170,42,"witness"],[99,47,170,49],[99,48,170,50],[100,8,171,10],[100,9,171,11],[100,11,171,13],[100,12,171,14],[100,13,171,15],[100,16,172,10],[100,17,172,11],[100,18,172,12],[101,6,174,2],[102,4,174,3],[103,6,174,3,"key"],[103,9,174,3],[104,6,174,3,"value"],[104,11,174,3],[104,13,175,2],[104,22,175,2,"clone"],[104,27,175,7,"clone"],[104,28,175,7],[104,30,175,10],[105,8,176,4],[105,12,176,10,"newTx"],[105,17,176,15],[105,20,176,18],[105,24,176,22,"Transaction"],[105,35,176,33],[105,36,176,34],[105,37,176,35],[106,8,177,4,"newTx"],[106,13,177,9],[106,14,177,10,"version"],[106,21,177,17],[106,24,177,20],[106,28,177,24],[106,29,177,25,"version"],[106,36,177,32],[107,8,178,4,"newTx"],[107,13,178,9],[107,14,178,10,"locktime"],[107,22,178,18],[107,25,178,21],[107,29,178,25],[107,30,178,26,"locktime"],[107,38,178,34],[108,8,179,4,"newTx"],[108,13,179,9],[108,14,179,10,"ins"],[108,17,179,13],[108,20,179,16],[108,24,179,20],[108,25,179,21,"ins"],[108,28,179,24],[108,29,179,25,"map"],[108,32,179,28],[108,33,179,29],[108,43,179,29,"txIn"],[108,47,179,33],[108,49,179,37],[109,10,180,6],[109,17,180,13],[110,12,181,8,"hash"],[110,16,181,12],[110,18,181,14,"txIn"],[110,22,181,18],[110,23,181,19,"hash"],[110,27,181,23],[111,12,182,8,"index"],[111,17,182,13],[111,19,182,15,"txIn"],[111,23,182,19],[111,24,182,20,"index"],[111,29,182,25],[112,12,183,8,"script"],[112,18,183,14],[112,20,183,16,"txIn"],[112,24,183,20],[112,25,183,21,"script"],[112,31,183,27],[113,12,184,8,"sequence"],[113,20,184,16],[113,22,184,18,"txIn"],[113,26,184,22],[113,27,184,23,"sequence"],[113,35,184,31],[114,12,185,8,"witness"],[114,19,185,15],[114,21,185,17,"txIn"],[114,25,185,21],[114,26,185,22,"witness"],[115,10,186,6],[115,11,186,7],[116,8,187,4],[116,9,187,5],[116,10,187,6],[117,8,188,4,"newTx"],[117,13,188,9],[117,14,188,10,"outs"],[117,18,188,14],[117,21,188,17],[117,25,188,21],[117,26,188,22,"outs"],[117,30,188,26],[117,31,188,27,"map"],[117,34,188,30],[117,35,188,31],[117,45,188,31,"txOut"],[117,50,188,36],[117,52,188,40],[118,10,189,6],[118,17,189,13],[119,12,190,8,"script"],[119,18,190,14],[119,20,190,16,"txOut"],[119,25,190,21],[119,26,190,22,"script"],[119,32,190,28],[120,12,191,8,"value"],[120,17,191,13],[120,19,191,15,"txOut"],[120,24,191,20],[120,25,191,21,"value"],[121,10,192,6],[121,11,192,7],[122,8,193,4],[122,9,193,5],[122,10,193,6],[123,8,194,4],[123,15,194,11,"newTx"],[123,20,194,16],[124,6,195,2],[125,6,196,2],[126,0,197,0],[127,0,198,0],[128,0,199,0],[129,0,200,0],[130,0,201,0],[131,0,202,0],[132,0,203,0],[133,4,196,2],[134,6,196,2,"key"],[134,9,196,2],[135,6,196,2,"value"],[135,11,196,2],[135,13,204,2],[135,22,204,2,"hashForSignature"],[135,38,204,18,"hashForSignature"],[135,39,204,19,"inIndex"],[135,46,204,26],[135,48,204,28,"prevOutScript"],[135,61,204,41],[135,63,204,43,"hashType"],[135,71,204,51],[135,73,204,53],[136,8,205,4,"_$$_REQUIRE"],[136,19,205,4],[136,20,205,4,"_dependencyMap"],[136,34,205,4],[136,52,206,6,"_$$_REQUIRE"],[136,63,206,6],[136,64,206,6,"_dependencyMap"],[136,78,206,6],[136,94,206,12,"tuple"],[136,99,206,17],[136,100,206,18,"_$$_REQUIRE"],[136,111,206,18],[136,112,206,18,"_dependencyMap"],[136,126,206,18],[136,142,206,24,"UInt32"],[136,148,206,30],[136,150,206,32,"_$$_REQUIRE"],[136,161,206,32],[136,162,206,32,"_dependencyMap"],[136,176,206,32],[136,192,206,38,"Buffer"],[136,198,206,44],[136,200,206,46],[136,217,206,64,"_$$_REQUIRE"],[136,228,206,64],[136,229,206,64,"_dependencyMap"],[136,243,206,64],[136,259,206,70,"Number"],[136,265,206,76],[136,266,206,77],[136,268,207,6,"arguments"],[136,277,208,4],[136,278,208,5],[137,8,209,4],[138,8,210,4],[138,12,210,8,"inIndex"],[138,19,210,15],[138,23,210,19],[138,27,210,23],[138,28,210,24,"ins"],[138,31,210,27],[138,32,210,28,"length"],[138,38,210,34],[138,40,210,36],[138,47,210,43,"ONE"],[138,50,210,46],[139,8,211,4],[140,8,212,4],[140,12,212,10,"ourScript"],[140,21,212,19],[140,24,212,22,"_$$_REQUIRE"],[140,35,212,22],[140,36,212,22,"_dependencyMap"],[140,50,212,22],[140,67,212,30,"compile"],[140,74,212,37],[140,75,213,6,"_$$_REQUIRE"],[140,86,213,6],[140,87,213,6,"_dependencyMap"],[140,101,213,6],[140,118,213,14,"decompile"],[140,127,213,23],[140,128,213,24,"prevOutScript"],[140,141,213,37],[140,142,213,38],[140,143,213,39,"filter"],[140,149,213,45],[140,150,213,46],[140,160,213,46,"x"],[140,161,213,47],[140,163,213,51],[141,10,214,8],[141,17,214,15,"x"],[141,18,214,16],[141,23,214,21,"_$$_REQUIRE"],[141,34,214,21],[141,35,214,21,"_dependencyMap"],[141,49,214,21],[141,66,214,30,"OPS"],[141,69,214,33],[141,70,214,34,"OP_CODESEPARATOR"],[141,86,214,50],[142,8,215,6],[142,9,215,7],[142,10,216,4],[142,11,216,5],[143,8,217,4],[143,12,217,10,"txTmp"],[143,17,217,15],[143,20,217,18],[143,24,217,22],[143,25,217,23,"clone"],[143,30,217,28],[143,31,217,29],[143,32,217,30],[144,8,218,4],[145,8,219,4],[145,12,219,8],[145,13,219,9,"hashType"],[145,21,219,17],[145,24,219,20],[145,28,219,24],[145,34,219,30,"Transaction"],[145,45,219,41],[145,46,219,42,"SIGHASH_NONE"],[145,58,219,54],[145,60,219,56],[146,10,220,6,"txTmp"],[146,15,220,11],[146,16,220,12,"outs"],[146,20,220,16],[146,23,220,19],[146,25,220,21],[147,10,221,6],[148,10,222,6,"txTmp"],[148,15,222,11],[148,16,222,12,"ins"],[148,19,222,15],[148,20,222,16,"forEach"],[148,27,222,23],[148,28,222,24],[148,38,222,25,"input"],[148,43,222,30],[148,45,222,32,"i"],[148,46,222,33],[148,48,222,38],[149,12,223,8],[149,16,223,12,"i"],[149,17,223,13],[149,22,223,18,"inIndex"],[149,29,223,25],[149,31,223,27],[150,12,224,8,"input"],[150,17,224,13],[150,18,224,14,"sequence"],[150,26,224,22],[150,29,224,25],[150,30,224,26],[151,10,225,6],[151,11,225,7],[151,12,225,8],[152,10,226,6],[153,8,227,4],[153,9,227,5],[153,15,227,11],[153,19,227,15],[153,20,227,16,"hashType"],[153,28,227,24],[153,31,227,27],[153,35,227,31],[153,41,227,37,"Transaction"],[153,52,227,48],[153,53,227,49,"SIGHASH_SINGLE"],[153,67,227,63],[153,69,227,65],[154,10,228,6],[155,10,229,6],[155,14,229,10,"inIndex"],[155,21,229,17],[155,25,229,21],[155,29,229,25],[155,30,229,26,"outs"],[155,34,229,30],[155,35,229,31,"length"],[155,41,229,37],[155,43,229,39],[155,50,229,46,"ONE"],[155,53,229,49],[156,10,230,6],[157,10,231,6,"txTmp"],[157,15,231,11],[157,16,231,12,"outs"],[157,20,231,16],[157,21,231,17,"length"],[157,27,231,23],[157,30,231,26,"inIndex"],[157,37,231,33],[157,40,231,36],[157,41,231,37],[158,10,232,6],[159,10,233,6],[159,15,233,11],[159,19,233,15,"i"],[159,20,233,16],[159,23,233,19],[159,24,233,20],[159,26,233,22,"i"],[159,27,233,23],[159,30,233,26,"inIndex"],[159,37,233,33],[159,39,233,35,"i"],[159,40,233,36],[159,42,233,38],[159,44,233,40],[160,12,234,8,"txTmp"],[160,17,234,13],[160,18,234,14,"outs"],[160,22,234,18],[160,23,234,19,"i"],[160,24,234,20],[160,25,234,21],[160,28,234,24,"BLANK_OUTPUT"],[160,40,234,36],[161,10,235,6],[162,10,236,6],[163,10,237,6,"txTmp"],[163,15,237,11],[163,16,237,12,"ins"],[163,19,237,15],[163,20,237,16,"forEach"],[163,27,237,23],[163,28,237,24],[163,38,237,25,"input"],[163,43,237,30],[163,45,237,32,"y"],[163,46,237,33],[163,48,237,38],[164,12,238,8],[164,16,238,12,"y"],[164,17,238,13],[164,22,238,18,"inIndex"],[164,29,238,25],[164,31,238,27],[165,12,239,8,"input"],[165,17,239,13],[165,18,239,14,"sequence"],[165,26,239,22],[165,29,239,25],[165,30,239,26],[166,10,240,6],[166,11,240,7],[166,12,240,8],[167,8,241,4],[168,8,242,4],[169,8,243,4],[169,12,243,8,"hashType"],[169,20,243,16],[169,23,243,19,"Transaction"],[169,34,243,30],[169,35,243,31,"SIGHASH_ANYONECANPAY"],[169,55,243,51],[169,57,243,53],[170,10,244,6,"txTmp"],[170,15,244,11],[170,16,244,12,"ins"],[170,19,244,15],[170,22,244,18],[170,23,244,19,"txTmp"],[170,28,244,24],[170,29,244,25,"ins"],[170,32,244,28],[170,33,244,29,"inIndex"],[170,40,244,36],[170,41,244,37],[170,42,244,38],[171,10,245,6,"txTmp"],[171,15,245,11],[171,16,245,12,"ins"],[171,19,245,15],[171,20,245,16],[171,21,245,17],[171,22,245,18],[171,23,245,19,"script"],[171,29,245,25],[171,32,245,28,"ourScript"],[171,41,245,37],[172,10,246,6],[173,8,247,4],[173,9,247,5],[173,15,247,11],[174,10,248,6],[175,10,249,6,"txTmp"],[175,15,249,11],[175,16,249,12,"ins"],[175,19,249,15],[175,20,249,16,"forEach"],[175,27,249,23],[175,28,249,24],[175,38,249,24,"input"],[175,43,249,29],[175,45,249,33],[176,12,250,8,"input"],[176,17,250,13],[176,18,250,14,"script"],[176,24,250,20],[176,27,250,23,"EMPTY_SCRIPT"],[176,39,250,35],[177,10,251,6],[177,11,251,7],[177,12,251,8],[178,10,252,6,"txTmp"],[178,15,252,11],[178,16,252,12,"ins"],[178,19,252,15],[178,20,252,16,"inIndex"],[178,27,252,23],[178,28,252,24],[178,29,252,25,"script"],[178,35,252,31],[178,38,252,34,"ourScript"],[178,47,252,43],[179,8,253,4],[180,8,254,4],[181,8,255,4],[181,12,255,10,"buffer"],[181,18,255,16],[181,21,255,19,"Buffer"],[181,27,255,25],[181,28,255,26,"allocUnsafe"],[181,39,255,37],[181,40,255,38,"txTmp"],[181,45,255,43],[181,46,255,44,"byteLength"],[181,56,255,54],[181,57,255,55],[181,62,255,60],[181,63,255,61],[181,66,255,64],[181,67,255,65],[181,68,255,66],[182,8,256,4,"buffer"],[182,14,256,10],[182,15,256,11,"writeInt32LE"],[182,27,256,23],[182,28,256,24,"hashType"],[182,36,256,32],[182,38,256,34,"buffer"],[182,44,256,40],[182,45,256,41,"length"],[182,51,256,47],[182,54,256,50],[182,55,256,51],[182,56,256,52],[183,8,257,4,"txTmp"],[183,13,257,9],[183,14,257,10,"__toBuffer"],[183,24,257,20],[183,25,257,21,"buffer"],[183,31,257,27],[183,33,257,29],[183,34,257,30],[183,36,257,32],[183,41,257,37],[183,42,257,38],[184,8,258,4],[184,15,258,11,"_$$_REQUIRE"],[184,26,258,11],[184,27,258,11,"_dependencyMap"],[184,41,258,11],[184,58,258,19,"hash256"],[184,65,258,26],[184,66,258,27,"buffer"],[184,72,258,33],[184,73,258,34],[185,6,259,2],[186,4,259,3],[187,6,259,3,"key"],[187,9,259,3],[188,6,259,3,"value"],[188,11,259,3],[188,13,260,2],[188,22,260,2,"hashForWitnessV0"],[188,38,260,18,"hashForWitnessV0"],[188,39,260,19,"inIndex"],[188,46,260,26],[188,48,260,28,"prevOutScript"],[188,61,260,41],[188,63,260,43,"value"],[188,68,260,48],[188,70,260,50,"hashType"],[188,78,260,58],[188,80,260,60],[189,8,261,4,"_$$_REQUIRE"],[189,19,261,4],[189,20,261,4,"_dependencyMap"],[189,34,261,4],[189,52,262,6,"_$$_REQUIRE"],[189,63,262,6],[189,64,262,6,"_dependencyMap"],[189,78,262,6],[189,94,262,12,"tuple"],[189,99,262,17],[189,100,262,18,"_$$_REQUIRE"],[189,111,262,18],[189,112,262,18,"_dependencyMap"],[189,126,262,18],[189,142,262,24,"UInt32"],[189,148,262,30],[189,150,262,32,"_$$_REQUIRE"],[189,161,262,32],[189,162,262,32,"_dependencyMap"],[189,176,262,32],[189,192,262,38,"Buffer"],[189,198,262,44],[189,200,262,46,"_$$_REQUIRE"],[189,211,262,46],[189,212,262,46,"_dependencyMap"],[189,226,262,46],[189,242,262,52,"Satoshi"],[189,249,262,59],[189,251,262,61,"_$$_REQUIRE"],[189,262,262,61],[189,263,262,61,"_dependencyMap"],[189,277,262,61],[189,293,262,67,"UInt32"],[189,299,262,73],[189,300,262,74],[189,302,263,6,"arguments"],[189,311,264,4],[189,312,264,5],[190,8,265,4],[190,12,265,8,"tbuffer"],[190,19,265,15],[190,22,265,18,"Buffer"],[190,28,265,24],[190,29,265,25,"from"],[190,33,265,29],[190,34,265,30],[190,36,265,32],[190,37,265,33],[191,8,266,4],[191,12,266,8,"bufferWriter"],[191,24,266,20],[192,8,267,4],[192,12,267,8,"hashOutputs"],[192,23,267,19],[192,26,267,22,"ZERO"],[192,30,267,26],[193,8,268,4],[193,12,268,8,"hashPrevouts"],[193,24,268,20],[193,27,268,23,"ZERO"],[193,31,268,27],[194,8,269,4],[194,12,269,8,"hashSequence"],[194,24,269,20],[194,27,269,23,"ZERO"],[194,31,269,27],[195,8,270,4],[195,12,270,8],[195,14,270,10,"hashType"],[195,22,270,18],[195,25,270,21,"Transaction"],[195,36,270,32],[195,37,270,33,"SIGHASH_ANYONECANPAY"],[195,57,270,53],[195,58,270,54],[195,60,270,56],[196,10,271,6,"tbuffer"],[196,17,271,13],[196,20,271,16,"Buffer"],[196,26,271,22],[196,27,271,23,"allocUnsafe"],[196,38,271,34],[196,39,271,35],[196,41,271,37],[196,44,271,40],[196,48,271,44],[196,49,271,45,"ins"],[196,52,271,48],[196,53,271,49,"length"],[196,59,271,55],[196,60,271,56],[197,10,272,6,"bufferWriter"],[197,22,272,18],[197,25,272,21],[197,30,272,25,"_$$_REQUIRE"],[197,41,272,25],[197,42,272,25,"_dependencyMap"],[197,56,272,25],[197,78,272,39,"BufferWriter"],[197,90,272,51],[197,92,272,52,"tbuffer"],[197,99,272,59],[197,101,272,61],[197,102,272,62],[197,103,272,63],[198,10,273,6],[198,14,273,10],[198,15,273,11,"ins"],[198,18,273,14],[198,19,273,15,"forEach"],[198,26,273,22],[198,27,273,23],[198,37,273,23,"txIn"],[198,41,273,27],[198,43,273,31],[199,12,274,8,"bufferWriter"],[199,24,274,20],[199,25,274,21,"writeSlice"],[199,35,274,31],[199,36,274,32,"txIn"],[199,40,274,36],[199,41,274,37,"hash"],[199,45,274,41],[199,46,274,42],[200,12,275,8,"bufferWriter"],[200,24,275,20],[200,25,275,21,"writeUInt32"],[200,36,275,32],[200,37,275,33,"txIn"],[200,41,275,37],[200,42,275,38,"index"],[200,47,275,43],[200,48,275,44],[201,10,276,6],[201,11,276,7],[201,12,276,8],[202,10,277,6,"hashPrevouts"],[202,22,277,18],[202,25,277,21,"_$$_REQUIRE"],[202,36,277,21],[202,37,277,21,"_dependencyMap"],[202,51,277,21],[202,68,277,29,"hash256"],[202,75,277,36],[202,76,277,37,"tbuffer"],[202,83,277,44],[202,84,277,45],[203,8,278,4],[204,8,279,4],[204,12,280,6],[204,14,280,8,"hashType"],[204,22,280,16],[204,25,280,19,"Transaction"],[204,36,280,30],[204,37,280,31,"SIGHASH_ANYONECANPAY"],[204,57,280,51],[204,58,280,52],[204,62,281,6],[204,63,281,7,"hashType"],[204,71,281,15],[204,74,281,18],[204,78,281,22],[204,84,281,28,"Transaction"],[204,95,281,39],[204,96,281,40,"SIGHASH_SINGLE"],[204,110,281,54],[204,114,282,6],[204,115,282,7,"hashType"],[204,123,282,15],[204,126,282,18],[204,130,282,22],[204,136,282,28,"Transaction"],[204,147,282,39],[204,148,282,40,"SIGHASH_NONE"],[204,160,282,52],[204,162,283,6],[205,10,284,6,"tbuffer"],[205,17,284,13],[205,20,284,16,"Buffer"],[205,26,284,22],[205,27,284,23,"allocUnsafe"],[205,38,284,34],[205,39,284,35],[205,40,284,36],[205,43,284,39],[205,47,284,43],[205,48,284,44,"ins"],[205,51,284,47],[205,52,284,48,"length"],[205,58,284,54],[205,59,284,55],[206,10,285,6,"bufferWriter"],[206,22,285,18],[206,25,285,21],[206,30,285,25,"_$$_REQUIRE"],[206,41,285,25],[206,42,285,25,"_dependencyMap"],[206,56,285,25],[206,78,285,39,"BufferWriter"],[206,90,285,51],[206,92,285,52,"tbuffer"],[206,99,285,59],[206,101,285,61],[206,102,285,62],[206,103,285,63],[207,10,286,6],[207,14,286,10],[207,15,286,11,"ins"],[207,18,286,14],[207,19,286,15,"forEach"],[207,26,286,22],[207,27,286,23],[207,37,286,23,"txIn"],[207,41,286,27],[207,43,286,31],[208,12,287,8,"bufferWriter"],[208,24,287,20],[208,25,287,21,"writeUInt32"],[208,36,287,32],[208,37,287,33,"txIn"],[208,41,287,37],[208,42,287,38,"sequence"],[208,50,287,46],[208,51,287,47],[209,10,288,6],[209,11,288,7],[209,12,288,8],[210,10,289,6,"hashSequence"],[210,22,289,18],[210,25,289,21,"_$$_REQUIRE"],[210,36,289,21],[210,37,289,21,"_dependencyMap"],[210,51,289,21],[210,68,289,29,"hash256"],[210,75,289,36],[210,76,289,37,"tbuffer"],[210,83,289,44],[210,84,289,45],[211,8,290,4],[212,8,291,4],[212,12,292,6],[212,13,292,7,"hashType"],[212,21,292,15],[212,24,292,18],[212,28,292,22],[212,34,292,28,"Transaction"],[212,45,292,39],[212,46,292,40,"SIGHASH_SINGLE"],[212,60,292,54],[212,64,293,6],[212,65,293,7,"hashType"],[212,73,293,15],[212,76,293,18],[212,80,293,22],[212,86,293,28,"Transaction"],[212,97,293,39],[212,98,293,40,"SIGHASH_NONE"],[212,110,293,52],[212,112,294,6],[213,10,295,6],[213,14,295,12,"txOutsSize"],[213,24,295,22],[213,27,295,25],[213,31,295,29],[213,32,295,30,"outs"],[213,36,295,34],[213,37,295,35,"reduce"],[213,43,295,41],[213,44,295,42],[213,54,295,43,"sum"],[213,57,295,46],[213,59,295,48,"output"],[213,65,295,54],[213,67,295,59],[214,12,296,8],[214,19,296,15,"sum"],[214,22,296,18],[214,25,296,21],[214,26,296,22],[214,29,296,25,"varSliceSize"],[214,41,296,37],[214,42,296,38,"output"],[214,48,296,44],[214,49,296,45,"script"],[214,55,296,51],[214,56,296,52],[215,10,297,6],[215,11,297,7],[215,13,297,9],[215,14,297,10],[215,15,297,11],[216,10,298,6,"tbuffer"],[216,17,298,13],[216,20,298,16,"Buffer"],[216,26,298,22],[216,27,298,23,"allocUnsafe"],[216,38,298,34],[216,39,298,35,"txOutsSize"],[216,49,298,45],[216,50,298,46],[217,10,299,6,"bufferWriter"],[217,22,299,18],[217,25,299,21],[217,30,299,25,"_$$_REQUIRE"],[217,41,299,25],[217,42,299,25,"_dependencyMap"],[217,56,299,25],[217,78,299,39,"BufferWriter"],[217,90,299,51],[217,92,299,52,"tbuffer"],[217,99,299,59],[217,101,299,61],[217,102,299,62],[217,103,299,63],[218,10,300,6],[218,14,300,10],[218,15,300,11,"outs"],[218,19,300,15],[218,20,300,16,"forEach"],[218,27,300,23],[218,28,300,24],[218,38,300,24,"out"],[218,41,300,27],[218,43,300,31],[219,12,301,8,"bufferWriter"],[219,24,301,20],[219,25,301,21,"writeUInt64"],[219,36,301,32],[219,37,301,33,"out"],[219,40,301,36],[219,41,301,37,"value"],[219,46,301,42],[219,47,301,43],[220,12,302,8,"bufferWriter"],[220,24,302,20],[220,25,302,21,"writeVarSlice"],[220,38,302,34],[220,39,302,35,"out"],[220,42,302,38],[220,43,302,39,"script"],[220,49,302,45],[220,50,302,46],[221,10,303,6],[221,11,303,7],[221,12,303,8],[222,10,304,6,"hashOutputs"],[222,21,304,17],[222,24,304,20,"_$$_REQUIRE"],[222,35,304,20],[222,36,304,20,"_dependencyMap"],[222,50,304,20],[222,67,304,28,"hash256"],[222,74,304,35],[222,75,304,36,"tbuffer"],[222,82,304,43],[222,83,304,44],[223,8,305,4],[223,9,305,5],[223,15,305,11],[223,19,306,6],[223,20,306,7,"hashType"],[223,28,306,15],[223,31,306,18],[223,35,306,22],[223,41,306,28,"Transaction"],[223,52,306,39],[223,53,306,40,"SIGHASH_SINGLE"],[223,67,306,54],[223,71,307,6,"inIndex"],[223,78,307,13],[223,81,307,16],[223,85,307,20],[223,86,307,21,"outs"],[223,90,307,25],[223,91,307,26,"length"],[223,97,307,32],[223,99,308,6],[224,10,309,6],[224,14,309,12,"output"],[224,20,309,18],[224,23,309,21],[224,27,309,25],[224,28,309,26,"outs"],[224,32,309,30],[224,33,309,31,"inIndex"],[224,40,309,38],[224,41,309,39],[225,10,310,6,"tbuffer"],[225,17,310,13],[225,20,310,16,"Buffer"],[225,26,310,22],[225,27,310,23,"allocUnsafe"],[225,38,310,34],[225,39,310,35],[225,40,310,36],[225,43,310,39,"varSliceSize"],[225,55,310,51],[225,56,310,52,"output"],[225,62,310,58],[225,63,310,59,"script"],[225,69,310,65],[225,70,310,66],[225,71,310,67],[226,10,311,6,"bufferWriter"],[226,22,311,18],[226,25,311,21],[226,30,311,25,"_$$_REQUIRE"],[226,41,311,25],[226,42,311,25,"_dependencyMap"],[226,56,311,25],[226,78,311,39,"BufferWriter"],[226,90,311,51],[226,92,311,52,"tbuffer"],[226,99,311,59],[226,101,311,61],[226,102,311,62],[226,103,311,63],[227,10,312,6,"bufferWriter"],[227,22,312,18],[227,23,312,19,"writeUInt64"],[227,34,312,30],[227,35,312,31,"output"],[227,41,312,37],[227,42,312,38,"value"],[227,47,312,43],[227,48,312,44],[228,10,313,6,"bufferWriter"],[228,22,313,18],[228,23,313,19,"writeVarSlice"],[228,36,313,32],[228,37,313,33,"output"],[228,43,313,39],[228,44,313,40,"script"],[228,50,313,46],[228,51,313,47],[229,10,314,6,"hashOutputs"],[229,21,314,17],[229,24,314,20,"_$$_REQUIRE"],[229,35,314,20],[229,36,314,20,"_dependencyMap"],[229,50,314,20],[229,67,314,28,"hash256"],[229,74,314,35],[229,75,314,36,"tbuffer"],[229,82,314,43],[229,83,314,44],[230,8,315,4],[231,8,316,4,"tbuffer"],[231,15,316,11],[231,18,316,14,"Buffer"],[231,24,316,20],[231,25,316,21,"allocUnsafe"],[231,36,316,32],[231,37,316,33],[231,40,316,36],[231,43,316,39,"varSliceSize"],[231,55,316,51],[231,56,316,52,"prevOutScript"],[231,69,316,65],[231,70,316,66],[231,71,316,67],[232,8,317,4,"bufferWriter"],[232,20,317,16],[232,23,317,19],[232,28,317,23,"_$$_REQUIRE"],[232,39,317,23],[232,40,317,23,"_dependencyMap"],[232,54,317,23],[232,76,317,37,"BufferWriter"],[232,88,317,49],[232,90,317,50,"tbuffer"],[232,97,317,57],[232,99,317,59],[232,100,317,60],[232,101,317,61],[233,8,318,4],[233,12,318,10,"input"],[233,17,318,15],[233,20,318,18],[233,24,318,22],[233,25,318,23,"ins"],[233,28,318,26],[233,29,318,27,"inIndex"],[233,36,318,34],[233,37,318,35],[234,8,319,4,"bufferWriter"],[234,20,319,16],[234,21,319,17,"writeUInt32"],[234,32,319,28],[234,33,319,29],[234,37,319,33],[234,38,319,34,"version"],[234,45,319,41],[234,46,319,42],[235,8,320,4,"bufferWriter"],[235,20,320,16],[235,21,320,17,"writeSlice"],[235,31,320,27],[235,32,320,28,"hashPrevouts"],[235,44,320,40],[235,45,320,41],[236,8,321,4,"bufferWriter"],[236,20,321,16],[236,21,321,17,"writeSlice"],[236,31,321,27],[236,32,321,28,"hashSequence"],[236,44,321,40],[236,45,321,41],[237,8,322,4,"bufferWriter"],[237,20,322,16],[237,21,322,17,"writeSlice"],[237,31,322,27],[237,32,322,28,"input"],[237,37,322,33],[237,38,322,34,"hash"],[237,42,322,38],[237,43,322,39],[238,8,323,4,"bufferWriter"],[238,20,323,16],[238,21,323,17,"writeUInt32"],[238,32,323,28],[238,33,323,29,"input"],[238,38,323,34],[238,39,323,35,"index"],[238,44,323,40],[238,45,323,41],[239,8,324,4,"bufferWriter"],[239,20,324,16],[239,21,324,17,"writeVarSlice"],[239,34,324,30],[239,35,324,31,"prevOutScript"],[239,48,324,44],[239,49,324,45],[240,8,325,4,"bufferWriter"],[240,20,325,16],[240,21,325,17,"writeUInt64"],[240,32,325,28],[240,33,325,29,"value"],[240,38,325,34],[240,39,325,35],[241,8,326,4,"bufferWriter"],[241,20,326,16],[241,21,326,17,"writeUInt32"],[241,32,326,28],[241,33,326,29,"input"],[241,38,326,34],[241,39,326,35,"sequence"],[241,47,326,43],[241,48,326,44],[242,8,327,4,"bufferWriter"],[242,20,327,16],[242,21,327,17,"writeSlice"],[242,31,327,27],[242,32,327,28,"hashOutputs"],[242,43,327,39],[242,44,327,40],[243,8,328,4,"bufferWriter"],[243,20,328,16],[243,21,328,17,"writeUInt32"],[243,32,328,28],[243,33,328,29],[243,37,328,33],[243,38,328,34,"locktime"],[243,46,328,42],[243,47,328,43],[244,8,329,4,"bufferWriter"],[244,20,329,16],[244,21,329,17,"writeUInt32"],[244,32,329,28],[244,33,329,29,"hashType"],[244,41,329,37],[244,42,329,38],[245,8,330,4],[245,15,330,11,"_$$_REQUIRE"],[245,26,330,11],[245,27,330,11,"_dependencyMap"],[245,41,330,11],[245,58,330,19,"hash256"],[245,65,330,26],[245,66,330,27,"tbuffer"],[245,73,330,34],[245,74,330,35],[246,6,331,2],[247,4,331,3],[248,6,331,3,"key"],[248,9,331,3],[249,6,331,3,"value"],[249,11,331,3],[249,13,332,2],[249,22,332,2,"getHash"],[249,29,332,9,"getHash"],[249,30,332,10,"forWitness"],[249,40,332,20],[249,42,332,22],[250,8,333,4],[251,8,334,4],[251,12,334,8,"forWitness"],[251,22,334,18],[251,26,334,22],[251,30,334,26],[251,31,334,27,"isCoinbase"],[251,41,334,37],[251,42,334,38],[251,43,334,39],[251,45,334,41],[251,52,334,48,"Buffer"],[251,58,334,54],[251,59,334,55,"alloc"],[251,64,334,60],[251,65,334,61],[251,67,334,63],[251,69,334,65],[251,70,334,66],[251,71,334,67],[252,8,335,4],[252,15,335,11,"_$$_REQUIRE"],[252,26,335,11],[252,27,335,11,"_dependencyMap"],[252,41,335,11],[252,58,335,19,"hash256"],[252,65,335,26],[252,66,335,27],[252,70,335,31],[252,71,335,32,"__toBuffer"],[252,81,335,42],[252,82,335,43,"undefined"],[252,91,335,52],[252,93,335,54,"undefined"],[252,102,335,63],[252,104,335,65,"forWitness"],[252,114,335,75],[252,115,335,76],[252,116,335,77],[253,6,336,2],[254,4,336,3],[255,6,336,3,"key"],[255,9,336,3],[256,6,336,3,"value"],[256,11,336,3],[256,13,337,2],[256,22,337,2,"getId"],[256,27,337,7,"getId"],[256,28,337,7],[256,30,337,10],[257,8,338,4],[258,8,339,4],[258,15,339,11,"_$$_REQUIRE"],[258,26,339,11],[258,27,339,11,"_dependencyMap"],[258,41,339,11],[258,63,339,25,"reverseBuffer"],[258,76,339,38],[258,77,339,39],[258,81,339,43],[258,82,339,44,"getHash"],[258,89,339,51],[258,90,339,52],[258,95,339,57],[258,96,339,58],[258,97,339,59],[258,98,339,60,"toString"],[258,106,339,68],[258,107,339,69],[258,112,339,74],[258,113,339,75],[259,6,340,2],[260,4,340,3],[261,6,340,3,"key"],[261,9,340,3],[262,6,340,3,"value"],[262,11,340,3],[262,13,341,2],[262,22,341,2,"toBuffer"],[262,30,341,10,"toBuffer"],[262,31,341,11,"buffer"],[262,37,341,17],[262,39,341,19,"initialOffset"],[262,52,341,32],[262,54,341,34],[263,8,342,4],[263,15,342,11],[263,19,342,15],[263,20,342,16,"__toBuffer"],[263,30,342,26],[263,31,342,27,"buffer"],[263,37,342,33],[263,39,342,35,"initialOffset"],[263,52,342,48],[263,54,342,50],[263,58,342,54],[263,59,342,55],[264,6,343,2],[265,4,343,3],[266,6,343,3,"key"],[266,9,343,3],[267,6,343,3,"value"],[267,11,343,3],[267,13,344,2],[267,22,344,2,"toHex"],[267,27,344,7,"toHex"],[267,28,344,7],[267,30,344,10],[268,8,345,4],[268,15,345,11],[268,19,345,15],[268,20,345,16,"toBuffer"],[268,28,345,24],[268,29,345,25,"undefined"],[268,38,345,34],[268,40,345,36,"undefined"],[268,49,345,45],[268,50,345,46],[268,51,345,47,"toString"],[268,59,345,55],[268,60,345,56],[268,65,345,61],[268,66,345,62],[269,6,346,2],[270,4,346,3],[271,6,346,3,"key"],[271,9,346,3],[272,6,346,3,"value"],[272,11,346,3],[272,13,347,2],[272,22,347,2,"setInputScript"],[272,36,347,16,"setInputScript"],[272,37,347,17,"index"],[272,42,347,22],[272,44,347,24,"scriptSig"],[272,53,347,33],[272,55,347,35],[273,8,348,4,"_$$_REQUIRE"],[273,19,348,4],[273,20,348,4,"_dependencyMap"],[273,34,348,4],[273,52,348,14,"_$$_REQUIRE"],[273,63,348,14],[273,64,348,14,"_dependencyMap"],[273,78,348,14],[273,94,348,20,"tuple"],[273,99,348,25],[273,100,348,26,"_$$_REQUIRE"],[273,111,348,26],[273,112,348,26,"_dependencyMap"],[273,126,348,26],[273,142,348,32,"Number"],[273,148,348,38],[273,150,348,40,"_$$_REQUIRE"],[273,161,348,40],[273,162,348,40,"_dependencyMap"],[273,176,348,40],[273,192,348,46,"Buffer"],[273,198,348,52],[273,199,348,53],[273,201,348,55,"arguments"],[273,210,348,64],[273,211,348,65],[274,8,349,4],[274,12,349,8],[274,13,349,9,"ins"],[274,16,349,12],[274,17,349,13,"index"],[274,22,349,18],[274,23,349,19],[274,24,349,20,"script"],[274,30,349,26],[274,33,349,29,"scriptSig"],[274,42,349,38],[275,6,350,2],[276,4,350,3],[277,6,350,3,"key"],[277,9,350,3],[278,6,350,3,"value"],[278,11,350,3],[278,13,351,2],[278,22,351,2,"setWitness"],[278,32,351,12,"setWitness"],[278,33,351,13,"index"],[278,38,351,18],[278,40,351,20,"witness"],[278,47,351,27],[278,49,351,29],[279,8,352,4,"_$$_REQUIRE"],[279,19,352,4],[279,20,352,4,"_dependencyMap"],[279,34,352,4],[279,52,352,14,"_$$_REQUIRE"],[279,63,352,14],[279,64,352,14,"_dependencyMap"],[279,78,352,14],[279,94,352,20,"tuple"],[279,99,352,25],[279,100,352,26,"_$$_REQUIRE"],[279,111,352,26],[279,112,352,26,"_dependencyMap"],[279,126,352,26],[279,142,352,32,"Number"],[279,148,352,38],[279,150,352,40],[279,151,352,41,"_$$_REQUIRE"],[279,162,352,41],[279,163,352,41,"_dependencyMap"],[279,177,352,41],[279,193,352,47,"Buffer"],[279,199,352,53],[279,200,352,54],[279,201,352,55],[279,203,352,57,"arguments"],[279,212,352,66],[279,213,352,67],[280,8,353,4],[280,12,353,8],[280,13,353,9,"ins"],[280,16,353,12],[280,17,353,13,"index"],[280,22,353,18],[280,23,353,19],[280,24,353,20,"witness"],[280,31,353,27],[280,34,353,30,"witness"],[280,41,353,37],[281,6,354,2],[282,4,354,3],[283,6,354,3,"key"],[283,9,354,3],[284,6,354,3,"value"],[284,11,354,3],[284,13,355,2],[284,22,355,2,"__toBuffer"],[284,32,355,12,"__toBuffer"],[284,33,355,13,"buffer"],[284,39,355,19],[284,41,355,21,"initialOffset"],[284,54,355,34],[284,56,355,60],[285,8,355,60],[285,12,355,36,"_ALLOW_WITNESS"],[285,26,355,50],[285,29,355,50,"arguments"],[285,38,355,50],[285,39,355,50,"length"],[285,45,355,50],[285,53,355,50,"arguments"],[285,62,355,50],[285,70,355,50,"undefined"],[285,79,355,50],[285,82,355,50,"arguments"],[285,91,355,50],[285,97,355,53],[285,102,355,58],[286,8,356,4],[286,12,356,8],[286,13,356,9,"buffer"],[286,19,356,15],[286,21,356,17,"buffer"],[286,27,356,23],[286,30,356,26,"Buffer"],[286,36,356,32],[286,37,356,33,"allocUnsafe"],[286,48,356,44],[286,49,356,45],[286,53,356,49],[286,54,356,50,"byteLength"],[286,64,356,60],[286,65,356,61,"_ALLOW_WITNESS"],[286,79,356,75],[286,80,356,76],[286,81,356,77],[287,8,357,4],[287,12,357,10,"bufferWriter"],[287,24,357,22],[287,27,357,25],[287,32,357,29,"_$$_REQUIRE"],[287,43,357,29],[287,44,357,29,"_dependencyMap"],[287,58,357,29],[287,80,357,43,"BufferWriter"],[287,92,357,55],[287,94,358,6,"buffer"],[287,100,358,12],[287,102,359,6,"initialOffset"],[287,115,359,19],[287,119,359,23],[287,120,360,4],[287,121,360,5],[288,8,361,4,"bufferWriter"],[288,20,361,16],[288,21,361,17,"writeInt32"],[288,31,361,27],[288,32,361,28],[288,36,361,32],[288,37,361,33,"version"],[288,44,361,40],[288,45,361,41],[289,8,362,4],[289,12,362,10,"hasWitnesses"],[289,24,362,22],[289,27,362,25,"_ALLOW_WITNESS"],[289,41,362,39],[289,45,362,43],[289,49,362,47],[289,50,362,48,"hasWitnesses"],[289,62,362,60],[289,63,362,61],[289,64,362,62],[290,8,363,4],[290,12,363,8,"hasWitnesses"],[290,24,363,20],[290,26,363,22],[291,10,364,6,"bufferWriter"],[291,22,364,18],[291,23,364,19,"writeUInt8"],[291,33,364,29],[291,34,364,30,"Transaction"],[291,45,364,41],[291,46,364,42,"ADVANCED_TRANSACTION_MARKER"],[291,73,364,69],[291,74,364,70],[292,10,365,6,"bufferWriter"],[292,22,365,18],[292,23,365,19,"writeUInt8"],[292,33,365,29],[292,34,365,30,"Transaction"],[292,45,365,41],[292,46,365,42,"ADVANCED_TRANSACTION_FLAG"],[292,71,365,67],[292,72,365,68],[293,8,366,4],[294,8,367,4,"bufferWriter"],[294,20,367,16],[294,21,367,17,"writeVarInt"],[294,32,367,28],[294,33,367,29],[294,37,367,33],[294,38,367,34,"ins"],[294,41,367,37],[294,42,367,38,"length"],[294,48,367,44],[294,49,367,45],[295,8,368,4],[295,12,368,8],[295,13,368,9,"ins"],[295,16,368,12],[295,17,368,13,"forEach"],[295,24,368,20],[295,25,368,21],[295,35,368,21,"txIn"],[295,39,368,25],[295,41,368,29],[296,10,369,6,"bufferWriter"],[296,22,369,18],[296,23,369,19,"writeSlice"],[296,33,369,29],[296,34,369,30,"txIn"],[296,38,369,34],[296,39,369,35,"hash"],[296,43,369,39],[296,44,369,40],[297,10,370,6,"bufferWriter"],[297,22,370,18],[297,23,370,19,"writeUInt32"],[297,34,370,30],[297,35,370,31,"txIn"],[297,39,370,35],[297,40,370,36,"index"],[297,45,370,41],[297,46,370,42],[298,10,371,6,"bufferWriter"],[298,22,371,18],[298,23,371,19,"writeVarSlice"],[298,36,371,32],[298,37,371,33,"txIn"],[298,41,371,37],[298,42,371,38,"script"],[298,48,371,44],[298,49,371,45],[299,10,372,6,"bufferWriter"],[299,22,372,18],[299,23,372,19,"writeUInt32"],[299,34,372,30],[299,35,372,31,"txIn"],[299,39,372,35],[299,40,372,36,"sequence"],[299,48,372,44],[299,49,372,45],[300,8,373,4],[300,9,373,5],[300,10,373,6],[301,8,374,4,"bufferWriter"],[301,20,374,16],[301,21,374,17,"writeVarInt"],[301,32,374,28],[301,33,374,29],[301,37,374,33],[301,38,374,34,"outs"],[301,42,374,38],[301,43,374,39,"length"],[301,49,374,45],[301,50,374,46],[302,8,375,4],[302,12,375,8],[302,13,375,9,"outs"],[302,17,375,13],[302,18,375,14,"forEach"],[302,25,375,21],[302,26,375,22],[302,36,375,22,"txOut"],[302,41,375,27],[302,43,375,31],[303,10,376,6],[303,14,376,10,"isOutput"],[303,22,376,18],[303,23,376,19,"txOut"],[303,28,376,24],[303,29,376,25],[303,31,376,27],[304,12,377,8,"bufferWriter"],[304,24,377,20],[304,25,377,21,"writeUInt64"],[304,36,377,32],[304,37,377,33,"txOut"],[304,42,377,38],[304,43,377,39,"value"],[304,48,377,44],[304,49,377,45],[305,10,378,6],[305,11,378,7],[305,17,378,13],[306,12,379,8,"bufferWriter"],[306,24,379,20],[306,25,379,21,"writeSlice"],[306,35,379,31],[306,36,379,32,"txOut"],[306,41,379,37],[306,42,379,38,"valueBuffer"],[306,53,379,49],[306,54,379,50],[307,10,380,6],[308,10,381,6,"bufferWriter"],[308,22,381,18],[308,23,381,19,"writeVarSlice"],[308,36,381,32],[308,37,381,33,"txOut"],[308,42,381,38],[308,43,381,39,"script"],[308,49,381,45],[308,50,381,46],[309,8,382,4],[309,9,382,5],[309,10,382,6],[310,8,383,4],[310,12,383,8,"hasWitnesses"],[310,24,383,20],[310,26,383,22],[311,10,384,6],[311,14,384,10],[311,15,384,11,"ins"],[311,18,384,14],[311,19,384,15,"forEach"],[311,26,384,22],[311,27,384,23],[311,37,384,23,"input"],[311,42,384,28],[311,44,384,32],[312,12,385,8,"bufferWriter"],[312,24,385,20],[312,25,385,21,"writeVector"],[312,36,385,32],[312,37,385,33,"input"],[312,42,385,38],[312,43,385,39,"witness"],[312,50,385,46],[312,51,385,47],[313,10,386,6],[313,11,386,7],[313,12,386,8],[314,8,387,4],[315,8,388,4,"bufferWriter"],[315,20,388,16],[315,21,388,17,"writeUInt32"],[315,32,388,28],[315,33,388,29],[315,37,388,33],[315,38,388,34,"locktime"],[315,46,388,42],[315,47,388,43],[316,8,389,4],[317,8,390,4],[317,12,390,8,"initialOffset"],[317,25,390,21],[317,30,390,26,"undefined"],[317,39,390,35],[317,41,391,6],[317,48,391,13,"buffer"],[317,54,391,19],[317,55,391,20,"slice"],[317,60,391,25],[317,61,391,26,"initialOffset"],[317,74,391,39],[317,76,391,41,"bufferWriter"],[317,88,391,53],[317,89,391,54,"offset"],[317,95,391,60],[317,96,391,61],[318,8,392,4],[318,15,392,11,"buffer"],[318,21,392,17],[319,6,393,2],[320,4,393,3],[321,6,393,3,"key"],[321,9,393,3],[322,6,393,3,"value"],[322,11,393,3],[322,13,48,2],[322,22,48,9,"fromBuffer"],[322,32,48,19,"fromBuffer"],[322,33,48,20,"buffer"],[322,39,48,26],[322,41,48,28,"_NO_STRICT"],[322,51,48,38],[322,53,48,40],[323,8,49,4],[323,12,49,10,"bufferReader"],[323,24,49,22],[323,27,49,25],[323,32,49,29,"_$$_REQUIRE"],[323,43,49,29],[323,44,49,29,"_dependencyMap"],[323,58,49,29],[323,80,49,43,"BufferReader"],[323,92,49,55],[323,94,49,56,"buffer"],[323,100,49,62],[323,101,49,63],[324,8,50,4],[324,12,50,10,"tx"],[324,14,50,12],[324,17,50,15],[324,21,50,19,"Transaction"],[324,32,50,30],[324,33,50,31],[324,34,50,32],[325,8,51,4,"tx"],[325,10,51,6],[325,11,51,7,"version"],[325,18,51,14],[325,21,51,17,"bufferReader"],[325,33,51,29],[325,34,51,30,"readInt32"],[325,43,51,39],[325,44,51,40],[325,45,51,41],[326,8,52,4],[326,12,52,10,"marker"],[326,18,52,16],[326,21,52,19,"bufferReader"],[326,33,52,31],[326,34,52,32,"readUInt8"],[326,43,52,41],[326,44,52,42],[326,45,52,43],[327,8,53,4],[327,12,53,10,"flag"],[327,16,53,14],[327,19,53,17,"bufferReader"],[327,31,53,29],[327,32,53,30,"readUInt8"],[327,41,53,39],[327,42,53,40],[327,43,53,41],[328,8,54,4],[328,12,54,8,"hasWitnesses"],[328,24,54,20],[328,27,54,23],[328,32,54,28],[329,8,55,4],[329,12,56,6,"marker"],[329,18,56,12],[329,23,56,17,"Transaction"],[329,34,56,28],[329,35,56,29,"ADVANCED_TRANSACTION_MARKER"],[329,62,56,56],[329,66,57,6,"flag"],[329,70,57,10],[329,75,57,15,"Transaction"],[329,86,57,26],[329,87,57,27,"ADVANCED_TRANSACTION_FLAG"],[329,112,57,52],[329,114,58,6],[330,10,59,6,"hasWitnesses"],[330,22,59,18],[330,25,59,21],[330,29,59,25],[331,8,60,4],[331,9,60,5],[331,15,60,11],[332,10,61,6,"bufferReader"],[332,22,61,18],[332,23,61,19,"offset"],[332,29,61,25],[332,33,61,29],[332,34,61,30],[333,8,62,4],[334,8,63,4],[334,12,63,10,"vinLen"],[334,18,63,16],[334,21,63,19,"bufferReader"],[334,33,63,31],[334,34,63,32,"readVarInt"],[334,44,63,42],[334,45,63,43],[334,46,63,44],[335,8,64,4],[335,13,64,9],[335,17,64,13,"i"],[335,18,64,14],[335,21,64,17],[335,22,64,18],[335,24,64,20,"i"],[335,25,64,21],[335,28,64,24,"vinLen"],[335,34,64,30],[335,36,64,32],[335,38,64,34,"i"],[335,39,64,35],[335,41,64,37],[336,10,65,6,"tx"],[336,12,65,8],[336,13,65,9,"ins"],[336,16,65,12],[336,17,65,13,"push"],[336,21,65,17],[336,22,65,18],[337,12,66,8,"hash"],[337,16,66,12],[337,18,66,14,"bufferReader"],[337,30,66,26],[337,31,66,27,"readSlice"],[337,40,66,36],[337,41,66,37],[337,43,66,39],[337,44,66,40],[338,12,67,8,"index"],[338,17,67,13],[338,19,67,15,"bufferReader"],[338,31,67,27],[338,32,67,28,"readUInt32"],[338,42,67,38],[338,43,67,39],[338,44,67,40],[339,12,68,8,"script"],[339,18,68,14],[339,20,68,16,"bufferReader"],[339,32,68,28],[339,33,68,29,"readVarSlice"],[339,45,68,41],[339,46,68,42],[339,47,68,43],[340,12,69,8,"sequence"],[340,20,69,16],[340,22,69,18,"bufferReader"],[340,34,69,30],[340,35,69,31,"readUInt32"],[340,45,69,41],[340,46,69,42],[340,47,69,43],[341,12,70,8,"witness"],[341,19,70,15],[341,21,70,17,"EMPTY_WITNESS"],[342,10,71,6],[342,11,71,7],[342,12,71,8],[343,8,72,4],[344,8,73,4],[344,12,73,10,"voutLen"],[344,19,73,17],[344,22,73,20,"bufferReader"],[344,34,73,32],[344,35,73,33,"readVarInt"],[344,45,73,43],[344,46,73,44],[344,47,73,45],[345,8,74,4],[345,13,74,9],[345,17,74,13,"i"],[345,19,74,14],[345,22,74,17],[345,23,74,18],[345,25,74,20,"i"],[345,27,74,21],[345,30,74,24,"voutLen"],[345,37,74,31],[345,39,74,33],[345,41,74,35,"i"],[345,43,74,36],[345,45,74,38],[346,10,75,6,"tx"],[346,12,75,8],[346,13,75,9,"outs"],[346,17,75,13],[346,18,75,14,"push"],[346,22,75,18],[346,23,75,19],[347,12,76,8,"value"],[347,17,76,13],[347,19,76,15,"bufferReader"],[347,31,76,27],[347,32,76,28,"readUInt64"],[347,42,76,38],[347,43,76,39],[347,44,76,40],[348,12,77,8,"script"],[348,18,77,14],[348,20,77,16,"bufferReader"],[348,32,77,28],[348,33,77,29,"readVarSlice"],[348,45,77,41],[348,46,77,42],[349,10,78,6],[349,11,78,7],[349,12,78,8],[350,8,79,4],[351,8,80,4],[351,12,80,8,"hasWitnesses"],[351,24,80,20],[351,26,80,22],[352,10,81,6],[352,15,81,11],[352,19,81,15,"i"],[352,22,81,16],[352,25,81,19],[352,26,81,20],[352,28,81,22,"i"],[352,31,81,23],[352,34,81,26,"vinLen"],[352,40,81,32],[352,42,81,34],[352,44,81,36,"i"],[352,47,81,37],[352,49,81,39],[353,12,82,8,"tx"],[353,14,82,10],[353,15,82,11,"ins"],[353,18,82,14],[353,19,82,15,"i"],[353,22,82,16],[353,23,82,17],[353,24,82,18,"witness"],[353,31,82,25],[353,34,82,28,"bufferReader"],[353,46,82,40],[353,47,82,41,"readVector"],[353,57,82,51],[353,58,82,52],[353,59,82,53],[354,10,83,6],[355,10,84,6],[356,10,85,6],[356,14,85,10],[356,15,85,11,"tx"],[356,17,85,13],[356,18,85,14,"hasWitnesses"],[356,30,85,26],[356,31,85,27],[356,32,85,28],[356,34,86,8],[356,40,86,14],[356,44,86,18,"Error"],[356,49,86,23],[356,50,86,24],[356,92,86,66],[356,93,86,67],[357,8,87,4],[358,8,88,4,"tx"],[358,10,88,6],[358,11,88,7,"locktime"],[358,19,88,15],[358,22,88,18,"bufferReader"],[358,34,88,30],[358,35,88,31,"readUInt32"],[358,45,88,41],[358,46,88,42],[358,47,88,43],[359,8,89,4],[359,12,89,8,"_NO_STRICT"],[359,22,89,18],[359,24,89,20],[359,31,89,27,"tx"],[359,33,89,29],[360,8,90,4],[360,12,90,8,"bufferReader"],[360,24,90,20],[360,25,90,21,"offset"],[360,31,90,27],[360,36,90,32,"buffer"],[360,42,90,38],[360,43,90,39,"length"],[360,49,90,45],[360,51,91,6],[360,57,91,12],[360,61,91,16,"Error"],[360,66,91,21],[360,67,91,22],[360,100,91,55],[360,101,91,56],[361,8,92,4],[361,15,92,11,"tx"],[361,17,92,13],[362,6,93,2],[363,4,93,3],[364,6,93,3,"key"],[364,9,93,3],[365,6,93,3,"value"],[365,11,93,3],[365,13,94,2],[365,22,94,9,"fromHex"],[365,29,94,16,"fromHex"],[365,30,94,17,"hex"],[365,33,94,20],[365,35,94,22],[366,8,95,4],[366,15,95,11,"Transaction"],[366,26,95,22],[366,27,95,23,"fromBuffer"],[366,37,95,33],[366,38,95,34,"Buffer"],[366,44,95,40],[366,45,95,41,"from"],[366,49,95,45],[366,50,95,46,"hex"],[366,53,95,49],[366,55,95,51],[366,60,95,56],[366,61,95,57],[366,63,95,59],[366,68,95,64],[366,69,95,65],[367,6,96,2],[368,4,96,3],[369,6,96,3,"key"],[369,9,96,3],[370,6,96,3,"value"],[370,11,96,3],[370,13,97,2],[370,22,97,9,"isCoinbaseHash"],[370,36,97,23,"isCoinbaseHash"],[370,37,97,24,"buffer"],[370,43,97,30],[370,45,97,32],[371,8,98,4,"_$$_REQUIRE"],[371,19,98,4],[371,20,98,4,"_dependencyMap"],[371,34,98,4],[371,52,98,14,"_$$_REQUIRE"],[371,63,98,14],[371,64,98,14,"_dependencyMap"],[371,78,98,14],[371,94,98,20,"Hash256bit"],[371,104,98,30],[371,106,98,32,"buffer"],[371,112,98,38],[371,113,98,39],[372,8,99,4],[372,13,99,9],[372,17,99,13,"i"],[372,18,99,14],[372,21,99,17],[372,22,99,18],[372,24,99,20,"i"],[372,25,99,21],[372,28,99,24],[372,30,99,26],[372,32,99,28],[372,34,99,30,"i"],[372,35,99,31],[372,37,99,33],[373,10,100,6],[373,14,100,10,"buffer"],[373,20,100,16],[373,21,100,17,"i"],[373,22,100,18],[373,23,100,19],[373,28,100,24],[373,29,100,25],[373,31,100,27],[373,38,100,34],[373,43,100,39],[374,8,101,4],[375,8,102,4],[375,15,102,11],[375,19,102,15],[376,6,103,2],[377,4,103,3],[378,2,103,3],[379,2,395,0,"Transaction"],[379,13,395,11],[379,14,395,12,"DEFAULT_SEQUENCE"],[379,30,395,28],[379,33,395,31],[379,43,395,41],[380,2,396,0,"Transaction"],[380,13,396,11],[380,14,396,12,"SIGHASH_ALL"],[380,25,396,23],[380,28,396,26],[380,32,396,30],[381,2,397,0,"Transaction"],[381,13,397,11],[381,14,397,12,"SIGHASH_NONE"],[381,26,397,24],[381,29,397,27],[381,33,397,31],[382,2,398,0,"Transaction"],[382,13,398,11],[382,14,398,12,"SIGHASH_SINGLE"],[382,28,398,26],[382,31,398,29],[382,35,398,33],[383,2,399,0,"Transaction"],[383,13,399,11],[383,14,399,12,"SIGHASH_ANYONECANPAY"],[383,34,399,32],[383,37,399,35],[383,41,399,39],[384,2,400,0,"Transaction"],[384,13,400,11],[384,14,400,12,"ADVANCED_TRANSACTION_MARKER"],[384,41,400,39],[384,44,400,42],[384,48,400,46],[385,2,401,0,"Transaction"],[385,13,401,11],[385,14,401,12,"ADVANCED_TRANSACTION_FLAG"],[385,39,401,37],[385,42,401,40],[385,46,401,44],[386,2,402,0,"exports"],[386,9,402,7],[386,10,402,8,"Transaction"],[386,21,402,19],[386,24,402,22,"Transaction"],[386,35,402,33],[387,0,402,34],[387,3]],"functionMap":{"names":["<global>","varSliceSize","vectorSize","someVector.reduce$argument_0","isOutput","Transaction","Transaction#constructor","Transaction.fromBuffer","Transaction.fromHex","Transaction.isCoinbaseHash","Transaction#isCoinbase","Transaction#addInput","Transaction#addOutput","Transaction#hasWitnesses","ins.some$argument_0","Transaction#weight","Transaction#virtualSize","Transaction#byteLength","ins.reduce$argument_0","outs.reduce$argument_0","Transaction#clone","ins.map$argument_0","outs.map$argument_0","Transaction#hashForSignature","bscript.decompile.filter$argument_0","txTmp.ins.forEach$argument_0","Transaction#hashForWitnessV0","ins.forEach$argument_0","outs.forEach$argument_0","Transaction#getHash","Transaction#getId","Transaction#toBuffer","Transaction#toHex","Transaction#setInputScript","Transaction#setWitness","Transaction#__toBuffer"],"mappings":"AAA;ACS;CDG;AEC;sBCI;KDE;CFE;AIgB;CJE;AKC;ECC;GDK;EEC;GF6C;EGC;GHE;EIC;GJM;EKC;GLI;EMC;GNuB;EOC;GPS;EQC;yBCC;KDE;GRC;EUC;GVI;EWC;GXE;EYC;sBCM;ODE;uBEC;OFE;0BCE;WDE;GZG;EeC;6BCI;KDQ;+BEC;KFK;GfE;EkBS;8CCS;ODE;wBEO;OFG;wBEY;OFG;wBES;OFE;GlBQ;EqBC;uBCa;ODG;uBCU;ODE;0CPO;OOE;wBEG;OFG;GrB4B;EwBC;GxBI;EyBC;GzBG;E0BC;G1BE;E2BC;G3BE;E4BC;G5BG;E6BC;G7BG;E8BC;qBRa;KQK;sBPE;KOO;uBRE;OQE;G9BO;CLC"}},"type":"js/module"}]}