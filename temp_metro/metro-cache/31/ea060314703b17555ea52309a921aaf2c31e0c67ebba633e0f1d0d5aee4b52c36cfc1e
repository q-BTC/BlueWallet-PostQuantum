{"dependencies":[{"name":"has-tostringtag/shams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":21,"index":75},"end":{"line":4,"column":53,"index":107}}],"key":"izE/uq7FfNanWBh2hZSREj/S0H0="}},{"name":"call-bound","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":31},"end":{"line":3,"column":37,"index":52}},{"start":{"line":3,"column":16,"index":31},"end":{"line":3,"column":37,"index":52}}],"key":"xVV7LLeUILRahu/c6/GJ3JZjpdc="}},{"name":"gopd","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":11,"index":154},"end":{"line":6,"column":26,"index":169}}],"key":"3Ynmg9vud3kIHPLeXNonzO7sQpY="}},{"name":"hasown","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":124},"end":{"line":5,"column":30,"index":141}}],"key":"VT3hiVD+HsWWJ61cDFykFNxCL5Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var hasToStringTag = _$$_REQUIRE(_dependencyMap[0], \"has-tostringtag/shams\")();\n  /** @type {import('.')} */\n  var fn;\n  if (hasToStringTag) {\n    /** @type {(receiver: ThisParameterType<typeof RegExp.prototype.exec>, ...args: Parameters<typeof RegExp.prototype.exec>) => ReturnType<typeof RegExp.prototype.exec>} */\n    var $exec = _$$_REQUIRE(_dependencyMap[1], \"call-bound\")('RegExp.prototype.exec');\n    /** @type {object} */\n    var isRegexMarker = {};\n    var throwRegexMarker = function throwRegexMarker() {\n      throw isRegexMarker;\n    };\n    /** @type {{ toString(): never, valueOf(): never, [Symbol.toPrimitive]?(): never }} */\n    var badStringifier = {\n      toString: throwRegexMarker,\n      valueOf: throwRegexMarker\n    };\n    if (typeof Symbol.toPrimitive === 'symbol') {\n      badStringifier[Symbol.toPrimitive] = throwRegexMarker;\n    }\n\n    /** @type {import('.')} */\n    // @ts-expect-error TS can't figure out that the $exec call always throws\n    // eslint-disable-next-line consistent-return\n    fn = function isRegex(value) {\n      if (!value || typeof value !== 'object') {\n        return false;\n      }\n\n      // eslint-disable-next-line no-extra-parens\n      var descriptor = /** @type {NonNullable<typeof gOPD>} */_$$_REQUIRE(_dependencyMap[2], \"gopd\")(/** @type {{ lastIndex?: unknown }} */value, 'lastIndex');\n      var hasLastIndexDataProperty = descriptor && _$$_REQUIRE(_dependencyMap[3], \"hasown\")(descriptor, 'value');\n      if (!hasLastIndexDataProperty) {\n        return false;\n      }\n      try {\n        // eslint-disable-next-line no-extra-parens\n        $exec(value, /** @type {string} */ /** @type {unknown} */badStringifier);\n      } catch (e) {\n        return e === isRegexMarker;\n      }\n    };\n  } else {\n    /** @type {(receiver: ThisParameterType<typeof Object.prototype.toString>, ...args: Parameters<typeof Object.prototype.toString>) => ReturnType<typeof Object.prototype.toString>} */\n    var $toString = _$$_REQUIRE(_dependencyMap[1], \"call-bound\")('Object.prototype.toString');\n    /** @const @type {'[object RegExp]'} */\n    var regexClass = '[object RegExp]';\n\n    /** @type {import('.')} */\n    fn = function isRegex(value) {\n      // In older browsers, typeof regex incorrectly returns 'function'\n      if (!value || typeof value !== 'object' && typeof value !== 'function') {\n        return false;\n      }\n      return $toString(value) === regexClass;\n    };\n  }\n  module.exports = fn;\n});","lineCount":61,"map":[[2,2,1,0],[2,14,1,12],[4,2,4,0],[4,6,4,4,"hasToStringTag"],[4,20,4,18],[4,23,4,21,"require"],[4,34,4,28],[4,35,4,28,"_dependencyMap"],[4,49,4,28],[4,77,4,52],[4,78,4,53],[4,79,4,54],[4,80,4,55],[5,2,8,0],[6,2,9,0],[6,6,9,4,"fn"],[6,8,9,6],[7,2,11,0],[7,6,11,4,"hasToStringTag"],[7,20,11,18],[7,22,11,20],[8,4,12,1],[9,4,13,1],[9,8,13,5,"$exec"],[9,13,13,10],[9,16,13,13,"_$$_REQUIRE"],[9,27,13,13],[9,28,13,13,"_dependencyMap"],[9,42,13,13],[9,61,13,23],[9,84,13,46],[9,85,13,47],[10,4,14,1],[11,4,15,1],[11,8,15,5,"isRegexMarker"],[11,21,15,18],[11,24,15,21],[11,25,15,22],[11,26,15,23],[12,4,17,1],[12,8,17,5,"throwRegexMarker"],[12,24,17,21],[12,27,17,24],[12,36,17,5,"throwRegexMarker"],[12,52,17,21,"throwRegexMarker"],[12,53,17,21],[12,55,17,36],[13,6,18,2],[13,12,18,8,"isRegexMarker"],[13,25,18,21],[14,4,19,1],[14,5,19,2],[15,4,20,1],[16,4,21,1],[16,8,21,5,"badStringifier"],[16,22,21,19],[16,25,21,22],[17,6,22,2,"toString"],[17,14,22,10],[17,16,22,12,"throwRegexMarker"],[17,32,22,28],[18,6,23,2,"valueOf"],[18,13,23,9],[18,15,23,11,"throwRegexMarker"],[19,4,24,1],[19,5,24,2],[20,4,26,1],[20,8,26,5],[20,15,26,12,"Symbol"],[20,21,26,18],[20,22,26,19,"toPrimitive"],[20,33,26,30],[20,38,26,35],[20,46,26,43],[20,48,26,45],[21,6,27,2,"badStringifier"],[21,20,27,16],[21,21,27,17,"Symbol"],[21,27,27,23],[21,28,27,24,"toPrimitive"],[21,39,27,35],[21,40,27,36],[21,43,27,39,"throwRegexMarker"],[21,59,27,55],[22,4,28,1],[24,4,30,1],[25,4,31,1],[26,4,32,1],[27,4,33,1,"fn"],[27,6,33,3],[27,9,33,6],[27,18,33,15,"isRegex"],[27,25,33,22,"isRegex"],[27,26,33,23,"value"],[27,31,33,28],[27,33,33,30],[28,6,34,2],[28,10,34,6],[28,11,34,7,"value"],[28,16,34,12],[28,20,34,16],[28,27,34,23,"value"],[28,32,34,28],[28,37,34,33],[28,45,34,41],[28,47,34,43],[29,8,35,3],[29,15,35,10],[29,20,35,15],[30,6,36,2],[32,6,38,2],[33,6,39,2],[33,10,39,6,"descriptor"],[33,20,39,16],[33,23,39,19],[33,62,39,59,"_$$_REQUIRE"],[33,73,39,59],[33,74,39,59,"_dependencyMap"],[33,88,39,59],[33,101,39,66],[33,139,39,106,"value"],[33,144,39,111],[33,146,39,114],[33,157,39,125],[33,158,39,126],[34,6,40,2],[34,10,40,6,"hasLastIndexDataProperty"],[34,34,40,30],[34,37,40,33,"descriptor"],[34,47,40,43],[34,51,40,47,"_$$_REQUIRE"],[34,62,40,47],[34,63,40,47,"_dependencyMap"],[34,77,40,47],[34,92,40,54,"descriptor"],[34,102,40,64],[34,104,40,66],[34,111,40,73],[34,112,40,74],[35,6,41,2],[35,10,41,6],[35,11,41,7,"hasLastIndexDataProperty"],[35,35,41,31],[35,37,41,33],[36,8,42,3],[36,15,42,10],[36,20,42,15],[37,6,43,2],[38,6,45,2],[38,10,45,6],[39,8,46,3],[40,8,47,3,"$exec"],[40,13,47,8],[40,14,47,9,"value"],[40,19,47,14],[40,21,47,16],[40,43,47,39],[40,65,47,63,"badStringifier"],[40,79,47,79],[40,80,47,80],[41,6,48,2],[41,7,48,3],[41,8,48,4],[41,15,48,11,"e"],[41,16,48,12],[41,18,48,14],[42,8,49,3],[42,15,49,10,"e"],[42,16,49,11],[42,21,49,16,"isRegexMarker"],[42,34,49,29],[43,6,50,2],[44,4,51,1],[44,5,51,2],[45,2,52,0],[45,3,52,1],[45,9,52,7],[46,4,53,1],[47,4,54,1],[47,8,54,5,"$toString"],[47,17,54,14],[47,20,54,17,"_$$_REQUIRE"],[47,31,54,17],[47,32,54,17,"_dependencyMap"],[47,46,54,17],[47,65,54,27],[47,92,54,54],[47,93,54,55],[48,4,55,1],[49,4,56,1],[49,8,56,5,"regexClass"],[49,18,56,15],[49,21,56,18],[49,38,56,35],[51,4,58,1],[52,4,59,1,"fn"],[52,6,59,3],[52,9,59,6],[52,18,59,15,"isRegex"],[52,25,59,22,"isRegex"],[52,26,59,23,"value"],[52,31,59,28],[52,33,59,30],[53,6,60,2],[54,6,61,2],[54,10,61,6],[54,11,61,7,"value"],[54,16,61,12],[54,20,61,17],[54,27,61,24,"value"],[54,32,61,29],[54,37,61,34],[54,45,61,42],[54,49,61,46],[54,56,61,53,"value"],[54,61,61,58],[54,66,61,63],[54,76,61,74],[54,78,61,76],[55,8,62,3],[55,15,62,10],[55,20,62,15],[56,6,63,2],[57,6,65,2],[57,13,65,9,"$toString"],[57,22,65,18],[57,23,65,19,"value"],[57,28,65,24],[57,29,65,25],[57,34,65,30,"regexClass"],[57,44,65,40],[58,4,66,1],[58,5,66,2],[59,2,67,0],[60,2,69,0,"module"],[60,8,69,6],[60,9,69,7,"exports"],[60,16,69,14],[60,19,69,17,"fn"],[60,21,69,19],[61,0,69,20],[61,3]],"functionMap":{"names":["<global>","throwRegexMarker","isRegex"],"mappings":"AAA;wBCgB;EDE;MEc;EFkB;MEQ;EFO"}},"type":"js/module"}]}