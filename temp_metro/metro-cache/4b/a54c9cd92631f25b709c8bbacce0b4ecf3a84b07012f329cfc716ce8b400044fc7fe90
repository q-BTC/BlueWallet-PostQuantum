{"dependencies":[{"name":"../../asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":48},"end":{"line":3,"column":32,"index":69}},{"start":{"line":4,"column":11,"index":82},"end":{"line":4,"column":20,"index":91}},{"start":{"line":4,"column":11,"index":82},"end":{"line":4,"column":20,"index":91}},{"start":{"line":4,"column":11,"index":82},"end":{"line":4,"column":20,"index":91}},{"start":{"line":4,"column":11,"index":82},"end":{"line":4,"column":20,"index":91}},{"start":{"line":5,"column":13,"index":106},"end":{"line":5,"column":24,"index":117}}],"key":"eTtXjgveLOBDW6odk2vWaoMUiPI="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Import DER constants\n  var der = _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").constants.der;\n  function DERDecoder(entity) {\n    this.enc = 'der';\n    this.name = entity.name;\n    this.entity = entity;\n\n    // Construct base tree\n    this.tree = new DERNode();\n    this.tree._init(entity.body);\n  }\n  ;\n  module.exports = DERDecoder;\n  DERDecoder.prototype.decode = function decode(data, options) {\n    if (!(data instanceof _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").base.DecoderBuffer)) data = new (_$$_REQUIRE(_dependencyMap[0], \"../../asn1\").base.DecoderBuffer)(data, options);\n    return this.tree._decode(data, options);\n  };\n\n  // Tree methods\n\n  function DERNode(parent) {\n    _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").base.Node.call(this, 'der', parent);\n  }\n  _$$_REQUIRE(_dependencyMap[1], \"inherits\")(DERNode, _$$_REQUIRE(_dependencyMap[0], \"../../asn1\").base.Node);\n  DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n    if (buffer.isEmpty()) return false;\n    var state = buffer.save();\n    var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n    if (buffer.isError(decodedTag)) return decodedTag;\n    buffer.restore(state);\n    return decodedTag.tag === tag || decodedTag.tagStr === tag || decodedTag.tagStr + 'of' === tag || any;\n  };\n  DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n    var decodedTag = derDecodeTag(buffer, 'Failed to decode tag of \"' + tag + '\"');\n    if (buffer.isError(decodedTag)) return decodedTag;\n    var len = derDecodeLen(buffer, decodedTag.primitive, 'Failed to get length of \"' + tag + '\"');\n\n    // Failure\n    if (buffer.isError(len)) return len;\n    if (!any && decodedTag.tag !== tag && decodedTag.tagStr !== tag && decodedTag.tagStr + 'of' !== tag) {\n      return buffer.error('Failed to match tag: \"' + tag + '\"');\n    }\n    if (decodedTag.primitive || len !== null) return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n    // Indefinite length... find END tag\n    var state = buffer.save();\n    var res = this._skipUntilEnd(buffer, 'Failed to skip indefinite length body: \"' + this.tag + '\"');\n    if (buffer.isError(res)) return res;\n    len = buffer.offset - state.offset;\n    buffer.restore(state);\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n  };\n  DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n    while (true) {\n      var tag = derDecodeTag(buffer, fail);\n      if (buffer.isError(tag)) return tag;\n      var len = derDecodeLen(buffer, tag.primitive, fail);\n      if (buffer.isError(len)) return len;\n      var res;\n      if (tag.primitive || len !== null) res = buffer.skip(len);else res = this._skipUntilEnd(buffer, fail);\n\n      // Failure\n      if (buffer.isError(res)) return res;\n      if (tag.tagStr === 'end') break;\n    }\n  };\n  DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder, options) {\n    var result = [];\n    while (!buffer.isEmpty()) {\n      var possibleEnd = this._peekTag(buffer, 'end');\n      if (buffer.isError(possibleEnd)) return possibleEnd;\n      var res = decoder.decode(buffer, 'der', options);\n      if (buffer.isError(res) && possibleEnd) break;\n      result.push(res);\n    }\n    return result;\n  };\n  DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n    if (tag === 'bitstr') {\n      var unused = buffer.readUInt8();\n      if (buffer.isError(unused)) return unused;\n      return {\n        unused: unused,\n        data: buffer.raw()\n      };\n    } else if (tag === 'bmpstr') {\n      var raw = buffer.raw();\n      if (raw.length % 2 === 1) return buffer.error('Decoding of string type: bmpstr length mismatch');\n      var str = '';\n      for (var i = 0; i < raw.length / 2; i++) {\n        str += String.fromCharCode(raw.readUInt16BE(i * 2));\n      }\n      return str;\n    } else if (tag === 'numstr') {\n      var numstr = buffer.raw().toString('ascii');\n      if (!this._isNumstr(numstr)) {\n        return buffer.error('Decoding of string type: ' + 'numstr unsupported characters');\n      }\n      return numstr;\n    } else if (tag === 'octstr') {\n      return buffer.raw();\n    } else if (tag === 'objDesc') {\n      return buffer.raw();\n    } else if (tag === 'printstr') {\n      var printstr = buffer.raw().toString('ascii');\n      if (!this._isPrintstr(printstr)) {\n        return buffer.error('Decoding of string type: ' + 'printstr unsupported characters');\n      }\n      return printstr;\n    } else if (/str$/.test(tag)) {\n      return buffer.raw().toString();\n    } else {\n      return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n    }\n  };\n  DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n    var result;\n    var identifiers = [];\n    var ident = 0;\n    while (!buffer.isEmpty()) {\n      var subident = buffer.readUInt8();\n      ident <<= 7;\n      ident |= subident & 0x7f;\n      if ((subident & 0x80) === 0) {\n        identifiers.push(ident);\n        ident = 0;\n      }\n    }\n    if (subident & 0x80) identifiers.push(ident);\n    var first = identifiers[0] / 40 | 0;\n    var second = identifiers[0] % 40;\n    if (relative) result = identifiers;else result = [first, second].concat(identifiers.slice(1));\n    if (values) {\n      var tmp = values[result.join(' ')];\n      if (tmp === undefined) tmp = values[result.join('.')];\n      if (tmp !== undefined) result = tmp;\n    }\n    return result;\n  };\n  DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n    var str = buffer.raw().toString();\n    if (tag === 'gentime') {\n      var year = str.slice(0, 4) | 0;\n      var mon = str.slice(4, 6) | 0;\n      var day = str.slice(6, 8) | 0;\n      var hour = str.slice(8, 10) | 0;\n      var min = str.slice(10, 12) | 0;\n      var sec = str.slice(12, 14) | 0;\n    } else if (tag === 'utctime') {\n      var year = str.slice(0, 2) | 0;\n      var mon = str.slice(2, 4) | 0;\n      var day = str.slice(4, 6) | 0;\n      var hour = str.slice(6, 8) | 0;\n      var min = str.slice(8, 10) | 0;\n      var sec = str.slice(10, 12) | 0;\n      if (year < 70) year = 2000 + year;else year = 1900 + year;\n    } else {\n      return buffer.error('Decoding ' + tag + ' time is not supported yet');\n    }\n    return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n  };\n  DERNode.prototype._decodeNull = function decodeNull(buffer) {\n    return null;\n  };\n  DERNode.prototype._decodeBool = function decodeBool(buffer) {\n    var res = buffer.readUInt8();\n    if (buffer.isError(res)) return res;else return res !== 0;\n  };\n  DERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n    // Bigint, return as it is (assume big endian)\n    var raw = buffer.raw();\n    var res = new (_$$_REQUIRE(_dependencyMap[0], \"../../asn1\").bignum)(raw);\n    if (values) res = values[res.toString(10)] || res;\n    return res;\n  };\n  DERNode.prototype._use = function use(entity, obj) {\n    if (typeof entity === 'function') entity = entity(obj);\n    return entity._getDecoder('der').tree;\n  };\n\n  // Utility methods\n\n  function derDecodeTag(buf, fail) {\n    var tag = buf.readUInt8(fail);\n    if (buf.isError(tag)) return tag;\n    var cls = der.tagClass[tag >> 6];\n    var primitive = (tag & 0x20) === 0;\n\n    // Multi-octet tag - load\n    if ((tag & 0x1f) === 0x1f) {\n      var oct = tag;\n      tag = 0;\n      while ((oct & 0x80) === 0x80) {\n        oct = buf.readUInt8(fail);\n        if (buf.isError(oct)) return oct;\n        tag <<= 7;\n        tag |= oct & 0x7f;\n      }\n    } else {\n      tag &= 0x1f;\n    }\n    var tagStr = der.tag[tag];\n    return {\n      cls: cls,\n      primitive: primitive,\n      tag: tag,\n      tagStr: tagStr\n    };\n  }\n  function derDecodeLen(buf, primitive, fail) {\n    var len = buf.readUInt8(fail);\n    if (buf.isError(len)) return len;\n\n    // Indefinite form\n    if (!primitive && len === 0x80) return null;\n\n    // Definite form\n    if ((len & 0x80) === 0) {\n      // Short form\n      return len;\n    }\n\n    // Long form\n    var num = len & 0x7f;\n    if (num > 4) return buf.error('length octect is too long');\n    len = 0;\n    for (var i = 0; i < num; i++) {\n      len <<= 8;\n      var j = buf.readUInt8(fail);\n      if (buf.isError(j)) return j;\n      len |= j;\n    }\n    return len;\n  }\n});","lineCount":236,"map":[[2,2,7,0],[3,2,8,0],[3,6,8,4,"der"],[3,9,8,7],[3,12,8,10,"_$$_REQUIRE"],[3,23,8,10],[3,24,8,10,"_dependencyMap"],[3,38,8,10],[3,57,8,15,"constants"],[3,66,8,24],[3,67,8,25,"der"],[3,70,8,28],[4,2,10,0],[4,11,10,9,"DERDecoder"],[4,21,10,19,"DERDecoder"],[4,22,10,20,"entity"],[4,28,10,26],[4,30,10,28],[5,4,11,2],[5,8,11,6],[5,9,11,7,"enc"],[5,12,11,10],[5,15,11,13],[5,20,11,18],[6,4,12,2],[6,8,12,6],[6,9,12,7,"name"],[6,13,12,11],[6,16,12,14,"entity"],[6,22,12,20],[6,23,12,21,"name"],[6,27,12,25],[7,4,13,2],[7,8,13,6],[7,9,13,7,"entity"],[7,15,13,13],[7,18,13,16,"entity"],[7,24,13,22],[9,4,15,2],[10,4,16,2],[10,8,16,6],[10,9,16,7,"tree"],[10,13,16,11],[10,16,16,14],[10,20,16,18,"DERNode"],[10,27,16,25],[10,28,16,26],[10,29,16,27],[11,4,17,2],[11,8,17,6],[11,9,17,7,"tree"],[11,13,17,11],[11,14,17,12,"_init"],[11,19,17,17],[11,20,17,18,"entity"],[11,26,17,24],[11,27,17,25,"body"],[11,31,17,29],[11,32,17,30],[12,2,18,0],[13,2,18,1],[14,2,19,0,"module"],[14,8,19,6],[14,9,19,7,"exports"],[14,16,19,14],[14,19,19,17,"DERDecoder"],[14,29,19,27],[15,2,21,0,"DERDecoder"],[15,12,21,10],[15,13,21,11,"prototype"],[15,22,21,20],[15,23,21,21,"decode"],[15,29,21,27],[15,32,21,30],[15,41,21,39,"decode"],[15,47,21,45,"decode"],[15,48,21,46,"data"],[15,52,21,50],[15,54,21,52,"options"],[15,61,21,59],[15,63,21,61],[16,4,22,2],[16,8,22,6],[16,10,22,8,"data"],[16,14,22,12],[16,26,22,24,"_$$_REQUIRE"],[16,37,22,24],[16,38,22,24,"_dependencyMap"],[16,52,22,24],[16,71,22,24,"base"],[16,75,22,24],[16,76,22,29,"DecoderBuffer"],[16,89,22,42],[16,90,22,43],[16,92,23,4,"data"],[16,96,23,8],[16,99,23,11],[16,104,23,15,"_$$_REQUIRE"],[16,115,23,15],[16,116,23,15,"_dependencyMap"],[16,130,23,15],[16,149,23,15,"base"],[16,153,23,15],[16,154,23,20,"DecoderBuffer"],[16,167,23,33],[16,169,23,34,"data"],[16,173,23,38],[16,175,23,40,"options"],[16,182,23,47],[16,183,23,48],[17,4,25,2],[17,11,25,9],[17,15,25,13],[17,16,25,14,"tree"],[17,20,25,18],[17,21,25,19,"_decode"],[17,28,25,26],[17,29,25,27,"data"],[17,33,25,31],[17,35,25,33,"options"],[17,42,25,40],[17,43,25,41],[18,2,26,0],[18,3,26,1],[20,2,28,0],[22,2,30,0],[22,11,30,9,"DERNode"],[22,18,30,16,"DERNode"],[22,19,30,17,"parent"],[22,25,30,23],[22,27,30,25],[23,4,31,2,"_$$_REQUIRE"],[23,15,31,2],[23,16,31,2,"_dependencyMap"],[23,30,31,2],[23,49,31,2,"base"],[23,53,31,2],[23,54,31,7,"Node"],[23,58,31,11],[23,59,31,12,"call"],[23,63,31,16],[23,64,31,17],[23,68,31,21],[23,70,31,23],[23,75,31,28],[23,77,31,30,"parent"],[23,83,31,36],[23,84,31,37],[24,2,32,0],[25,2,33,0,"_$$_REQUIRE"],[25,13,33,0],[25,14,33,0,"_dependencyMap"],[25,28,33,0],[25,45,33,9,"DERNode"],[25,52,33,16],[25,54,33,18,"_$$_REQUIRE"],[25,65,33,18],[25,66,33,18,"_dependencyMap"],[25,80,33,18],[25,99,33,18,"base"],[25,103,33,18],[25,104,33,23,"Node"],[25,108,33,27],[25,109,33,28],[26,2,35,0,"DERNode"],[26,9,35,7],[26,10,35,8,"prototype"],[26,19,35,17],[26,20,35,18,"_peekTag"],[26,28,35,26],[26,31,35,29],[26,40,35,38,"peekTag"],[26,47,35,45,"peekTag"],[26,48,35,46,"buffer"],[26,54,35,52],[26,56,35,54,"tag"],[26,59,35,57],[26,61,35,59,"any"],[26,64,35,62],[26,66,35,64],[27,4,36,2],[27,8,36,6,"buffer"],[27,14,36,12],[27,15,36,13,"isEmpty"],[27,22,36,20],[27,23,36,21],[27,24,36,22],[27,26,37,4],[27,33,37,11],[27,38,37,16],[28,4,39,2],[28,8,39,6,"state"],[28,13,39,11],[28,16,39,14,"buffer"],[28,22,39,20],[28,23,39,21,"save"],[28,27,39,25],[28,28,39,26],[28,29,39,27],[29,4,40,2],[29,8,40,6,"decodedTag"],[29,18,40,16],[29,21,40,19,"derDecodeTag"],[29,33,40,31],[29,34,40,32,"buffer"],[29,40,40,38],[29,42,40,40],[29,65,40,63],[29,68,40,66,"tag"],[29,71,40,69],[29,74,40,72],[29,77,40,75],[29,78,40,76],[30,4,41,2],[30,8,41,6,"buffer"],[30,14,41,12],[30,15,41,13,"isError"],[30,22,41,20],[30,23,41,21,"decodedTag"],[30,33,41,31],[30,34,41,32],[30,36,42,4],[30,43,42,11,"decodedTag"],[30,53,42,21],[31,4,44,2,"buffer"],[31,10,44,8],[31,11,44,9,"restore"],[31,18,44,16],[31,19,44,17,"state"],[31,24,44,22],[31,25,44,23],[32,4,46,2],[32,11,46,9,"decodedTag"],[32,21,46,19],[32,22,46,20,"tag"],[32,25,46,23],[32,30,46,28,"tag"],[32,33,46,31],[32,37,46,35,"decodedTag"],[32,47,46,45],[32,48,46,46,"tagStr"],[32,54,46,52],[32,59,46,57,"tag"],[32,62,46,60],[32,66,47,5,"decodedTag"],[32,76,47,15],[32,77,47,16,"tagStr"],[32,83,47,22],[32,86,47,25],[32,90,47,29],[32,95,47,35,"tag"],[32,98,47,38],[32,102,47,42,"any"],[32,105,47,45],[33,2,48,0],[33,3,48,1],[34,2,50,0,"DERNode"],[34,9,50,7],[34,10,50,8,"prototype"],[34,19,50,17],[34,20,50,18,"_decodeTag"],[34,30,50,28],[34,33,50,31],[34,42,50,40,"decodeTag"],[34,51,50,49,"decodeTag"],[34,52,50,50,"buffer"],[34,58,50,56],[34,60,50,58,"tag"],[34,63,50,61],[34,65,50,63,"any"],[34,68,50,66],[34,70,50,68],[35,4,51,2],[35,8,51,6,"decodedTag"],[35,18,51,16],[35,21,51,19,"derDecodeTag"],[35,33,51,31],[35,34,51,32,"buffer"],[35,40,51,38],[35,42,52,32],[35,69,52,59],[35,72,52,62,"tag"],[35,75,52,65],[35,78,52,68],[35,81,52,71],[35,82,52,72],[36,4,53,2],[36,8,53,6,"buffer"],[36,14,53,12],[36,15,53,13,"isError"],[36,22,53,20],[36,23,53,21,"decodedTag"],[36,33,53,31],[36,34,53,32],[36,36,54,4],[36,43,54,11,"decodedTag"],[36,53,54,21],[37,4,56,2],[37,8,56,6,"len"],[37,11,56,9],[37,14,56,12,"derDecodeLen"],[37,26,56,24],[37,27,56,25,"buffer"],[37,33,56,31],[37,35,57,25,"decodedTag"],[37,45,57,35],[37,46,57,36,"primitive"],[37,55,57,45],[37,57,58,25],[37,84,58,52],[37,87,58,55,"tag"],[37,90,58,58],[37,93,58,61],[37,96,58,64],[37,97,58,65],[39,4,60,2],[40,4,61,2],[40,8,61,6,"buffer"],[40,14,61,12],[40,15,61,13,"isError"],[40,22,61,20],[40,23,61,21,"len"],[40,26,61,24],[40,27,61,25],[40,29,62,4],[40,36,62,11,"len"],[40,39,62,14],[41,4,64,2],[41,8,64,6],[41,9,64,7,"any"],[41,12,64,10],[41,16,65,6,"decodedTag"],[41,26,65,16],[41,27,65,17,"tag"],[41,30,65,20],[41,35,65,25,"tag"],[41,38,65,28],[41,42,66,6,"decodedTag"],[41,52,66,16],[41,53,66,17,"tagStr"],[41,59,66,23],[41,64,66,28,"tag"],[41,67,66,31],[41,71,67,6,"decodedTag"],[41,81,67,16],[41,82,67,17,"tagStr"],[41,88,67,23],[41,91,67,26],[41,95,67,30],[41,100,67,35,"tag"],[41,103,67,38],[41,105,67,40],[42,6,68,4],[42,13,68,11,"buffer"],[42,19,68,17],[42,20,68,18,"error"],[42,25,68,23],[42,26,68,24],[42,50,68,48],[42,53,68,51,"tag"],[42,56,68,54],[42,59,68,57],[42,62,68,60],[42,63,68,61],[43,4,69,2],[44,4,71,2],[44,8,71,6,"decodedTag"],[44,18,71,16],[44,19,71,17,"primitive"],[44,28,71,26],[44,32,71,30,"len"],[44,35,71,33],[44,40,71,38],[44,44,71,42],[44,46,72,4],[44,53,72,11,"buffer"],[44,59,72,17],[44,60,72,18,"skip"],[44,64,72,22],[44,65,72,23,"len"],[44,68,72,26],[44,70,72,28],[44,98,72,56],[44,101,72,59,"tag"],[44,104,72,62],[44,107,72,65],[44,110,72,68],[44,111,72,69],[46,4,74,2],[47,4,75,2],[47,8,75,6,"state"],[47,13,75,11],[47,16,75,14,"buffer"],[47,22,75,20],[47,23,75,21,"save"],[47,27,75,25],[47,28,75,26],[47,29,75,27],[48,4,76,2],[48,8,76,6,"res"],[48,11,76,9],[48,14,76,12],[48,18,76,16],[48,19,76,17,"_skipUntilEnd"],[48,32,76,30],[48,33,77,6,"buffer"],[48,39,77,12],[48,41,78,6],[48,83,78,48],[48,86,78,51],[48,90,78,55],[48,91,78,56,"tag"],[48,94,78,59],[48,97,78,62],[48,100,78,65],[48,101,78,66],[49,4,79,2],[49,8,79,6,"buffer"],[49,14,79,12],[49,15,79,13,"isError"],[49,22,79,20],[49,23,79,21,"res"],[49,26,79,24],[49,27,79,25],[49,29,80,4],[49,36,80,11,"res"],[49,39,80,14],[50,4,82,2,"len"],[50,7,82,5],[50,10,82,8,"buffer"],[50,16,82,14],[50,17,82,15,"offset"],[50,23,82,21],[50,26,82,24,"state"],[50,31,82,29],[50,32,82,30,"offset"],[50,38,82,36],[51,4,83,2,"buffer"],[51,10,83,8],[51,11,83,9,"restore"],[51,18,83,16],[51,19,83,17,"state"],[51,24,83,22],[51,25,83,23],[52,4,84,2],[52,11,84,9,"buffer"],[52,17,84,15],[52,18,84,16,"skip"],[52,22,84,20],[52,23,84,21,"len"],[52,26,84,24],[52,28,84,26],[52,56,84,54],[52,59,84,57,"tag"],[52,62,84,60],[52,65,84,63],[52,68,84,66],[52,69,84,67],[53,2,85,0],[53,3,85,1],[54,2,87,0,"DERNode"],[54,9,87,7],[54,10,87,8,"prototype"],[54,19,87,17],[54,20,87,18,"_skipUntilEnd"],[54,33,87,31],[54,36,87,34],[54,45,87,43,"skipUntilEnd"],[54,57,87,55,"skipUntilEnd"],[54,58,87,56,"buffer"],[54,64,87,62],[54,66,87,64,"fail"],[54,70,87,68],[54,72,87,70],[55,4,88,2],[55,11,88,9],[55,15,88,13],[55,17,88,15],[56,6,89,4],[56,10,89,8,"tag"],[56,13,89,11],[56,16,89,14,"derDecodeTag"],[56,28,89,26],[56,29,89,27,"buffer"],[56,35,89,33],[56,37,89,35,"fail"],[56,41,89,39],[56,42,89,40],[57,6,90,4],[57,10,90,8,"buffer"],[57,16,90,14],[57,17,90,15,"isError"],[57,24,90,22],[57,25,90,23,"tag"],[57,28,90,26],[57,29,90,27],[57,31,91,6],[57,38,91,13,"tag"],[57,41,91,16],[58,6,92,4],[58,10,92,8,"len"],[58,13,92,11],[58,16,92,14,"derDecodeLen"],[58,28,92,26],[58,29,92,27,"buffer"],[58,35,92,33],[58,37,92,35,"tag"],[58,40,92,38],[58,41,92,39,"primitive"],[58,50,92,48],[58,52,92,50,"fail"],[58,56,92,54],[58,57,92,55],[59,6,93,4],[59,10,93,8,"buffer"],[59,16,93,14],[59,17,93,15,"isError"],[59,24,93,22],[59,25,93,23,"len"],[59,28,93,26],[59,29,93,27],[59,31,94,6],[59,38,94,13,"len"],[59,41,94,16],[60,6,96,4],[60,10,96,8,"res"],[60,13,96,11],[61,6,97,4],[61,10,97,8,"tag"],[61,13,97,11],[61,14,97,12,"primitive"],[61,23,97,21],[61,27,97,25,"len"],[61,30,97,28],[61,35,97,33],[61,39,97,37],[61,41,98,6,"res"],[61,44,98,9],[61,47,98,12,"buffer"],[61,53,98,18],[61,54,98,19,"skip"],[61,58,98,23],[61,59,98,24,"len"],[61,62,98,27],[61,63,98,28],[61,69,100,6,"res"],[61,72,100,9],[61,75,100,12],[61,79,100,16],[61,80,100,17,"_skipUntilEnd"],[61,93,100,30],[61,94,100,31,"buffer"],[61,100,100,37],[61,102,100,39,"fail"],[61,106,100,43],[61,107,100,44],[63,6,102,4],[64,6,103,4],[64,10,103,8,"buffer"],[64,16,103,14],[64,17,103,15,"isError"],[64,24,103,22],[64,25,103,23,"res"],[64,28,103,26],[64,29,103,27],[64,31,104,6],[64,38,104,13,"res"],[64,41,104,16],[65,6,106,4],[65,10,106,8,"tag"],[65,13,106,11],[65,14,106,12,"tagStr"],[65,20,106,18],[65,25,106,23],[65,30,106,28],[65,32,107,6],[66,4,108,2],[67,2,109,0],[67,3,109,1],[68,2,111,0,"DERNode"],[68,9,111,7],[68,10,111,8,"prototype"],[68,19,111,17],[68,20,111,18,"_decodeList"],[68,31,111,29],[68,34,111,32],[68,43,111,41,"decodeList"],[68,53,111,51,"decodeList"],[68,54,111,52,"buffer"],[68,60,111,58],[68,62,111,60,"tag"],[68,65,111,63],[68,67,111,65,"decoder"],[68,74,111,72],[68,76,112,52,"options"],[68,83,112,59],[68,85,112,61],[69,4,113,2],[69,8,113,6,"result"],[69,14,113,12],[69,17,113,15],[69,19,113,17],[70,4,114,2],[70,11,114,9],[70,12,114,10,"buffer"],[70,18,114,16],[70,19,114,17,"isEmpty"],[70,26,114,24],[70,27,114,25],[70,28,114,26],[70,30,114,28],[71,6,115,4],[71,10,115,8,"possibleEnd"],[71,21,115,19],[71,24,115,22],[71,28,115,26],[71,29,115,27,"_peekTag"],[71,37,115,35],[71,38,115,36,"buffer"],[71,44,115,42],[71,46,115,44],[71,51,115,49],[71,52,115,50],[72,6,116,4],[72,10,116,8,"buffer"],[72,16,116,14],[72,17,116,15,"isError"],[72,24,116,22],[72,25,116,23,"possibleEnd"],[72,36,116,34],[72,37,116,35],[72,39,117,6],[72,46,117,13,"possibleEnd"],[72,57,117,24],[73,6,119,4],[73,10,119,8,"res"],[73,13,119,11],[73,16,119,14,"decoder"],[73,23,119,21],[73,24,119,22,"decode"],[73,30,119,28],[73,31,119,29,"buffer"],[73,37,119,35],[73,39,119,37],[73,44,119,42],[73,46,119,44,"options"],[73,53,119,51],[73,54,119,52],[74,6,120,4],[74,10,120,8,"buffer"],[74,16,120,14],[74,17,120,15,"isError"],[74,24,120,22],[74,25,120,23,"res"],[74,28,120,26],[74,29,120,27],[74,33,120,31,"possibleEnd"],[74,44,120,42],[74,46,121,6],[75,6,122,4,"result"],[75,12,122,10],[75,13,122,11,"push"],[75,17,122,15],[75,18,122,16,"res"],[75,21,122,19],[75,22,122,20],[76,4,123,2],[77,4,124,2],[77,11,124,9,"result"],[77,17,124,15],[78,2,125,0],[78,3,125,1],[79,2,127,0,"DERNode"],[79,9,127,7],[79,10,127,8,"prototype"],[79,19,127,17],[79,20,127,18,"_decodeStr"],[79,30,127,28],[79,33,127,31],[79,42,127,40,"decodeStr"],[79,51,127,49,"decodeStr"],[79,52,127,50,"buffer"],[79,58,127,56],[79,60,127,58,"tag"],[79,63,127,61],[79,65,127,63],[80,4,128,2],[80,8,128,6,"tag"],[80,11,128,9],[80,16,128,14],[80,24,128,22],[80,26,128,24],[81,6,129,4],[81,10,129,8,"unused"],[81,16,129,14],[81,19,129,17,"buffer"],[81,25,129,23],[81,26,129,24,"readUInt8"],[81,35,129,33],[81,36,129,34],[81,37,129,35],[82,6,130,4],[82,10,130,8,"buffer"],[82,16,130,14],[82,17,130,15,"isError"],[82,24,130,22],[82,25,130,23,"unused"],[82,31,130,29],[82,32,130,30],[82,34,131,6],[82,41,131,13,"unused"],[82,47,131,19],[83,6,132,4],[83,13,132,11],[84,8,132,13,"unused"],[84,14,132,19],[84,16,132,21,"unused"],[84,22,132,27],[85,8,132,29,"data"],[85,12,132,33],[85,14,132,35,"buffer"],[85,20,132,41],[85,21,132,42,"raw"],[85,24,132,45],[85,25,132,46],[86,6,132,48],[86,7,132,49],[87,4,133,2],[87,5,133,3],[87,11,133,9],[87,15,133,13,"tag"],[87,18,133,16],[87,23,133,21],[87,31,133,29],[87,33,133,31],[88,6,134,4],[88,10,134,8,"raw"],[88,13,134,11],[88,16,134,14,"buffer"],[88,22,134,20],[88,23,134,21,"raw"],[88,26,134,24],[88,27,134,25],[88,28,134,26],[89,6,135,4],[89,10,135,8,"raw"],[89,13,135,11],[89,14,135,12,"length"],[89,20,135,18],[89,23,135,21],[89,24,135,22],[89,29,135,27],[89,30,135,28],[89,32,136,6],[89,39,136,13,"buffer"],[89,45,136,19],[89,46,136,20,"error"],[89,51,136,25],[89,52,136,26],[89,101,136,75],[89,102,136,76],[90,6,138,4],[90,10,138,8,"str"],[90,13,138,11],[90,16,138,14],[90,18,138,16],[91,6,139,4],[91,11,139,9],[91,15,139,13,"i"],[91,16,139,14],[91,19,139,17],[91,20,139,18],[91,22,139,20,"i"],[91,23,139,21],[91,26,139,24,"raw"],[91,29,139,27],[91,30,139,28,"length"],[91,36,139,34],[91,39,139,37],[91,40,139,38],[91,42,139,40,"i"],[91,43,139,41],[91,45,139,43],[91,47,139,45],[92,8,140,6,"str"],[92,11,140,9],[92,15,140,13,"String"],[92,21,140,19],[92,22,140,20,"fromCharCode"],[92,34,140,32],[92,35,140,33,"raw"],[92,38,140,36],[92,39,140,37,"readUInt16BE"],[92,51,140,49],[92,52,140,50,"i"],[92,53,140,51],[92,56,140,54],[92,57,140,55],[92,58,140,56],[92,59,140,57],[93,6,141,4],[94,6,142,4],[94,13,142,11,"str"],[94,16,142,14],[95,4,143,2],[95,5,143,3],[95,11,143,9],[95,15,143,13,"tag"],[95,18,143,16],[95,23,143,21],[95,31,143,29],[95,33,143,31],[96,6,144,4],[96,10,144,8,"numstr"],[96,16,144,14],[96,19,144,17,"buffer"],[96,25,144,23],[96,26,144,24,"raw"],[96,29,144,27],[96,30,144,28],[96,31,144,29],[96,32,144,30,"toString"],[96,40,144,38],[96,41,144,39],[96,48,144,46],[96,49,144,47],[97,6,145,4],[97,10,145,8],[97,11,145,9],[97,15,145,13],[97,16,145,14,"_isNumstr"],[97,25,145,23],[97,26,145,24,"numstr"],[97,32,145,30],[97,33,145,31],[97,35,145,33],[98,8,146,6],[98,15,146,13,"buffer"],[98,21,146,19],[98,22,146,20,"error"],[98,27,146,25],[98,28,146,26],[98,55,146,53],[98,58,147,26],[98,89,147,57],[98,90,147,58],[99,6,148,4],[100,6,149,4],[100,13,149,11,"numstr"],[100,19,149,17],[101,4,150,2],[101,5,150,3],[101,11,150,9],[101,15,150,13,"tag"],[101,18,150,16],[101,23,150,21],[101,31,150,29],[101,33,150,31],[102,6,151,4],[102,13,151,11,"buffer"],[102,19,151,17],[102,20,151,18,"raw"],[102,23,151,21],[102,24,151,22],[102,25,151,23],[103,4,152,2],[103,5,152,3],[103,11,152,9],[103,15,152,13,"tag"],[103,18,152,16],[103,23,152,21],[103,32,152,30],[103,34,152,32],[104,6,153,4],[104,13,153,11,"buffer"],[104,19,153,17],[104,20,153,18,"raw"],[104,23,153,21],[104,24,153,22],[104,25,153,23],[105,4,154,2],[105,5,154,3],[105,11,154,9],[105,15,154,13,"tag"],[105,18,154,16],[105,23,154,21],[105,33,154,31],[105,35,154,33],[106,6,155,4],[106,10,155,8,"printstr"],[106,18,155,16],[106,21,155,19,"buffer"],[106,27,155,25],[106,28,155,26,"raw"],[106,31,155,29],[106,32,155,30],[106,33,155,31],[106,34,155,32,"toString"],[106,42,155,40],[106,43,155,41],[106,50,155,48],[106,51,155,49],[107,6,156,4],[107,10,156,8],[107,11,156,9],[107,15,156,13],[107,16,156,14,"_isPrintstr"],[107,27,156,25],[107,28,156,26,"printstr"],[107,36,156,34],[107,37,156,35],[107,39,156,37],[108,8,157,6],[108,15,157,13,"buffer"],[108,21,157,19],[108,22,157,20,"error"],[108,27,157,25],[108,28,157,26],[108,55,157,53],[108,58,158,26],[108,91,158,59],[108,92,158,60],[109,6,159,4],[110,6,160,4],[110,13,160,11,"printstr"],[110,21,160,19],[111,4,161,2],[111,5,161,3],[111,11,161,9],[111,15,161,13],[111,21,161,19],[111,22,161,20,"test"],[111,26,161,24],[111,27,161,25,"tag"],[111,30,161,28],[111,31,161,29],[111,33,161,31],[112,6,162,4],[112,13,162,11,"buffer"],[112,19,162,17],[112,20,162,18,"raw"],[112,23,162,21],[112,24,162,22],[112,25,162,23],[112,26,162,24,"toString"],[112,34,162,32],[112,35,162,33],[112,36,162,34],[113,4,163,2],[113,5,163,3],[113,11,163,9],[114,6,164,4],[114,13,164,11,"buffer"],[114,19,164,17],[114,20,164,18,"error"],[114,25,164,23],[114,26,164,24],[114,53,164,51],[114,56,164,54,"tag"],[114,59,164,57],[114,62,164,60],[114,76,164,74],[114,77,164,75],[115,4,165,2],[116,2,166,0],[116,3,166,1],[117,2,168,0,"DERNode"],[117,9,168,7],[117,10,168,8,"prototype"],[117,19,168,17],[117,20,168,18,"_decodeObjid"],[117,32,168,30],[117,35,168,33],[117,44,168,42,"decodeObjid"],[117,55,168,53,"decodeObjid"],[117,56,168,54,"buffer"],[117,62,168,60],[117,64,168,62,"values"],[117,70,168,68],[117,72,168,70,"relative"],[117,80,168,78],[117,82,168,80],[118,4,169,2],[118,8,169,6,"result"],[118,14,169,12],[119,4,170,2],[119,8,170,6,"identifiers"],[119,19,170,17],[119,22,170,20],[119,24,170,22],[120,4,171,2],[120,8,171,6,"ident"],[120,13,171,11],[120,16,171,14],[120,17,171,15],[121,4,172,2],[121,11,172,9],[121,12,172,10,"buffer"],[121,18,172,16],[121,19,172,17,"isEmpty"],[121,26,172,24],[121,27,172,25],[121,28,172,26],[121,30,172,28],[122,6,173,4],[122,10,173,8,"subident"],[122,18,173,16],[122,21,173,19,"buffer"],[122,27,173,25],[122,28,173,26,"readUInt8"],[122,37,173,35],[122,38,173,36],[122,39,173,37],[123,6,174,4,"ident"],[123,11,174,9],[123,16,174,14],[123,17,174,15],[124,6,175,4,"ident"],[124,11,175,9],[124,15,175,13,"subident"],[124,23,175,21],[124,26,175,24],[124,30,175,28],[125,6,176,4],[125,10,176,8],[125,11,176,9,"subident"],[125,19,176,17],[125,22,176,20],[125,26,176,24],[125,32,176,30],[125,33,176,31],[125,35,176,33],[126,8,177,6,"identifiers"],[126,19,177,17],[126,20,177,18,"push"],[126,24,177,22],[126,25,177,23,"ident"],[126,30,177,28],[126,31,177,29],[127,8,178,6,"ident"],[127,13,178,11],[127,16,178,14],[127,17,178,15],[128,6,179,4],[129,4,180,2],[130,4,181,2],[130,8,181,6,"subident"],[130,16,181,14],[130,19,181,17],[130,23,181,21],[130,25,182,4,"identifiers"],[130,36,182,15],[130,37,182,16,"push"],[130,41,182,20],[130,42,182,21,"ident"],[130,47,182,26],[130,48,182,27],[131,4,184,2],[131,8,184,6,"first"],[131,13,184,11],[131,16,184,15,"identifiers"],[131,27,184,26],[131,28,184,27],[131,29,184,28],[131,30,184,29],[131,33,184,32],[131,35,184,34],[131,38,184,38],[131,39,184,39],[132,4,185,2],[132,8,185,6,"second"],[132,14,185,12],[132,17,185,15,"identifiers"],[132,28,185,26],[132,29,185,27],[132,30,185,28],[132,31,185,29],[132,34,185,32],[132,36,185,34],[133,4,187,2],[133,8,187,6,"relative"],[133,16,187,14],[133,18,188,4,"result"],[133,24,188,10],[133,27,188,13,"identifiers"],[133,38,188,24],[133,39,188,25],[133,44,190,4,"result"],[133,50,190,10],[133,53,190,13],[133,54,190,14,"first"],[133,59,190,19],[133,61,190,21,"second"],[133,67,190,27],[133,68,190,28],[133,69,190,29,"concat"],[133,75,190,35],[133,76,190,36,"identifiers"],[133,87,190,47],[133,88,190,48,"slice"],[133,93,190,53],[133,94,190,54],[133,95,190,55],[133,96,190,56],[133,97,190,57],[134,4,192,2],[134,8,192,6,"values"],[134,14,192,12],[134,16,192,14],[135,6,193,4],[135,10,193,8,"tmp"],[135,13,193,11],[135,16,193,14,"values"],[135,22,193,20],[135,23,193,21,"result"],[135,29,193,27],[135,30,193,28,"join"],[135,34,193,32],[135,35,193,33],[135,38,193,36],[135,39,193,37],[135,40,193,38],[136,6,194,4],[136,10,194,8,"tmp"],[136,13,194,11],[136,18,194,16,"undefined"],[136,27,194,25],[136,29,195,6,"tmp"],[136,32,195,9],[136,35,195,12,"values"],[136,41,195,18],[136,42,195,19,"result"],[136,48,195,25],[136,49,195,26,"join"],[136,53,195,30],[136,54,195,31],[136,57,195,34],[136,58,195,35],[136,59,195,36],[137,6,196,4],[137,10,196,8,"tmp"],[137,13,196,11],[137,18,196,16,"undefined"],[137,27,196,25],[137,29,197,6,"result"],[137,35,197,12],[137,38,197,15,"tmp"],[137,41,197,18],[138,4,198,2],[139,4,200,2],[139,11,200,9,"result"],[139,17,200,15],[140,2,201,0],[140,3,201,1],[141,2,203,0,"DERNode"],[141,9,203,7],[141,10,203,8,"prototype"],[141,19,203,17],[141,20,203,18,"_decodeTime"],[141,31,203,29],[141,34,203,32],[141,43,203,41,"decodeTime"],[141,53,203,51,"decodeTime"],[141,54,203,52,"buffer"],[141,60,203,58],[141,62,203,60,"tag"],[141,65,203,63],[141,67,203,65],[142,4,204,2],[142,8,204,6,"str"],[142,11,204,9],[142,14,204,12,"buffer"],[142,20,204,18],[142,21,204,19,"raw"],[142,24,204,22],[142,25,204,23],[142,26,204,24],[142,27,204,25,"toString"],[142,35,204,33],[142,36,204,34],[142,37,204,35],[143,4,205,2],[143,8,205,6,"tag"],[143,11,205,9],[143,16,205,14],[143,25,205,23],[143,27,205,25],[144,6,206,4],[144,10,206,8,"year"],[144,14,206,12],[144,17,206,15,"str"],[144,20,206,18],[144,21,206,19,"slice"],[144,26,206,24],[144,27,206,25],[144,28,206,26],[144,30,206,28],[144,31,206,29],[144,32,206,30],[144,35,206,33],[144,36,206,34],[145,6,207,4],[145,10,207,8,"mon"],[145,13,207,11],[145,16,207,14,"str"],[145,19,207,17],[145,20,207,18,"slice"],[145,25,207,23],[145,26,207,24],[145,27,207,25],[145,29,207,27],[145,30,207,28],[145,31,207,29],[145,34,207,32],[145,35,207,33],[146,6,208,4],[146,10,208,8,"day"],[146,13,208,11],[146,16,208,14,"str"],[146,19,208,17],[146,20,208,18,"slice"],[146,25,208,23],[146,26,208,24],[146,27,208,25],[146,29,208,27],[146,30,208,28],[146,31,208,29],[146,34,208,32],[146,35,208,33],[147,6,209,4],[147,10,209,8,"hour"],[147,14,209,12],[147,17,209,15,"str"],[147,20,209,18],[147,21,209,19,"slice"],[147,26,209,24],[147,27,209,25],[147,28,209,26],[147,30,209,28],[147,32,209,30],[147,33,209,31],[147,36,209,34],[147,37,209,35],[148,6,210,4],[148,10,210,8,"min"],[148,13,210,11],[148,16,210,14,"str"],[148,19,210,17],[148,20,210,18,"slice"],[148,25,210,23],[148,26,210,24],[148,28,210,26],[148,30,210,28],[148,32,210,30],[148,33,210,31],[148,36,210,34],[148,37,210,35],[149,6,211,4],[149,10,211,8,"sec"],[149,13,211,11],[149,16,211,14,"str"],[149,19,211,17],[149,20,211,18,"slice"],[149,25,211,23],[149,26,211,24],[149,28,211,26],[149,30,211,28],[149,32,211,30],[149,33,211,31],[149,36,211,34],[149,37,211,35],[150,4,212,2],[150,5,212,3],[150,11,212,9],[150,15,212,13,"tag"],[150,18,212,16],[150,23,212,21],[150,32,212,30],[150,34,212,32],[151,6,213,4],[151,10,213,8,"year"],[151,14,213,12],[151,17,213,15,"str"],[151,20,213,18],[151,21,213,19,"slice"],[151,26,213,24],[151,27,213,25],[151,28,213,26],[151,30,213,28],[151,31,213,29],[151,32,213,30],[151,35,213,33],[151,36,213,34],[152,6,214,4],[152,10,214,8,"mon"],[152,13,214,11],[152,16,214,14,"str"],[152,19,214,17],[152,20,214,18,"slice"],[152,25,214,23],[152,26,214,24],[152,27,214,25],[152,29,214,27],[152,30,214,28],[152,31,214,29],[152,34,214,32],[152,35,214,33],[153,6,215,4],[153,10,215,8,"day"],[153,13,215,11],[153,16,215,14,"str"],[153,19,215,17],[153,20,215,18,"slice"],[153,25,215,23],[153,26,215,24],[153,27,215,25],[153,29,215,27],[153,30,215,28],[153,31,215,29],[153,34,215,32],[153,35,215,33],[154,6,216,4],[154,10,216,8,"hour"],[154,14,216,12],[154,17,216,15,"str"],[154,20,216,18],[154,21,216,19,"slice"],[154,26,216,24],[154,27,216,25],[154,28,216,26],[154,30,216,28],[154,31,216,29],[154,32,216,30],[154,35,216,33],[154,36,216,34],[155,6,217,4],[155,10,217,8,"min"],[155,13,217,11],[155,16,217,14,"str"],[155,19,217,17],[155,20,217,18,"slice"],[155,25,217,23],[155,26,217,24],[155,27,217,25],[155,29,217,27],[155,31,217,29],[155,32,217,30],[155,35,217,33],[155,36,217,34],[156,6,218,4],[156,10,218,8,"sec"],[156,13,218,11],[156,16,218,14,"str"],[156,19,218,17],[156,20,218,18,"slice"],[156,25,218,23],[156,26,218,24],[156,28,218,26],[156,30,218,28],[156,32,218,30],[156,33,218,31],[156,36,218,34],[156,37,218,35],[157,6,219,4],[157,10,219,8,"year"],[157,14,219,12],[157,17,219,15],[157,19,219,17],[157,21,220,6,"year"],[157,25,220,10],[157,28,220,13],[157,32,220,17],[157,35,220,20,"year"],[157,39,220,24],[157,40,220,25],[157,45,222,6,"year"],[157,49,222,10],[157,52,222,13],[157,56,222,17],[157,59,222,20,"year"],[157,63,222,24],[158,4,223,2],[158,5,223,3],[158,11,223,9],[159,6,224,4],[159,13,224,11,"buffer"],[159,19,224,17],[159,20,224,18,"error"],[159,25,224,23],[159,26,224,24],[159,37,224,35],[159,40,224,38,"tag"],[159,43,224,41],[159,46,224,44],[159,74,224,72],[159,75,224,73],[160,4,225,2],[161,4,227,2],[161,11,227,9,"Date"],[161,15,227,13],[161,16,227,14,"UTC"],[161,19,227,17],[161,20,227,18,"year"],[161,24,227,22],[161,26,227,24,"mon"],[161,29,227,27],[161,32,227,30],[161,33,227,31],[161,35,227,33,"day"],[161,38,227,36],[161,40,227,38,"hour"],[161,44,227,42],[161,46,227,44,"min"],[161,49,227,47],[161,51,227,49,"sec"],[161,54,227,52],[161,56,227,54],[161,57,227,55],[161,58,227,56],[162,2,228,0],[162,3,228,1],[163,2,230,0,"DERNode"],[163,9,230,7],[163,10,230,8,"prototype"],[163,19,230,17],[163,20,230,18,"_decodeNull"],[163,31,230,29],[163,34,230,32],[163,43,230,41,"decodeNull"],[163,53,230,51,"decodeNull"],[163,54,230,52,"buffer"],[163,60,230,58],[163,62,230,60],[164,4,231,2],[164,11,231,9],[164,15,231,13],[165,2,232,0],[165,3,232,1],[166,2,234,0,"DERNode"],[166,9,234,7],[166,10,234,8,"prototype"],[166,19,234,17],[166,20,234,18,"_decodeBool"],[166,31,234,29],[166,34,234,32],[166,43,234,41,"decodeBool"],[166,53,234,51,"decodeBool"],[166,54,234,52,"buffer"],[166,60,234,58],[166,62,234,60],[167,4,235,2],[167,8,235,6,"res"],[167,11,235,9],[167,14,235,12,"buffer"],[167,20,235,18],[167,21,235,19,"readUInt8"],[167,30,235,28],[167,31,235,29],[167,32,235,30],[168,4,236,2],[168,8,236,6,"buffer"],[168,14,236,12],[168,15,236,13,"isError"],[168,22,236,20],[168,23,236,21,"res"],[168,26,236,24],[168,27,236,25],[168,29,237,4],[168,36,237,11,"res"],[168,39,237,14],[168,40,237,15],[168,45,239,4],[168,52,239,11,"res"],[168,55,239,14],[168,60,239,19],[168,61,239,20],[169,2,240,0],[169,3,240,1],[170,2,242,0,"DERNode"],[170,9,242,7],[170,10,242,8,"prototype"],[170,19,242,17],[170,20,242,18,"_decodeInt"],[170,30,242,28],[170,33,242,31],[170,42,242,40,"decodeInt"],[170,51,242,49,"decodeInt"],[170,52,242,50,"buffer"],[170,58,242,56],[170,60,242,58,"values"],[170,66,242,64],[170,68,242,66],[171,4,243,2],[172,4,244,2],[172,8,244,6,"raw"],[172,11,244,9],[172,14,244,12,"buffer"],[172,20,244,18],[172,21,244,19,"raw"],[172,24,244,22],[172,25,244,23],[172,26,244,24],[173,4,245,2],[173,8,245,6,"res"],[173,11,245,9],[173,14,245,12],[173,19,245,12,"_$$_REQUIRE"],[173,30,245,12],[173,31,245,12,"_dependencyMap"],[173,45,245,12],[173,64,245,12,"bignum"],[173,70,245,12],[173,72,245,23,"raw"],[173,75,245,26],[173,76,245,27],[174,4,247,2],[174,8,247,6,"values"],[174,14,247,12],[174,16,248,4,"res"],[174,19,248,7],[174,22,248,10,"values"],[174,28,248,16],[174,29,248,17,"res"],[174,32,248,20],[174,33,248,21,"toString"],[174,41,248,29],[174,42,248,30],[174,44,248,32],[174,45,248,33],[174,46,248,34],[174,50,248,38,"res"],[174,53,248,41],[175,4,250,2],[175,11,250,9,"res"],[175,14,250,12],[176,2,251,0],[176,3,251,1],[177,2,253,0,"DERNode"],[177,9,253,7],[177,10,253,8,"prototype"],[177,19,253,17],[177,20,253,18,"_use"],[177,24,253,22],[177,27,253,25],[177,36,253,34,"use"],[177,39,253,37,"use"],[177,40,253,38,"entity"],[177,46,253,44],[177,48,253,46,"obj"],[177,51,253,49],[177,53,253,51],[178,4,254,2],[178,8,254,6],[178,15,254,13,"entity"],[178,21,254,19],[178,26,254,24],[178,36,254,34],[178,38,255,4,"entity"],[178,44,255,10],[178,47,255,13,"entity"],[178,53,255,19],[178,54,255,20,"obj"],[178,57,255,23],[178,58,255,24],[179,4,256,2],[179,11,256,9,"entity"],[179,17,256,15],[179,18,256,16,"_getDecoder"],[179,29,256,27],[179,30,256,28],[179,35,256,33],[179,36,256,34],[179,37,256,35,"tree"],[179,41,256,39],[180,2,257,0],[180,3,257,1],[182,2,259,0],[184,2,261,0],[184,11,261,9,"derDecodeTag"],[184,23,261,21,"derDecodeTag"],[184,24,261,22,"buf"],[184,27,261,25],[184,29,261,27,"fail"],[184,33,261,31],[184,35,261,33],[185,4,262,2],[185,8,262,6,"tag"],[185,11,262,9],[185,14,262,12,"buf"],[185,17,262,15],[185,18,262,16,"readUInt8"],[185,27,262,25],[185,28,262,26,"fail"],[185,32,262,30],[185,33,262,31],[186,4,263,2],[186,8,263,6,"buf"],[186,11,263,9],[186,12,263,10,"isError"],[186,19,263,17],[186,20,263,18,"tag"],[186,23,263,21],[186,24,263,22],[186,26,264,4],[186,33,264,11,"tag"],[186,36,264,14],[187,4,266,2],[187,8,266,6,"cls"],[187,11,266,9],[187,14,266,12,"der"],[187,17,266,15],[187,18,266,16,"tagClass"],[187,26,266,24],[187,27,266,25,"tag"],[187,30,266,28],[187,34,266,32],[187,35,266,33],[187,36,266,34],[188,4,267,2],[188,8,267,6,"primitive"],[188,17,267,15],[188,20,267,18],[188,21,267,19,"tag"],[188,24,267,22],[188,27,267,25],[188,31,267,29],[188,37,267,35],[188,38,267,36],[190,4,269,2],[191,4,270,2],[191,8,270,6],[191,9,270,7,"tag"],[191,12,270,10],[191,15,270,13],[191,19,270,17],[191,25,270,23],[191,29,270,27],[191,31,270,29],[192,6,271,4],[192,10,271,8,"oct"],[192,13,271,11],[192,16,271,14,"tag"],[192,19,271,17],[193,6,272,4,"tag"],[193,9,272,7],[193,12,272,10],[193,13,272,11],[194,6,273,4],[194,13,273,11],[194,14,273,12,"oct"],[194,17,273,15],[194,20,273,18],[194,24,273,22],[194,30,273,28],[194,34,273,32],[194,36,273,34],[195,8,274,6,"oct"],[195,11,274,9],[195,14,274,12,"buf"],[195,17,274,15],[195,18,274,16,"readUInt8"],[195,27,274,25],[195,28,274,26,"fail"],[195,32,274,30],[195,33,274,31],[196,8,275,6],[196,12,275,10,"buf"],[196,15,275,13],[196,16,275,14,"isError"],[196,23,275,21],[196,24,275,22,"oct"],[196,27,275,25],[196,28,275,26],[196,30,276,8],[196,37,276,15,"oct"],[196,40,276,18],[197,8,278,6,"tag"],[197,11,278,9],[197,16,278,14],[197,17,278,15],[198,8,279,6,"tag"],[198,11,279,9],[198,15,279,13,"oct"],[198,18,279,16],[198,21,279,19],[198,25,279,23],[199,6,280,4],[200,4,281,2],[200,5,281,3],[200,11,281,9],[201,6,282,4,"tag"],[201,9,282,7],[201,13,282,11],[201,17,282,15],[202,4,283,2],[203,4,284,2],[203,8,284,6,"tagStr"],[203,14,284,12],[203,17,284,15,"der"],[203,20,284,18],[203,21,284,19,"tag"],[203,24,284,22],[203,25,284,23,"tag"],[203,28,284,26],[203,29,284,27],[204,4,286,2],[204,11,286,9],[205,6,287,4,"cls"],[205,9,287,7],[205,11,287,9,"cls"],[205,14,287,12],[206,6,288,4,"primitive"],[206,15,288,13],[206,17,288,15,"primitive"],[206,26,288,24],[207,6,289,4,"tag"],[207,9,289,7],[207,11,289,9,"tag"],[207,14,289,12],[208,6,290,4,"tagStr"],[208,12,290,10],[208,14,290,12,"tagStr"],[209,4,291,2],[209,5,291,3],[210,2,292,0],[211,2,294,0],[211,11,294,9,"derDecodeLen"],[211,23,294,21,"derDecodeLen"],[211,24,294,22,"buf"],[211,27,294,25],[211,29,294,27,"primitive"],[211,38,294,36],[211,40,294,38,"fail"],[211,44,294,42],[211,46,294,44],[212,4,295,2],[212,8,295,6,"len"],[212,11,295,9],[212,14,295,12,"buf"],[212,17,295,15],[212,18,295,16,"readUInt8"],[212,27,295,25],[212,28,295,26,"fail"],[212,32,295,30],[212,33,295,31],[213,4,296,2],[213,8,296,6,"buf"],[213,11,296,9],[213,12,296,10,"isError"],[213,19,296,17],[213,20,296,18,"len"],[213,23,296,21],[213,24,296,22],[213,26,297,4],[213,33,297,11,"len"],[213,36,297,14],[215,4,299,2],[216,4,300,2],[216,8,300,6],[216,9,300,7,"primitive"],[216,18,300,16],[216,22,300,20,"len"],[216,25,300,23],[216,30,300,28],[216,34,300,32],[216,36,301,4],[216,43,301,11],[216,47,301,15],[218,4,303,2],[219,4,304,2],[219,8,304,6],[219,9,304,7,"len"],[219,12,304,10],[219,15,304,13],[219,19,304,17],[219,25,304,23],[219,26,304,24],[219,28,304,26],[220,6,305,4],[221,6,306,4],[221,13,306,11,"len"],[221,16,306,14],[222,4,307,2],[224,4,309,2],[225,4,310,2],[225,8,310,6,"num"],[225,11,310,9],[225,14,310,12,"len"],[225,17,310,15],[225,20,310,18],[225,24,310,22],[226,4,311,2],[226,8,311,6,"num"],[226,11,311,9],[226,14,311,12],[226,15,311,13],[226,17,312,4],[226,24,312,11,"buf"],[226,27,312,14],[226,28,312,15,"error"],[226,33,312,20],[226,34,312,21],[226,61,312,48],[226,62,312,49],[227,4,314,2,"len"],[227,7,314,5],[227,10,314,8],[227,11,314,9],[228,4,315,2],[228,9,315,7],[228,13,315,11,"i"],[228,14,315,12],[228,17,315,15],[228,18,315,16],[228,20,315,18,"i"],[228,21,315,19],[228,24,315,22,"num"],[228,27,315,25],[228,29,315,27,"i"],[228,30,315,28],[228,32,315,30],[228,34,315,32],[229,6,316,4,"len"],[229,9,316,7],[229,14,316,12],[229,15,316,13],[230,6,317,4],[230,10,317,8,"j"],[230,11,317,9],[230,14,317,12,"buf"],[230,17,317,15],[230,18,317,16,"readUInt8"],[230,27,317,25],[230,28,317,26,"fail"],[230,32,317,30],[230,33,317,31],[231,6,318,4],[231,10,318,8,"buf"],[231,13,318,11],[231,14,318,12,"isError"],[231,21,318,19],[231,22,318,20,"j"],[231,23,318,21],[231,24,318,22],[231,26,319,6],[231,33,319,13,"j"],[231,34,319,14],[232,6,320,4,"len"],[232,9,320,7],[232,13,320,11,"j"],[232,14,320,12],[233,4,321,2],[234,4,323,2],[234,11,323,9,"len"],[234,14,323,12],[235,2,324,0],[236,0,324,1],[236,3]],"functionMap":{"names":["<global>","DERDecoder","decode","DERNode","peekTag","decodeTag","skipUntilEnd","decodeList","decodeStr","decodeObjid","decodeTime","decodeNull","decodeBool","decodeInt","use","derDecodeTag","derDecodeLen"],"mappings":"AAA;ACS;CDQ;8BEG;CFK;AGI;CHE;6BIG;CJa;+BKE;CLmC;kCME;CNsB;gCOE;CPc;+BQE;CRuC;iCSE;CTiC;gCUE;CVyB;gCWE;CXE;gCYE;CZM;+BaE;CbS;yBcE;CdI;AeI;Cf+B;AgBE;ChB8B"}},"type":"js/module"}]}