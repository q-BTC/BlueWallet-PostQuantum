{"dependencies":[{"name":"../TypeHelpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":22,"index":999},"end":{"line":24,"column":47,"index":1024}},{"start":{"line":24,"column":22,"index":999},"end":{"line":24,"column":47,"index":1024}}],"key":"FUIiAPXXq4uBh40x8ll/V/L5jCM="}},{"name":"../assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":17,"index":922},"end":{"line":22,"column":37,"index":942}},{"start":{"line":22,"column":17,"index":922},"end":{"line":22,"column":37,"index":942}},{"start":{"line":22,"column":17,"index":922},"end":{"line":22,"column":37,"index":942}}],"key":"EqNBW+769mc/j/kMnDe9BBrECKc="}},{"name":"../collection-accessors/Set","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":14,"index":1040},"end":{"line":25,"column":52,"index":1078}}],"key":"UF/uMOkoumjJ6lzCeK8ecNgrA3k="}},{"name":"../binding","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":18,"index":882},"end":{"line":21,"column":39,"index":903}},{"start":{"line":21,"column":18,"index":882},"end":{"line":21,"column":39,"index":903}}],"key":"PNnuyjjxgoVhr2iud9oB5p5GzrA="}},{"name":"../Set","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":14,"index":958},"end":{"line":23,"column":31,"index":975}}],"key":"5jWKVhQBaeunmvPaA7QfdqGRH/M="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2024 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createSetPropertyAccessor = void 0;\n  /** @internal */\n  function createSetPropertyAccessor(_ref) {\n    var columnKey = _ref.columnKey,\n      realm = _ref.realm,\n      name = _ref.name,\n      type = _ref.type,\n      optional = _ref.optional,\n      objectType = _ref.objectType,\n      getClassHelpers = _ref.getClassHelpers;\n    var itemType = (0, _$$_REQUIRE(_dependencyMap[0], \"../TypeHelpers\").toItemType)(type);\n    var itemHelpers = (0, _$$_REQUIRE(_dependencyMap[0], \"../TypeHelpers\").getTypeHelpers)(itemType, {\n      realm: realm,\n      name: `value in ${name}`,\n      getClassHelpers: getClassHelpers,\n      objectType: objectType,\n      optional: optional,\n      objectSchemaName: undefined\n    });\n    _$$_REQUIRE(_dependencyMap[1], \"../assert\").assert.string(objectType);\n    var setAccessor = (0, _$$_REQUIRE(_dependencyMap[2], \"../collection-accessors/Set\").createSetAccessor)({\n      realm: realm,\n      typeHelpers: itemHelpers,\n      itemType: itemType\n    });\n    return {\n      get: function get(obj) {\n        var internal = _$$_REQUIRE(_dependencyMap[3], \"../binding\").binding.Set.make(realm.internal, obj, columnKey);\n        return new (_$$_REQUIRE(_dependencyMap[4], \"../Set\").RealmSet)(realm, internal, setAccessor, itemHelpers);\n      },\n      set: function set(obj, value) {\n        _$$_REQUIRE(_dependencyMap[1], \"../assert\").assert.inTransaction(realm);\n        var internal = _$$_REQUIRE(_dependencyMap[3], \"../binding\").binding.Set.make(realm.internal, obj, columnKey);\n        // Clear the set before adding new values\n        internal.removeAll();\n        _$$_REQUIRE(_dependencyMap[1], \"../assert\").assert.array(value, \"values\");\n        for (var v of value) {\n          setAccessor.insert(internal, v);\n        }\n      }\n    };\n  }\n  exports.createSetPropertyAccessor = createSetPropertyAccessor;\n});","lineCount":67,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,19,0,"Object"],[21,8,19,6],[21,9,19,7,"defineProperty"],[21,23,19,21],[21,24,19,22,"exports"],[21,31,19,29],[21,33,19,31],[21,45,19,43],[21,47,19,45],[22,4,19,47,"value"],[22,9,19,52],[22,11,19,54],[23,2,19,59],[23,3,19,60],[23,4,19,61],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"createSetPropertyAccessor"],[24,35,20,33],[24,38,20,36],[24,43,20,41],[24,44,20,42],[25,2,26,0],[26,2,27,0],[26,11,27,9,"createSetPropertyAccessor"],[26,36,27,34,"createSetPropertyAccessor"],[26,37,27,34,"_ref"],[26,41,27,34],[26,43,27,109],[27,4,27,109],[27,8,27,37,"columnKey"],[27,17,27,46],[27,20,27,46,"_ref"],[27,24,27,46],[27,25,27,37,"columnKey"],[27,34,27,46],[28,6,27,48,"realm"],[28,11,27,53],[28,14,27,53,"_ref"],[28,18,27,53],[28,19,27,48,"realm"],[28,24,27,53],[29,6,27,55,"name"],[29,10,27,59],[29,13,27,59,"_ref"],[29,17,27,59],[29,18,27,55,"name"],[29,22,27,59],[30,6,27,61,"type"],[30,10,27,65],[30,13,27,65,"_ref"],[30,17,27,65],[30,18,27,61,"type"],[30,22,27,65],[31,6,27,67,"optional"],[31,14,27,75],[31,17,27,75,"_ref"],[31,21,27,75],[31,22,27,67,"optional"],[31,30,27,75],[32,6,27,77,"objectType"],[32,16,27,87],[32,19,27,87,"_ref"],[32,23,27,87],[32,24,27,77,"objectType"],[32,34,27,87],[33,6,27,89,"getClassHelpers"],[33,21,27,104],[33,24,27,104,"_ref"],[33,28,27,104],[33,29,27,89,"getClassHelpers"],[33,44,27,104],[34,4,28,4],[34,8,28,10,"itemType"],[34,16,28,18],[34,19,28,21],[34,20,28,22],[34,21,28,23],[34,23,28,25,"_$$_REQUIRE"],[34,34,28,25],[34,35,28,25,"_dependencyMap"],[34,49,28,25],[34,72,28,39,"toItemType"],[34,82,28,49],[34,84,28,51,"type"],[34,88,28,55],[34,89,28,56],[35,4,29,4],[35,8,29,10,"itemHelpers"],[35,19,29,21],[35,22,29,24],[35,23,29,25],[35,24,29,26],[35,26,29,28,"_$$_REQUIRE"],[35,37,29,28],[35,38,29,28,"_dependencyMap"],[35,52,29,28],[35,75,29,42,"getTypeHelpers"],[35,89,29,56],[35,91,29,58,"itemType"],[35,99,29,66],[35,101,29,68],[36,6,30,8,"realm"],[36,11,30,13],[36,13,30,8,"realm"],[36,18,30,13],[37,6,31,8,"name"],[37,10,31,12],[37,12,31,14],[37,24,31,26,"name"],[37,28,31,30],[37,30,31,32],[38,6,32,8,"getClassHelpers"],[38,21,32,23],[38,23,32,8,"getClassHelpers"],[38,38,32,23],[39,6,33,8,"objectType"],[39,16,33,18],[39,18,33,8,"objectType"],[39,28,33,18],[40,6,34,8,"optional"],[40,14,34,16],[40,16,34,8,"optional"],[40,24,34,16],[41,6,35,8,"objectSchemaName"],[41,22,35,24],[41,24,35,26,"undefined"],[42,4,36,4],[42,5,36,5],[42,6,36,6],[43,4,37,4,"_$$_REQUIRE"],[43,15,37,4],[43,16,37,4,"_dependencyMap"],[43,30,37,4],[43,48,37,13,"assert"],[43,54,37,19],[43,55,37,20,"string"],[43,61,37,26],[43,62,37,27,"objectType"],[43,72,37,37],[43,73,37,38],[44,4,38,4],[44,8,38,10,"setAccessor"],[44,19,38,21],[44,22,38,24],[44,23,38,25],[44,24,38,26],[44,26,38,28,"_$$_REQUIRE"],[44,37,38,28],[44,38,38,28,"_dependencyMap"],[44,52,38,28],[44,88,38,34,"createSetAccessor"],[44,105,38,51],[44,107,38,53],[45,6,38,55,"realm"],[45,11,38,60],[45,13,38,55,"realm"],[45,18,38,60],[46,6,38,62,"typeHelpers"],[46,17,38,73],[46,19,38,75,"itemHelpers"],[46,30,38,86],[47,6,38,88,"itemType"],[47,14,38,96],[47,16,38,88,"itemType"],[48,4,38,97],[48,5,38,98],[48,6,38,99],[49,4,39,4],[49,11,39,11],[50,6,40,8,"get"],[50,9,40,11],[50,20,40,8,"get"],[50,23,40,11,"get"],[50,24,40,12,"obj"],[50,27,40,15],[50,29,40,17],[51,8,41,12],[51,12,41,18,"internal"],[51,20,41,26],[51,23,41,29,"_$$_REQUIRE"],[51,34,41,29],[51,35,41,29,"_dependencyMap"],[51,49,41,29],[51,68,41,39,"binding"],[51,75,41,46],[51,76,41,47,"Set"],[51,79,41,50],[51,80,41,51,"make"],[51,84,41,55],[51,85,41,56,"realm"],[51,90,41,61],[51,91,41,62,"internal"],[51,99,41,70],[51,101,41,72,"obj"],[51,104,41,75],[51,106,41,77,"columnKey"],[51,115,41,86],[51,116,41,87],[52,8,42,12],[52,15,42,19],[52,20,42,23,"_$$_REQUIRE"],[52,31,42,23],[52,32,42,23,"_dependencyMap"],[52,46,42,23],[52,61,42,29,"RealmSet"],[52,69,42,37],[52,71,42,38,"realm"],[52,76,42,43],[52,78,42,45,"internal"],[52,86,42,53],[52,88,42,55,"setAccessor"],[52,99,42,66],[52,101,42,68,"itemHelpers"],[52,112,42,79],[52,113,42,80],[53,6,43,8],[53,7,43,9],[54,6,44,8,"set"],[54,9,44,11],[54,20,44,8,"set"],[54,23,44,11,"set"],[54,24,44,12,"obj"],[54,27,44,15],[54,29,44,17,"value"],[54,34,44,22],[54,36,44,24],[55,8,45,12,"_$$_REQUIRE"],[55,19,45,12],[55,20,45,12,"_dependencyMap"],[55,34,45,12],[55,52,45,21,"assert"],[55,58,45,27],[55,59,45,28,"inTransaction"],[55,72,45,41],[55,73,45,42,"realm"],[55,78,45,47],[55,79,45,48],[56,8,46,12],[56,12,46,18,"internal"],[56,20,46,26],[56,23,46,29,"_$$_REQUIRE"],[56,34,46,29],[56,35,46,29,"_dependencyMap"],[56,49,46,29],[56,68,46,39,"binding"],[56,75,46,46],[56,76,46,47,"Set"],[56,79,46,50],[56,80,46,51,"make"],[56,84,46,55],[56,85,46,56,"realm"],[56,90,46,61],[56,91,46,62,"internal"],[56,99,46,70],[56,101,46,72,"obj"],[56,104,46,75],[56,106,46,77,"columnKey"],[56,115,46,86],[56,116,46,87],[57,8,47,12],[58,8,48,12,"internal"],[58,16,48,20],[58,17,48,21,"removeAll"],[58,26,48,30],[58,27,48,31],[58,28,48,32],[59,8,49,12,"_$$_REQUIRE"],[59,19,49,12],[59,20,49,12,"_dependencyMap"],[59,34,49,12],[59,52,49,21,"assert"],[59,58,49,27],[59,59,49,28,"array"],[59,64,49,33],[59,65,49,34,"value"],[59,70,49,39],[59,72,49,41],[59,80,49,49],[59,81,49,50],[60,8,50,12],[60,13,50,17],[60,17,50,23,"v"],[60,18,50,24],[60,22,50,28,"value"],[60,27,50,33],[60,29,50,35],[61,10,51,16,"setAccessor"],[61,21,51,27],[61,22,51,28,"insert"],[61,28,51,34],[61,29,51,35,"internal"],[61,37,51,43],[61,39,51,45,"v"],[61,40,51,46],[61,41,51,47],[62,8,52,12],[63,6,53,8],[64,4,54,4],[64,5,54,5],[65,2,55,0],[66,2,56,0,"exports"],[66,9,56,7],[66,10,56,8,"createSetPropertyAccessor"],[66,35,56,33],[66,38,56,36,"createSetPropertyAccessor"],[66,63,56,61],[67,0,56,62],[67,3]],"functionMap":{"names":["<global>","createSetPropertyAccessor","get","set"],"mappings":"AAA;AC0B;QCa;SDG;QEC;SFS;CDE"}},"type":"js/module"}]}