{"dependencies":[{"name":"domhandler","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":19,"index":400},"end":{"line":11,"column":40,"index":421}},{"start":{"line":11,"column":19,"index":400},"end":{"line":11,"column":40,"index":421}},{"start":{"line":11,"column":19,"index":400},"end":{"line":11,"column":40,"index":421}}],"key":"f5LnrKpjJRzkG16BHIFRqK+96ok="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getChildren = getChildren;\n  exports.getParent = getParent;\n  exports.getSiblings = getSiblings;\n  exports.getAttributeValue = getAttributeValue;\n  exports.hasAttrib = hasAttrib;\n  exports.getName = getName;\n  exports.nextElementSibling = nextElementSibling;\n  exports.prevElementSibling = prevElementSibling;\n  /**\n   * Get a node's children.\n   *\n   * @category Traversal\n   * @param elem Node to get the children of.\n   * @returns `elem`'s children, or an empty array.\n   */\n  function getChildren(elem) {\n    return (0, _$$_REQUIRE(_dependencyMap[0], \"domhandler\").hasChildren)(elem) ? elem.children : [];\n  }\n  /**\n   * Get a node's parent.\n   *\n   * @category Traversal\n   * @param elem Node to get the parent of.\n   * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n   */\n  function getParent(elem) {\n    return elem.parent || null;\n  }\n  /**\n   * Gets an elements siblings, including the element itself.\n   *\n   * Attempts to get the children through the element's parent first. If we don't\n   * have a parent (the element is a root node), we walk the element's `prev` &\n   * `next` to get all remaining nodes.\n   *\n   * @category Traversal\n   * @param elem Element to get the siblings of.\n   * @returns `elem`'s siblings, including `elem`.\n   */\n  function getSiblings(elem) {\n    var _a, _b;\n    var parent = getParent(elem);\n    if (parent != null) return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev,\n      next = elem.next;\n    while (prev != null) {\n      siblings.unshift(prev);\n      _a = prev, prev = _a.prev;\n    }\n    while (next != null) {\n      siblings.push(next);\n      _b = next, next = _b.next;\n    }\n    return siblings;\n  }\n  /**\n   * Gets an attribute from an element.\n   *\n   * @category Traversal\n   * @param elem Element to check.\n   * @param name Attribute name to retrieve.\n   * @returns The element's attribute value, or `undefined`.\n   */\n  function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n  }\n  /**\n   * Checks whether an element has an attribute.\n   *\n   * @category Traversal\n   * @param elem Element to check.\n   * @param name Attribute name to look for.\n   * @returns Returns whether `elem` has the attribute `name`.\n   */\n  function hasAttrib(elem, name) {\n    return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n  }\n  /**\n   * Get the tag name of an element.\n   *\n   * @category Traversal\n   * @param elem The element to get the name for.\n   * @returns The tag name of `elem`.\n   */\n  function getName(elem) {\n    return elem.name;\n  }\n  /**\n   * Returns the next element sibling of a node.\n   *\n   * @category Traversal\n   * @param elem The element to get the next sibling of.\n   * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n   * sibling.\n   */\n  function nextElementSibling(elem) {\n    var _a;\n    var next = elem.next;\n    while (next !== null && !(0, _$$_REQUIRE(_dependencyMap[0], \"domhandler\").isTag)(next)) _a = next, next = _a.next;\n    return next;\n  }\n  /**\n   * Returns the previous element sibling of a node.\n   *\n   * @category Traversal\n   * @param elem The element to get the previous sibling of.\n   * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n   * previous sibling.\n   */\n  function prevElementSibling(elem) {\n    var _a;\n    var prev = elem.prev;\n    while (prev !== null && !(0, _$$_REQUIRE(_dependencyMap[0], \"domhandler\").isTag)(prev)) _a = prev, prev = _a.prev;\n    return prev;\n  }\n});","lineCount":124,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getChildren"],[7,21,3,19],[7,24,3,22,"getChildren"],[7,35,3,33],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getParent"],[8,19,4,17],[8,22,4,20,"getParent"],[8,31,4,29],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"getSiblings"],[9,21,5,19],[9,24,5,22,"getSiblings"],[9,35,5,33],[10,2,6,0,"exports"],[10,9,6,7],[10,10,6,8,"getAttributeValue"],[10,27,6,25],[10,30,6,28,"getAttributeValue"],[10,47,6,45],[11,2,7,0,"exports"],[11,9,7,7],[11,10,7,8,"hasAttrib"],[11,19,7,17],[11,22,7,20,"hasAttrib"],[11,31,7,29],[12,2,8,0,"exports"],[12,9,8,7],[12,10,8,8,"getName"],[12,17,8,15],[12,20,8,18,"getName"],[12,27,8,25],[13,2,9,0,"exports"],[13,9,9,7],[13,10,9,8,"nextElementSibling"],[13,28,9,26],[13,31,9,29,"nextElementSibling"],[13,49,9,47],[14,2,10,0,"exports"],[14,9,10,7],[14,10,10,8,"prevElementSibling"],[14,28,10,26],[14,31,10,29,"prevElementSibling"],[14,49,10,47],[15,2,12,0],[16,0,13,0],[17,0,14,0],[18,0,15,0],[19,0,16,0],[20,0,17,0],[21,0,18,0],[22,2,19,0],[22,11,19,9,"getChildren"],[22,22,19,20,"getChildren"],[22,23,19,21,"elem"],[22,27,19,25],[22,29,19,27],[23,4,20,4],[23,11,20,11],[23,12,20,12],[23,13,20,13],[23,15,20,15,"_$$_REQUIRE"],[23,26,20,15],[23,27,20,15,"_dependencyMap"],[23,41,20,15],[23,60,20,28,"hasChildren"],[23,71,20,39],[23,73,20,41,"elem"],[23,77,20,45],[23,78,20,46],[23,81,20,49,"elem"],[23,85,20,53],[23,86,20,54,"children"],[23,94,20,62],[23,97,20,65],[23,99,20,67],[24,2,21,0],[25,2,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,0,26,0],[30,0,27,0],[31,0,28,0],[32,2,29,0],[32,11,29,9,"getParent"],[32,20,29,18,"getParent"],[32,21,29,19,"elem"],[32,25,29,23],[32,27,29,25],[33,4,30,4],[33,11,30,11,"elem"],[33,15,30,15],[33,16,30,16,"parent"],[33,22,30,22],[33,26,30,26],[33,30,30,30],[34,2,31,0],[35,2,32,0],[36,0,33,0],[37,0,34,0],[38,0,35,0],[39,0,36,0],[40,0,37,0],[41,0,38,0],[42,0,39,0],[43,0,40,0],[44,0,41,0],[45,0,42,0],[46,2,43,0],[46,11,43,9,"getSiblings"],[46,22,43,20,"getSiblings"],[46,23,43,21,"elem"],[46,27,43,25],[46,29,43,27],[47,4,44,4],[47,8,44,8,"_a"],[47,10,44,10],[47,12,44,12,"_b"],[47,14,44,14],[48,4,45,4],[48,8,45,8,"parent"],[48,14,45,14],[48,17,45,17,"getParent"],[48,26,45,26],[48,27,45,27,"elem"],[48,31,45,31],[48,32,45,32],[49,4,46,4],[49,8,46,8,"parent"],[49,14,46,14],[49,18,46,18],[49,22,46,22],[49,24,47,8],[49,31,47,15,"getChildren"],[49,42,47,26],[49,43,47,27,"parent"],[49,49,47,33],[49,50,47,34],[50,4,48,4],[50,8,48,8,"siblings"],[50,16,48,16],[50,19,48,19],[50,20,48,20,"elem"],[50,24,48,24],[50,25,48,25],[51,4,49,4],[51,8,49,8,"prev"],[51,12,49,12],[51,15,49,15,"elem"],[51,19,49,19],[51,20,49,20,"prev"],[51,24,49,24],[52,6,49,26,"next"],[52,10,49,30],[52,13,49,33,"elem"],[52,17,49,37],[52,18,49,38,"next"],[52,22,49,42],[53,4,50,4],[53,11,50,11,"prev"],[53,15,50,15],[53,19,50,19],[53,23,50,23],[53,25,50,25],[54,6,51,8,"siblings"],[54,14,51,16],[54,15,51,17,"unshift"],[54,22,51,24],[54,23,51,25,"prev"],[54,27,51,29],[54,28,51,30],[55,6,52,9,"_a"],[55,8,52,11],[55,11,52,14,"prev"],[55,15,52,18],[55,17,52,20,"prev"],[55,21,52,24],[55,24,52,27,"_a"],[55,26,52,29],[55,27,52,30,"prev"],[55,31,52,34],[56,4,53,4],[57,4,54,4],[57,11,54,11,"next"],[57,15,54,15],[57,19,54,19],[57,23,54,23],[57,25,54,25],[58,6,55,8,"siblings"],[58,14,55,16],[58,15,55,17,"push"],[58,19,55,21],[58,20,55,22,"next"],[58,24,55,26],[58,25,55,27],[59,6,56,9,"_b"],[59,8,56,11],[59,11,56,14,"next"],[59,15,56,18],[59,17,56,20,"next"],[59,21,56,24],[59,24,56,27,"_b"],[59,26,56,29],[59,27,56,30,"next"],[59,31,56,34],[60,4,57,4],[61,4,58,4],[61,11,58,11,"siblings"],[61,19,58,19],[62,2,59,0],[63,2,60,0],[64,0,61,0],[65,0,62,0],[66,0,63,0],[67,0,64,0],[68,0,65,0],[69,0,66,0],[70,0,67,0],[71,2,68,0],[71,11,68,9,"getAttributeValue"],[71,28,68,26,"getAttributeValue"],[71,29,68,27,"elem"],[71,33,68,31],[71,35,68,33,"name"],[71,39,68,37],[71,41,68,39],[72,4,69,4],[72,8,69,8,"_a"],[72,10,69,10],[73,4,70,4],[73,11,70,11],[73,12,70,12,"_a"],[73,14,70,14],[73,17,70,17,"elem"],[73,21,70,21],[73,22,70,22,"attribs"],[73,29,70,29],[73,35,70,35],[73,39,70,39],[73,43,70,43,"_a"],[73,45,70,45],[73,50,70,50],[73,55,70,55],[73,56,70,56],[73,59,70,59],[73,64,70,64],[73,65,70,65],[73,68,70,68,"_a"],[73,70,70,70],[73,71,70,71,"name"],[73,75,70,75],[73,76,70,76],[74,2,71,0],[75,2,72,0],[76,0,73,0],[77,0,74,0],[78,0,75,0],[79,0,76,0],[80,0,77,0],[81,0,78,0],[82,0,79,0],[83,2,80,0],[83,11,80,9,"hasAttrib"],[83,20,80,18,"hasAttrib"],[83,21,80,19,"elem"],[83,25,80,23],[83,27,80,25,"name"],[83,31,80,29],[83,33,80,31],[84,4,81,4],[84,11,81,12,"elem"],[84,15,81,16],[84,16,81,17,"attribs"],[84,23,81,24],[84,27,81,28],[84,31,81,32],[84,35,82,8,"Object"],[84,41,82,14],[84,42,82,15,"prototype"],[84,51,82,24],[84,52,82,25,"hasOwnProperty"],[84,66,82,39],[84,67,82,40,"call"],[84,71,82,44],[84,72,82,45,"elem"],[84,76,82,49],[84,77,82,50,"attribs"],[84,84,82,57],[84,86,82,59,"name"],[84,90,82,63],[84,91,82,64],[84,95,83,8,"elem"],[84,99,83,12],[84,100,83,13,"attribs"],[84,107,83,20],[84,108,83,21,"name"],[84,112,83,25],[84,113,83,26],[84,117,83,30],[84,121,83,34],[85,2,84,0],[86,2,85,0],[87,0,86,0],[88,0,87,0],[89,0,88,0],[90,0,89,0],[91,0,90,0],[92,0,91,0],[93,2,92,0],[93,11,92,9,"getName"],[93,18,92,16,"getName"],[93,19,92,17,"elem"],[93,23,92,21],[93,25,92,23],[94,4,93,4],[94,11,93,11,"elem"],[94,15,93,15],[94,16,93,16,"name"],[94,20,93,20],[95,2,94,0],[96,2,95,0],[97,0,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,2,103,0],[104,11,103,9,"nextElementSibling"],[104,29,103,27,"nextElementSibling"],[104,30,103,28,"elem"],[104,34,103,32],[104,36,103,34],[105,4,104,4],[105,8,104,8,"_a"],[105,10,104,10],[106,4,105,4],[106,8,105,8,"next"],[106,12,105,12],[106,15,105,15,"elem"],[106,19,105,19],[106,20,105,20,"next"],[106,24,105,24],[107,4,106,4],[107,11,106,11,"next"],[107,15,106,15],[107,20,106,20],[107,24,106,24],[107,28,106,28],[107,29,106,29],[107,30,106,30],[107,31,106,31],[107,33,106,33,"_$$_REQUIRE"],[107,44,106,33],[107,45,106,33,"_dependencyMap"],[107,59,106,33],[107,78,106,46,"isTag"],[107,83,106,51],[107,85,106,53,"next"],[107,89,106,57],[107,90,106,58],[107,92,107,9,"_a"],[107,94,107,11],[107,97,107,14,"next"],[107,101,107,18],[107,103,107,20,"next"],[107,107,107,24],[107,110,107,27,"_a"],[107,112,107,29],[107,113,107,30,"next"],[107,117,107,34],[108,4,108,4],[108,11,108,11,"next"],[108,15,108,15],[109,2,109,0],[110,2,110,0],[111,0,111,0],[112,0,112,0],[113,0,113,0],[114,0,114,0],[115,0,115,0],[116,0,116,0],[117,0,117,0],[118,2,118,0],[118,11,118,9,"prevElementSibling"],[118,29,118,27,"prevElementSibling"],[118,30,118,28,"elem"],[118,34,118,32],[118,36,118,34],[119,4,119,4],[119,8,119,8,"_a"],[119,10,119,10],[120,4,120,4],[120,8,120,8,"prev"],[120,12,120,12],[120,15,120,15,"elem"],[120,19,120,19],[120,20,120,20,"prev"],[120,24,120,24],[121,4,121,4],[121,11,121,11,"prev"],[121,15,121,15],[121,20,121,20],[121,24,121,24],[121,28,121,28],[121,29,121,29],[121,30,121,30],[121,31,121,31],[121,33,121,33,"_$$_REQUIRE"],[121,44,121,33],[121,45,121,33,"_dependencyMap"],[121,59,121,33],[121,78,121,46,"isTag"],[121,83,121,51],[121,85,121,53,"prev"],[121,89,121,57],[121,90,121,58],[121,92,122,9,"_a"],[121,94,122,11],[121,97,122,14,"prev"],[121,101,122,18],[121,103,122,20,"prev"],[121,107,122,24],[121,110,122,27,"_a"],[121,112,122,29],[121,113,122,30,"prev"],[121,117,122,34],[122,4,123,4],[122,11,123,11,"prev"],[122,15,123,15],[123,2,124,0],[124,0,124,1],[124,3]],"functionMap":{"names":["<global>","getChildren","getParent","getSiblings","getAttributeValue","hasAttrib","getName","nextElementSibling","prevElementSibling"],"mappings":"AAA;ACkB;CDE;AEQ;CFE;AGY;CHgB;AIS;CJG;AKS;CLI;AMQ;CNE;AOS;CPM;AQS;CRM"}},"type":"js/module"}]}