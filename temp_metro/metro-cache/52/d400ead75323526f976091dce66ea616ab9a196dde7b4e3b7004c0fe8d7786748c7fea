{"dependencies":[{"name":"../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":105},"end":{"line":3,"column":39,"index":133}},{"start":{"line":3,"column":11,"index":105},"end":{"line":3,"column":39,"index":133}},{"start":{"line":3,"column":11,"index":105},"end":{"line":3,"column":39,"index":133}},{"start":{"line":3,"column":11,"index":105},"end":{"line":3,"column":39,"index":133}},{"start":{"line":3,"column":11,"index":105},"end":{"line":3,"column":39,"index":133}},{"start":{"line":3,"column":11,"index":105},"end":{"line":3,"column":39,"index":133}},{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":45,"index":45}},{"start":{"line":2,"column":14,"index":61},"end":{"line":2,"column":45,"index":92}},{"start":{"line":2,"column":14,"index":61},"end":{"line":2,"column":45,"index":92}},{"start":{"line":1,"column":14,"index":14},"end":{"line":1,"column":45,"index":45}},{"start":{"line":2,"column":14,"index":61},"end":{"line":2,"column":45,"index":92}}],"key":"CeLPNCNjt8y0xnwsIyTQzXoUUj0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var DELIM = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Delim;\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.WhiteSpace;\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Comment;\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident;\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Number;\n  var DIMENSION = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Dimension;\n  var PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n  var HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n  var N = 0x006E; // U+006E LATIN SMALL LETTER N (n)\n  var DISALLOW_SIGN = true;\n  var ALLOW_SIGN = false;\n  function isDelim(token, code) {\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\n  }\n  function skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {\n      token = getNextToken(++offset);\n    }\n    return offset;\n  }\n  function checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n      return 0;\n    }\n    var code = token.value.charCodeAt(valueOffset);\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n      if (disallowSign) {\n        // Number sign is not allowed\n        return 0;\n      }\n      valueOffset++;\n    }\n    for (; valueOffset < token.value.length; valueOffset++) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isDigit(token.value.charCodeAt(valueOffset))) {\n        // Integer is expected\n        return 0;\n      }\n    }\n    return offset + 1;\n  }\n\n  // ... <signed-integer>\n  // ... ['+' | '-'] <signless-integer>\n  function consumeB(token, offset_, getNextToken) {\n    var sign = false;\n    var offset = skipSC(token, offset_, getNextToken);\n    token = getNextToken(offset);\n    if (token === null) {\n      return offset_;\n    }\n    if (token.type !== NUMBER) {\n      if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n        sign = true;\n        offset = skipSC(getNextToken(++offset), offset, getNextToken);\n        token = getNextToken(offset);\n        if (token === null && token.type !== NUMBER) {\n          return 0;\n        }\n      } else {\n        return offset_;\n      }\n    }\n    if (!sign) {\n      var code = token.value.charCodeAt(0);\n      if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n        // Number sign is expected\n        return 0;\n      }\n    }\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n  }\n\n  // An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\n  module.exports = function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    var offset = 0;\n    if (!token) {\n      return 0;\n    }\n\n    // <integer>\n    if (token.type === NUMBER) {\n      return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {\n      // expect 1st char is N\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, 1, N)) {\n        return 0;\n      }\n      switch (token.value.length) {\n        // -n\n        // -n <signed-integer>\n        // -n ['+' | '-'] <signless-integer>\n        case 2:\n          return consumeB(getNextToken(++offset), offset, getNextToken);\n\n        // -n- <signless-integer>\n        case 3:\n          if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n            return 0;\n          }\n          offset = skipSC(getNextToken(++offset), offset, getNextToken);\n          token = getNextToken(offset);\n          return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n        // <dashndashdigit-ident>\n        default:\n          if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n            return 0;\n          }\n          return checkInteger(token, 3, DISALLOW_SIGN, offset);\n      }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === IDENT || isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT) {\n      // just ignore a plus\n      if (token.type !== IDENT) {\n        token = getNextToken(++offset);\n      }\n      if (token === null || !_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, 0, N)) {\n        return 0;\n      }\n      switch (token.value.length) {\n        // '+'? n\n        // '+'? n <signed-integer>\n        // '+'? n ['+' | '-'] <signless-integer>\n        case 1:\n          return consumeB(getNextToken(++offset), offset, getNextToken);\n\n        // '+'? n- <signless-integer>\n        case 2:\n          if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n            return 0;\n          }\n          offset = skipSC(getNextToken(++offset), offset, getNextToken);\n          token = getNextToken(offset);\n          return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n        // '+'? <ndashdigit-ident>\n        default:\n          if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n            return 0;\n          }\n          return checkInteger(token, 2, DISALLOW_SIGN, offset);\n      }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === DIMENSION) {\n      var code = token.value.charCodeAt(0);\n      var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n      for (var i = sign; i < token.value.length; i++) {\n        if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isDigit(token.value.charCodeAt(i))) {\n          break;\n        }\n      }\n      if (i === sign) {\n        // Integer is expected\n        return 0;\n      }\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, i, N)) {\n        return 0;\n      }\n\n      // <n-dimension>\n      // <n-dimension> <signed-integer>\n      // <n-dimension> ['+' | '-'] <signless-integer>\n      if (i + 1 === token.value.length) {\n        return consumeB(getNextToken(++offset), offset, getNextToken);\n      } else {\n        if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n          return 0;\n        }\n\n        // <ndash-dimension> <signless-integer>\n        if (i + 2 === token.value.length) {\n          offset = skipSC(getNextToken(++offset), offset, getNextToken);\n          token = getNextToken(offset);\n          return checkInteger(token, 0, DISALLOW_SIGN, offset);\n        }\n        // <ndashdigit-dimension>\n        else {\n          return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n        }\n      }\n    }\n    return 0;\n  };\n});","lineCount":205,"map":[[2,2,5,0],[2,6,5,4,"DELIM"],[2,11,5,9],[2,14,5,12,"_$$_REQUIRE"],[2,25,5,12],[2,26,5,12,"_dependencyMap"],[2,40,5,12],[2,61,5,12,"TYPE"],[2,65,5,12],[2,66,5,17,"Delim"],[2,71,5,22],[3,2,6,0],[3,6,6,4,"WHITESPACE"],[3,16,6,14],[3,19,6,17,"_$$_REQUIRE"],[3,30,6,17],[3,31,6,17,"_dependencyMap"],[3,45,6,17],[3,66,6,17,"TYPE"],[3,70,6,17],[3,71,6,22,"WhiteSpace"],[3,81,6,32],[4,2,7,0],[4,6,7,4,"COMMENT"],[4,13,7,11],[4,16,7,14,"_$$_REQUIRE"],[4,27,7,14],[4,28,7,14,"_dependencyMap"],[4,42,7,14],[4,63,7,14,"TYPE"],[4,67,7,14],[4,68,7,19,"Comment"],[4,75,7,26],[5,2,8,0],[5,6,8,4,"IDENT"],[5,11,8,9],[5,14,8,12,"_$$_REQUIRE"],[5,25,8,12],[5,26,8,12,"_dependencyMap"],[5,40,8,12],[5,61,8,12,"TYPE"],[5,65,8,12],[5,66,8,17,"Ident"],[5,71,8,22],[6,2,9,0],[6,6,9,4,"NUMBER"],[6,12,9,10],[6,15,9,13,"_$$_REQUIRE"],[6,26,9,13],[6,27,9,13,"_dependencyMap"],[6,41,9,13],[6,62,9,13,"TYPE"],[6,66,9,13],[6,67,9,18,"Number"],[6,73,9,24],[7,2,10,0],[7,6,10,4,"DIMENSION"],[7,15,10,13],[7,18,10,16,"_$$_REQUIRE"],[7,29,10,16],[7,30,10,16,"_dependencyMap"],[7,44,10,16],[7,65,10,16,"TYPE"],[7,69,10,16],[7,70,10,21,"Dimension"],[7,79,10,30],[8,2,11,0],[8,6,11,4,"PLUSSIGN"],[8,14,11,12],[8,17,11,15],[8,23,11,21],[8,24,11,22],[8,25,11,26],[9,2,12,0],[9,6,12,4,"HYPHENMINUS"],[9,17,12,15],[9,20,12,18],[9,26,12,24],[9,27,12,25],[9,28,12,26],[10,2,13,0],[10,6,13,4,"N"],[10,7,13,5],[10,10,13,8],[10,16,13,14],[10,17,13,15],[10,18,13,26],[11,2,14,0],[11,6,14,4,"DISALLOW_SIGN"],[11,19,14,17],[11,22,14,20],[11,26,14,24],[12,2,15,0],[12,6,15,4,"ALLOW_SIGN"],[12,16,15,14],[12,19,15,17],[12,24,15,22],[13,2,17,0],[13,11,17,9,"isDelim"],[13,18,17,16,"isDelim"],[13,19,17,17,"token"],[13,24,17,22],[13,26,17,24,"code"],[13,30,17,28],[13,32,17,30],[14,4,18,4],[14,11,18,11,"token"],[14,16,18,16],[14,21,18,21],[14,25,18,25],[14,29,18,29,"token"],[14,34,18,34],[14,35,18,35,"type"],[14,39,18,39],[14,44,18,44,"DELIM"],[14,49,18,49],[14,53,18,53,"token"],[14,58,18,58],[14,59,18,59,"value"],[14,64,18,64],[14,65,18,65,"charCodeAt"],[14,75,18,75],[14,76,18,76],[14,77,18,77],[14,78,18,78],[14,83,18,83,"code"],[14,87,18,87],[15,2,19,0],[16,2,21,0],[16,11,21,9,"skipSC"],[16,17,21,15,"skipSC"],[16,18,21,16,"token"],[16,23,21,21],[16,25,21,23,"offset"],[16,31,21,29],[16,33,21,31,"getNextToken"],[16,45,21,43],[16,47,21,45],[17,4,22,4],[17,11,22,11,"token"],[17,16,22,16],[17,21,22,21],[17,25,22,25],[17,30,22,30,"token"],[17,35,22,35],[17,36,22,36,"type"],[17,40,22,40],[17,45,22,45,"WHITESPACE"],[17,55,22,55],[17,59,22,59,"token"],[17,64,22,64],[17,65,22,65,"type"],[17,69,22,69],[17,74,22,74,"COMMENT"],[17,81,22,81],[17,82,22,82],[17,84,22,84],[18,6,23,8,"token"],[18,11,23,13],[18,14,23,16,"getNextToken"],[18,26,23,28],[18,27,23,29],[18,29,23,31,"offset"],[18,35,23,37],[18,36,23,38],[19,4,24,4],[20,4,26,4],[20,11,26,11,"offset"],[20,17,26,17],[21,2,27,0],[22,2,29,0],[22,11,29,9,"checkInteger"],[22,23,29,21,"checkInteger"],[22,24,29,22,"token"],[22,29,29,27],[22,31,29,29,"valueOffset"],[22,42,29,40],[22,44,29,42,"disallowSign"],[22,56,29,54],[22,58,29,56,"offset"],[22,64,29,62],[22,66,29,64],[23,4,30,4],[23,8,30,8],[23,9,30,9,"token"],[23,14,30,14],[23,16,30,16],[24,6,31,8],[24,13,31,15],[24,14,31,16],[25,4,32,4],[26,4,34,4],[26,8,34,8,"code"],[26,12,34,12],[26,15,34,15,"token"],[26,20,34,20],[26,21,34,21,"value"],[26,26,34,26],[26,27,34,27,"charCodeAt"],[26,37,34,37],[26,38,34,38,"valueOffset"],[26,49,34,49],[26,50,34,50],[27,4,36,4],[27,8,36,8,"code"],[27,12,36,12],[27,17,36,17,"PLUSSIGN"],[27,25,36,25],[27,29,36,29,"code"],[27,33,36,33],[27,38,36,38,"HYPHENMINUS"],[27,49,36,49],[27,51,36,51],[28,6,37,8],[28,10,37,12,"disallowSign"],[28,22,37,24],[28,24,37,26],[29,8,38,12],[30,8,39,12],[30,15,39,19],[30,16,39,20],[31,6,40,8],[32,6,41,8,"valueOffset"],[32,17,41,19],[32,19,41,21],[33,4,42,4],[34,4,44,4],[34,11,44,11,"valueOffset"],[34,22,44,22],[34,25,44,25,"token"],[34,30,44,30],[34,31,44,31,"value"],[34,36,44,36],[34,37,44,37,"length"],[34,43,44,43],[34,45,44,45,"valueOffset"],[34,56,44,56],[34,58,44,58],[34,60,44,60],[35,6,45,8],[35,10,45,12],[35,11,45,13,"_$$_REQUIRE"],[35,22,45,13],[35,23,45,13,"_dependencyMap"],[35,37,45,13],[35,58,45,13,"isDigit"],[35,65,45,13],[35,66,45,21,"token"],[35,71,45,26],[35,72,45,27,"value"],[35,77,45,32],[35,78,45,33,"charCodeAt"],[35,88,45,43],[35,89,45,44,"valueOffset"],[35,100,45,55],[35,101,45,56],[35,102,45,57],[35,104,45,59],[36,8,46,12],[37,8,47,12],[37,15,47,19],[37,16,47,20],[38,6,48,8],[39,4,49,4],[40,4,51,4],[40,11,51,11,"offset"],[40,17,51,17],[40,20,51,20],[40,21,51,21],[41,2,52,0],[43,2,54,0],[44,2,55,0],[45,2,56,0],[45,11,56,9,"consumeB"],[45,19,56,17,"consumeB"],[45,20,56,18,"token"],[45,25,56,23],[45,27,56,25,"offset_"],[45,34,56,32],[45,36,56,34,"getNextToken"],[45,48,56,46],[45,50,56,48],[46,4,57,4],[46,8,57,8,"sign"],[46,12,57,12],[46,15,57,15],[46,20,57,20],[47,4,58,4],[47,8,58,8,"offset"],[47,14,58,14],[47,17,58,17,"skipSC"],[47,23,58,23],[47,24,58,24,"token"],[47,29,58,29],[47,31,58,31,"offset_"],[47,38,58,38],[47,40,58,40,"getNextToken"],[47,52,58,52],[47,53,58,53],[48,4,60,4,"token"],[48,9,60,9],[48,12,60,12,"getNextToken"],[48,24,60,24],[48,25,60,25,"offset"],[48,31,60,31],[48,32,60,32],[49,4,62,4],[49,8,62,8,"token"],[49,13,62,13],[49,18,62,18],[49,22,62,22],[49,24,62,24],[50,6,63,8],[50,13,63,15,"offset_"],[50,20,63,22],[51,4,64,4],[52,4,66,4],[52,8,66,8,"token"],[52,13,66,13],[52,14,66,14,"type"],[52,18,66,18],[52,23,66,23,"NUMBER"],[52,29,66,29],[52,31,66,31],[53,6,67,8],[53,10,67,12,"isDelim"],[53,17,67,19],[53,18,67,20,"token"],[53,23,67,25],[53,25,67,27,"PLUSSIGN"],[53,33,67,35],[53,34,67,36],[53,38,67,40,"isDelim"],[53,45,67,47],[53,46,67,48,"token"],[53,51,67,53],[53,53,67,55,"HYPHENMINUS"],[53,64,67,66],[53,65,67,67],[53,67,67,69],[54,8,68,12,"sign"],[54,12,68,16],[54,15,68,19],[54,19,68,23],[55,8,69,12,"offset"],[55,14,69,18],[55,17,69,21,"skipSC"],[55,23,69,27],[55,24,69,28,"getNextToken"],[55,36,69,40],[55,37,69,41],[55,39,69,43,"offset"],[55,45,69,49],[55,46,69,50],[55,48,69,52,"offset"],[55,54,69,58],[55,56,69,60,"getNextToken"],[55,68,69,72],[55,69,69,73],[56,8,70,12,"token"],[56,13,70,17],[56,16,70,20,"getNextToken"],[56,28,70,32],[56,29,70,33,"offset"],[56,35,70,39],[56,36,70,40],[57,8,72,12],[57,12,72,16,"token"],[57,17,72,21],[57,22,72,26],[57,26,72,30],[57,30,72,34,"token"],[57,35,72,39],[57,36,72,40,"type"],[57,40,72,44],[57,45,72,49,"NUMBER"],[57,51,72,55],[57,53,72,57],[58,10,73,16],[58,17,73,23],[58,18,73,24],[59,8,74,12],[60,6,75,8],[60,7,75,9],[60,13,75,15],[61,8,76,12],[61,15,76,19,"offset_"],[61,22,76,26],[62,6,77,8],[63,4,78,4],[64,4,80,4],[64,8,80,8],[64,9,80,9,"sign"],[64,13,80,13],[64,15,80,15],[65,6,81,8],[65,10,81,12,"code"],[65,14,81,16],[65,17,81,19,"token"],[65,22,81,24],[65,23,81,25,"value"],[65,28,81,30],[65,29,81,31,"charCodeAt"],[65,39,81,41],[65,40,81,42],[65,41,81,43],[65,42,81,44],[66,6,82,8],[66,10,82,12,"code"],[66,14,82,16],[66,19,82,21,"PLUSSIGN"],[66,27,82,29],[66,31,82,33,"code"],[66,35,82,37],[66,40,82,42,"HYPHENMINUS"],[66,51,82,53],[66,53,82,55],[67,8,83,12],[68,8,84,12],[68,15,84,19],[68,16,84,20],[69,6,85,8],[70,4,86,4],[71,4,88,4],[71,11,88,11,"checkInteger"],[71,23,88,23],[71,24,88,24,"token"],[71,29,88,29],[71,31,88,31,"sign"],[71,35,88,35],[71,38,88,38],[71,39,88,39],[71,42,88,42],[71,43,88,43],[71,45,88,45,"sign"],[71,49,88,49],[71,51,88,51,"offset"],[71,57,88,57],[71,58,88,58],[72,2,89,0],[74,2,91,0],[75,2,92,0,"module"],[75,8,92,6],[75,9,92,7,"exports"],[75,16,92,14],[75,19,92,17],[75,28,92,26,"anPlusB"],[75,35,92,33,"anPlusB"],[75,36,92,34,"token"],[75,41,92,39],[75,43,92,41,"getNextToken"],[75,55,92,53],[75,57,92,55],[76,4,93,4],[77,4,94,4],[77,8,94,8,"offset"],[77,14,94,14],[77,17,94,17],[77,18,94,18],[78,4,96,4],[78,8,96,8],[78,9,96,9,"token"],[78,14,96,14],[78,16,96,16],[79,6,97,8],[79,13,97,15],[79,14,97,16],[80,4,98,4],[82,4,100,4],[83,4,101,4],[83,8,101,8,"token"],[83,13,101,13],[83,14,101,14,"type"],[83,18,101,18],[83,23,101,23,"NUMBER"],[83,29,101,29],[83,31,101,31],[84,6,102,8],[84,13,102,15,"checkInteger"],[84,25,102,27],[84,26,102,28,"token"],[84,31,102,33],[84,33,102,35],[84,34,102,36],[84,36,102,38,"ALLOW_SIGN"],[84,46,102,48],[84,48,102,50,"offset"],[84,54,102,56],[84,55,102,57],[84,56,102,58],[84,57,102,59],[85,4,103,4],[87,4,105,4],[88,4,106,4],[89,4,107,4],[90,4,108,4],[91,4,109,4],[92,4,109,4],[92,9,110,9],[92,13,110,13,"token"],[92,18,110,18],[92,19,110,19,"type"],[92,23,110,23],[92,28,110,28,"IDENT"],[92,33,110,33],[92,37,110,37,"token"],[92,42,110,42],[92,43,110,43,"value"],[92,48,110,48],[92,49,110,49,"charCodeAt"],[92,59,110,59],[92,60,110,60],[92,61,110,61],[92,62,110,62],[92,67,110,67,"HYPHENMINUS"],[92,78,110,78],[92,80,110,80],[93,6,111,8],[94,6,112,8],[94,10,112,12],[94,11,112,13,"_$$_REQUIRE"],[94,22,112,13],[94,23,112,13,"_dependencyMap"],[94,37,112,13],[94,58,112,13,"cmpChar"],[94,65,112,13],[94,66,112,21,"token"],[94,71,112,26],[94,72,112,27,"value"],[94,77,112,32],[94,79,112,34],[94,80,112,35],[94,82,112,37,"N"],[94,83,112,38],[94,84,112,39],[94,86,112,41],[95,8,113,12],[95,15,113,19],[95,16,113,20],[96,6,114,8],[97,6,116,8],[97,14,116,16,"token"],[97,19,116,21],[97,20,116,22,"value"],[97,25,116,27],[97,26,116,28,"length"],[97,32,116,34],[98,8,117,12],[99,8,118,12],[100,8,119,12],[101,8,120,12],[101,13,120,17],[101,14,120,18],[102,10,121,16],[102,17,121,23,"consumeB"],[102,25,121,31],[102,26,121,32,"getNextToken"],[102,38,121,44],[102,39,121,45],[102,41,121,47,"offset"],[102,47,121,53],[102,48,121,54],[102,50,121,56,"offset"],[102,56,121,62],[102,58,121,64,"getNextToken"],[102,70,121,76],[102,71,121,77],[104,8,123,12],[105,8,124,12],[105,13,124,17],[105,14,124,18],[106,10,125,16],[106,14,125,20,"token"],[106,19,125,25],[106,20,125,26,"value"],[106,25,125,31],[106,26,125,32,"charCodeAt"],[106,36,125,42],[106,37,125,43],[106,38,125,44],[106,39,125,45],[106,44,125,50,"HYPHENMINUS"],[106,55,125,61],[106,57,125,63],[107,12,126,20],[107,19,126,27],[107,20,126,28],[108,10,127,16],[109,10,129,16,"offset"],[109,16,129,22],[109,19,129,25,"skipSC"],[109,25,129,31],[109,26,129,32,"getNextToken"],[109,38,129,44],[109,39,129,45],[109,41,129,47,"offset"],[109,47,129,53],[109,48,129,54],[109,50,129,56,"offset"],[109,56,129,62],[109,58,129,64,"getNextToken"],[109,70,129,76],[109,71,129,77],[110,10,130,16,"token"],[110,15,130,21],[110,18,130,24,"getNextToken"],[110,30,130,36],[110,31,130,37,"offset"],[110,37,130,43],[110,38,130,44],[111,10,132,16],[111,17,132,23,"checkInteger"],[111,29,132,35],[111,30,132,36,"token"],[111,35,132,41],[111,37,132,43],[111,38,132,44],[111,40,132,46,"DISALLOW_SIGN"],[111,53,132,59],[111,55,132,61,"offset"],[111,61,132,67],[111,62,132,68],[113,8,134,12],[114,8,135,12],[115,10,136,16],[115,14,136,20,"token"],[115,19,136,25],[115,20,136,26,"value"],[115,25,136,31],[115,26,136,32,"charCodeAt"],[115,36,136,42],[115,37,136,43],[115,38,136,44],[115,39,136,45],[115,44,136,50,"HYPHENMINUS"],[115,55,136,61],[115,57,136,63],[116,12,137,20],[116,19,137,27],[116,20,137,28],[117,10,138,16],[118,10,140,16],[118,17,140,23,"checkInteger"],[118,29,140,35],[118,30,140,36,"token"],[118,35,140,41],[118,37,140,43],[118,38,140,44],[118,40,140,46,"DISALLOW_SIGN"],[118,53,140,59],[118,55,140,61,"offset"],[118,61,140,67],[118,62,140,68],[119,6,141,8],[120,4,142,4],[122,4,144,4],[123,4,145,4],[124,4,146,4],[125,4,147,4],[126,4,148,4],[127,4,148,4],[127,9,149,9],[127,13,149,13,"token"],[127,18,149,18],[127,19,149,19,"type"],[127,23,149,23],[127,28,149,28,"IDENT"],[127,33,149,33],[127,37,149,38,"isDelim"],[127,44,149,45],[127,45,149,46,"token"],[127,50,149,51],[127,52,149,53,"PLUSSIGN"],[127,60,149,61],[127,61,149,62],[127,65,149,66,"getNextToken"],[127,77,149,78],[127,78,149,79,"offset"],[127,84,149,85],[127,87,149,88],[127,88,149,89],[127,89,149,90],[127,90,149,91,"type"],[127,94,149,95],[127,99,149,100,"IDENT"],[127,104,149,106],[127,106,149,108],[128,6,150,8],[129,6,151,8],[129,10,151,12,"token"],[129,15,151,17],[129,16,151,18,"type"],[129,20,151,22],[129,25,151,27,"IDENT"],[129,30,151,32],[129,32,151,34],[130,8,152,12,"token"],[130,13,152,17],[130,16,152,20,"getNextToken"],[130,28,152,32],[130,29,152,33],[130,31,152,35,"offset"],[130,37,152,41],[130,38,152,42],[131,6,153,8],[132,6,155,8],[132,10,155,12,"token"],[132,15,155,17],[132,20,155,22],[132,24,155,26],[132,28,155,30],[132,29,155,31,"_$$_REQUIRE"],[132,40,155,31],[132,41,155,31,"_dependencyMap"],[132,55,155,31],[132,76,155,31,"cmpChar"],[132,83,155,31],[132,84,155,39,"token"],[132,89,155,44],[132,90,155,45,"value"],[132,95,155,50],[132,97,155,52],[132,98,155,53],[132,100,155,55,"N"],[132,101,155,56],[132,102,155,57],[132,104,155,59],[133,8,156,12],[133,15,156,19],[133,16,156,20],[134,6,157,8],[135,6,159,8],[135,14,159,16,"token"],[135,19,159,21],[135,20,159,22,"value"],[135,25,159,27],[135,26,159,28,"length"],[135,32,159,34],[136,8,160,12],[137,8,161,12],[138,8,162,12],[139,8,163,12],[139,13,163,17],[139,14,163,18],[140,10,164,16],[140,17,164,23,"consumeB"],[140,25,164,31],[140,26,164,32,"getNextToken"],[140,38,164,44],[140,39,164,45],[140,41,164,47,"offset"],[140,47,164,53],[140,48,164,54],[140,50,164,56,"offset"],[140,56,164,62],[140,58,164,64,"getNextToken"],[140,70,164,76],[140,71,164,77],[142,8,166,12],[143,8,167,12],[143,13,167,17],[143,14,167,18],[144,10,168,16],[144,14,168,20,"token"],[144,19,168,25],[144,20,168,26,"value"],[144,25,168,31],[144,26,168,32,"charCodeAt"],[144,36,168,42],[144,37,168,43],[144,38,168,44],[144,39,168,45],[144,44,168,50,"HYPHENMINUS"],[144,55,168,61],[144,57,168,63],[145,12,169,20],[145,19,169,27],[145,20,169,28],[146,10,170,16],[147,10,172,16,"offset"],[147,16,172,22],[147,19,172,25,"skipSC"],[147,25,172,31],[147,26,172,32,"getNextToken"],[147,38,172,44],[147,39,172,45],[147,41,172,47,"offset"],[147,47,172,53],[147,48,172,54],[147,50,172,56,"offset"],[147,56,172,62],[147,58,172,64,"getNextToken"],[147,70,172,76],[147,71,172,77],[148,10,173,16,"token"],[148,15,173,21],[148,18,173,24,"getNextToken"],[148,30,173,36],[148,31,173,37,"offset"],[148,37,173,43],[148,38,173,44],[149,10,175,16],[149,17,175,23,"checkInteger"],[149,29,175,35],[149,30,175,36,"token"],[149,35,175,41],[149,37,175,43],[149,38,175,44],[149,40,175,46,"DISALLOW_SIGN"],[149,53,175,59],[149,55,175,61,"offset"],[149,61,175,67],[149,62,175,68],[151,8,177,12],[152,8,178,12],[153,10,179,16],[153,14,179,20,"token"],[153,19,179,25],[153,20,179,26,"value"],[153,25,179,31],[153,26,179,32,"charCodeAt"],[153,36,179,42],[153,37,179,43],[153,38,179,44],[153,39,179,45],[153,44,179,50,"HYPHENMINUS"],[153,55,179,61],[153,57,179,63],[154,12,180,20],[154,19,180,27],[154,20,180,28],[155,10,181,16],[156,10,183,16],[156,17,183,23,"checkInteger"],[156,29,183,35],[156,30,183,36,"token"],[156,35,183,41],[156,37,183,43],[156,38,183,44],[156,40,183,46,"DISALLOW_SIGN"],[156,53,183,59],[156,55,183,61,"offset"],[156,61,183,67],[156,62,183,68],[157,6,184,8],[158,4,185,4],[160,4,187,4],[161,4,188,4],[162,4,189,4],[163,4,190,4],[164,4,191,4],[165,4,191,4],[165,9,192,9],[165,13,192,13,"token"],[165,18,192,18],[165,19,192,19,"type"],[165,23,192,23],[165,28,192,28,"DIMENSION"],[165,37,192,37],[165,39,192,39],[166,6,193,8],[166,10,193,12,"code"],[166,14,193,16],[166,17,193,19,"token"],[166,22,193,24],[166,23,193,25,"value"],[166,28,193,30],[166,29,193,31,"charCodeAt"],[166,39,193,41],[166,40,193,42],[166,41,193,43],[166,42,193,44],[167,6,194,8],[167,10,194,12,"sign"],[167,14,194,16],[167,17,194,19,"code"],[167,21,194,23],[167,26,194,28,"PLUSSIGN"],[167,34,194,36],[167,38,194,40,"code"],[167,42,194,44],[167,47,194,49,"HYPHENMINUS"],[167,58,194,60],[167,61,194,63],[167,62,194,64],[167,65,194,67],[167,66,194,68],[168,6,196,8],[168,11,196,13],[168,15,196,17,"i"],[168,16,196,18],[168,19,196,21,"sign"],[168,23,196,25],[168,25,196,27,"i"],[168,26,196,28],[168,29,196,31,"token"],[168,34,196,36],[168,35,196,37,"value"],[168,40,196,42],[168,41,196,43,"length"],[168,47,196,49],[168,49,196,51,"i"],[168,50,196,52],[168,52,196,54],[168,54,196,56],[169,8,197,12],[169,12,197,16],[169,13,197,17,"_$$_REQUIRE"],[169,24,197,17],[169,25,197,17,"_dependencyMap"],[169,39,197,17],[169,60,197,17,"isDigit"],[169,67,197,17],[169,68,197,25,"token"],[169,73,197,30],[169,74,197,31,"value"],[169,79,197,36],[169,80,197,37,"charCodeAt"],[169,90,197,47],[169,91,197,48,"i"],[169,92,197,49],[169,93,197,50],[169,94,197,51],[169,96,197,53],[170,10,198,16],[171,8,199,12],[172,6,200,8],[173,6,202,8],[173,10,202,12,"i"],[173,11,202,13],[173,16,202,18,"sign"],[173,20,202,22],[173,22,202,24],[174,8,203,12],[175,8,204,12],[175,15,204,19],[175,16,204,20],[176,6,205,8],[177,6,207,8],[177,10,207,12],[177,11,207,13,"_$$_REQUIRE"],[177,22,207,13],[177,23,207,13,"_dependencyMap"],[177,37,207,13],[177,58,207,13,"cmpChar"],[177,65,207,13],[177,66,207,21,"token"],[177,71,207,26],[177,72,207,27,"value"],[177,77,207,32],[177,79,207,34,"i"],[177,80,207,35],[177,82,207,37,"N"],[177,83,207,38],[177,84,207,39],[177,86,207,41],[178,8,208,12],[178,15,208,19],[178,16,208,20],[179,6,209,8],[181,6,211,8],[182,6,212,8],[183,6,213,8],[184,6,214,8],[184,10,214,12,"i"],[184,11,214,13],[184,14,214,16],[184,15,214,17],[184,20,214,22,"token"],[184,25,214,27],[184,26,214,28,"value"],[184,31,214,33],[184,32,214,34,"length"],[184,38,214,40],[184,40,214,42],[185,8,215,12],[185,15,215,19,"consumeB"],[185,23,215,27],[185,24,215,28,"getNextToken"],[185,36,215,40],[185,37,215,41],[185,39,215,43,"offset"],[185,45,215,49],[185,46,215,50],[185,48,215,52,"offset"],[185,54,215,58],[185,56,215,60,"getNextToken"],[185,68,215,72],[185,69,215,73],[186,6,216,8],[186,7,216,9],[186,13,216,15],[187,8,217,12],[187,12,217,16,"token"],[187,17,217,21],[187,18,217,22,"value"],[187,23,217,27],[187,24,217,28,"charCodeAt"],[187,34,217,38],[187,35,217,39,"i"],[187,36,217,40],[187,39,217,43],[187,40,217,44],[187,41,217,45],[187,46,217,50,"HYPHENMINUS"],[187,57,217,61],[187,59,217,63],[188,10,218,16],[188,17,218,23],[188,18,218,24],[189,8,219,12],[191,8,221,12],[192,8,222,12],[192,12,222,16,"i"],[192,13,222,17],[192,16,222,20],[192,17,222,21],[192,22,222,26,"token"],[192,27,222,31],[192,28,222,32,"value"],[192,33,222,37],[192,34,222,38,"length"],[192,40,222,44],[192,42,222,46],[193,10,223,16,"offset"],[193,16,223,22],[193,19,223,25,"skipSC"],[193,25,223,31],[193,26,223,32,"getNextToken"],[193,38,223,44],[193,39,223,45],[193,41,223,47,"offset"],[193,47,223,53],[193,48,223,54],[193,50,223,56,"offset"],[193,56,223,62],[193,58,223,64,"getNextToken"],[193,70,223,76],[193,71,223,77],[194,10,224,16,"token"],[194,15,224,21],[194,18,224,24,"getNextToken"],[194,30,224,36],[194,31,224,37,"offset"],[194,37,224,43],[194,38,224,44],[195,10,226,16],[195,17,226,23,"checkInteger"],[195,29,226,35],[195,30,226,36,"token"],[195,35,226,41],[195,37,226,43],[195,38,226,44],[195,40,226,46,"DISALLOW_SIGN"],[195,53,226,59],[195,55,226,61,"offset"],[195,61,226,67],[195,62,226,68],[196,8,227,12],[197,8,228,12],[198,8,228,12],[198,13,229,17],[199,10,230,16],[199,17,230,23,"checkInteger"],[199,29,230,35],[199,30,230,36,"token"],[199,35,230,41],[199,37,230,43,"i"],[199,38,230,44],[199,41,230,47],[199,42,230,48],[199,44,230,50,"DISALLOW_SIGN"],[199,57,230,63],[199,59,230,65,"offset"],[199,65,230,71],[199,66,230,72],[200,8,231,12],[201,6,232,8],[202,4,233,4],[203,4,235,4],[203,11,235,11],[203,12,235,12],[204,2,236,0],[204,3,236,1],[205,0,236,2],[205,3]],"functionMap":{"names":["<global>","isDelim","skipSC","checkInteger","consumeB","anPlusB"],"mappings":"AAA;ACgB;CDE;AEE;CFM;AGE;CHuB;AII;CJiC;iBKG;CLgJ"}},"type":"js/module"}]}