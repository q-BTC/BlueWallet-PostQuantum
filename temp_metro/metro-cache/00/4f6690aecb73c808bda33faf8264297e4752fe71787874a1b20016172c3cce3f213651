{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":46,"column":41,"index":2016}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"./xoshiro","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":34,"index":361},"end":{"line":8,"column":54,"index":381}}],"key":"gJjAthOmYHL+W2nNQVdKltOAM2s="}},{"name":"@keystonehq/alias-sampling","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":41,"index":425},"end":{"line":9,"column":78,"index":462}}],"key":"1H1VMp55CsoqF6YV5dTB7CuKAm4="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":307},"end":{"line":7,"column":34,"index":325}},{"start":{"line":7,"column":16,"index":307},"end":{"line":7,"column":34,"index":325}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.chooseFragments = exports.shuffle = exports.chooseDegree = void 0;\n  var xoshiro_1 = __importDefault(_$$_REQUIRE(_dependencyMap[1], \"./xoshiro\"));\n  var alias_sampling_1 = __importDefault(_$$_REQUIRE(_dependencyMap[2], \"@keystonehq/alias-sampling\"));\n  var chooseDegree = function chooseDegree(seqLenth, rng) {\n    var degreeProbabilities = _toConsumableArray(new Array(seqLenth)).map(function (_, index) {\n      return 1 / (index + 1);\n    });\n    var degreeChooser = alias_sampling_1.default(degreeProbabilities, undefined, rng.nextDouble);\n    return degreeChooser.next() + 1;\n  };\n  exports.chooseDegree = chooseDegree;\n  var shuffle = function shuffle(items, rng) {\n    var remaining = _toConsumableArray(items);\n    var result = [];\n    while (remaining.length > 0) {\n      var index = rng.nextInt(0, remaining.length - 1);\n      var item = remaining[index];\n      // remaining.erase(remaining.begin() + index);\n      remaining.splice(index, 1);\n      result.push(item);\n    }\n    return result;\n  };\n  exports.shuffle = shuffle;\n  var chooseFragments = function chooseFragments(seqNum, seqLength, checksum) {\n    // The first `seqLenth` parts are the \"pure\" fragments, not mixed with any\n    // others. This means that if you only generate the first `seqLenth` parts,\n    // then you have all the parts you need to decode the message.\n    if (seqNum <= seqLength) {\n      return [seqNum - 1];\n    } else {\n      var seed = Buffer.concat([_$$_REQUIRE(_dependencyMap[3], \"./utils\").intToBytes(seqNum), _$$_REQUIRE(_dependencyMap[3], \"./utils\").intToBytes(checksum)]);\n      var rng = new xoshiro_1.default(seed);\n      var degree = exports.chooseDegree(seqLength, rng);\n      var indexes = _toConsumableArray(new Array(seqLength)).map(function (_, index) {\n        return index;\n      });\n      var shuffledIndexes = exports.shuffle(indexes, rng);\n      return shuffledIndexes.slice(0, degree);\n    }\n  };\n  exports.chooseFragments = chooseFragments;\n});","lineCount":55,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0],[5,6,2,4,"__importDefault"],[5,21,2,19],[5,24,2,23],[5,28,2,27],[5,32,2,31],[5,36,2,35],[5,37,2,36,"__importDefault"],[5,52,2,51],[5,56,2,56],[5,66,2,66,"mod"],[5,69,2,69],[5,71,2,71],[6,4,3,4],[6,11,3,12,"mod"],[6,14,3,15],[6,18,3,19,"mod"],[6,21,3,22],[6,22,3,23,"__esModule"],[6,32,3,33],[6,35,3,37,"mod"],[6,38,3,40],[6,41,3,43],[7,6,3,45],[7,15,3,54],[7,17,3,56,"mod"],[8,4,3,60],[8,5,3,61],[9,2,4,0],[9,3,4,1],[10,2,5,0,"Object"],[10,8,5,6],[10,9,5,7,"defineProperty"],[10,23,5,21],[10,24,5,22,"exports"],[10,31,5,29],[10,33,5,31],[10,45,5,43],[10,47,5,45],[11,4,5,47,"value"],[11,9,5,52],[11,11,5,54],[12,2,5,59],[12,3,5,60],[12,4,5,61],[13,2,6,0,"exports"],[13,9,6,7],[13,10,6,8,"chooseFragments"],[13,25,6,23],[13,28,6,26,"exports"],[13,35,6,33],[13,36,6,34,"shuffle"],[13,43,6,41],[13,46,6,44,"exports"],[13,53,6,51],[13,54,6,52,"chooseDegree"],[13,66,6,64],[13,69,6,67],[13,74,6,72],[13,75,6,73],[14,2,8,0],[14,6,8,6,"xoshiro_1"],[14,15,8,15],[14,18,8,18,"__importDefault"],[14,33,8,33],[14,34,8,34,"require"],[14,45,8,41],[14,46,8,41,"_dependencyMap"],[14,60,8,41],[14,76,8,53],[14,77,8,54],[14,78,8,55],[15,2,9,0],[15,6,9,6,"alias_sampling_1"],[15,22,9,22],[15,25,9,25,"__importDefault"],[15,40,9,40],[15,41,9,41,"require"],[15,52,9,48],[15,53,9,48,"_dependencyMap"],[15,67,9,48],[15,100,9,77],[15,101,9,78],[15,102,9,79],[16,2,10,0],[16,6,10,6,"chooseDegree"],[16,18,10,18],[16,21,10,21],[16,30,10,6,"chooseDegree"],[16,42,10,18,"chooseDegree"],[16,43,10,22,"seqLenth"],[16,51,10,30],[16,53,10,32,"rng"],[16,56,10,35],[16,58,10,40],[17,4,11,4],[17,8,11,10,"degreeProbabilities"],[17,27,11,29],[17,30,11,32,"_toConsumableArray"],[17,48,11,32],[17,49,11,36],[17,53,11,40,"Array"],[17,58,11,45],[17,59,11,46,"seqLenth"],[17,67,11,54],[17,68,11,55],[17,70,11,57,"map"],[17,73,11,60],[17,74,11,61],[17,84,11,62,"_"],[17,85,11,63],[17,87,11,65,"index"],[17,92,11,70],[18,6,11,70],[18,13,11,75],[18,14,11,76],[18,18,11,80,"index"],[18,23,11,85],[18,26,11,88],[18,27,11,89],[18,28,11,90],[19,4,11,90],[19,6,11,91],[20,4,12,4],[20,8,12,10,"degreeChooser"],[20,21,12,23],[20,24,12,26,"alias_sampling_1"],[20,40,12,42],[20,41,12,43,"default"],[20,48,12,50],[20,49,12,51,"degreeProbabilities"],[20,68,12,70],[20,70,12,72,"undefined"],[20,79,12,81],[20,81,12,83,"rng"],[20,84,12,86],[20,85,12,87,"nextDouble"],[20,95,12,97],[20,96,12,98],[21,4,13,4],[21,11,13,11,"degreeChooser"],[21,24,13,24],[21,25,13,25,"next"],[21,29,13,29],[21,30,13,30],[21,31,13,31],[21,34,13,34],[21,35,13,35],[22,2,14,0],[22,3,14,1],[23,2,15,0,"exports"],[23,9,15,7],[23,10,15,8,"chooseDegree"],[23,22,15,20],[23,25,15,23,"chooseDegree"],[23,37,15,35],[24,2,16,0],[24,6,16,6,"shuffle"],[24,13,16,13],[24,16,16,16],[24,25,16,6,"shuffle"],[24,32,16,13,"shuffle"],[24,33,16,17,"items"],[24,38,16,22],[24,40,16,24,"rng"],[24,43,16,27],[24,45,16,32],[25,4,17,4],[25,8,17,8,"remaining"],[25,17,17,17],[25,20,17,17,"_toConsumableArray"],[25,38,17,17],[25,39,17,24,"items"],[25,44,17,29],[25,45,17,30],[26,4,18,4],[26,8,18,8,"result"],[26,14,18,14],[26,17,18,17],[26,19,18,19],[27,4,19,4],[27,11,19,11,"remaining"],[27,20,19,20],[27,21,19,21,"length"],[27,27,19,27],[27,30,19,30],[27,31,19,31],[27,33,19,33],[28,6,20,8],[28,10,20,12,"index"],[28,15,20,17],[28,18,20,20,"rng"],[28,21,20,23],[28,22,20,24,"nextInt"],[28,29,20,31],[28,30,20,32],[28,31,20,33],[28,33,20,35,"remaining"],[28,42,20,44],[28,43,20,45,"length"],[28,49,20,51],[28,52,20,54],[28,53,20,55],[28,54,20,56],[29,6,21,8],[29,10,21,12,"item"],[29,14,21,16],[29,17,21,19,"remaining"],[29,26,21,28],[29,27,21,29,"index"],[29,32,21,34],[29,33,21,35],[30,6,22,8],[31,6,23,8,"remaining"],[31,15,23,17],[31,16,23,18,"splice"],[31,22,23,24],[31,23,23,25,"index"],[31,28,23,30],[31,30,23,32],[31,31,23,33],[31,32,23,34],[32,6,24,8,"result"],[32,12,24,14],[32,13,24,15,"push"],[32,17,24,19],[32,18,24,20,"item"],[32,22,24,24],[32,23,24,25],[33,4,25,4],[34,4,26,4],[34,11,26,11,"result"],[34,17,26,17],[35,2,27,0],[35,3,27,1],[36,2,28,0,"exports"],[36,9,28,7],[36,10,28,8,"shuffle"],[36,17,28,15],[36,20,28,18,"shuffle"],[36,27,28,25],[37,2,29,0],[37,6,29,6,"chooseFragments"],[37,21,29,21],[37,24,29,24],[37,33,29,6,"chooseFragments"],[37,48,29,21,"chooseFragments"],[37,49,29,25,"seqNum"],[37,55,29,31],[37,57,29,33,"seqLength"],[37,66,29,42],[37,68,29,44,"checksum"],[37,76,29,52],[37,78,29,57],[38,4,30,4],[39,4,31,4],[40,4,32,4],[41,4,33,4],[41,8,33,8,"seqNum"],[41,14,33,14],[41,18,33,18,"seqLength"],[41,27,33,27],[41,29,33,29],[42,6,34,8],[42,13,34,15],[42,14,34,16,"seqNum"],[42,20,34,22],[42,23,34,25],[42,24,34,26],[42,25,34,27],[43,4,35,4],[43,5,35,5],[43,11,36,9],[44,6,37,8],[44,10,37,14,"seed"],[44,14,37,18],[44,17,37,21,"Buffer"],[44,23,37,27],[44,24,37,28,"concat"],[44,30,37,34],[44,31,37,35],[44,32,37,36,"_$$_REQUIRE"],[44,43,37,36],[44,44,37,36,"_dependencyMap"],[44,58,37,36],[44,74,37,44,"intToBytes"],[44,84,37,54],[44,85,37,55,"seqNum"],[44,91,37,61],[44,92,37,62],[44,94,37,64,"_$$_REQUIRE"],[44,105,37,64],[44,106,37,64,"_dependencyMap"],[44,120,37,64],[44,136,37,72,"intToBytes"],[44,146,37,82],[44,147,37,83,"checksum"],[44,155,37,91],[44,156,37,92],[44,157,37,93],[44,158,37,94],[45,6,38,8],[45,10,38,14,"rng"],[45,13,38,17],[45,16,38,20],[45,20,38,24,"xoshiro_1"],[45,29,38,33],[45,30,38,34,"default"],[45,37,38,41],[45,38,38,42,"seed"],[45,42,38,46],[45,43,38,47],[46,6,39,8],[46,10,39,14,"degree"],[46,16,39,20],[46,19,39,23,"exports"],[46,26,39,30],[46,27,39,31,"chooseDegree"],[46,39,39,43],[46,40,39,44,"seqLength"],[46,49,39,53],[46,51,39,55,"rng"],[46,54,39,58],[46,55,39,59],[47,6,40,8],[47,10,40,14,"indexes"],[47,17,40,21],[47,20,40,24,"_toConsumableArray"],[47,38,40,24],[47,39,40,28],[47,43,40,32,"Array"],[47,48,40,37],[47,49,40,38,"seqLength"],[47,58,40,47],[47,59,40,48],[47,61,40,50,"map"],[47,64,40,53],[47,65,40,54],[47,75,40,55,"_"],[47,76,40,56],[47,78,40,58,"index"],[47,83,40,63],[48,8,40,63],[48,15,40,68,"index"],[48,20,40,73],[49,6,40,73],[49,8,40,74],[50,6,41,8],[50,10,41,14,"shuffledIndexes"],[50,25,41,29],[50,28,41,32,"exports"],[50,35,41,39],[50,36,41,40,"shuffle"],[50,43,41,47],[50,44,41,48,"indexes"],[50,51,41,55],[50,53,41,57,"rng"],[50,56,41,60],[50,57,41,61],[51,6,42,8],[51,13,42,15,"shuffledIndexes"],[51,28,42,30],[51,29,42,31,"slice"],[51,34,42,36],[51,35,42,37],[51,36,42,38],[51,38,42,40,"degree"],[51,44,42,46],[51,45,42,47],[52,4,43,4],[53,2,44,0],[53,3,44,1],[54,2,45,0,"exports"],[54,9,45,7],[54,10,45,8,"chooseFragments"],[54,25,45,23],[54,28,45,26,"chooseFragments"],[54,43,45,41],[55,0,45,42],[55,3]],"functionMap":{"names":["<global>","<anonymous>","chooseDegree","map$argument_0","shuffle","chooseFragments"],"mappings":"AAA;wDCC;CDE;qBEM;6DCC,6BD;CFG;gBIE;CJW;wBKE;sDFW,mBE;CLI"}},"type":"js/module"}]}