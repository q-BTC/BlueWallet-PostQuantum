{"dependencies":[{"name":"../../script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":130},"end":{"line":4,"column":39,"index":153}},{"start":{"line":5,"column":17,"index":172},"end":{"line":5,"column":40,"index":195}},{"start":{"line":4,"column":16,"index":130},"end":{"line":4,"column":39,"index":153}},{"start":{"line":5,"column":17,"index":172},"end":{"line":5,"column":40,"index":195}},{"start":{"line":4,"column":16,"index":130},"end":{"line":4,"column":39,"index":153}}],"key":"ZJcaeFe6iWw0p0XKD5NSiEjDT7o="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":253},"end":{"line":7,"column":38,"index":273}},{"start":{"line":7,"column":18,"index":253},"end":{"line":7,"column":38,"index":273}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"../../types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":211},"end":{"line":6,"column":36,"index":233}}],"key":"isazE5VZPGBeTnc9JimR5EfjAHY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // OP_RETURN {aa21a9ed} {commitment}\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var HEADER = Buffer.from('aa21a9ed', 'hex');\n  function check(script) {\n    var buffer = _$$_REQUIRE(_dependencyMap[0], \"../../script\").compile(script);\n    return buffer.length > 37 && buffer[0] === _$$_REQUIRE(_dependencyMap[0], \"../../script\").OPS.OP_RETURN && buffer[1] === 0x24 && buffer.slice(2, 6).equals(HEADER);\n  }\n  exports.check = check;\n  check.toJSON = function () {\n    return 'Witness commitment output';\n  };\n  function encode(commitment) {\n    _$$_REQUIRE(_dependencyMap[1], \"typeforce\")(_$$_REQUIRE(_dependencyMap[2], \"../../types\").Hash256bit, commitment);\n    var buffer = Buffer.allocUnsafe(36);\n    HEADER.copy(buffer, 0);\n    commitment.copy(buffer, 4);\n    return _$$_REQUIRE(_dependencyMap[0], \"../../script\").compile([_$$_REQUIRE(_dependencyMap[0], \"../../script\").OPS.OP_RETURN, buffer]);\n  }\n  exports.encode = encode;\n  function decode(buffer) {\n    _$$_REQUIRE(_dependencyMap[1], \"typeforce\")(check, buffer);\n    return _$$_REQUIRE(_dependencyMap[0], \"../../script\").decompile(buffer)[1].slice(4, 36);\n  }\n  exports.decode = decode;\n});","lineCount":30,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0,"Object"],[5,8,3,6],[5,9,3,7,"defineProperty"],[5,23,3,21],[5,24,3,22,"exports"],[5,31,3,29],[5,33,3,31],[5,45,3,43],[5,47,3,45],[6,4,3,47,"value"],[6,9,3,52],[6,11,3,54],[7,2,3,59],[7,3,3,60],[7,4,3,61],[8,2,8,0],[8,6,8,6,"HEADER"],[8,12,8,12],[8,15,8,15,"Buffer"],[8,21,8,21],[8,22,8,22,"from"],[8,26,8,26],[8,27,8,27],[8,37,8,37],[8,39,8,39],[8,44,8,44],[8,45,8,45],[9,2,9,0],[9,11,9,9,"check"],[9,16,9,14,"check"],[9,17,9,15,"script"],[9,23,9,21],[9,25,9,23],[10,4,10,2],[10,8,10,8,"buffer"],[10,14,10,14],[10,17,10,17,"_$$_REQUIRE"],[10,28,10,17],[10,29,10,17,"_dependencyMap"],[10,43,10,17],[10,64,10,25,"compile"],[10,71,10,32],[10,72,10,33,"script"],[10,78,10,39],[10,79,10,40],[11,4,11,2],[11,11,12,4,"buffer"],[11,17,12,10],[11,18,12,11,"length"],[11,24,12,17],[11,27,12,20],[11,29,12,22],[11,33,13,4,"buffer"],[11,39,13,10],[11,40,13,11],[11,41,13,12],[11,42,13,13],[11,47,13,18,"_$$_REQUIRE"],[11,58,13,18],[11,59,13,18,"_dependencyMap"],[11,73,13,18],[11,94,13,27,"OPS"],[11,97,13,30],[11,98,13,31,"OP_RETURN"],[11,107,13,40],[11,111,14,4,"buffer"],[11,117,14,10],[11,118,14,11],[11,119,14,12],[11,120,14,13],[11,125,14,18],[11,129,14,22],[11,133,15,4,"buffer"],[11,139,15,10],[11,140,15,11,"slice"],[11,145,15,16],[11,146,15,17],[11,147,15,18],[11,149,15,20],[11,150,15,21],[11,151,15,22],[11,152,15,23,"equals"],[11,158,15,29],[11,159,15,30,"HEADER"],[11,165,15,36],[11,166,15,37],[12,2,17,0],[13,2,18,0,"exports"],[13,9,18,7],[13,10,18,8,"check"],[13,15,18,13],[13,18,18,16,"check"],[13,23,18,21],[14,2,19,0,"check"],[14,7,19,5],[14,8,19,6,"toJSON"],[14,14,19,12],[14,17,19,15],[14,29,19,21],[15,4,20,2],[15,11,20,9],[15,38,20,36],[16,2,21,0],[16,3,21,1],[17,2,22,0],[17,11,22,9,"encode"],[17,17,22,15,"encode"],[17,18,22,16,"commitment"],[17,28,22,26],[17,30,22,28],[18,4,23,2,"_$$_REQUIRE"],[18,15,23,2],[18,16,23,2,"_dependencyMap"],[18,30,23,2],[18,48,23,12,"_$$_REQUIRE"],[18,59,23,12],[18,60,23,12,"_dependencyMap"],[18,74,23,12],[18,94,23,18,"Hash256bit"],[18,104,23,28],[18,106,23,30,"commitment"],[18,116,23,40],[18,117,23,41],[19,4,24,2],[19,8,24,8,"buffer"],[19,14,24,14],[19,17,24,17,"Buffer"],[19,23,24,23],[19,24,24,24,"allocUnsafe"],[19,35,24,35],[19,36,24,36],[19,38,24,38],[19,39,24,39],[20,4,25,2,"HEADER"],[20,10,25,8],[20,11,25,9,"copy"],[20,15,25,13],[20,16,25,14,"buffer"],[20,22,25,20],[20,24,25,22],[20,25,25,23],[20,26,25,24],[21,4,26,2,"commitment"],[21,14,26,12],[21,15,26,13,"copy"],[21,19,26,17],[21,20,26,18,"buffer"],[21,26,26,24],[21,28,26,26],[21,29,26,27],[21,30,26,28],[22,4,27,2],[22,11,27,9,"_$$_REQUIRE"],[22,22,27,9],[22,23,27,9,"_dependencyMap"],[22,37,27,9],[22,58,27,17,"compile"],[22,65,27,24],[22,66,27,25],[22,67,27,26,"_$$_REQUIRE"],[22,78,27,26],[22,79,27,26,"_dependencyMap"],[22,93,27,26],[22,114,27,35,"OPS"],[22,117,27,38],[22,118,27,39,"OP_RETURN"],[22,127,27,48],[22,129,27,50,"buffer"],[22,135,27,56],[22,136,27,57],[22,137,27,58],[23,2,28,0],[24,2,29,0,"exports"],[24,9,29,7],[24,10,29,8,"encode"],[24,16,29,14],[24,19,29,17,"encode"],[24,25,29,23],[25,2,30,0],[25,11,30,9,"decode"],[25,17,30,15,"decode"],[25,18,30,16,"buffer"],[25,24,30,22],[25,26,30,24],[26,4,31,2,"_$$_REQUIRE"],[26,15,31,2],[26,16,31,2,"_dependencyMap"],[26,30,31,2],[26,48,31,12,"check"],[26,53,31,17],[26,55,31,19,"buffer"],[26,61,31,25],[26,62,31,26],[27,4,32,2],[27,11,32,9,"_$$_REQUIRE"],[27,22,32,9],[27,23,32,9,"_dependencyMap"],[27,37,32,9],[27,58,32,17,"decompile"],[27,67,32,26],[27,68,32,27,"buffer"],[27,74,32,33],[27,75,32,34],[27,76,32,35],[27,77,32,36],[27,78,32,37],[27,79,32,38,"slice"],[27,84,32,43],[27,85,32,44],[27,86,32,45],[27,88,32,47],[27,90,32,49],[27,91,32,50],[28,2,33,0],[29,2,34,0,"exports"],[29,9,34,7],[29,10,34,8,"decode"],[29,16,34,14],[29,19,34,17,"decode"],[29,25,34,23],[30,0,34,24],[30,3]],"functionMap":{"names":["<global>","check","check.toJSON","encode","decode"],"mappings":"AAA;ACQ;CDQ;eEE;CFE;AGC;CHM;AIE;CJG"}},"type":"js/module"}]}