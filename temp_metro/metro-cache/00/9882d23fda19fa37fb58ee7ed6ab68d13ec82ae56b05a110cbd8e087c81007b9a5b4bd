{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":51,"column":27,"index":1469},"end":{"line":51,"column":54,"index":1496}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"./ops.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}},{"start":{"line":50,"column":17,"index":1420},"end":{"line":50,"column":37,"index":1440}}],"key":"vWd3b+9AcQzDQ6Zf83AAcKkBJoM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, 'default', {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o['default'] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.encodingLength = encodingLength;\n  exports.encode = encode;\n  exports.decode = decode;\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  /**\n   * Calculates the encoding length of a number used for push data in Bitcoin transactions.\n   * @param i The number to calculate the encoding length for.\n   * @returns The encoding length of the number.\n   */\n  function encodingLength(i) {\n    return i < _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n  }\n  /**\n   * Encodes a number into a buffer using a variable-length encoding scheme.\n   * The encoded buffer is written starting at the specified offset.\n   * Returns the size of the encoded buffer.\n   *\n   * @param buffer - The buffer to write the encoded data into.\n   * @param num - The number to encode.\n   * @param offset - The offset at which to start writing the encoded buffer.\n   * @returns The size of the encoded buffer.\n   */\n  function encode(buffer, num, offset) {\n    var size = encodingLength(num);\n    // ~6 bit\n    if (size === 1) {\n      tools.writeUInt8(buffer, offset, num);\n      // 8 bit\n    } else if (size === 2) {\n      tools.writeUInt8(buffer, offset, _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA1);\n      tools.writeUInt8(buffer, offset + 1, num);\n      // 16 bit\n    } else if (size === 3) {\n      tools.writeUInt8(buffer, offset, _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA2);\n      tools.writeUInt16(buffer, offset + 1, num, 'LE');\n      // 32 bit\n    } else {\n      tools.writeUInt8(buffer, offset, _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA4);\n      tools.writeUInt32(buffer, offset + 1, num, 'LE');\n    }\n    return size;\n  }\n  /**\n   * Decodes a buffer and returns information about the opcode, number, and size.\n   * @param buffer - The buffer to decode.\n   * @param offset - The offset within the buffer to start decoding.\n   * @returns An object containing the opcode, number, and size, or null if decoding fails.\n   */\n  function decode(buffer, offset) {\n    var opcode = tools.readUInt8(buffer, offset);\n    var num;\n    var size;\n    // ~6 bit\n    if (opcode < _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA1) {\n      num = opcode;\n      size = 1;\n      // 8 bit\n    } else if (opcode === _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA1) {\n      if (offset + 2 > buffer.length) return null;\n      num = tools.readUInt8(buffer, offset + 1);\n      size = 2;\n      // 16 bit\n    } else if (opcode === _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA2) {\n      if (offset + 3 > buffer.length) return null;\n      num = tools.readUInt16(buffer, offset + 1, 'LE');\n      size = 3;\n      // 32 bit\n    } else {\n      if (offset + 5 > buffer.length) return null;\n      if (opcode !== _$$_REQUIRE(_dependencyMap[1], \"./ops.cjs\").OPS.OP_PUSHDATA4) throw new Error('Unexpected opcode');\n      num = tools.readUInt32(buffer, offset + 1, 'LE');\n      size = 5;\n    }\n    return {\n      opcode: opcode,\n      number: num,\n      size: size\n    };\n  }\n});","lineCount":117,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__createBinding"],[4,21,2,19],[4,24,3,3],[4,28,3,7],[4,32,3,11],[4,36,3,15],[4,37,3,16,"__createBinding"],[4,52,3,31],[4,57,4,3,"Object"],[4,63,4,9],[4,64,4,10,"create"],[4,70,4,16],[4,73,5,6],[4,83,5,16,"o"],[4,84,5,17],[4,86,5,19,"m"],[4,87,5,20],[4,89,5,22,"k"],[4,90,5,23],[4,92,5,25,"k2"],[4,94,5,27],[4,96,5,29],[5,4,6,8],[5,8,6,12,"k2"],[5,10,6,14],[5,15,6,19,"undefined"],[5,24,6,28],[5,26,6,30,"k2"],[5,28,6,32],[5,31,6,35,"k"],[5,32,6,36],[6,4,7,8],[6,8,7,12,"desc"],[6,12,7,16],[6,15,7,19,"Object"],[6,21,7,25],[6,22,7,26,"getOwnPropertyDescriptor"],[6,46,7,50],[6,47,7,51,"m"],[6,48,7,52],[6,50,7,54,"k"],[6,51,7,55],[6,52,7,56],[7,4,8,8],[7,8,9,10],[7,9,9,11,"desc"],[7,13,9,15],[7,18,10,11],[7,23,10,16],[7,27,10,20,"desc"],[7,31,10,24],[7,34,10,27],[7,35,10,28,"m"],[7,36,10,29],[7,37,10,30,"__esModule"],[7,47,10,40],[7,50,10,43,"desc"],[7,54,10,47],[7,55,10,48,"writable"],[7,63,10,56],[7,67,10,60,"desc"],[7,71,10,64],[7,72,10,65,"configurable"],[7,84,10,77],[7,85,10,78],[7,87,11,10],[8,6,12,10,"desc"],[8,10,12,14],[8,13,12,17],[9,8,13,12,"enumerable"],[9,18,13,22],[9,20,13,24],[9,24,13,28],[10,8,14,12,"get"],[10,11,14,15],[10,13,14,17],[10,22,14,12,"get"],[10,25,14,15,"get"],[10,26,14,15],[10,28,14,29],[11,10,15,14],[11,17,15,21,"m"],[11,18,15,22],[11,19,15,23,"k"],[11,20,15,24],[11,21,15,25],[12,8,16,12],[13,6,17,10],[13,7,17,11],[14,4,18,8],[15,4,19,8,"Object"],[15,10,19,14],[15,11,19,15,"defineProperty"],[15,25,19,29],[15,26,19,30,"o"],[15,27,19,31],[15,29,19,33,"k2"],[15,31,19,35],[15,33,19,37,"desc"],[15,37,19,41],[15,38,19,42],[16,2,20,6],[16,3,20,7],[16,6,21,6],[16,16,21,16,"o"],[16,17,21,17],[16,19,21,19,"m"],[16,20,21,20],[16,22,21,22,"k"],[16,23,21,23],[16,25,21,25,"k2"],[16,27,21,27],[16,29,21,29],[17,4,22,8],[17,8,22,12,"k2"],[17,10,22,14],[17,15,22,19,"undefined"],[17,24,22,28],[17,26,22,30,"k2"],[17,28,22,32],[17,31,22,35,"k"],[17,32,22,36],[18,4,23,8,"o"],[18,5,23,9],[18,6,23,10,"k2"],[18,8,23,12],[18,9,23,13],[18,12,23,16,"m"],[18,13,23,17],[18,14,23,18,"k"],[18,15,23,19],[18,16,23,20],[19,2,24,6],[19,3,24,7],[19,4,24,8],[20,2,25,0],[20,6,25,4,"__setModuleDefault"],[20,24,25,22],[20,27,26,3],[20,31,26,7],[20,35,26,11],[20,39,26,15],[20,40,26,16,"__setModuleDefault"],[20,58,26,34],[20,63,27,3,"Object"],[20,69,27,9],[20,70,27,10,"create"],[20,76,27,16],[20,79,28,6],[20,89,28,16,"o"],[20,90,28,17],[20,92,28,19,"v"],[20,93,28,20],[20,95,28,22],[21,4,29,8,"Object"],[21,10,29,14],[21,11,29,15,"defineProperty"],[21,25,29,29],[21,26,29,30,"o"],[21,27,29,31],[21,29,29,33],[21,38,29,42],[21,40,29,44],[22,6,29,46,"enumerable"],[22,16,29,56],[22,18,29,58],[22,22,29,62],[23,6,29,64,"value"],[23,11,29,69],[23,13,29,71,"v"],[24,4,29,73],[24,5,29,74],[24,6,29,75],[25,2,30,6],[25,3,30,7],[25,6,31,6],[25,16,31,16,"o"],[25,17,31,17],[25,19,31,19,"v"],[25,20,31,20],[25,22,31,22],[26,4,32,8,"o"],[26,5,32,9],[26,6,32,10],[26,15,32,19],[26,16,32,20],[26,19,32,23,"v"],[26,20,32,24],[27,2,33,6],[27,3,33,7],[27,4,33,8],[28,2,34,0],[28,6,34,4,"__importStar"],[28,18,34,16],[28,21,35,3],[28,25,35,7],[28,29,35,11],[28,33,35,15],[28,34,35,16,"__importStar"],[28,46,35,28],[28,50,36,2],[28,60,36,12,"mod"],[28,63,36,15],[28,65,36,17],[29,4,37,4],[29,8,37,8,"mod"],[29,11,37,11],[29,15,37,15,"mod"],[29,18,37,18],[29,19,37,19,"__esModule"],[29,29,37,29],[29,31,37,31],[29,38,37,38,"mod"],[29,41,37,41],[30,4,38,4],[30,8,38,8,"result"],[30,14,38,14],[30,17,38,17],[30,18,38,18],[30,19,38,19],[31,4,39,4],[31,8,39,8,"mod"],[31,11,39,11],[31,15,39,15],[31,19,39,19],[31,21,40,6],[31,26,40,11],[31,30,40,15,"k"],[31,31,40,16],[31,35,40,20,"mod"],[31,38,40,23],[31,40,41,8],[31,44,41,12,"k"],[31,45,41,13],[31,50,41,18],[31,59,41,27],[31,63,41,31,"Object"],[31,69,41,37],[31,70,41,38,"prototype"],[31,79,41,47],[31,80,41,48,"hasOwnProperty"],[31,94,41,62],[31,95,41,63,"call"],[31,99,41,67],[31,100,41,68,"mod"],[31,103,41,71],[31,105,41,73,"k"],[31,106,41,74],[31,107,41,75],[31,109,42,10,"__createBinding"],[31,124,42,25],[31,125,42,26,"result"],[31,131,42,32],[31,133,42,34,"mod"],[31,136,42,37],[31,138,42,39,"k"],[31,139,42,40],[31,140,42,41],[32,4,43,4,"__setModuleDefault"],[32,22,43,22],[32,23,43,23,"result"],[32,29,43,29],[32,31,43,31,"mod"],[32,34,43,34],[32,35,43,35],[33,4,44,4],[33,11,44,11,"result"],[33,17,44,17],[34,2,45,2],[34,3,45,3],[35,2,46,0,"Object"],[35,8,46,6],[35,9,46,7,"defineProperty"],[35,23,46,21],[35,24,46,22,"exports"],[35,31,46,29],[35,33,46,31],[35,45,46,43],[35,47,46,45],[36,4,46,47,"value"],[36,9,46,52],[36,11,46,54],[37,2,46,59],[37,3,46,60],[37,4,46,61],[38,2,47,0,"exports"],[38,9,47,7],[38,10,47,8,"encodingLength"],[38,24,47,22],[38,27,47,25,"encodingLength"],[38,41,47,39],[39,2,48,0,"exports"],[39,9,48,7],[39,10,48,8,"encode"],[39,16,48,14],[39,19,48,17,"encode"],[39,25,48,23],[40,2,49,0,"exports"],[40,9,49,7],[40,10,49,8,"decode"],[40,16,49,14],[40,19,49,17,"decode"],[40,25,49,23],[41,2,51,0],[41,6,51,6,"tools"],[41,11,51,11],[41,14,51,14,"__importStar"],[41,26,51,26],[41,27,51,27,"require"],[41,38,51,34],[41,39,51,34,"_dependencyMap"],[41,53,51,34],[41,76,51,53],[41,77,51,54],[41,78,51,55],[42,2,52,0],[43,0,53,0],[44,0,54,0],[45,0,55,0],[46,0,56,0],[47,2,57,0],[47,11,57,9,"encodingLength"],[47,25,57,23,"encodingLength"],[47,26,57,24,"i"],[47,27,57,25],[47,29,57,27],[48,4,58,2],[48,11,58,9,"i"],[48,12,58,10],[48,15,58,13,"_$$_REQUIRE"],[48,26,58,13],[48,27,58,13,"_dependencyMap"],[48,41,58,13],[48,59,58,22,"OPS"],[48,62,58,25],[48,63,58,26,"OP_PUSHDATA1"],[48,75,58,38],[48,78,59,6],[48,79,59,7],[48,82,60,6,"i"],[48,83,60,7],[48,87,60,11],[48,91,60,15],[48,94,61,8],[48,95,61,9],[48,98,62,8,"i"],[48,99,62,9],[48,103,62,13],[48,109,62,19],[48,112,63,10],[48,113,63,11],[48,116,64,10],[48,117,64,11],[49,2,65,0],[50,2,66,0],[51,0,67,0],[52,0,68,0],[53,0,69,0],[54,0,70,0],[55,0,71,0],[56,0,72,0],[57,0,73,0],[58,0,74,0],[59,0,75,0],[60,2,76,0],[60,11,76,9,"encode"],[60,17,76,15,"encode"],[60,18,76,16,"buffer"],[60,24,76,22],[60,26,76,24,"num"],[60,29,76,27],[60,31,76,29,"offset"],[60,37,76,35],[60,39,76,37],[61,4,77,2],[61,8,77,8,"size"],[61,12,77,12],[61,15,77,15,"encodingLength"],[61,29,77,29],[61,30,77,30,"num"],[61,33,77,33],[61,34,77,34],[62,4,78,2],[63,4,79,2],[63,8,79,6,"size"],[63,12,79,10],[63,17,79,15],[63,18,79,16],[63,20,79,18],[64,6,80,4,"tools"],[64,11,80,9],[64,12,80,10,"writeUInt8"],[64,22,80,20],[64,23,80,21,"buffer"],[64,29,80,27],[64,31,80,29,"offset"],[64,37,80,35],[64,39,80,37,"num"],[64,42,80,40],[64,43,80,41],[65,6,81,4],[66,4,82,2],[66,5,82,3],[66,11,82,9],[66,15,82,13,"size"],[66,19,82,17],[66,24,82,22],[66,25,82,23],[66,27,82,25],[67,6,83,4,"tools"],[67,11,83,9],[67,12,83,10,"writeUInt8"],[67,22,83,20],[67,23,83,21,"buffer"],[67,29,83,27],[67,31,83,29,"offset"],[67,37,83,35],[67,39,83,37,"_$$_REQUIRE"],[67,50,83,37],[67,51,83,37,"_dependencyMap"],[67,65,83,37],[67,83,83,46,"OPS"],[67,86,83,49],[67,87,83,50,"OP_PUSHDATA1"],[67,99,83,62],[67,100,83,63],[68,6,84,4,"tools"],[68,11,84,9],[68,12,84,10,"writeUInt8"],[68,22,84,20],[68,23,84,21,"buffer"],[68,29,84,27],[68,31,84,29,"offset"],[68,37,84,35],[68,40,84,38],[68,41,84,39],[68,43,84,41,"num"],[68,46,84,44],[68,47,84,45],[69,6,85,4],[70,4,86,2],[70,5,86,3],[70,11,86,9],[70,15,86,13,"size"],[70,19,86,17],[70,24,86,22],[70,25,86,23],[70,27,86,25],[71,6,87,4,"tools"],[71,11,87,9],[71,12,87,10,"writeUInt8"],[71,22,87,20],[71,23,87,21,"buffer"],[71,29,87,27],[71,31,87,29,"offset"],[71,37,87,35],[71,39,87,37,"_$$_REQUIRE"],[71,50,87,37],[71,51,87,37,"_dependencyMap"],[71,65,87,37],[71,83,87,46,"OPS"],[71,86,87,49],[71,87,87,50,"OP_PUSHDATA2"],[71,99,87,62],[71,100,87,63],[72,6,88,4,"tools"],[72,11,88,9],[72,12,88,10,"writeUInt16"],[72,23,88,21],[72,24,88,22,"buffer"],[72,30,88,28],[72,32,88,30,"offset"],[72,38,88,36],[72,41,88,39],[72,42,88,40],[72,44,88,42,"num"],[72,47,88,45],[72,49,88,47],[72,53,88,51],[72,54,88,52],[73,6,89,4],[74,4,90,2],[74,5,90,3],[74,11,90,9],[75,6,91,4,"tools"],[75,11,91,9],[75,12,91,10,"writeUInt8"],[75,22,91,20],[75,23,91,21,"buffer"],[75,29,91,27],[75,31,91,29,"offset"],[75,37,91,35],[75,39,91,37,"_$$_REQUIRE"],[75,50,91,37],[75,51,91,37,"_dependencyMap"],[75,65,91,37],[75,83,91,46,"OPS"],[75,86,91,49],[75,87,91,50,"OP_PUSHDATA4"],[75,99,91,62],[75,100,91,63],[76,6,92,4,"tools"],[76,11,92,9],[76,12,92,10,"writeUInt32"],[76,23,92,21],[76,24,92,22,"buffer"],[76,30,92,28],[76,32,92,30,"offset"],[76,38,92,36],[76,41,92,39],[76,42,92,40],[76,44,92,42,"num"],[76,47,92,45],[76,49,92,47],[76,53,92,51],[76,54,92,52],[77,4,93,2],[78,4,94,2],[78,11,94,9,"size"],[78,15,94,13],[79,2,95,0],[80,2,96,0],[81,0,97,0],[82,0,98,0],[83,0,99,0],[84,0,100,0],[85,0,101,0],[86,2,102,0],[86,11,102,9,"decode"],[86,17,102,15,"decode"],[86,18,102,16,"buffer"],[86,24,102,22],[86,26,102,24,"offset"],[86,32,102,30],[86,34,102,32],[87,4,103,2],[87,8,103,8,"opcode"],[87,14,103,14],[87,17,103,17,"tools"],[87,22,103,22],[87,23,103,23,"readUInt8"],[87,32,103,32],[87,33,103,33,"buffer"],[87,39,103,39],[87,41,103,41,"offset"],[87,47,103,47],[87,48,103,48],[88,4,104,2],[88,8,104,6,"num"],[88,11,104,9],[89,4,105,2],[89,8,105,6,"size"],[89,12,105,10],[90,4,106,2],[91,4,107,2],[91,8,107,6,"opcode"],[91,14,107,12],[91,17,107,15,"_$$_REQUIRE"],[91,28,107,15],[91,29,107,15,"_dependencyMap"],[91,43,107,15],[91,61,107,24,"OPS"],[91,64,107,27],[91,65,107,28,"OP_PUSHDATA1"],[91,77,107,40],[91,79,107,42],[92,6,108,4,"num"],[92,9,108,7],[92,12,108,10,"opcode"],[92,18,108,16],[93,6,109,4,"size"],[93,10,109,8],[93,13,109,11],[93,14,109,12],[94,6,110,4],[95,4,111,2],[95,5,111,3],[95,11,111,9],[95,15,111,13,"opcode"],[95,21,111,19],[95,26,111,24,"_$$_REQUIRE"],[95,37,111,24],[95,38,111,24,"_dependencyMap"],[95,52,111,24],[95,70,111,33,"OPS"],[95,73,111,36],[95,74,111,37,"OP_PUSHDATA1"],[95,86,111,49],[95,88,111,51],[96,6,112,4],[96,10,112,8,"offset"],[96,16,112,14],[96,19,112,17],[96,20,112,18],[96,23,112,21,"buffer"],[96,29,112,27],[96,30,112,28,"length"],[96,36,112,34],[96,38,112,36],[96,45,112,43],[96,49,112,47],[97,6,113,4,"num"],[97,9,113,7],[97,12,113,10,"tools"],[97,17,113,15],[97,18,113,16,"readUInt8"],[97,27,113,25],[97,28,113,26,"buffer"],[97,34,113,32],[97,36,113,34,"offset"],[97,42,113,40],[97,45,113,43],[97,46,113,44],[97,47,113,45],[98,6,114,4,"size"],[98,10,114,8],[98,13,114,11],[98,14,114,12],[99,6,115,4],[100,4,116,2],[100,5,116,3],[100,11,116,9],[100,15,116,13,"opcode"],[100,21,116,19],[100,26,116,24,"_$$_REQUIRE"],[100,37,116,24],[100,38,116,24,"_dependencyMap"],[100,52,116,24],[100,70,116,33,"OPS"],[100,73,116,36],[100,74,116,37,"OP_PUSHDATA2"],[100,86,116,49],[100,88,116,51],[101,6,117,4],[101,10,117,8,"offset"],[101,16,117,14],[101,19,117,17],[101,20,117,18],[101,23,117,21,"buffer"],[101,29,117,27],[101,30,117,28,"length"],[101,36,117,34],[101,38,117,36],[101,45,117,43],[101,49,117,47],[102,6,118,4,"num"],[102,9,118,7],[102,12,118,10,"tools"],[102,17,118,15],[102,18,118,16,"readUInt16"],[102,28,118,26],[102,29,118,27,"buffer"],[102,35,118,33],[102,37,118,35,"offset"],[102,43,118,41],[102,46,118,44],[102,47,118,45],[102,49,118,47],[102,53,118,51],[102,54,118,52],[103,6,119,4,"size"],[103,10,119,8],[103,13,119,11],[103,14,119,12],[104,6,120,4],[105,4,121,2],[105,5,121,3],[105,11,121,9],[106,6,122,4],[106,10,122,8,"offset"],[106,16,122,14],[106,19,122,17],[106,20,122,18],[106,23,122,21,"buffer"],[106,29,122,27],[106,30,122,28,"length"],[106,36,122,34],[106,38,122,36],[106,45,122,43],[106,49,122,47],[107,6,123,4],[107,10,123,8,"opcode"],[107,16,123,14],[107,21,123,19,"_$$_REQUIRE"],[107,32,123,19],[107,33,123,19,"_dependencyMap"],[107,47,123,19],[107,65,123,28,"OPS"],[107,68,123,31],[107,69,123,32,"OP_PUSHDATA4"],[107,81,123,44],[107,83,124,6],[107,89,124,12],[107,93,124,16,"Error"],[107,98,124,21],[107,99,124,22],[107,118,124,41],[107,119,124,42],[108,6,125,4,"num"],[108,9,125,7],[108,12,125,10,"tools"],[108,17,125,15],[108,18,125,16,"readUInt32"],[108,28,125,26],[108,29,125,27,"buffer"],[108,35,125,33],[108,37,125,35,"offset"],[108,43,125,41],[108,46,125,44],[108,47,125,45],[108,49,125,47],[108,53,125,51],[108,54,125,52],[109,6,126,4,"size"],[109,10,126,8],[109,13,126,11],[109,14,126,12],[110,4,127,2],[111,4,128,2],[111,11,128,9],[112,6,129,4,"opcode"],[112,12,129,10],[112,14,129,4,"opcode"],[112,20,129,10],[113,6,130,4,"number"],[113,12,130,10],[113,14,130,12,"num"],[113,17,130,15],[114,6,131,4,"size"],[114,10,131,8],[114,12,131,4,"size"],[115,4,132,2],[115,5,132,3],[116,2,133,0],[117,0,133,1],[117,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","encodingLength","encode","decode"],"mappings":"AAA;MCI;iBCS;aDE;ODI;MCC;ODG;MCI;ODE;MCC;ODE;ECG;GDS;AGY;CHQ;AIW;CJmB;AKO;CL+B"}},"type":"js/module"}]}