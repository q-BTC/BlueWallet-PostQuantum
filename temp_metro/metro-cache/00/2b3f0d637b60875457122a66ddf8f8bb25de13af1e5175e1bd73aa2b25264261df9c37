{"dependencies":[{"name":"minimalistic-crypto-utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}},{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}},{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}},{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}},{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}},{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}},{"start":{"line":4,"column":12,"index":58},"end":{"line":4,"column":48,"index":94}}],"key":"LxQwbyF4lUQg/qW6zaXeo9xbNJM="}},{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":109},"end":{"line":5,"column":43,"index":139}},{"start":{"line":5,"column":13,"index":109},"end":{"line":5,"column":43,"index":139}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM="}},{"name":"hash.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":29,"index":44}}],"key":"wgL2kNc06mq/tMLGadAVxXPgynA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function HmacDRBG(options) {\n    if (!(this instanceof HmacDRBG)) return new HmacDRBG(options);\n    this.hash = options.hash;\n    this.predResist = !!options.predResist;\n    this.outLen = this.hash.outSize;\n    this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n    this._reseed = null;\n    this.reseedInterval = null;\n    this.K = null;\n    this.V = null;\n    var entropy = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").toArray(options.entropy, options.entropyEnc || 'hex');\n    var nonce = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").toArray(options.nonce, options.nonceEnc || 'hex');\n    var pers = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").toArray(options.pers, options.persEnc || 'hex');\n    _$$_REQUIRE(_dependencyMap[1], \"minimalistic-assert\")(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n    this._init(entropy, nonce, pers);\n  }\n  module.exports = HmacDRBG;\n  HmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n    var seed = entropy.concat(nonce).concat(pers);\n    this.K = new Array(this.outLen / 8);\n    this.V = new Array(this.outLen / 8);\n    for (var i = 0; i < this.V.length; i++) {\n      this.K[i] = 0x00;\n      this.V[i] = 0x01;\n    }\n    this._update(seed);\n    this._reseed = 1;\n    this.reseedInterval = 0x1000000000000; // 2^48\n  };\n  HmacDRBG.prototype._hmac = function hmac() {\n    return new (_$$_REQUIRE(_dependencyMap[2], \"hash.js\").hmac)(this.hash, this.K);\n  };\n  HmacDRBG.prototype._update = function update(seed) {\n    var kmac = this._hmac().update(this.V).update([0x00]);\n    if (seed) kmac = kmac.update(seed);\n    this.K = kmac.digest();\n    this.V = this._hmac().update(this.V).digest();\n    if (!seed) return;\n    this.K = this._hmac().update(this.V).update([0x01]).update(seed).digest();\n    this.V = this._hmac().update(this.V).digest();\n  };\n  HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n    // Optional entropy enc\n    if (typeof entropyEnc !== 'string') {\n      addEnc = add;\n      add = entropyEnc;\n      entropyEnc = null;\n    }\n    entropy = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").toArray(entropy, entropyEnc);\n    add = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").toArray(add, addEnc);\n    _$$_REQUIRE(_dependencyMap[1], \"minimalistic-assert\")(entropy.length >= this.minEntropy / 8, 'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n    this._update(entropy.concat(add || []));\n    this._reseed = 1;\n  };\n  HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n    if (this._reseed > this.reseedInterval) throw new Error('Reseed is required');\n\n    // Optional encoding\n    if (typeof enc !== 'string') {\n      addEnc = add;\n      add = enc;\n      enc = null;\n    }\n\n    // Optional additional data\n    if (add) {\n      add = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").toArray(add, addEnc || 'hex');\n      this._update(add);\n    }\n    var temp = [];\n    while (temp.length < len) {\n      this.V = this._hmac().update(this.V).digest();\n      temp = temp.concat(this.V);\n    }\n    var res = temp.slice(0, len);\n    this._update(add);\n    this._reseed++;\n    return _$$_REQUIRE(_dependencyMap[0], \"minimalistic-crypto-utils\").encode(res, enc);\n  };\n});","lineCount":83,"map":[[2,2,1,0],[2,14,1,12],[4,2,7,0],[4,11,7,9,"HmacDRBG"],[4,19,7,17,"HmacDRBG"],[4,20,7,18,"options"],[4,27,7,25],[4,29,7,27],[5,4,8,2],[5,8,8,6],[5,10,8,8],[5,14,8,12],[5,26,8,24,"HmacDRBG"],[5,34,8,32],[5,35,8,33],[5,37,9,4],[5,44,9,11],[5,48,9,15,"HmacDRBG"],[5,56,9,23],[5,57,9,24,"options"],[5,64,9,31],[5,65,9,32],[6,4,10,2],[6,8,10,6],[6,9,10,7,"hash"],[6,13,10,11],[6,16,10,14,"options"],[6,23,10,21],[6,24,10,22,"hash"],[6,28,10,26],[7,4,11,2],[7,8,11,6],[7,9,11,7,"predResist"],[7,19,11,17],[7,22,11,20],[7,23,11,21],[7,24,11,22,"options"],[7,31,11,29],[7,32,11,30,"predResist"],[7,42,11,40],[8,4,13,2],[8,8,13,6],[8,9,13,7,"outLen"],[8,15,13,13],[8,18,13,16],[8,22,13,20],[8,23,13,21,"hash"],[8,27,13,25],[8,28,13,26,"outSize"],[8,35,13,33],[9,4,14,2],[9,8,14,6],[9,9,14,7,"minEntropy"],[9,19,14,17],[9,22,14,20,"options"],[9,29,14,27],[9,30,14,28,"minEntropy"],[9,40,14,38],[9,44,14,42],[9,48,14,46],[9,49,14,47,"hash"],[9,53,14,51],[9,54,14,52,"hmacStrength"],[9,66,14,64],[10,4,16,2],[10,8,16,6],[10,9,16,7,"_reseed"],[10,16,16,14],[10,19,16,17],[10,23,16,21],[11,4,17,2],[11,8,17,6],[11,9,17,7,"reseedInterval"],[11,23,17,21],[11,26,17,24],[11,30,17,28],[12,4,18,2],[12,8,18,6],[12,9,18,7,"K"],[12,10,18,8],[12,13,18,11],[12,17,18,15],[13,4,19,2],[13,8,19,6],[13,9,19,7,"V"],[13,10,19,8],[13,13,19,11],[13,17,19,15],[14,4,21,2],[14,8,21,6,"entropy"],[14,15,21,13],[14,18,21,16,"_$$_REQUIRE"],[14,29,21,16],[14,30,21,16,"_dependencyMap"],[14,44,21,16],[14,78,21,22,"toArray"],[14,85,21,29],[14,86,21,30,"options"],[14,93,21,37],[14,94,21,38,"entropy"],[14,101,21,45],[14,103,21,47,"options"],[14,110,21,54],[14,111,21,55,"entropyEnc"],[14,121,21,65],[14,125,21,69],[14,130,21,74],[14,131,21,75],[15,4,22,2],[15,8,22,6,"nonce"],[15,13,22,11],[15,16,22,14,"_$$_REQUIRE"],[15,27,22,14],[15,28,22,14,"_dependencyMap"],[15,42,22,14],[15,76,22,20,"toArray"],[15,83,22,27],[15,84,22,28,"options"],[15,91,22,35],[15,92,22,36,"nonce"],[15,97,22,41],[15,99,22,43,"options"],[15,106,22,50],[15,107,22,51,"nonceEnc"],[15,115,22,59],[15,119,22,63],[15,124,22,68],[15,125,22,69],[16,4,23,2],[16,8,23,6,"pers"],[16,12,23,10],[16,15,23,13,"_$$_REQUIRE"],[16,26,23,13],[16,27,23,13,"_dependencyMap"],[16,41,23,13],[16,75,23,19,"toArray"],[16,82,23,26],[16,83,23,27,"options"],[16,90,23,34],[16,91,23,35,"pers"],[16,95,23,39],[16,97,23,41,"options"],[16,104,23,48],[16,105,23,49,"persEnc"],[16,112,23,56],[16,116,23,60],[16,121,23,65],[16,122,23,66],[17,4,24,2,"_$$_REQUIRE"],[17,15,24,2],[17,16,24,2,"_dependencyMap"],[17,30,24,2],[17,58,24,9,"entropy"],[17,65,24,16],[17,66,24,17,"length"],[17,72,24,23],[17,76,24,28],[17,80,24,32],[17,81,24,33,"minEntropy"],[17,91,24,43],[17,94,24,46],[17,95,24,48],[17,97,25,9],[17,131,25,43],[17,134,25,46],[17,138,25,50],[17,139,25,51,"minEntropy"],[17,149,25,61],[17,152,25,64],[17,159,25,71],[17,160,25,72],[18,4,26,2],[18,8,26,6],[18,9,26,7,"_init"],[18,14,26,12],[18,15,26,13,"entropy"],[18,22,26,20],[18,24,26,22,"nonce"],[18,29,26,27],[18,31,26,29,"pers"],[18,35,26,33],[18,36,26,34],[19,2,27,0],[20,2,28,0,"module"],[20,8,28,6],[20,9,28,7,"exports"],[20,16,28,14],[20,19,28,17,"HmacDRBG"],[20,27,28,25],[21,2,30,0,"HmacDRBG"],[21,10,30,8],[21,11,30,9,"prototype"],[21,20,30,18],[21,21,30,19,"_init"],[21,26,30,24],[21,29,30,27],[21,38,30,36,"init"],[21,42,30,40,"init"],[21,43,30,41,"entropy"],[21,50,30,48],[21,52,30,50,"nonce"],[21,57,30,55],[21,59,30,57,"pers"],[21,63,30,61],[21,65,30,63],[22,4,31,2],[22,8,31,6,"seed"],[22,12,31,10],[22,15,31,13,"entropy"],[22,22,31,20],[22,23,31,21,"concat"],[22,29,31,27],[22,30,31,28,"nonce"],[22,35,31,33],[22,36,31,34],[22,37,31,35,"concat"],[22,43,31,41],[22,44,31,42,"pers"],[22,48,31,46],[22,49,31,47],[23,4,33,2],[23,8,33,6],[23,9,33,7,"K"],[23,10,33,8],[23,13,33,11],[23,17,33,15,"Array"],[23,22,33,20],[23,23,33,21],[23,27,33,25],[23,28,33,26,"outLen"],[23,34,33,32],[23,37,33,35],[23,38,33,36],[23,39,33,37],[24,4,34,2],[24,8,34,6],[24,9,34,7,"V"],[24,10,34,8],[24,13,34,11],[24,17,34,15,"Array"],[24,22,34,20],[24,23,34,21],[24,27,34,25],[24,28,34,26,"outLen"],[24,34,34,32],[24,37,34,35],[24,38,34,36],[24,39,34,37],[25,4,35,2],[25,9,35,7],[25,13,35,11,"i"],[25,14,35,12],[25,17,35,15],[25,18,35,16],[25,20,35,18,"i"],[25,21,35,19],[25,24,35,22],[25,28,35,26],[25,29,35,27,"V"],[25,30,35,28],[25,31,35,29,"length"],[25,37,35,35],[25,39,35,37,"i"],[25,40,35,38],[25,42,35,40],[25,44,35,42],[26,6,36,4],[26,10,36,8],[26,11,36,9,"K"],[26,12,36,10],[26,13,36,11,"i"],[26,14,36,12],[26,15,36,13],[26,18,36,16],[26,22,36,20],[27,6,37,4],[27,10,37,8],[27,11,37,9,"V"],[27,12,37,10],[27,13,37,11,"i"],[27,14,37,12],[27,15,37,13],[27,18,37,16],[27,22,37,20],[28,4,38,2],[29,4,40,2],[29,8,40,6],[29,9,40,7,"_update"],[29,16,40,14],[29,17,40,15,"seed"],[29,21,40,19],[29,22,40,20],[30,4,41,2],[30,8,41,6],[30,9,41,7,"_reseed"],[30,16,41,14],[30,19,41,17],[30,20,41,18],[31,4,42,2],[31,8,42,6],[31,9,42,7,"reseedInterval"],[31,23,42,21],[31,26,42,24],[31,41,42,39],[31,42,42,40],[31,43,42,42],[32,2,43,0],[32,3,43,1],[33,2,45,0,"HmacDRBG"],[33,10,45,8],[33,11,45,9,"prototype"],[33,20,45,18],[33,21,45,19,"_hmac"],[33,26,45,24],[33,29,45,27],[33,38,45,36,"hmac"],[33,42,45,40,"hmac"],[33,43,45,40],[33,45,45,43],[34,4,46,2],[34,11,46,9],[34,16,46,13,"_$$_REQUIRE"],[34,27,46,13],[34,28,46,13,"_dependencyMap"],[34,42,46,13],[34,58,46,18,"hmac"],[34,62,46,22],[34,64,46,23],[34,68,46,27],[34,69,46,28,"hash"],[34,73,46,32],[34,75,46,34],[34,79,46,38],[34,80,46,39,"K"],[34,81,46,40],[34,82,46,41],[35,2,47,0],[35,3,47,1],[36,2,49,0,"HmacDRBG"],[36,10,49,8],[36,11,49,9,"prototype"],[36,20,49,18],[36,21,49,19,"_update"],[36,28,49,26],[36,31,49,29],[36,40,49,38,"update"],[36,46,49,44,"update"],[36,47,49,45,"seed"],[36,51,49,49],[36,53,49,51],[37,4,50,2],[37,8,50,6,"kmac"],[37,12,50,10],[37,15,50,13],[37,19,50,17],[37,20,50,18,"_hmac"],[37,25,50,23],[37,26,50,24],[37,27,50,25],[37,28,51,18,"update"],[37,34,51,24],[37,35,51,25],[37,39,51,29],[37,40,51,30,"V"],[37,41,51,31],[37,42,51,32],[37,43,52,18,"update"],[37,49,52,24],[37,50,52,25],[37,51,52,27],[37,55,52,31],[37,56,52,33],[37,57,52,34],[38,4,53,2],[38,8,53,6,"seed"],[38,12,53,10],[38,14,54,4,"kmac"],[38,18,54,8],[38,21,54,11,"kmac"],[38,25,54,15],[38,26,54,16,"update"],[38,32,54,22],[38,33,54,23,"seed"],[38,37,54,27],[38,38,54,28],[39,4,55,2],[39,8,55,6],[39,9,55,7,"K"],[39,10,55,8],[39,13,55,11,"kmac"],[39,17,55,15],[39,18,55,16,"digest"],[39,24,55,22],[39,25,55,23],[39,26,55,24],[40,4,56,2],[40,8,56,6],[40,9,56,7,"V"],[40,10,56,8],[40,13,56,11],[40,17,56,15],[40,18,56,16,"_hmac"],[40,23,56,21],[40,24,56,22],[40,25,56,23],[40,26,56,24,"update"],[40,32,56,30],[40,33,56,31],[40,37,56,35],[40,38,56,36,"V"],[40,39,56,37],[40,40,56,38],[40,41,56,39,"digest"],[40,47,56,45],[40,48,56,46],[40,49,56,47],[41,4,57,2],[41,8,57,6],[41,9,57,7,"seed"],[41,13,57,11],[41,15,58,4],[42,4,60,2],[42,8,60,6],[42,9,60,7,"K"],[42,10,60,8],[42,13,60,11],[42,17,60,15],[42,18,60,16,"_hmac"],[42,23,60,21],[42,24,60,22],[42,25,60,23],[42,26,61,16,"update"],[42,32,61,22],[42,33,61,23],[42,37,61,27],[42,38,61,28,"V"],[42,39,61,29],[42,40,61,30],[42,41,62,16,"update"],[42,47,62,22],[42,48,62,23],[42,49,62,25],[42,53,62,29],[42,54,62,31],[42,55,62,32],[42,56,63,16,"update"],[42,62,63,22],[42,63,63,23,"seed"],[42,67,63,27],[42,68,63,28],[42,69,64,16,"digest"],[42,75,64,22],[42,76,64,23],[42,77,64,24],[43,4,65,2],[43,8,65,6],[43,9,65,7,"V"],[43,10,65,8],[43,13,65,11],[43,17,65,15],[43,18,65,16,"_hmac"],[43,23,65,21],[43,24,65,22],[43,25,65,23],[43,26,65,24,"update"],[43,32,65,30],[43,33,65,31],[43,37,65,35],[43,38,65,36,"V"],[43,39,65,37],[43,40,65,38],[43,41,65,39,"digest"],[43,47,65,45],[43,48,65,46],[43,49,65,47],[44,2,66,0],[44,3,66,1],[45,2,68,0,"HmacDRBG"],[45,10,68,8],[45,11,68,9,"prototype"],[45,20,68,18],[45,21,68,19,"reseed"],[45,27,68,25],[45,30,68,28],[45,39,68,37,"reseed"],[45,45,68,43,"reseed"],[45,46,68,44,"entropy"],[45,53,68,51],[45,55,68,53,"entropyEnc"],[45,65,68,63],[45,67,68,65,"add"],[45,70,68,68],[45,72,68,70,"addEnc"],[45,78,68,76],[45,80,68,78],[46,4,69,2],[47,4,70,2],[47,8,70,6],[47,15,70,13,"entropyEnc"],[47,25,70,23],[47,30,70,28],[47,38,70,36],[47,40,70,38],[48,6,71,4,"addEnc"],[48,12,71,10],[48,15,71,13,"add"],[48,18,71,16],[49,6,72,4,"add"],[49,9,72,7],[49,12,72,10,"entropyEnc"],[49,22,72,20],[50,6,73,4,"entropyEnc"],[50,16,73,14],[50,19,73,17],[50,23,73,21],[51,4,74,2],[52,4,76,2,"entropy"],[52,11,76,9],[52,14,76,12,"_$$_REQUIRE"],[52,25,76,12],[52,26,76,12,"_dependencyMap"],[52,40,76,12],[52,74,76,18,"toArray"],[52,81,76,25],[52,82,76,26,"entropy"],[52,89,76,33],[52,91,76,35,"entropyEnc"],[52,101,76,45],[52,102,76,46],[53,4,77,2,"add"],[53,7,77,5],[53,10,77,8,"_$$_REQUIRE"],[53,21,77,8],[53,22,77,8,"_dependencyMap"],[53,36,77,8],[53,70,77,14,"toArray"],[53,77,77,21],[53,78,77,22,"add"],[53,81,77,25],[53,83,77,27,"addEnc"],[53,89,77,33],[53,90,77,34],[54,4,79,2,"_$$_REQUIRE"],[54,15,79,2],[54,16,79,2,"_dependencyMap"],[54,30,79,2],[54,58,79,9,"entropy"],[54,65,79,16],[54,66,79,17,"length"],[54,72,79,23],[54,76,79,28],[54,80,79,32],[54,81,79,33,"minEntropy"],[54,91,79,43],[54,94,79,46],[54,95,79,48],[54,97,80,9],[54,131,80,43],[54,134,80,46],[54,138,80,50],[54,139,80,51,"minEntropy"],[54,149,80,61],[54,152,80,64],[54,159,80,71],[54,160,80,72],[55,4,82,2],[55,8,82,6],[55,9,82,7,"_update"],[55,16,82,14],[55,17,82,15,"entropy"],[55,24,82,22],[55,25,82,23,"concat"],[55,31,82,29],[55,32,82,30,"add"],[55,35,82,33],[55,39,82,37],[55,41,82,39],[55,42,82,40],[55,43,82,41],[56,4,83,2],[56,8,83,6],[56,9,83,7,"_reseed"],[56,16,83,14],[56,19,83,17],[56,20,83,18],[57,2,84,0],[57,3,84,1],[58,2,86,0,"HmacDRBG"],[58,10,86,8],[58,11,86,9,"prototype"],[58,20,86,18],[58,21,86,19,"generate"],[58,29,86,27],[58,32,86,30],[58,41,86,39,"generate"],[58,49,86,47,"generate"],[58,50,86,48,"len"],[58,53,86,51],[58,55,86,53,"enc"],[58,58,86,56],[58,60,86,58,"add"],[58,63,86,61],[58,65,86,63,"addEnc"],[58,71,86,69],[58,73,86,71],[59,4,87,2],[59,8,87,6],[59,12,87,10],[59,13,87,11,"_reseed"],[59,20,87,18],[59,23,87,21],[59,27,87,25],[59,28,87,26,"reseedInterval"],[59,42,87,40],[59,44,88,4],[59,50,88,10],[59,54,88,14,"Error"],[59,59,88,19],[59,60,88,20],[59,80,88,40],[59,81,88,41],[61,4,90,2],[62,4,91,2],[62,8,91,6],[62,15,91,13,"enc"],[62,18,91,16],[62,23,91,21],[62,31,91,29],[62,33,91,31],[63,6,92,4,"addEnc"],[63,12,92,10],[63,15,92,13,"add"],[63,18,92,16],[64,6,93,4,"add"],[64,9,93,7],[64,12,93,10,"enc"],[64,15,93,13],[65,6,94,4,"enc"],[65,9,94,7],[65,12,94,10],[65,16,94,14],[66,4,95,2],[68,4,97,2],[69,4,98,2],[69,8,98,6,"add"],[69,11,98,9],[69,13,98,11],[70,6,99,4,"add"],[70,9,99,7],[70,12,99,10,"_$$_REQUIRE"],[70,23,99,10],[70,24,99,10,"_dependencyMap"],[70,38,99,10],[70,72,99,16,"toArray"],[70,79,99,23],[70,80,99,24,"add"],[70,83,99,27],[70,85,99,29,"addEnc"],[70,91,99,35],[70,95,99,39],[70,100,99,44],[70,101,99,45],[71,6,100,4],[71,10,100,8],[71,11,100,9,"_update"],[71,18,100,16],[71,19,100,17,"add"],[71,22,100,20],[71,23,100,21],[72,4,101,2],[73,4,103,2],[73,8,103,6,"temp"],[73,12,103,10],[73,15,103,13],[73,17,103,15],[74,4,104,2],[74,11,104,9,"temp"],[74,15,104,13],[74,16,104,14,"length"],[74,22,104,20],[74,25,104,23,"len"],[74,28,104,26],[74,30,104,28],[75,6,105,4],[75,10,105,8],[75,11,105,9,"V"],[75,12,105,10],[75,15,105,13],[75,19,105,17],[75,20,105,18,"_hmac"],[75,25,105,23],[75,26,105,24],[75,27,105,25],[75,28,105,26,"update"],[75,34,105,32],[75,35,105,33],[75,39,105,37],[75,40,105,38,"V"],[75,41,105,39],[75,42,105,40],[75,43,105,41,"digest"],[75,49,105,47],[75,50,105,48],[75,51,105,49],[76,6,106,4,"temp"],[76,10,106,8],[76,13,106,11,"temp"],[76,17,106,15],[76,18,106,16,"concat"],[76,24,106,22],[76,25,106,23],[76,29,106,27],[76,30,106,28,"V"],[76,31,106,29],[76,32,106,30],[77,4,107,2],[78,4,109,2],[78,8,109,6,"res"],[78,11,109,9],[78,14,109,12,"temp"],[78,18,109,16],[78,19,109,17,"slice"],[78,24,109,22],[78,25,109,23],[78,26,109,24],[78,28,109,26,"len"],[78,31,109,29],[78,32,109,30],[79,4,110,2],[79,8,110,6],[79,9,110,7,"_update"],[79,16,110,14],[79,17,110,15,"add"],[79,20,110,18],[79,21,110,19],[80,4,111,2],[80,8,111,6],[80,9,111,7,"_reseed"],[80,16,111,14],[80,18,111,16],[81,4,112,2],[81,11,112,9,"_$$_REQUIRE"],[81,22,112,9],[81,23,112,9,"_dependencyMap"],[81,37,112,9],[81,71,112,15,"encode"],[81,77,112,21],[81,78,112,22,"res"],[81,81,112,25],[81,83,112,27,"enc"],[81,86,112,30],[81,87,112,31],[82,2,113,0],[82,3,113,1],[83,0,113,2],[83,3]],"functionMap":{"names":["<global>","HmacDRBG","init","hmac","update","reseed","generate"],"mappings":"AAA;ACM;CDoB;2BEG;CFa;2BGE;CHE;6BIE;CJiB;4BKE;CLgB;8BME;CN2B"}},"type":"js/module"}]}