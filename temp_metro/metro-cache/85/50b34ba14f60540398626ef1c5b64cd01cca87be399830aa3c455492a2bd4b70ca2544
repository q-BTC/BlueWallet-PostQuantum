{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}},{"start":{"line":2,"column":13,"index":40},"end":{"line":2,"column":42,"index":69}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"./ghash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":156},"end":{"line":5,"column":30,"index":174}},{"start":{"line":5,"column":12,"index":156},"end":{"line":5,"column":30,"index":174}}],"key":"rh1V2JJ9rZmhj6/loXu96hxOCP4="}},{"name":"./incr32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":220},"end":{"line":7,"column":32,"index":239}}],"key":"zcr56OJUqEpUr4ZWm9KyNM2j9i0="}},{"name":"cipher-base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":86},"end":{"line":3,"column":38,"index":108}},{"start":{"line":3,"column":16,"index":86},"end":{"line":3,"column":38,"index":108}}],"key":"7cV2V6tRDydrl9neigZg5XnvIlM="}},{"name":"./aes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":26,"index":26}}],"key":"G/82SQzdqJhdLM5k25Jdi3kHjCY="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":124},"end":{"line":4,"column":34,"index":143}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"buffer-xor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":10,"index":185},"end":{"line":6,"column":31,"index":206}}],"key":"loeSrW6/3vzsFLRxgE5dDkO1O/w="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function xorTest(a, b) {\n    var out = 0;\n    if (a.length !== b.length) out++;\n    var len = Math.min(a.length, b.length);\n    for (var i = 0; i < len; ++i) {\n      out += a[i] ^ b[i];\n    }\n    return out;\n  }\n  function calcIv(self, iv, ck) {\n    if (iv.length === 12) {\n      self._finID = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.concat([iv, _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from([0, 0, 0, 1])]);\n      return _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.concat([iv, _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from([0, 0, 0, 2])]);\n    }\n    var ghash = new (_$$_REQUIRE(_dependencyMap[1], \"./ghash\"))(ck);\n    var len = iv.length;\n    var toPad = len % 16;\n    ghash.update(iv);\n    if (toPad) {\n      toPad = 16 - toPad;\n      ghash.update(_$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(toPad, 0));\n    }\n    ghash.update(_$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(8, 0));\n    var ivBits = len * 8;\n    var tail = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(8);\n    tail.writeUIntBE(ivBits, 0, 8);\n    ghash.update(tail);\n    self._finID = ghash.state;\n    var out = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from(self._finID);\n    _$$_REQUIRE(_dependencyMap[2], \"./incr32\")(out);\n    return out;\n  }\n  function StreamCipher(mode, key, iv, decrypt) {\n    _$$_REQUIRE(_dependencyMap[3], \"cipher-base\").call(this);\n    var h = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(4, 0);\n    this._cipher = new (_$$_REQUIRE(_dependencyMap[4], \"./aes\").AES)(key);\n    var ck = this._cipher.encryptBlock(h);\n    this._ghash = new (_$$_REQUIRE(_dependencyMap[1], \"./ghash\"))(ck);\n    iv = calcIv(this, iv, ck);\n    this._prev = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from(iv);\n    this._cache = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.allocUnsafe(0);\n    this._secCache = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.allocUnsafe(0);\n    this._decrypt = decrypt;\n    this._alen = 0;\n    this._len = 0;\n    this._mode = mode;\n    this._authTag = null;\n    this._called = false;\n  }\n  _$$_REQUIRE(_dependencyMap[5], \"inherits\")(StreamCipher, _$$_REQUIRE(_dependencyMap[3], \"cipher-base\"));\n  StreamCipher.prototype._update = function (chunk) {\n    if (!this._called && this._alen) {\n      var rump = 16 - this._alen % 16;\n      if (rump < 16) {\n        rump = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(rump, 0);\n        this._ghash.update(rump);\n      }\n    }\n    this._called = true;\n    var out = this._mode.encrypt(this, chunk);\n    if (this._decrypt) {\n      this._ghash.update(chunk);\n    } else {\n      this._ghash.update(out);\n    }\n    this._len += chunk.length;\n    return out;\n  };\n  StreamCipher.prototype._final = function () {\n    if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data');\n    var tag = _$$_REQUIRE(_dependencyMap[6], \"buffer-xor\")(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID));\n    if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data');\n    this._authTag = tag;\n    this._cipher.scrub();\n  };\n  StreamCipher.prototype.getAuthTag = function getAuthTag() {\n    if (this._decrypt || !_$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state');\n    return this._authTag;\n  };\n  StreamCipher.prototype.setAuthTag = function setAuthTag(tag) {\n    if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state');\n    this._authTag = tag;\n  };\n  StreamCipher.prototype.setAAD = function setAAD(buf) {\n    if (this._called) throw new Error('Attempting to set AAD in unsupported state');\n    this._ghash.update(buf);\n    this._alen += buf.length;\n  };\n  module.exports = StreamCipher;\n});","lineCount":91,"map":[[2,2,9,0],[2,11,9,9,"xorTest"],[2,18,9,16,"xorTest"],[2,19,9,18,"a"],[2,20,9,19],[2,22,9,21,"b"],[2,23,9,22],[2,25,9,24],[3,4,10,2],[3,8,10,6,"out"],[3,11,10,9],[3,14,10,12],[3,15,10,13],[4,4,11,2],[4,8,11,6,"a"],[4,9,11,7],[4,10,11,8,"length"],[4,16,11,14],[4,21,11,19,"b"],[4,22,11,20],[4,23,11,21,"length"],[4,29,11,27],[4,31,11,29,"out"],[4,34,11,32],[4,36,11,34],[5,4,13,2],[5,8,13,6,"len"],[5,11,13,9],[5,14,13,12,"Math"],[5,18,13,16],[5,19,13,17,"min"],[5,22,13,20],[5,23,13,21,"a"],[5,24,13,22],[5,25,13,23,"length"],[5,31,13,29],[5,33,13,31,"b"],[5,34,13,32],[5,35,13,33,"length"],[5,41,13,39],[5,42,13,40],[6,4,14,2],[6,9,14,7],[6,13,14,11,"i"],[6,14,14,12],[6,17,14,15],[6,18,14,16],[6,20,14,18,"i"],[6,21,14,19],[6,24,14,22,"len"],[6,27,14,25],[6,29,14,27],[6,31,14,29,"i"],[6,32,14,30],[6,34,14,32],[7,6,15,4,"out"],[7,9,15,7],[7,13,15,12,"a"],[7,14,15,13],[7,15,15,14,"i"],[7,16,15,15],[7,17,15,16],[7,20,15,19,"b"],[7,21,15,20],[7,22,15,21,"i"],[7,23,15,22],[7,24,15,24],[8,4,16,2],[9,4,18,2],[9,11,18,9,"out"],[9,14,18,12],[10,2,19,0],[11,2,21,0],[11,11,21,9,"calcIv"],[11,17,21,15,"calcIv"],[11,18,21,17,"self"],[11,22,21,21],[11,24,21,23,"iv"],[11,26,21,25],[11,28,21,27,"ck"],[11,30,21,29],[11,32,21,31],[12,4,22,2],[12,8,22,6,"iv"],[12,10,22,8],[12,11,22,9,"length"],[12,17,22,15],[12,22,22,20],[12,24,22,22],[12,26,22,24],[13,6,23,4,"self"],[13,10,23,8],[13,11,23,9,"_finID"],[13,17,23,15],[13,20,23,18,"_$$_REQUIRE"],[13,31,23,18],[13,32,23,18,"_dependencyMap"],[13,46,23,18],[13,66,23,18,"Buffer"],[13,72,23,18],[13,73,23,25,"concat"],[13,79,23,31],[13,80,23,32],[13,81,23,33,"iv"],[13,83,23,35],[13,85,23,37,"_$$_REQUIRE"],[13,96,23,37],[13,97,23,37,"_dependencyMap"],[13,111,23,37],[13,131,23,37,"Buffer"],[13,137,23,37],[13,138,23,44,"from"],[13,142,23,48],[13,143,23,49],[13,144,23,50],[13,145,23,51],[13,147,23,53],[13,148,23,54],[13,150,23,56],[13,151,23,57],[13,153,23,59],[13,154,23,60],[13,155,23,61],[13,156,23,62],[13,157,23,63],[13,158,23,64],[14,6,24,4],[14,13,24,11,"_$$_REQUIRE"],[14,24,24,11],[14,25,24,11,"_dependencyMap"],[14,39,24,11],[14,59,24,11,"Buffer"],[14,65,24,11],[14,66,24,18,"concat"],[14,72,24,24],[14,73,24,25],[14,74,24,26,"iv"],[14,76,24,28],[14,78,24,30,"_$$_REQUIRE"],[14,89,24,30],[14,90,24,30,"_dependencyMap"],[14,104,24,30],[14,124,24,30,"Buffer"],[14,130,24,30],[14,131,24,37,"from"],[14,135,24,41],[14,136,24,42],[14,137,24,43],[14,138,24,44],[14,140,24,46],[14,141,24,47],[14,143,24,49],[14,144,24,50],[14,146,24,52],[14,147,24,53],[14,148,24,54],[14,149,24,55],[14,150,24,56],[14,151,24,57],[15,4,25,2],[16,4,26,2],[16,8,26,6,"ghash"],[16,13,26,11],[16,16,26,14],[16,21,26,14,"_$$_REQUIRE"],[16,32,26,14],[16,33,26,14,"_dependencyMap"],[16,47,26,14],[16,64,26,24,"ck"],[16,66,26,26],[16,67,26,27],[17,4,27,2],[17,8,27,6,"len"],[17,11,27,9],[17,14,27,12,"iv"],[17,16,27,14],[17,17,27,15,"length"],[17,23,27,21],[18,4,28,2],[18,8,28,6,"toPad"],[18,13,28,11],[18,16,28,14,"len"],[18,19,28,17],[18,22,28,20],[18,24,28,22],[19,4,29,2,"ghash"],[19,9,29,7],[19,10,29,8,"update"],[19,16,29,14],[19,17,29,15,"iv"],[19,19,29,17],[19,20,29,18],[20,4,30,2],[20,8,30,6,"toPad"],[20,13,30,11],[20,15,30,13],[21,6,31,4,"toPad"],[21,11,31,9],[21,14,31,12],[21,16,31,14],[21,19,31,17,"toPad"],[21,24,31,22],[22,6,32,4,"ghash"],[22,11,32,9],[22,12,32,10,"update"],[22,18,32,16],[22,19,32,17,"_$$_REQUIRE"],[22,30,32,17],[22,31,32,17,"_dependencyMap"],[22,45,32,17],[22,65,32,17,"Buffer"],[22,71,32,17],[22,72,32,24,"alloc"],[22,77,32,29],[22,78,32,30,"toPad"],[22,83,32,35],[22,85,32,37],[22,86,32,38],[22,87,32,39],[22,88,32,40],[23,4,33,2],[24,4,34,2,"ghash"],[24,9,34,7],[24,10,34,8,"update"],[24,16,34,14],[24,17,34,15,"_$$_REQUIRE"],[24,28,34,15],[24,29,34,15,"_dependencyMap"],[24,43,34,15],[24,63,34,15,"Buffer"],[24,69,34,15],[24,70,34,22,"alloc"],[24,75,34,27],[24,76,34,28],[24,77,34,29],[24,79,34,31],[24,80,34,32],[24,81,34,33],[24,82,34,34],[25,4,35,2],[25,8,35,6,"ivBits"],[25,14,35,12],[25,17,35,15,"len"],[25,20,35,18],[25,23,35,21],[25,24,35,22],[26,4,36,2],[26,8,36,6,"tail"],[26,12,36,10],[26,15,36,13,"_$$_REQUIRE"],[26,26,36,13],[26,27,36,13,"_dependencyMap"],[26,41,36,13],[26,61,36,13,"Buffer"],[26,67,36,13],[26,68,36,20,"alloc"],[26,73,36,25],[26,74,36,26],[26,75,36,27],[26,76,36,28],[27,4,37,2,"tail"],[27,8,37,6],[27,9,37,7,"writeUIntBE"],[27,20,37,18],[27,21,37,19,"ivBits"],[27,27,37,25],[27,29,37,27],[27,30,37,28],[27,32,37,30],[27,33,37,31],[27,34,37,32],[28,4,38,2,"ghash"],[28,9,38,7],[28,10,38,8,"update"],[28,16,38,14],[28,17,38,15,"tail"],[28,21,38,19],[28,22,38,20],[29,4,39,2,"self"],[29,8,39,6],[29,9,39,7,"_finID"],[29,15,39,13],[29,18,39,16,"ghash"],[29,23,39,21],[29,24,39,22,"state"],[29,29,39,27],[30,4,40,2],[30,8,40,6,"out"],[30,11,40,9],[30,14,40,12,"_$$_REQUIRE"],[30,25,40,12],[30,26,40,12,"_dependencyMap"],[30,40,40,12],[30,60,40,12,"Buffer"],[30,66,40,12],[30,67,40,19,"from"],[30,71,40,23],[30,72,40,24,"self"],[30,76,40,28],[30,77,40,29,"_finID"],[30,83,40,35],[30,84,40,36],[31,4,41,2,"_$$_REQUIRE"],[31,15,41,2],[31,16,41,2,"_dependencyMap"],[31,30,41,2],[31,47,41,9,"out"],[31,50,41,12],[31,51,41,13],[32,4,42,2],[32,11,42,9,"out"],[32,14,42,12],[33,2,43,0],[34,2,44,0],[34,11,44,9,"StreamCipher"],[34,23,44,21,"StreamCipher"],[34,24,44,23,"mode"],[34,28,44,27],[34,30,44,29,"key"],[34,33,44,32],[34,35,44,34,"iv"],[34,37,44,36],[34,39,44,38,"decrypt"],[34,46,44,45],[34,48,44,47],[35,4,45,2,"_$$_REQUIRE"],[35,15,45,2],[35,16,45,2,"_dependencyMap"],[35,30,45,2],[35,50,45,12,"call"],[35,54,45,16],[35,55,45,17],[35,59,45,21],[35,60,45,22],[36,4,47,2],[36,8,47,6,"h"],[36,9,47,7],[36,12,47,10,"_$$_REQUIRE"],[36,23,47,10],[36,24,47,10,"_dependencyMap"],[36,38,47,10],[36,58,47,10,"Buffer"],[36,64,47,10],[36,65,47,17,"alloc"],[36,70,47,22],[36,71,47,23],[36,72,47,24],[36,74,47,26],[36,75,47,27],[36,76,47,28],[37,4,49,2],[37,8,49,6],[37,9,49,7,"_cipher"],[37,16,49,14],[37,19,49,17],[37,24,49,21,"_$$_REQUIRE"],[37,35,49,21],[37,36,49,21,"_dependencyMap"],[37,50,49,21],[37,64,49,25,"AES"],[37,67,49,28],[37,69,49,29,"key"],[37,72,49,32],[37,73,49,33],[38,4,50,2],[38,8,50,6,"ck"],[38,10,50,8],[38,13,50,11],[38,17,50,15],[38,18,50,16,"_cipher"],[38,25,50,23],[38,26,50,24,"encryptBlock"],[38,38,50,36],[38,39,50,37,"h"],[38,40,50,38],[38,41,50,39],[39,4,51,2],[39,8,51,6],[39,9,51,7,"_ghash"],[39,15,51,13],[39,18,51,16],[39,23,51,16,"_$$_REQUIRE"],[39,34,51,16],[39,35,51,16,"_dependencyMap"],[39,49,51,16],[39,66,51,26,"ck"],[39,68,51,28],[39,69,51,29],[40,4,52,2,"iv"],[40,6,52,4],[40,9,52,7,"calcIv"],[40,15,52,13],[40,16,52,14],[40,20,52,18],[40,22,52,20,"iv"],[40,24,52,22],[40,26,52,24,"ck"],[40,28,52,26],[40,29,52,27],[41,4,54,2],[41,8,54,6],[41,9,54,7,"_prev"],[41,14,54,12],[41,17,54,15,"_$$_REQUIRE"],[41,28,54,15],[41,29,54,15,"_dependencyMap"],[41,43,54,15],[41,63,54,15,"Buffer"],[41,69,54,15],[41,70,54,22,"from"],[41,74,54,26],[41,75,54,27,"iv"],[41,77,54,29],[41,78,54,30],[42,4,55,2],[42,8,55,6],[42,9,55,7,"_cache"],[42,15,55,13],[42,18,55,16,"_$$_REQUIRE"],[42,29,55,16],[42,30,55,16,"_dependencyMap"],[42,44,55,16],[42,64,55,16,"Buffer"],[42,70,55,16],[42,71,55,23,"allocUnsafe"],[42,82,55,34],[42,83,55,35],[42,84,55,36],[42,85,55,37],[43,4,56,2],[43,8,56,6],[43,9,56,7,"_secCache"],[43,18,56,16],[43,21,56,19,"_$$_REQUIRE"],[43,32,56,19],[43,33,56,19,"_dependencyMap"],[43,47,56,19],[43,67,56,19,"Buffer"],[43,73,56,19],[43,74,56,26,"allocUnsafe"],[43,85,56,37],[43,86,56,38],[43,87,56,39],[43,88,56,40],[44,4,57,2],[44,8,57,6],[44,9,57,7,"_decrypt"],[44,17,57,15],[44,20,57,18,"decrypt"],[44,27,57,25],[45,4,58,2],[45,8,58,6],[45,9,58,7,"_alen"],[45,14,58,12],[45,17,58,15],[45,18,58,16],[46,4,59,2],[46,8,59,6],[46,9,59,7,"_len"],[46,13,59,11],[46,16,59,14],[46,17,59,15],[47,4,60,2],[47,8,60,6],[47,9,60,7,"_mode"],[47,14,60,12],[47,17,60,15,"mode"],[47,21,60,19],[48,4,62,2],[48,8,62,6],[48,9,62,7,"_authTag"],[48,17,62,15],[48,20,62,18],[48,24,62,22],[49,4,63,2],[49,8,63,6],[49,9,63,7,"_called"],[49,16,63,14],[49,19,63,17],[49,24,63,22],[50,2,64,0],[51,2,66,0,"_$$_REQUIRE"],[51,13,66,0],[51,14,66,0,"_dependencyMap"],[51,28,66,0],[51,45,66,9,"StreamCipher"],[51,57,66,21],[51,59,66,21,"_$$_REQUIRE"],[51,70,66,21],[51,71,66,21,"_dependencyMap"],[51,85,66,21],[51,104,66,32],[51,105,66,33],[52,2,68,0,"StreamCipher"],[52,14,68,12],[52,15,68,13,"prototype"],[52,24,68,22],[52,25,68,23,"_update"],[52,32,68,30],[52,35,68,33],[52,45,68,43,"chunk"],[52,50,68,48],[52,52,68,50],[53,4,69,2],[53,8,69,6],[53,9,69,7],[53,13,69,11],[53,14,69,12,"_called"],[53,21,69,19],[53,25,69,23],[53,29,69,27],[53,30,69,28,"_alen"],[53,35,69,33],[53,37,69,35],[54,6,70,4],[54,10,70,8,"rump"],[54,14,70,12],[54,17,70,15],[54,19,70,17],[54,22,70,21],[54,26,70,25],[54,27,70,26,"_alen"],[54,32,70,31],[54,35,70,34],[54,37,70,37],[55,6,71,4],[55,10,71,8,"rump"],[55,14,71,12],[55,17,71,15],[55,19,71,17],[55,21,71,19],[56,8,72,6,"rump"],[56,12,72,10],[56,15,72,13,"_$$_REQUIRE"],[56,26,72,13],[56,27,72,13,"_dependencyMap"],[56,41,72,13],[56,61,72,13,"Buffer"],[56,67,72,13],[56,68,72,20,"alloc"],[56,73,72,25],[56,74,72,26,"rump"],[56,78,72,30],[56,80,72,32],[56,81,72,33],[56,82,72,34],[57,8,73,6],[57,12,73,10],[57,13,73,11,"_ghash"],[57,19,73,17],[57,20,73,18,"update"],[57,26,73,24],[57,27,73,25,"rump"],[57,31,73,29],[57,32,73,30],[58,6,74,4],[59,4,75,2],[60,4,77,2],[60,8,77,6],[60,9,77,7,"_called"],[60,16,77,14],[60,19,77,17],[60,23,77,21],[61,4,78,2],[61,8,78,6,"out"],[61,11,78,9],[61,14,78,12],[61,18,78,16],[61,19,78,17,"_mode"],[61,24,78,22],[61,25,78,23,"encrypt"],[61,32,78,30],[61,33,78,31],[61,37,78,35],[61,39,78,37,"chunk"],[61,44,78,42],[61,45,78,43],[62,4,79,2],[62,8,79,6],[62,12,79,10],[62,13,79,11,"_decrypt"],[62,21,79,19],[62,23,79,21],[63,6,80,4],[63,10,80,8],[63,11,80,9,"_ghash"],[63,17,80,15],[63,18,80,16,"update"],[63,24,80,22],[63,25,80,23,"chunk"],[63,30,80,28],[63,31,80,29],[64,4,81,2],[64,5,81,3],[64,11,81,9],[65,6,82,4],[65,10,82,8],[65,11,82,9,"_ghash"],[65,17,82,15],[65,18,82,16,"update"],[65,24,82,22],[65,25,82,23,"out"],[65,28,82,26],[65,29,82,27],[66,4,83,2],[67,4,84,2],[67,8,84,6],[67,9,84,7,"_len"],[67,13,84,11],[67,17,84,15,"chunk"],[67,22,84,20],[67,23,84,21,"length"],[67,29,84,27],[68,4,85,2],[68,11,85,9,"out"],[68,14,85,12],[69,2,86,0],[69,3,86,1],[70,2,88,0,"StreamCipher"],[70,14,88,12],[70,15,88,13,"prototype"],[70,24,88,22],[70,25,88,23,"_final"],[70,31,88,29],[70,34,88,32],[70,46,88,44],[71,4,89,2],[71,8,89,6],[71,12,89,10],[71,13,89,11,"_decrypt"],[71,21,89,19],[71,25,89,23],[71,26,89,24],[71,30,89,28],[71,31,89,29,"_authTag"],[71,39,89,37],[71,41,89,39],[71,47,89,45],[71,51,89,49,"Error"],[71,56,89,54],[71,57,89,55],[71,107,89,105],[71,108,89,106],[72,4,91,2],[72,8,91,6,"tag"],[72,11,91,9],[72,14,91,12,"_$$_REQUIRE"],[72,25,91,12],[72,26,91,12,"_dependencyMap"],[72,40,91,12],[72,59,91,16],[72,63,91,20],[72,64,91,21,"_ghash"],[72,70,91,27],[72,71,91,28,"final"],[72,76,91,33],[72,77,91,34],[72,81,91,38],[72,82,91,39,"_alen"],[72,87,91,44],[72,90,91,47],[72,91,91,48],[72,93,91,50],[72,97,91,54],[72,98,91,55,"_len"],[72,102,91,59],[72,105,91,62],[72,106,91,63],[72,107,91,64],[72,109,91,66],[72,113,91,70],[72,114,91,71,"_cipher"],[72,121,91,78],[72,122,91,79,"encryptBlock"],[72,134,91,91],[72,135,91,92],[72,139,91,96],[72,140,91,97,"_finID"],[72,146,91,103],[72,147,91,104],[72,148,91,105],[73,4,92,2],[73,8,92,6],[73,12,92,10],[73,13,92,11,"_decrypt"],[73,21,92,19],[73,25,92,23,"xorTest"],[73,32,92,30],[73,33,92,31,"tag"],[73,36,92,34],[73,38,92,36],[73,42,92,40],[73,43,92,41,"_authTag"],[73,51,92,49],[73,52,92,50],[73,54,92,52],[73,60,92,58],[73,64,92,62,"Error"],[73,69,92,67],[73,70,92,68],[73,120,92,118],[73,121,92,119],[74,4,94,2],[74,8,94,6],[74,9,94,7,"_authTag"],[74,17,94,15],[74,20,94,18,"tag"],[74,23,94,21],[75,4,95,2],[75,8,95,6],[75,9,95,7,"_cipher"],[75,16,95,14],[75,17,95,15,"scrub"],[75,22,95,20],[75,23,95,21],[75,24,95,22],[76,2,96,0],[76,3,96,1],[77,2,98,0,"StreamCipher"],[77,14,98,12],[77,15,98,13,"prototype"],[77,24,98,22],[77,25,98,23,"getAuthTag"],[77,35,98,33],[77,38,98,36],[77,47,98,45,"getAuthTag"],[77,57,98,55,"getAuthTag"],[77,58,98,55],[77,60,98,59],[78,4,99,2],[78,8,99,6],[78,12,99,10],[78,13,99,11,"_decrypt"],[78,21,99,19],[78,25,99,23],[78,26,99,24,"_$$_REQUIRE"],[78,37,99,24],[78,38,99,24,"_dependencyMap"],[78,52,99,24],[78,72,99,24,"Buffer"],[78,78,99,24],[78,79,99,31,"isBuffer"],[78,87,99,39],[78,88,99,40],[78,92,99,44],[78,93,99,45,"_authTag"],[78,101,99,53],[78,102,99,54],[78,104,99,56],[78,110,99,62],[78,114,99,66,"Error"],[78,119,99,71],[78,120,99,72],[78,169,99,121],[78,170,99,122],[79,4,101,2],[79,11,101,9],[79,15,101,13],[79,16,101,14,"_authTag"],[79,24,101,22],[80,2,102,0],[80,3,102,1],[81,2,104,0,"StreamCipher"],[81,14,104,12],[81,15,104,13,"prototype"],[81,24,104,22],[81,25,104,23,"setAuthTag"],[81,35,104,33],[81,38,104,36],[81,47,104,45,"setAuthTag"],[81,57,104,55,"setAuthTag"],[81,58,104,57,"tag"],[81,61,104,60],[81,63,104,62],[82,4,105,2],[82,8,105,6],[82,9,105,7],[82,13,105,11],[82,14,105,12,"_decrypt"],[82,22,105,20],[82,24,105,22],[82,30,105,28],[82,34,105,32,"Error"],[82,39,105,37],[82,40,105,38],[82,89,105,87],[82,90,105,88],[83,4,107,2],[83,8,107,6],[83,9,107,7,"_authTag"],[83,17,107,15],[83,20,107,18,"tag"],[83,23,107,21],[84,2,108,0],[84,3,108,1],[85,2,110,0,"StreamCipher"],[85,14,110,12],[85,15,110,13,"prototype"],[85,24,110,22],[85,25,110,23,"setAAD"],[85,31,110,29],[85,34,110,32],[85,43,110,41,"setAAD"],[85,49,110,47,"setAAD"],[85,50,110,49,"buf"],[85,53,110,52],[85,55,110,54],[86,4,111,2],[86,8,111,6],[86,12,111,10],[86,13,111,11,"_called"],[86,20,111,18],[86,22,111,20],[86,28,111,26],[86,32,111,30,"Error"],[86,37,111,35],[86,38,111,36],[86,82,111,80],[86,83,111,81],[87,4,113,2],[87,8,113,6],[87,9,113,7,"_ghash"],[87,15,113,13],[87,16,113,14,"update"],[87,22,113,20],[87,23,113,21,"buf"],[87,26,113,24],[87,27,113,25],[88,4,114,2],[88,8,114,6],[88,9,114,7,"_alen"],[88,14,114,12],[88,18,114,16,"buf"],[88,21,114,19],[88,22,114,20,"length"],[88,28,114,26],[89,2,115,0],[89,3,115,1],[90,2,117,0,"module"],[90,8,117,6],[90,9,117,7,"exports"],[90,16,117,14],[90,19,117,17,"StreamCipher"],[90,31,117,29],[91,0,117,29],[91,3]],"functionMap":{"names":["<global>","xorTest","calcIv","StreamCipher","StreamCipher.prototype._update","StreamCipher.prototype._final","getAuthTag","setAuthTag","setAAD"],"mappings":"AAA;ACQ;CDU;AEE;CFsB;AGC;CHoB;iCII;CJkB;gCKE;CLQ;oCME;CNI;oCOE;CPI;gCQE;CRK"}},"type":"js/module"}]}