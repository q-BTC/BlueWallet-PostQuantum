{"dependencies":[{"name":"./aez_state","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":39,"index":39}},{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":39,"index":39}}],"key":"4SJyZGPb7Ybw/GJmg2tDjB5ZEGY="}},{"name":"./functions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":43,"index":84}},{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":43,"index":84}}],"key":"zVJFhPLjh6y+gMEyGCyK5GeW98g="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var VERSION = 'v5';\n  function encrypt(key, nonce, additionalData, tau, plaintext) {\n    var state = new (_$$_REQUIRE(_dependencyMap[0], \"./aez_state\"))();\n    state.reset();\n    state.init(key);\n    var delta = state.aezHash(nonce, additionalData || [], tau * 8);\n    var x = _$$_REQUIRE(_dependencyMap[1], \"./functions\").mkBlock(plaintext.length + tau);\n    if (!plaintext || plaintext.length === 0) {\n      state.aezPRF(delta, tau, x);\n    } else {\n      plaintext.copy(x);\n      state.encipher(delta, x, x);\n    }\n    return x;\n  }\n  function decrypt(key, nonce, additionalData, tau, ciphertext) {\n    var state = new (_$$_REQUIRE(_dependencyMap[0], \"./aez_state\"))();\n    state.reset();\n    state.init(key);\n    var delta = state.aezHash(nonce, additionalData || [], tau * 8);\n    var sum = 0;\n    var x = _$$_REQUIRE(_dependencyMap[1], \"./functions\").mkBlock(ciphertext.length);\n    if (ciphertext && ciphertext.length === tau) {\n      state.aezPRF(delta, tau, x);\n      for (var i = 0; i < tau; i++) {\n        sum |= x[i] ^ ciphertext[i];\n      }\n      x = x.slice(0, ciphertext.length - tau);\n    } else {\n      state.decipher(delta, ciphertext, x);\n      for (var _i = 0; _i < tau; _i++) {\n        sum |= x[ciphertext.length - tau + _i];\n      }\n      if (sum === 0) {\n        x = x.slice(0, ciphertext.length - tau);\n      }\n    }\n    if (sum !== 0) {\n      return null;\n    }\n    return x;\n  }\n  module.exports = {\n    VERSION: VERSION,\n    encrypt: encrypt,\n    decrypt: decrypt\n  };\n});","lineCount":49,"map":[[2,2,4,0],[2,6,4,6,"VERSION"],[2,13,4,13],[2,16,4,16],[2,20,4,20],[3,2,6,0],[3,11,6,9,"encrypt"],[3,18,6,16,"encrypt"],[3,19,6,17,"key"],[3,22,6,20],[3,24,6,22,"nonce"],[3,29,6,27],[3,31,6,29,"additionalData"],[3,45,6,43],[3,47,6,45,"tau"],[3,50,6,48],[3,52,6,50,"plaintext"],[3,61,6,59],[3,63,6,61],[4,4,7,2],[4,8,7,6,"state"],[4,13,7,11],[4,16,7,14],[4,21,7,14,"_$$_REQUIRE"],[4,32,7,14],[4,33,7,14,"_dependencyMap"],[4,47,7,14],[4,68,7,27],[4,69,7,28],[5,4,8,2,"state"],[5,9,8,7],[5,10,8,8,"reset"],[5,15,8,13],[5,16,8,14],[5,17,8,15],[6,4,9,2,"state"],[6,9,9,7],[6,10,9,8,"init"],[6,14,9,12],[6,15,9,13,"key"],[6,18,9,16],[6,19,9,17],[7,4,10,2],[7,8,10,6,"delta"],[7,13,10,11],[7,16,10,14,"state"],[7,21,10,19],[7,22,10,20,"aezHash"],[7,29,10,27],[7,30,10,28,"nonce"],[7,35,10,33],[7,37,10,35,"additionalData"],[7,51,10,49],[7,55,10,53],[7,57,10,55],[7,59,10,57,"tau"],[7,62,10,60],[7,65,10,63],[7,66,10,64],[7,67,10,65],[8,4,11,2],[8,8,11,6,"x"],[8,9,11,7],[8,12,11,10,"_$$_REQUIRE"],[8,23,11,10],[8,24,11,10,"_dependencyMap"],[8,38,11,10],[8,58,11,10,"mkBlock"],[8,65,11,10],[8,66,11,18,"plaintext"],[8,75,11,27],[8,76,11,28,"length"],[8,82,11,34],[8,85,11,37,"tau"],[8,88,11,40],[8,89,11,41],[9,4,13,2],[9,8,13,6],[9,9,13,7,"plaintext"],[9,18,13,16],[9,22,13,20,"plaintext"],[9,31,13,29],[9,32,13,30,"length"],[9,38,13,36],[9,43,13,41],[9,44,13,42],[9,46,13,44],[10,6,14,4,"state"],[10,11,14,9],[10,12,14,10,"aezPRF"],[10,18,14,16],[10,19,14,17,"delta"],[10,24,14,22],[10,26,14,24,"tau"],[10,29,14,27],[10,31,14,29,"x"],[10,32,14,30],[10,33,14,31],[11,4,15,2],[11,5,15,3],[11,11,15,9],[12,6,16,4,"plaintext"],[12,15,16,13],[12,16,16,14,"copy"],[12,20,16,18],[12,21,16,19,"x"],[12,22,16,20],[12,23,16,21],[13,6,17,4,"state"],[13,11,17,9],[13,12,17,10,"encipher"],[13,20,17,18],[13,21,17,19,"delta"],[13,26,17,24],[13,28,17,26,"x"],[13,29,17,27],[13,31,17,29,"x"],[13,32,17,30],[13,33,17,31],[14,4,18,2],[15,4,20,2],[15,11,20,9,"x"],[15,12,20,10],[16,2,21,0],[17,2,23,0],[17,11,23,9,"decrypt"],[17,18,23,16,"decrypt"],[17,19,23,17,"key"],[17,22,23,20],[17,24,23,22,"nonce"],[17,29,23,27],[17,31,23,29,"additionalData"],[17,45,23,43],[17,47,23,45,"tau"],[17,50,23,48],[17,52,23,50,"ciphertext"],[17,62,23,60],[17,64,23,62],[18,4,24,2],[18,8,24,6,"state"],[18,13,24,11],[18,16,24,14],[18,21,24,14,"_$$_REQUIRE"],[18,32,24,14],[18,33,24,14,"_dependencyMap"],[18,47,24,14],[18,68,24,27],[18,69,24,28],[19,4,25,2,"state"],[19,9,25,7],[19,10,25,8,"reset"],[19,15,25,13],[19,16,25,14],[19,17,25,15],[20,4,26,2,"state"],[20,9,26,7],[20,10,26,8,"init"],[20,14,26,12],[20,15,26,13,"key"],[20,18,26,16],[20,19,26,17],[21,4,27,2],[21,8,27,6,"delta"],[21,13,27,11],[21,16,27,14,"state"],[21,21,27,19],[21,22,27,20,"aezHash"],[21,29,27,27],[21,30,27,28,"nonce"],[21,35,27,33],[21,37,27,35,"additionalData"],[21,51,27,49],[21,55,27,53],[21,57,27,55],[21,59,27,57,"tau"],[21,62,27,60],[21,65,27,63],[21,66,27,64],[21,67,27,65],[22,4,28,2],[22,8,28,6,"sum"],[22,11,28,9],[22,14,28,12],[22,15,28,13],[23,4,29,2],[23,8,29,6,"x"],[23,9,29,7],[23,12,29,10,"_$$_REQUIRE"],[23,23,29,10],[23,24,29,10,"_dependencyMap"],[23,38,29,10],[23,58,29,10,"mkBlock"],[23,65,29,10],[23,66,29,18,"ciphertext"],[23,76,29,28],[23,77,29,29,"length"],[23,83,29,35],[23,84,29,36],[24,4,31,2],[24,8,31,6,"ciphertext"],[24,18,31,16],[24,22,31,20,"ciphertext"],[24,32,31,30],[24,33,31,31,"length"],[24,39,31,37],[24,44,31,42,"tau"],[24,47,31,45],[24,49,31,47],[25,6,32,4,"state"],[25,11,32,9],[25,12,32,10,"aezPRF"],[25,18,32,16],[25,19,32,17,"delta"],[25,24,32,22],[25,26,32,24,"tau"],[25,29,32,27],[25,31,32,29,"x"],[25,32,32,30],[25,33,32,31],[26,6,33,4],[26,11,33,9],[26,15,33,13,"i"],[26,16,33,14],[26,19,33,17],[26,20,33,18],[26,22,33,20,"i"],[26,23,33,21],[26,26,33,24,"tau"],[26,29,33,27],[26,31,33,29,"i"],[26,32,33,30],[26,34,33,32],[26,36,33,34],[27,8,34,6,"sum"],[27,11,34,9],[27,15,34,13,"x"],[27,16,34,14],[27,17,34,15,"i"],[27,18,34,16],[27,19,34,17],[27,22,34,20,"ciphertext"],[27,32,34,30],[27,33,34,31,"i"],[27,34,34,32],[27,35,34,33],[28,6,35,4],[29,6,36,4,"x"],[29,7,36,5],[29,10,36,8,"x"],[29,11,36,9],[29,12,36,10,"slice"],[29,17,36,15],[29,18,36,16],[29,19,36,17],[29,21,36,19,"ciphertext"],[29,31,36,29],[29,32,36,30,"length"],[29,38,36,36],[29,41,36,39,"tau"],[29,44,36,42],[29,45,36,43],[30,4,37,2],[30,5,37,3],[30,11,37,9],[31,6,38,4,"state"],[31,11,38,9],[31,12,38,10,"decipher"],[31,20,38,18],[31,21,38,19,"delta"],[31,26,38,24],[31,28,38,26,"ciphertext"],[31,38,38,36],[31,40,38,38,"x"],[31,41,38,39],[31,42,38,40],[32,6,39,4],[32,11,39,9],[32,15,39,13,"i"],[32,17,39,14],[32,20,39,17],[32,21,39,18],[32,23,39,20,"i"],[32,25,39,21],[32,28,39,24,"tau"],[32,31,39,27],[32,33,39,29,"i"],[32,35,39,30],[32,37,39,32],[32,39,39,34],[33,8,40,6,"sum"],[33,11,40,9],[33,15,40,13,"x"],[33,16,40,14],[33,17,40,15,"ciphertext"],[33,27,40,25],[33,28,40,26,"length"],[33,34,40,32],[33,37,40,35,"tau"],[33,40,40,38],[33,43,40,41,"i"],[33,45,40,42],[33,46,40,43],[34,6,41,4],[35,6,42,4],[35,10,42,8,"sum"],[35,13,42,11],[35,18,42,16],[35,19,42,17],[35,21,42,19],[36,8,43,6,"x"],[36,9,43,7],[36,12,43,10,"x"],[36,13,43,11],[36,14,43,12,"slice"],[36,19,43,17],[36,20,43,18],[36,21,43,19],[36,23,43,21,"ciphertext"],[36,33,43,31],[36,34,43,32,"length"],[36,40,43,38],[36,43,43,41,"tau"],[36,46,43,44],[36,47,43,45],[37,6,44,4],[38,4,45,2],[39,4,47,2],[39,8,47,6,"sum"],[39,11,47,9],[39,16,47,14],[39,17,47,15],[39,19,47,17],[40,6,48,4],[40,13,48,11],[40,17,48,15],[41,4,49,2],[42,4,51,2],[42,11,51,9,"x"],[42,12,51,10],[43,2,52,0],[44,2,54,0,"module"],[44,8,54,6],[44,9,54,7,"exports"],[44,16,54,14],[44,19,54,17],[45,4,55,2,"VERSION"],[45,11,55,9],[45,13,55,2,"VERSION"],[45,20,55,9],[46,4,56,2,"encrypt"],[46,11,56,9],[46,13,56,2,"encrypt"],[46,20,56,9],[47,4,57,2,"decrypt"],[47,11,57,9],[47,13,57,2,"decrypt"],[48,2,58,0],[48,3,58,1],[49,0,58,2],[49,3]],"functionMap":{"names":["<global>","encrypt","decrypt"],"mappings":"AAA;ACK;CDe;AEE;CF6B"}},"type":"js/module"}]}