{"dependencies":[{"name":"./errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":46},"end":{"line":2,"column":32,"index":65}}],"key":"GlkDztMSsNRYmp31iO+V/Albin8="}},{"name":"./native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":32,"index":32}}],"key":"StPfL/K7G7bfH6QjYKJhTuaRRK4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function _Buffer(value) {\n    return Buffer.isBuffer(value);\n  }\n  function Hex(value) {\n    return typeof value === 'string' && /^([0-9a-f]{2})+$/i.test(value);\n  }\n  function _LengthN(type, length) {\n    var name = type.toJSON();\n    function Length(value) {\n      if (!type(value)) return false;\n      if (value.length === length) return true;\n      throw _$$_REQUIRE(_dependencyMap[0], \"./errors\").tfCustomError(name + '(Length: ' + length + ')', name + '(Length: ' + value.length + ')');\n    }\n    Length.toJSON = function () {\n      return name;\n    };\n    return Length;\n  }\n  var _ArrayN = _LengthN.bind(null, _$$_REQUIRE(_dependencyMap[1], \"./native\").Array);\n  var _BufferN = _LengthN.bind(null, _Buffer);\n  var _HexN = _LengthN.bind(null, Hex);\n  var _StringN = _LengthN.bind(null, _$$_REQUIRE(_dependencyMap[1], \"./native\").String);\n  function Range(a, b, f) {\n    f = f || _$$_REQUIRE(_dependencyMap[1], \"./native\").Number;\n    function _range(value, strict) {\n      return f(value, strict) && value > a && value < b;\n    }\n    _range.toJSON = function () {\n      return `${f.toJSON()} between [${a}, ${b}]`;\n    };\n    return _range;\n  }\n  var INT53_MAX = Math.pow(2, 53) - 1;\n  function Finite(value) {\n    return typeof value === 'number' && isFinite(value);\n  }\n  function Int8(value) {\n    return value << 24 >> 24 === value;\n  }\n  function Int16(value) {\n    return value << 16 >> 16 === value;\n  }\n  function Int32(value) {\n    return (value | 0) === value;\n  }\n  function Int53(value) {\n    return typeof value === 'number' && value >= -INT53_MAX && value <= INT53_MAX && Math.floor(value) === value;\n  }\n  function UInt8(value) {\n    return (value & 0xff) === value;\n  }\n  function UInt16(value) {\n    return (value & 0xffff) === value;\n  }\n  function UInt32(value) {\n    return value >>> 0 === value;\n  }\n  function UInt53(value) {\n    return typeof value === 'number' && value >= 0 && value <= INT53_MAX && Math.floor(value) === value;\n  }\n  var types = {\n    ArrayN: _ArrayN,\n    Buffer: _Buffer,\n    BufferN: _BufferN,\n    Finite: Finite,\n    Hex: Hex,\n    HexN: _HexN,\n    Int8: Int8,\n    Int16: Int16,\n    Int32: Int32,\n    Int53: Int53,\n    Range: Range,\n    StringN: _StringN,\n    UInt8: UInt8,\n    UInt16: UInt16,\n    UInt32: UInt32,\n    UInt53: UInt53\n  };\n  for (var typeName in types) {\n    types[typeName].toJSON = function (t) {\n      return t;\n    }.bind(null, typeName);\n  }\n  module.exports = types;\n});","lineCount":86,"map":[[2,2,4,0],[2,11,4,9,"_Buffer"],[2,18,4,16,"_Buffer"],[2,19,4,18,"value"],[2,24,4,23],[2,26,4,25],[3,4,5,2],[3,11,5,9,"Buffer"],[3,17,5,15],[3,18,5,16,"isBuffer"],[3,26,5,24],[3,27,5,25,"value"],[3,32,5,30],[3,33,5,31],[4,2,6,0],[5,2,8,0],[5,11,8,9,"Hex"],[5,14,8,12,"Hex"],[5,15,8,14,"value"],[5,20,8,19],[5,22,8,21],[6,4,9,2],[6,11,9,9],[6,18,9,16,"value"],[6,23,9,21],[6,28,9,26],[6,36,9,34],[6,40,9,38],[6,59,9,57],[6,60,9,58,"test"],[6,64,9,62],[6,65,9,63,"value"],[6,70,9,68],[6,71,9,69],[7,2,10,0],[8,2,12,0],[8,11,12,9,"_LengthN"],[8,19,12,17,"_LengthN"],[8,20,12,19,"type"],[8,24,12,23],[8,26,12,25,"length"],[8,32,12,31],[8,34,12,33],[9,4,13,2],[9,8,13,6,"name"],[9,12,13,10],[9,15,13,13,"type"],[9,19,13,17],[9,20,13,18,"toJSON"],[9,26,13,24],[9,27,13,25],[9,28,13,26],[10,4,15,2],[10,13,15,11,"Length"],[10,19,15,17,"Length"],[10,20,15,19,"value"],[10,25,15,24],[10,27,15,26],[11,6,16,4],[11,10,16,8],[11,11,16,9,"type"],[11,15,16,13],[11,16,16,14,"value"],[11,21,16,19],[11,22,16,20],[11,24,16,22],[11,31,16,29],[11,36,16,34],[12,6,17,4],[12,10,17,8,"value"],[12,15,17,13],[12,16,17,14,"length"],[12,22,17,20],[12,27,17,25,"length"],[12,33,17,31],[12,35,17,33],[12,42,17,40],[12,46,17,44],[13,6,19,4],[13,12,19,10,"_$$_REQUIRE"],[13,23,19,10],[13,24,19,10,"_dependencyMap"],[13,38,19,10],[13,55,19,17,"tfCustomError"],[13,68,19,30],[13,69,19,31,"name"],[13,73,19,35],[13,76,19,38],[13,87,19,49],[13,90,19,52,"length"],[13,96,19,58],[13,99,19,61],[13,102,19,64],[13,104,19,66,"name"],[13,108,19,70],[13,111,19,73],[13,122,19,84],[13,125,19,87,"value"],[13,130,19,92],[13,131,19,93,"length"],[13,137,19,99],[13,140,19,102],[13,143,19,105],[13,144,19,106],[14,4,20,2],[15,4,21,2,"Length"],[15,10,21,8],[15,11,21,9,"toJSON"],[15,17,21,15],[15,20,21,18],[15,32,21,30],[16,6,21,32],[16,13,21,39,"name"],[16,17,21,43],[17,4,21,44],[17,5,21,45],[18,4,23,2],[18,11,23,9,"Length"],[18,17,23,15],[19,2,24,0],[20,2,26,0],[20,6,26,4,"_ArrayN"],[20,13,26,11],[20,16,26,14,"_LengthN"],[20,24,26,22],[20,25,26,23,"bind"],[20,29,26,27],[20,30,26,28],[20,34,26,32],[20,36,26,34,"_$$_REQUIRE"],[20,47,26,34],[20,48,26,34,"_dependencyMap"],[20,62,26,34],[20,79,26,41,"Array"],[20,84,26,46],[20,85,26,47],[21,2,27,0],[21,6,27,4,"_BufferN"],[21,14,27,12],[21,17,27,15,"_LengthN"],[21,25,27,23],[21,26,27,24,"bind"],[21,30,27,28],[21,31,27,29],[21,35,27,33],[21,37,27,35,"_Buffer"],[21,44,27,42],[21,45,27,43],[22,2,28,0],[22,6,28,4,"_HexN"],[22,11,28,9],[22,14,28,12,"_LengthN"],[22,22,28,20],[22,23,28,21,"bind"],[22,27,28,25],[22,28,28,26],[22,32,28,30],[22,34,28,32,"Hex"],[22,37,28,35],[22,38,28,36],[23,2,29,0],[23,6,29,4,"_StringN"],[23,14,29,12],[23,17,29,15,"_LengthN"],[23,25,29,23],[23,26,29,24,"bind"],[23,30,29,28],[23,31,29,29],[23,35,29,33],[23,37,29,35,"_$$_REQUIRE"],[23,48,29,35],[23,49,29,35,"_dependencyMap"],[23,63,29,35],[23,80,29,42,"String"],[23,86,29,48],[23,87,29,49],[24,2,31,0],[24,11,31,9,"Range"],[24,16,31,14,"Range"],[24,17,31,16,"a"],[24,18,31,17],[24,20,31,19,"b"],[24,21,31,20],[24,23,31,22,"f"],[24,24,31,23],[24,26,31,25],[25,4,32,2,"f"],[25,5,32,3],[25,8,32,6,"f"],[25,9,32,7],[25,13,32,11,"_$$_REQUIRE"],[25,24,32,11],[25,25,32,11,"_dependencyMap"],[25,39,32,11],[25,56,32,18,"Number"],[25,62,32,24],[26,4,33,2],[26,13,33,11,"_range"],[26,19,33,17,"_range"],[26,20,33,19,"value"],[26,25,33,24],[26,27,33,26,"strict"],[26,33,33,32],[26,35,33,34],[27,6,34,4],[27,13,34,11,"f"],[27,14,34,12],[27,15,34,13,"value"],[27,20,34,18],[27,22,34,20,"strict"],[27,28,34,26],[27,29,34,27],[27,33,34,32,"value"],[27,38,34,37],[27,41,34,40,"a"],[27,42,34,42],[27,46,34,47,"value"],[27,51,34,52],[27,54,34,55,"b"],[27,55,34,57],[28,4,35,2],[29,4,36,2,"_range"],[29,10,36,8],[29,11,36,9,"toJSON"],[29,17,36,15],[29,20,36,18],[29,32,36,30],[30,6,37,4],[30,13,37,11],[30,16,37,14,"f"],[30,17,37,15],[30,18,37,16,"toJSON"],[30,24,37,22],[30,25,37,23],[30,26,37,24],[30,39,37,37,"a"],[30,40,37,38],[30,45,37,43,"b"],[30,46,37,44],[30,49,37,47],[31,4,38,2],[31,5,38,3],[32,4,39,2],[32,11,39,9,"_range"],[32,17,39,15],[33,2,40,0],[34,2,42,0],[34,6,42,4,"INT53_MAX"],[34,15,42,13],[34,18,42,16,"Math"],[34,22,42,20],[34,23,42,21,"pow"],[34,26,42,24],[34,27,42,25],[34,28,42,26],[34,30,42,28],[34,32,42,30],[34,33,42,31],[34,36,42,34],[34,37,42,35],[35,2,44,0],[35,11,44,9,"Finite"],[35,17,44,15,"Finite"],[35,18,44,17,"value"],[35,23,44,22],[35,25,44,24],[36,4,45,2],[36,11,45,9],[36,18,45,16,"value"],[36,23,45,21],[36,28,45,26],[36,36,45,34],[36,40,45,38,"isFinite"],[36,48,45,46],[36,49,45,47,"value"],[36,54,45,52],[36,55,45,53],[37,2,46,0],[38,2,47,0],[38,11,47,9,"Int8"],[38,15,47,13,"Int8"],[38,16,47,15,"value"],[38,21,47,20],[38,23,47,22],[39,4,47,24],[39,11,47,33,"value"],[39,16,47,38],[39,20,47,42],[39,22,47,44],[39,26,47,49],[39,28,47,51],[39,33,47,57,"value"],[39,38,47,62],[40,2,47,63],[41,2,48,0],[41,11,48,9,"Int16"],[41,16,48,14,"Int16"],[41,17,48,16,"value"],[41,22,48,21],[41,24,48,23],[42,4,48,25],[42,11,48,34,"value"],[42,16,48,39],[42,20,48,43],[42,22,48,45],[42,26,48,50],[42,28,48,52],[42,33,48,58,"value"],[42,38,48,63],[43,2,48,64],[44,2,49,0],[44,11,49,9,"Int32"],[44,16,49,14,"Int32"],[44,17,49,16,"value"],[44,22,49,21],[44,24,49,23],[45,4,49,25],[45,11,49,32],[45,12,49,33,"value"],[45,17,49,38],[45,20,49,41],[45,21,49,42],[45,27,49,48,"value"],[45,32,49,53],[46,2,49,54],[47,2,50,0],[47,11,50,9,"Int53"],[47,16,50,14,"Int53"],[47,17,50,16,"value"],[47,22,50,21],[47,24,50,23],[48,4,51,2],[48,11,51,9],[48,18,51,16,"value"],[48,23,51,21],[48,28,51,26],[48,36,51,34],[48,40,52,4,"value"],[48,45,52,9],[48,49,52,13],[48,50,52,14,"INT53_MAX"],[48,59,52,23],[48,63,53,4,"value"],[48,68,53,9],[48,72,53,13,"INT53_MAX"],[48,81,53,22],[48,85,54,4,"Math"],[48,89,54,8],[48,90,54,9,"floor"],[48,95,54,14],[48,96,54,15,"value"],[48,101,54,20],[48,102,54,21],[48,107,54,26,"value"],[48,112,54,31],[49,2,55,0],[50,2,56,0],[50,11,56,9,"UInt8"],[50,16,56,14,"UInt8"],[50,17,56,16,"value"],[50,22,56,21],[50,24,56,23],[51,4,56,25],[51,11,56,32],[51,12,56,33,"value"],[51,17,56,38],[51,20,56,41],[51,24,56,45],[51,30,56,51,"value"],[51,35,56,56],[52,2,56,57],[53,2,57,0],[53,11,57,9,"UInt16"],[53,17,57,15,"UInt16"],[53,18,57,17,"value"],[53,23,57,22],[53,25,57,24],[54,4,57,26],[54,11,57,33],[54,12,57,34,"value"],[54,17,57,39],[54,20,57,42],[54,26,57,48],[54,32,57,54,"value"],[54,37,57,59],[55,2,57,60],[56,2,58,0],[56,11,58,9,"UInt32"],[56,17,58,15,"UInt32"],[56,18,58,17,"value"],[56,23,58,22],[56,25,58,24],[57,4,58,26],[57,11,58,34,"value"],[57,16,58,39],[57,21,58,44],[57,22,58,45],[57,27,58,51,"value"],[57,32,58,56],[58,2,58,57],[59,2,59,0],[59,11,59,9,"UInt53"],[59,17,59,15,"UInt53"],[59,18,59,17,"value"],[59,23,59,22],[59,25,59,24],[60,4,60,2],[60,11,60,9],[60,18,60,16,"value"],[60,23,60,21],[60,28,60,26],[60,36,60,34],[60,40,61,4,"value"],[60,45,61,9],[60,49,61,13],[60,50,61,14],[60,54,62,4,"value"],[60,59,62,9],[60,63,62,13,"INT53_MAX"],[60,72,62,22],[60,76,63,4,"Math"],[60,80,63,8],[60,81,63,9,"floor"],[60,86,63,14],[60,87,63,15,"value"],[60,92,63,20],[60,93,63,21],[60,98,63,26,"value"],[60,103,63,31],[61,2,64,0],[62,2,66,0],[62,6,66,4,"types"],[62,11,66,9],[62,14,66,12],[63,4,67,2,"ArrayN"],[63,10,67,8],[63,12,67,10,"_ArrayN"],[63,19,67,17],[64,4,68,2,"Buffer"],[64,10,68,8],[64,12,68,10,"_Buffer"],[64,19,68,17],[65,4,69,2,"BufferN"],[65,11,69,9],[65,13,69,11,"_BufferN"],[65,21,69,19],[66,4,70,2,"Finite"],[66,10,70,8],[66,12,70,10,"Finite"],[66,18,70,16],[67,4,71,2,"Hex"],[67,7,71,5],[67,9,71,7,"Hex"],[67,12,71,10],[68,4,72,2,"HexN"],[68,8,72,6],[68,10,72,8,"_HexN"],[68,15,72,13],[69,4,73,2,"Int8"],[69,8,73,6],[69,10,73,8,"Int8"],[69,14,73,12],[70,4,74,2,"Int16"],[70,9,74,7],[70,11,74,9,"Int16"],[70,16,74,14],[71,4,75,2,"Int32"],[71,9,75,7],[71,11,75,9,"Int32"],[71,16,75,14],[72,4,76,2,"Int53"],[72,9,76,7],[72,11,76,9,"Int53"],[72,16,76,14],[73,4,77,2,"Range"],[73,9,77,7],[73,11,77,9,"Range"],[73,16,77,14],[74,4,78,2,"StringN"],[74,11,78,9],[74,13,78,11,"_StringN"],[74,21,78,19],[75,4,79,2,"UInt8"],[75,9,79,7],[75,11,79,9,"UInt8"],[75,16,79,14],[76,4,80,2,"UInt16"],[76,10,80,8],[76,12,80,10,"UInt16"],[76,18,80,16],[77,4,81,2,"UInt32"],[77,10,81,8],[77,12,81,10,"UInt32"],[77,18,81,16],[78,4,82,2,"UInt53"],[78,10,82,8],[78,12,82,10,"UInt53"],[79,2,83,0],[79,3,83,1],[80,2,85,0],[80,7,85,5],[80,11,85,9,"typeName"],[80,19,85,17],[80,23,85,21,"types"],[80,28,85,26],[80,30,85,28],[81,4,86,2,"types"],[81,9,86,7],[81,10,86,8,"typeName"],[81,18,86,16],[81,19,86,17],[81,20,86,18,"toJSON"],[81,26,86,24],[81,29,86,27],[81,39,86,37,"t"],[81,40,86,38],[81,42,86,40],[82,6,87,4],[82,13,87,11,"t"],[82,14,87,12],[83,4,88,2],[83,5,88,3],[83,6,88,4,"bind"],[83,10,88,8],[83,11,88,9],[83,15,88,13],[83,17,88,15,"typeName"],[83,25,88,23],[83,26,88,24],[84,2,89,0],[85,2,91,0,"module"],[85,8,91,6],[85,9,91,7,"exports"],[85,16,91,14],[85,19,91,17,"types"],[85,24,91,22],[86,0,91,22],[86,3]],"functionMap":{"names":["<global>","_Buffer","Hex","_LengthN","Length","Length.toJSON","Range","_range","_range.toJSON","Finite","Int8","Int16","Int32","Int53","UInt8","UInt16","UInt32","UInt53","<anonymous>"],"mappings":"AAA;ACG;CDE;AEE;CFE;AGE;ECG;GDK;kBEC,2BF;CHG;AMO;ECE;GDE;kBEC;GFE;CNE;ASI;CTE;AUC,gEV;AWC,iEX;AYC,uDZ;AaC;CbK;AcC,0Dd;AeC,6Df;AgBC,0DhB;AiBC;CjBK;2BkBsB;GlBE"}},"type":"js/module"}]}