{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1748}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":70,"column":0,"index":1748}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var makeRequest = exports.makeRequest = function (method, params, id) {\n    return JSON.stringify({\n      jsonrpc: '2.0',\n      method: method,\n      params: params,\n      id: id\n    });\n  };\n  var createRecuesiveParser = exports.createRecuesiveParser = function (max_depth, delimiter) {\n    var MAX_DEPTH = max_depth;\n    var DELIMITER = delimiter;\n    var _recursiveParser = function recursiveParser(n, buffer, callback) {\n      if (buffer.length === 0) {\n        return {\n          code: 0,\n          buffer: buffer\n        };\n      }\n      if (n > MAX_DEPTH) {\n        return {\n          code: 1,\n          buffer: buffer\n        };\n      }\n      var xs = buffer.split(DELIMITER);\n      if (xs.length === 1) {\n        return {\n          code: 0,\n          buffer: buffer\n        };\n      }\n      callback(xs.shift(), n);\n      return _recursiveParser(n + 1, xs.join(DELIMITER), callback);\n    };\n    return _recursiveParser;\n  };\n  var createPromiseResult = exports.createPromiseResult = function (resolve, reject) {\n    return function (err, result) {\n      if (err) reject(err);else resolve(result);\n    };\n  };\n  var createPromiseResultBatch = exports.createPromiseResultBatch = function (resolve, reject, argz) {\n    return function (err, result) {\n      if (result && result[0] && result[0].id) {\n        // this is a batch request response\n        for (var r of result) {\n          r.param = argz[r.id];\n        }\n      }\n      if (err) reject(err);else resolve(result);\n    };\n  };\n  var MessageParser = /*#__PURE__*/function () {\n    function MessageParser(callback) {\n      _classCallCheck(this, MessageParser);\n      this.buffer = '';\n      this.callback = callback;\n      this.recursiveParser = createRecuesiveParser(20, '\\n');\n    }\n    return _createClass(MessageParser, [{\n      key: \"run\",\n      value: function run(chunk) {\n        this.buffer += chunk;\n        while (true) {\n          var res = this.recursiveParser(0, this.buffer, this.callback);\n          this.buffer = res.buffer;\n          if (res.code === 0) {\n            break;\n          }\n        }\n      }\n    }]);\n  }();\n  exports.MessageParser = MessageParser;\n});","lineCount":80,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,3,0],[6,6,3,6,"makeRequest"],[6,17,3,17],[6,20,3,21,"exports"],[6,27,3,28],[6,28,3,29,"makeRequest"],[6,39,3,40],[6,42,3,43],[6,52,3,44,"method"],[6,58,3,50],[6,60,3,52,"params"],[6,66,3,58],[6,68,3,60,"id"],[6,70,3,62],[6,72,3,67],[7,4,4,2],[7,11,4,9,"JSON"],[7,15,4,13],[7,16,4,14,"stringify"],[7,25,4,23],[7,26,4,24],[8,6,5,4,"jsonrpc"],[8,13,5,11],[8,15,5,13],[8,20,5,18],[9,6,6,4,"method"],[9,12,6,10],[9,14,6,12,"method"],[9,20,6,18],[10,6,7,4,"params"],[10,12,7,10],[10,14,7,12,"params"],[10,20,7,18],[11,6,8,4,"id"],[11,8,8,6],[11,10,8,8,"id"],[12,4,9,2],[12,5,9,3],[12,6,9,4],[13,2,10,0],[13,3,10,2],[14,2,12,0],[14,6,12,6,"createRecuesiveParser"],[14,27,12,27],[14,30,12,31,"exports"],[14,37,12,38],[14,38,12,39,"createRecuesiveParser"],[14,59,12,60],[14,62,12,63],[14,72,12,64,"max_depth"],[14,81,12,73],[14,83,12,75,"delimiter"],[14,92,12,84],[14,94,12,89],[15,4,13,2],[15,8,13,8,"MAX_DEPTH"],[15,17,13,17],[15,20,13,20,"max_depth"],[15,29,13,29],[16,4,14,2],[16,8,14,8,"DELIMITER"],[16,17,14,17],[16,20,14,20,"delimiter"],[16,29,14,29],[17,4,15,2],[17,8,15,8,"recursiveParser"],[17,24,15,23],[17,27,15,26],[17,36,15,8,"recursiveParser"],[17,51,15,23,"recursiveParser"],[17,52,15,27,"n"],[17,53,15,28],[17,55,15,30,"buffer"],[17,61,15,36],[17,63,15,38,"callback"],[17,71,15,46],[17,73,15,51],[18,6,16,4],[18,10,16,8,"buffer"],[18,16,16,14],[18,17,16,15,"length"],[18,23,16,21],[18,28,16,26],[18,29,16,27],[18,31,16,29],[19,8,17,6],[19,15,17,13],[20,10,17,15,"code"],[20,14,17,19],[20,16,17,21],[20,17,17,22],[21,10,17,24,"buffer"],[21,16,17,30],[21,18,17,32,"buffer"],[22,8,17,39],[22,9,17,40],[23,6,18,4],[24,6,19,4],[24,10,19,8,"n"],[24,11,19,9],[24,14,19,12,"MAX_DEPTH"],[24,23,19,21],[24,25,19,23],[25,8,20,6],[25,15,20,13],[26,10,20,15,"code"],[26,14,20,19],[26,16,20,21],[26,17,20,22],[27,10,20,24,"buffer"],[27,16,20,30],[27,18,20,32,"buffer"],[28,8,20,39],[28,9,20,40],[29,6,21,4],[30,6,22,4],[30,10,22,10,"xs"],[30,12,22,12],[30,15,22,15,"buffer"],[30,21,22,21],[30,22,22,22,"split"],[30,27,22,27],[30,28,22,28,"DELIMITER"],[30,37,22,37],[30,38,22,38],[31,6,23,4],[31,10,23,8,"xs"],[31,12,23,10],[31,13,23,11,"length"],[31,19,23,17],[31,24,23,22],[31,25,23,23],[31,27,23,25],[32,8,24,6],[32,15,24,13],[33,10,24,15,"code"],[33,14,24,19],[33,16,24,21],[33,17,24,22],[34,10,24,24,"buffer"],[34,16,24,30],[34,18,24,32,"buffer"],[35,8,24,39],[35,9,24,40],[36,6,25,4],[37,6,26,4,"callback"],[37,14,26,12],[37,15,26,13,"xs"],[37,17,26,15],[37,18,26,16,"shift"],[37,23,26,21],[37,24,26,22],[37,25,26,23],[37,27,26,25,"n"],[37,28,26,26],[37,29,26,27],[38,6,27,4],[38,13,27,11,"recursiveParser"],[38,29,27,26],[38,30,27,27,"n"],[38,31,27,28],[38,34,27,31],[38,35,27,32],[38,37,27,34,"xs"],[38,39,27,36],[38,40,27,37,"join"],[38,44,27,41],[38,45,27,42,"DELIMITER"],[38,54,27,51],[38,55,27,52],[38,57,27,54,"callback"],[38,65,27,62],[38,66,27,63],[39,4,28,2],[39,5,28,3],[40,4,29,2],[40,11,29,9,"recursiveParser"],[40,27,29,24],[41,2,30,0],[41,3,30,2],[42,2,32,0],[42,6,32,6,"createPromiseResult"],[42,25,32,25],[42,28,32,29,"exports"],[42,35,32,36],[42,36,32,37,"createPromiseResult"],[42,55,32,56],[42,58,32,59],[42,68,32,60,"resolve"],[42,75,32,67],[42,77,32,69,"reject"],[42,83,32,75],[42,85,32,80],[43,4,33,2],[43,11,33,9],[43,21,33,10,"err"],[43,24,33,13],[43,26,33,15,"result"],[43,32,33,21],[43,34,33,26],[44,6,34,4],[44,10,34,8,"err"],[44,13,34,11],[44,15,34,13,"reject"],[44,21,34,19],[44,22,34,20,"err"],[44,25,34,23],[44,26,34,24],[44,27,34,25],[44,32,35,9,"resolve"],[44,39,35,16],[44,40,35,17,"result"],[44,46,35,23],[44,47,35,24],[45,4,36,2],[45,5,36,3],[46,2,37,0],[46,3,37,2],[47,2,39,0],[47,6,39,6,"createPromiseResultBatch"],[47,30,39,30],[47,33,39,34,"exports"],[47,40,39,41],[47,41,39,42,"createPromiseResultBatch"],[47,65,39,66],[47,68,39,69],[47,78,39,70,"resolve"],[47,85,39,77],[47,87,39,79,"reject"],[47,93,39,85],[47,95,39,87,"argz"],[47,99,39,91],[47,101,39,96],[48,4,40,2],[48,11,40,9],[48,21,40,10,"err"],[48,24,40,13],[48,26,40,15,"result"],[48,32,40,21],[48,34,40,26],[49,6,41,4],[49,10,41,8,"result"],[49,16,41,14],[49,20,41,18,"result"],[49,26,41,24],[49,27,41,25],[49,28,41,26],[49,29,41,27],[49,33,41,31,"result"],[49,39,41,37],[49,40,41,38],[49,41,41,39],[49,42,41,40],[49,43,41,41,"id"],[49,45,41,43],[49,47,41,45],[50,8,42,6],[51,8,43,6],[51,13,43,11],[51,17,43,15,"r"],[51,18,43,16],[51,22,43,20,"result"],[51,28,43,26],[51,30,43,28],[52,10,44,8,"r"],[52,11,44,9],[52,12,44,10,"param"],[52,17,44,15],[52,20,44,18,"argz"],[52,24,44,22],[52,25,44,23,"r"],[52,26,44,24],[52,27,44,25,"id"],[52,29,44,27],[52,30,44,28],[53,8,45,6],[54,6,46,4],[55,6,47,4],[55,10,47,8,"err"],[55,13,47,11],[55,15,47,13,"reject"],[55,21,47,19],[55,22,47,20,"err"],[55,25,47,23],[55,26,47,24],[55,27,47,25],[55,32,48,9,"resolve"],[55,39,48,16],[55,40,48,17,"result"],[55,46,48,23],[55,47,48,24],[56,4,49,2],[56,5,49,3],[57,2,50,0],[57,3,50,2],[58,2,50,3],[58,6,52,6,"MessageParser"],[58,19,52,19],[59,4,53,2],[59,13,53,2,"MessageParser"],[59,27,53,14,"callback"],[59,35,53,22],[59,37,53,24],[60,6,53,24,"_classCallCheck"],[60,21,53,24],[60,28,53,24,"MessageParser"],[60,41,53,24],[61,6,54,4],[61,10,54,8],[61,11,54,9,"buffer"],[61,17,54,15],[61,20,54,18],[61,22,54,20],[62,6,55,4],[62,10,55,8],[62,11,55,9,"callback"],[62,19,55,17],[62,22,55,20,"callback"],[62,30,55,28],[63,6,56,4],[63,10,56,8],[63,11,56,9,"recursiveParser"],[63,26,56,24],[63,29,56,27,"createRecuesiveParser"],[63,50,56,48],[63,51,56,49],[63,53,56,51],[63,55,56,53],[63,59,56,57],[63,60,56,58],[64,4,57,2],[65,4,57,3],[65,11,57,3,"_createClass"],[65,23,57,3],[65,24,57,3,"MessageParser"],[65,37,57,3],[66,6,57,3,"key"],[66,9,57,3],[67,6,57,3,"value"],[67,11,57,3],[67,13,58,2],[67,22,58,2,"run"],[67,25,58,5,"run"],[67,26,58,6,"chunk"],[67,31,58,11],[67,33,58,13],[68,8,59,4],[68,12,59,8],[68,13,59,9,"buffer"],[68,19,59,15],[68,23,59,19,"chunk"],[68,28,59,24],[69,8,60,4],[69,15,60,11],[69,19,60,15],[69,21,60,17],[70,10,61,6],[70,14,61,12,"res"],[70,17,61,15],[70,20,61,18],[70,24,61,22],[70,25,61,23,"recursiveParser"],[70,40,61,38],[70,41,61,39],[70,42,61,40],[70,44,61,42],[70,48,61,46],[70,49,61,47,"buffer"],[70,55,61,53],[70,57,61,55],[70,61,61,59],[70,62,61,60,"callback"],[70,70,61,68],[70,71,61,69],[71,10,62,6],[71,14,62,10],[71,15,62,11,"buffer"],[71,21,62,17],[71,24,62,20,"res"],[71,27,62,23],[71,28,62,24,"buffer"],[71,34,62,30],[72,10,63,6],[72,14,63,10,"res"],[72,17,63,13],[72,18,63,14,"code"],[72,22,63,18],[72,27,63,23],[72,28,63,24],[72,30,63,26],[73,12,64,8],[74,10,65,6],[75,8,66,4],[76,6,67,2],[77,4,67,3],[78,2,67,3],[79,2,69,0,"exports"],[79,9,69,7],[79,10,69,8,"MessageParser"],[79,23,69,21],[79,26,69,24,"MessageParser"],[79,39,69,37],[80,0,69,38],[80,3]],"functionMap":{"names":["<global>","exports.makeRequest","exports.createRecuesiveParser","recursiveParser","exports.createPromiseResult","<anonymous>","exports.createPromiseResultBatch","MessageParser","MessageParser#constructor","MessageParser#run"],"mappings":"AAA;2CCE;CDO;+DEE;0BCG;GDa;CFE;2DIE;SCC;GDG;CJC;qEME;SDC;GCS;CNC;AOE;ECC;GDI;EEC;GFS;CPC"}},"type":"js/module"}]}