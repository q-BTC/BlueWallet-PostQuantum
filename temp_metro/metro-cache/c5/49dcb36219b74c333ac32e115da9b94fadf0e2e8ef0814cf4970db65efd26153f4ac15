{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comment;\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n  var LEFTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftParenthesis;\n  module.exports = {\n    name: 'MediaQuery',\n    structure: {\n      children: [['Identifier', 'MediaFeature', 'WhiteSpace']]\n    },\n    parse: function parse() {\n      this.scanner.skipSC();\n      var children = this.createList();\n      var child = null;\n      var space = null;\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case COMMENT:\n            this.scanner.next();\n            continue;\n          case WHITESPACE:\n            space = this.WhiteSpace();\n            continue;\n          case IDENT:\n            child = this.Identifier();\n            break;\n          case LEFTPARENTHESIS:\n            child = this.MediaFeature();\n            break;\n          default:\n            break scan;\n        }\n        if (space !== null) {\n          children.push(space);\n          space = null;\n        }\n        children.push(child);\n      }\n      if (child === null) {\n        this.error('Identifier or parenthesis is expected');\n      }\n      return {\n        type: 'MediaQuery',\n        loc: this.getLocationFromList(children),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.children(node);\n    }\n  };\n});","lineCount":52,"map":[[2,2,3,0],[2,6,3,4,"WHITESPACE"],[2,16,3,14],[2,19,3,17,"_$$_REQUIRE"],[2,30,3,17],[2,31,3,17,"_dependencyMap"],[2,45,3,17],[2,69,3,17,"TYPE"],[2,73,3,17],[2,74,3,22,"WhiteSpace"],[2,84,3,32],[3,2,4,0],[3,6,4,4,"COMMENT"],[3,13,4,11],[3,16,4,14,"_$$_REQUIRE"],[3,27,4,14],[3,28,4,14,"_dependencyMap"],[3,42,4,14],[3,66,4,14,"TYPE"],[3,70,4,14],[3,71,4,19,"Comment"],[3,78,4,26],[4,2,5,0],[4,6,5,4,"IDENT"],[4,11,5,9],[4,14,5,12,"_$$_REQUIRE"],[4,25,5,12],[4,26,5,12,"_dependencyMap"],[4,40,5,12],[4,64,5,12,"TYPE"],[4,68,5,12],[4,69,5,17,"Ident"],[4,74,5,22],[5,2,6,0],[5,6,6,4,"LEFTPARENTHESIS"],[5,21,6,19],[5,24,6,22,"_$$_REQUIRE"],[5,35,6,22],[5,36,6,22,"_dependencyMap"],[5,50,6,22],[5,74,6,22,"TYPE"],[5,78,6,22],[5,79,6,27,"LeftParenthesis"],[5,94,6,42],[6,2,8,0,"module"],[6,8,8,6],[6,9,8,7,"exports"],[6,16,8,14],[6,19,8,17],[7,4,9,4,"name"],[7,8,9,8],[7,10,9,10],[7,22,9,22],[8,4,10,4,"structure"],[8,13,10,13],[8,15,10,15],[9,6,11,8,"children"],[9,14,11,16],[9,16,11,18],[9,17,11,19],[9,18,12,12],[9,30,12,24],[9,32,13,12],[9,46,13,26],[9,48,14,12],[9,60,14,24],[9,61,15,9],[10,4,16,4],[10,5,16,5],[11,4,17,4,"parse"],[11,9,17,9],[11,11,17,11],[11,20,17,4,"parse"],[11,25,17,9,"parse"],[11,26,17,9],[11,28,17,22],[12,6,18,8],[12,10,18,12],[12,11,18,13,"scanner"],[12,18,18,20],[12,19,18,21,"skipSC"],[12,25,18,27],[12,26,18,28],[12,27,18,29],[13,6,20,8],[13,10,20,12,"children"],[13,18,20,20],[13,21,20,23],[13,25,20,27],[13,26,20,28,"createList"],[13,36,20,38],[13,37,20,39],[13,38,20,40],[14,6,21,8],[14,10,21,12,"child"],[14,15,21,17],[14,18,21,20],[14,22,21,24],[15,6,22,8],[15,10,22,12,"space"],[15,15,22,17],[15,18,22,20],[15,22,22,24],[16,6,24,8,"scan"],[16,10,24,12],[16,12,25,8],[16,19,25,15],[16,20,25,16],[16,24,25,20],[16,25,25,21,"scanner"],[16,32,25,28],[16,33,25,29,"eof"],[16,36,25,32],[16,38,25,34],[17,8,26,12],[17,16,26,20],[17,20,26,24],[17,21,26,25,"scanner"],[17,28,26,32],[17,29,26,33,"tokenType"],[17,38,26,42],[18,10,27,16],[18,15,27,21,"COMMENT"],[18,22,27,28],[19,12,28,20],[19,16,28,24],[19,17,28,25,"scanner"],[19,24,28,32],[19,25,28,33,"next"],[19,29,28,37],[19,30,28,38],[19,31,28,39],[20,12,29,20],[21,10,31,16],[21,15,31,21,"WHITESPACE"],[21,25,31,31],[22,12,32,20,"space"],[22,17,32,25],[22,20,32,28],[22,24,32,32],[22,25,32,33,"WhiteSpace"],[22,35,32,43],[22,36,32,44],[22,37,32,45],[23,12,33,20],[24,10,35,16],[24,15,35,21,"IDENT"],[24,20,35,26],[25,12,36,20,"child"],[25,17,36,25],[25,20,36,28],[25,24,36,32],[25,25,36,33,"Identifier"],[25,35,36,43],[25,36,36,44],[25,37,36,45],[26,12,37,20],[27,10,39,16],[27,15,39,21,"LEFTPARENTHESIS"],[27,30,39,36],[28,12,40,20,"child"],[28,17,40,25],[28,20,40,28],[28,24,40,32],[28,25,40,33,"MediaFeature"],[28,37,40,45],[28,38,40,46],[28,39,40,47],[29,12,41,20],[30,10,43,16],[31,12,44,20],[31,18,44,26,"scan"],[31,22,44,30],[32,8,45,12],[33,8,47,12],[33,12,47,16,"space"],[33,17,47,21],[33,22,47,26],[33,26,47,30],[33,28,47,32],[34,10,48,16,"children"],[34,18,48,24],[34,19,48,25,"push"],[34,23,48,29],[34,24,48,30,"space"],[34,29,48,35],[34,30,48,36],[35,10,49,16,"space"],[35,15,49,21],[35,18,49,24],[35,22,49,28],[36,8,50,12],[37,8,52,12,"children"],[37,16,52,20],[37,17,52,21,"push"],[37,21,52,25],[37,22,52,26,"child"],[37,27,52,31],[37,28,52,32],[38,6,53,8],[39,6,55,8],[39,10,55,12,"child"],[39,15,55,17],[39,20,55,22],[39,24,55,26],[39,26,55,28],[40,8,56,12],[40,12,56,16],[40,13,56,17,"error"],[40,18,56,22],[40,19,56,23],[40,58,56,62],[40,59,56,63],[41,6,57,8],[42,6,59,8],[42,13,59,15],[43,8,60,12,"type"],[43,12,60,16],[43,14,60,18],[43,26,60,30],[44,8,61,12,"loc"],[44,11,61,15],[44,13,61,17],[44,17,61,21],[44,18,61,22,"getLocationFromList"],[44,37,61,41],[44,38,61,42,"children"],[44,46,61,50],[44,47,61,51],[45,8,62,12,"children"],[45,16,62,20],[45,18,62,22,"children"],[46,6,63,8],[46,7,63,9],[47,4,64,4],[47,5,64,5],[48,4,65,4,"generate"],[48,12,65,12],[48,14,65,14],[48,23,65,4,"generate"],[48,31,65,12,"generate"],[48,32,65,23,"node"],[48,36,65,27],[48,38,65,29],[49,6,66,8],[49,10,66,12],[49,11,66,13,"children"],[49,19,66,21],[49,20,66,22,"node"],[49,24,66,26],[49,25,66,27],[50,4,67,4],[51,2,68,0],[51,3,68,1],[52,0,68,2],[52,3]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCgB;KD+C;cEC;KFE"}},"type":"js/module"}]}