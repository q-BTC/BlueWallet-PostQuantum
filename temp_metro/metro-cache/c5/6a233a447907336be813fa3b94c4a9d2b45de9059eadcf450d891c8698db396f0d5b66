{"dependencies":[{"name":"miller-rabin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":45},"end":{"line":2,"column":41,"index":68}}],"key":"JlFjwCagvLq0EqEIeqQmt6qe9mA="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"./generatePrime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":13,"index":242},"end":{"line":9,"column":39,"index":268}},{"start":{"line":9,"column":13,"index":242},"end":{"line":9,"column":39,"index":268}}],"key":"lMwCAIegzeEZrIEQu6v0pnKwVew="}},{"name":"randombytes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":288},"end":{"line":10,"column":40,"index":310}}],"key":"HRppB8l92kfLq10/yqHPiqGAuBY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var millerRabin = new (_$$_REQUIRE(_dependencyMap[0], \"miller-rabin\"))();\n  var TWENTYFOUR = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(24);\n  var ELEVEN = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(11);\n  var TEN = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(10);\n  var THREE = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(3);\n  var SEVEN = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(7);\n  module.exports = DH;\n  function setPublicKey(pub, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(pub)) {\n      pub = new Buffer(pub, enc);\n    }\n    this._pub = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(pub);\n    return this;\n  }\n  function setPrivateKey(priv, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(priv)) {\n      priv = new Buffer(priv, enc);\n    }\n    this._priv = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(priv);\n    return this;\n  }\n  var primeCache = {};\n  function checkPrime(prime, generator) {\n    var gen = generator.toString('hex');\n    var hex = [gen, prime.toString(16)].join('_');\n    if (hex in primeCache) {\n      return primeCache[hex];\n    }\n    var error = 0;\n    if (prime.isEven() || !_$$_REQUIRE(_dependencyMap[2], \"./generatePrime\").simpleSieve || !_$$_REQUIRE(_dependencyMap[2], \"./generatePrime\").fermatTest(prime) || !millerRabin.test(prime)) {\n      //not a prime so +1\n      error += 1;\n      if (gen === '02' || gen === '05') {\n        // we'd be able to check the generator\n        // it would fail so +8\n        error += 8;\n      } else {\n        //we wouldn't be able to test the generator\n        // so +4\n        error += 4;\n      }\n      primeCache[hex] = error;\n      return error;\n    }\n    if (!millerRabin.test(prime.shrn(1))) {\n      //not a safe prime\n      error += 2;\n    }\n    var rem;\n    switch (gen) {\n      case '02':\n        if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n          // unsuidable generator\n          error += 8;\n        }\n        break;\n      case '05':\n        rem = prime.mod(TEN);\n        if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n          // prime mod 10 needs to equal 3 or 7\n          error += 8;\n        }\n        break;\n      default:\n        error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  function DH(prime, generator, malleable) {\n    this.setGenerator(generator);\n    this.__prime = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(prime);\n    this._prime = _$$_REQUIRE(_dependencyMap[1], \"bn.js\").mont(this.__prime);\n    this._primeLen = prime.length;\n    this._pub = undefined;\n    this._priv = undefined;\n    this._primeCode = undefined;\n    if (malleable) {\n      this.setPublicKey = setPublicKey;\n      this.setPrivateKey = setPrivateKey;\n    } else {\n      this._primeCode = 8;\n    }\n  }\n  Object.defineProperty(DH.prototype, 'verifyError', {\n    enumerable: true,\n    get: function get() {\n      if (typeof this._primeCode !== 'number') {\n        this._primeCode = checkPrime(this.__prime, this.__gen);\n      }\n      return this._primeCode;\n    }\n  });\n  DH.prototype.generateKeys = function () {\n    if (!this._priv) {\n      this._priv = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(_$$_REQUIRE(_dependencyMap[3], \"randombytes\")(this._primeLen));\n    }\n    this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n    return this.getPublicKey();\n  };\n  DH.prototype.computeSecret = function (other) {\n    other = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(other);\n    other = other.toRed(this._prime);\n    var secret = other.redPow(this._priv).fromRed();\n    var out = new Buffer(secret.toArray());\n    var prime = this.getPrime();\n    if (out.length < prime.length) {\n      var front = new Buffer(prime.length - out.length);\n      front.fill(0);\n      out = Buffer.concat([front, out]);\n    }\n    return out;\n  };\n  DH.prototype.getPublicKey = function getPublicKey(enc) {\n    return formatReturnValue(this._pub, enc);\n  };\n  DH.prototype.getPrivateKey = function getPrivateKey(enc) {\n    return formatReturnValue(this._priv, enc);\n  };\n  DH.prototype.getPrime = function (enc) {\n    return formatReturnValue(this.__prime, enc);\n  };\n  DH.prototype.getGenerator = function (enc) {\n    return formatReturnValue(this._gen, enc);\n  };\n  DH.prototype.setGenerator = function (gen, enc) {\n    enc = enc || 'utf8';\n    if (!Buffer.isBuffer(gen)) {\n      gen = new Buffer(gen, enc);\n    }\n    this.__gen = gen;\n    this._gen = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(gen);\n    return this;\n  };\n  function formatReturnValue(bn, enc) {\n    var buf = new Buffer(bn.toArray());\n    if (!enc) {\n      return buf;\n    } else {\n      return buf.toString(enc);\n    }\n  }\n});","lineCount":146,"map":[[2,2,3,0],[2,6,3,4,"millerRabin"],[2,17,3,15],[2,20,3,18],[2,25,3,18,"_$$_REQUIRE"],[2,36,3,18],[2,37,3,18,"_dependencyMap"],[2,51,3,18],[2,73,3,34],[2,74,3,35],[3,2,4,0],[3,6,4,4,"TWENTYFOUR"],[3,16,4,14],[3,19,4,17],[3,24,4,17,"_$$_REQUIRE"],[3,35,4,17],[3,36,4,17,"_dependencyMap"],[3,50,4,17],[3,65,4,24],[3,67,4,26],[3,68,4,27],[4,2,5,0],[4,6,5,4,"ELEVEN"],[4,12,5,10],[4,15,5,13],[4,20,5,13,"_$$_REQUIRE"],[4,31,5,13],[4,32,5,13,"_dependencyMap"],[4,46,5,13],[4,61,5,20],[4,63,5,22],[4,64,5,23],[5,2,6,0],[5,6,6,4,"TEN"],[5,9,6,7],[5,12,6,10],[5,17,6,10,"_$$_REQUIRE"],[5,28,6,10],[5,29,6,10,"_dependencyMap"],[5,43,6,10],[5,58,6,17],[5,60,6,19],[5,61,6,20],[6,2,7,0],[6,6,7,4,"THREE"],[6,11,7,9],[6,14,7,12],[6,19,7,12,"_$$_REQUIRE"],[6,30,7,12],[6,31,7,12,"_dependencyMap"],[6,45,7,12],[6,60,7,19],[6,61,7,20],[6,62,7,21],[7,2,8,0],[7,6,8,4,"SEVEN"],[7,11,8,9],[7,14,8,12],[7,19,8,12,"_$$_REQUIRE"],[7,30,8,12],[7,31,8,12,"_dependencyMap"],[7,45,8,12],[7,60,8,19],[7,61,8,20],[7,62,8,21],[8,2,11,0,"module"],[8,8,11,6],[8,9,11,7,"exports"],[8,16,11,14],[8,19,11,17,"DH"],[8,21,11,19],[9,2,13,0],[9,11,13,9,"setPublicKey"],[9,23,13,21,"setPublicKey"],[9,24,13,22,"pub"],[9,27,13,25],[9,29,13,27,"enc"],[9,32,13,30],[9,34,13,32],[10,4,14,2,"enc"],[10,7,14,5],[10,10,14,8,"enc"],[10,13,14,11],[10,17,14,15],[10,23,14,21],[11,4,15,2],[11,8,15,6],[11,9,15,7,"Buffer"],[11,15,15,13],[11,16,15,14,"isBuffer"],[11,24,15,22],[11,25,15,23,"pub"],[11,28,15,26],[11,29,15,27],[11,31,15,29],[12,6,16,4,"pub"],[12,9,16,7],[12,12,16,10],[12,16,16,14,"Buffer"],[12,22,16,20],[12,23,16,21,"pub"],[12,26,16,24],[12,28,16,26,"enc"],[12,31,16,29],[12,32,16,30],[13,4,17,2],[14,4,18,2],[14,8,18,6],[14,9,18,7,"_pub"],[14,13,18,11],[14,16,18,14],[14,21,18,14,"_$$_REQUIRE"],[14,32,18,14],[14,33,18,14,"_dependencyMap"],[14,47,18,14],[14,62,18,21,"pub"],[14,65,18,24],[14,66,18,25],[15,4,19,2],[15,11,19,9],[15,15,19,13],[16,2,20,0],[17,2,22,0],[17,11,22,9,"setPrivateKey"],[17,24,22,22,"setPrivateKey"],[17,25,22,23,"priv"],[17,29,22,27],[17,31,22,29,"enc"],[17,34,22,32],[17,36,22,34],[18,4,23,2,"enc"],[18,7,23,5],[18,10,23,8,"enc"],[18,13,23,11],[18,17,23,15],[18,23,23,21],[19,4,24,2],[19,8,24,6],[19,9,24,7,"Buffer"],[19,15,24,13],[19,16,24,14,"isBuffer"],[19,24,24,22],[19,25,24,23,"priv"],[19,29,24,27],[19,30,24,28],[19,32,24,30],[20,6,25,4,"priv"],[20,10,25,8],[20,13,25,11],[20,17,25,15,"Buffer"],[20,23,25,21],[20,24,25,22,"priv"],[20,28,25,26],[20,30,25,28,"enc"],[20,33,25,31],[20,34,25,32],[21,4,26,2],[22,4,27,2],[22,8,27,6],[22,9,27,7,"_priv"],[22,14,27,12],[22,17,27,15],[22,22,27,15,"_$$_REQUIRE"],[22,33,27,15],[22,34,27,15,"_dependencyMap"],[22,48,27,15],[22,63,27,22,"priv"],[22,67,27,26],[22,68,27,27],[23,4,28,2],[23,11,28,9],[23,15,28,13],[24,2,29,0],[25,2,31,0],[25,6,31,4,"primeCache"],[25,16,31,14],[25,19,31,17],[25,20,31,18],[25,21,31,19],[26,2,32,0],[26,11,32,9,"checkPrime"],[26,21,32,19,"checkPrime"],[26,22,32,20,"prime"],[26,27,32,25],[26,29,32,27,"generator"],[26,38,32,36],[26,40,32,38],[27,4,33,2],[27,8,33,6,"gen"],[27,11,33,9],[27,14,33,12,"generator"],[27,23,33,21],[27,24,33,22,"toString"],[27,32,33,30],[27,33,33,31],[27,38,33,36],[27,39,33,37],[28,4,34,2],[28,8,34,6,"hex"],[28,11,34,9],[28,14,34,12],[28,15,34,13,"gen"],[28,18,34,16],[28,20,34,18,"prime"],[28,25,34,23],[28,26,34,24,"toString"],[28,34,34,32],[28,35,34,33],[28,37,34,35],[28,38,34,36],[28,39,34,37],[28,40,34,38,"join"],[28,44,34,42],[28,45,34,43],[28,48,34,46],[28,49,34,47],[29,4,35,2],[29,8,35,6,"hex"],[29,11,35,9],[29,15,35,13,"primeCache"],[29,25,35,23],[29,27,35,25],[30,6,36,4],[30,13,36,11,"primeCache"],[30,23,36,21],[30,24,36,22,"hex"],[30,27,36,25],[30,28,36,26],[31,4,37,2],[32,4,38,2],[32,8,38,6,"error"],[32,13,38,11],[32,16,38,14],[32,17,38,15],[33,4,40,2],[33,8,40,6,"prime"],[33,13,40,11],[33,14,40,12,"isEven"],[33,20,40,18],[33,21,40,19],[33,22,40,20],[33,26,41,4],[33,27,41,5,"_$$_REQUIRE"],[33,38,41,5],[33,39,41,5,"_dependencyMap"],[33,53,41,5],[33,77,41,12,"simpleSieve"],[33,88,41,23],[33,92,42,4],[33,93,42,5,"_$$_REQUIRE"],[33,104,42,5],[33,105,42,5,"_dependencyMap"],[33,119,42,5],[33,143,42,12,"fermatTest"],[33,153,42,22],[33,154,42,23,"prime"],[33,159,42,28],[33,160,42,29],[33,164,43,4],[33,165,43,5,"millerRabin"],[33,176,43,16],[33,177,43,17,"test"],[33,181,43,21],[33,182,43,22,"prime"],[33,187,43,27],[33,188,43,28],[33,190,43,30],[34,6,44,4],[35,6,45,4,"error"],[35,11,45,9],[35,15,45,13],[35,16,45,14],[36,6,47,4],[36,10,47,8,"gen"],[36,13,47,11],[36,18,47,16],[36,22,47,20],[36,26,47,24,"gen"],[36,29,47,27],[36,34,47,32],[36,38,47,36],[36,40,47,38],[37,8,48,6],[38,8,49,6],[39,8,50,6,"error"],[39,13,50,11],[39,17,50,15],[39,18,50,16],[40,6,51,4],[40,7,51,5],[40,13,51,11],[41,8,52,6],[42,8,53,6],[43,8,54,6,"error"],[43,13,54,11],[43,17,54,15],[43,18,54,16],[44,6,55,4],[45,6,56,4,"primeCache"],[45,16,56,14],[45,17,56,15,"hex"],[45,20,56,18],[45,21,56,19],[45,24,56,22,"error"],[45,29,56,27],[46,6,57,4],[46,13,57,11,"error"],[46,18,57,16],[47,4,58,2],[48,4,59,2],[48,8,59,6],[48,9,59,7,"millerRabin"],[48,20,59,18],[48,21,59,19,"test"],[48,25,59,23],[48,26,59,24,"prime"],[48,31,59,29],[48,32,59,30,"shrn"],[48,36,59,34],[48,37,59,35],[48,38,59,36],[48,39,59,37],[48,40,59,38],[48,42,59,40],[49,6,60,4],[50,6,61,4,"error"],[50,11,61,9],[50,15,61,13],[50,16,61,14],[51,4,62,2],[52,4,63,2],[52,8,63,6,"rem"],[52,11,63,9],[53,4,64,2],[53,12,64,10,"gen"],[53,15,64,13],[54,6,65,4],[54,11,65,9],[54,15,65,13],[55,8,66,6],[55,12,66,10,"prime"],[55,17,66,15],[55,18,66,16,"mod"],[55,21,66,19],[55,22,66,20,"TWENTYFOUR"],[55,32,66,30],[55,33,66,31],[55,34,66,32,"cmp"],[55,37,66,35],[55,38,66,36,"ELEVEN"],[55,44,66,42],[55,45,66,43],[55,47,66,45],[56,10,67,8],[57,10,68,8,"error"],[57,15,68,13],[57,19,68,17],[57,20,68,18],[58,8,69,6],[59,8,70,6],[60,6,71,4],[60,11,71,9],[60,15,71,13],[61,8,72,6,"rem"],[61,11,72,9],[61,14,72,12,"prime"],[61,19,72,17],[61,20,72,18,"mod"],[61,23,72,21],[61,24,72,22,"TEN"],[61,27,72,25],[61,28,72,26],[62,8,73,6],[62,12,73,10,"rem"],[62,15,73,13],[62,16,73,14,"cmp"],[62,19,73,17],[62,20,73,18,"THREE"],[62,25,73,23],[62,26,73,24],[62,30,73,28,"rem"],[62,33,73,31],[62,34,73,32,"cmp"],[62,37,73,35],[62,38,73,36,"SEVEN"],[62,43,73,41],[62,44,73,42],[62,46,73,44],[63,10,74,8],[64,10,75,8,"error"],[64,15,75,13],[64,19,75,17],[64,20,75,18],[65,8,76,6],[66,8,77,6],[67,6,78,4],[68,8,79,6,"error"],[68,13,79,11],[68,17,79,15],[68,18,79,16],[69,4,80,2],[70,4,81,2,"primeCache"],[70,14,81,12],[70,15,81,13,"hex"],[70,18,81,16],[70,19,81,17],[70,22,81,20,"error"],[70,27,81,25],[71,4,82,2],[71,11,82,9,"error"],[71,16,82,14],[72,2,83,0],[73,2,85,0],[73,11,85,9,"DH"],[73,13,85,11,"DH"],[73,14,85,12,"prime"],[73,19,85,17],[73,21,85,19,"generator"],[73,30,85,28],[73,32,85,30,"malleable"],[73,41,85,39],[73,43,85,41],[74,4,86,2],[74,8,86,6],[74,9,86,7,"setGenerator"],[74,21,86,19],[74,22,86,20,"generator"],[74,31,86,29],[74,32,86,30],[75,4,87,2],[75,8,87,6],[75,9,87,7,"__prime"],[75,16,87,14],[75,19,87,17],[75,24,87,17,"_$$_REQUIRE"],[75,35,87,17],[75,36,87,17,"_dependencyMap"],[75,50,87,17],[75,65,87,24,"prime"],[75,70,87,29],[75,71,87,30],[76,4,88,2],[76,8,88,6],[76,9,88,7,"_prime"],[76,15,88,13],[76,18,88,16,"_$$_REQUIRE"],[76,29,88,16],[76,30,88,16,"_dependencyMap"],[76,44,88,16],[76,58,88,19,"mont"],[76,62,88,23],[76,63,88,24],[76,67,88,28],[76,68,88,29,"__prime"],[76,75,88,36],[76,76,88,37],[77,4,89,2],[77,8,89,6],[77,9,89,7,"_primeLen"],[77,18,89,16],[77,21,89,19,"prime"],[77,26,89,24],[77,27,89,25,"length"],[77,33,89,31],[78,4,90,2],[78,8,90,6],[78,9,90,7,"_pub"],[78,13,90,11],[78,16,90,14,"undefined"],[78,25,90,23],[79,4,91,2],[79,8,91,6],[79,9,91,7,"_priv"],[79,14,91,12],[79,17,91,15,"undefined"],[79,26,91,24],[80,4,92,2],[80,8,92,6],[80,9,92,7,"_primeCode"],[80,19,92,17],[80,22,92,20,"undefined"],[80,31,92,29],[81,4,93,2],[81,8,93,6,"malleable"],[81,17,93,15],[81,19,93,17],[82,6,94,4],[82,10,94,8],[82,11,94,9,"setPublicKey"],[82,23,94,21],[82,26,94,24,"setPublicKey"],[82,38,94,36],[83,6,95,4],[83,10,95,8],[83,11,95,9,"setPrivateKey"],[83,24,95,22],[83,27,95,25,"setPrivateKey"],[83,40,95,38],[84,4,96,2],[84,5,96,3],[84,11,96,9],[85,6,97,4],[85,10,97,8],[85,11,97,9,"_primeCode"],[85,21,97,19],[85,24,97,22],[85,25,97,23],[86,4,98,2],[87,2,99,0],[88,2,100,0,"Object"],[88,8,100,6],[88,9,100,7,"defineProperty"],[88,23,100,21],[88,24,100,22,"DH"],[88,26,100,24],[88,27,100,25,"prototype"],[88,36,100,34],[88,38,100,36],[88,51,100,49],[88,53,100,51],[89,4,101,2,"enumerable"],[89,14,101,12],[89,16,101,14],[89,20,101,18],[90,4,102,2,"get"],[90,7,102,5],[90,9,102,7],[90,18,102,2,"get"],[90,21,102,5,"get"],[90,22,102,5],[90,24,102,19],[91,6,103,4],[91,10,103,8],[91,17,103,15],[91,21,103,19],[91,22,103,20,"_primeCode"],[91,32,103,30],[91,37,103,35],[91,45,103,43],[91,47,103,45],[92,8,104,6],[92,12,104,10],[92,13,104,11,"_primeCode"],[92,23,104,21],[92,26,104,24,"checkPrime"],[92,36,104,34],[92,37,104,35],[92,41,104,39],[92,42,104,40,"__prime"],[92,49,104,47],[92,51,104,49],[92,55,104,53],[92,56,104,54,"__gen"],[92,61,104,59],[92,62,104,60],[93,6,105,4],[94,6,106,4],[94,13,106,11],[94,17,106,15],[94,18,106,16,"_primeCode"],[94,28,106,26],[95,4,107,2],[96,2,108,0],[96,3,108,1],[96,4,108,2],[97,2,109,0,"DH"],[97,4,109,2],[97,5,109,3,"prototype"],[97,14,109,12],[97,15,109,13,"generateKeys"],[97,27,109,25],[97,30,109,28],[97,42,109,40],[98,4,110,2],[98,8,110,6],[98,9,110,7],[98,13,110,11],[98,14,110,12,"_priv"],[98,19,110,17],[98,21,110,19],[99,6,111,4],[99,10,111,8],[99,11,111,9,"_priv"],[99,16,111,14],[99,19,111,17],[99,24,111,17,"_$$_REQUIRE"],[99,35,111,17],[99,36,111,17,"_dependencyMap"],[99,50,111,17],[99,65,111,24,"_$$_REQUIRE"],[99,76,111,24],[99,77,111,24,"_dependencyMap"],[99,91,111,24],[99,111,111,36],[99,115,111,40],[99,116,111,41,"_primeLen"],[99,125,111,50],[99,126,111,51],[99,127,111,52],[100,4,112,2],[101,4,113,2],[101,8,113,6],[101,9,113,7,"_pub"],[101,13,113,11],[101,16,113,14],[101,20,113,18],[101,21,113,19,"_gen"],[101,25,113,23],[101,26,113,24,"toRed"],[101,31,113,29],[101,32,113,30],[101,36,113,34],[101,37,113,35,"_prime"],[101,43,113,41],[101,44,113,42],[101,45,113,43,"redPow"],[101,51,113,49],[101,52,113,50],[101,56,113,54],[101,57,113,55,"_priv"],[101,62,113,60],[101,63,113,61],[101,64,113,62,"fromRed"],[101,71,113,69],[101,72,113,70],[101,73,113,71],[102,4,114,2],[102,11,114,9],[102,15,114,13],[102,16,114,14,"getPublicKey"],[102,28,114,26],[102,29,114,27],[102,30,114,28],[103,2,115,0],[103,3,115,1],[104,2,117,0,"DH"],[104,4,117,2],[104,5,117,3,"prototype"],[104,14,117,12],[104,15,117,13,"computeSecret"],[104,28,117,26],[104,31,117,29],[104,41,117,39,"other"],[104,46,117,44],[104,48,117,46],[105,4,118,2,"other"],[105,9,118,7],[105,12,118,10],[105,17,118,10,"_$$_REQUIRE"],[105,28,118,10],[105,29,118,10,"_dependencyMap"],[105,43,118,10],[105,58,118,17,"other"],[105,63,118,22],[105,64,118,23],[106,4,119,2,"other"],[106,9,119,7],[106,12,119,10,"other"],[106,17,119,15],[106,18,119,16,"toRed"],[106,23,119,21],[106,24,119,22],[106,28,119,26],[106,29,119,27,"_prime"],[106,35,119,33],[106,36,119,34],[107,4,120,2],[107,8,120,6,"secret"],[107,14,120,12],[107,17,120,15,"other"],[107,22,120,20],[107,23,120,21,"redPow"],[107,29,120,27],[107,30,120,28],[107,34,120,32],[107,35,120,33,"_priv"],[107,40,120,38],[107,41,120,39],[107,42,120,40,"fromRed"],[107,49,120,47],[107,50,120,48],[107,51,120,49],[108,4,121,2],[108,8,121,6,"out"],[108,11,121,9],[108,14,121,12],[108,18,121,16,"Buffer"],[108,24,121,22],[108,25,121,23,"secret"],[108,31,121,29],[108,32,121,30,"toArray"],[108,39,121,37],[108,40,121,38],[108,41,121,39],[108,42,121,40],[109,4,122,2],[109,8,122,6,"prime"],[109,13,122,11],[109,16,122,14],[109,20,122,18],[109,21,122,19,"getPrime"],[109,29,122,27],[109,30,122,28],[109,31,122,29],[110,4,123,2],[110,8,123,6,"out"],[110,11,123,9],[110,12,123,10,"length"],[110,18,123,16],[110,21,123,19,"prime"],[110,26,123,24],[110,27,123,25,"length"],[110,33,123,31],[110,35,123,33],[111,6,124,4],[111,10,124,8,"front"],[111,15,124,13],[111,18,124,16],[111,22,124,20,"Buffer"],[111,28,124,26],[111,29,124,27,"prime"],[111,34,124,32],[111,35,124,33,"length"],[111,41,124,39],[111,44,124,42,"out"],[111,47,124,45],[111,48,124,46,"length"],[111,54,124,52],[111,55,124,53],[112,6,125,4,"front"],[112,11,125,9],[112,12,125,10,"fill"],[112,16,125,14],[112,17,125,15],[112,18,125,16],[112,19,125,17],[113,6,126,4,"out"],[113,9,126,7],[113,12,126,10,"Buffer"],[113,18,126,16],[113,19,126,17,"concat"],[113,25,126,23],[113,26,126,24],[113,27,126,25,"front"],[113,32,126,30],[113,34,126,32,"out"],[113,37,126,35],[113,38,126,36],[113,39,126,37],[114,4,127,2],[115,4,128,2],[115,11,128,9,"out"],[115,14,128,12],[116,2,129,0],[116,3,129,1],[117,2,131,0,"DH"],[117,4,131,2],[117,5,131,3,"prototype"],[117,14,131,12],[117,15,131,13,"getPublicKey"],[117,27,131,25],[117,30,131,28],[117,39,131,37,"getPublicKey"],[117,51,131,49,"getPublicKey"],[117,52,131,50,"enc"],[117,55,131,53],[117,57,131,55],[118,4,132,2],[118,11,132,9,"formatReturnValue"],[118,28,132,26],[118,29,132,27],[118,33,132,31],[118,34,132,32,"_pub"],[118,38,132,36],[118,40,132,38,"enc"],[118,43,132,41],[118,44,132,42],[119,2,133,0],[119,3,133,1],[120,2,135,0,"DH"],[120,4,135,2],[120,5,135,3,"prototype"],[120,14,135,12],[120,15,135,13,"getPrivateKey"],[120,28,135,26],[120,31,135,29],[120,40,135,38,"getPrivateKey"],[120,53,135,51,"getPrivateKey"],[120,54,135,52,"enc"],[120,57,135,55],[120,59,135,57],[121,4,136,2],[121,11,136,9,"formatReturnValue"],[121,28,136,26],[121,29,136,27],[121,33,136,31],[121,34,136,32,"_priv"],[121,39,136,37],[121,41,136,39,"enc"],[121,44,136,42],[121,45,136,43],[122,2,137,0],[122,3,137,1],[123,2,139,0,"DH"],[123,4,139,2],[123,5,139,3,"prototype"],[123,14,139,12],[123,15,139,13,"getPrime"],[123,23,139,21],[123,26,139,24],[123,36,139,34,"enc"],[123,39,139,37],[123,41,139,39],[124,4,140,2],[124,11,140,9,"formatReturnValue"],[124,28,140,26],[124,29,140,27],[124,33,140,31],[124,34,140,32,"__prime"],[124,41,140,39],[124,43,140,41,"enc"],[124,46,140,44],[124,47,140,45],[125,2,141,0],[125,3,141,1],[126,2,143,0,"DH"],[126,4,143,2],[126,5,143,3,"prototype"],[126,14,143,12],[126,15,143,13,"getGenerator"],[126,27,143,25],[126,30,143,28],[126,40,143,38,"enc"],[126,43,143,41],[126,45,143,43],[127,4,144,2],[127,11,144,9,"formatReturnValue"],[127,28,144,26],[127,29,144,27],[127,33,144,31],[127,34,144,32,"_gen"],[127,38,144,36],[127,40,144,38,"enc"],[127,43,144,41],[127,44,144,42],[128,2,145,0],[128,3,145,1],[129,2,147,0,"DH"],[129,4,147,2],[129,5,147,3,"prototype"],[129,14,147,12],[129,15,147,13,"setGenerator"],[129,27,147,25],[129,30,147,28],[129,40,147,38,"gen"],[129,43,147,41],[129,45,147,43,"enc"],[129,48,147,46],[129,50,147,48],[130,4,148,2,"enc"],[130,7,148,5],[130,10,148,8,"enc"],[130,13,148,11],[130,17,148,15],[130,23,148,21],[131,4,149,2],[131,8,149,6],[131,9,149,7,"Buffer"],[131,15,149,13],[131,16,149,14,"isBuffer"],[131,24,149,22],[131,25,149,23,"gen"],[131,28,149,26],[131,29,149,27],[131,31,149,29],[132,6,150,4,"gen"],[132,9,150,7],[132,12,150,10],[132,16,150,14,"Buffer"],[132,22,150,20],[132,23,150,21,"gen"],[132,26,150,24],[132,28,150,26,"enc"],[132,31,150,29],[132,32,150,30],[133,4,151,2],[134,4,152,2],[134,8,152,6],[134,9,152,7,"__gen"],[134,14,152,12],[134,17,152,15,"gen"],[134,20,152,18],[135,4,153,2],[135,8,153,6],[135,9,153,7,"_gen"],[135,13,153,11],[135,16,153,14],[135,21,153,14,"_$$_REQUIRE"],[135,32,153,14],[135,33,153,14,"_dependencyMap"],[135,47,153,14],[135,62,153,21,"gen"],[135,65,153,24],[135,66,153,25],[136,4,154,2],[136,11,154,9],[136,15,154,13],[137,2,155,0],[137,3,155,1],[138,2,157,0],[138,11,157,9,"formatReturnValue"],[138,28,157,26,"formatReturnValue"],[138,29,157,27,"bn"],[138,31,157,29],[138,33,157,31,"enc"],[138,36,157,34],[138,38,157,36],[139,4,158,2],[139,8,158,6,"buf"],[139,11,158,9],[139,14,158,12],[139,18,158,16,"Buffer"],[139,24,158,22],[139,25,158,23,"bn"],[139,27,158,25],[139,28,158,26,"toArray"],[139,35,158,33],[139,36,158,34],[139,37,158,35],[139,38,158,36],[140,4,159,2],[140,8,159,6],[140,9,159,7,"enc"],[140,12,159,10],[140,14,159,12],[141,6,160,4],[141,13,160,11,"buf"],[141,16,160,14],[142,4,161,2],[142,5,161,3],[142,11,161,9],[143,6,162,4],[143,13,162,11,"buf"],[143,16,162,14],[143,17,162,15,"toString"],[143,25,162,23],[143,26,162,24,"enc"],[143,29,162,27],[143,30,162,28],[144,4,163,2],[145,2,164,0],[146,0,164,1],[146,3]],"functionMap":{"names":["<global>","setPublicKey","setPrivateKey","checkPrime","DH","Object.defineProperty$argument_2.get","DH.prototype.generateKeys","DH.prototype.computeSecret","getPublicKey","getPrivateKey","DH.prototype.getPrime","DH.prototype.getGenerator","DH.prototype.setGenerator","formatReturnValue"],"mappings":"AAA;ACY;CDO;AEE;CFO;AGG;CHmD;AIE;CJc;OKG;GLK;4BME;CNM;6BOE;CPY;4BQE;CRE;6BSE;CTE;wBUE;CVE;4BWE;CXE;4BYE;CZQ;AaE;CbO"}},"type":"js/module"}]}