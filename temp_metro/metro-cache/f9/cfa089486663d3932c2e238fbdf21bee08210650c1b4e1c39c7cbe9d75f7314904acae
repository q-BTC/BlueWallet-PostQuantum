{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":100,"column":0,"index":2785}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"../core/AxiosError.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":55},"end":{"line":4,"column":47,"index":102}}],"key":"hOxld1Hs3dl/ep5YdqPz+tKeqSo="}},{"name":"../env/data.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":39,"index":54}}],"key":"bnbbKmgE2t+r+Ul/Q7AWCkgNRRM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _AxiosError = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"../core/AxiosError.js\"));\n  var validators = {};\n\n  // eslint-disable-next-line func-names\n  ['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function (type, i) {\n    validators[type] = function validator(thing) {\n      return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n    };\n  });\n  var deprecatedWarnings = {};\n\n  /**\n   * Transitional option validator\n   *\n   * @param {function|boolean?} validator - set to false if the transitional option has been removed\n   * @param {string?} version - deprecated version / removed since version\n   * @param {string?} message - some message with additional info\n   *\n   * @returns {function}\n   */\n  validators.transitional = function transitional(validator, version, message) {\n    function formatMessage(opt, desc) {\n      return '[Axios v' + _$$_REQUIRE(_dependencyMap[2], \"../env/data.js\").VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n    }\n\n    // eslint-disable-next-line func-names\n    return function (value, opt, opts) {\n      if (validator === false) {\n        throw new _AxiosError.default(formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')), _AxiosError.default.ERR_DEPRECATED);\n      }\n      if (version && !deprecatedWarnings[opt]) {\n        deprecatedWarnings[opt] = true;\n        // eslint-disable-next-line no-console\n        console.warn(formatMessage(opt, ' has been deprecated since v' + version + ' and will be removed in the near future'));\n      }\n      return validator ? validator(value, opt, opts) : true;\n    };\n  };\n  validators.spelling = function spelling(correctSpelling) {\n    return function (value, opt) {\n      // eslint-disable-next-line no-console\n      console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n      return true;\n    };\n  };\n\n  /**\n   * Assert object's properties type\n   *\n   * @param {object} options\n   * @param {object} schema\n   * @param {boolean?} allowUnknown\n   *\n   * @returns {object}\n   */\n\n  function assertOptions(options, schema, allowUnknown) {\n    if (typeof options !== 'object') {\n      throw new _AxiosError.default('options must be an object', _AxiosError.default.ERR_BAD_OPTION_VALUE);\n    }\n    var keys = Object.keys(options);\n    var i = keys.length;\n    while (i-- > 0) {\n      var opt = keys[i];\n      var validator = schema[opt];\n      if (validator) {\n        var value = options[opt];\n        var result = value === undefined || validator(value, opt, options);\n        if (result !== true) {\n          throw new _AxiosError.default('option ' + opt + ' must be ' + result, _AxiosError.default.ERR_BAD_OPTION_VALUE);\n        }\n        continue;\n      }\n      if (allowUnknown !== true) {\n        throw new _AxiosError.default('Unknown option ' + opt, _AxiosError.default.ERR_BAD_OPTION);\n      }\n    }\n  }\n  var _default = exports.default = {\n    assertOptions: assertOptions,\n    validators: validators\n  };\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"_$$_REQUIRE"],[4,42,1,13],[4,43,1,13,"_dependencyMap"],[4,57,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,4,0],[9,6,4,0,"_AxiosError"],[9,17,4,0],[9,20,4,0,"_interopRequireDefault"],[9,42,4,0],[9,43,4,0,"_$$_REQUIRE"],[9,54,4,0],[9,55,4,0,"_dependencyMap"],[9,69,4,0],[10,2,6,0],[10,6,6,6,"validators"],[10,16,6,16],[10,19,6,19],[10,20,6,20],[10,21,6,21],[12,2,8,0],[13,2,9,0],[13,3,9,1],[13,11,9,9],[13,13,9,11],[13,22,9,20],[13,24,9,22],[13,32,9,30],[13,34,9,32],[13,44,9,42],[13,46,9,44],[13,54,9,52],[13,56,9,54],[13,64,9,62],[13,65,9,63],[13,66,9,64,"forEach"],[13,73,9,71],[13,74,9,72],[13,84,9,73,"type"],[13,88,9,77],[13,90,9,79,"i"],[13,91,9,80],[13,93,9,85],[14,4,10,2,"validators"],[14,14,10,12],[14,15,10,13,"type"],[14,19,10,17],[14,20,10,18],[14,23,10,21],[14,32,10,30,"validator"],[14,41,10,39,"validator"],[14,42,10,40,"thing"],[14,47,10,45],[14,49,10,47],[15,6,11,4],[15,13,11,11],[15,20,11,18,"thing"],[15,25,11,23],[15,30,11,28,"type"],[15,34,11,32],[15,38,11,36],[15,41,11,39],[15,45,11,43,"i"],[15,46,11,44],[15,49,11,47],[15,50,11,48],[15,53,11,51],[15,57,11,55],[15,60,11,58],[15,63,11,61],[15,64,11,62],[15,67,11,65,"type"],[15,71,11,69],[16,4,12,2],[16,5,12,3],[17,2,13,0],[17,3,13,1],[17,4,13,2],[18,2,15,0],[18,6,15,6,"deprecatedWarnings"],[18,24,15,24],[18,27,15,27],[18,28,15,28],[18,29,15,29],[20,2,17,0],[21,0,18,0],[22,0,19,0],[23,0,20,0],[24,0,21,0],[25,0,22,0],[26,0,23,0],[27,0,24,0],[28,0,25,0],[29,2,26,0,"validators"],[29,12,26,10],[29,13,26,11,"transitional"],[29,25,26,23],[29,28,26,26],[29,37,26,35,"transitional"],[29,49,26,47,"transitional"],[29,50,26,48,"validator"],[29,59,26,57],[29,61,26,59,"version"],[29,68,26,66],[29,70,26,68,"message"],[29,77,26,75],[29,79,26,77],[30,4,27,2],[30,13,27,11,"formatMessage"],[30,26,27,24,"formatMessage"],[30,27,27,25,"opt"],[30,30,27,28],[30,32,27,30,"desc"],[30,36,27,34],[30,38,27,36],[31,6,28,4],[31,13,28,11],[31,23,28,21],[31,26,28,24,"VERSION"],[31,56,28,24],[31,57,28,24,"VERSION"],[31,82,28,31],[31,85,28,34],[31,111,28,60],[31,114,28,63,"opt"],[31,117,28,66],[31,120,28,69],[31,124,28,73],[31,127,28,76,"desc"],[31,131,28,80],[31,135,28,84,"message"],[31,142,28,91],[31,145,28,94],[31,149,28,98],[31,152,28,101,"message"],[31,159,28,108],[31,162,28,111],[31,164,28,113],[31,165,28,114],[32,4,29,2],[34,4,31,2],[35,4,32,2],[35,11,32,9],[35,21,32,10,"value"],[35,26,32,15],[35,28,32,17,"opt"],[35,31,32,20],[35,33,32,22,"opts"],[35,37,32,26],[35,39,32,31],[36,6,33,4],[36,10,33,8,"validator"],[36,19,33,17],[36,24,33,22],[36,29,33,27],[36,31,33,29],[37,8,34,6],[37,14,34,12],[37,18,34,16,"AxiosError"],[37,37,34,26],[37,38,35,8,"formatMessage"],[37,51,35,21],[37,52,35,22,"opt"],[37,55,35,25],[37,57,35,27],[37,76,35,46],[37,80,35,50,"version"],[37,87,35,57],[37,90,35,60],[37,96,35,66],[37,99,35,69,"version"],[37,106,35,76],[37,109,35,79],[37,111,35,81],[37,112,35,82],[37,113,35,83],[37,115,36,8,"AxiosError"],[37,134,36,18],[37,135,36,19,"ERR_DEPRECATED"],[37,149,37,6],[37,150,37,7],[38,6,38,4],[39,6,40,4],[39,10,40,8,"version"],[39,17,40,15],[39,21,40,19],[39,22,40,20,"deprecatedWarnings"],[39,40,40,38],[39,41,40,39,"opt"],[39,44,40,42],[39,45,40,43],[39,47,40,45],[40,8,41,6,"deprecatedWarnings"],[40,26,41,24],[40,27,41,25,"opt"],[40,30,41,28],[40,31,41,29],[40,34,41,32],[40,38,41,36],[41,8,42,6],[42,8,43,6,"console"],[42,15,43,13],[42,16,43,14,"warn"],[42,20,43,18],[42,21,44,8,"formatMessage"],[42,34,44,21],[42,35,45,10,"opt"],[42,38,45,13],[42,40,46,10],[42,70,46,40],[42,73,46,43,"version"],[42,80,46,50],[42,83,46,53],[42,124,47,8],[42,125,48,6],[42,126,48,7],[43,6,49,4],[44,6,51,4],[44,13,51,11,"validator"],[44,22,51,20],[44,25,51,23,"validator"],[44,34,51,32],[44,35,51,33,"value"],[44,40,51,38],[44,42,51,40,"opt"],[44,45,51,43],[44,47,51,45,"opts"],[44,51,51,49],[44,52,51,50],[44,55,51,53],[44,59,51,57],[45,4,52,2],[45,5,52,3],[46,2,53,0],[46,3,53,1],[47,2,55,0,"validators"],[47,12,55,10],[47,13,55,11,"spelling"],[47,21,55,19],[47,24,55,22],[47,33,55,31,"spelling"],[47,41,55,39,"spelling"],[47,42,55,40,"correctSpelling"],[47,57,55,55],[47,59,55,57],[48,4,56,2],[48,11,56,9],[48,21,56,10,"value"],[48,26,56,15],[48,28,56,17,"opt"],[48,31,56,20],[48,33,56,25],[49,6,57,4],[50,6,58,4,"console"],[50,13,58,11],[50,14,58,12,"warn"],[50,18,58,16],[50,19,58,17],[50,22,58,20,"opt"],[50,25,58,23],[50,56,58,54,"correctSpelling"],[50,71,58,69],[50,73,58,71],[50,74,58,72],[51,6,59,4],[51,13,59,11],[51,17,59,15],[52,4,60,2],[52,5,60,3],[53,2,61,0],[53,3,61,1],[55,2,63,0],[56,0,64,0],[57,0,65,0],[58,0,66,0],[59,0,67,0],[60,0,68,0],[61,0,69,0],[62,0,70,0],[63,0,71,0],[65,2,73,0],[65,11,73,9,"assertOptions"],[65,24,73,22,"assertOptions"],[65,25,73,23,"options"],[65,32,73,30],[65,34,73,32,"schema"],[65,40,73,38],[65,42,73,40,"allowUnknown"],[65,54,73,52],[65,56,73,54],[66,4,74,2],[66,8,74,6],[66,15,74,13,"options"],[66,22,74,20],[66,27,74,25],[66,35,74,33],[66,37,74,35],[67,6,75,4],[67,12,75,10],[67,16,75,14,"AxiosError"],[67,35,75,24],[67,36,75,25],[67,63,75,52],[67,65,75,54,"AxiosError"],[67,84,75,64],[67,85,75,65,"ERR_BAD_OPTION_VALUE"],[67,105,75,85],[67,106,75,86],[68,4,76,2],[69,4,77,2],[69,8,77,8,"keys"],[69,12,77,12],[69,15,77,15,"Object"],[69,21,77,21],[69,22,77,22,"keys"],[69,26,77,26],[69,27,77,27,"options"],[69,34,77,34],[69,35,77,35],[70,4,78,2],[70,8,78,6,"i"],[70,9,78,7],[70,12,78,10,"keys"],[70,16,78,14],[70,17,78,15,"length"],[70,23,78,21],[71,4,79,2],[71,11,79,9,"i"],[71,12,79,10],[71,14,79,12],[71,17,79,15],[71,18,79,16],[71,20,79,18],[72,6,80,4],[72,10,80,10,"opt"],[72,13,80,13],[72,16,80,16,"keys"],[72,20,80,20],[72,21,80,21,"i"],[72,22,80,22],[72,23,80,23],[73,6,81,4],[73,10,81,10,"validator"],[73,19,81,19],[73,22,81,22,"schema"],[73,28,81,28],[73,29,81,29,"opt"],[73,32,81,32],[73,33,81,33],[74,6,82,4],[74,10,82,8,"validator"],[74,19,82,17],[74,21,82,19],[75,8,83,6],[75,12,83,12,"value"],[75,17,83,17],[75,20,83,20,"options"],[75,27,83,27],[75,28,83,28,"opt"],[75,31,83,31],[75,32,83,32],[76,8,84,6],[76,12,84,12,"result"],[76,18,84,18],[76,21,84,21,"value"],[76,26,84,26],[76,31,84,31,"undefined"],[76,40,84,40],[76,44,84,44,"validator"],[76,53,84,53],[76,54,84,54,"value"],[76,59,84,59],[76,61,84,61,"opt"],[76,64,84,64],[76,66,84,66,"options"],[76,73,84,73],[76,74,84,74],[77,8,85,6],[77,12,85,10,"result"],[77,18,85,16],[77,23,85,21],[77,27,85,25],[77,29,85,27],[78,10,86,8],[78,16,86,14],[78,20,86,18,"AxiosError"],[78,39,86,28],[78,40,86,29],[78,49,86,38],[78,52,86,41,"opt"],[78,55,86,44],[78,58,86,47],[78,69,86,58],[78,72,86,61,"result"],[78,78,86,67],[78,80,86,69,"AxiosError"],[78,99,86,79],[78,100,86,80,"ERR_BAD_OPTION_VALUE"],[78,120,86,100],[78,121,86,101],[79,8,87,6],[80,8,88,6],[81,6,89,4],[82,6,90,4],[82,10,90,8,"allowUnknown"],[82,22,90,20],[82,27,90,25],[82,31,90,29],[82,33,90,31],[83,8,91,6],[83,14,91,12],[83,18,91,16,"AxiosError"],[83,37,91,26],[83,38,91,27],[83,55,91,44],[83,58,91,47,"opt"],[83,61,91,50],[83,63,91,52,"AxiosError"],[83,82,91,62],[83,83,91,63,"ERR_BAD_OPTION"],[83,97,91,77],[83,98,91,78],[84,6,92,4],[85,4,93,2],[86,2,94,0],[87,2,94,1],[87,6,94,1,"_default"],[87,14,94,1],[87,17,94,1,"exports"],[87,24,94,1],[87,25,94,1,"default"],[87,32,94,1],[87,35,96,15],[88,4,97,2,"assertOptions"],[88,17,97,15],[88,19,97,2,"assertOptions"],[88,32,97,15],[89,4,98,2,"validators"],[89,14,98,12],[89,16,98,2,"validators"],[90,2,99,0],[90,3,99,1],[91,0,99,1],[91,3]],"functionMap":{"names":["<global>","forEach$argument_0","validator","transitional","formatMessage","<anonymous>","spelling","assertOptions"],"mappings":"AAA;wECQ;qBCC;GDE;CDC;0BGa;ECC;GDE;SEG;GFoB;CHC;sBME;SDC;GCI;CNC;AOY;CPqB"}},"type":"js/module"}]}