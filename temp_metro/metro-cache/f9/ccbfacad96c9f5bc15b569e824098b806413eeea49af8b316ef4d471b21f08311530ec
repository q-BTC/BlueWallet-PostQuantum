{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"7RhWyTq5i/X0UNOgMT1VkjxHPX0="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1313,"column":0,"index":45250}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bip32","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"N06/O/9WKiQ+JvkVogn1t6zAaK0="}},{"name":"bip39","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":31,"index":85}}],"key":"QQUIxv/Rmue50N7SMxVd96Ng/bc="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":86},"end":{"line":3,"column":41,"index":127}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"bs58check","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":179},"end":{"line":5,"column":28,"index":207}}],"key":"NLzwLXOhrhT51Y7aP9purlo+2cM="}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":296},"end":{"line":7,"column":37,"index":333}}],"key":"S+LTcEsr9DE4tXbLBAdDMJflQ0A="}},{"name":"electrum-mnemonic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":374},"end":{"line":9,"column":40,"index":414}}],"key":"b4QCQvkNs+MSdAmkDbo2ZB62QY4="}},{"name":"../../blue_modules/BlueElectrum","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":416},"end":{"line":11,"column":64,"index":480}}],"key":"4YdrXI/cQIf9X1EFj5L/r0NpY3g="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":481},"end":{"line":12,"column":47,"index":528}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"ecpair","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":334},"end":{"line":8,"column":39,"index":373}}],"key":"u6yWeivdFv15Am3FmwSfeX38wPs="}},{"name":"../../blue_modules/ur","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":529},"end":{"line":13,"column":49,"index":578}}],"key":"u1KSuHZEmiyDh6ef0D5auxWoob4="}},{"name":"./abstract-hd-electrum-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":579},"end":{"line":14,"column":73,"index":652}},{"start":{"line":14,"column":0,"index":579},"end":{"line":14,"column":73,"index":652}}],"key":"A/Wx3xahkB658fXb/ksu5385tqM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MultisigHDWallet = void 0;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _get2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/get\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n  var _bip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"bip32\"));\n  var bip39 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[11], \"bip39\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12], \"bitcoinjs-lib\"));\n  var _bs58check = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"bs58check\"));\n  var _createHash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"create-hash\"));\n  var mn = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15], \"electrum-mnemonic\"));\n  var BlueElectrum = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[16], \"../../blue_modules/BlueElectrum\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[17], \"../../blue_modules/noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  var ECPair = (0, _$$_REQUIRE(_dependencyMap[18], \"ecpair\").ECPairFactory)(_noble_ecc.default);\n  var bip32 = (0, _bip.default)(_noble_ecc.default);\n  var electrumSegwit = function electrumSegwit(passphrase) {\n    return Object.assign({\n      prefix: mn.PREFIXES.segwit\n    }, passphrase ? {\n      passphrase: passphrase\n    } : {});\n  };\n  var electrumStandart = function electrumStandart(passphrase) {\n    return Object.assign({\n      prefix: mn.PREFIXES.standard\n    }, passphrase ? {\n      passphrase: passphrase\n    } : {});\n  };\n  var ELECTRUM_SEED_PREFIX = 'electrumseed:';\n  var MultisigHDWallet = exports.MultisigHDWallet = /*#__PURE__*/function (_AbstractHDElectrumWa) {\n    function MultisigHDWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, MultisigHDWallet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, MultisigHDWallet, [].concat(args));\n      // @ts-ignore: override\n      _this.type = MultisigHDWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = MultisigHDWallet.typeReadable;\n      _this._m = 0;\n      //  minimum required signatures so spend (m out of n)\n      _this._cosigners = [];\n      // array of xpubs or mnemonic seeds\n      _this._cosignersFingerprints = [];\n      // array of according fingerprints  (if any provided)\n      _this._cosignersCustomPaths = [];\n      // array of according paths (if any provided)\n      _this._cosignersPassphrases = [];\n      // array of according passphrases (if any provided)\n      _this._isNativeSegwit = false;\n      _this._isWrappedSegwit = false;\n      _this._isLegacy = false;\n      _this._nodes = {};\n      // nodeIndex -> cosignerIndex -> BIP32Interface\n      _this._derivationPath = '';\n      _this.gap_limit = 20;\n      return _this;\n    }\n    (0, _inherits2.default)(MultisigHDWallet, _AbstractHDElectrumWa);\n    return (0, _createClass2.default)(MultisigHDWallet, [{\n      key: \"isLegacy\",\n      value: function isLegacy() {\n        return this._isLegacy;\n      }\n    }, {\n      key: \"isNativeSegwit\",\n      value: function isNativeSegwit() {\n        return this._isNativeSegwit;\n      }\n    }, {\n      key: \"isWrappedSegwit\",\n      value: function isWrappedSegwit() {\n        return this._isWrappedSegwit;\n      }\n    }, {\n      key: \"setWrappedSegwit\",\n      value: function setWrappedSegwit() {\n        this._isWrappedSegwit = true;\n      }\n    }, {\n      key: \"setNativeSegwit\",\n      value: function setNativeSegwit() {\n        this._isNativeSegwit = true;\n      }\n    }, {\n      key: \"setLegacy\",\n      value: function setLegacy() {\n        this._isLegacy = true;\n      }\n    }, {\n      key: \"setM\",\n      value: function setM(m) {\n        this._m = m;\n      }\n\n      /**\n       * @returns {number} How many minumim signatures required to authorize a spend\n       */\n    }, {\n      key: \"getM\",\n      value: function getM() {\n        return this._m;\n      }\n\n      /**\n       * @returns {number} Total count of cosigners\n       */\n    }, {\n      key: \"getN\",\n      value: function getN() {\n        return this._cosigners.length;\n      }\n    }, {\n      key: \"setDerivationPath\",\n      value: function setDerivationPath(path) {\n        this._derivationPath = path;\n        switch (this._derivationPath) {\n          case \"m/48'/0'/0'/2'\":\n            this._isNativeSegwit = true;\n            break;\n          case \"m/48'/0'/0'/1'\":\n            this._isWrappedSegwit = true;\n            break;\n          case \"m/45'\":\n            this._isLegacy = true;\n            break;\n          case \"m/44'\":\n            this._isLegacy = true;\n            break;\n        }\n      }\n    }, {\n      key: \"getCustomDerivationPathForCosigner\",\n      value: function getCustomDerivationPathForCosigner(index) {\n        if (index === 0) throw new Error('cosigners indexation starts from 1');\n        if (index > this.getN()) return false;\n        return this._cosignersCustomPaths[index - 1] || this.getDerivationPath();\n      }\n    }, {\n      key: \"getCosigner\",\n      value: function getCosigner(index) {\n        if (index === 0) throw new Error('cosigners indexation starts from 1');\n        return this._cosigners[index - 1];\n      }\n    }, {\n      key: \"getFingerprint\",\n      value: function getFingerprint(index) {\n        if (index === 0) throw new Error('cosigners fingerprints indexation starts from 1');\n        return this._cosignersFingerprints[index - 1];\n      }\n    }, {\n      key: \"getCosignerForFingerprint\",\n      value: function getCosignerForFingerprint(fp) {\n        var index = this._cosignersFingerprints.indexOf(fp);\n        return this._cosigners[index];\n      }\n    }, {\n      key: \"getCosignerPassphrase\",\n      value: function getCosignerPassphrase(index) {\n        if (index === 0) throw new Error('cosigners indexation starts from 1');\n        return this._cosignersPassphrases[index - 1];\n      }\n    }, {\n      key: \"addCosigner\",\n      value:\n      /**\n       *\n       * @param key {string} Either xpub or mnemonic phrase\n       * @param fingerprint {string} Fingerprint for cosigner that is added as xpub\n       * @param path {string} Custom path (if any) for cosigner that is added as mnemonics\n       * @param passphrase {string} BIP38 Passphrase (if any)\n       */\n      function addCosigner(key, fingerprint, path, passphrase) {\n        if (MultisigHDWallet.isXpubString(key) && !fingerprint) {\n          throw new Error('fingerprint is required when adding cosigner as xpub (watch-only)');\n        }\n        if (path && !MultisigHDWallet.isPathValid(path)) {\n          throw new Error('path is not valid');\n        }\n        if (MultisigHDWallet.isXprvString(key)) {\n          // nop, but probably should validate xprv\n        } else if (MultisigHDWallet.isXpubString(key)) {\n          // nop, just validate\n          if (!MultisigHDWallet.isXpubValid(key)) throw new Error('Not a valid xpub: ' + key);\n        } else if (key.startsWith(ELECTRUM_SEED_PREFIX) && fingerprint && path) {\n          // its an electrum seed\n          var mnemonic = key.replace(ELECTRUM_SEED_PREFIX, '');\n          try {\n            mn.mnemonicToSeedSync(mnemonic, electrumStandart(passphrase));\n            this.setLegacy();\n          } catch (_) {\n            try {\n              mn.mnemonicToSeedSync(mnemonic, electrumSegwit(passphrase));\n              this.setNativeSegwit();\n            } catch (__) {\n              throw new Error('Not a valid electrum seed');\n            }\n          }\n        } else {\n          // mnemonics. lets derive fingerprint (if it wasnt provided)\n          if (!bip39.validateMnemonic(key)) throw new Error('Not a valid mnemonic phrase');\n          fingerprint = fingerprint || MultisigHDWallet.mnemonicToFingerprint(key, passphrase);\n        }\n        if (fingerprint && this._cosignersFingerprints.indexOf(fingerprint.toUpperCase()) !== -1 && fingerprint !== '00000000') {\n          // 00000000 is a special case, means we have no idea what the FP is but its okay\n          throw new Error('Duplicate fingerprint');\n        }\n        var index = this._cosigners.length;\n        this._cosigners[index] = key;\n        if (fingerprint) this._cosignersFingerprints[index] = fingerprint.toUpperCase();\n        if (path) this._cosignersCustomPaths[index] = path;\n        if (passphrase) this._cosignersPassphrases[index] = passphrase;\n      }\n    }, {\n      key: \"_getXpubFromCosignerIndex\",\n      value:\n      /**\n       * Stored cosigner can be EITHER xpub (or Zpub or smth), OR mnemonic phrase. This method converts it to xpub\n       *\n       * @param index {number}\n       * @returns {string} xpub\n       * @private\n       */\n      function _getXpubFromCosignerIndex(index) {\n        if (!this._cosigners || !this._cosigners[index]) {\n          throw new Error('Invalid cosigner index or cosigners not initialized');\n        }\n        var cosigner = this._cosigners[index];\n        if (MultisigHDWallet.isXprvString(cosigner)) cosigner = MultisigHDWallet.convertXprvToXpub(cosigner);\n        var xpub = cosigner;\n        if (!MultisigHDWallet.isXpubString(cosigner)) {\n          xpub = MultisigHDWallet.seedToXpub(cosigner, this._cosignersCustomPaths[index] || this._derivationPath, this._cosignersPassphrases[index]);\n        }\n        return this._zpubToXpub(xpub);\n      }\n    }, {\n      key: \"_getExternalAddressByIndex\",\n      value: function _getExternalAddressByIndex(index) {\n        if (!this._m) throw new Error('m is not set');\n        index = +index;\n        if (this.external_addresses_cache[index]) return this.external_addresses_cache[index]; // cache hit\n\n        var address = this._getAddressFromNode(0, index);\n        this.external_addresses_cache[index] = address;\n        return address;\n      }\n    }, {\n      key: \"_getAddressFromNode\",\n      value: function _getAddressFromNode(nodeIndex, index) {\n        this._nodes = this._nodes || {};\n        var pubkeys = [];\n        for (var _ref of this._cosigners.entries()) {\n          var _ref2 = (0, _slicedToArray2.default)(_ref, 1);\n          var cosignerIndex = _ref2[0];\n          this._nodes[nodeIndex] = this._nodes[nodeIndex] || {};\n          var _node = void 0;\n          if (!this._nodes[nodeIndex][cosignerIndex]) {\n            var xpub = this._getXpubFromCosignerIndex(cosignerIndex);\n            var hdNode = bip32.fromBase58(xpub);\n            _node = hdNode.derive(nodeIndex);\n            this._nodes[nodeIndex][cosignerIndex] = _node;\n          } else {\n            _node = this._nodes[nodeIndex][cosignerIndex];\n          }\n          pubkeys.push(_node.derive(index).publicKey);\n        }\n        if (this.isWrappedSegwit()) {\n          var _bitcoin$payments$p2s = bitcoin.payments.p2sh({\n              redeem: bitcoin.payments.p2wsh({\n                redeem: bitcoin.payments.p2ms({\n                  m: this._m,\n                  pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n                })\n              })\n            }),\n            address = _bitcoin$payments$p2s.address;\n          if (!address) {\n            throw new Error('Internal error: could not make p2sh address');\n          }\n          return address;\n        } else if (this.isNativeSegwit()) {\n          var _bitcoin$payments$p2w = bitcoin.payments.p2wsh({\n              redeem: bitcoin.payments.p2ms({\n                m: this._m,\n                pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n              })\n            }),\n            _address = _bitcoin$payments$p2w.address;\n          if (!_address) {\n            throw new Error('Internal error: could not make p2wsh address');\n          }\n          return _address;\n        } else if (this.isLegacy()) {\n          var _bitcoin$payments$p2s2 = bitcoin.payments.p2sh({\n              redeem: bitcoin.payments.p2ms({\n                m: this._m,\n                pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n              })\n            }),\n            _address2 = _bitcoin$payments$p2s2.address;\n          if (!_address2) {\n            throw new Error('Internal error: could not make p2sh address');\n          }\n          return _address2;\n        } else {\n          throw new Error('Dont know how to make address');\n        }\n      }\n    }, {\n      key: \"_getInternalAddressByIndex\",\n      value: function _getInternalAddressByIndex(index) {\n        if (!this._m) throw new Error('m is not set');\n        index = +index;\n        if (this.internal_addresses_cache[index]) return this.internal_addresses_cache[index]; // cache hit\n\n        var address = this._getAddressFromNode(1, index);\n        this.internal_addresses_cache[index] = address;\n        return address;\n      }\n    }, {\n      key: \"convertXpubToMultisignatureXpub\",\n      value:\n      /**\n       * Returns xpub with correct prefix accodting to this objects set derivation path, for example 'Zpub' (with\n       * capital Z) for bech32 multisig\n       * @see https://github.com/satoshilabs/slips/blob/master/slip-0132.md\n       *\n       * @param xpub {string} Any kind of xpub, including zpub etc since we are only swapping the prefix bytes\n       * @returns {string}\n       */\n      function convertXpubToMultisignatureXpub(xpub) {\n        var data = _bs58check.default.decode(xpub);\n        data = data.slice(4);\n        if (this.isNativeSegwit()) {\n          return _bs58check.default.encode(Buffer.concat([Buffer.from('02aa7ed3', 'hex'), data]));\n        } else if (this.isWrappedSegwit()) {\n          return _bs58check.default.encode(Buffer.concat([Buffer.from('0295b43f', 'hex'), data]));\n        }\n        return xpub;\n      }\n    }, {\n      key: \"convertXprvToMultisignatureXprv\",\n      value: function convertXprvToMultisignatureXprv(xpub) {\n        var data = _bs58check.default.decode(xpub);\n        data = data.slice(4);\n        if (this.isNativeSegwit()) {\n          return _bs58check.default.encode(Buffer.concat([Buffer.from('02aa7a99', 'hex'), data]));\n        } else if (this.isWrappedSegwit()) {\n          return _bs58check.default.encode(Buffer.concat([Buffer.from('0295b005', 'hex'), data]));\n        }\n        return xpub;\n      }\n    }, {\n      key: \"getXpub\",\n      value: function getXpub() {\n        return this.getSecret(true);\n      }\n    }, {\n      key: \"getSecret\",\n      value: function getSecret() {\n        var coordinationSetup = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var ret = '# BlueWallet Multisig setup file\\n';\n        if (coordinationSetup) ret += '# this file contains only public keys and is safe to\\n# distribute among cosigners\\n';\n        if (!coordinationSetup) ret += '# this file may contain private information\\n';\n        ret += '#\\n';\n        ret += 'Name: ' + this.getLabel() + '\\n';\n        ret += 'Policy: ' + this.getM() + ' of ' + this.getN() + '\\n';\n        var hasCustomPaths = 0;\n        var customPaths = {};\n        for (var index = 0; index < this.getN(); index++) {\n          if (this._cosignersCustomPaths[index]) hasCustomPaths++;\n          if (this._cosignersCustomPaths[index]) customPaths[this._cosignersCustomPaths[index]] = 1;\n        }\n        var printedGlobalDerivation = false;\n        var derivationPath = this.getDerivationPath();\n        if (derivationPath) customPaths[derivationPath] = 1;\n        if (Object.keys(customPaths).length === 1) {\n          // we have exactly one path, for everyone. lets just print it\n          for (var path of Object.keys(customPaths)) {\n            ret += 'Derivation: ' + path + '\\n';\n            printedGlobalDerivation = true;\n          }\n        }\n        if (hasCustomPaths !== this.getN() && !printedGlobalDerivation) {\n          printedGlobalDerivation = true;\n          ret += 'Derivation: ' + this.getDerivationPath() + '\\n';\n        }\n        if (this.isNativeSegwit()) {\n          ret += 'Format: P2WSH\\n';\n        } else if (this.isWrappedSegwit()) {\n          ret += 'Format: P2SH-P2WSH\\n';\n        } else if (this.isLegacy()) {\n          ret += 'Format: P2SH\\n';\n        } else {\n          ret += 'Format: unknown\\n';\n        }\n        ret += '\\n';\n        for (var _index = 0; _index < this.getN(); _index++) {\n          if (this._cosignersCustomPaths[_index] && (printedGlobalDerivation && this._cosignersCustomPaths[_index] !== this.getDerivationPath() || !printedGlobalDerivation)) {\n            ret += '# derivation: ' + this._cosignersCustomPaths[_index] + '\\n';\n            // if we printed global derivation and this cosigned _has_ derivation and its different from global - we print it ;\n            // or we print it if cosigner _has_ some derivation set and we did not print global\n          }\n          if (MultisigHDWallet.isXpubString(this._cosigners[_index])) {\n            ret += this._cosignersFingerprints[_index] + ': ' + this._cosigners[_index] + '\\n';\n          } else {\n            if (coordinationSetup) {\n              var xpub = this.convertXpubToMultisignatureXpub(MultisigHDWallet.seedToXpub(this._cosigners[_index], this._cosignersCustomPaths[_index] || this._derivationPath, this._cosignersPassphrases[_index]));\n              var fingerprint = MultisigHDWallet.mnemonicToFingerprint(this._cosigners[_index], this._cosignersPassphrases[_index]);\n              ret += fingerprint + ': ' + xpub + '\\n';\n            } else {\n              ret += 'seed: ' + this._cosigners[_index];\n              if (this._cosignersPassphrases[_index]) ret += ' - ' + this._cosignersPassphrases[_index];\n              ret += '\\n# warning! sensitive information, do not disclose ^^^ \\n';\n            }\n          }\n          ret += '\\n';\n        }\n        return ret;\n      }\n    }, {\n      key: \"setSecret\",\n      value: function setSecret(secret) {\n        if (secret.toUpperCase().startsWith('UR:BYTES')) {\n          var decoded = (0, _$$_REQUIRE(_dependencyMap[19], \"../../blue_modules/ur\").decodeUR)([secret]);\n          var b = Buffer.from(decoded, 'hex');\n          secret = b.toString();\n        }\n\n        // is it Coldcard json file?\n        var json;\n        try {\n          json = JSON.parse(secret);\n        } catch (_) {}\n        if (json && json.xfp && json.p2wsh_deriv && json.p2wsh) {\n          this.addCosigner(json.p2wsh, json.xfp); // technically we dont need deriv (json.p2wsh_deriv), since cosigner is already an xpub\n          return this;\n        }\n\n        // is it electrum json?\n        if (json && json.wallet_type && json.wallet_type !== 'standard') {\n          var mofn = json.wallet_type.split('of');\n          this.setM(parseInt(mofn[0].trim(), 10));\n          var n = parseInt(mofn[1].trim(), 10);\n          for (var c = 1; c <= n; c++) {\n            var _cosignerData$xpub, _cosignerData$xpub2, _cosignerData$xpub3;\n            var cosignerData = json['x' + c + '/'];\n            if (cosignerData) {\n              var _cosignerData$root_fi;\n              var fingerprint = (cosignerData.ckcc_xfp ? MultisigHDWallet.ckccXfp2fingerprint(cosignerData.ckcc_xfp) : (_cosignerData$root_fi = cosignerData.root_fingerprint) == null ? void 0 : _cosignerData$root_fi.toUpperCase()) || '00000000';\n              if (cosignerData.seed) {\n                this.addCosigner(ELECTRUM_SEED_PREFIX + cosignerData.seed, fingerprint, cosignerData.derivation, cosignerData.passphrase);\n              } else if (cosignerData.xprv && MultisigHDWallet.isXprvValid(cosignerData.xprv)) {\n                this.addCosigner(cosignerData.xprv, fingerprint, cosignerData.derivation);\n              } else {\n                this.addCosigner(cosignerData.xpub, fingerprint, cosignerData.derivation);\n              }\n            }\n            if (cosignerData != null && (_cosignerData$xpub = cosignerData.xpub) != null && _cosignerData$xpub.startsWith('Zpub')) this.setNativeSegwit();\n            if (cosignerData != null && (_cosignerData$xpub2 = cosignerData.xpub) != null && _cosignerData$xpub2.startsWith('Ypub')) this.setWrappedSegwit();\n            if (cosignerData != null && (_cosignerData$xpub3 = cosignerData.xpub) != null && _cosignerData$xpub3.startsWith('xpub')) this.setLegacy();\n          }\n        }\n\n        // coldcard & cobo txt format:\n        var customPathForCurrentCosigner;\n        for (var line of secret.split('\\n')) {\n          var _line$split = line.split(':'),\n            _line$split2 = (0, _slicedToArray2.default)(_line$split, 2),\n            key = _line$split2[0],\n            value = _line$split2[1];\n          switch (key) {\n            case 'Name':\n              this.setLabel(value.trim());\n              break;\n            case 'Policy':\n              this.setM(parseInt(value.trim().split('of')[0].trim(), 10));\n              break;\n            case 'Derivation':\n              this.setDerivationPath(value.trim());\n              break;\n            case 'Format':\n              switch (value.trim()) {\n                case MultisigHDWallet.FORMAT_P2WSH.toUpperCase():\n                  this.setNativeSegwit();\n                  break;\n                case MultisigHDWallet.FORMAT_P2SH_P2WSH.toUpperCase():\n                case MultisigHDWallet.FORMAT_P2SH_P2WSH_ALT.toUpperCase():\n                  this.setWrappedSegwit();\n                  break;\n                case MultisigHDWallet.FORMAT_P2SH.toUpperCase():\n                  this.setLegacy();\n                  break;\n              }\n              break;\n            default:\n              if (key && value && MultisigHDWallet.isXpubString(value.trim())) {\n                this.addCosigner(value.trim(), key, customPathForCurrentCosigner);\n              } else if (key.replace('#', '').trim() === 'derivation') {\n                customPathForCurrentCosigner = value.trim();\n              } else if (key === 'seed') {\n                var _value$split = value.split(' - '),\n                  _value$split2 = (0, _slicedToArray2.default)(_value$split, 2),\n                  seed = _value$split2[0],\n                  passphrase = _value$split2[1];\n                this.addCosigner(seed.trim(), undefined, customPathForCurrentCosigner, passphrase);\n              }\n              break;\n          }\n        }\n\n        // is it wallet descriptor?\n        // @see https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md\n        // @see https://github.com/Fonta1n3/FullyNoded/blob/master/Docs/Wallets/Wallet-Export-Spec.md\n        if (!json && secret.indexOf('sortedmulti(')) {\n          // provided secret was NOT json but plain wallet descriptor text. lets mock json\n          json = {\n            descriptor: secret,\n            label: 'Multisig vault'\n          };\n        }\n        if (secret.indexOf('sortedmulti(') !== -1 && json.descriptor) {\n          if (json.label) this.setLabel(json.label);\n          if (json.descriptor.includes('sh(wsh(')) {\n            this.setWrappedSegwit();\n          } else if (json.descriptor.includes('wsh(')) {\n            this.setNativeSegwit();\n          } else if (json.descriptor.includes('sh(')) {\n            this.setLegacy();\n          }\n          var s2 = json.descriptor.substr(json.descriptor.indexOf('sortedmulti(') + 12);\n          var s3 = s2.split(',');\n          var M = parseInt(s3[0], 10);\n          if (M) this.setM(M);\n          for (var _c = 1; _c < s3.length; _c++) {\n            var re = /\\[([^\\]]+)\\](.*)/;\n            var m = s3[_c].match(re);\n            if (m && m.length === 3) {\n              var hexFingerprint = m[1].split('/')[0];\n              if (hexFingerprint.length === 8) {\n                hexFingerprint = Buffer.from(hexFingerprint, 'hex').toString('hex');\n              }\n              var path = 'm/' + m[1].split('/').slice(1).join('/').replace(/[h]/g, \"'\");\n              if (path === 'm/') {\n                // not considered valid by Bip32 lib\n                path = 'm/0';\n              }\n              var xpub = m[2];\n              if (xpub.indexOf('/') !== -1) {\n                xpub = xpub.substr(0, xpub.indexOf('/'));\n              }\n              if (xpub.indexOf(')') !== -1) {\n                xpub = xpub.substr(0, xpub.indexOf(')'));\n              }\n              this.addCosigner(xpub, hexFingerprint.toUpperCase(), path);\n            }\n          }\n          if (this.getN() === 0) {\n            // handling a case when smth went wrong and we didnt parse any cosigners, probably because\n            // string is a bit non-standard, deesnt have chars like '['\n            for (var _c2 = 1; _c2 < s3.length; _c2++) {\n              var _hexFingerprint = s3[_c2].split('/')[0];\n              var indexOfXpub = s3[_c2].indexOf('xpub');\n              if (indexOfXpub === -1) {\n                // just for any case\n                indexOfXpub = s3[_c2].indexOf('ypub');\n              }\n              if (indexOfXpub === -1) {\n                // just for any case\n                indexOfXpub = s3[_c2].indexOf('zpub');\n              }\n              if (indexOfXpub === -1) {\n                throw new Error('Could not parse cosigner in a descriptor');\n              }\n              var _xpub = s3[_c2].substring(indexOfXpub).replaceAll(')', '');\n              var _path = 'm' + s3[_c2].substring(_hexFingerprint.length, indexOfXpub);\n              this.addCosigner(_xpub, _hexFingerprint.toUpperCase(), _path);\n            }\n          }\n        }\n\n        // is it caravan?\n        if (json && json.network === 'mainnet' && json.quorum) {\n          this.setM(+json.quorum.requiredSigners);\n          if (json.name) this.setLabel(json.name);\n          switch (json.addressType.toLowerCase()) {\n            case MultisigHDWallet.FORMAT_P2SH:\n              this.setLegacy();\n              break;\n            case MultisigHDWallet.FORMAT_P2SH_P2WSH:\n            case MultisigHDWallet.FORMAT_P2SH_P2WSH_ALT:\n              this.setWrappedSegwit();\n              break;\n            case MultisigHDWallet.FORMAT_P2WSH:\n            default:\n              this.setNativeSegwit();\n              break;\n          }\n          for (var pk of json.extendedPublicKeys) {\n            var _pk$xfp;\n            var _path2 = MultisigHDWallet.isPathValid(json.bip32Path) ? json.bip32Path : \"m/1'\";\n            this.addCosigner(pk.xpub, (_pk$xfp = pk.xfp) != null ? _pk$xfp : '00000000', _path2);\n          }\n        }\n        if (!this.getLabel()) this.setLabel('Multisig vault');\n        return this;\n      }\n    }, {\n      key: \"_getDerivationPathByAddressWithCustomPath\",\n      value: function _getDerivationPathByAddressWithCustomPath(address, customPathPrefix) {\n        var path = customPathPrefix || this._derivationPath;\n        for (var c = 0; c < this.next_free_address_index + this.gap_limit; c++) {\n          if (this._getExternalAddressByIndex(c) === address) return path + '/0/' + c;\n        }\n        for (var _c3 = 0; _c3 < this.next_free_change_address_index + this.gap_limit; _c3++) {\n          if (this._getInternalAddressByIndex(_c3) === address) return path + '/1/' + _c3;\n        }\n        return false;\n      }\n    }, {\n      key: \"_getWifForAddress\",\n      value: function _getWifForAddress(address) {\n        // @ts-ignore not applicable in multisig\n        return false;\n      }\n    }, {\n      key: \"_getPubkeyByAddress\",\n      value: function _getPubkeyByAddress(address) {\n        throw new Error('Not applicable in multisig');\n      }\n    }, {\n      key: \"_getDerivationPathByAddress\",\n      value: function _getDerivationPathByAddress(address) {\n        throw new Error('Not applicable in multisig');\n      }\n    }, {\n      key: \"_addPsbtInput\",\n      value: function _addPsbtInput(psbt, input, sequence, masterFingerprintBuffer) {\n        var bip32Derivation = []; // array per each pubkey thats gona be used\n        var pubkeys = [];\n        for (var _ref3 of this._cosigners.entries()) {\n          var _ref4 = (0, _slicedToArray2.default)(_ref3, 1);\n          var cosignerIndex = _ref4[0];\n          if (!input.address) {\n            throw new Error('Could not find address in input');\n          }\n          var path = this._getDerivationPathByAddressWithCustomPath(input.address, this._cosignersCustomPaths[cosignerIndex] || this._derivationPath);\n          // ^^ path resembles _custom path_, if provided by user during setup, otherwise default path for wallet type gona be used\n          var masterFingerprint = Buffer.from(this._cosignersFingerprints[cosignerIndex], 'hex');\n          if (!path) {\n            throw new Error('Could not find derivation path for address ' + input.address);\n          }\n          var xpub = this._getXpubFromCosignerIndex(cosignerIndex);\n          var hdNode0 = bip32.fromBase58(xpub);\n          var splt = path.split('/');\n          var internal = +splt[splt.length - 2];\n          var index = +splt[splt.length - 1];\n          var _node0 = hdNode0.derive(internal);\n          var pubkey = _node0.derive(index).publicKey;\n          pubkeys.push(pubkey);\n          bip32Derivation.push({\n            masterFingerprint: masterFingerprint,\n            path: path,\n            pubkey: pubkey\n          });\n        }\n        if (!input.txhex) {\n          throw new Error('Electrum server didnt provide txhex to properly create PSBT transaction');\n        }\n        if (this.isNativeSegwit()) {\n          var p2wsh = bitcoin.payments.p2wsh({\n            redeem: bitcoin.payments.p2ms({\n              m: this._m,\n              pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n            })\n          });\n          if (!p2wsh.redeem || !p2wsh.output) {\n            throw new Error('Could not create p2wsh output');\n          }\n          var witnessScript = p2wsh.redeem.output;\n          psbt.addInput({\n            hash: input.txid,\n            index: input.vout,\n            sequence: sequence,\n            bip32Derivation: bip32Derivation,\n            witnessUtxo: {\n              script: p2wsh.output,\n              value: BigInt(input.value)\n            },\n            witnessScript: witnessScript,\n            // hw wallets now require passing the whole previous tx as Buffer, as if it was non-segwit input, to mitigate\n            // some hw wallets attack vector\n            nonWitnessUtxo: Buffer.from(input.txhex, 'hex')\n          });\n        } else if (this.isWrappedSegwit()) {\n          var _p2shP2wsh$redeem, _p2shP2wsh$redeem2;\n          var p2shP2wsh = bitcoin.payments.p2sh({\n            redeem: bitcoin.payments.p2wsh({\n              redeem: bitcoin.payments.p2ms({\n                m: this._m,\n                pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n              })\n            })\n          });\n          if (!(p2shP2wsh != null && (_p2shP2wsh$redeem = p2shP2wsh.redeem) != null && (_p2shP2wsh$redeem = _p2shP2wsh$redeem.redeem) != null && _p2shP2wsh$redeem.output) || !(p2shP2wsh != null && (_p2shP2wsh$redeem2 = p2shP2wsh.redeem) != null && _p2shP2wsh$redeem2.output) || !p2shP2wsh.output) {\n            throw new Error('Could not create p2sh-p2wsh output');\n          }\n          var _witnessScript = p2shP2wsh.redeem.redeem.output;\n          var redeemScript = p2shP2wsh.redeem.output;\n          psbt.addInput({\n            hash: input.txid,\n            index: input.vout,\n            sequence: sequence,\n            bip32Derivation: bip32Derivation,\n            witnessUtxo: {\n              script: p2shP2wsh.output,\n              value: BigInt(input.value)\n            },\n            witnessScript: _witnessScript,\n            redeemScript: redeemScript,\n            // hw wallets now require passing the whole previous tx as Buffer, as if it was non-segwit input, to mitigate\n            // some hw wallets attack vector\n            nonWitnessUtxo: Buffer.from(input.txhex, 'hex')\n          });\n        } else if (this.isLegacy()) {\n          var _p2sh$redeem;\n          var p2sh = bitcoin.payments.p2sh({\n            redeem: bitcoin.payments.p2ms({\n              m: this._m,\n              pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n            })\n          });\n          if (!(p2sh != null && (_p2sh$redeem = p2sh.redeem) != null && _p2sh$redeem.output)) {\n            throw new Error('Could not create p2sh output');\n          }\n          var _redeemScript = p2sh.redeem.output;\n          psbt.addInput({\n            hash: input.txid,\n            index: input.vout,\n            sequence: sequence,\n            bip32Derivation: bip32Derivation,\n            redeemScript: _redeemScript,\n            nonWitnessUtxo: Buffer.from(input.txhex, 'hex')\n          });\n        } else {\n          throw new Error('Dont know how to add input');\n        }\n        return psbt;\n      }\n    }, {\n      key: \"_getOutputDataForChange\",\n      value: function _getOutputDataForChange(address) {\n        var bip32Derivation = []; // array per each pubkey thats gona be used\n        var pubkeys = [];\n        for (var _ref5 of this._cosigners.entries()) {\n          var _ref6 = (0, _slicedToArray2.default)(_ref5, 1);\n          var cosignerIndex = _ref6[0];\n          var path = this._getDerivationPathByAddressWithCustomPath(address, this._cosignersCustomPaths[cosignerIndex] || this._derivationPath);\n          // ^^ path resembles _custom path_, if provided by user during setup, otherwise default path for wallet type gona be used\n          var masterFingerprint = Buffer.from(this._cosignersFingerprints[cosignerIndex], 'hex');\n          if (!path) {\n            throw new Error('Could not find derivation path for address ' + address);\n          }\n          var xpub = this._getXpubFromCosignerIndex(cosignerIndex);\n          var hdNode0 = bip32.fromBase58(xpub);\n          var splt = path.split('/');\n          var internal = +splt[splt.length - 2];\n          var index = +splt[splt.length - 1];\n          var _node0 = hdNode0.derive(internal);\n          var pubkey = _node0.derive(index).publicKey;\n          pubkeys.push(pubkey);\n          bip32Derivation.push({\n            masterFingerprint: masterFingerprint,\n            path: path,\n            pubkey: pubkey\n          });\n        }\n        if (this.isLegacy()) {\n          var p2sh = bitcoin.payments.p2ms({\n            m: this._m,\n            pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n          });\n          if (!p2sh.output) {\n            throw new Error('Could not create redeemScript');\n          }\n          return {\n            bip32Derivation: bip32Derivation,\n            redeemScript: p2sh.output\n          };\n        }\n        if (this.isWrappedSegwit()) {\n          var _p2shP2wsh$redeem3, _p2shP2wsh$redeem4;\n          var p2shP2wsh = bitcoin.payments.p2sh({\n            redeem: bitcoin.payments.p2wsh({\n              redeem: bitcoin.payments.p2ms({\n                m: this._m,\n                pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n              })\n            })\n          });\n          var witnessScript = p2shP2wsh == null || (_p2shP2wsh$redeem3 = p2shP2wsh.redeem) == null || (_p2shP2wsh$redeem3 = _p2shP2wsh$redeem3.redeem) == null ? void 0 : _p2shP2wsh$redeem3.output;\n          var redeemScript = p2shP2wsh == null || (_p2shP2wsh$redeem4 = p2shP2wsh.redeem) == null ? void 0 : _p2shP2wsh$redeem4.output;\n          if (!witnessScript || !redeemScript) {\n            throw new Error('Could not create redeemScript or witnessScript');\n          }\n          return {\n            bip32Derivation: bip32Derivation,\n            witnessScript: witnessScript,\n            redeemScript: redeemScript\n          };\n        }\n        if (this.isNativeSegwit()) {\n          var _p2wsh$redeem;\n          // not needed by coldcard, apparently..?\n          var p2wsh = bitcoin.payments.p2wsh({\n            redeem: bitcoin.payments.p2ms({\n              m: this._m,\n              pubkeys: MultisigHDWallet.sortBuffers(pubkeys)\n            })\n          });\n          var _witnessScript2 = p2wsh == null || (_p2wsh$redeem = p2wsh.redeem) == null ? void 0 : _p2wsh$redeem.output;\n          if (!_witnessScript2) {\n            throw new Error('Could not create witnessScript');\n          }\n          return {\n            bip32Derivation: bip32Derivation,\n            witnessScript: _witnessScript2\n          };\n        }\n        throw new Error('dont know how to add change output');\n      }\n    }, {\n      key: \"howManySignaturesCanWeMake\",\n      value: function howManySignaturesCanWeMake() {\n        var howManyPrivKeysWeGot = 0;\n        for (var cosigner of this._cosigners) {\n          if (!MultisigHDWallet.isXpubString(cosigner) && !MultisigHDWallet.isXprvString(cosigner)) howManyPrivKeysWeGot++;\n        }\n        return howManyPrivKeysWeGot;\n      }\n    }, {\n      key: \"coinselect\",\n      value: function coinselect(utxos, targets, feeRate) {\n        var _utxos = JSON.parse(JSON.stringify(utxos));\n\n        // overriding script length for proper vbytes calculation\n        for (var u of _utxos) {\n          var _u$script;\n          if ((_u$script = u.script) != null && _u$script.length) {\n            continue;\n          }\n          if (this.isNativeSegwit()) {\n            u.script = {\n              length: Math.ceil((8 + this.getM() * 74 + this.getN() * 34) / 4)\n            };\n          } else if (this.isWrappedSegwit()) {\n            u.script = {\n              length: 35 + Math.ceil((8 + this.getM() * 74 + this.getN() * 34) / 4)\n            };\n          } else {\n            u.script = {\n              length: 2 + this.getM() * 74 + this.getN() * 34\n            };\n          }\n        }\n        return _superPropGet(MultisigHDWallet, \"coinselect\", this, 3)([_utxos, targets, feeRate]);\n      }\n\n      /**\n       * @inheritDoc\n       */\n    }, {\n      key: \"createTransaction\",\n      value: function createTransaction(utxos, targets, feeRate, changeAddress, sequence) {\n        var _this2 = this;\n        var skipSigning = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var masterFingerprint = arguments.length > 6 ? arguments[6] : undefined;\n        if (targets.length === 0) throw new Error('No destination provided');\n        if (this.howManySignaturesCanWeMake() === 0) skipSigning = true;\n        var _this$coinselect = this.coinselect(utxos, targets, feeRate),\n          inputs = _this$coinselect.inputs,\n          outputs = _this$coinselect.outputs,\n          fee = _this$coinselect.fee;\n        sequence = sequence || _$$_REQUIRE(_dependencyMap[20], \"./abstract-hd-electrum-wallet\").AbstractHDElectrumWallet.defaultRBFSequence;\n        var psbt = new bitcoin.Psbt();\n        var c = 0;\n        inputs.forEach(function (input) {\n          c++;\n          psbt = _this2._addPsbtInput(psbt, input, sequence);\n        });\n        outputs.forEach(function (output) {\n          // if output has no address - this is change output\n          var change = false;\n          var address = output.address;\n          if (!address) {\n            change = true;\n            output.address = changeAddress;\n            address = changeAddress;\n          }\n          var outputData = {\n            address: address,\n            value: BigInt(output.value)\n          };\n          if (change) {\n            outputData = Object.assign({}, outputData, _this2._getOutputDataForChange(address));\n          }\n          psbt.addOutput(outputData);\n        });\n        if (!skipSigning) {\n          for (var cc = 0; cc < c; cc++) {\n            var signaturesMade = 0;\n            for (var _ref7 of this._cosigners.entries()) {\n              var _ref8 = (0, _slicedToArray2.default)(_ref7, 2);\n              var cosignerIndex = _ref8[0];\n              var cosigner = _ref8[1];\n              if (MultisigHDWallet.isXpubString(cosigner)) continue;\n              // ok this is a mnemonic, lets try to sign\n              if (signaturesMade >= this.getM()) {\n                // dont sign more than we need, otherwise there will be \"Too many signatures\" error\n                continue;\n              }\n              var passphrase = this._cosignersPassphrases[cosignerIndex];\n              var seed = bip39.mnemonicToSeedSync(cosigner, passphrase);\n              if (cosigner.startsWith(ELECTRUM_SEED_PREFIX)) {\n                seed = MultisigHDWallet.convertElectrumMnemonicToSeed(cosigner, passphrase);\n              }\n              var hdRoot = bip32.fromSeed(seed);\n              psbt.signInputHD(cc, hdRoot);\n              signaturesMade++;\n            }\n          }\n        }\n        var tx;\n        if (!skipSigning && this.howManySignaturesCanWeMake() >= this.getM()) {\n          tx = psbt.finalizeAllInputs().extractTransaction();\n        }\n        return {\n          tx: tx,\n          inputs: inputs,\n          outputs: outputs,\n          fee: fee,\n          psbt: psbt\n        };\n      }\n    }, {\n      key: \"prepareForSerialization\",\n      value: function prepareForSerialization() {\n        // deleting structures that cant be serialized\n        // @ts-ignore I dont want to make it optional\n        delete this._nodes;\n      }\n    }, {\n      key: \"allowSend\",\n      value: function allowSend() {\n        return true;\n      }\n    }, {\n      key: \"allowSignVerifyMessage\",\n      value: function allowSignVerifyMessage() {\n        return false;\n      }\n    }, {\n      key: \"fetchUtxo\",\n      value: function () {\n        var _fetchUtxo = (0, _asyncToGenerator2.default)(function* () {\n          yield _superPropGet(MultisigHDWallet, \"fetchUtxo\", this, 3)([]);\n          // now we need to fetch txhash for each input as required by PSBT\n          var txhexes = yield BlueElectrum.multiGetTransactionByTxid(this.getUtxo(true).map(function (x) {\n            return x.txid;\n          }), false);\n          var newUtxos = [];\n          for (var u of this.getUtxo(true)) {\n            if (txhexes[u.txid]) u.txhex = txhexes[u.txid];\n            newUtxos.push(u);\n          }\n          this._utxo = newUtxos;\n        });\n        function fetchUtxo() {\n          return _fetchUtxo.apply(this, arguments);\n        }\n        return fetchUtxo;\n      }()\n    }, {\n      key: \"getID\",\n      value: function getID() {\n        var string2hash = (0, _toConsumableArray2.default)(this._cosigners).sort().join(',') + ';' + (0, _toConsumableArray2.default)(this._cosignersFingerprints).sort().join(',');\n        return (0, _createHash.default)('sha256').update(string2hash).digest().toString('hex');\n      }\n    }, {\n      key: \"calculateFeeFromPsbt\",\n      value: function calculateFeeFromPsbt(psbt) {\n        var goesIn = 0;\n        var cacheUtxoAmounts = {};\n        for (var inp of psbt.data.inputs) {\n          if (inp.witnessUtxo && inp.witnessUtxo.value) {\n            // segwit input\n            goesIn += Number(inp.witnessUtxo.value);\n          } else if (inp.nonWitnessUtxo) {\n            // non-segwit input\n            // lets parse this transaction and cache how much each input was worth\n            var inputTx = bitcoin.Transaction.fromBuffer(inp.nonWitnessUtxo);\n            var index = 0;\n            for (var out of inputTx.outs) {\n              cacheUtxoAmounts[inputTx.getId() + ':' + index] = Number(out.value);\n              index++;\n            }\n          }\n        }\n        if (goesIn === 0) {\n          // means we failed to get amounts that go in previously, so lets use utxo amounts cache we've build\n          // from non-segwit inputs\n          for (var _inp of psbt.txInputs) {\n            var cacheKey = Buffer.from(_inp.hash).reverse().toString('hex') + ':' + _inp.index;\n            if (cacheUtxoAmounts[cacheKey]) goesIn += cacheUtxoAmounts[cacheKey];\n          }\n        }\n        var goesOut = 0;\n        for (var output of psbt.txOutputs) {\n          goesOut += Number(output.value);\n        }\n        return goesIn - goesOut;\n      }\n    }, {\n      key: \"calculateHowManySignaturesWeHaveFromPsbt\",\n      value: function calculateHowManySignaturesWeHaveFromPsbt(psbt) {\n        var sigsHave = 0;\n        for (var inp of psbt.data.inputs) {\n          var _inp$partialSig;\n          sigsHave = Math.max(sigsHave, ((_inp$partialSig = inp.partialSig) == null ? void 0 : _inp$partialSig.length) || 0);\n          if (inp.finalScriptSig || inp.finalScriptWitness) sigsHave = this.getM(); // hacky, but it means we have enough\n          // He who knows that enough is enough will always have enough. Lao Tzu\n        }\n        return sigsHave;\n      }\n\n      /**\n       * Tries to signs passed psbt object (by reference). If there are enough signatures - tries to finalize psbt\n       * and returns Transaction (ready to extract hex)\n       */\n    }, {\n      key: \"cosignPsbt\",\n      value: function cosignPsbt(psbt) {\n        for (var cc = 0; cc < psbt.inputCount; cc++) {\n          for (var _ref9 of this._cosigners.entries()) {\n            var _ref0 = (0, _slicedToArray2.default)(_ref9, 2);\n            var cosignerIndex = _ref0[0];\n            var cosigner = _ref0[1];\n            if (MultisigHDWallet.isXpubString(cosigner)) continue;\n            var hdRoot = void 0;\n            if (MultisigHDWallet.isXprvString(cosigner)) {\n              var xprv = MultisigHDWallet.convertMultisigXprvToRegularXprv(cosigner);\n              hdRoot = bip32.fromBase58(xprv);\n            } else {\n              var passphrase = this._cosignersPassphrases[cosignerIndex];\n              var seed = cosigner.startsWith(ELECTRUM_SEED_PREFIX) ? MultisigHDWallet.convertElectrumMnemonicToSeed(cosigner, passphrase) : bip39.mnemonicToSeedSync(cosigner, passphrase);\n              hdRoot = bip32.fromSeed(seed);\n            }\n            try {\n              psbt.signInputHD(cc, hdRoot);\n            } catch (_) {} // protects agains duplicate cosignings\n\n            if (!psbt.inputHasHDKey(cc, hdRoot)) {\n              // failed signing as HD. probably bitcoinjs-lib could not match provided hdRoot's\n              // fingerprint (or path?) to the ones in psbt, which is the case of stupid Electrum desktop which can\n              // put bullshit paths and fingerprints in created psbt.\n              // lets try to find correct priv key and sign manually.\n              for (var derivation of psbt.data.inputs[cc].bip32Derivation || []) {\n                // okay, here we assume that fingerprint is irrelevant, but ending of the path is somewhat correct and\n                // correctly points to `/internal/index`, so we extract pubkey from our stored mnemonics+path and\n                // match it to the one provided in PSBT's input, and if we have a match - we are in luck! we can sign\n                // with this private key.\n                var splt = derivation.path.split('/');\n                var internal = +splt[splt.length - 2];\n                var index = +splt[splt.length - 1];\n                var path = hdRoot.depth === 0 ? this.getCustomDerivationPathForCosigner(cosignerIndex + 1) + `/${internal ? 1 : 0}/${index}` : `${internal ? 1 : 0}/${index}`;\n                // ^^^ we assume that counterparty has Zpub for specified derivation path\n                // if hdRoot.depth !== 0 than this hdnode was recovered from xprv and it already has been set to root path\n                var child = hdRoot.derivePath(path);\n                if (child.privateKey && psbt.inputHasPubkey(cc, child.publicKey)) {\n                  var keyPair = ECPair.fromPrivateKey(child.privateKey);\n                  try {\n                    psbt.signInput(cc, keyPair);\n                  } catch (_) {}\n                }\n              }\n            }\n          }\n        }\n        if (this.calculateHowManySignaturesWeHaveFromPsbt(psbt) >= this.getM()) {\n          var tx = psbt.finalizeAllInputs().extractTransaction();\n          return {\n            tx: tx\n          };\n        }\n        return {\n          tx: false\n        };\n      }\n\n      /**\n       * Looks up xpub cosigner by index, and repalces it with seed + passphrase\n       */\n    }, {\n      key: \"replaceCosignerXpubWithSeed\",\n      value: function replaceCosignerXpubWithSeed(externalIndex, mnemonic, passphrase) {\n        var index = externalIndex - 1;\n        var fingerprint = this._cosignersFingerprints[index];\n        if (!MultisigHDWallet.isXpubValid(this._cosigners[index])) throw new Error('This cosigner doesnt contain valid xpub');\n        if (!bip39.validateMnemonic(mnemonic)) throw new Error('Not a valid mnemonic phrase');\n        if (fingerprint !== MultisigHDWallet.mnemonicToFingerprint(mnemonic, passphrase)) {\n          throw new Error('Fingerprint of new seed doesnt match');\n        }\n        this._cosigners[index] = mnemonic.trim();\n        this._cosignersPassphrases[index] = passphrase || undefined;\n      }\n\n      /**\n       * Looks up cosigner with seed by index, and repalces it with xpub\n       */\n    }, {\n      key: \"replaceCosignerSeedWithXpub\",\n      value: function replaceCosignerSeedWithXpub(externalIndex) {\n        var index = externalIndex - 1;\n        var mnemonics = this._cosigners[index];\n        if (!bip39.validateMnemonic(mnemonics)) throw new Error('This cosigner doesnt contain valid xpub mnemonic phrase');\n        var passphrase = this._cosignersPassphrases[index];\n        var path = this._cosignersCustomPaths[index] || this._derivationPath;\n        var xpub = this.convertXpubToMultisignatureXpub(MultisigHDWallet.seedToXpub(mnemonics, path, passphrase));\n        this._cosigners[index] = xpub;\n        this._cosignersPassphrases[index] = undefined;\n      }\n    }, {\n      key: \"deleteCosigner\",\n      value: function deleteCosigner(fp) {\n        var foundIndex = this._cosignersFingerprints.indexOf(fp);\n        if (foundIndex === -1) throw new Error('Cant find cosigner by fingerprint');\n        this._cosignersFingerprints = this._cosignersFingerprints.filter(function (el, index) {\n          return index !== foundIndex;\n        });\n        this._cosigners = this._cosigners.filter(function (el, index) {\n          return index !== foundIndex;\n        });\n        this._cosignersCustomPaths = this._cosignersCustomPaths.filter(function (el, index) {\n          return index !== foundIndex;\n        });\n        this._cosignersPassphrases = this._cosignersPassphrases.filter(function (el, index) {\n          return index !== foundIndex;\n        });\n\n        /* const newCosigners = [];\n        for (let c = 0; c < this._cosignersFingerprints.length; c++) {\n          if (c !== index)  newCosigners.push(this._cosignersFingerprints[c]);\n        } */\n\n        // this._cosignersFingerprints = newCosigners;\n      }\n    }, {\n      key: \"getFormat\",\n      value: function getFormat() {\n        if (this.isNativeSegwit()) return MultisigHDWallet.FORMAT_P2WSH;\n        if (this.isWrappedSegwit()) return MultisigHDWallet.FORMAT_P2SH_P2WSH;\n        if (this.isLegacy()) return MultisigHDWallet.FORMAT_P2SH;\n        throw new Error('This should never happen');\n      }\n\n      /**\n       * @param fp {string} Exactly 8 chars of hex\n       * @return {boolean}\n       */\n    }, {\n      key: \"isSegwit\",\n      value: function isSegwit() {\n        return this.isNativeSegwit() || this.isWrappedSegwit();\n      }\n    }], [{\n      key: \"isXpubValid\",\n      value: function isXpubValid(key) {\n        var xpub;\n        try {\n          var tempWallet = new MultisigHDWallet();\n          xpub = tempWallet._zpubToXpub(key);\n          bip32.fromBase58(xpub);\n          return true;\n        } catch (_) {}\n        return false;\n      }\n    }, {\n      key: \"isXprvValid\",\n      value: function isXprvValid(xprv) {\n        try {\n          xprv = MultisigHDWallet.convertMultisigXprvToRegularXprv(xprv);\n          bip32.fromBase58(xprv);\n          return true;\n        } catch (_) {\n          return false;\n        }\n      }\n    }, {\n      key: \"convertMultisigXprvToRegularXprv\",\n      value: function convertMultisigXprvToRegularXprv(Zprv) {\n        var data = _bs58check.default.decode(Zprv);\n        data = data.slice(4);\n        return _bs58check.default.encode(Buffer.concat([Buffer.from('0488ade4', 'hex'), data]));\n      }\n    }, {\n      key: \"convertXprvToXpub\",\n      value: function convertXprvToXpub(xprv) {\n        var restored = bip32.fromBase58(MultisigHDWallet.convertMultisigXprvToRegularXprv(xprv));\n        return restored.neutered().toBase58();\n      }\n    }, {\n      key: \"seedToXpub\",\n      value: function seedToXpub(mnemonic, path, passphrase) {\n        var seed;\n        if (mnemonic.startsWith(ELECTRUM_SEED_PREFIX)) {\n          seed = MultisigHDWallet.convertElectrumMnemonicToSeed(mnemonic, passphrase);\n        } else {\n          seed = bip39.mnemonicToSeedSync(mnemonic, passphrase);\n        }\n        var root = bip32.fromSeed(seed);\n        var child = root.derivePath(path).neutered();\n        return child.toBase58();\n      }\n    }, {\n      key: \"isXpubString\",\n      value: function isXpubString(xpub) {\n        return ['xpub', 'ypub', 'zpub', 'Ypub', 'Zpub'].includes(xpub.substring(0, 4));\n      }\n    }, {\n      key: \"isXprvString\",\n      value: function isXprvString(xpub) {\n        return ['xprv', 'yprv', 'zprv', 'Yprv', 'Zprv'].includes(xpub.substring(0, 4));\n      }\n\n      /**\n       * Converts fingerprint that is stored as a deciman number to hex string (all caps)\n       *\n       * @param xfp {number} For example 64392470\n       * @returns {string} For example 168DD603\n       */\n    }, {\n      key: \"ckccXfp2fingerprint\",\n      value: function ckccXfp2fingerprint(xfp) {\n        var masterFingerprintHex = Number(xfp).toString(16);\n        while (masterFingerprintHex.length < 8) masterFingerprintHex = '0' + masterFingerprintHex; // conversion without explicit zero might result in lost byte\n\n        // poor man's little-endian conversion:\n        // ¯\\_(ツ)_/¯\n        return (masterFingerprintHex[6] + masterFingerprintHex[7] + masterFingerprintHex[4] + masterFingerprintHex[5] + masterFingerprintHex[2] + masterFingerprintHex[3] + masterFingerprintHex[0] + masterFingerprintHex[1]).toUpperCase();\n      }\n    }, {\n      key: \"convertElectrumMnemonicToSeed\",\n      value: function convertElectrumMnemonicToSeed(cosigner, passphrase) {\n        var seed;\n        try {\n          seed = mn.mnemonicToSeedSync(cosigner.replace(ELECTRUM_SEED_PREFIX, ''), electrumSegwit(passphrase));\n        } catch (_) {\n          try {\n            seed = mn.mnemonicToSeedSync(cosigner.replace(ELECTRUM_SEED_PREFIX, ''), electrumStandart(passphrase));\n          } catch (__) {\n            throw new Error('Not a valid electrum mnemonic');\n          }\n        }\n        return seed;\n      }\n\n      /**\n       * @see https://github.com/bitcoin/bips/blob/master/bip-0067.mediawiki\n       */\n    }, {\n      key: \"sortBuffers\",\n      value: function sortBuffers(bufArr) {\n        return bufArr.sort(Buffer.compare);\n      }\n    }, {\n      key: \"isPathValid\",\n      value: function isPathValid(path) {\n        var root = bip32.fromSeed(Buffer.alloc(32));\n        try {\n          root.derivePath(path);\n          return true;\n        } catch (_) {}\n        return false;\n      }\n    }, {\n      key: \"isFpValid\",\n      value: function isFpValid(fp) {\n        if (fp.length !== 8) return false;\n        return /^[0-9A-F]{8}$/i.test(fp);\n      }\n\n      /**\n       * Returns TRUE only for _multisignature_ xpubs as per SLIP-0132\n       * (capital Z, capital Y, or just xpub)\n       * @see https://github.com/satoshilabs/slips/blob/master/slip-0132.md\n       *\n       * @param xpub\n       * @return {boolean}\n       */\n    }, {\n      key: \"isXpubForMultisig\",\n      value: function isXpubForMultisig(xpub) {\n        return ['xpub', 'Ypub', 'Zpub'].includes(xpub.substring(0, 4));\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[20], \"./abstract-hd-electrum-wallet\").AbstractHDElectrumWallet);\n  MultisigHDWallet.type = 'HDmultisig';\n  MultisigHDWallet.typeReadable = 'Multisig Vault';\n  MultisigHDWallet.FORMAT_P2WSH = 'p2wsh';\n  MultisigHDWallet.FORMAT_P2SH_P2WSH = 'p2sh-p2wsh';\n  MultisigHDWallet.FORMAT_P2SH_P2WSH_ALT = 'p2wsh-p2sh';\n  MultisigHDWallet.FORMAT_P2SH = 'p2sh';\n  MultisigHDWallet.PATH_NATIVE_SEGWIT = \"m/48'/0'/0'/2'\";\n  MultisigHDWallet.PATH_WRAPPED_SEGWIT = \"m/48'/0'/0'/1'\";\n  MultisigHDWallet.PATH_LEGACY = \"m/45'\";\n});","lineCount":1334,"map":[[16,2,1,0],[16,6,1,0,"_bip"],[16,10,1,0],[16,13,1,0,"_interopRequireDefault"],[16,35,1,0],[16,36,1,0,"_$$_REQUIRE"],[16,47,1,0],[16,48,1,0,"_dependencyMap"],[16,62,1,0],[17,2,2,0],[17,6,2,0,"bip39"],[17,11,2,0],[17,14,2,0,"_interopRequireWildcard"],[17,37,2,0],[17,38,2,0,"_$$_REQUIRE"],[17,49,2,0],[17,50,2,0,"_dependencyMap"],[17,64,2,0],[18,2,3,0],[18,6,3,0,"bitcoin"],[18,13,3,0],[18,16,3,0,"_interopRequireWildcard"],[18,39,3,0],[18,40,3,0,"_$$_REQUIRE"],[18,51,3,0],[18,52,3,0,"_dependencyMap"],[18,66,3,0],[19,2,5,0],[19,6,5,0,"_bs58check"],[19,16,5,0],[19,19,5,0,"_interopRequireDefault"],[19,41,5,0],[19,42,5,0,"_$$_REQUIRE"],[19,53,5,0],[19,54,5,0,"_dependencyMap"],[19,68,5,0],[20,2,7,0],[20,6,7,0,"_createHash"],[20,17,7,0],[20,20,7,0,"_interopRequireDefault"],[20,42,7,0],[20,43,7,0,"_$$_REQUIRE"],[20,54,7,0],[20,55,7,0,"_dependencyMap"],[20,69,7,0],[21,2,9,0],[21,6,9,0,"mn"],[21,8,9,0],[21,11,9,0,"_interopRequireWildcard"],[21,34,9,0],[21,35,9,0,"_$$_REQUIRE"],[21,46,9,0],[21,47,9,0,"_dependencyMap"],[21,61,9,0],[22,2,11,0],[22,6,11,0,"BlueElectrum"],[22,18,11,0],[22,21,11,0,"_interopRequireWildcard"],[22,44,11,0],[22,45,11,0,"_$$_REQUIRE"],[22,56,11,0],[22,57,11,0,"_dependencyMap"],[22,71,11,0],[23,2,12,0],[23,6,12,0,"_noble_ecc"],[23,16,12,0],[23,19,12,0,"_interopRequireDefault"],[23,41,12,0],[23,42,12,0,"_$$_REQUIRE"],[23,53,12,0],[23,54,12,0,"_dependencyMap"],[23,68,12,0],[24,2,12,47],[24,11,12,47,"_getRequireWildcardCache"],[24,36,12,47,"e"],[24,37,12,47],[24,66,12,47,"WeakMap"],[24,73,12,47],[24,92,12,47,"r"],[24,93,12,47],[24,100,12,47,"WeakMap"],[24,107,12,47],[24,111,12,47,"t"],[24,112,12,47],[24,119,12,47,"WeakMap"],[24,126,12,47],[24,138,12,47,"_getRequireWildcardCache"],[24,162,12,47],[24,174,12,47,"_getRequireWildcardCache"],[24,199,12,47,"e"],[24,200,12,47],[24,211,12,47,"e"],[24,212,12,47],[24,215,12,47,"t"],[24,216,12,47],[24,219,12,47,"r"],[24,220,12,47],[24,225,12,47,"e"],[24,226,12,47],[25,2,12,47],[25,11,12,47,"_interopRequireWildcard"],[25,35,12,47,"e"],[25,36,12,47],[25,38,12,47,"r"],[25,39,12,47],[25,48,12,47,"r"],[25,49,12,47],[25,53,12,47,"e"],[25,54,12,47],[25,58,12,47,"e"],[25,59,12,47],[25,60,12,47,"__esModule"],[25,70,12,47],[25,79,12,47,"e"],[25,80,12,47],[25,95,12,47,"e"],[25,96,12,47],[25,119,12,47,"e"],[25,120,12,47],[25,145,12,47,"e"],[25,146,12,47],[25,157,12,47,"default"],[25,164,12,47],[25,166,12,47,"e"],[25,167,12,47],[25,175,12,47,"t"],[25,176,12,47],[25,179,12,47,"_getRequireWildcardCache"],[25,203,12,47],[25,204,12,47,"r"],[25,205,12,47],[25,212,12,47,"t"],[25,213,12,47],[25,217,12,47,"t"],[25,218,12,47],[25,219,12,47,"has"],[25,222,12,47],[25,223,12,47,"e"],[25,224,12,47],[25,234,12,47,"t"],[25,235,12,47],[25,236,12,47,"get"],[25,239,12,47],[25,240,12,47,"e"],[25,241,12,47],[25,248,12,47,"n"],[25,249,12,47],[25,254,12,47,"__proto__"],[25,263,12,47],[25,273,12,47,"a"],[25,274,12,47],[25,277,12,47,"Object"],[25,283,12,47],[25,284,12,47,"defineProperty"],[25,298,12,47],[25,302,12,47,"Object"],[25,308,12,47],[25,309,12,47,"getOwnPropertyDescriptor"],[25,333,12,47],[25,344,12,47,"u"],[25,345,12,47],[25,349,12,47,"e"],[25,350,12,47],[25,370,12,47,"u"],[25,371,12,47],[25,378,12,47,"hasOwnProperty"],[25,392,12,47],[25,393,12,47,"call"],[25,397,12,47],[25,398,12,47,"e"],[25,399,12,47],[25,401,12,47,"u"],[25,402,12,47],[25,411,12,47,"i"],[25,412,12,47],[25,415,12,47,"a"],[25,416,12,47],[25,419,12,47,"Object"],[25,425,12,47],[25,426,12,47,"getOwnPropertyDescriptor"],[25,450,12,47],[25,451,12,47,"e"],[25,452,12,47],[25,454,12,47,"u"],[25,455,12,47],[25,465,12,47,"i"],[25,466,12,47],[25,471,12,47,"i"],[25,472,12,47],[25,473,12,47,"get"],[25,476,12,47],[25,480,12,47,"i"],[25,481,12,47],[25,482,12,47,"set"],[25,485,12,47],[25,489,12,47,"Object"],[25,495,12,47],[25,496,12,47,"defineProperty"],[25,510,12,47],[25,511,12,47,"n"],[25,512,12,47],[25,514,12,47,"u"],[25,515,12,47],[25,517,12,47,"i"],[25,518,12,47],[25,522,12,47,"n"],[25,523,12,47],[25,524,12,47,"u"],[25,525,12,47],[25,529,12,47,"e"],[25,530,12,47],[25,531,12,47,"u"],[25,532,12,47],[25,544,12,47,"n"],[25,545,12,47],[25,546,12,47,"default"],[25,553,12,47],[25,556,12,47,"e"],[25,557,12,47],[25,559,12,47,"t"],[25,560,12,47],[25,564,12,47,"t"],[25,565,12,47],[25,566,12,47,"set"],[25,569,12,47],[25,570,12,47,"e"],[25,571,12,47],[25,573,12,47,"n"],[25,574,12,47],[25,577,12,47,"n"],[25,578,12,47],[26,2,12,47],[26,11,12,47,"_callSuper"],[26,22,12,47,"t"],[26,23,12,47],[26,25,12,47,"o"],[26,26,12,47],[26,28,12,47,"e"],[26,29,12,47],[26,40,12,47,"o"],[26,41,12,47],[26,48,12,47,"_getPrototypeOf2"],[26,64,12,47],[26,65,12,47,"default"],[26,72,12,47],[26,74,12,47,"o"],[26,75,12,47],[26,82,12,47,"_possibleConstructorReturn2"],[26,109,12,47],[26,110,12,47,"default"],[26,117,12,47],[26,119,12,47,"t"],[26,120,12,47],[26,122,12,47,"_isNativeReflectConstruct"],[26,147,12,47],[26,152,12,47,"Reflect"],[26,159,12,47],[26,160,12,47,"construct"],[26,169,12,47],[26,170,12,47,"o"],[26,171,12,47],[26,173,12,47,"e"],[26,174,12,47],[26,186,12,47,"_getPrototypeOf2"],[26,202,12,47],[26,203,12,47,"default"],[26,210,12,47],[26,212,12,47,"t"],[26,213,12,47],[26,215,12,47,"constructor"],[26,226,12,47],[26,230,12,47,"o"],[26,231,12,47],[26,232,12,47,"apply"],[26,237,12,47],[26,238,12,47,"t"],[26,239,12,47],[26,241,12,47,"e"],[26,242,12,47],[27,2,12,47],[27,11,12,47,"_isNativeReflectConstruct"],[27,37,12,47],[27,51,12,47,"t"],[27,52,12,47],[27,56,12,47,"Boolean"],[27,63,12,47],[27,64,12,47,"prototype"],[27,73,12,47],[27,74,12,47,"valueOf"],[27,81,12,47],[27,82,12,47,"call"],[27,86,12,47],[27,87,12,47,"Reflect"],[27,94,12,47],[27,95,12,47,"construct"],[27,104,12,47],[27,105,12,47,"Boolean"],[27,112,12,47],[27,145,12,47,"t"],[27,146,12,47],[27,159,12,47,"_isNativeReflectConstruct"],[27,184,12,47],[27,196,12,47,"_isNativeReflectConstruct"],[27,222,12,47],[27,235,12,47,"t"],[27,236,12,47],[28,2,12,47],[28,11,12,47,"_superPropGet"],[28,25,12,47,"t"],[28,26,12,47],[28,28,12,47,"o"],[28,29,12,47],[28,31,12,47,"e"],[28,32,12,47],[28,34,12,47,"r"],[28,35,12,47],[28,43,12,47,"p"],[28,44,12,47],[28,51,12,47,"_get2"],[28,56,12,47],[28,57,12,47,"default"],[28,64,12,47],[28,70,12,47,"_getPrototypeOf2"],[28,86,12,47],[28,87,12,47,"default"],[28,94,12,47],[28,100,12,47,"r"],[28,101,12,47],[28,104,12,47,"t"],[28,105,12,47],[28,106,12,47,"prototype"],[28,115,12,47],[28,118,12,47,"t"],[28,119,12,47],[28,122,12,47,"o"],[28,123,12,47],[28,125,12,47,"e"],[28,126,12,47],[28,140,12,47,"r"],[28,141,12,47],[28,166,12,47,"p"],[28,167,12,47],[28,180,12,47,"t"],[28,181,12,47],[28,192,12,47,"p"],[28,193,12,47],[28,194,12,47,"apply"],[28,199,12,47],[28,200,12,47,"e"],[28,201,12,47],[28,203,12,47,"t"],[28,204,12,47],[28,211,12,47,"p"],[28,212,12,47],[29,2,17,0],[29,6,17,6,"ECPair"],[29,12,17,12],[29,15,17,15],[29,19,17,15,"ECPairFactory"],[29,50,17,15],[29,51,17,15,"ECPairFactory"],[29,74,17,28],[29,76,17,29,"ecc"],[29,94,17,32],[29,95,17,33],[30,2,18,0],[30,6,18,6,"bip32"],[30,11,18,11],[30,14,18,14],[30,18,18,14,"BIP32Factory"],[30,30,18,26],[30,32,18,27,"ecc"],[30,50,18,30],[30,51,18,31],[31,2,46,0],[31,6,46,6,"electrumSegwit"],[31,20,46,20],[31,23,46,23],[31,32,46,6,"electrumSegwit"],[31,46,46,20,"electrumSegwit"],[31,47,46,24,"passphrase"],[31,57,46,43],[32,4,46,43],[32,11,46,43,"Object"],[32,17,46,43],[32,18,46,43,"assign"],[32,24,46,43],[33,6,47,2,"prefix"],[33,12,47,8],[33,14,47,10,"mn"],[33,16,47,12],[33,17,47,13,"PREFIXES"],[33,25,47,21],[33,26,47,22,"segwit"],[34,4,47,28],[34,7,48,6,"passphrase"],[34,17,48,16],[34,20,48,19],[35,6,48,21,"passphrase"],[35,16,48,31],[35,18,48,21,"passphrase"],[36,4,48,32],[36,5,48,33],[36,8,48,36],[36,9,48,37],[36,10,48,38],[37,2,48,38],[37,3,49,2],[38,2,51,0],[38,6,51,6,"electrumStandart"],[38,22,51,22],[38,25,51,25],[38,34,51,6,"electrumStandart"],[38,50,51,22,"electrumStandart"],[38,51,51,26,"passphrase"],[38,61,51,45],[39,4,51,45],[39,11,51,45,"Object"],[39,17,51,45],[39,18,51,45,"assign"],[39,24,51,45],[40,6,52,2,"prefix"],[40,12,52,8],[40,14,52,10,"mn"],[40,16,52,12],[40,17,52,13,"PREFIXES"],[40,25,52,21],[40,26,52,22,"standard"],[41,4,52,30],[41,7,53,6,"passphrase"],[41,17,53,16],[41,20,53,19],[42,6,53,21,"passphrase"],[42,16,53,31],[42,18,53,21,"passphrase"],[43,4,53,32],[43,5,53,33],[43,8,53,36],[43,9,53,37],[43,10,53,38],[44,2,53,38],[44,3,54,2],[45,2,56,0],[45,6,56,6,"ELECTRUM_SEED_PREFIX"],[45,26,56,26],[45,29,56,29],[45,44,56,44],[46,2,56,45],[46,6,58,13,"MultisigHDWallet"],[46,22,58,29],[46,25,58,29,"exports"],[46,32,58,29],[46,33,58,29,"MultisigHDWallet"],[46,49,58,29],[46,75,58,29,"_AbstractHDElectrumWa"],[46,96,58,29],[47,4,58,29],[47,13,58,29,"MultisigHDWallet"],[47,30,58,29],[48,6,58,29],[48,10,58,29,"_this"],[48,15,58,29],[49,6,58,29],[49,10,58,29,"_classCallCheck2"],[49,26,58,29],[49,27,58,29,"default"],[49,34,58,29],[49,42,58,29,"MultisigHDWallet"],[49,58,58,29],[50,6,58,29],[50,15,58,29,"_len"],[50,19,58,29],[50,22,58,29,"arguments"],[50,31,58,29],[50,32,58,29,"length"],[50,38,58,29],[50,40,58,29,"args"],[50,44,58,29],[50,51,58,29,"Array"],[50,56,58,29],[50,57,58,29,"_len"],[50,61,58,29],[50,64,58,29,"_key"],[50,68,58,29],[50,74,58,29,"_key"],[50,78,58,29],[50,81,58,29,"_len"],[50,85,58,29],[50,87,58,29,"_key"],[50,91,58,29],[51,8,58,29,"args"],[51,12,58,29],[51,13,58,29,"_key"],[51,17,58,29],[51,21,58,29,"arguments"],[51,30,58,29],[51,31,58,29,"_key"],[51,35,58,29],[52,6,58,29],[53,6,58,29,"_this"],[53,11,58,29],[53,14,58,29,"_callSuper"],[53,24,58,29],[53,31,58,29,"MultisigHDWallet"],[53,47,58,29],[53,52,58,29,"concat"],[53,58,58,29],[53,59,58,29,"args"],[53,63,58,29],[54,6,61,2],[55,6,61,2,"_this"],[55,11,61,2],[55,12,62,18,"type"],[55,16,62,22],[55,19,62,25,"MultisigHDWallet"],[55,35,62,41],[55,36,62,42,"type"],[55,40,62,46],[56,6,63,2],[57,6,63,2,"_this"],[57,11,63,2],[57,12,64,18,"typeReadable"],[57,24,64,30],[57,27,64,33,"MultisigHDWallet"],[57,43,64,49],[57,44,64,50,"typeReadable"],[57,56,64,62],[58,6,64,62,"_this"],[58,11,64,62],[58,12,75,10,"_m"],[58,14,75,12],[58,17,75,23],[58,18,75,24],[59,6,75,26],[60,6,75,26,"_this"],[60,11,75,26],[60,12,76,10,"_cosigners"],[60,22,76,20],[60,25,76,33],[60,27,76,35],[61,6,76,37],[62,6,76,37,"_this"],[62,11,76,37],[62,12,77,10,"_cosignersFingerprints"],[62,34,77,32],[62,37,77,45],[62,39,77,47],[63,6,77,49],[64,6,77,49,"_this"],[64,11,77,49],[64,12,78,10,"_cosignersCustomPaths"],[64,33,78,31],[64,36,78,44],[64,38,78,46],[65,6,78,48],[66,6,78,48,"_this"],[66,11,78,48],[66,12,79,10,"_cosignersPassphrases"],[66,33,79,31],[66,36,79,58],[66,38,79,60],[67,6,79,62],[68,6,79,62,"_this"],[68,11,79,62],[68,12,80,10,"_isNativeSegwit"],[68,27,80,25],[68,30,80,37],[68,35,80,42],[69,6,80,42,"_this"],[69,11,80,42],[69,12,81,10,"_isWrappedSegwit"],[69,28,81,26],[69,31,81,38],[69,36,81,43],[70,6,81,43,"_this"],[70,11,81,43],[70,12,82,10,"_isLegacy"],[70,21,82,19],[70,24,82,31],[70,29,82,36],[71,6,82,36,"_this"],[71,11,82,36],[71,12,83,10,"_nodes"],[71,18,83,16],[71,21,83,67],[71,22,83,68],[71,23,83,69],[72,6,83,71],[73,6,83,71,"_this"],[73,11,83,71],[73,12,84,9,"_derivationPath"],[73,27,84,24],[73,30,84,35],[73,32,84,37],[74,6,84,37,"_this"],[74,11,84,37],[74,12,85,9,"gap_limit"],[74,21,85,18],[74,24,85,29],[74,26,85,31],[75,6,85,31],[75,13,85,31,"_this"],[75,18,85,31],[76,4,85,31],[77,4,85,31],[77,8,85,31,"_inherits2"],[77,18,85,31],[77,19,85,31,"default"],[77,26,85,31],[77,28,85,31,"MultisigHDWallet"],[77,44,85,31],[77,46,85,31,"_AbstractHDElectrumWa"],[77,67,85,31],[78,4,85,31],[78,15,85,31,"_createClass2"],[78,28,85,31],[78,29,85,31,"default"],[78,36,85,31],[78,38,85,31,"MultisigHDWallet"],[78,54,85,31],[79,6,85,31,"key"],[79,9,85,31],[80,6,85,31,"value"],[80,11,85,31],[80,13,87,2],[80,22,87,2,"isLegacy"],[80,30,87,10,"isLegacy"],[80,31,87,10],[80,33,87,13],[81,8,88,4],[81,15,88,11],[81,19,88,15],[81,20,88,16,"_isLegacy"],[81,29,88,25],[82,6,89,2],[83,4,89,3],[84,6,89,3,"key"],[84,9,89,3],[85,6,89,3,"value"],[85,11,89,3],[85,13,91,2],[85,22,91,2,"isNativeSegwit"],[85,36,91,16,"isNativeSegwit"],[85,37,91,16],[85,39,91,19],[86,8,92,4],[86,15,92,11],[86,19,92,15],[86,20,92,16,"_isNativeSegwit"],[86,35,92,31],[87,6,93,2],[88,4,93,3],[89,6,93,3,"key"],[89,9,93,3],[90,6,93,3,"value"],[90,11,93,3],[90,13,95,2],[90,22,95,2,"isWrappedSegwit"],[90,37,95,17,"isWrappedSegwit"],[90,38,95,17],[90,40,95,20],[91,8,96,4],[91,15,96,11],[91,19,96,15],[91,20,96,16,"_isWrappedSegwit"],[91,36,96,32],[92,6,97,2],[93,4,97,3],[94,6,97,3,"key"],[94,9,97,3],[95,6,97,3,"value"],[95,11,97,3],[95,13,99,2],[95,22,99,2,"setWrappedSegwit"],[95,38,99,18,"setWrappedSegwit"],[95,39,99,18],[95,41,99,21],[96,8,100,4],[96,12,100,8],[96,13,100,9,"_isWrappedSegwit"],[96,29,100,25],[96,32,100,28],[96,36,100,32],[97,6,101,2],[98,4,101,3],[99,6,101,3,"key"],[99,9,101,3],[100,6,101,3,"value"],[100,11,101,3],[100,13,103,2],[100,22,103,2,"setNativeSegwit"],[100,37,103,17,"setNativeSegwit"],[100,38,103,17],[100,40,103,20],[101,8,104,4],[101,12,104,8],[101,13,104,9,"_isNativeSegwit"],[101,28,104,24],[101,31,104,27],[101,35,104,31],[102,6,105,2],[103,4,105,3],[104,6,105,3,"key"],[104,9,105,3],[105,6,105,3,"value"],[105,11,105,3],[105,13,107,2],[105,22,107,2,"setLegacy"],[105,31,107,11,"setLegacy"],[105,32,107,11],[105,34,107,14],[106,8,108,4],[106,12,108,8],[106,13,108,9,"_isLegacy"],[106,22,108,18],[106,25,108,21],[106,29,108,25],[107,6,109,2],[108,4,109,3],[109,6,109,3,"key"],[109,9,109,3],[110,6,109,3,"value"],[110,11,109,3],[110,13,111,2],[110,22,111,2,"setM"],[110,26,111,6,"setM"],[110,27,111,7,"m"],[110,28,111,16],[110,30,111,18],[111,8,112,4],[111,12,112,8],[111,13,112,9,"_m"],[111,15,112,11],[111,18,112,14,"m"],[111,19,112,15],[112,6,113,2],[114,6,115,2],[115,0,116,0],[116,0,117,0],[117,4,115,2],[118,6,115,2,"key"],[118,9,115,2],[119,6,115,2,"value"],[119,11,115,2],[119,13,118,2],[119,22,118,2,"getM"],[119,26,118,6,"getM"],[119,27,118,6],[119,29,118,17],[120,8,119,4],[120,15,119,11],[120,19,119,15],[120,20,119,16,"_m"],[120,22,119,18],[121,6,120,2],[123,6,122,2],[124,0,123,0],[125,0,124,0],[126,4,122,2],[127,6,122,2,"key"],[127,9,122,2],[128,6,122,2,"value"],[128,11,122,2],[128,13,125,2],[128,22,125,2,"getN"],[128,26,125,6,"getN"],[128,27,125,6],[128,29,125,17],[129,8,126,4],[129,15,126,11],[129,19,126,15],[129,20,126,16,"_cosigners"],[129,30,126,26],[129,31,126,27,"length"],[129,37,126,33],[130,6,127,2],[131,4,127,3],[132,6,127,3,"key"],[132,9,127,3],[133,6,127,3,"value"],[133,11,127,3],[133,13,129,2],[133,22,129,2,"setDerivationPath"],[133,39,129,19,"setDerivationPath"],[133,40,129,20,"path"],[133,44,129,32],[133,46,129,34],[134,8,130,4],[134,12,130,8],[134,13,130,9,"_derivationPath"],[134,28,130,24],[134,31,130,27,"path"],[134,35,130,31],[135,8,131,4],[135,16,131,12],[135,20,131,16],[135,21,131,17,"_derivationPath"],[135,36,131,32],[136,10,132,6],[136,15,132,11],[136,31,132,27],[137,12,133,8],[137,16,133,12],[137,17,133,13,"_isNativeSegwit"],[137,32,133,28],[137,35,133,31],[137,39,133,35],[138,12,134,8],[139,10,135,6],[139,15,135,11],[139,31,135,27],[140,12,136,8],[140,16,136,12],[140,17,136,13,"_isWrappedSegwit"],[140,33,136,29],[140,36,136,32],[140,40,136,36],[141,12,137,8],[142,10,138,6],[142,15,138,11],[142,22,138,18],[143,12,139,8],[143,16,139,12],[143,17,139,13,"_isLegacy"],[143,26,139,22],[143,29,139,25],[143,33,139,29],[144,12,140,8],[145,10,141,6],[145,15,141,11],[145,22,141,18],[146,12,142,8],[146,16,142,12],[146,17,142,13,"_isLegacy"],[146,26,142,22],[146,29,142,25],[146,33,142,29],[147,12,143,8],[148,8,144,4],[149,6,145,2],[150,4,145,3],[151,6,145,3,"key"],[151,9,145,3],[152,6,145,3,"value"],[152,11,145,3],[152,13,147,2],[152,22,147,2,"getCustomDerivationPathForCosigner"],[152,56,147,36,"getCustomDerivationPathForCosigner"],[152,57,147,37,"index"],[152,62,147,50],[152,64,147,68],[153,8,148,4],[153,12,148,8,"index"],[153,17,148,13],[153,22,148,18],[153,23,148,19],[153,25,148,21],[153,31,148,27],[153,35,148,31,"Error"],[153,40,148,36],[153,41,148,37],[153,77,148,73],[153,78,148,74],[154,8,149,4],[154,12,149,8,"index"],[154,17,149,13],[154,20,149,16],[154,24,149,20],[154,25,149,21,"getN"],[154,29,149,25],[154,30,149,26],[154,31,149,27],[154,33,149,29],[154,40,149,36],[154,45,149,41],[155,8,150,4],[155,15,150,11],[155,19,150,15],[155,20,150,16,"_cosignersCustomPaths"],[155,41,150,37],[155,42,150,38,"index"],[155,47,150,43],[155,50,150,46],[155,51,150,47],[155,52,150,48],[155,56,150,52],[155,60,150,56],[155,61,150,57,"getDerivationPath"],[155,78,150,74],[155,79,150,75],[155,80,150,77],[156,6,151,2],[157,4,151,3],[158,6,151,3,"key"],[158,9,151,3],[159,6,151,3,"value"],[159,11,151,3],[159,13,153,2],[159,22,153,2,"getCosigner"],[159,33,153,13,"getCosigner"],[159,34,153,14,"index"],[159,39,153,27],[159,41,153,29],[160,8,154,4],[160,12,154,8,"index"],[160,17,154,13],[160,22,154,18],[160,23,154,19],[160,25,154,21],[160,31,154,27],[160,35,154,31,"Error"],[160,40,154,36],[160,41,154,37],[160,77,154,73],[160,78,154,74],[161,8,155,4],[161,15,155,11],[161,19,155,15],[161,20,155,16,"_cosigners"],[161,30,155,26],[161,31,155,27,"index"],[161,36,155,32],[161,39,155,35],[161,40,155,36],[161,41,155,37],[162,6,156,2],[163,4,156,3],[164,6,156,3,"key"],[164,9,156,3],[165,6,156,3,"value"],[165,11,156,3],[165,13,158,2],[165,22,158,2,"getFingerprint"],[165,36,158,16,"getFingerprint"],[165,37,158,17,"index"],[165,42,158,30],[165,44,158,32],[166,8,159,4],[166,12,159,8,"index"],[166,17,159,13],[166,22,159,18],[166,23,159,19],[166,25,159,21],[166,31,159,27],[166,35,159,31,"Error"],[166,40,159,36],[166,41,159,37],[166,90,159,86],[166,91,159,87],[167,8,160,4],[167,15,160,11],[167,19,160,15],[167,20,160,16,"_cosignersFingerprints"],[167,42,160,38],[167,43,160,39,"index"],[167,48,160,44],[167,51,160,47],[167,52,160,48],[167,53,160,49],[168,6,161,2],[169,4,161,3],[170,6,161,3,"key"],[170,9,161,3],[171,6,161,3,"value"],[171,11,161,3],[171,13,163,2],[171,22,163,2,"getCosignerForFingerprint"],[171,47,163,27,"getCosignerForFingerprint"],[171,48,163,28,"fp"],[171,50,163,38],[171,52,163,40],[172,8,164,4],[172,12,164,10,"index"],[172,17,164,15],[172,20,164,18],[172,24,164,22],[172,25,164,23,"_cosignersFingerprints"],[172,47,164,45],[172,48,164,46,"indexOf"],[172,55,164,53],[172,56,164,54,"fp"],[172,58,164,56],[172,59,164,57],[173,8,165,4],[173,15,165,11],[173,19,165,15],[173,20,165,16,"_cosigners"],[173,30,165,26],[173,31,165,27,"index"],[173,36,165,32],[173,37,165,33],[174,6,166,2],[175,4,166,3],[176,6,166,3,"key"],[176,9,166,3],[177,6,166,3,"value"],[177,11,166,3],[177,13,168,2],[177,22,168,2,"getCosignerPassphrase"],[177,43,168,23,"getCosignerPassphrase"],[177,44,168,24,"index"],[177,49,168,37],[177,51,168,39],[178,8,169,4],[178,12,169,8,"index"],[178,17,169,13],[178,22,169,18],[178,23,169,19],[178,25,169,21],[178,31,169,27],[178,35,169,31,"Error"],[178,40,169,36],[178,41,169,37],[178,77,169,73],[178,78,169,74],[179,8,170,4],[179,15,170,11],[179,19,170,15],[179,20,170,16,"_cosignersPassphrases"],[179,41,170,37],[179,42,170,38,"index"],[179,47,170,43],[179,50,170,46],[179,51,170,47],[179,52,170,48],[180,6,171,2],[181,4,171,3],[182,6,171,3,"key"],[182,9,171,3],[183,6,171,3,"value"],[183,11,171,3],[184,6,196,2],[185,0,197,0],[186,0,198,0],[187,0,199,0],[188,0,200,0],[189,0,201,0],[190,0,202,0],[191,6,203,2],[191,15,203,2,"addCosigner"],[191,26,203,13,"addCosigner"],[191,27,203,14,"key"],[191,30,203,25],[191,32,203,27,"fingerprint"],[191,43,203,47],[191,45,203,49,"path"],[191,49,203,62],[191,51,203,64,"passphrase"],[191,61,203,83],[191,63,203,85],[192,8,204,4],[192,12,204,8,"MultisigHDWallet"],[192,28,204,24],[192,29,204,25,"isXpubString"],[192,41,204,37],[192,42,204,38,"key"],[192,45,204,41],[192,46,204,42],[192,50,204,46],[192,51,204,47,"fingerprint"],[192,62,204,58],[192,64,204,60],[193,10,205,6],[193,16,205,12],[193,20,205,16,"Error"],[193,25,205,21],[193,26,205,22],[193,93,205,89],[193,94,205,90],[194,8,206,4],[195,8,208,4],[195,12,208,8,"path"],[195,16,208,12],[195,20,208,16],[195,21,208,17,"MultisigHDWallet"],[195,37,208,33],[195,38,208,34,"isPathValid"],[195,49,208,45],[195,50,208,46,"path"],[195,54,208,50],[195,55,208,51],[195,57,208,53],[196,10,209,6],[196,16,209,12],[196,20,209,16,"Error"],[196,25,209,21],[196,26,209,22],[196,45,209,41],[196,46,209,42],[197,8,210,4],[198,8,212,4],[198,12,212,8,"MultisigHDWallet"],[198,28,212,24],[198,29,212,25,"isXprvString"],[198,41,212,37],[198,42,212,38,"key"],[198,45,212,41],[198,46,212,42],[198,48,212,44],[199,10,213,6],[200,8,213,6],[200,9,214,5],[200,15,214,11],[200,19,214,15,"MultisigHDWallet"],[200,35,214,31],[200,36,214,32,"isXpubString"],[200,48,214,44],[200,49,214,45,"key"],[200,52,214,48],[200,53,214,49],[200,55,214,51],[201,10,215,6],[202,10,216,6],[202,14,216,10],[202,15,216,11,"MultisigHDWallet"],[202,31,216,27],[202,32,216,28,"isXpubValid"],[202,43,216,39],[202,44,216,40,"key"],[202,47,216,43],[202,48,216,44],[202,50,216,46],[202,56,216,52],[202,60,216,56,"Error"],[202,65,216,61],[202,66,216,62],[202,86,216,82],[202,89,216,85,"key"],[202,92,216,88],[202,93,216,89],[203,8,217,4],[203,9,217,5],[203,15,217,11],[203,19,217,15,"key"],[203,22,217,18],[203,23,217,19,"startsWith"],[203,33,217,29],[203,34,217,30,"ELECTRUM_SEED_PREFIX"],[203,54,217,50],[203,55,217,51],[203,59,217,55,"fingerprint"],[203,70,217,66],[203,74,217,70,"path"],[203,78,217,74],[203,80,217,76],[204,10,218,6],[205,10,219,6],[205,14,219,12,"mnemonic"],[205,22,219,20],[205,25,219,23,"key"],[205,28,219,26],[205,29,219,27,"replace"],[205,36,219,34],[205,37,219,35,"ELECTRUM_SEED_PREFIX"],[205,57,219,55],[205,59,219,57],[205,61,219,59],[205,62,219,60],[206,10,220,6],[206,14,220,10],[207,12,221,8,"mn"],[207,14,221,10],[207,15,221,11,"mnemonicToSeedSync"],[207,33,221,29],[207,34,221,30,"mnemonic"],[207,42,221,38],[207,44,221,40,"electrumStandart"],[207,60,221,56],[207,61,221,57,"passphrase"],[207,71,221,67],[207,72,221,68],[207,73,221,69],[208,12,222,8],[208,16,222,12],[208,17,222,13,"setLegacy"],[208,26,222,22],[208,27,222,23],[208,28,222,24],[209,10,223,6],[209,11,223,7],[209,12,223,8],[209,19,223,15,"_"],[209,20,223,16],[209,22,223,18],[210,12,224,8],[210,16,224,12],[211,14,225,10,"mn"],[211,16,225,12],[211,17,225,13,"mnemonicToSeedSync"],[211,35,225,31],[211,36,225,32,"mnemonic"],[211,44,225,40],[211,46,225,42,"electrumSegwit"],[211,60,225,56],[211,61,225,57,"passphrase"],[211,71,225,67],[211,72,225,68],[211,73,225,69],[212,14,226,10],[212,18,226,14],[212,19,226,15,"setNativeSegwit"],[212,34,226,30],[212,35,226,31],[212,36,226,32],[213,12,227,8],[213,13,227,9],[213,14,227,10],[213,21,227,17,"__"],[213,23,227,19],[213,25,227,21],[214,14,228,10],[214,20,228,16],[214,24,228,20,"Error"],[214,29,228,25],[214,30,228,26],[214,57,228,53],[214,58,228,54],[215,12,229,8],[216,10,230,6],[217,8,231,4],[217,9,231,5],[217,15,231,11],[218,10,232,6],[219,10,233,6],[219,14,233,10],[219,15,233,11,"bip39"],[219,20,233,16],[219,21,233,17,"validateMnemonic"],[219,37,233,33],[219,38,233,34,"key"],[219,41,233,37],[219,42,233,38],[219,44,233,40],[219,50,233,46],[219,54,233,50,"Error"],[219,59,233,55],[219,60,233,56],[219,89,233,85],[219,90,233,86],[220,10,234,6,"fingerprint"],[220,21,234,17],[220,24,234,20,"fingerprint"],[220,35,234,31],[220,39,234,35,"MultisigHDWallet"],[220,55,234,51],[220,56,234,52,"mnemonicToFingerprint"],[220,77,234,73],[220,78,234,74,"key"],[220,81,234,77],[220,83,234,79,"passphrase"],[220,93,234,89],[220,94,234,90],[221,8,235,4],[222,8,237,4],[222,12,237,8,"fingerprint"],[222,23,237,19],[222,27,237,23],[222,31,237,27],[222,32,237,28,"_cosignersFingerprints"],[222,54,237,50],[222,55,237,51,"indexOf"],[222,62,237,58],[222,63,237,59,"fingerprint"],[222,74,237,70],[222,75,237,71,"toUpperCase"],[222,86,237,82],[222,87,237,83],[222,88,237,84],[222,89,237,85],[222,94,237,90],[222,95,237,91],[222,96,237,92],[222,100,237,96,"fingerprint"],[222,111,237,107],[222,116,237,112],[222,126,237,122],[222,128,237,124],[223,10,238,6],[224,10,239,6],[224,16,239,12],[224,20,239,16,"Error"],[224,25,239,21],[224,26,239,22],[224,49,239,45],[224,50,239,46],[225,8,240,4],[226,8,242,4],[226,12,242,10,"index"],[226,17,242,15],[226,20,242,18],[226,24,242,22],[226,25,242,23,"_cosigners"],[226,35,242,33],[226,36,242,34,"length"],[226,42,242,40],[227,8,243,4],[227,12,243,8],[227,13,243,9,"_cosigners"],[227,23,243,19],[227,24,243,20,"index"],[227,29,243,25],[227,30,243,26],[227,33,243,29,"key"],[227,36,243,32],[228,8,244,4],[228,12,244,8,"fingerprint"],[228,23,244,19],[228,25,244,21],[228,29,244,25],[228,30,244,26,"_cosignersFingerprints"],[228,52,244,48],[228,53,244,49,"index"],[228,58,244,54],[228,59,244,55],[228,62,244,58,"fingerprint"],[228,73,244,69],[228,74,244,70,"toUpperCase"],[228,85,244,81],[228,86,244,82],[228,87,244,83],[229,8,245,4],[229,12,245,8,"path"],[229,16,245,12],[229,18,245,14],[229,22,245,18],[229,23,245,19,"_cosignersCustomPaths"],[229,44,245,40],[229,45,245,41,"index"],[229,50,245,46],[229,51,245,47],[229,54,245,50,"path"],[229,58,245,54],[230,8,246,4],[230,12,246,8,"passphrase"],[230,22,246,18],[230,24,246,20],[230,28,246,24],[230,29,246,25,"_cosignersPassphrases"],[230,50,246,46],[230,51,246,47,"index"],[230,56,246,52],[230,57,246,53],[230,60,246,56,"passphrase"],[230,70,246,66],[231,6,247,2],[232,4,247,3],[233,6,247,3,"key"],[233,9,247,3],[234,6,247,3,"value"],[234,11,247,3],[235,6,260,2],[236,0,261,0],[237,0,262,0],[238,0,263,0],[239,0,264,0],[240,0,265,0],[241,0,266,0],[242,6,267,2],[242,15,267,12,"_getXpubFromCosignerIndex"],[242,40,267,37,"_getXpubFromCosignerIndex"],[242,41,267,38,"index"],[242,46,267,51],[242,48,267,53],[243,8,268,4],[243,12,268,8],[243,13,268,9],[243,17,268,13],[243,18,268,14,"_cosigners"],[243,28,268,24],[243,32,268,28],[243,33,268,29],[243,37,268,33],[243,38,268,34,"_cosigners"],[243,48,268,44],[243,49,268,45,"index"],[243,54,268,50],[243,55,268,51],[243,57,268,53],[244,10,269,6],[244,16,269,12],[244,20,269,16,"Error"],[244,25,269,21],[244,26,269,22],[244,79,269,75],[244,80,269,76],[245,8,270,4],[246,8,271,4],[246,12,271,8,"cosigner"],[246,20,271,24],[246,23,271,27],[246,27,271,31],[246,28,271,32,"_cosigners"],[246,38,271,42],[246,39,271,43,"index"],[246,44,271,48],[246,45,271,49],[247,8,272,4],[247,12,272,8,"MultisigHDWallet"],[247,28,272,24],[247,29,272,25,"isXprvString"],[247,41,272,37],[247,42,272,38,"cosigner"],[247,50,272,46],[247,51,272,47],[247,53,272,49,"cosigner"],[247,61,272,57],[247,64,272,60,"MultisigHDWallet"],[247,80,272,76],[247,81,272,77,"convertXprvToXpub"],[247,98,272,94],[247,99,272,95,"cosigner"],[247,107,272,103],[247,108,272,104],[248,8,273,4],[248,12,273,8,"xpub"],[248,16,273,12],[248,19,273,15,"cosigner"],[248,27,273,23],[249,8,274,4],[249,12,274,8],[249,13,274,9,"MultisigHDWallet"],[249,29,274,25],[249,30,274,26,"isXpubString"],[249,42,274,38],[249,43,274,39,"cosigner"],[249,51,274,47],[249,52,274,48],[249,54,274,50],[250,10,275,6,"xpub"],[250,14,275,10],[250,17,275,13,"MultisigHDWallet"],[250,33,275,29],[250,34,275,30,"seedToXpub"],[250,44,275,40],[250,45,276,8,"cosigner"],[250,53,276,16],[250,55,277,8],[250,59,277,12],[250,60,277,13,"_cosignersCustomPaths"],[250,81,277,34],[250,82,277,35,"index"],[250,87,277,40],[250,88,277,41],[250,92,277,45],[250,96,277,49],[250,97,277,50,"_derivationPath"],[250,112,277,65],[250,114,278,8],[250,118,278,12],[250,119,278,13,"_cosignersPassphrases"],[250,140,278,34],[250,141,278,35,"index"],[250,146,278,40],[250,147,279,6],[250,148,279,7],[251,8,280,4],[252,8,281,4],[252,15,281,11],[252,19,281,15],[252,20,281,16,"_zpubToXpub"],[252,31,281,27],[252,32,281,28,"xpub"],[252,36,281,32],[252,37,281,33],[253,6,282,2],[254,4,282,3],[255,6,282,3,"key"],[255,9,282,3],[256,6,282,3,"value"],[256,11,282,3],[256,13,284,2],[256,22,284,2,"_getExternalAddressByIndex"],[256,48,284,28,"_getExternalAddressByIndex"],[256,49,284,29,"index"],[256,54,284,42],[256,56,284,44],[257,8,285,4],[257,12,285,8],[257,13,285,9],[257,17,285,13],[257,18,285,14,"_m"],[257,20,285,16],[257,22,285,18],[257,28,285,24],[257,32,285,28,"Error"],[257,37,285,33],[257,38,285,34],[257,52,285,48],[257,53,285,49],[258,8,286,4,"index"],[258,13,286,9],[258,16,286,12],[258,17,286,13,"index"],[258,22,286,18],[259,8,287,4],[259,12,287,8],[259,16,287,12],[259,17,287,13,"external_addresses_cache"],[259,41,287,37],[259,42,287,38,"index"],[259,47,287,43],[259,48,287,44],[259,50,287,46],[259,57,287,53],[259,61,287,57],[259,62,287,58,"external_addresses_cache"],[259,86,287,82],[259,87,287,83,"index"],[259,92,287,88],[259,93,287,89],[259,94,287,90],[259,95,287,91],[261,8,289,4],[261,12,289,10,"address"],[261,19,289,17],[261,22,289,20],[261,26,289,24],[261,27,289,25,"_getAddressFromNode"],[261,46,289,44],[261,47,289,45],[261,48,289,46],[261,50,289,48,"index"],[261,55,289,53],[261,56,289,54],[262,8,290,4],[262,12,290,8],[262,13,290,9,"external_addresses_cache"],[262,37,290,33],[262,38,290,34,"index"],[262,43,290,39],[262,44,290,40],[262,47,290,43,"address"],[262,54,290,50],[263,8,291,4],[263,15,291,11,"address"],[263,22,291,18],[264,6,292,2],[265,4,292,3],[266,6,292,3,"key"],[266,9,292,3],[267,6,292,3,"value"],[267,11,292,3],[267,13,294,2],[267,22,294,2,"_getAddressFromNode"],[267,41,294,21,"_getAddressFromNode"],[267,42,294,22,"nodeIndex"],[267,51,294,39],[267,53,294,41,"index"],[267,58,294,54],[267,60,294,56],[268,8,295,4],[268,12,295,8],[268,13,295,9,"_nodes"],[268,19,295,15],[268,22,295,18],[268,26,295,22],[268,27,295,23,"_nodes"],[268,33,295,29],[268,37,295,33],[268,38,295,34],[268,39,295,35],[269,8,296,4],[269,12,296,10,"pubkeys"],[269,19,296,17],[269,22,296,20],[269,24,296,22],[270,8,297,4],[270,17,297,4,"_ref"],[270,21,297,4],[270,25,297,34],[270,29,297,38],[270,30,297,39,"_cosigners"],[270,40,297,49],[270,41,297,50,"entries"],[270,48,297,57],[270,49,297,58],[270,50,297,59],[270,52,297,61],[271,10,297,61],[271,14,297,61,"_ref2"],[271,19,297,61],[271,26,297,61,"_slicedToArray2"],[271,41,297,61],[271,42,297,61,"default"],[271,49,297,61],[271,51,297,61,"_ref"],[271,55,297,61],[272,10,297,61],[272,14,297,16,"cosignerIndex"],[272,27,297,29],[272,30,297,29,"_ref2"],[272,35,297,29],[273,10,298,6],[273,14,298,10],[273,15,298,11,"_nodes"],[273,21,298,17],[273,22,298,18,"nodeIndex"],[273,31,298,27],[273,32,298,28],[273,35,298,31],[273,39,298,35],[273,40,298,36,"_nodes"],[273,46,298,42],[273,47,298,43,"nodeIndex"],[273,56,298,52],[273,57,298,53],[273,61,298,57],[273,62,298,58],[273,63,298,59],[274,10,299,6],[274,14,299,10,"_node"],[274,19,299,15],[275,10,301,6],[275,14,301,10],[275,15,301,11],[275,19,301,15],[275,20,301,16,"_nodes"],[275,26,301,22],[275,27,301,23,"nodeIndex"],[275,36,301,32],[275,37,301,33],[275,38,301,34,"cosignerIndex"],[275,51,301,47],[275,52,301,48],[275,54,301,50],[276,12,302,8],[276,16,302,14,"xpub"],[276,20,302,18],[276,23,302,21],[276,27,302,25],[276,28,302,26,"_getXpubFromCosignerIndex"],[276,53,302,51],[276,54,302,52,"cosignerIndex"],[276,67,302,65],[276,68,302,66],[277,12,303,8],[277,16,303,14,"hdNode"],[277,22,303,20],[277,25,303,23,"bip32"],[277,30,303,28],[277,31,303,29,"fromBase58"],[277,41,303,39],[277,42,303,40,"xpub"],[277,46,303,44],[277,47,303,45],[278,12,304,8,"_node"],[278,17,304,13],[278,20,304,16,"hdNode"],[278,26,304,22],[278,27,304,23,"derive"],[278,33,304,29],[278,34,304,30,"nodeIndex"],[278,43,304,39],[278,44,304,40],[279,12,305,8],[279,16,305,12],[279,17,305,13,"_nodes"],[279,23,305,19],[279,24,305,20,"nodeIndex"],[279,33,305,29],[279,34,305,30],[279,35,305,31,"cosignerIndex"],[279,48,305,44],[279,49,305,45],[279,52,305,48,"_node"],[279,57,305,53],[280,10,306,6],[280,11,306,7],[280,17,306,13],[281,12,307,8,"_node"],[281,17,307,13],[281,20,307,16],[281,24,307,20],[281,25,307,21,"_nodes"],[281,31,307,27],[281,32,307,28,"nodeIndex"],[281,41,307,37],[281,42,307,38],[281,43,307,39,"cosignerIndex"],[281,56,307,52],[281,57,307,53],[282,10,308,6],[283,10,310,6,"pubkeys"],[283,17,310,13],[283,18,310,14,"push"],[283,22,310,18],[283,23,310,19,"_node"],[283,28,310,24],[283,29,310,25,"derive"],[283,35,310,31],[283,36,310,32,"index"],[283,41,310,37],[283,42,310,38],[283,43,310,39,"publicKey"],[283,52,310,48],[283,53,310,49],[284,8,311,4],[285,8,313,4],[285,12,313,8],[285,16,313,12],[285,17,313,13,"isWrappedSegwit"],[285,32,313,28],[285,33,313,29],[285,34,313,30],[285,36,313,32],[286,10,314,6],[286,14,314,6,"_bitcoin$payments$p2s"],[286,35,314,6],[286,38,314,26,"bitcoin"],[286,45,314,33],[286,46,314,34,"payments"],[286,54,314,42],[286,55,314,43,"p2sh"],[286,59,314,47],[286,60,314,48],[287,14,315,8,"redeem"],[287,20,315,14],[287,22,315,16,"bitcoin"],[287,29,315,23],[287,30,315,24,"payments"],[287,38,315,32],[287,39,315,33,"p2wsh"],[287,44,315,38],[287,45,315,39],[288,16,316,10,"redeem"],[288,22,316,16],[288,24,316,18,"bitcoin"],[288,31,316,25],[288,32,316,26,"payments"],[288,40,316,34],[288,41,316,35,"p2ms"],[288,45,316,39],[288,46,316,40],[289,18,316,42,"m"],[289,19,316,43],[289,21,316,45],[289,25,316,49],[289,26,316,50,"_m"],[289,28,316,52],[290,18,316,54,"pubkeys"],[290,25,316,61],[290,27,316,63,"MultisigHDWallet"],[290,43,316,79],[290,44,316,80,"sortBuffers"],[290,55,316,91],[290,56,316,92,"pubkeys"],[290,63,316,99],[291,16,316,101],[291,17,316,102],[292,14,317,8],[292,15,317,9],[293,12,318,6],[293,13,318,7],[293,14,318,8],[294,12,314,14,"address"],[294,19,314,21],[294,22,314,21,"_bitcoin$payments$p2s"],[294,43,314,21],[294,44,314,14,"address"],[294,51,314,21],[295,10,319,6],[295,14,319,10],[295,15,319,11,"address"],[295,22,319,18],[295,24,319,20],[296,12,320,8],[296,18,320,14],[296,22,320,18,"Error"],[296,27,320,23],[296,28,320,24],[296,73,320,69],[296,74,320,70],[297,10,321,6],[298,10,323,6],[298,17,323,13,"address"],[298,24,323,20],[299,8,324,4],[299,9,324,5],[299,15,324,11],[299,19,324,15],[299,23,324,19],[299,24,324,20,"isNativeSegwit"],[299,38,324,34],[299,39,324,35],[299,40,324,36],[299,42,324,38],[300,10,325,6],[300,14,325,6,"_bitcoin$payments$p2w"],[300,35,325,6],[300,38,325,26,"bitcoin"],[300,45,325,33],[300,46,325,34,"payments"],[300,54,325,42],[300,55,325,43,"p2wsh"],[300,60,325,48],[300,61,325,49],[301,14,326,8,"redeem"],[301,20,326,14],[301,22,326,16,"bitcoin"],[301,29,326,23],[301,30,326,24,"payments"],[301,38,326,32],[301,39,326,33,"p2ms"],[301,43,326,37],[301,44,326,38],[302,16,326,40,"m"],[302,17,326,41],[302,19,326,43],[302,23,326,47],[302,24,326,48,"_m"],[302,26,326,50],[303,16,326,52,"pubkeys"],[303,23,326,59],[303,25,326,61,"MultisigHDWallet"],[303,41,326,77],[303,42,326,78,"sortBuffers"],[303,53,326,89],[303,54,326,90,"pubkeys"],[303,61,326,97],[304,14,326,99],[304,15,326,100],[305,12,327,6],[305,13,327,7],[305,14,327,8],[306,12,325,14,"address"],[306,20,325,21],[306,23,325,21,"_bitcoin$payments$p2w"],[306,44,325,21],[306,45,325,14,"address"],[306,52,325,21],[307,10,328,6],[307,14,328,10],[307,15,328,11,"address"],[307,23,328,18],[307,25,328,20],[308,12,329,8],[308,18,329,14],[308,22,329,18,"Error"],[308,27,329,23],[308,28,329,24],[308,74,329,70],[308,75,329,71],[309,10,330,6],[310,10,332,6],[310,17,332,13,"address"],[310,25,332,20],[311,8,333,4],[311,9,333,5],[311,15,333,11],[311,19,333,15],[311,23,333,19],[311,24,333,20,"isLegacy"],[311,32,333,28],[311,33,333,29],[311,34,333,30],[311,36,333,32],[312,10,334,6],[312,14,334,6,"_bitcoin$payments$p2s2"],[312,36,334,6],[312,39,334,26,"bitcoin"],[312,46,334,33],[312,47,334,34,"payments"],[312,55,334,42],[312,56,334,43,"p2sh"],[312,60,334,47],[312,61,334,48],[313,14,335,8,"redeem"],[313,20,335,14],[313,22,335,16,"bitcoin"],[313,29,335,23],[313,30,335,24,"payments"],[313,38,335,32],[313,39,335,33,"p2ms"],[313,43,335,37],[313,44,335,38],[314,16,335,40,"m"],[314,17,335,41],[314,19,335,43],[314,23,335,47],[314,24,335,48,"_m"],[314,26,335,50],[315,16,335,52,"pubkeys"],[315,23,335,59],[315,25,335,61,"MultisigHDWallet"],[315,41,335,77],[315,42,335,78,"sortBuffers"],[315,53,335,89],[315,54,335,90,"pubkeys"],[315,61,335,97],[316,14,335,99],[316,15,335,100],[317,12,336,6],[317,13,336,7],[317,14,336,8],[318,12,334,14,"address"],[318,21,334,21],[318,24,334,21,"_bitcoin$payments$p2s2"],[318,46,334,21],[318,47,334,14,"address"],[318,54,334,21],[319,10,337,6],[319,14,337,10],[319,15,337,11,"address"],[319,24,337,18],[319,26,337,20],[320,12,338,8],[320,18,338,14],[320,22,338,18,"Error"],[320,27,338,23],[320,28,338,24],[320,73,338,69],[320,74,338,70],[321,10,339,6],[322,10,341,6],[322,17,341,13,"address"],[322,26,341,20],[323,8,342,4],[323,9,342,5],[323,15,342,11],[324,10,343,6],[324,16,343,12],[324,20,343,16,"Error"],[324,25,343,21],[324,26,343,22],[324,57,343,53],[324,58,343,54],[325,8,344,4],[326,6,345,2],[327,4,345,3],[328,6,345,3,"key"],[328,9,345,3],[329,6,345,3,"value"],[329,11,345,3],[329,13,347,2],[329,22,347,2,"_getInternalAddressByIndex"],[329,48,347,28,"_getInternalAddressByIndex"],[329,49,347,29,"index"],[329,54,347,42],[329,56,347,44],[330,8,348,4],[330,12,348,8],[330,13,348,9],[330,17,348,13],[330,18,348,14,"_m"],[330,20,348,16],[330,22,348,18],[330,28,348,24],[330,32,348,28,"Error"],[330,37,348,33],[330,38,348,34],[330,52,348,48],[330,53,348,49],[331,8,349,4,"index"],[331,13,349,9],[331,16,349,12],[331,17,349,13,"index"],[331,22,349,18],[332,8,350,4],[332,12,350,8],[332,16,350,12],[332,17,350,13,"internal_addresses_cache"],[332,41,350,37],[332,42,350,38,"index"],[332,47,350,43],[332,48,350,44],[332,50,350,46],[332,57,350,53],[332,61,350,57],[332,62,350,58,"internal_addresses_cache"],[332,86,350,82],[332,87,350,83,"index"],[332,92,350,88],[332,93,350,89],[332,94,350,90],[332,95,350,91],[334,8,352,4],[334,12,352,10,"address"],[334,19,352,17],[334,22,352,20],[334,26,352,24],[334,27,352,25,"_getAddressFromNode"],[334,46,352,44],[334,47,352,45],[334,48,352,46],[334,50,352,48,"index"],[334,55,352,53],[334,56,352,54],[335,8,353,4],[335,12,353,8],[335,13,353,9,"internal_addresses_cache"],[335,37,353,33],[335,38,353,34,"index"],[335,43,353,39],[335,44,353,40],[335,47,353,43,"address"],[335,54,353,50],[336,8,354,4],[336,15,354,11,"address"],[336,22,354,18],[337,6,355,2],[338,4,355,3],[339,6,355,3,"key"],[339,9,355,3],[340,6,355,3,"value"],[340,11,355,3],[341,6,370,2],[342,0,371,0],[343,0,372,0],[344,0,373,0],[345,0,374,0],[346,0,375,0],[347,0,376,0],[348,0,377,0],[349,6,378,2],[349,15,378,2,"convertXpubToMultisignatureXpub"],[349,46,378,33,"convertXpubToMultisignatureXpub"],[349,47,378,34,"xpub"],[349,51,378,46],[349,53,378,56],[350,8,379,4],[350,12,379,8,"data"],[350,16,379,12],[350,19,379,15,"b58"],[350,37,379,18],[350,38,379,19,"decode"],[350,44,379,25],[350,45,379,26,"xpub"],[350,49,379,30],[350,50,379,31],[351,8,380,4,"data"],[351,12,380,8],[351,15,380,11,"data"],[351,19,380,15],[351,20,380,16,"slice"],[351,25,380,21],[351,26,380,22],[351,27,380,23],[351,28,380,24],[352,8,381,4],[352,12,381,8],[352,16,381,12],[352,17,381,13,"isNativeSegwit"],[352,31,381,27],[352,32,381,28],[352,33,381,29],[352,35,381,31],[353,10,382,6],[353,17,382,13,"b58"],[353,35,382,16],[353,36,382,17,"encode"],[353,42,382,23],[353,43,382,24,"Buffer"],[353,49,382,30],[353,50,382,31,"concat"],[353,56,382,37],[353,57,382,38],[353,58,382,39,"Buffer"],[353,64,382,45],[353,65,382,46,"from"],[353,69,382,50],[353,70,382,51],[353,80,382,61],[353,82,382,63],[353,87,382,68],[353,88,382,69],[353,90,382,71,"data"],[353,94,382,75],[353,95,382,76],[353,96,382,77],[353,97,382,78],[354,8,383,4],[354,9,383,5],[354,15,383,11],[354,19,383,15],[354,23,383,19],[354,24,383,20,"isWrappedSegwit"],[354,39,383,35],[354,40,383,36],[354,41,383,37],[354,43,383,39],[355,10,384,6],[355,17,384,13,"b58"],[355,35,384,16],[355,36,384,17,"encode"],[355,42,384,23],[355,43,384,24,"Buffer"],[355,49,384,30],[355,50,384,31,"concat"],[355,56,384,37],[355,57,384,38],[355,58,384,39,"Buffer"],[355,64,384,45],[355,65,384,46,"from"],[355,69,384,50],[355,70,384,51],[355,80,384,61],[355,82,384,63],[355,87,384,68],[355,88,384,69],[355,90,384,71,"data"],[355,94,384,75],[355,95,384,76],[355,96,384,77],[355,97,384,78],[356,8,385,4],[357,8,387,4],[357,15,387,11,"xpub"],[357,19,387,15],[358,6,388,2],[359,4,388,3],[360,6,388,3,"key"],[360,9,388,3],[361,6,388,3,"value"],[361,11,388,3],[361,13,390,2],[361,22,390,2,"convertXprvToMultisignatureXprv"],[361,53,390,33,"convertXprvToMultisignatureXprv"],[361,54,390,34,"xpub"],[361,58,390,46],[361,60,390,56],[362,8,391,4],[362,12,391,8,"data"],[362,16,391,12],[362,19,391,15,"b58"],[362,37,391,18],[362,38,391,19,"decode"],[362,44,391,25],[362,45,391,26,"xpub"],[362,49,391,30],[362,50,391,31],[363,8,392,4,"data"],[363,12,392,8],[363,15,392,11,"data"],[363,19,392,15],[363,20,392,16,"slice"],[363,25,392,21],[363,26,392,22],[363,27,392,23],[363,28,392,24],[364,8,393,4],[364,12,393,8],[364,16,393,12],[364,17,393,13,"isNativeSegwit"],[364,31,393,27],[364,32,393,28],[364,33,393,29],[364,35,393,31],[365,10,394,6],[365,17,394,13,"b58"],[365,35,394,16],[365,36,394,17,"encode"],[365,42,394,23],[365,43,394,24,"Buffer"],[365,49,394,30],[365,50,394,31,"concat"],[365,56,394,37],[365,57,394,38],[365,58,394,39,"Buffer"],[365,64,394,45],[365,65,394,46,"from"],[365,69,394,50],[365,70,394,51],[365,80,394,61],[365,82,394,63],[365,87,394,68],[365,88,394,69],[365,90,394,71,"data"],[365,94,394,75],[365,95,394,76],[365,96,394,77],[365,97,394,78],[366,8,395,4],[366,9,395,5],[366,15,395,11],[366,19,395,15],[366,23,395,19],[366,24,395,20,"isWrappedSegwit"],[366,39,395,35],[366,40,395,36],[366,41,395,37],[366,43,395,39],[367,10,396,6],[367,17,396,13,"b58"],[367,35,396,16],[367,36,396,17,"encode"],[367,42,396,23],[367,43,396,24,"Buffer"],[367,49,396,30],[367,50,396,31,"concat"],[367,56,396,37],[367,57,396,38],[367,58,396,39,"Buffer"],[367,64,396,45],[367,65,396,46,"from"],[367,69,396,50],[367,70,396,51],[367,80,396,61],[367,82,396,63],[367,87,396,68],[367,88,396,69],[367,90,396,71,"data"],[367,94,396,75],[367,95,396,76],[367,96,396,77],[367,97,396,78],[368,8,397,4],[369,8,399,4],[369,15,399,11,"xpub"],[369,19,399,15],[370,6,400,2],[371,4,400,3],[372,6,400,3,"key"],[372,9,400,3],[373,6,400,3,"value"],[373,11,400,3],[373,13,434,2],[373,22,434,2,"getXpub"],[373,29,434,9,"getXpub"],[373,30,434,9],[373,32,434,12],[374,8,435,4],[374,15,435,11],[374,19,435,15],[374,20,435,16,"getSecret"],[374,29,435,25],[374,30,435,26],[374,34,435,30],[374,35,435,31],[375,6,436,2],[376,4,436,3],[377,6,436,3,"key"],[377,9,436,3],[378,6,436,3,"value"],[378,11,436,3],[378,13,438,2],[378,22,438,2,"getSecret"],[378,31,438,11,"getSecret"],[378,32,438,11],[378,34,438,39],[379,8,438,39],[379,12,438,12,"coordinationSetup"],[379,29,438,29],[379,32,438,29,"arguments"],[379,41,438,29],[379,42,438,29,"length"],[379,48,438,29],[379,56,438,29,"arguments"],[379,65,438,29],[379,73,438,29,"undefined"],[379,82,438,29],[379,85,438,29,"arguments"],[379,94,438,29],[379,100,438,32],[379,105,438,37],[380,8,439,4],[380,12,439,8,"ret"],[380,15,439,11],[380,18,439,14],[380,54,439,50],[381,8,440,4],[381,12,440,8,"coordinationSetup"],[381,29,440,25],[381,31,440,27,"ret"],[381,34,440,30],[381,38,440,34],[381,124,440,120],[382,8,441,4],[382,12,441,8],[382,13,441,9,"coordinationSetup"],[382,30,441,26],[382,32,441,28,"ret"],[382,35,441,31],[382,39,441,35],[382,86,441,82],[383,8,442,4,"ret"],[383,11,442,7],[383,15,442,11],[383,20,442,16],[384,8,443,4,"ret"],[384,11,443,7],[384,15,443,11],[384,23,443,19],[384,26,443,22],[384,30,443,26],[384,31,443,27,"getLabel"],[384,39,443,35],[384,40,443,36],[384,41,443,37],[384,44,443,40],[384,48,443,44],[385,8,444,4,"ret"],[385,11,444,7],[385,15,444,11],[385,25,444,21],[385,28,444,24],[385,32,444,28],[385,33,444,29,"getM"],[385,37,444,33],[385,38,444,34],[385,39,444,35],[385,42,444,38],[385,48,444,44],[385,51,444,47],[385,55,444,51],[385,56,444,52,"getN"],[385,60,444,56],[385,61,444,57],[385,62,444,58],[385,65,444,61],[385,69,444,65],[386,8,446,4],[386,12,446,8,"hasCustomPaths"],[386,26,446,22],[386,29,446,25],[386,30,446,26],[387,8,447,4],[387,12,447,10,"customPaths"],[387,23,447,45],[387,26,447,48],[387,27,447,49],[387,28,447,50],[388,8,448,4],[388,13,448,9],[388,17,448,13,"index"],[388,22,448,18],[388,25,448,21],[388,26,448,22],[388,28,448,24,"index"],[388,33,448,29],[388,36,448,32],[388,40,448,36],[388,41,448,37,"getN"],[388,45,448,41],[388,46,448,42],[388,47,448,43],[388,49,448,45,"index"],[388,54,448,50],[388,56,448,52],[388,58,448,54],[389,10,449,6],[389,14,449,10],[389,18,449,14],[389,19,449,15,"_cosignersCustomPaths"],[389,40,449,36],[389,41,449,37,"index"],[389,46,449,42],[389,47,449,43],[389,49,449,45,"hasCustomPaths"],[389,63,449,59],[389,65,449,61],[390,10,450,6],[390,14,450,10],[390,18,450,14],[390,19,450,15,"_cosignersCustomPaths"],[390,40,450,36],[390,41,450,37,"index"],[390,46,450,42],[390,47,450,43],[390,49,450,45,"customPaths"],[390,60,450,56],[390,61,450,57],[390,65,450,61],[390,66,450,62,"_cosignersCustomPaths"],[390,87,450,83],[390,88,450,84,"index"],[390,93,450,89],[390,94,450,90],[390,95,450,91],[390,98,450,94],[390,99,450,95],[391,8,451,4],[392,8,453,4],[392,12,453,8,"printedGlobalDerivation"],[392,35,453,31],[392,38,453,34],[392,43,453,39],[393,8,454,4],[393,12,454,10,"derivationPath"],[393,26,454,24],[393,29,454,27],[393,33,454,31],[393,34,454,32,"getDerivationPath"],[393,51,454,49],[393,52,454,50],[393,53,454,51],[394,8,455,4],[394,12,455,8,"derivationPath"],[394,26,455,22],[394,28,455,24,"customPaths"],[394,39,455,35],[394,40,455,36,"derivationPath"],[394,54,455,50],[394,55,455,51],[394,58,455,54],[394,59,455,55],[395,8,456,4],[395,12,456,8,"Object"],[395,18,456,14],[395,19,456,15,"keys"],[395,23,456,19],[395,24,456,20,"customPaths"],[395,35,456,31],[395,36,456,32],[395,37,456,33,"length"],[395,43,456,39],[395,48,456,44],[395,49,456,45],[395,51,456,47],[396,10,457,6],[397,10,458,6],[397,15,458,11],[397,19,458,17,"path"],[397,23,458,21],[397,27,458,25,"Object"],[397,33,458,31],[397,34,458,32,"keys"],[397,38,458,36],[397,39,458,37,"customPaths"],[397,50,458,48],[397,51,458,49],[397,53,458,51],[398,12,459,8,"ret"],[398,15,459,11],[398,19,459,15],[398,33,459,29],[398,36,459,32,"path"],[398,40,459,36],[398,43,459,39],[398,47,459,43],[399,12,460,8,"printedGlobalDerivation"],[399,35,460,31],[399,38,460,34],[399,42,460,38],[400,10,461,6],[401,8,462,4],[402,8,464,4],[402,12,464,8,"hasCustomPaths"],[402,26,464,22],[402,31,464,27],[402,35,464,31],[402,36,464,32,"getN"],[402,40,464,36],[402,41,464,37],[402,42,464,38],[402,46,464,42],[402,47,464,43,"printedGlobalDerivation"],[402,70,464,66],[402,72,464,68],[403,10,465,6,"printedGlobalDerivation"],[403,33,465,29],[403,36,465,32],[403,40,465,36],[404,10,466,6,"ret"],[404,13,466,9],[404,17,466,13],[404,31,466,27],[404,34,466,30],[404,38,466,34],[404,39,466,35,"getDerivationPath"],[404,56,466,52],[404,57,466,53],[404,58,466,54],[404,61,466,57],[404,65,466,61],[405,8,467,4],[406,8,469,4],[406,12,469,8],[406,16,469,12],[406,17,469,13,"isNativeSegwit"],[406,31,469,27],[406,32,469,28],[406,33,469,29],[406,35,469,31],[407,10,470,6,"ret"],[407,13,470,9],[407,17,470,13],[407,34,470,30],[408,8,471,4],[408,9,471,5],[408,15,471,11],[408,19,471,15],[408,23,471,19],[408,24,471,20,"isWrappedSegwit"],[408,39,471,35],[408,40,471,36],[408,41,471,37],[408,43,471,39],[409,10,472,6,"ret"],[409,13,472,9],[409,17,472,13],[409,39,472,35],[410,8,473,4],[410,9,473,5],[410,15,473,11],[410,19,473,15],[410,23,473,19],[410,24,473,20,"isLegacy"],[410,32,473,28],[410,33,473,29],[410,34,473,30],[410,36,473,32],[411,10,474,6,"ret"],[411,13,474,9],[411,17,474,13],[411,33,474,29],[412,8,475,4],[412,9,475,5],[412,15,475,11],[413,10,476,6,"ret"],[413,13,476,9],[413,17,476,13],[413,36,476,32],[414,8,477,4],[415,8,478,4,"ret"],[415,11,478,7],[415,15,478,11],[415,19,478,15],[416,8,480,4],[416,13,480,9],[416,17,480,13,"index"],[416,23,480,18],[416,26,480,21],[416,27,480,22],[416,29,480,24,"index"],[416,35,480,29],[416,38,480,32],[416,42,480,36],[416,43,480,37,"getN"],[416,47,480,41],[416,48,480,42],[416,49,480,43],[416,51,480,45,"index"],[416,57,480,50],[416,59,480,52],[416,61,480,54],[417,10,481,6],[417,14,482,8],[417,18,482,12],[417,19,482,13,"_cosignersCustomPaths"],[417,40,482,34],[417,41,482,35,"index"],[417,47,482,40],[417,48,482,41],[417,53,483,10,"printedGlobalDerivation"],[417,76,483,33],[417,80,483,37],[417,84,483,41],[417,85,483,42,"_cosignersCustomPaths"],[417,106,483,63],[417,107,483,64,"index"],[417,113,483,69],[417,114,483,70],[417,119,483,75],[417,123,483,79],[417,124,483,80,"getDerivationPath"],[417,141,483,97],[417,142,483,98],[417,143,483,99],[417,147,483,104],[417,148,483,105,"printedGlobalDerivation"],[417,171,483,128],[417,172,483,129],[417,174,484,8],[418,12,485,8,"ret"],[418,15,485,11],[418,19,485,15],[418,35,485,31],[418,38,485,34],[418,42,485,38],[418,43,485,39,"_cosignersCustomPaths"],[418,64,485,60],[418,65,485,61,"index"],[418,71,485,66],[418,72,485,67],[418,75,485,70],[418,79,485,74],[419,12,486,8],[420,12,487,8],[421,10,488,6],[422,10,489,6],[422,14,489,10,"MultisigHDWallet"],[422,30,489,26],[422,31,489,27,"isXpubString"],[422,43,489,39],[422,44,489,40],[422,48,489,44],[422,49,489,45,"_cosigners"],[422,59,489,55],[422,60,489,56,"index"],[422,66,489,61],[422,67,489,62],[422,68,489,63],[422,70,489,65],[423,12,490,8,"ret"],[423,15,490,11],[423,19,490,15],[423,23,490,19],[423,24,490,20,"_cosignersFingerprints"],[423,46,490,42],[423,47,490,43,"index"],[423,53,490,48],[423,54,490,49],[423,57,490,52],[423,61,490,56],[423,64,490,59],[423,68,490,63],[423,69,490,64,"_cosigners"],[423,79,490,74],[423,80,490,75,"index"],[423,86,490,80],[423,87,490,81],[423,90,490,84],[423,94,490,88],[424,10,491,6],[424,11,491,7],[424,17,491,13],[425,12,492,8],[425,16,492,12,"coordinationSetup"],[425,33,492,29],[425,35,492,31],[426,14,493,10],[426,18,493,16,"xpub"],[426,22,493,20],[426,25,493,23],[426,29,493,27],[426,30,493,28,"convertXpubToMultisignatureXpub"],[426,61,493,59],[426,62,494,12,"MultisigHDWallet"],[426,78,494,28],[426,79,494,29,"seedToXpub"],[426,89,494,39],[426,90,495,14],[426,94,495,18],[426,95,495,19,"_cosigners"],[426,105,495,29],[426,106,495,30,"index"],[426,112,495,35],[426,113,495,36],[426,115,496,14],[426,119,496,18],[426,120,496,19,"_cosignersCustomPaths"],[426,141,496,40],[426,142,496,41,"index"],[426,148,496,46],[426,149,496,47],[426,153,496,51],[426,157,496,55],[426,158,496,56,"_derivationPath"],[426,173,496,71],[426,175,497,14],[426,179,497,18],[426,180,497,19,"_cosignersPassphrases"],[426,201,497,40],[426,202,497,41,"index"],[426,208,497,46],[426,209,498,12],[426,210,499,10],[426,211,499,11],[427,14,500,10],[427,18,500,16,"fingerprint"],[427,29,500,27],[427,32,500,30,"MultisigHDWallet"],[427,48,500,46],[427,49,500,47,"mnemonicToFingerprint"],[427,70,500,68],[427,71,500,69],[427,75,500,73],[427,76,500,74,"_cosigners"],[427,86,500,84],[427,87,500,85,"index"],[427,93,500,90],[427,94,500,91],[427,96,500,93],[427,100,500,97],[427,101,500,98,"_cosignersPassphrases"],[427,122,500,119],[427,123,500,120,"index"],[427,129,500,125],[427,130,500,126],[427,131,500,127],[428,14,501,10,"ret"],[428,17,501,13],[428,21,501,17,"fingerprint"],[428,32,501,28],[428,35,501,31],[428,39,501,35],[428,42,501,38,"xpub"],[428,46,501,42],[428,49,501,45],[428,53,501,49],[429,12,502,8],[429,13,502,9],[429,19,502,15],[430,14,503,10,"ret"],[430,17,503,13],[430,21,503,17],[430,29,503,25],[430,32,503,28],[430,36,503,32],[430,37,503,33,"_cosigners"],[430,47,503,43],[430,48,503,44,"index"],[430,54,503,49],[430,55,503,50],[431,14,504,10],[431,18,504,14],[431,22,504,18],[431,23,504,19,"_cosignersPassphrases"],[431,44,504,40],[431,45,504,41,"index"],[431,51,504,46],[431,52,504,47],[431,54,504,49,"ret"],[431,57,504,52],[431,61,504,56],[431,66,504,61],[431,69,504,64],[431,73,504,68],[431,74,504,69,"_cosignersPassphrases"],[431,95,504,90],[431,96,504,91,"index"],[431,102,504,96],[431,103,504,97],[432,14,505,10,"ret"],[432,17,505,13],[432,21,505,17],[432,81,505,77],[433,12,506,8],[434,10,507,6],[435,10,509,6,"ret"],[435,13,509,9],[435,17,509,13],[435,21,509,17],[436,8,510,4],[437,8,512,4],[437,15,512,11,"ret"],[437,18,512,14],[438,6,513,2],[439,4,513,3],[440,6,513,3,"key"],[440,9,513,3],[441,6,513,3,"value"],[441,11,513,3],[441,13,515,2],[441,22,515,2,"setSecret"],[441,31,515,11,"setSecret"],[441,32,515,12,"secret"],[441,38,515,26],[441,40,515,28],[442,8,516,4],[442,12,516,8,"secret"],[442,18,516,14],[442,19,516,15,"toUpperCase"],[442,30,516,26],[442,31,516,27],[442,32,516,28],[442,33,516,29,"startsWith"],[442,43,516,39],[442,44,516,40],[442,54,516,50],[442,55,516,51],[442,57,516,53],[443,10,517,6],[443,14,517,12,"decoded"],[443,21,517,19],[443,24,517,22],[443,28,517,22,"decodeUR"],[443,59,517,22],[443,60,517,22,"decodeUR"],[443,93,517,30],[443,95,517,31],[443,96,517,32,"secret"],[443,102,517,38],[443,103,517,39],[443,104,517,50],[444,10,518,6],[444,14,518,12,"b"],[444,15,518,13],[444,18,518,16,"Buffer"],[444,24,518,22],[444,25,518,23,"from"],[444,29,518,27],[444,30,518,28,"decoded"],[444,37,518,35],[444,39,518,37],[444,44,518,42],[444,45,518,43],[445,10,519,6,"secret"],[445,16,519,12],[445,19,519,15,"b"],[445,20,519,16],[445,21,519,17,"toString"],[445,29,519,25],[445,30,519,26],[445,31,519,27],[446,8,520,4],[448,8,522,4],[449,8,523,4],[449,12,523,8,"json"],[449,16,523,12],[450,8,524,4],[450,12,524,8],[451,10,525,6,"json"],[451,14,525,10],[451,17,525,13,"JSON"],[451,21,525,17],[451,22,525,18,"parse"],[451,27,525,23],[451,28,525,24,"secret"],[451,34,525,30],[451,35,525,31],[452,8,526,4],[452,9,526,5],[452,10,526,6],[452,17,526,13,"_"],[452,18,526,14],[452,20,526,16],[452,21,526,17],[453,8,527,4],[453,12,527,8,"json"],[453,16,527,12],[453,20,527,16,"json"],[453,24,527,20],[453,25,527,21,"xfp"],[453,28,527,24],[453,32,527,28,"json"],[453,36,527,32],[453,37,527,33,"p2wsh_deriv"],[453,48,527,44],[453,52,527,48,"json"],[453,56,527,52],[453,57,527,53,"p2wsh"],[453,62,527,58],[453,64,527,60],[454,10,528,6],[454,14,528,10],[454,15,528,11,"addCosigner"],[454,26,528,22],[454,27,528,23,"json"],[454,31,528,27],[454,32,528,28,"p2wsh"],[454,37,528,33],[454,39,528,35,"json"],[454,43,528,39],[454,44,528,40,"xfp"],[454,47,528,43],[454,48,528,44],[454,49,528,45],[454,50,528,46],[455,10,529,6],[455,17,529,13],[455,21,529,17],[456,8,530,4],[458,8,532,4],[459,8,533,4],[459,12,533,8,"json"],[459,16,533,12],[459,20,533,16,"json"],[459,24,533,20],[459,25,533,21,"wallet_type"],[459,36,533,32],[459,40,533,36,"json"],[459,44,533,40],[459,45,533,41,"wallet_type"],[459,56,533,52],[459,61,533,57],[459,71,533,67],[459,73,533,69],[460,10,534,6],[460,14,534,12,"mofn"],[460,18,534,16],[460,21,534,19,"json"],[460,25,534,23],[460,26,534,24,"wallet_type"],[460,37,534,35],[460,38,534,36,"split"],[460,43,534,41],[460,44,534,42],[460,48,534,46],[460,49,534,47],[461,10,535,6],[461,14,535,10],[461,15,535,11,"setM"],[461,19,535,15],[461,20,535,16,"parseInt"],[461,28,535,24],[461,29,535,25,"mofn"],[461,33,535,29],[461,34,535,30],[461,35,535,31],[461,36,535,32],[461,37,535,33,"trim"],[461,41,535,37],[461,42,535,38],[461,43,535,39],[461,45,535,41],[461,47,535,43],[461,48,535,44],[461,49,535,45],[462,10,536,6],[462,14,536,12,"n"],[462,15,536,13],[462,18,536,16,"parseInt"],[462,26,536,24],[462,27,536,25,"mofn"],[462,31,536,29],[462,32,536,30],[462,33,536,31],[462,34,536,32],[462,35,536,33,"trim"],[462,39,536,37],[462,40,536,38],[462,41,536,39],[462,43,536,41],[462,45,536,43],[462,46,536,44],[463,10,537,6],[463,15,537,11],[463,19,537,15,"c"],[463,20,537,16],[463,23,537,19],[463,24,537,20],[463,26,537,22,"c"],[463,27,537,23],[463,31,537,27,"n"],[463,32,537,28],[463,34,537,30,"c"],[463,35,537,31],[463,37,537,33],[463,39,537,35],[464,12,537,35],[464,16,537,35,"_cosignerData$xpub"],[464,34,537,35],[464,36,537,35,"_cosignerData$xpub2"],[464,55,537,35],[464,57,537,35,"_cosignerData$xpub3"],[464,76,537,35],[465,12,538,8],[465,16,538,14,"cosignerData"],[465,28,538,26],[465,31,538,29,"json"],[465,35,538,33],[465,36,538,34],[465,39,538,37],[465,42,538,40,"c"],[465,43,538,41],[465,46,538,44],[465,49,538,47],[465,50,538,48],[466,12,539,8],[466,16,539,12,"cosignerData"],[466,28,539,24],[466,30,539,26],[467,14,539,26],[467,18,539,26,"_cosignerData$root_fi"],[467,39,539,26],[468,14,540,10],[468,18,540,16,"fingerprint"],[468,29,540,27],[468,32,541,12],[468,33,541,13,"cosignerData"],[468,45,541,25],[468,46,541,26,"ckcc_xfp"],[468,54,541,34],[468,57,542,16,"MultisigHDWallet"],[468,73,542,32],[468,74,542,33,"ckccXfp2fingerprint"],[468,93,542,52],[468,94,542,53,"cosignerData"],[468,106,542,65],[468,107,542,66,"ckcc_xfp"],[468,115,542,74],[468,116,542,75],[468,120,542,75,"_cosignerData$root_fi"],[468,141,542,75],[468,144,543,16,"cosignerData"],[468,156,543,28],[468,157,543,29,"root_fingerprint"],[468,173,543,45],[468,194,543,16,"_cosignerData$root_fi"],[468,215,543,16],[468,216,543,47,"toUpperCase"],[468,227,543,58],[468,228,543,59],[468,229,543,60],[468,234,543,65],[468,244,543,75],[469,14,544,10],[469,18,544,14,"cosignerData"],[469,30,544,26],[469,31,544,27,"seed"],[469,35,544,31],[469,37,544,33],[470,16,545,12],[470,20,545,16],[470,21,545,17,"addCosigner"],[470,32,545,28],[470,33,545,29,"ELECTRUM_SEED_PREFIX"],[470,53,545,49],[470,56,545,52,"cosignerData"],[470,68,545,64],[470,69,545,65,"seed"],[470,73,545,69],[470,75,545,71,"fingerprint"],[470,86,545,82],[470,88,545,84,"cosignerData"],[470,100,545,96],[470,101,545,97,"derivation"],[470,111,545,107],[470,113,545,109,"cosignerData"],[470,125,545,121],[470,126,545,122,"passphrase"],[470,136,545,132],[470,137,545,133],[471,14,546,10],[471,15,546,11],[471,21,546,17],[471,25,546,21,"cosignerData"],[471,37,546,33],[471,38,546,34,"xprv"],[471,42,546,38],[471,46,546,42,"MultisigHDWallet"],[471,62,546,58],[471,63,546,59,"isXprvValid"],[471,74,546,70],[471,75,546,71,"cosignerData"],[471,87,546,83],[471,88,546,84,"xprv"],[471,92,546,88],[471,93,546,89],[471,95,546,91],[472,16,547,12],[472,20,547,16],[472,21,547,17,"addCosigner"],[472,32,547,28],[472,33,547,29,"cosignerData"],[472,45,547,41],[472,46,547,42,"xprv"],[472,50,547,46],[472,52,547,48,"fingerprint"],[472,63,547,59],[472,65,547,61,"cosignerData"],[472,77,547,73],[472,78,547,74,"derivation"],[472,88,547,84],[472,89,547,85],[473,14,548,10],[473,15,548,11],[473,21,548,17],[474,16,549,12],[474,20,549,16],[474,21,549,17,"addCosigner"],[474,32,549,28],[474,33,549,29,"cosignerData"],[474,45,549,41],[474,46,549,42,"xpub"],[474,50,549,46],[474,52,549,48,"fingerprint"],[474,63,549,59],[474,65,549,61,"cosignerData"],[474,77,549,73],[474,78,549,74,"derivation"],[474,88,549,84],[474,89,549,85],[475,14,550,10],[476,12,551,8],[477,12,553,8],[477,16,553,12,"cosignerData"],[477,28,553,24],[477,41,553,24,"_cosignerData$xpub"],[477,59,553,24],[477,62,553,12,"cosignerData"],[477,74,553,24],[477,75,553,26,"xpub"],[477,79,553,30],[477,92,553,12,"_cosignerData$xpub"],[477,110,553,12],[477,111,553,32,"startsWith"],[477,121,553,42],[477,122,553,43],[477,128,553,49],[477,129,553,50],[477,131,553,52],[477,135,553,56],[477,136,553,57,"setNativeSegwit"],[477,151,553,72],[477,152,553,73],[477,153,553,74],[478,12,554,8],[478,16,554,12,"cosignerData"],[478,28,554,24],[478,41,554,24,"_cosignerData$xpub2"],[478,60,554,24],[478,63,554,12,"cosignerData"],[478,75,554,24],[478,76,554,26,"xpub"],[478,80,554,30],[478,93,554,12,"_cosignerData$xpub2"],[478,112,554,12],[478,113,554,32,"startsWith"],[478,123,554,42],[478,124,554,43],[478,130,554,49],[478,131,554,50],[478,133,554,52],[478,137,554,56],[478,138,554,57,"setWrappedSegwit"],[478,154,554,73],[478,155,554,74],[478,156,554,75],[479,12,555,8],[479,16,555,12,"cosignerData"],[479,28,555,24],[479,41,555,24,"_cosignerData$xpub3"],[479,60,555,24],[479,63,555,12,"cosignerData"],[479,75,555,24],[479,76,555,26,"xpub"],[479,80,555,30],[479,93,555,12,"_cosignerData$xpub3"],[479,112,555,12],[479,113,555,32,"startsWith"],[479,123,555,42],[479,124,555,43],[479,130,555,49],[479,131,555,50],[479,133,555,52],[479,137,555,56],[479,138,555,57,"setLegacy"],[479,147,555,66],[479,148,555,67],[479,149,555,68],[480,10,556,6],[481,8,557,4],[483,8,559,4],[484,8,560,4],[484,12,560,8,"customPathForCurrentCosigner"],[484,40,560,56],[485,8,561,4],[485,13,561,9],[485,17,561,15,"line"],[485,21,561,19],[485,25,561,23,"secret"],[485,31,561,29],[485,32,561,30,"split"],[485,37,561,35],[485,38,561,36],[485,42,561,40],[485,43,561,41],[485,45,561,43],[486,10,562,6],[486,14,562,6,"_line$split"],[486,25,562,6],[486,28,562,27,"line"],[486,32,562,31],[486,33,562,32,"split"],[486,38,562,37],[486,39,562,38],[486,42,562,41],[486,43,562,42],[487,12,562,42,"_line$split2"],[487,24,562,42],[487,31,562,42,"_slicedToArray2"],[487,46,562,42],[487,47,562,42,"default"],[487,54,562,42],[487,56,562,42,"_line$split"],[487,67,562,42],[488,12,562,13,"key"],[488,15,562,16],[488,18,562,16,"_line$split2"],[488,30,562,16],[489,12,562,18,"value"],[489,17,562,23],[489,20,562,23,"_line$split2"],[489,32,562,23],[490,10,564,6],[490,18,564,14,"key"],[490,21,564,17],[491,12,565,8],[491,17,565,13],[491,23,565,19],[492,14,566,10],[492,18,566,14],[492,19,566,15,"setLabel"],[492,27,566,23],[492,28,566,24,"value"],[492,33,566,29],[492,34,566,30,"trim"],[492,38,566,34],[492,39,566,35],[492,40,566,36],[492,41,566,37],[493,14,567,10],[494,12,569,8],[494,17,569,13],[494,25,569,21],[495,14,570,10],[495,18,570,14],[495,19,570,15,"setM"],[495,23,570,19],[495,24,570,20,"parseInt"],[495,32,570,28],[495,33,570,29,"value"],[495,38,570,34],[495,39,570,35,"trim"],[495,43,570,39],[495,44,570,40],[495,45,570,41],[495,46,570,42,"split"],[495,51,570,47],[495,52,570,48],[495,56,570,52],[495,57,570,53],[495,58,570,54],[495,59,570,55],[495,60,570,56],[495,61,570,57,"trim"],[495,65,570,61],[495,66,570,62],[495,67,570,63],[495,69,570,65],[495,71,570,67],[495,72,570,68],[495,73,570,69],[496,14,571,10],[497,12,573,8],[497,17,573,13],[497,29,573,25],[498,14,574,10],[498,18,574,14],[498,19,574,15,"setDerivationPath"],[498,36,574,32],[498,37,574,33,"value"],[498,42,574,38],[498,43,574,39,"trim"],[498,47,574,43],[498,48,574,44],[498,49,574,45],[498,50,574,46],[499,14,575,10],[500,12,577,8],[500,17,577,13],[500,25,577,21],[501,14,578,10],[501,22,578,18,"value"],[501,27,578,23],[501,28,578,24,"trim"],[501,32,578,28],[501,33,578,29],[501,34,578,30],[502,16,579,12],[502,21,579,17,"MultisigHDWallet"],[502,37,579,33],[502,38,579,34,"FORMAT_P2WSH"],[502,50,579,46],[502,51,579,47,"toUpperCase"],[502,62,579,58],[502,63,579,59],[502,64,579,60],[503,18,580,14],[503,22,580,18],[503,23,580,19,"setNativeSegwit"],[503,38,580,34],[503,39,580,35],[503,40,580,36],[504,18,581,14],[505,16,582,12],[505,21,582,17,"MultisigHDWallet"],[505,37,582,33],[505,38,582,34,"FORMAT_P2SH_P2WSH"],[505,55,582,51],[505,56,582,52,"toUpperCase"],[505,67,582,63],[505,68,582,64],[505,69,582,65],[506,16,583,12],[506,21,583,17,"MultisigHDWallet"],[506,37,583,33],[506,38,583,34,"FORMAT_P2SH_P2WSH_ALT"],[506,59,583,55],[506,60,583,56,"toUpperCase"],[506,71,583,67],[506,72,583,68],[506,73,583,69],[507,18,584,14],[507,22,584,18],[507,23,584,19,"setWrappedSegwit"],[507,39,584,35],[507,40,584,36],[507,41,584,37],[508,18,585,14],[509,16,586,12],[509,21,586,17,"MultisigHDWallet"],[509,37,586,33],[509,38,586,34,"FORMAT_P2SH"],[509,49,586,45],[509,50,586,46,"toUpperCase"],[509,61,586,57],[509,62,586,58],[509,63,586,59],[510,18,587,14],[510,22,587,18],[510,23,587,19,"setLegacy"],[510,32,587,28],[510,33,587,29],[510,34,587,30],[511,18,588,14],[512,14,589,10],[513,14,590,10],[514,12,592,8],[515,14,593,10],[515,18,593,14,"key"],[515,21,593,17],[515,25,593,21,"value"],[515,30,593,26],[515,34,593,30,"MultisigHDWallet"],[515,50,593,46],[515,51,593,47,"isXpubString"],[515,63,593,59],[515,64,593,60,"value"],[515,69,593,65],[515,70,593,66,"trim"],[515,74,593,70],[515,75,593,71],[515,76,593,72],[515,77,593,73],[515,79,593,75],[516,16,594,12],[516,20,594,16],[516,21,594,17,"addCosigner"],[516,32,594,28],[516,33,594,29,"value"],[516,38,594,34],[516,39,594,35,"trim"],[516,43,594,39],[516,44,594,40],[516,45,594,41],[516,47,594,43,"key"],[516,50,594,46],[516,52,594,48,"customPathForCurrentCosigner"],[516,80,594,76],[516,81,594,77],[517,14,595,10],[517,15,595,11],[517,21,595,17],[517,25,595,21,"key"],[517,28,595,24],[517,29,595,25,"replace"],[517,36,595,32],[517,37,595,33],[517,40,595,36],[517,42,595,38],[517,44,595,40],[517,45,595,41],[517,46,595,42,"trim"],[517,50,595,46],[517,51,595,47],[517,52,595,48],[517,57,595,53],[517,69,595,65],[517,71,595,67],[518,16,596,12,"customPathForCurrentCosigner"],[518,44,596,40],[518,47,596,43,"value"],[518,52,596,48],[518,53,596,49,"trim"],[518,57,596,53],[518,58,596,54],[518,59,596,55],[519,14,597,10],[519,15,597,11],[519,21,597,17],[519,25,597,21,"key"],[519,28,597,24],[519,33,597,29],[519,39,597,35],[519,41,597,37],[520,16,598,12],[520,20,598,12,"_value$split"],[520,32,598,12],[520,35,598,39,"value"],[520,40,598,44],[520,41,598,45,"split"],[520,46,598,50],[520,47,598,51],[520,52,598,56],[520,53,598,57],[521,18,598,57,"_value$split2"],[521,31,598,57],[521,38,598,57,"_slicedToArray2"],[521,53,598,57],[521,54,598,57,"default"],[521,61,598,57],[521,63,598,57,"_value$split"],[521,75,598,57],[522,18,598,19,"seed"],[522,22,598,23],[522,25,598,23,"_value$split2"],[522,38,598,23],[523,18,598,25,"passphrase"],[523,28,598,35],[523,31,598,35,"_value$split2"],[523,44,598,35],[524,16,599,12],[524,20,599,16],[524,21,599,17,"addCosigner"],[524,32,599,28],[524,33,599,29,"seed"],[524,37,599,33],[524,38,599,34,"trim"],[524,42,599,38],[524,43,599,39],[524,44,599,40],[524,46,599,42,"undefined"],[524,55,599,51],[524,57,599,53,"customPathForCurrentCosigner"],[524,85,599,81],[524,87,599,83,"passphrase"],[524,97,599,93],[524,98,599,94],[525,14,600,10],[526,14,601,10],[527,10,602,6],[528,8,603,4],[530,8,605,4],[531,8,606,4],[532,8,607,4],[533,8,608,4],[533,12,608,8],[533,13,608,9,"json"],[533,17,608,13],[533,21,608,17,"secret"],[533,27,608,23],[533,28,608,24,"indexOf"],[533,35,608,31],[533,36,608,32],[533,50,608,46],[533,51,608,47],[533,53,608,49],[534,10,609,6],[535,10,610,6,"json"],[535,14,610,10],[535,17,610,13],[536,12,610,15,"descriptor"],[536,22,610,25],[536,24,610,27,"secret"],[536,30,610,33],[537,12,610,35,"label"],[537,17,610,40],[537,19,610,42],[538,10,610,59],[538,11,610,60],[539,8,611,4],[540,8,612,4],[540,12,612,8,"secret"],[540,18,612,14],[540,19,612,15,"indexOf"],[540,26,612,22],[540,27,612,23],[540,41,612,37],[540,42,612,38],[540,47,612,43],[540,48,612,44],[540,49,612,45],[540,53,612,49,"json"],[540,57,612,53],[540,58,612,54,"descriptor"],[540,68,612,64],[540,70,612,66],[541,10,613,6],[541,14,613,10,"json"],[541,18,613,14],[541,19,613,15,"label"],[541,24,613,20],[541,26,613,22],[541,30,613,26],[541,31,613,27,"setLabel"],[541,39,613,35],[541,40,613,36,"json"],[541,44,613,40],[541,45,613,41,"label"],[541,50,613,46],[541,51,613,47],[542,10,614,6],[542,14,614,10,"json"],[542,18,614,14],[542,19,614,15,"descriptor"],[542,29,614,25],[542,30,614,26,"includes"],[542,38,614,34],[542,39,614,35],[542,48,614,44],[542,49,614,45],[542,51,614,47],[543,12,615,8],[543,16,615,12],[543,17,615,13,"setWrappedSegwit"],[543,33,615,29],[543,34,615,30],[543,35,615,31],[544,10,616,6],[544,11,616,7],[544,17,616,13],[544,21,616,17,"json"],[544,25,616,21],[544,26,616,22,"descriptor"],[544,36,616,32],[544,37,616,33,"includes"],[544,45,616,41],[544,46,616,42],[544,52,616,48],[544,53,616,49],[544,55,616,51],[545,12,617,8],[545,16,617,12],[545,17,617,13,"setNativeSegwit"],[545,32,617,28],[545,33,617,29],[545,34,617,30],[546,10,618,6],[546,11,618,7],[546,17,618,13],[546,21,618,17,"json"],[546,25,618,21],[546,26,618,22,"descriptor"],[546,36,618,32],[546,37,618,33,"includes"],[546,45,618,41],[546,46,618,42],[546,51,618,47],[546,52,618,48],[546,54,618,50],[547,12,619,8],[547,16,619,12],[547,17,619,13,"setLegacy"],[547,26,619,22],[547,27,619,23],[547,28,619,24],[548,10,620,6],[549,10,622,6],[549,14,622,12,"s2"],[549,16,622,14],[549,19,622,17,"json"],[549,23,622,21],[549,24,622,22,"descriptor"],[549,34,622,32],[549,35,622,33,"substr"],[549,41,622,39],[549,42,622,40,"json"],[549,46,622,44],[549,47,622,45,"descriptor"],[549,57,622,55],[549,58,622,56,"indexOf"],[549,65,622,63],[549,66,622,64],[549,80,622,78],[549,81,622,79],[549,84,622,82],[549,86,622,84],[549,87,622,85],[550,10,623,6],[550,14,623,12,"s3"],[550,16,623,14],[550,19,623,17,"s2"],[550,21,623,19],[550,22,623,20,"split"],[550,27,623,25],[550,28,623,26],[550,31,623,29],[550,32,623,30],[551,10,624,6],[551,14,624,12,"M"],[551,15,624,13],[551,18,624,16,"parseInt"],[551,26,624,24],[551,27,624,25,"s3"],[551,29,624,27],[551,30,624,28],[551,31,624,29],[551,32,624,30],[551,34,624,32],[551,36,624,34],[551,37,624,35],[552,10,625,6],[552,14,625,10,"M"],[552,15,625,11],[552,17,625,13],[552,21,625,17],[552,22,625,18,"setM"],[552,26,625,22],[552,27,625,23,"M"],[552,28,625,24],[552,29,625,25],[553,10,627,6],[553,15,627,11],[553,19,627,15,"c"],[553,21,627,16],[553,24,627,19],[553,25,627,20],[553,27,627,22,"c"],[553,29,627,23],[553,32,627,26,"s3"],[553,34,627,28],[553,35,627,29,"length"],[553,41,627,35],[553,43,627,37,"c"],[553,45,627,38],[553,47,627,40],[553,49,627,42],[554,12,628,8],[554,16,628,14,"re"],[554,18,628,16],[554,21,628,19],[554,39,628,37],[555,12,629,8],[555,16,629,14,"m"],[555,17,629,15],[555,20,629,18,"s3"],[555,22,629,20],[555,23,629,21,"c"],[555,25,629,22],[555,26,629,23],[555,27,629,24,"match"],[555,32,629,29],[555,33,629,30,"re"],[555,35,629,32],[555,36,629,33],[556,12,630,8],[556,16,630,12,"m"],[556,17,630,13],[556,21,630,17,"m"],[556,22,630,18],[556,23,630,19,"length"],[556,29,630,25],[556,34,630,30],[556,35,630,31],[556,37,630,33],[557,14,631,10],[557,18,631,14,"hexFingerprint"],[557,32,631,28],[557,35,631,31,"m"],[557,36,631,32],[557,37,631,33],[557,38,631,34],[557,39,631,35],[557,40,631,36,"split"],[557,45,631,41],[557,46,631,42],[557,49,631,45],[557,50,631,46],[557,51,631,47],[557,52,631,48],[557,53,631,49],[558,14,632,10],[558,18,632,14,"hexFingerprint"],[558,32,632,28],[558,33,632,29,"length"],[558,39,632,35],[558,44,632,40],[558,45,632,41],[558,47,632,43],[559,16,633,12,"hexFingerprint"],[559,30,633,26],[559,33,633,29,"Buffer"],[559,39,633,35],[559,40,633,36,"from"],[559,44,633,40],[559,45,633,41,"hexFingerprint"],[559,59,633,55],[559,61,633,57],[559,66,633,62],[559,67,633,63],[559,68,633,64,"toString"],[559,76,633,72],[559,77,633,73],[559,82,633,78],[559,83,633,79],[560,14,634,10],[561,14,636,10],[561,18,636,14,"path"],[561,22,636,18],[561,25,636,21],[561,29,636,25],[561,32,636,28,"m"],[561,33,636,29],[561,34,636,30],[561,35,636,31],[561,36,636,32],[561,37,636,33,"split"],[561,42,636,38],[561,43,636,39],[561,46,636,42],[561,47,636,43],[561,48,636,44,"slice"],[561,53,636,49],[561,54,636,50],[561,55,636,51],[561,56,636,52],[561,57,636,53,"join"],[561,61,636,57],[561,62,636,58],[561,65,636,61],[561,66,636,62],[561,67,636,63,"replace"],[561,74,636,70],[561,75,636,71],[561,81,636,77],[561,83,636,79],[561,86,636,82],[561,87,636,83],[562,14,637,10],[562,18,637,14,"path"],[562,22,637,18],[562,27,637,23],[562,31,637,27],[562,33,637,29],[563,16,638,12],[564,16,639,12,"path"],[564,20,639,16],[564,23,639,19],[564,28,639,24],[565,14,640,10],[566,14,641,10],[566,18,641,14,"xpub"],[566,22,641,18],[566,25,641,21,"m"],[566,26,641,22],[566,27,641,23],[566,28,641,24],[566,29,641,25],[567,14,642,10],[567,18,642,14,"xpub"],[567,22,642,18],[567,23,642,19,"indexOf"],[567,30,642,26],[567,31,642,27],[567,34,642,30],[567,35,642,31],[567,40,642,36],[567,41,642,37],[567,42,642,38],[567,44,642,40],[568,16,643,12,"xpub"],[568,20,643,16],[568,23,643,19,"xpub"],[568,27,643,23],[568,28,643,24,"substr"],[568,34,643,30],[568,35,643,31],[568,36,643,32],[568,38,643,34,"xpub"],[568,42,643,38],[568,43,643,39,"indexOf"],[568,50,643,46],[568,51,643,47],[568,54,643,50],[568,55,643,51],[568,56,643,52],[569,14,644,10],[570,14,645,10],[570,18,645,14,"xpub"],[570,22,645,18],[570,23,645,19,"indexOf"],[570,30,645,26],[570,31,645,27],[570,34,645,30],[570,35,645,31],[570,40,645,36],[570,41,645,37],[570,42,645,38],[570,44,645,40],[571,16,646,12,"xpub"],[571,20,646,16],[571,23,646,19,"xpub"],[571,27,646,23],[571,28,646,24,"substr"],[571,34,646,30],[571,35,646,31],[571,36,646,32],[571,38,646,34,"xpub"],[571,42,646,38],[571,43,646,39,"indexOf"],[571,50,646,46],[571,51,646,47],[571,54,646,50],[571,55,646,51],[571,56,646,52],[572,14,647,10],[573,14,649,10],[573,18,649,14],[573,19,649,15,"addCosigner"],[573,30,649,26],[573,31,649,27,"xpub"],[573,35,649,31],[573,37,649,33,"hexFingerprint"],[573,51,649,47],[573,52,649,48,"toUpperCase"],[573,63,649,59],[573,64,649,60],[573,65,649,61],[573,67,649,63,"path"],[573,71,649,67],[573,72,649,68],[574,12,650,8],[575,10,651,6],[576,10,653,6],[576,14,653,10],[576,18,653,14],[576,19,653,15,"getN"],[576,23,653,19],[576,24,653,20],[576,25,653,21],[576,30,653,26],[576,31,653,27],[576,33,653,29],[577,12,654,8],[578,12,655,8],[579,12,656,8],[579,17,656,13],[579,21,656,17,"c"],[579,24,656,18],[579,27,656,21],[579,28,656,22],[579,30,656,24,"c"],[579,33,656,25],[579,36,656,28,"s3"],[579,38,656,30],[579,39,656,31,"length"],[579,45,656,37],[579,47,656,39,"c"],[579,50,656,40],[579,52,656,42],[579,54,656,44],[580,14,657,10],[580,18,657,16,"hexFingerprint"],[580,33,657,30],[580,36,657,33,"s3"],[580,38,657,35],[580,39,657,36,"c"],[580,42,657,37],[580,43,657,38],[580,44,657,39,"split"],[580,49,657,44],[580,50,657,45],[580,53,657,48],[580,54,657,49],[580,55,657,50],[580,56,657,51],[580,57,657,52],[581,14,658,10],[581,18,658,14,"indexOfXpub"],[581,29,658,25],[581,32,658,28,"s3"],[581,34,658,30],[581,35,658,31,"c"],[581,38,658,32],[581,39,658,33],[581,40,658,34,"indexOf"],[581,47,658,41],[581,48,658,42],[581,54,658,48],[581,55,658,49],[582,14,659,10],[582,18,659,14,"indexOfXpub"],[582,29,659,25],[582,34,659,30],[582,35,659,31],[582,36,659,32],[582,38,659,34],[583,16,660,12],[584,16,661,12,"indexOfXpub"],[584,27,661,23],[584,30,661,26,"s3"],[584,32,661,28],[584,33,661,29,"c"],[584,36,661,30],[584,37,661,31],[584,38,661,32,"indexOf"],[584,45,661,39],[584,46,661,40],[584,52,661,46],[584,53,661,47],[585,14,662,10],[586,14,663,10],[586,18,663,14,"indexOfXpub"],[586,29,663,25],[586,34,663,30],[586,35,663,31],[586,36,663,32],[586,38,663,34],[587,16,664,12],[588,16,665,12,"indexOfXpub"],[588,27,665,23],[588,30,665,26,"s3"],[588,32,665,28],[588,33,665,29,"c"],[588,36,665,30],[588,37,665,31],[588,38,665,32,"indexOf"],[588,45,665,39],[588,46,665,40],[588,52,665,46],[588,53,665,47],[589,14,666,10],[590,14,667,10],[590,18,667,14,"indexOfXpub"],[590,29,667,25],[590,34,667,30],[590,35,667,31],[590,36,667,32],[590,38,667,34],[591,16,668,12],[591,22,668,18],[591,26,668,22,"Error"],[591,31,668,27],[591,32,668,28],[591,74,668,70],[591,75,668,71],[592,14,669,10],[593,14,671,10],[593,18,671,16,"xpub"],[593,23,671,20],[593,26,671,23,"s3"],[593,28,671,25],[593,29,671,26,"c"],[593,32,671,27],[593,33,671,28],[593,34,671,29,"substring"],[593,43,671,38],[593,44,671,39,"indexOfXpub"],[593,55,671,50],[593,56,671,51],[593,57,671,52,"replaceAll"],[593,67,671,62],[593,68,671,63],[593,71,671,66],[593,73,671,68],[593,75,671,70],[593,76,671,71],[594,14,672,10],[594,18,672,16,"path"],[594,23,672,20],[594,26,672,23],[594,29,672,26],[594,32,672,29,"s3"],[594,34,672,31],[594,35,672,32,"c"],[594,38,672,33],[594,39,672,34],[594,40,672,35,"substring"],[594,49,672,44],[594,50,672,45,"hexFingerprint"],[594,65,672,59],[594,66,672,60,"length"],[594,72,672,66],[594,74,672,68,"indexOfXpub"],[594,85,672,79],[594,86,672,80],[595,14,674,10],[595,18,674,14],[595,19,674,15,"addCosigner"],[595,30,674,26],[595,31,674,27,"xpub"],[595,36,674,31],[595,38,674,33,"hexFingerprint"],[595,53,674,47],[595,54,674,48,"toUpperCase"],[595,65,674,59],[595,66,674,60],[595,67,674,61],[595,69,674,63,"path"],[595,74,674,67],[595,75,674,68],[596,12,675,8],[597,10,676,6],[598,8,677,4],[600,8,679,4],[601,8,680,4],[601,12,680,8,"json"],[601,16,680,12],[601,20,680,16,"json"],[601,24,680,20],[601,25,680,21,"network"],[601,32,680,28],[601,37,680,33],[601,46,680,42],[601,50,680,46,"json"],[601,54,680,50],[601,55,680,51,"quorum"],[601,61,680,57],[601,63,680,59],[602,10,681,6],[602,14,681,10],[602,15,681,11,"setM"],[602,19,681,15],[602,20,681,16],[602,21,681,17,"json"],[602,25,681,21],[602,26,681,22,"quorum"],[602,32,681,28],[602,33,681,29,"requiredSigners"],[602,48,681,44],[602,49,681,45],[603,10,682,6],[603,14,682,10,"json"],[603,18,682,14],[603,19,682,15,"name"],[603,23,682,19],[603,25,682,21],[603,29,682,25],[603,30,682,26,"setLabel"],[603,38,682,34],[603,39,682,35,"json"],[603,43,682,39],[603,44,682,40,"name"],[603,48,682,44],[603,49,682,45],[604,10,684,6],[604,18,684,14,"json"],[604,22,684,18],[604,23,684,19,"addressType"],[604,34,684,30],[604,35,684,31,"toLowerCase"],[604,46,684,42],[604,47,684,43],[604,48,684,44],[605,12,685,8],[605,17,685,13,"MultisigHDWallet"],[605,33,685,29],[605,34,685,30,"FORMAT_P2SH"],[605,45,685,41],[606,14,686,10],[606,18,686,14],[606,19,686,15,"setLegacy"],[606,28,686,24],[606,29,686,25],[606,30,686,26],[607,14,687,10],[608,12,688,8],[608,17,688,13,"MultisigHDWallet"],[608,33,688,29],[608,34,688,30,"FORMAT_P2SH_P2WSH"],[608,51,688,47],[609,12,689,8],[609,17,689,13,"MultisigHDWallet"],[609,33,689,29],[609,34,689,30,"FORMAT_P2SH_P2WSH_ALT"],[609,55,689,51],[610,14,690,10],[610,18,690,14],[610,19,690,15,"setWrappedSegwit"],[610,35,690,31],[610,36,690,32],[610,37,690,33],[611,14,691,10],[612,12,692,8],[612,17,692,13,"MultisigHDWallet"],[612,33,692,29],[612,34,692,30,"FORMAT_P2WSH"],[612,46,692,42],[613,12,693,8],[614,14,694,10],[614,18,694,14],[614,19,694,15,"setNativeSegwit"],[614,34,694,30],[614,35,694,31],[614,36,694,32],[615,14,695,10],[616,10,696,6],[617,10,698,6],[617,15,698,11],[617,19,698,17,"pk"],[617,21,698,19],[617,25,698,23,"json"],[617,29,698,27],[617,30,698,28,"extendedPublicKeys"],[617,48,698,46],[617,50,698,48],[618,12,698,48],[618,16,698,48,"_pk$xfp"],[618,23,698,48],[619,12,699,8],[619,16,699,14,"path"],[619,22,699,18],[619,25,699,21,"MultisigHDWallet"],[619,41,699,37],[619,42,699,38,"isPathValid"],[619,53,699,49],[619,54,699,50,"json"],[619,58,699,54],[619,59,699,55,"bip32Path"],[619,68,699,64],[619,69,699,65],[619,72,699,68,"json"],[619,76,699,72],[619,77,699,73,"bip32Path"],[619,86,699,82],[619,89,699,85],[619,95,699,91],[620,12,700,8],[620,16,700,12],[620,17,700,13,"addCosigner"],[620,28,700,24],[620,29,700,25,"pk"],[620,31,700,27],[620,32,700,28,"xpub"],[620,36,700,32],[620,39,700,32,"_pk$xfp"],[620,46,700,32],[620,49,700,34,"pk"],[620,51,700,36],[620,52,700,37,"xfp"],[620,55,700,40],[620,67,700,40,"_pk$xfp"],[620,74,700,40],[620,77,700,44],[620,87,700,54],[620,89,700,56,"path"],[620,95,700,60],[620,96,700,61],[621,10,701,6],[622,8,702,4],[623,8,704,4],[623,12,704,8],[623,13,704,9],[623,17,704,13],[623,18,704,14,"getLabel"],[623,26,704,22],[623,27,704,23],[623,28,704,24],[623,30,704,26],[623,34,704,30],[623,35,704,31,"setLabel"],[623,43,704,39],[623,44,704,40],[623,60,704,56],[623,61,704,57],[624,8,706,4],[624,15,706,11],[624,19,706,15],[625,6,707,2],[626,4,707,3],[627,6,707,3,"key"],[627,9,707,3],[628,6,707,3,"value"],[628,11,707,3],[628,13,709,2],[628,22,709,2,"_getDerivationPathByAddressWithCustomPath"],[628,63,709,43,"_getDerivationPathByAddressWithCustomPath"],[628,64,709,44,"address"],[628,71,709,59],[628,73,709,61,"customPathPrefix"],[628,89,709,97],[628,91,709,99],[629,8,710,4],[629,12,710,10,"path"],[629,16,710,14],[629,19,710,17,"customPathPrefix"],[629,35,710,33],[629,39,710,37],[629,43,710,41],[629,44,710,42,"_derivationPath"],[629,59,710,57],[630,8,711,4],[630,13,711,9],[630,17,711,13,"c"],[630,18,711,14],[630,21,711,17],[630,22,711,18],[630,24,711,20,"c"],[630,25,711,21],[630,28,711,24],[630,32,711,28],[630,33,711,29,"next_free_address_index"],[630,56,711,52],[630,59,711,55],[630,63,711,59],[630,64,711,60,"gap_limit"],[630,73,711,69],[630,75,711,71,"c"],[630,76,711,72],[630,78,711,74],[630,80,711,76],[631,10,712,6],[631,14,712,10],[631,18,712,14],[631,19,712,15,"_getExternalAddressByIndex"],[631,45,712,41],[631,46,712,42,"c"],[631,47,712,43],[631,48,712,44],[631,53,712,49,"address"],[631,60,712,56],[631,62,712,58],[631,69,712,65,"path"],[631,73,712,69],[631,76,712,72],[631,81,712,77],[631,84,712,80,"c"],[631,85,712,81],[632,8,713,4],[633,8,714,4],[633,13,714,9],[633,17,714,13,"c"],[633,20,714,14],[633,23,714,17],[633,24,714,18],[633,26,714,20,"c"],[633,29,714,21],[633,32,714,24],[633,36,714,28],[633,37,714,29,"next_free_change_address_index"],[633,67,714,59],[633,70,714,62],[633,74,714,66],[633,75,714,67,"gap_limit"],[633,84,714,76],[633,86,714,78,"c"],[633,89,714,79],[633,91,714,81],[633,93,714,83],[634,10,715,6],[634,14,715,10],[634,18,715,14],[634,19,715,15,"_getInternalAddressByIndex"],[634,45,715,41],[634,46,715,42,"c"],[634,49,715,43],[634,50,715,44],[634,55,715,49,"address"],[634,62,715,56],[634,64,715,58],[634,71,715,65,"path"],[634,75,715,69],[634,78,715,72],[634,83,715,77],[634,86,715,80,"c"],[634,89,715,81],[635,8,716,4],[636,8,718,4],[636,15,718,11],[636,20,718,16],[637,6,719,2],[638,4,719,3],[639,6,719,3,"key"],[639,9,719,3],[640,6,719,3,"value"],[640,11,719,3],[640,13,721,2],[640,22,721,2,"_getWifForAddress"],[640,39,721,19,"_getWifForAddress"],[640,40,721,20,"address"],[640,47,721,35],[640,49,721,45],[641,8,722,4],[642,8,723,4],[642,15,723,11],[642,20,723,16],[643,6,724,2],[644,4,724,3],[645,6,724,3,"key"],[645,9,724,3],[646,6,724,3,"value"],[646,11,724,3],[646,13,726,2],[646,22,726,2,"_getPubkeyByAddress"],[646,41,726,21,"_getPubkeyByAddress"],[646,42,726,22,"address"],[646,49,726,37],[646,51,726,55],[647,8,727,4],[647,14,727,10],[647,18,727,14,"Error"],[647,23,727,19],[647,24,727,20],[647,52,727,48],[647,53,727,49],[648,6,728,2],[649,4,728,3],[650,6,728,3,"key"],[650,9,728,3],[651,6,728,3,"value"],[651,11,728,3],[651,13,730,2],[651,22,730,2,"_getDerivationPathByAddress"],[651,49,730,29,"_getDerivationPathByAddress"],[651,50,730,30,"address"],[651,57,730,45],[651,59,730,55],[652,8,731,4],[652,14,731,10],[652,18,731,14,"Error"],[652,23,731,19],[652,24,731,20],[652,52,731,48],[652,53,731,49],[653,6,732,2],[654,4,732,3],[655,6,732,3,"key"],[655,9,732,3],[656,6,732,3,"value"],[656,11,732,3],[656,13,734,2],[656,22,734,2,"_addPsbtInput"],[656,35,734,15,"_addPsbtInput"],[656,36,734,16,"psbt"],[656,40,734,26],[656,42,734,28,"input"],[656,47,734,56],[656,49,734,58,"sequence"],[656,57,734,74],[656,59,734,76,"masterFingerprintBuffer"],[656,82,734,108],[656,84,734,110],[657,8,735,4],[657,12,735,10,"bip32Derivation"],[657,27,735,25],[657,30,735,28],[657,32,735,30],[657,33,735,31],[657,34,735,32],[658,8,736,4],[658,12,736,10,"pubkeys"],[658,19,736,17],[658,22,736,20],[658,24,736,22],[659,8,737,4],[659,17,737,4,"_ref3"],[659,22,737,4],[659,26,737,34],[659,30,737,38],[659,31,737,39,"_cosigners"],[659,41,737,49],[659,42,737,50,"entries"],[659,49,737,57],[659,50,737,58],[659,51,737,59],[659,53,737,61],[660,10,737,61],[660,14,737,61,"_ref4"],[660,19,737,61],[660,26,737,61,"_slicedToArray2"],[660,41,737,61],[660,42,737,61,"default"],[660,49,737,61],[660,51,737,61,"_ref3"],[660,56,737,61],[661,10,737,61],[661,14,737,16,"cosignerIndex"],[661,27,737,29],[661,30,737,29,"_ref4"],[661,35,737,29],[662,10,738,6],[662,14,738,10],[662,15,738,11,"input"],[662,20,738,16],[662,21,738,17,"address"],[662,28,738,24],[662,30,738,26],[663,12,739,8],[663,18,739,14],[663,22,739,18,"Error"],[663,27,739,23],[663,28,739,24],[663,61,739,57],[663,62,739,58],[664,10,740,6],[665,10,741,6],[665,14,741,12,"path"],[665,18,741,16],[665,21,741,19],[665,25,741,23],[665,26,741,24,"_getDerivationPathByAddressWithCustomPath"],[665,67,741,65],[665,68,742,8,"input"],[665,73,742,13],[665,74,742,14,"address"],[665,81,742,21],[665,83,743,8],[665,87,743,12],[665,88,743,13,"_cosignersCustomPaths"],[665,109,743,34],[665,110,743,35,"cosignerIndex"],[665,123,743,48],[665,124,743,49],[665,128,743,53],[665,132,743,57],[665,133,743,58,"_derivationPath"],[665,148,744,6],[665,149,744,7],[666,10,745,6],[667,10,746,6],[667,14,746,12,"masterFingerprint"],[667,31,746,29],[667,34,746,32,"Buffer"],[667,40,746,38],[667,41,746,39,"from"],[667,45,746,43],[667,46,746,44],[667,50,746,48],[667,51,746,49,"_cosignersFingerprints"],[667,73,746,71],[667,74,746,72,"cosignerIndex"],[667,87,746,85],[667,88,746,86],[667,90,746,88],[667,95,746,93],[667,96,746,94],[668,10,748,6],[668,14,748,10],[668,15,748,11,"path"],[668,19,748,15],[668,21,748,17],[669,12,749,8],[669,18,749,14],[669,22,749,18,"Error"],[669,27,749,23],[669,28,749,24],[669,73,749,69],[669,76,749,72,"input"],[669,81,749,77],[669,82,749,78,"address"],[669,89,749,85],[669,90,749,86],[670,10,750,6],[671,10,752,6],[671,14,752,12,"xpub"],[671,18,752,16],[671,21,752,19],[671,25,752,23],[671,26,752,24,"_getXpubFromCosignerIndex"],[671,51,752,49],[671,52,752,50,"cosignerIndex"],[671,65,752,63],[671,66,752,64],[672,10,753,6],[672,14,753,12,"hdNode0"],[672,21,753,19],[672,24,753,22,"bip32"],[672,29,753,27],[672,30,753,28,"fromBase58"],[672,40,753,38],[672,41,753,39,"xpub"],[672,45,753,43],[672,46,753,44],[673,10,754,6],[673,14,754,12,"splt"],[673,18,754,16],[673,21,754,19,"path"],[673,25,754,23],[673,26,754,24,"split"],[673,31,754,29],[673,32,754,30],[673,35,754,33],[673,36,754,34],[674,10,755,6],[674,14,755,12,"internal"],[674,22,755,20],[674,25,755,23],[674,26,755,24,"splt"],[674,30,755,28],[674,31,755,29,"splt"],[674,35,755,33],[674,36,755,34,"length"],[674,42,755,40],[674,45,755,43],[674,46,755,44],[674,47,755,45],[675,10,756,6],[675,14,756,12,"index"],[675,19,756,17],[675,22,756,20],[675,23,756,21,"splt"],[675,27,756,25],[675,28,756,26,"splt"],[675,32,756,30],[675,33,756,31,"length"],[675,39,756,37],[675,42,756,40],[675,43,756,41],[675,44,756,42],[676,10,757,6],[676,14,757,12,"_node0"],[676,20,757,18],[676,23,757,21,"hdNode0"],[676,30,757,28],[676,31,757,29,"derive"],[676,37,757,35],[676,38,757,36,"internal"],[676,46,757,44],[676,47,757,45],[677,10,758,6],[677,14,758,12,"pubkey"],[677,20,758,18],[677,23,758,21,"_node0"],[677,29,758,27],[677,30,758,28,"derive"],[677,36,758,34],[677,37,758,35,"index"],[677,42,758,40],[677,43,758,41],[677,44,758,42,"publicKey"],[677,53,758,51],[678,10,759,6,"pubkeys"],[678,17,759,13],[678,18,759,14,"push"],[678,22,759,18],[678,23,759,19,"pubkey"],[678,29,759,25],[678,30,759,26],[679,10,761,6,"bip32Derivation"],[679,25,761,21],[679,26,761,22,"push"],[679,30,761,26],[679,31,761,27],[680,12,762,8,"masterFingerprint"],[680,29,762,25],[680,31,762,8,"masterFingerprint"],[680,48,762,25],[681,12,763,8,"path"],[681,16,763,12],[681,18,763,8,"path"],[681,22,763,12],[682,12,764,8,"pubkey"],[682,18,764,14],[682,20,764,8,"pubkey"],[683,10,765,6],[683,11,765,7],[683,12,765,8],[684,8,766,4],[685,8,768,4],[685,12,768,8],[685,13,768,9,"input"],[685,18,768,14],[685,19,768,15,"txhex"],[685,24,768,20],[685,26,768,22],[686,10,769,6],[686,16,769,12],[686,20,769,16,"Error"],[686,25,769,21],[686,26,769,22],[686,99,769,95],[686,100,769,96],[687,8,770,4],[688,8,772,4],[688,12,772,8],[688,16,772,12],[688,17,772,13,"isNativeSegwit"],[688,31,772,27],[688,32,772,28],[688,33,772,29],[688,35,772,31],[689,10,773,6],[689,14,773,12,"p2wsh"],[689,19,773,17],[689,22,773,20,"bitcoin"],[689,29,773,27],[689,30,773,28,"payments"],[689,38,773,36],[689,39,773,37,"p2wsh"],[689,44,773,42],[689,45,773,43],[690,12,774,8,"redeem"],[690,18,774,14],[690,20,774,16,"bitcoin"],[690,27,774,23],[690,28,774,24,"payments"],[690,36,774,32],[690,37,774,33,"p2ms"],[690,41,774,37],[690,42,774,38],[691,14,774,40,"m"],[691,15,774,41],[691,17,774,43],[691,21,774,47],[691,22,774,48,"_m"],[691,24,774,50],[692,14,774,52,"pubkeys"],[692,21,774,59],[692,23,774,61,"MultisigHDWallet"],[692,39,774,77],[692,40,774,78,"sortBuffers"],[692,51,774,89],[692,52,774,90,"pubkeys"],[692,59,774,97],[693,12,774,99],[693,13,774,100],[694,10,775,6],[694,11,775,7],[694,12,775,8],[695,10,776,6],[695,14,776,10],[695,15,776,11,"p2wsh"],[695,20,776,16],[695,21,776,17,"redeem"],[695,27,776,23],[695,31,776,27],[695,32,776,28,"p2wsh"],[695,37,776,33],[695,38,776,34,"output"],[695,44,776,40],[695,46,776,42],[696,12,777,8],[696,18,777,14],[696,22,777,18,"Error"],[696,27,777,23],[696,28,777,24],[696,59,777,55],[696,60,777,56],[697,10,778,6],[698,10,779,6],[698,14,779,12,"witnessScript"],[698,27,779,25],[698,30,779,28,"p2wsh"],[698,35,779,33],[698,36,779,34,"redeem"],[698,42,779,40],[698,43,779,41,"output"],[698,49,779,47],[699,10,781,6,"psbt"],[699,14,781,10],[699,15,781,11,"addInput"],[699,23,781,19],[699,24,781,20],[700,12,782,8,"hash"],[700,16,782,12],[700,18,782,14,"input"],[700,23,782,19],[700,24,782,20,"txid"],[700,28,782,24],[701,12,783,8,"index"],[701,17,783,13],[701,19,783,15,"input"],[701,24,783,20],[701,25,783,21,"vout"],[701,29,783,25],[702,12,784,8,"sequence"],[702,20,784,16],[702,22,784,8,"sequence"],[702,30,784,16],[703,12,785,8,"bip32Derivation"],[703,27,785,23],[703,29,785,8,"bip32Derivation"],[703,44,785,23],[704,12,786,8,"witnessUtxo"],[704,23,786,19],[704,25,786,21],[705,14,787,10,"script"],[705,20,787,16],[705,22,787,18,"p2wsh"],[705,27,787,23],[705,28,787,24,"output"],[705,34,787,30],[706,14,788,10,"value"],[706,19,788,15],[706,21,788,17,"BigInt"],[706,27,788,23],[706,28,788,24,"input"],[706,33,788,29],[706,34,788,30,"value"],[706,39,788,35],[707,12,789,8],[707,13,789,9],[708,12,790,8,"witnessScript"],[708,25,790,21],[708,27,790,8,"witnessScript"],[708,40,790,21],[709,12,791,8],[710,12,792,8],[711,12,793,8,"nonWitnessUtxo"],[711,26,793,22],[711,28,793,24,"Buffer"],[711,34,793,30],[711,35,793,31,"from"],[711,39,793,35],[711,40,793,36,"input"],[711,45,793,41],[711,46,793,42,"txhex"],[711,51,793,47],[711,53,793,49],[711,58,793,54],[712,10,794,6],[712,11,794,7],[712,12,794,8],[713,8,795,4],[713,9,795,5],[713,15,795,11],[713,19,795,15],[713,23,795,19],[713,24,795,20,"isWrappedSegwit"],[713,39,795,35],[713,40,795,36],[713,41,795,37],[713,43,795,39],[714,10,795,39],[714,14,795,39,"_p2shP2wsh$redeem"],[714,31,795,39],[714,33,795,39,"_p2shP2wsh$redeem2"],[714,51,795,39],[715,10,796,6],[715,14,796,12,"p2shP2wsh"],[715,23,796,21],[715,26,796,24,"bitcoin"],[715,33,796,31],[715,34,796,32,"payments"],[715,42,796,40],[715,43,796,41,"p2sh"],[715,47,796,45],[715,48,796,46],[716,12,797,8,"redeem"],[716,18,797,14],[716,20,797,16,"bitcoin"],[716,27,797,23],[716,28,797,24,"payments"],[716,36,797,32],[716,37,797,33,"p2wsh"],[716,42,797,38],[716,43,797,39],[717,14,798,10,"redeem"],[717,20,798,16],[717,22,798,18,"bitcoin"],[717,29,798,25],[717,30,798,26,"payments"],[717,38,798,34],[717,39,798,35,"p2ms"],[717,43,798,39],[717,44,798,40],[718,16,798,42,"m"],[718,17,798,43],[718,19,798,45],[718,23,798,49],[718,24,798,50,"_m"],[718,26,798,52],[719,16,798,54,"pubkeys"],[719,23,798,61],[719,25,798,63,"MultisigHDWallet"],[719,41,798,79],[719,42,798,80,"sortBuffers"],[719,53,798,91],[719,54,798,92,"pubkeys"],[719,61,798,99],[720,14,798,101],[720,15,798,102],[721,12,799,8],[721,13,799,9],[722,10,800,6],[722,11,800,7],[722,12,800,8],[723,10,801,6],[723,14,801,10],[723,16,801,11,"p2shP2wsh"],[723,25,801,20],[723,38,801,20,"_p2shP2wsh$redeem"],[723,55,801,20],[723,58,801,11,"p2shP2wsh"],[723,67,801,20],[723,68,801,22,"redeem"],[723,74,801,28],[723,88,801,28,"_p2shP2wsh$redeem"],[723,105,801,28],[723,108,801,11,"_p2shP2wsh$redeem"],[723,125,801,11],[723,126,801,30,"redeem"],[723,132,801,36],[723,145,801,11,"_p2shP2wsh$redeem"],[723,162,801,11],[723,163,801,38,"output"],[723,169,801,44],[723,174,801,48],[723,176,801,49,"p2shP2wsh"],[723,185,801,58],[723,198,801,58,"_p2shP2wsh$redeem2"],[723,216,801,58],[723,219,801,49,"p2shP2wsh"],[723,228,801,58],[723,229,801,60,"redeem"],[723,235,801,66],[723,248,801,49,"_p2shP2wsh$redeem2"],[723,266,801,49],[723,267,801,68,"output"],[723,273,801,74],[723,278,801,78],[723,279,801,79,"p2shP2wsh"],[723,288,801,88],[723,289,801,89,"output"],[723,295,801,95],[723,297,801,97],[724,12,802,8],[724,18,802,14],[724,22,802,18,"Error"],[724,27,802,23],[724,28,802,24],[724,64,802,60],[724,65,802,61],[725,10,803,6],[726,10,805,6],[726,14,805,12,"witnessScript"],[726,28,805,25],[726,31,805,28,"p2shP2wsh"],[726,40,805,37],[726,41,805,38,"redeem"],[726,47,805,44],[726,48,805,45,"redeem"],[726,54,805,51],[726,55,805,52,"output"],[726,61,805,58],[727,10,806,6],[727,14,806,12,"redeemScript"],[727,26,806,24],[727,29,806,27,"p2shP2wsh"],[727,38,806,36],[727,39,806,37,"redeem"],[727,45,806,43],[727,46,806,44,"output"],[727,52,806,50],[728,10,808,6,"psbt"],[728,14,808,10],[728,15,808,11,"addInput"],[728,23,808,19],[728,24,808,20],[729,12,809,8,"hash"],[729,16,809,12],[729,18,809,14,"input"],[729,23,809,19],[729,24,809,20,"txid"],[729,28,809,24],[730,12,810,8,"index"],[730,17,810,13],[730,19,810,15,"input"],[730,24,810,20],[730,25,810,21,"vout"],[730,29,810,25],[731,12,811,8,"sequence"],[731,20,811,16],[731,22,811,8,"sequence"],[731,30,811,16],[732,12,812,8,"bip32Derivation"],[732,27,812,23],[732,29,812,8,"bip32Derivation"],[732,44,812,23],[733,12,813,8,"witnessUtxo"],[733,23,813,19],[733,25,813,21],[734,14,814,10,"script"],[734,20,814,16],[734,22,814,18,"p2shP2wsh"],[734,31,814,27],[734,32,814,28,"output"],[734,38,814,34],[735,14,815,10,"value"],[735,19,815,15],[735,21,815,17,"BigInt"],[735,27,815,23],[735,28,815,24,"input"],[735,33,815,29],[735,34,815,30,"value"],[735,39,815,35],[736,12,816,8],[736,13,816,9],[737,12,817,8,"witnessScript"],[737,25,817,21],[737,27,817,8,"witnessScript"],[737,41,817,21],[738,12,818,8,"redeemScript"],[738,24,818,20],[738,26,818,8,"redeemScript"],[738,38,818,20],[739,12,819,8],[740,12,820,8],[741,12,821,8,"nonWitnessUtxo"],[741,26,821,22],[741,28,821,24,"Buffer"],[741,34,821,30],[741,35,821,31,"from"],[741,39,821,35],[741,40,821,36,"input"],[741,45,821,41],[741,46,821,42,"txhex"],[741,51,821,47],[741,53,821,49],[741,58,821,54],[742,10,822,6],[742,11,822,7],[742,12,822,8],[743,8,823,4],[743,9,823,5],[743,15,823,11],[743,19,823,15],[743,23,823,19],[743,24,823,20,"isLegacy"],[743,32,823,28],[743,33,823,29],[743,34,823,30],[743,36,823,32],[744,10,823,32],[744,14,823,32,"_p2sh$redeem"],[744,26,823,32],[745,10,824,6],[745,14,824,12,"p2sh"],[745,18,824,16],[745,21,824,19,"bitcoin"],[745,28,824,26],[745,29,824,27,"payments"],[745,37,824,35],[745,38,824,36,"p2sh"],[745,42,824,40],[745,43,824,41],[746,12,825,8,"redeem"],[746,18,825,14],[746,20,825,16,"bitcoin"],[746,27,825,23],[746,28,825,24,"payments"],[746,36,825,32],[746,37,825,33,"p2ms"],[746,41,825,37],[746,42,825,38],[747,14,825,40,"m"],[747,15,825,41],[747,17,825,43],[747,21,825,47],[747,22,825,48,"_m"],[747,24,825,50],[748,14,825,52,"pubkeys"],[748,21,825,59],[748,23,825,61,"MultisigHDWallet"],[748,39,825,77],[748,40,825,78,"sortBuffers"],[748,51,825,89],[748,52,825,90,"pubkeys"],[748,59,825,97],[749,12,825,99],[749,13,825,100],[750,10,826,6],[750,11,826,7],[750,12,826,8],[751,10,827,6],[751,14,827,10],[751,16,827,11,"p2sh"],[751,20,827,15],[751,33,827,15,"_p2sh$redeem"],[751,45,827,15],[751,48,827,11,"p2sh"],[751,52,827,15],[751,53,827,17,"redeem"],[751,59,827,23],[751,72,827,11,"_p2sh$redeem"],[751,84,827,11],[751,85,827,25,"output"],[751,91,827,31],[751,94,827,33],[752,12,828,8],[752,18,828,14],[752,22,828,18,"Error"],[752,27,828,23],[752,28,828,24],[752,58,828,54],[752,59,828,55],[753,10,829,6],[754,10,830,6],[754,14,830,12,"redeemScript"],[754,27,830,24],[754,30,830,27,"p2sh"],[754,34,830,31],[754,35,830,32,"redeem"],[754,41,830,38],[754,42,830,39,"output"],[754,48,830,45],[755,10,831,6,"psbt"],[755,14,831,10],[755,15,831,11,"addInput"],[755,23,831,19],[755,24,831,20],[756,12,832,8,"hash"],[756,16,832,12],[756,18,832,14,"input"],[756,23,832,19],[756,24,832,20,"txid"],[756,28,832,24],[757,12,833,8,"index"],[757,17,833,13],[757,19,833,15,"input"],[757,24,833,20],[757,25,833,21,"vout"],[757,29,833,25],[758,12,834,8,"sequence"],[758,20,834,16],[758,22,834,8,"sequence"],[758,30,834,16],[759,12,835,8,"bip32Derivation"],[759,27,835,23],[759,29,835,8,"bip32Derivation"],[759,44,835,23],[760,12,836,8,"redeemScript"],[760,24,836,20],[760,26,836,8,"redeemScript"],[760,39,836,20],[761,12,837,8,"nonWitnessUtxo"],[761,26,837,22],[761,28,837,24,"Buffer"],[761,34,837,30],[761,35,837,31,"from"],[761,39,837,35],[761,40,837,36,"input"],[761,45,837,41],[761,46,837,42,"txhex"],[761,51,837,47],[761,53,837,49],[761,58,837,54],[762,10,838,6],[762,11,838,7],[762,12,838,8],[763,8,839,4],[763,9,839,5],[763,15,839,11],[764,10,840,6],[764,16,840,12],[764,20,840,16,"Error"],[764,25,840,21],[764,26,840,22],[764,54,840,50],[764,55,840,51],[765,8,841,4],[766,8,843,4],[766,15,843,11,"psbt"],[766,19,843,15],[767,6,844,2],[768,4,844,3],[769,6,844,3,"key"],[769,9,844,3],[770,6,844,3,"value"],[770,11,844,3],[770,13,846,2],[770,22,846,2,"_getOutputDataForChange"],[770,45,846,25,"_getOutputDataForChange"],[770,46,846,26,"address"],[770,53,846,41],[770,55,846,56],[771,8,847,4],[771,12,847,10,"bip32Derivation"],[771,27,847,43],[771,30,847,46],[771,32,847,48],[771,33,847,49],[771,34,847,50],[772,8,848,4],[772,12,848,10,"pubkeys"],[772,19,848,17],[772,22,848,20],[772,24,848,22],[773,8,849,4],[773,17,849,4,"_ref5"],[773,22,849,4],[773,26,849,34],[773,30,849,38],[773,31,849,39,"_cosigners"],[773,41,849,49],[773,42,849,50,"entries"],[773,49,849,57],[773,50,849,58],[773,51,849,59],[773,53,849,61],[774,10,849,61],[774,14,849,61,"_ref6"],[774,19,849,61],[774,26,849,61,"_slicedToArray2"],[774,41,849,61],[774,42,849,61,"default"],[774,49,849,61],[774,51,849,61,"_ref5"],[774,56,849,61],[775,10,849,61],[775,14,849,16,"cosignerIndex"],[775,27,849,29],[775,30,849,29,"_ref6"],[775,35,849,29],[776,10,850,6],[776,14,850,12,"path"],[776,18,850,16],[776,21,850,19],[776,25,850,23],[776,26,850,24,"_getDerivationPathByAddressWithCustomPath"],[776,67,850,65],[776,68,851,8,"address"],[776,75,851,15],[776,77,852,8],[776,81,852,12],[776,82,852,13,"_cosignersCustomPaths"],[776,103,852,34],[776,104,852,35,"cosignerIndex"],[776,117,852,48],[776,118,852,49],[776,122,852,53],[776,126,852,57],[776,127,852,58,"_derivationPath"],[776,142,853,6],[776,143,853,7],[777,10,854,6],[778,10,855,6],[778,14,855,12,"masterFingerprint"],[778,31,855,29],[778,34,855,32,"Buffer"],[778,40,855,38],[778,41,855,39,"from"],[778,45,855,43],[778,46,855,44],[778,50,855,48],[778,51,855,49,"_cosignersFingerprints"],[778,73,855,71],[778,74,855,72,"cosignerIndex"],[778,87,855,85],[778,88,855,86],[778,90,855,88],[778,95,855,93],[778,96,855,94],[779,10,857,6],[779,14,857,10],[779,15,857,11,"path"],[779,19,857,15],[779,21,857,17],[780,12,858,8],[780,18,858,14],[780,22,858,18,"Error"],[780,27,858,23],[780,28,858,24],[780,73,858,69],[780,76,858,72,"address"],[780,83,858,79],[780,84,858,80],[781,10,859,6],[782,10,861,6],[782,14,861,12,"xpub"],[782,18,861,16],[782,21,861,19],[782,25,861,23],[782,26,861,24,"_getXpubFromCosignerIndex"],[782,51,861,49],[782,52,861,50,"cosignerIndex"],[782,65,861,63],[782,66,861,64],[783,10,862,6],[783,14,862,12,"hdNode0"],[783,21,862,19],[783,24,862,22,"bip32"],[783,29,862,27],[783,30,862,28,"fromBase58"],[783,40,862,38],[783,41,862,39,"xpub"],[783,45,862,43],[783,46,862,44],[784,10,863,6],[784,14,863,12,"splt"],[784,18,863,16],[784,21,863,19,"path"],[784,25,863,23],[784,26,863,24,"split"],[784,31,863,29],[784,32,863,30],[784,35,863,33],[784,36,863,34],[785,10,864,6],[785,14,864,12,"internal"],[785,22,864,20],[785,25,864,23],[785,26,864,24,"splt"],[785,30,864,28],[785,31,864,29,"splt"],[785,35,864,33],[785,36,864,34,"length"],[785,42,864,40],[785,45,864,43],[785,46,864,44],[785,47,864,45],[786,10,865,6],[786,14,865,12,"index"],[786,19,865,17],[786,22,865,20],[786,23,865,21,"splt"],[786,27,865,25],[786,28,865,26,"splt"],[786,32,865,30],[786,33,865,31,"length"],[786,39,865,37],[786,42,865,40],[786,43,865,41],[786,44,865,42],[787,10,866,6],[787,14,866,12,"_node0"],[787,20,866,18],[787,23,866,21,"hdNode0"],[787,30,866,28],[787,31,866,29,"derive"],[787,37,866,35],[787,38,866,36,"internal"],[787,46,866,44],[787,47,866,45],[788,10,867,6],[788,14,867,12,"pubkey"],[788,20,867,18],[788,23,867,21,"_node0"],[788,29,867,27],[788,30,867,28,"derive"],[788,36,867,34],[788,37,867,35,"index"],[788,42,867,40],[788,43,867,41],[788,44,867,42,"publicKey"],[788,53,867,51],[789,10,868,6,"pubkeys"],[789,17,868,13],[789,18,868,14,"push"],[789,22,868,18],[789,23,868,19,"pubkey"],[789,29,868,25],[789,30,868,26],[790,10,870,6,"bip32Derivation"],[790,25,870,21],[790,26,870,22,"push"],[790,30,870,26],[790,31,870,27],[791,12,871,8,"masterFingerprint"],[791,29,871,25],[791,31,871,8,"masterFingerprint"],[791,48,871,25],[792,12,872,8,"path"],[792,16,872,12],[792,18,872,8,"path"],[792,22,872,12],[793,12,873,8,"pubkey"],[793,18,873,14],[793,20,873,8,"pubkey"],[794,10,874,6],[794,11,874,7],[794,12,874,8],[795,8,875,4],[796,8,877,4],[796,12,877,8],[796,16,877,12],[796,17,877,13,"isLegacy"],[796,25,877,21],[796,26,877,22],[796,27,877,23],[796,29,877,25],[797,10,878,6],[797,14,878,12,"p2sh"],[797,18,878,16],[797,21,878,19,"bitcoin"],[797,28,878,26],[797,29,878,27,"payments"],[797,37,878,35],[797,38,878,36,"p2ms"],[797,42,878,40],[797,43,878,41],[798,12,878,43,"m"],[798,13,878,44],[798,15,878,46],[798,19,878,50],[798,20,878,51,"_m"],[798,22,878,53],[799,12,878,55,"pubkeys"],[799,19,878,62],[799,21,878,64,"MultisigHDWallet"],[799,37,878,80],[799,38,878,81,"sortBuffers"],[799,49,878,92],[799,50,878,93,"pubkeys"],[799,57,878,100],[800,10,878,102],[800,11,878,103],[800,12,878,104],[801,10,879,6],[801,14,879,10],[801,15,879,11,"p2sh"],[801,19,879,15],[801,20,879,16,"output"],[801,26,879,22],[801,28,879,24],[802,12,880,8],[802,18,880,14],[802,22,880,18,"Error"],[802,27,880,23],[802,28,880,24],[802,59,880,55],[802,60,880,56],[803,10,881,6],[804,10,882,6],[804,17,882,13],[805,12,883,8,"bip32Derivation"],[805,27,883,23],[805,29,883,8,"bip32Derivation"],[805,44,883,23],[806,12,884,8,"redeemScript"],[806,24,884,20],[806,26,884,22,"p2sh"],[806,30,884,26],[806,31,884,27,"output"],[807,10,885,6],[807,11,885,7],[808,8,886,4],[809,8,888,4],[809,12,888,8],[809,16,888,12],[809,17,888,13,"isWrappedSegwit"],[809,32,888,28],[809,33,888,29],[809,34,888,30],[809,36,888,32],[810,10,888,32],[810,14,888,32,"_p2shP2wsh$redeem3"],[810,32,888,32],[810,34,888,32,"_p2shP2wsh$redeem4"],[810,52,888,32],[811,10,889,6],[811,14,889,12,"p2shP2wsh"],[811,23,889,21],[811,26,889,24,"bitcoin"],[811,33,889,31],[811,34,889,32,"payments"],[811,42,889,40],[811,43,889,41,"p2sh"],[811,47,889,45],[811,48,889,46],[812,12,890,8,"redeem"],[812,18,890,14],[812,20,890,16,"bitcoin"],[812,27,890,23],[812,28,890,24,"payments"],[812,36,890,32],[812,37,890,33,"p2wsh"],[812,42,890,38],[812,43,890,39],[813,14,891,10,"redeem"],[813,20,891,16],[813,22,891,18,"bitcoin"],[813,29,891,25],[813,30,891,26,"payments"],[813,38,891,34],[813,39,891,35,"p2ms"],[813,43,891,39],[813,44,891,40],[814,16,891,42,"m"],[814,17,891,43],[814,19,891,45],[814,23,891,49],[814,24,891,50,"_m"],[814,26,891,52],[815,16,891,54,"pubkeys"],[815,23,891,61],[815,25,891,63,"MultisigHDWallet"],[815,41,891,79],[815,42,891,80,"sortBuffers"],[815,53,891,91],[815,54,891,92,"pubkeys"],[815,61,891,99],[816,14,891,101],[816,15,891,102],[817,12,892,8],[817,13,892,9],[818,10,893,6],[818,11,893,7],[818,12,893,8],[819,10,894,6],[819,14,894,12,"witnessScript"],[819,27,894,25],[819,30,894,28,"p2shP2wsh"],[819,39,894,37],[819,52,894,37,"_p2shP2wsh$redeem3"],[819,70,894,37],[819,73,894,28,"p2shP2wsh"],[819,82,894,37],[819,83,894,39,"redeem"],[819,89,894,45],[819,103,894,45,"_p2shP2wsh$redeem3"],[819,121,894,45],[819,124,894,28,"_p2shP2wsh$redeem3"],[819,142,894,28],[819,143,894,47,"redeem"],[819,149,894,53],[819,170,894,28,"_p2shP2wsh$redeem3"],[819,188,894,28],[819,189,894,55,"output"],[819,195,894,61],[820,10,895,6],[820,14,895,12,"redeemScript"],[820,26,895,24],[820,29,895,27,"p2shP2wsh"],[820,38,895,36],[820,51,895,36,"_p2shP2wsh$redeem4"],[820,69,895,36],[820,72,895,27,"p2shP2wsh"],[820,81,895,36],[820,82,895,38,"redeem"],[820,88,895,44],[820,109,895,27,"_p2shP2wsh$redeem4"],[820,127,895,27],[820,128,895,46,"output"],[820,134,895,52],[821,10,896,6],[821,14,896,10],[821,15,896,11,"witnessScript"],[821,28,896,24],[821,32,896,28],[821,33,896,29,"redeemScript"],[821,45,896,41],[821,47,896,43],[822,12,897,8],[822,18,897,14],[822,22,897,18,"Error"],[822,27,897,23],[822,28,897,24],[822,76,897,72],[822,77,897,73],[823,10,898,6],[824,10,899,6],[824,17,899,13],[825,12,900,8,"bip32Derivation"],[825,27,900,23],[825,29,900,8,"bip32Derivation"],[825,44,900,23],[826,12,901,8,"witnessScript"],[826,25,901,21],[826,27,901,8,"witnessScript"],[826,40,901,21],[827,12,902,8,"redeemScript"],[827,24,902,20],[827,26,902,8,"redeemScript"],[828,10,903,6],[828,11,903,7],[829,8,904,4],[830,8,906,4],[830,12,906,8],[830,16,906,12],[830,17,906,13,"isNativeSegwit"],[830,31,906,27],[830,32,906,28],[830,33,906,29],[830,35,906,31],[831,10,906,31],[831,14,906,31,"_p2wsh$redeem"],[831,27,906,31],[832,10,907,6],[833,10,908,6],[833,14,908,12,"p2wsh"],[833,19,908,17],[833,22,908,20,"bitcoin"],[833,29,908,27],[833,30,908,28,"payments"],[833,38,908,36],[833,39,908,37,"p2wsh"],[833,44,908,42],[833,45,908,43],[834,12,909,8,"redeem"],[834,18,909,14],[834,20,909,16,"bitcoin"],[834,27,909,23],[834,28,909,24,"payments"],[834,36,909,32],[834,37,909,33,"p2ms"],[834,41,909,37],[834,42,909,38],[835,14,909,40,"m"],[835,15,909,41],[835,17,909,43],[835,21,909,47],[835,22,909,48,"_m"],[835,24,909,50],[836,14,909,52,"pubkeys"],[836,21,909,59],[836,23,909,61,"MultisigHDWallet"],[836,39,909,77],[836,40,909,78,"sortBuffers"],[836,51,909,89],[836,52,909,90,"pubkeys"],[836,59,909,97],[837,12,909,99],[837,13,909,100],[838,10,910,6],[838,11,910,7],[838,12,910,8],[839,10,911,6],[839,14,911,12,"witnessScript"],[839,29,911,25],[839,32,911,28,"p2wsh"],[839,37,911,33],[839,50,911,33,"_p2wsh$redeem"],[839,63,911,33],[839,66,911,28,"p2wsh"],[839,71,911,33],[839,72,911,35,"redeem"],[839,78,911,41],[839,99,911,28,"_p2wsh$redeem"],[839,112,911,28],[839,113,911,43,"output"],[839,119,911,49],[840,10,912,6],[840,14,912,10],[840,15,912,11,"witnessScript"],[840,30,912,24],[840,32,912,26],[841,12,913,8],[841,18,913,14],[841,22,913,18,"Error"],[841,27,913,23],[841,28,913,24],[841,60,913,56],[841,61,913,57],[842,10,914,6],[843,10,915,6],[843,17,915,13],[844,12,916,8,"bip32Derivation"],[844,27,916,23],[844,29,916,8,"bip32Derivation"],[844,44,916,23],[845,12,917,8,"witnessScript"],[845,25,917,21],[845,27,917,8,"witnessScript"],[846,10,918,6],[846,11,918,7],[847,8,919,4],[848,8,921,4],[848,14,921,10],[848,18,921,14,"Error"],[848,23,921,19],[848,24,921,20],[848,60,921,56],[848,61,921,57],[849,6,922,2],[850,4,922,3],[851,6,922,3,"key"],[851,9,922,3],[852,6,922,3,"value"],[852,11,922,3],[852,13,924,2],[852,22,924,2,"howManySignaturesCanWeMake"],[852,48,924,28,"howManySignaturesCanWeMake"],[852,49,924,28],[852,51,924,31],[853,8,925,4],[853,12,925,8,"howManyPrivKeysWeGot"],[853,32,925,28],[853,35,925,31],[853,36,925,32],[854,8,926,4],[854,13,926,9],[854,17,926,15,"cosigner"],[854,25,926,23],[854,29,926,27],[854,33,926,31],[854,34,926,32,"_cosigners"],[854,44,926,42],[854,46,926,44],[855,10,927,6],[855,14,927,10],[855,15,927,11,"MultisigHDWallet"],[855,31,927,27],[855,32,927,28,"isXpubString"],[855,44,927,40],[855,45,927,41,"cosigner"],[855,53,927,49],[855,54,927,50],[855,58,927,54],[855,59,927,55,"MultisigHDWallet"],[855,75,927,71],[855,76,927,72,"isXprvString"],[855,88,927,84],[855,89,927,85,"cosigner"],[855,97,927,93],[855,98,927,94],[855,100,927,96,"howManyPrivKeysWeGot"],[855,120,927,116],[855,122,927,118],[856,8,928,4],[857,8,930,4],[857,15,930,11,"howManyPrivKeysWeGot"],[857,35,930,31],[858,6,931,2],[859,4,931,3],[860,6,931,3,"key"],[860,9,931,3],[861,6,931,3,"value"],[861,11,931,3],[861,13,933,2],[861,22,933,2,"coinselect"],[861,32,933,12,"coinselect"],[861,33,934,4,"utxos"],[861,38,934,34],[861,40,935,4,"targets"],[861,47,935,38],[861,49,936,4,"feeRate"],[861,56,936,19],[861,58,937,83],[862,8,938,4],[862,12,938,10,"_utxos"],[862,18,938,16],[862,21,938,19,"JSON"],[862,25,938,23],[862,26,938,24,"parse"],[862,31,938,29],[862,32,938,30,"JSON"],[862,36,938,34],[862,37,938,35,"stringify"],[862,46,938,44],[862,47,938,45,"utxos"],[862,52,938,50],[862,53,938,51],[862,54,938,79],[864,8,940,4],[865,8,941,4],[865,13,941,9],[865,17,941,15,"u"],[865,18,941,16],[865,22,941,20,"_utxos"],[865,28,941,26],[865,30,941,28],[866,10,941,28],[866,14,941,28,"_u$script"],[866,23,941,28],[867,10,942,6],[867,15,942,6,"_u$script"],[867,24,942,6],[867,27,942,10,"u"],[867,28,942,11],[867,29,942,12,"script"],[867,35,942,18],[867,48,942,10,"_u$script"],[867,57,942,10],[867,58,942,20,"length"],[867,64,942,26],[867,66,942,28],[868,12,943,8],[869,10,944,6],[870,10,946,6],[870,14,946,10],[870,18,946,14],[870,19,946,15,"isNativeSegwit"],[870,33,946,29],[870,34,946,30],[870,35,946,31],[870,37,946,33],[871,12,947,8,"u"],[871,13,947,9],[871,14,947,10,"script"],[871,20,947,16],[871,23,947,19],[872,14,948,10,"length"],[872,20,948,16],[872,22,948,18,"Math"],[872,26,948,22],[872,27,948,23,"ceil"],[872,31,948,27],[872,32,948,28],[872,33,948,29],[872,34,948,30],[872,37,948,33],[872,41,948,37],[872,42,948,38,"getM"],[872,46,948,42],[872,47,948,43],[872,48,948,44],[872,51,948,47],[872,53,948,49],[872,56,948,52],[872,60,948,56],[872,61,948,57,"getN"],[872,65,948,61],[872,66,948,62],[872,67,948,63],[872,70,948,66],[872,72,948,68],[872,76,948,72],[872,77,948,73],[873,12,949,8],[873,13,949,9],[874,10,950,6],[874,11,950,7],[874,17,950,13],[874,21,950,17],[874,25,950,21],[874,26,950,22,"isWrappedSegwit"],[874,41,950,37],[874,42,950,38],[874,43,950,39],[874,45,950,41],[875,12,951,8,"u"],[875,13,951,9],[875,14,951,10,"script"],[875,20,951,16],[875,23,951,19],[876,14,952,10,"length"],[876,20,952,16],[876,22,952,18],[876,24,952,20],[876,27,952,23,"Math"],[876,31,952,27],[876,32,952,28,"ceil"],[876,36,952,32],[876,37,952,33],[876,38,952,34],[876,39,952,35],[876,42,952,38],[876,46,952,42],[876,47,952,43,"getM"],[876,51,952,47],[876,52,952,48],[876,53,952,49],[876,56,952,52],[876,58,952,54],[876,61,952,57],[876,65,952,61],[876,66,952,62,"getN"],[876,70,952,66],[876,71,952,67],[876,72,952,68],[876,75,952,71],[876,77,952,73],[876,81,952,77],[876,82,952,78],[877,12,953,8],[877,13,953,9],[878,10,954,6],[878,11,954,7],[878,17,954,13],[879,12,955,8,"u"],[879,13,955,9],[879,14,955,10,"script"],[879,20,955,16],[879,23,955,19],[880,14,956,10,"length"],[880,20,956,16],[880,22,956,18],[880,23,956,19],[880,26,956,22],[880,30,956,26],[880,31,956,27,"getM"],[880,35,956,31],[880,36,956,32],[880,37,956,33],[880,40,956,36],[880,42,956,38],[880,45,956,41],[880,49,956,45],[880,50,956,46,"getN"],[880,54,956,50],[880,55,956,51],[880,56,956,52],[880,59,956,55],[881,12,957,8],[881,13,957,9],[882,10,958,6],[883,8,959,4],[884,8,961,4],[884,15,961,4,"_superPropGet"],[884,28,961,4],[884,29,961,4,"MultisigHDWallet"],[884,45,961,4],[884,71,961,28,"_utxos"],[884,77,961,34],[884,79,961,36,"targets"],[884,86,961,43],[884,88,961,45,"feeRate"],[884,95,961,52],[885,6,962,2],[887,6,964,2],[888,0,965,0],[889,0,966,0],[890,4,964,2],[891,6,964,2,"key"],[891,9,964,2],[892,6,964,2,"value"],[892,11,964,2],[892,13,967,2],[892,22,967,2,"createTransaction"],[892,39,967,19,"createTransaction"],[892,40,968,4,"utxos"],[892,45,968,34],[892,47,969,4,"targets"],[892,54,969,31],[892,56,970,4,"feeRate"],[892,63,970,19],[892,65,971,4,"changeAddress"],[892,78,971,25],[892,80,972,4,"sequence"],[892,88,972,20],[892,90,975,29],[893,8,975,29],[893,12,975,29,"_this2"],[893,18,975,29],[894,8,975,29],[894,12,973,4,"skipSigning"],[894,23,973,15],[894,26,973,15,"arguments"],[894,35,973,15],[894,36,973,15,"length"],[894,42,973,15],[894,50,973,15,"arguments"],[894,59,973,15],[894,67,973,15,"undefined"],[894,76,973,15],[894,79,973,15,"arguments"],[894,88,973,15],[894,94,973,18],[894,99,973,23],[895,8,973,23],[895,12,974,4,"masterFingerprint"],[895,29,974,29],[895,32,974,29,"arguments"],[895,41,974,29],[895,42,974,29,"length"],[895,48,974,29],[895,55,974,29,"arguments"],[895,64,974,29],[895,70,974,29,"undefined"],[895,79,974,29],[896,8,976,4],[896,12,976,8,"targets"],[896,19,976,15],[896,20,976,16,"length"],[896,26,976,22],[896,31,976,27],[896,32,976,28],[896,34,976,30],[896,40,976,36],[896,44,976,40,"Error"],[896,49,976,45],[896,50,976,46],[896,75,976,71],[896,76,976,72],[897,8,977,4],[897,12,977,8],[897,16,977,12],[897,17,977,13,"howManySignaturesCanWeMake"],[897,43,977,39],[897,44,977,40],[897,45,977,41],[897,50,977,46],[897,51,977,47],[897,53,977,49,"skipSigning"],[897,64,977,60],[897,67,977,63],[897,71,977,67],[898,8,979,4],[898,12,979,4,"_this$coinselect"],[898,28,979,4],[898,31,979,37],[898,35,979,41],[898,36,979,42,"coinselect"],[898,46,979,52],[898,47,979,53,"utxos"],[898,52,979,58],[898,54,979,60,"targets"],[898,61,979,67],[898,63,979,69,"feeRate"],[898,70,979,76],[898,71,979,77],[899,10,979,12,"inputs"],[899,16,979,18],[899,19,979,18,"_this$coinselect"],[899,35,979,18],[899,36,979,12,"inputs"],[899,42,979,18],[900,10,979,20,"outputs"],[900,17,979,27],[900,20,979,27,"_this$coinselect"],[900,36,979,27],[900,37,979,20,"outputs"],[900,44,979,27],[901,10,979,29,"fee"],[901,13,979,32],[901,16,979,32,"_this$coinselect"],[901,32,979,32],[901,33,979,29,"fee"],[901,36,979,32],[902,8,980,4,"sequence"],[902,16,980,12],[902,19,980,15,"sequence"],[902,27,980,23],[902,31,980,27,"AbstractHDElectrumWallet"],[902,62,980,27],[902,63,980,27,"AbstractHDElectrumWallet"],[902,120,980,51],[902,121,980,52,"defaultRBFSequence"],[902,139,980,70],[903,8,982,4],[903,12,982,8,"psbt"],[903,16,982,12],[903,19,982,15],[903,23,982,19,"bitcoin"],[903,30,982,26],[903,31,982,27,"Psbt"],[903,35,982,31],[903,36,982,32],[903,37,982,33],[904,8,984,4],[904,12,984,8,"c"],[904,13,984,9],[904,16,984,12],[904,17,984,13],[905,8,985,4,"inputs"],[905,14,985,10],[905,15,985,11,"forEach"],[905,22,985,18],[905,23,985,19],[905,33,985,19,"input"],[905,38,985,24],[905,40,985,28],[906,10,986,6,"c"],[906,11,986,7],[906,13,986,9],[907,10,987,6,"psbt"],[907,14,987,10],[907,17,987,13,"_this2"],[907,23,987,17],[907,24,987,18,"_addPsbtInput"],[907,37,987,31],[907,38,987,32,"psbt"],[907,42,987,36],[907,44,987,38,"input"],[907,49,987,43],[907,51,987,45,"sequence"],[907,59,987,53],[907,60,987,54],[908,8,988,4],[908,9,988,5],[908,10,988,6],[909,8,990,4,"outputs"],[909,15,990,11],[909,16,990,12,"forEach"],[909,23,990,19],[909,24,990,20],[909,34,990,20,"output"],[909,40,990,26],[909,42,990,30],[910,10,991,6],[911,10,992,6],[911,14,992,10,"change"],[911,20,992,16],[911,23,992,19],[911,28,992,24],[912,10,993,6],[912,14,993,10,"address"],[912,21,993,37],[912,24,993,40,"output"],[912,30,993,46],[912,31,993,47,"address"],[912,38,993,54],[913,10,994,6],[913,14,994,10],[913,15,994,11,"address"],[913,22,994,18],[913,24,994,20],[914,12,995,8,"change"],[914,18,995,14],[914,21,995,17],[914,25,995,21],[915,12,996,8,"output"],[915,18,996,14],[915,19,996,15,"address"],[915,26,996,22],[915,29,996,25,"changeAddress"],[915,42,996,38],[916,12,997,8,"address"],[916,19,997,15],[916,22,997,18,"changeAddress"],[916,35,997,31],[917,10,998,6],[918,10,1000,6],[918,14,1000,10,"outputData"],[918,24,1000,58],[918,27,1000,61],[919,12,1001,8,"address"],[919,19,1001,15],[919,21,1001,8,"address"],[919,28,1001,15],[920,12,1002,8,"value"],[920,17,1002,13],[920,19,1002,15,"BigInt"],[920,25,1002,21],[920,26,1002,22,"output"],[920,32,1002,28],[920,33,1002,29,"value"],[920,38,1002,34],[921,10,1003,6],[921,11,1003,7],[922,10,1005,6],[922,14,1005,10,"change"],[922,20,1005,16],[922,22,1005,18],[923,12,1006,8,"outputData"],[923,22,1006,18],[923,25,1006,18,"Object"],[923,31,1006,18],[923,32,1006,18,"assign"],[923,38,1006,18],[923,43,1007,13,"outputData"],[923,53,1007,23],[923,55,1008,13,"_this2"],[923,61,1008,17],[923,62,1008,18,"_getOutputDataForChange"],[923,85,1008,41],[923,86,1008,42,"address"],[923,93,1008,49],[923,94,1008,50],[923,95,1009,9],[924,10,1010,6],[925,10,1012,6,"psbt"],[925,14,1012,10],[925,15,1012,11,"addOutput"],[925,24,1012,20],[925,25,1012,21,"outputData"],[925,35,1012,31],[925,36,1012,32],[926,8,1013,4],[926,9,1013,5],[926,10,1013,6],[927,8,1015,4],[927,12,1015,8],[927,13,1015,9,"skipSigning"],[927,24,1015,20],[927,26,1015,22],[928,10,1016,6],[928,15,1016,11],[928,19,1016,15,"cc"],[928,21,1016,17],[928,24,1016,20],[928,25,1016,21],[928,27,1016,23,"cc"],[928,29,1016,25],[928,32,1016,28,"c"],[928,33,1016,29],[928,35,1016,31,"cc"],[928,37,1016,33],[928,39,1016,35],[928,41,1016,37],[929,12,1017,8],[929,16,1017,12,"signaturesMade"],[929,30,1017,26],[929,33,1017,29],[929,34,1017,30],[930,12,1018,8],[930,21,1018,8,"_ref7"],[930,26,1018,8],[930,30,1018,48],[930,34,1018,52],[930,35,1018,53,"_cosigners"],[930,45,1018,63],[930,46,1018,64,"entries"],[930,53,1018,71],[930,54,1018,72],[930,55,1018,73],[930,57,1018,75],[931,14,1018,75],[931,18,1018,75,"_ref8"],[931,23,1018,75],[931,30,1018,75,"_slicedToArray2"],[931,45,1018,75],[931,46,1018,75,"default"],[931,53,1018,75],[931,55,1018,75,"_ref7"],[931,60,1018,75],[932,14,1018,75],[932,18,1018,20,"cosignerIndex"],[932,31,1018,33],[932,34,1018,33,"_ref8"],[932,39,1018,33],[933,14,1018,33],[933,18,1018,35,"cosigner"],[933,26,1018,43],[933,29,1018,43,"_ref8"],[933,34,1018,43],[934,14,1019,10],[934,18,1019,14,"MultisigHDWallet"],[934,34,1019,30],[934,35,1019,31,"isXpubString"],[934,47,1019,43],[934,48,1019,44,"cosigner"],[934,56,1019,52],[934,57,1019,53],[934,59,1019,55],[935,14,1020,10],[936,14,1021,10],[936,18,1021,14,"signaturesMade"],[936,32,1021,28],[936,36,1021,32],[936,40,1021,36],[936,41,1021,37,"getM"],[936,45,1021,41],[936,46,1021,42],[936,47,1021,43],[936,49,1021,45],[937,16,1022,12],[938,16,1023,12],[939,14,1024,10],[940,14,1025,10],[940,18,1025,16,"passphrase"],[940,28,1025,26],[940,31,1025,29],[940,35,1025,33],[940,36,1025,34,"_cosignersPassphrases"],[940,57,1025,55],[940,58,1025,56,"cosignerIndex"],[940,71,1025,69],[940,72,1025,70],[941,14,1026,10],[941,18,1026,14,"seed"],[941,22,1026,18],[941,25,1026,21,"bip39"],[941,30,1026,26],[941,31,1026,27,"mnemonicToSeedSync"],[941,49,1026,45],[941,50,1026,46,"cosigner"],[941,58,1026,54],[941,60,1026,56,"passphrase"],[941,70,1026,66],[941,71,1026,67],[942,14,1027,10],[942,18,1027,14,"cosigner"],[942,26,1027,22],[942,27,1027,23,"startsWith"],[942,37,1027,33],[942,38,1027,34,"ELECTRUM_SEED_PREFIX"],[942,58,1027,54],[942,59,1027,55],[942,61,1027,57],[943,16,1028,12,"seed"],[943,20,1028,16],[943,23,1028,19,"MultisigHDWallet"],[943,39,1028,35],[943,40,1028,36,"convertElectrumMnemonicToSeed"],[943,69,1028,65],[943,70,1028,66,"cosigner"],[943,78,1028,74],[943,80,1028,76,"passphrase"],[943,90,1028,86],[943,91,1028,87],[944,14,1029,10],[945,14,1031,10],[945,18,1031,16,"hdRoot"],[945,24,1031,22],[945,27,1031,25,"bip32"],[945,32,1031,30],[945,33,1031,31,"fromSeed"],[945,41,1031,39],[945,42,1031,40,"seed"],[945,46,1031,44],[945,47,1031,45],[946,14,1032,10,"psbt"],[946,18,1032,14],[946,19,1032,15,"signInputHD"],[946,30,1032,26],[946,31,1032,27,"cc"],[946,33,1032,29],[946,35,1032,31,"hdRoot"],[946,41,1032,37],[946,42,1032,38],[947,14,1033,10,"signaturesMade"],[947,28,1033,24],[947,30,1033,26],[948,12,1034,8],[949,10,1035,6],[950,8,1036,4],[951,8,1038,4],[951,12,1038,8,"tx"],[951,14,1038,10],[952,8,1039,4],[952,12,1039,8],[952,13,1039,9,"skipSigning"],[952,24,1039,20],[952,28,1039,24],[952,32,1039,28],[952,33,1039,29,"howManySignaturesCanWeMake"],[952,59,1039,55],[952,60,1039,56],[952,61,1039,57],[952,65,1039,61],[952,69,1039,65],[952,70,1039,66,"getM"],[952,74,1039,70],[952,75,1039,71],[952,76,1039,72],[952,78,1039,74],[953,10,1040,6,"tx"],[953,12,1040,8],[953,15,1040,11,"psbt"],[953,19,1040,15],[953,20,1040,16,"finalizeAllInputs"],[953,37,1040,33],[953,38,1040,34],[953,39,1040,35],[953,40,1040,36,"extractTransaction"],[953,58,1040,54],[953,59,1040,55],[953,60,1040,56],[954,8,1041,4],[955,8,1042,4],[955,15,1042,11],[956,10,1042,13,"tx"],[956,12,1042,15],[956,14,1042,13,"tx"],[956,16,1042,15],[957,10,1042,17,"inputs"],[957,16,1042,23],[957,18,1042,17,"inputs"],[957,24,1042,23],[958,10,1042,25,"outputs"],[958,17,1042,32],[958,19,1042,25,"outputs"],[958,26,1042,32],[959,10,1042,34,"fee"],[959,13,1042,37],[959,15,1042,34,"fee"],[959,18,1042,37],[960,10,1042,39,"psbt"],[960,14,1042,43],[960,16,1042,39,"psbt"],[961,8,1042,44],[961,9,1042,45],[962,6,1043,2],[963,4,1043,3],[964,6,1043,3,"key"],[964,9,1043,3],[965,6,1043,3,"value"],[965,11,1043,3],[965,13,1066,2],[965,22,1066,2,"prepareForSerialization"],[965,45,1066,25,"prepareForSerialization"],[965,46,1066,25],[965,48,1066,28],[966,8,1067,4],[967,8,1068,4],[968,8,1069,4],[968,15,1069,11],[968,19,1069,15],[968,20,1069,16,"_nodes"],[968,26,1069,22],[969,6,1070,2],[970,4,1070,3],[971,6,1070,3,"key"],[971,9,1070,3],[972,6,1070,3,"value"],[972,11,1070,3],[972,13,1081,2],[972,22,1081,2,"allowSend"],[972,31,1081,11,"allowSend"],[972,32,1081,11],[972,34,1081,14],[973,8,1082,4],[973,15,1082,11],[973,19,1082,15],[974,6,1083,2],[975,4,1083,3],[976,6,1083,3,"key"],[976,9,1083,3],[977,6,1083,3,"value"],[977,11,1083,3],[977,13,1085,2],[977,22,1085,2,"allowSignVerifyMessage"],[977,44,1085,24,"allowSignVerifyMessage"],[977,45,1085,24],[977,47,1085,27],[978,8,1086,4],[978,15,1086,11],[978,20,1086,16],[979,6,1087,2],[980,4,1087,3],[981,6,1087,3,"key"],[981,9,1087,3],[982,6,1087,3,"value"],[982,11,1087,3],[983,8,1087,3],[983,12,1087,3,"_fetchUtxo"],[983,22,1087,3],[983,29,1087,3,"_asyncToGenerator2"],[983,47,1087,3],[983,48,1087,3,"default"],[983,55,1087,3],[983,57,1089,2],[983,70,1089,20],[984,10,1090,4],[984,16,1090,4,"_superPropGet"],[984,29,1090,4],[984,30,1090,4,"MultisigHDWallet"],[984,46,1090,4],[985,10,1091,4],[986,10,1092,4],[986,14,1092,10,"txhexes"],[986,21,1092,17],[986,30,1092,26,"BlueElectrum"],[986,42,1092,38],[986,43,1092,39,"multiGetTransactionByTxid"],[986,68,1092,64],[986,69,1093,6],[986,73,1093,10],[986,74,1093,11,"getUtxo"],[986,81,1093,18],[986,82,1093,19],[986,86,1093,23],[986,87,1093,24],[986,88,1093,25,"map"],[986,91,1093,28],[986,92,1093,29],[986,102,1093,29,"x"],[986,103,1093,30],[987,12,1093,30],[987,19,1093,34,"x"],[987,20,1093,35],[987,21,1093,36,"txid"],[987,25,1093,40],[988,10,1093,40],[988,12,1093,41],[988,14,1094,6],[988,19,1095,4],[988,20,1095,5],[989,10,1097,4],[989,14,1097,10,"newUtxos"],[989,22,1097,18],[989,25,1097,21],[989,27,1097,23],[990,10,1098,4],[990,15,1098,9],[990,19,1098,15,"u"],[990,20,1098,16],[990,24,1098,20],[990,28,1098,24],[990,29,1098,25,"getUtxo"],[990,36,1098,32],[990,37,1098,33],[990,41,1098,37],[990,42,1098,38],[990,44,1098,40],[991,12,1099,6],[991,16,1099,10,"txhexes"],[991,23,1099,17],[991,24,1099,18,"u"],[991,25,1099,19],[991,26,1099,20,"txid"],[991,30,1099,24],[991,31,1099,25],[991,33,1099,27,"u"],[991,34,1099,28],[991,35,1099,29,"txhex"],[991,40,1099,34],[991,43,1099,37,"txhexes"],[991,50,1099,44],[991,51,1099,45,"u"],[991,52,1099,46],[991,53,1099,47,"txid"],[991,57,1099,51],[991,58,1099,52],[992,12,1100,6,"newUtxos"],[992,20,1100,14],[992,21,1100,15,"push"],[992,25,1100,19],[992,26,1100,20,"u"],[992,27,1100,21],[992,28,1100,22],[993,10,1101,4],[994,10,1103,4],[994,14,1103,8],[994,15,1103,9,"_utxo"],[994,20,1103,14],[994,23,1103,17,"newUtxos"],[994,31,1103,25],[995,8,1104,2],[995,9,1104,3],[996,8,1104,3],[996,17,1089,8,"fetchUtxo"],[996,26,1089,17,"fetchUtxo"],[996,27,1089,17],[997,10,1089,17],[997,17,1089,17,"_fetchUtxo"],[997,27,1089,17],[997,28,1089,17,"apply"],[997,33,1089,17],[997,40,1089,17,"arguments"],[997,49,1089,17],[998,8,1089,17],[999,8,1089,17],[999,15,1089,8,"fetchUtxo"],[999,24,1089,17],[1000,6,1089,17],[1001,4,1089,17],[1002,6,1089,17,"key"],[1002,9,1089,17],[1003,6,1089,17,"value"],[1003,11,1089,17],[1003,13,1106,2],[1003,22,1106,2,"getID"],[1003,27,1106,7,"getID"],[1003,28,1106,7],[1003,30,1106,10],[1004,8,1107,4],[1004,12,1107,10,"string2hash"],[1004,23,1107,21],[1004,26,1107,24],[1004,30,1107,24,"_toConsumableArray2"],[1004,49,1107,24],[1004,50,1107,24,"default"],[1004,57,1107,24],[1004,59,1107,28],[1004,63,1107,32],[1004,64,1107,33,"_cosigners"],[1004,74,1107,43],[1004,76,1107,45,"sort"],[1004,80,1107,49],[1004,81,1107,50],[1004,82,1107,51],[1004,83,1107,52,"join"],[1004,87,1107,56],[1004,88,1107,57],[1004,91,1107,60],[1004,92,1107,61],[1004,95,1107,64],[1004,98,1107,67],[1004,101,1107,70],[1004,105,1107,70,"_toConsumableArray2"],[1004,124,1107,70],[1004,125,1107,70,"default"],[1004,132,1107,70],[1004,134,1107,74],[1004,138,1107,78],[1004,139,1107,79,"_cosignersFingerprints"],[1004,161,1107,101],[1004,163,1107,103,"sort"],[1004,167,1107,107],[1004,168,1107,108],[1004,169,1107,109],[1004,170,1107,110,"join"],[1004,174,1107,114],[1004,175,1107,115],[1004,178,1107,118],[1004,179,1107,119],[1005,8,1108,4],[1005,15,1108,11],[1005,19,1108,11,"createHash"],[1005,38,1108,21],[1005,40,1108,22],[1005,48,1108,30],[1005,49,1108,31],[1005,50,1108,32,"update"],[1005,56,1108,38],[1005,57,1108,39,"string2hash"],[1005,68,1108,50],[1005,69,1108,51],[1005,70,1108,52,"digest"],[1005,76,1108,58],[1005,77,1108,59],[1005,78,1108,60],[1005,79,1108,61,"toString"],[1005,87,1108,69],[1005,88,1108,70],[1005,93,1108,75],[1005,94,1108,76],[1006,6,1109,2],[1007,4,1109,3],[1008,6,1109,3,"key"],[1008,9,1109,3],[1009,6,1109,3,"value"],[1009,11,1109,3],[1009,13,1111,2],[1009,22,1111,2,"calculateFeeFromPsbt"],[1009,42,1111,22,"calculateFeeFromPsbt"],[1009,43,1111,23,"psbt"],[1009,47,1111,33],[1009,49,1111,35],[1010,8,1112,4],[1010,12,1112,8,"goesIn"],[1010,18,1112,14],[1010,21,1112,17],[1010,22,1112,18],[1011,8,1113,4],[1011,12,1113,10,"cacheUtxoAmounts"],[1011,28,1113,53],[1011,31,1113,56],[1011,32,1113,57],[1011,33,1113,58],[1012,8,1114,4],[1012,13,1114,9],[1012,17,1114,15,"inp"],[1012,20,1114,18],[1012,24,1114,22,"psbt"],[1012,28,1114,26],[1012,29,1114,27,"data"],[1012,33,1114,31],[1012,34,1114,32,"inputs"],[1012,40,1114,38],[1012,42,1114,40],[1013,10,1115,6],[1013,14,1115,10,"inp"],[1013,17,1115,13],[1013,18,1115,14,"witnessUtxo"],[1013,29,1115,25],[1013,33,1115,29,"inp"],[1013,36,1115,32],[1013,37,1115,33,"witnessUtxo"],[1013,48,1115,44],[1013,49,1115,45,"value"],[1013,54,1115,50],[1013,56,1115,52],[1014,12,1116,8],[1015,12,1117,8,"goesIn"],[1015,18,1117,14],[1015,22,1117,18,"Number"],[1015,28,1117,24],[1015,29,1117,25,"inp"],[1015,32,1117,28],[1015,33,1117,29,"witnessUtxo"],[1015,44,1117,40],[1015,45,1117,41,"value"],[1015,50,1117,46],[1015,51,1117,47],[1016,10,1118,6],[1016,11,1118,7],[1016,17,1118,13],[1016,21,1118,17,"inp"],[1016,24,1118,20],[1016,25,1118,21,"nonWitnessUtxo"],[1016,39,1118,35],[1016,41,1118,37],[1017,12,1119,8],[1018,12,1120,8],[1019,12,1121,8],[1019,16,1121,14,"inputTx"],[1019,23,1121,21],[1019,26,1121,24,"bitcoin"],[1019,33,1121,31],[1019,34,1121,32,"Transaction"],[1019,45,1121,43],[1019,46,1121,44,"fromBuffer"],[1019,56,1121,54],[1019,57,1121,55,"inp"],[1019,60,1121,58],[1019,61,1121,59,"nonWitnessUtxo"],[1019,75,1121,73],[1019,76,1121,74],[1020,12,1122,8],[1020,16,1122,12,"index"],[1020,21,1122,17],[1020,24,1122,20],[1020,25,1122,21],[1021,12,1123,8],[1021,17,1123,13],[1021,21,1123,19,"out"],[1021,24,1123,22],[1021,28,1123,26,"inputTx"],[1021,35,1123,33],[1021,36,1123,34,"outs"],[1021,40,1123,38],[1021,42,1123,40],[1022,14,1124,10,"cacheUtxoAmounts"],[1022,30,1124,26],[1022,31,1124,27,"inputTx"],[1022,38,1124,34],[1022,39,1124,35,"getId"],[1022,44,1124,40],[1022,45,1124,41],[1022,46,1124,42],[1022,49,1124,45],[1022,52,1124,48],[1022,55,1124,51,"index"],[1022,60,1124,56],[1022,61,1124,57],[1022,64,1124,60,"Number"],[1022,70,1124,66],[1022,71,1124,67,"out"],[1022,74,1124,70],[1022,75,1124,71,"value"],[1022,80,1124,76],[1022,81,1124,77],[1023,14,1125,10,"index"],[1023,19,1125,15],[1023,21,1125,17],[1024,12,1126,8],[1025,10,1127,6],[1026,8,1128,4],[1027,8,1130,4],[1027,12,1130,8,"goesIn"],[1027,18,1130,14],[1027,23,1130,19],[1027,24,1130,20],[1027,26,1130,22],[1028,10,1131,6],[1029,10,1132,6],[1030,10,1133,6],[1030,15,1133,11],[1030,19,1133,17,"inp"],[1030,23,1133,20],[1030,27,1133,24,"psbt"],[1030,31,1133,28],[1030,32,1133,29,"txInputs"],[1030,40,1133,37],[1030,42,1133,39],[1031,12,1134,8],[1031,16,1134,14,"cacheKey"],[1031,24,1134,22],[1031,27,1134,25,"Buffer"],[1031,33,1134,31],[1031,34,1134,32,"from"],[1031,38,1134,36],[1031,39,1134,37,"inp"],[1031,43,1134,40],[1031,44,1134,41,"hash"],[1031,48,1134,45],[1031,49,1134,46],[1031,50,1134,47,"reverse"],[1031,57,1134,54],[1031,58,1134,55],[1031,59,1134,56],[1031,60,1134,57,"toString"],[1031,68,1134,65],[1031,69,1134,66],[1031,74,1134,71],[1031,75,1134,72],[1031,78,1134,75],[1031,81,1134,78],[1031,84,1134,81,"inp"],[1031,88,1134,84],[1031,89,1134,85,"index"],[1031,94,1134,90],[1032,12,1135,8],[1032,16,1135,12,"cacheUtxoAmounts"],[1032,32,1135,28],[1032,33,1135,29,"cacheKey"],[1032,41,1135,37],[1032,42,1135,38],[1032,44,1135,40,"goesIn"],[1032,50,1135,46],[1032,54,1135,50,"cacheUtxoAmounts"],[1032,70,1135,66],[1032,71,1135,67,"cacheKey"],[1032,79,1135,75],[1032,80,1135,76],[1033,10,1136,6],[1034,8,1137,4],[1035,8,1139,4],[1035,12,1139,8,"goesOut"],[1035,19,1139,15],[1035,22,1139,18],[1035,23,1139,19],[1036,8,1140,4],[1036,13,1140,9],[1036,17,1140,15,"output"],[1036,23,1140,21],[1036,27,1140,25,"psbt"],[1036,31,1140,29],[1036,32,1140,30,"txOutputs"],[1036,41,1140,39],[1036,43,1140,41],[1037,10,1141,6,"goesOut"],[1037,17,1141,13],[1037,21,1141,17,"Number"],[1037,27,1141,23],[1037,28,1141,24,"output"],[1037,34,1141,30],[1037,35,1141,31,"value"],[1037,40,1141,36],[1037,41,1141,37],[1038,8,1142,4],[1039,8,1144,4],[1039,15,1144,11,"goesIn"],[1039,21,1144,17],[1039,24,1144,20,"goesOut"],[1039,31,1144,27],[1040,6,1145,2],[1041,4,1145,3],[1042,6,1145,3,"key"],[1042,9,1145,3],[1043,6,1145,3,"value"],[1043,11,1145,3],[1043,13,1147,2],[1043,22,1147,2,"calculateHowManySignaturesWeHaveFromPsbt"],[1043,62,1147,42,"calculateHowManySignaturesWeHaveFromPsbt"],[1043,63,1147,43,"psbt"],[1043,67,1147,53],[1043,69,1147,55],[1044,8,1148,4],[1044,12,1148,8,"sigsHave"],[1044,20,1148,16],[1044,23,1148,19],[1044,24,1148,20],[1045,8,1149,4],[1045,13,1149,9],[1045,17,1149,15,"inp"],[1045,20,1149,18],[1045,24,1149,22,"psbt"],[1045,28,1149,26],[1045,29,1149,27,"data"],[1045,33,1149,31],[1045,34,1149,32,"inputs"],[1045,40,1149,38],[1045,42,1149,40],[1046,10,1149,40],[1046,14,1149,40,"_inp$partialSig"],[1046,29,1149,40],[1047,10,1150,6,"sigsHave"],[1047,18,1150,14],[1047,21,1150,17,"Math"],[1047,25,1150,21],[1047,26,1150,22,"max"],[1047,29,1150,25],[1047,30,1150,26,"sigsHave"],[1047,38,1150,34],[1047,40,1150,36],[1047,42,1150,36,"_inp$partialSig"],[1047,57,1150,36],[1047,60,1150,36,"inp"],[1047,63,1150,39],[1047,64,1150,40,"partialSig"],[1047,74,1150,50],[1047,95,1150,36,"_inp$partialSig"],[1047,110,1150,36],[1047,111,1150,52,"length"],[1047,117,1150,58],[1047,122,1150,62],[1047,123,1150,63],[1047,124,1150,64],[1048,10,1151,6],[1048,14,1151,10,"inp"],[1048,17,1151,13],[1048,18,1151,14,"finalScriptSig"],[1048,32,1151,28],[1048,36,1151,32,"inp"],[1048,39,1151,35],[1048,40,1151,36,"finalScriptWitness"],[1048,58,1151,54],[1048,60,1151,56,"sigsHave"],[1048,68,1151,64],[1048,71,1151,67],[1048,75,1151,71],[1048,76,1151,72,"getM"],[1048,80,1151,76],[1048,81,1151,77],[1048,82,1151,78],[1048,83,1151,79],[1048,84,1151,80],[1049,10,1152,6],[1050,8,1153,4],[1051,8,1155,4],[1051,15,1155,11,"sigsHave"],[1051,23,1155,19],[1052,6,1156,2],[1054,6,1158,2],[1055,0,1159,0],[1056,0,1160,0],[1057,0,1161,0],[1058,4,1158,2],[1059,6,1158,2,"key"],[1059,9,1158,2],[1060,6,1158,2,"value"],[1060,11,1158,2],[1060,13,1162,2],[1060,22,1162,2,"cosignPsbt"],[1060,32,1162,12,"cosignPsbt"],[1060,33,1162,13,"psbt"],[1060,37,1162,23],[1060,39,1162,54],[1061,8,1163,4],[1061,13,1163,9],[1061,17,1163,13,"cc"],[1061,19,1163,15],[1061,22,1163,18],[1061,23,1163,19],[1061,25,1163,21,"cc"],[1061,27,1163,23],[1061,30,1163,26,"psbt"],[1061,34,1163,30],[1061,35,1163,31,"inputCount"],[1061,45,1163,41],[1061,47,1163,43,"cc"],[1061,49,1163,45],[1061,51,1163,47],[1061,53,1163,49],[1062,10,1164,6],[1062,19,1164,6,"_ref9"],[1062,24,1164,6],[1062,28,1164,46],[1062,32,1164,50],[1062,33,1164,51,"_cosigners"],[1062,43,1164,61],[1062,44,1164,62,"entries"],[1062,51,1164,69],[1062,52,1164,70],[1062,53,1164,71],[1062,55,1164,73],[1063,12,1164,73],[1063,16,1164,73,"_ref0"],[1063,21,1164,73],[1063,28,1164,73,"_slicedToArray2"],[1063,43,1164,73],[1063,44,1164,73,"default"],[1063,51,1164,73],[1063,53,1164,73,"_ref9"],[1063,58,1164,73],[1064,12,1164,73],[1064,16,1164,18,"cosignerIndex"],[1064,29,1164,31],[1064,32,1164,31,"_ref0"],[1064,37,1164,31],[1065,12,1164,31],[1065,16,1164,33,"cosigner"],[1065,24,1164,41],[1065,27,1164,41,"_ref0"],[1065,32,1164,41],[1066,12,1165,8],[1066,16,1165,12,"MultisigHDWallet"],[1066,32,1165,28],[1066,33,1165,29,"isXpubString"],[1066,45,1165,41],[1066,46,1165,42,"cosigner"],[1066,54,1165,50],[1066,55,1165,51],[1066,57,1165,53],[1067,12,1167,8],[1067,16,1167,12,"hdRoot"],[1067,22,1167,18],[1068,12,1168,8],[1068,16,1168,12,"MultisigHDWallet"],[1068,32,1168,28],[1068,33,1168,29,"isXprvString"],[1068,45,1168,41],[1068,46,1168,42,"cosigner"],[1068,54,1168,50],[1068,55,1168,51],[1068,57,1168,53],[1069,14,1169,10],[1069,18,1169,16,"xprv"],[1069,22,1169,20],[1069,25,1169,23,"MultisigHDWallet"],[1069,41,1169,39],[1069,42,1169,40,"convertMultisigXprvToRegularXprv"],[1069,74,1169,72],[1069,75,1169,73,"cosigner"],[1069,83,1169,81],[1069,84,1169,82],[1070,14,1170,10,"hdRoot"],[1070,20,1170,16],[1070,23,1170,19,"bip32"],[1070,28,1170,24],[1070,29,1170,25,"fromBase58"],[1070,39,1170,35],[1070,40,1170,36,"xprv"],[1070,44,1170,40],[1070,45,1170,41],[1071,12,1171,8],[1071,13,1171,9],[1071,19,1171,15],[1072,14,1172,10],[1072,18,1172,16,"passphrase"],[1072,28,1172,26],[1072,31,1172,29],[1072,35,1172,33],[1072,36,1172,34,"_cosignersPassphrases"],[1072,57,1172,55],[1072,58,1172,56,"cosignerIndex"],[1072,71,1172,69],[1072,72,1172,70],[1073,14,1173,10],[1073,18,1173,16,"seed"],[1073,22,1173,20],[1073,25,1173,23,"cosigner"],[1073,33,1173,31],[1073,34,1173,32,"startsWith"],[1073,44,1173,42],[1073,45,1173,43,"ELECTRUM_SEED_PREFIX"],[1073,65,1173,63],[1073,66,1173,64],[1073,69,1174,14,"MultisigHDWallet"],[1073,85,1174,30],[1073,86,1174,31,"convertElectrumMnemonicToSeed"],[1073,115,1174,60],[1073,116,1174,61,"cosigner"],[1073,124,1174,69],[1073,126,1174,71,"passphrase"],[1073,136,1174,81],[1073,137,1174,82],[1073,140,1175,14,"bip39"],[1073,145,1175,19],[1073,146,1175,20,"mnemonicToSeedSync"],[1073,164,1175,38],[1073,165,1175,39,"cosigner"],[1073,173,1175,47],[1073,175,1175,49,"passphrase"],[1073,185,1175,59],[1073,186,1175,60],[1074,14,1176,10,"hdRoot"],[1074,20,1176,16],[1074,23,1176,19,"bip32"],[1074,28,1176,24],[1074,29,1176,25,"fromSeed"],[1074,37,1176,33],[1074,38,1176,34,"seed"],[1074,42,1176,38],[1074,43,1176,39],[1075,12,1177,8],[1076,12,1179,8],[1076,16,1179,12],[1077,14,1180,10,"psbt"],[1077,18,1180,14],[1077,19,1180,15,"signInputHD"],[1077,30,1180,26],[1077,31,1180,27,"cc"],[1077,33,1180,29],[1077,35,1180,31,"hdRoot"],[1077,41,1180,37],[1077,42,1180,38],[1078,12,1181,8],[1078,13,1181,9],[1078,14,1181,10],[1078,21,1181,17,"_"],[1078,22,1181,18],[1078,24,1181,20],[1078,25,1181,21],[1078,26,1181,22],[1078,27,1181,23],[1080,12,1183,8],[1080,16,1183,12],[1080,17,1183,13,"psbt"],[1080,21,1183,17],[1080,22,1183,18,"inputHasHDKey"],[1080,35,1183,31],[1080,36,1183,32,"cc"],[1080,38,1183,34],[1080,40,1183,36,"hdRoot"],[1080,46,1183,42],[1080,47,1183,43],[1080,49,1183,45],[1081,14,1184,10],[1082,14,1185,10],[1083,14,1186,10],[1084,14,1187,10],[1085,14,1188,10],[1085,19,1188,15],[1085,23,1188,21,"derivation"],[1085,33,1188,31],[1085,37,1188,35,"psbt"],[1085,41,1188,39],[1085,42,1188,40,"data"],[1085,46,1188,44],[1085,47,1188,45,"inputs"],[1085,53,1188,51],[1085,54,1188,52,"cc"],[1085,56,1188,54],[1085,57,1188,55],[1085,58,1188,56,"bip32Derivation"],[1085,73,1188,71],[1085,77,1188,75],[1085,79,1188,77],[1085,81,1188,79],[1086,16,1189,12],[1087,16,1190,12],[1088,16,1191,12],[1089,16,1192,12],[1090,16,1193,12],[1090,20,1193,18,"splt"],[1090,24,1193,22],[1090,27,1193,25,"derivation"],[1090,37,1193,35],[1090,38,1193,36,"path"],[1090,42,1193,40],[1090,43,1193,41,"split"],[1090,48,1193,46],[1090,49,1193,47],[1090,52,1193,50],[1090,53,1193,51],[1091,16,1194,12],[1091,20,1194,18,"internal"],[1091,28,1194,26],[1091,31,1194,29],[1091,32,1194,30,"splt"],[1091,36,1194,34],[1091,37,1194,35,"splt"],[1091,41,1194,39],[1091,42,1194,40,"length"],[1091,48,1194,46],[1091,51,1194,49],[1091,52,1194,50],[1091,53,1194,51],[1092,16,1195,12],[1092,20,1195,18,"index"],[1092,25,1195,23],[1092,28,1195,26],[1092,29,1195,27,"splt"],[1092,33,1195,31],[1092,34,1195,32,"splt"],[1092,38,1195,36],[1092,39,1195,37,"length"],[1092,45,1195,43],[1092,48,1195,46],[1092,49,1195,47],[1092,50,1195,48],[1093,16,1197,12],[1093,20,1197,18,"path"],[1093,24,1197,22],[1093,27,1198,14,"hdRoot"],[1093,33,1198,20],[1093,34,1198,21,"depth"],[1093,39,1198,26],[1093,44,1198,31],[1093,45,1198,32],[1093,48,1199,18],[1093,52,1199,22],[1093,53,1199,23,"getCustomDerivationPathForCosigner"],[1093,87,1199,57],[1093,88,1199,58,"cosignerIndex"],[1093,101,1199,71],[1093,104,1199,74],[1093,105,1199,75],[1093,106,1199,76],[1093,109,1199,79],[1093,113,1199,83,"internal"],[1093,121,1199,91],[1093,124,1199,94],[1093,125,1199,95],[1093,128,1199,98],[1093,129,1199,99],[1093,133,1199,103,"index"],[1093,138,1199,108],[1093,140,1199,110],[1093,143,1200,18],[1093,146,1200,21,"internal"],[1093,154,1200,29],[1093,157,1200,32],[1093,158,1200,33],[1093,161,1200,36],[1093,162,1200,37],[1093,166,1200,41,"index"],[1093,171,1200,46],[1093,173,1200,48],[1094,16,1201,12],[1095,16,1202,12],[1096,16,1203,12],[1096,20,1203,18,"child"],[1096,25,1203,23],[1096,28,1203,26,"hdRoot"],[1096,34,1203,32],[1096,35,1203,33,"derivePath"],[1096,45,1203,43],[1096,46,1203,44,"path"],[1096,50,1203,48],[1096,51,1203,49],[1097,16,1204,12],[1097,20,1204,16,"child"],[1097,25,1204,21],[1097,26,1204,22,"privateKey"],[1097,36,1204,32],[1097,40,1204,36,"psbt"],[1097,44,1204,40],[1097,45,1204,41,"inputHasPubkey"],[1097,59,1204,55],[1097,60,1204,56,"cc"],[1097,62,1204,58],[1097,64,1204,60,"child"],[1097,69,1204,65],[1097,70,1204,66,"publicKey"],[1097,79,1204,75],[1097,80,1204,76],[1097,82,1204,78],[1098,18,1205,14],[1098,22,1205,20,"keyPair"],[1098,29,1205,27],[1098,32,1205,30,"ECPair"],[1098,38,1205,36],[1098,39,1205,37,"fromPrivateKey"],[1098,53,1205,51],[1098,54,1205,52,"child"],[1098,59,1205,57],[1098,60,1205,58,"privateKey"],[1098,70,1205,68],[1098,71,1205,69],[1099,18,1206,14],[1099,22,1206,18],[1100,20,1207,16,"psbt"],[1100,24,1207,20],[1100,25,1207,21,"signInput"],[1100,34,1207,30],[1100,35,1207,31,"cc"],[1100,37,1207,33],[1100,39,1207,35,"keyPair"],[1100,46,1207,42],[1100,47,1207,43],[1101,18,1208,14],[1101,19,1208,15],[1101,20,1208,16],[1101,27,1208,23,"_"],[1101,28,1208,24],[1101,30,1208,26],[1101,31,1208,27],[1102,16,1209,12],[1103,14,1210,10],[1104,12,1211,8],[1105,10,1212,6],[1106,8,1213,4],[1107,8,1215,4],[1107,12,1215,8],[1107,16,1215,12],[1107,17,1215,13,"calculateHowManySignaturesWeHaveFromPsbt"],[1107,57,1215,53],[1107,58,1215,54,"psbt"],[1107,62,1215,58],[1107,63,1215,59],[1107,67,1215,63],[1107,71,1215,67],[1107,72,1215,68,"getM"],[1107,76,1215,72],[1107,77,1215,73],[1107,78,1215,74],[1107,80,1215,76],[1108,10,1216,6],[1108,14,1216,12,"tx"],[1108,16,1216,14],[1108,19,1216,17,"psbt"],[1108,23,1216,21],[1108,24,1216,22,"finalizeAllInputs"],[1108,41,1216,39],[1108,42,1216,40],[1108,43,1216,41],[1108,44,1216,42,"extractTransaction"],[1108,62,1216,60],[1108,63,1216,61],[1108,64,1216,62],[1109,10,1217,6],[1109,17,1217,13],[1110,12,1217,15,"tx"],[1110,14,1217,17],[1110,16,1217,15,"tx"],[1111,10,1217,18],[1111,11,1217,19],[1112,8,1218,4],[1113,8,1220,4],[1113,15,1220,11],[1114,10,1220,13,"tx"],[1114,12,1220,15],[1114,14,1220,17],[1115,8,1220,23],[1115,9,1220,24],[1116,6,1221,2],[1118,6,1223,2],[1119,0,1224,0],[1120,0,1225,0],[1121,4,1223,2],[1122,6,1223,2,"key"],[1122,9,1223,2],[1123,6,1223,2,"value"],[1123,11,1223,2],[1123,13,1226,2],[1123,22,1226,2,"replaceCosignerXpubWithSeed"],[1123,49,1226,29,"replaceCosignerXpubWithSeed"],[1123,50,1226,30,"externalIndex"],[1123,63,1226,51],[1123,65,1226,53,"mnemonic"],[1123,73,1226,69],[1123,75,1226,71,"passphrase"],[1123,85,1226,90],[1123,87,1226,92],[1124,8,1227,4],[1124,12,1227,10,"index"],[1124,17,1227,15],[1124,20,1227,18,"externalIndex"],[1124,33,1227,31],[1124,36,1227,34],[1124,37,1227,35],[1125,8,1228,4],[1125,12,1228,10,"fingerprint"],[1125,23,1228,21],[1125,26,1228,24],[1125,30,1228,28],[1125,31,1228,29,"_cosignersFingerprints"],[1125,53,1228,51],[1125,54,1228,52,"index"],[1125,59,1228,57],[1125,60,1228,58],[1126,8,1229,4],[1126,12,1229,8],[1126,13,1229,9,"MultisigHDWallet"],[1126,29,1229,25],[1126,30,1229,26,"isXpubValid"],[1126,41,1229,37],[1126,42,1229,38],[1126,46,1229,42],[1126,47,1229,43,"_cosigners"],[1126,57,1229,53],[1126,58,1229,54,"index"],[1126,63,1229,59],[1126,64,1229,60],[1126,65,1229,61],[1126,67,1229,63],[1126,73,1229,69],[1126,77,1229,73,"Error"],[1126,82,1229,78],[1126,83,1229,79],[1126,124,1229,120],[1126,125,1229,121],[1127,8,1230,4],[1127,12,1230,8],[1127,13,1230,9,"bip39"],[1127,18,1230,14],[1127,19,1230,15,"validateMnemonic"],[1127,35,1230,31],[1127,36,1230,32,"mnemonic"],[1127,44,1230,40],[1127,45,1230,41],[1127,47,1230,43],[1127,53,1230,49],[1127,57,1230,53,"Error"],[1127,62,1230,58],[1127,63,1230,59],[1127,92,1230,88],[1127,93,1230,89],[1128,8,1231,4],[1128,12,1231,8,"fingerprint"],[1128,23,1231,19],[1128,28,1231,24,"MultisigHDWallet"],[1128,44,1231,40],[1128,45,1231,41,"mnemonicToFingerprint"],[1128,66,1231,62],[1128,67,1231,63,"mnemonic"],[1128,75,1231,71],[1128,77,1231,73,"passphrase"],[1128,87,1231,83],[1128,88,1231,84],[1128,90,1231,86],[1129,10,1232,6],[1129,16,1232,12],[1129,20,1232,16,"Error"],[1129,25,1232,21],[1129,26,1232,22],[1129,64,1232,60],[1129,65,1232,61],[1130,8,1233,4],[1131,8,1234,4],[1131,12,1234,8],[1131,13,1234,9,"_cosigners"],[1131,23,1234,19],[1131,24,1234,20,"index"],[1131,29,1234,25],[1131,30,1234,26],[1131,33,1234,29,"mnemonic"],[1131,41,1234,37],[1131,42,1234,38,"trim"],[1131,46,1234,42],[1131,47,1234,43],[1131,48,1234,44],[1132,8,1235,4],[1132,12,1235,8],[1132,13,1235,9,"_cosignersPassphrases"],[1132,34,1235,30],[1132,35,1235,31,"index"],[1132,40,1235,36],[1132,41,1235,37],[1132,44,1235,40,"passphrase"],[1132,54,1235,50],[1132,58,1235,54,"undefined"],[1132,67,1235,63],[1133,6,1236,2],[1135,6,1238,2],[1136,0,1239,0],[1137,0,1240,0],[1138,4,1238,2],[1139,6,1238,2,"key"],[1139,9,1238,2],[1140,6,1238,2,"value"],[1140,11,1238,2],[1140,13,1241,2],[1140,22,1241,2,"replaceCosignerSeedWithXpub"],[1140,49,1241,29,"replaceCosignerSeedWithXpub"],[1140,50,1241,30,"externalIndex"],[1140,63,1241,51],[1140,65,1241,53],[1141,8,1242,4],[1141,12,1242,10,"index"],[1141,17,1242,15],[1141,20,1242,18,"externalIndex"],[1141,33,1242,31],[1141,36,1242,34],[1141,37,1242,35],[1142,8,1243,4],[1142,12,1243,10,"mnemonics"],[1142,21,1243,19],[1142,24,1243,22],[1142,28,1243,26],[1142,29,1243,27,"_cosigners"],[1142,39,1243,37],[1142,40,1243,38,"index"],[1142,45,1243,43],[1142,46,1243,44],[1143,8,1244,4],[1143,12,1244,8],[1143,13,1244,9,"bip39"],[1143,18,1244,14],[1143,19,1244,15,"validateMnemonic"],[1143,35,1244,31],[1143,36,1244,32,"mnemonics"],[1143,45,1244,41],[1143,46,1244,42],[1143,48,1244,44],[1143,54,1244,50],[1143,58,1244,54,"Error"],[1143,63,1244,59],[1143,64,1244,60],[1143,121,1244,117],[1143,122,1244,118],[1144,8,1245,4],[1144,12,1245,10,"passphrase"],[1144,22,1245,20],[1144,25,1245,23],[1144,29,1245,27],[1144,30,1245,28,"_cosignersPassphrases"],[1144,51,1245,49],[1144,52,1245,50,"index"],[1144,57,1245,55],[1144,58,1245,56],[1145,8,1246,4],[1145,12,1246,10,"path"],[1145,16,1246,14],[1145,19,1246,17],[1145,23,1246,21],[1145,24,1246,22,"_cosignersCustomPaths"],[1145,45,1246,43],[1145,46,1246,44,"index"],[1145,51,1246,49],[1145,52,1246,50],[1145,56,1246,54],[1145,60,1246,58],[1145,61,1246,59,"_derivationPath"],[1145,76,1246,74],[1146,8,1247,4],[1146,12,1247,10,"xpub"],[1146,16,1247,14],[1146,19,1247,17],[1146,23,1247,21],[1146,24,1247,22,"convertXpubToMultisignatureXpub"],[1146,55,1247,53],[1146,56,1247,54,"MultisigHDWallet"],[1146,72,1247,70],[1146,73,1247,71,"seedToXpub"],[1146,83,1247,81],[1146,84,1247,82,"mnemonics"],[1146,93,1247,91],[1146,95,1247,93,"path"],[1146,99,1247,97],[1146,101,1247,99,"passphrase"],[1146,111,1247,109],[1146,112,1247,110],[1146,113,1247,111],[1147,8,1248,4],[1147,12,1248,8],[1147,13,1248,9,"_cosigners"],[1147,23,1248,19],[1147,24,1248,20,"index"],[1147,29,1248,25],[1147,30,1248,26],[1147,33,1248,29,"xpub"],[1147,37,1248,33],[1148,8,1249,4],[1148,12,1249,8],[1148,13,1249,9,"_cosignersPassphrases"],[1148,34,1249,30],[1148,35,1249,31,"index"],[1148,40,1249,36],[1148,41,1249,37],[1148,44,1249,40,"undefined"],[1148,53,1249,49],[1149,6,1250,2],[1150,4,1250,3],[1151,6,1250,3,"key"],[1151,9,1250,3],[1152,6,1250,3,"value"],[1152,11,1250,3],[1152,13,1252,2],[1152,22,1252,2,"deleteCosigner"],[1152,36,1252,16,"deleteCosigner"],[1152,37,1252,17,"fp"],[1152,39,1252,27],[1152,41,1252,29],[1153,8,1253,4],[1153,12,1253,10,"foundIndex"],[1153,22,1253,20],[1153,25,1253,23],[1153,29,1253,27],[1153,30,1253,28,"_cosignersFingerprints"],[1153,52,1253,50],[1153,53,1253,51,"indexOf"],[1153,60,1253,58],[1153,61,1253,59,"fp"],[1153,63,1253,61],[1153,64,1253,62],[1154,8,1254,4],[1154,12,1254,8,"foundIndex"],[1154,22,1254,18],[1154,27,1254,23],[1154,28,1254,24],[1154,29,1254,25],[1154,31,1254,27],[1154,37,1254,33],[1154,41,1254,37,"Error"],[1154,46,1254,42],[1154,47,1254,43],[1154,82,1254,78],[1154,83,1254,79],[1155,8,1256,4],[1155,12,1256,8],[1155,13,1256,9,"_cosignersFingerprints"],[1155,35,1256,31],[1155,38,1256,34],[1155,42,1256,38],[1155,43,1256,39,"_cosignersFingerprints"],[1155,65,1256,61],[1155,66,1256,62,"filter"],[1155,72,1256,68],[1155,73,1256,69],[1155,83,1256,70,"el"],[1155,85,1256,72],[1155,87,1256,74,"index"],[1155,92,1256,79],[1155,94,1256,84],[1156,10,1257,6],[1156,17,1257,13,"index"],[1156,22,1257,18],[1156,27,1257,23,"foundIndex"],[1156,37,1257,33],[1157,8,1258,4],[1157,9,1258,5],[1157,10,1258,6],[1158,8,1260,4],[1158,12,1260,8],[1158,13,1260,9,"_cosigners"],[1158,23,1260,19],[1158,26,1260,22],[1158,30,1260,26],[1158,31,1260,27,"_cosigners"],[1158,41,1260,37],[1158,42,1260,38,"filter"],[1158,48,1260,44],[1158,49,1260,45],[1158,59,1260,46,"el"],[1158,61,1260,48],[1158,63,1260,50,"index"],[1158,68,1260,55],[1158,70,1260,60],[1159,10,1261,6],[1159,17,1261,13,"index"],[1159,22,1261,18],[1159,27,1261,23,"foundIndex"],[1159,37,1261,33],[1160,8,1262,4],[1160,9,1262,5],[1160,10,1262,6],[1161,8,1264,4],[1161,12,1264,8],[1161,13,1264,9,"_cosignersCustomPaths"],[1161,34,1264,30],[1161,37,1264,33],[1161,41,1264,37],[1161,42,1264,38,"_cosignersCustomPaths"],[1161,63,1264,59],[1161,64,1264,60,"filter"],[1161,70,1264,66],[1161,71,1264,67],[1161,81,1264,68,"el"],[1161,83,1264,70],[1161,85,1264,72,"index"],[1161,90,1264,77],[1161,92,1264,82],[1162,10,1265,6],[1162,17,1265,13,"index"],[1162,22,1265,18],[1162,27,1265,23,"foundIndex"],[1162,37,1265,33],[1163,8,1266,4],[1163,9,1266,5],[1163,10,1266,6],[1164,8,1268,4],[1164,12,1268,8],[1164,13,1268,9,"_cosignersPassphrases"],[1164,34,1268,30],[1164,37,1268,33],[1164,41,1268,37],[1164,42,1268,38,"_cosignersPassphrases"],[1164,63,1268,59],[1164,64,1268,60,"filter"],[1164,70,1268,66],[1164,71,1268,67],[1164,81,1268,68,"el"],[1164,83,1268,70],[1164,85,1268,72,"index"],[1164,90,1268,77],[1164,92,1268,82],[1165,10,1269,6],[1165,17,1269,13,"index"],[1165,22,1269,18],[1165,27,1269,23,"foundIndex"],[1165,37,1269,33],[1166,8,1270,4],[1166,9,1270,5],[1166,10,1270,6],[1168,8,1272,4],[1169,0,1273,0],[1170,0,1274,0],[1171,0,1275,0],[1173,8,1277,4],[1174,6,1278,2],[1175,4,1278,3],[1176,6,1278,3,"key"],[1176,9,1278,3],[1177,6,1278,3,"value"],[1177,11,1278,3],[1177,13,1280,2],[1177,22,1280,2,"getFormat"],[1177,31,1280,11,"getFormat"],[1177,32,1280,11],[1177,34,1280,14],[1178,8,1281,4],[1178,12,1281,8],[1178,16,1281,12],[1178,17,1281,13,"isNativeSegwit"],[1178,31,1281,27],[1178,32,1281,28],[1178,33,1281,29],[1178,35,1281,31],[1178,42,1281,38,"MultisigHDWallet"],[1178,58,1281,54],[1178,59,1281,55,"FORMAT_P2WSH"],[1178,71,1281,67],[1179,8,1282,4],[1179,12,1282,8],[1179,16,1282,12],[1179,17,1282,13,"isWrappedSegwit"],[1179,32,1282,28],[1179,33,1282,29],[1179,34,1282,30],[1179,36,1282,32],[1179,43,1282,39,"MultisigHDWallet"],[1179,59,1282,55],[1179,60,1282,56,"FORMAT_P2SH_P2WSH"],[1179,77,1282,73],[1180,8,1283,4],[1180,12,1283,8],[1180,16,1283,12],[1180,17,1283,13,"isLegacy"],[1180,25,1283,21],[1180,26,1283,22],[1180,27,1283,23],[1180,29,1283,25],[1180,36,1283,32,"MultisigHDWallet"],[1180,52,1283,48],[1180,53,1283,49,"FORMAT_P2SH"],[1180,64,1283,60],[1181,8,1285,4],[1181,14,1285,10],[1181,18,1285,14,"Error"],[1181,23,1285,19],[1181,24,1285,20],[1181,50,1285,46],[1181,51,1285,47],[1182,6,1286,2],[1184,6,1288,2],[1185,0,1289,0],[1186,0,1290,0],[1187,0,1291,0],[1188,4,1288,2],[1189,6,1288,2,"key"],[1189,9,1288,2],[1190,6,1288,2,"value"],[1190,11,1288,2],[1190,13,1309,2],[1190,22,1309,2,"isSegwit"],[1190,30,1309,10,"isSegwit"],[1190,31,1309,10],[1190,33,1309,13],[1191,8,1310,4],[1191,15,1310,11],[1191,19,1310,15],[1191,20,1310,16,"isNativeSegwit"],[1191,34,1310,30],[1191,35,1310,31],[1191,36,1310,32],[1191,40,1310,36],[1191,44,1310,40],[1191,45,1310,41,"isWrappedSegwit"],[1191,60,1310,56],[1191,61,1310,57],[1191,62,1310,58],[1192,6,1311,2],[1193,4,1311,3],[1194,6,1311,3,"key"],[1194,9,1311,3],[1195,6,1311,3,"value"],[1195,11,1311,3],[1195,13,173,2],[1195,22,173,9,"isXpubValid"],[1195,33,173,20,"isXpubValid"],[1195,34,173,21,"key"],[1195,37,173,32],[1195,39,173,43],[1196,8,174,4],[1196,12,174,8,"xpub"],[1196,16,174,12],[1197,8,176,4],[1197,12,176,8],[1198,10,177,6],[1198,14,177,12,"tempWallet"],[1198,24,177,22],[1198,27,177,25],[1198,31,177,29,"MultisigHDWallet"],[1198,47,177,45],[1198,48,177,46],[1198,49,177,47],[1199,10,178,6,"xpub"],[1199,14,178,10],[1199,17,178,13,"tempWallet"],[1199,27,178,23],[1199,28,178,24,"_zpubToXpub"],[1199,39,178,35],[1199,40,178,36,"key"],[1199,43,178,39],[1199,44,178,40],[1200,10,179,6,"bip32"],[1200,15,179,11],[1200,16,179,12,"fromBase58"],[1200,26,179,22],[1200,27,179,23,"xpub"],[1200,31,179,27],[1200,32,179,28],[1201,10,180,6],[1201,17,180,13],[1201,21,180,17],[1202,8,181,4],[1202,9,181,5],[1202,10,181,6],[1202,17,181,13,"_"],[1202,18,181,14],[1202,20,181,16],[1202,21,181,17],[1203,8,183,4],[1203,15,183,11],[1203,20,183,16],[1204,6,184,2],[1205,4,184,3],[1206,6,184,3,"key"],[1206,9,184,3],[1207,6,184,3,"value"],[1207,11,184,3],[1207,13,186,2],[1207,22,186,9,"isXprvValid"],[1207,33,186,20,"isXprvValid"],[1207,34,186,21,"xprv"],[1207,38,186,33],[1207,40,186,44],[1208,8,187,4],[1208,12,187,8],[1209,10,188,6,"xprv"],[1209,14,188,10],[1209,17,188,13,"MultisigHDWallet"],[1209,33,188,29],[1209,34,188,30,"convertMultisigXprvToRegularXprv"],[1209,66,188,62],[1209,67,188,63,"xprv"],[1209,71,188,67],[1209,72,188,68],[1210,10,189,6,"bip32"],[1210,15,189,11],[1210,16,189,12,"fromBase58"],[1210,26,189,22],[1210,27,189,23,"xprv"],[1210,31,189,27],[1210,32,189,28],[1211,10,190,6],[1211,17,190,13],[1211,21,190,17],[1212,8,191,4],[1212,9,191,5],[1212,10,191,6],[1212,17,191,13,"_"],[1212,18,191,14],[1212,20,191,16],[1213,10,192,6],[1213,17,192,13],[1213,22,192,18],[1214,8,193,4],[1215,6,194,2],[1216,4,194,3],[1217,6,194,3,"key"],[1217,9,194,3],[1218,6,194,3,"value"],[1218,11,194,3],[1218,13,249,2],[1218,22,249,9,"convertMultisigXprvToRegularXprv"],[1218,54,249,41,"convertMultisigXprvToRegularXprv"],[1218,55,249,42,"Zprv"],[1218,59,249,54],[1218,61,249,56],[1219,8,250,4],[1219,12,250,8,"data"],[1219,16,250,12],[1219,19,250,15,"b58"],[1219,37,250,18],[1219,38,250,19,"decode"],[1219,44,250,25],[1219,45,250,26,"Zprv"],[1219,49,250,30],[1219,50,250,31],[1220,8,251,4,"data"],[1220,12,251,8],[1220,15,251,11,"data"],[1220,19,251,15],[1220,20,251,16,"slice"],[1220,25,251,21],[1220,26,251,22],[1220,27,251,23],[1220,28,251,24],[1221,8,252,4],[1221,15,252,11,"b58"],[1221,33,252,14],[1221,34,252,15,"encode"],[1221,40,252,21],[1221,41,252,22,"Buffer"],[1221,47,252,28],[1221,48,252,29,"concat"],[1221,54,252,35],[1221,55,252,36],[1221,56,252,37,"Buffer"],[1221,62,252,43],[1221,63,252,44,"from"],[1221,67,252,48],[1221,68,252,49],[1221,78,252,59],[1221,80,252,61],[1221,85,252,66],[1221,86,252,67],[1221,88,252,69,"data"],[1221,92,252,73],[1221,93,252,74],[1221,94,252,75],[1221,95,252,76],[1222,6,253,2],[1223,4,253,3],[1224,6,253,3,"key"],[1224,9,253,3],[1225,6,253,3,"value"],[1225,11,253,3],[1225,13,255,2],[1225,22,255,9,"convertXprvToXpub"],[1225,39,255,26,"convertXprvToXpub"],[1225,40,255,27,"xprv"],[1225,44,255,39],[1225,46,255,41],[1226,8,256,4],[1226,12,256,10,"restored"],[1226,20,256,18],[1226,23,256,21,"bip32"],[1226,28,256,26],[1226,29,256,27,"fromBase58"],[1226,39,256,37],[1226,40,256,38,"MultisigHDWallet"],[1226,56,256,54],[1226,57,256,55,"convertMultisigXprvToRegularXprv"],[1226,89,256,87],[1226,90,256,88,"xprv"],[1226,94,256,92],[1226,95,256,93],[1226,96,256,94],[1227,8,257,4],[1227,15,257,11,"restored"],[1227,23,257,19],[1227,24,257,20,"neutered"],[1227,32,257,28],[1227,33,257,29],[1227,34,257,30],[1227,35,257,31,"toBase58"],[1227,43,257,39],[1227,44,257,40],[1227,45,257,41],[1228,6,258,2],[1229,4,258,3],[1230,6,258,3,"key"],[1230,9,258,3],[1231,6,258,3,"value"],[1231,11,258,3],[1231,13,357,2],[1231,22,357,9,"seedToXpub"],[1231,32,357,19,"seedToXpub"],[1231,33,357,20,"mnemonic"],[1231,41,357,36],[1231,43,357,38,"path"],[1231,47,357,50],[1231,49,357,52,"passphrase"],[1231,59,357,71],[1231,61,357,81],[1232,8,358,4],[1232,12,358,8,"seed"],[1232,16,358,12],[1233,8,359,4],[1233,12,359,8,"mnemonic"],[1233,20,359,16],[1233,21,359,17,"startsWith"],[1233,31,359,27],[1233,32,359,28,"ELECTRUM_SEED_PREFIX"],[1233,52,359,48],[1233,53,359,49],[1233,55,359,51],[1234,10,360,6,"seed"],[1234,14,360,10],[1234,17,360,13,"MultisigHDWallet"],[1234,33,360,29],[1234,34,360,30,"convertElectrumMnemonicToSeed"],[1234,63,360,59],[1234,64,360,60,"mnemonic"],[1234,72,360,68],[1234,74,360,70,"passphrase"],[1234,84,360,80],[1234,85,360,81],[1235,8,361,4],[1235,9,361,5],[1235,15,361,11],[1236,10,362,6,"seed"],[1236,14,362,10],[1236,17,362,13,"bip39"],[1236,22,362,18],[1236,23,362,19,"mnemonicToSeedSync"],[1236,41,362,37],[1236,42,362,38,"mnemonic"],[1236,50,362,46],[1236,52,362,48,"passphrase"],[1236,62,362,58],[1236,63,362,59],[1237,8,363,4],[1238,8,365,4],[1238,12,365,10,"root"],[1238,16,365,14],[1238,19,365,17,"bip32"],[1238,24,365,22],[1238,25,365,23,"fromSeed"],[1238,33,365,31],[1238,34,365,32,"seed"],[1238,38,365,36],[1238,39,365,37],[1239,8,366,4],[1239,12,366,10,"child"],[1239,17,366,15],[1239,20,366,18,"root"],[1239,24,366,22],[1239,25,366,23,"derivePath"],[1239,35,366,33],[1239,36,366,34,"path"],[1239,40,366,38],[1239,41,366,39],[1239,42,366,40,"neutered"],[1239,50,366,48],[1239,51,366,49],[1239,52,366,50],[1240,8,367,4],[1240,15,367,11,"child"],[1240,20,367,16],[1240,21,367,17,"toBase58"],[1240,29,367,25],[1240,30,367,26],[1240,31,367,27],[1241,6,368,2],[1242,4,368,3],[1243,6,368,3,"key"],[1243,9,368,3],[1244,6,368,3,"value"],[1244,11,368,3],[1244,13,402,2],[1244,22,402,9,"isXpubString"],[1244,34,402,21,"isXpubString"],[1244,35,402,22,"xpub"],[1244,39,402,34],[1244,41,402,45],[1245,8,403,4],[1245,15,403,11],[1245,16,403,12],[1245,22,403,18],[1245,24,403,20],[1245,30,403,26],[1245,32,403,28],[1245,38,403,34],[1245,40,403,36],[1245,46,403,42],[1245,48,403,44],[1245,54,403,50],[1245,55,403,51],[1245,56,403,52,"includes"],[1245,64,403,60],[1245,65,403,61,"xpub"],[1245,69,403,65],[1245,70,403,66,"substring"],[1245,79,403,75],[1245,80,403,76],[1245,81,403,77],[1245,83,403,79],[1245,84,403,80],[1245,85,403,81],[1245,86,403,82],[1246,6,404,2],[1247,4,404,3],[1248,6,404,3,"key"],[1248,9,404,3],[1249,6,404,3,"value"],[1249,11,404,3],[1249,13,406,2],[1249,22,406,9,"isXprvString"],[1249,34,406,21,"isXprvString"],[1249,35,406,22,"xpub"],[1249,39,406,34],[1249,41,406,45],[1250,8,407,4],[1250,15,407,11],[1250,16,407,12],[1250,22,407,18],[1250,24,407,20],[1250,30,407,26],[1250,32,407,28],[1250,38,407,34],[1250,40,407,36],[1250,46,407,42],[1250,48,407,44],[1250,54,407,50],[1250,55,407,51],[1250,56,407,52,"includes"],[1250,64,407,60],[1250,65,407,61,"xpub"],[1250,69,407,65],[1250,70,407,66,"substring"],[1250,79,407,75],[1250,80,407,76],[1250,81,407,77],[1250,83,407,79],[1250,84,407,80],[1250,85,407,81],[1250,86,407,82],[1251,6,408,2],[1253,6,410,2],[1254,0,411,0],[1255,0,412,0],[1256,0,413,0],[1257,0,414,0],[1258,0,415,0],[1259,4,410,2],[1260,6,410,2,"key"],[1260,9,410,2],[1261,6,410,2,"value"],[1261,11,410,2],[1261,13,416,2],[1261,22,416,9,"ckccXfp2fingerprint"],[1261,41,416,28,"ckccXfp2fingerprint"],[1261,42,416,29,"xfp"],[1261,45,416,49],[1261,47,416,59],[1262,8,417,4],[1262,12,417,8,"masterFingerprintHex"],[1262,32,417,28],[1262,35,417,31,"Number"],[1262,41,417,37],[1262,42,417,38,"xfp"],[1262,45,417,41],[1262,46,417,42],[1262,47,417,43,"toString"],[1262,55,417,51],[1262,56,417,52],[1262,58,417,54],[1262,59,417,55],[1263,8,418,4],[1263,15,418,11,"masterFingerprintHex"],[1263,35,418,31],[1263,36,418,32,"length"],[1263,42,418,38],[1263,45,418,41],[1263,46,418,42],[1263,48,418,44,"masterFingerprintHex"],[1263,68,418,64],[1263,71,418,67],[1263,74,418,70],[1263,77,418,73,"masterFingerprintHex"],[1263,97,418,93],[1263,98,418,94],[1263,99,418,95],[1265,8,420,4],[1266,8,421,4],[1267,8,422,4],[1267,15,422,11],[1267,16,423,6,"masterFingerprintHex"],[1267,36,423,26],[1267,37,423,27],[1267,38,423,28],[1267,39,423,29],[1267,42,424,6,"masterFingerprintHex"],[1267,62,424,26],[1267,63,424,27],[1267,64,424,28],[1267,65,424,29],[1267,68,425,6,"masterFingerprintHex"],[1267,88,425,26],[1267,89,425,27],[1267,90,425,28],[1267,91,425,29],[1267,94,426,6,"masterFingerprintHex"],[1267,114,426,26],[1267,115,426,27],[1267,116,426,28],[1267,117,426,29],[1267,120,427,6,"masterFingerprintHex"],[1267,140,427,26],[1267,141,427,27],[1267,142,427,28],[1267,143,427,29],[1267,146,428,6,"masterFingerprintHex"],[1267,166,428,26],[1267,167,428,27],[1267,168,428,28],[1267,169,428,29],[1267,172,429,6,"masterFingerprintHex"],[1267,192,429,26],[1267,193,429,27],[1267,194,429,28],[1267,195,429,29],[1267,198,430,6,"masterFingerprintHex"],[1267,218,430,26],[1267,219,430,27],[1267,220,430,28],[1267,221,430,29],[1267,223,431,6,"toUpperCase"],[1267,234,431,17],[1267,235,431,18],[1267,236,431,19],[1268,6,432,2],[1269,4,432,3],[1270,6,432,3,"key"],[1270,9,432,3],[1271,6,432,3,"value"],[1271,11,432,3],[1271,13,1045,2],[1271,22,1045,9,"convertElectrumMnemonicToSeed"],[1271,51,1045,38,"convertElectrumMnemonicToSeed"],[1271,52,1045,39,"cosigner"],[1271,60,1045,55],[1271,62,1045,57,"passphrase"],[1271,72,1045,76],[1271,74,1045,78],[1272,8,1046,4],[1272,12,1046,8,"seed"],[1272,16,1046,12],[1273,8,1047,4],[1273,12,1047,8],[1274,10,1048,6,"seed"],[1274,14,1048,10],[1274,17,1048,13,"mn"],[1274,19,1048,15],[1274,20,1048,16,"mnemonicToSeedSync"],[1274,38,1048,34],[1274,39,1048,35,"cosigner"],[1274,47,1048,43],[1274,48,1048,44,"replace"],[1274,55,1048,51],[1274,56,1048,52,"ELECTRUM_SEED_PREFIX"],[1274,76,1048,72],[1274,78,1048,74],[1274,80,1048,76],[1274,81,1048,77],[1274,83,1048,79,"electrumSegwit"],[1274,97,1048,93],[1274,98,1048,94,"passphrase"],[1274,108,1048,104],[1274,109,1048,105],[1274,110,1048,106],[1275,8,1049,4],[1275,9,1049,5],[1275,10,1049,6],[1275,17,1049,13,"_"],[1275,18,1049,14],[1275,20,1049,16],[1276,10,1050,6],[1276,14,1050,10],[1277,12,1051,8,"seed"],[1277,16,1051,12],[1277,19,1051,15,"mn"],[1277,21,1051,17],[1277,22,1051,18,"mnemonicToSeedSync"],[1277,40,1051,36],[1277,41,1051,37,"cosigner"],[1277,49,1051,45],[1277,50,1051,46,"replace"],[1277,57,1051,53],[1277,58,1051,54,"ELECTRUM_SEED_PREFIX"],[1277,78,1051,74],[1277,80,1051,76],[1277,82,1051,78],[1277,83,1051,79],[1277,85,1051,81,"electrumStandart"],[1277,101,1051,97],[1277,102,1051,98,"passphrase"],[1277,112,1051,108],[1277,113,1051,109],[1277,114,1051,110],[1278,10,1052,6],[1278,11,1052,7],[1278,12,1052,8],[1278,19,1052,15,"__"],[1278,21,1052,17],[1278,23,1052,19],[1279,12,1053,8],[1279,18,1053,14],[1279,22,1053,18,"Error"],[1279,27,1053,23],[1279,28,1053,24],[1279,59,1053,55],[1279,60,1053,56],[1280,10,1054,6],[1281,8,1055,4],[1282,8,1056,4],[1282,15,1056,11,"seed"],[1282,19,1056,15],[1283,6,1057,2],[1285,6,1059,2],[1286,0,1060,0],[1287,0,1061,0],[1288,4,1059,2],[1289,6,1059,2,"key"],[1289,9,1059,2],[1290,6,1059,2,"value"],[1290,11,1059,2],[1290,13,1062,2],[1290,22,1062,9,"sortBuffers"],[1290,33,1062,20,"sortBuffers"],[1290,34,1062,21,"bufArr"],[1290,40,1062,37],[1290,42,1062,49],[1291,8,1063,4],[1291,15,1063,11,"bufArr"],[1291,21,1063,17],[1291,22,1063,18,"sort"],[1291,26,1063,22],[1291,27,1063,23,"Buffer"],[1291,33,1063,29],[1291,34,1063,30,"compare"],[1291,41,1063,37],[1291,42,1063,38],[1292,6,1064,2],[1293,4,1064,3],[1294,6,1064,3,"key"],[1294,9,1064,3],[1295,6,1064,3,"value"],[1295,11,1064,3],[1295,13,1072,2],[1295,22,1072,9,"isPathValid"],[1295,33,1072,20,"isPathValid"],[1295,34,1072,21,"path"],[1295,38,1072,33],[1295,40,1072,44],[1296,8,1073,4],[1296,12,1073,10,"root"],[1296,16,1073,14],[1296,19,1073,17,"bip32"],[1296,24,1073,22],[1296,25,1073,23,"fromSeed"],[1296,33,1073,31],[1296,34,1073,32,"Buffer"],[1296,40,1073,38],[1296,41,1073,39,"alloc"],[1296,46,1073,44],[1296,47,1073,45],[1296,49,1073,47],[1296,50,1073,48],[1296,51,1073,49],[1297,8,1074,4],[1297,12,1074,8],[1298,10,1075,6,"root"],[1298,14,1075,10],[1298,15,1075,11,"derivePath"],[1298,25,1075,21],[1298,26,1075,22,"path"],[1298,30,1075,26],[1298,31,1075,27],[1299,10,1076,6],[1299,17,1076,13],[1299,21,1076,17],[1300,8,1077,4],[1300,9,1077,5],[1300,10,1077,6],[1300,17,1077,13,"_"],[1300,18,1077,14],[1300,20,1077,16],[1300,21,1077,17],[1301,8,1078,4],[1301,15,1078,11],[1301,20,1078,16],[1302,6,1079,2],[1303,4,1079,3],[1304,6,1079,3,"key"],[1304,9,1079,3],[1305,6,1079,3,"value"],[1305,11,1079,3],[1305,13,1292,2],[1305,22,1292,9,"isFpValid"],[1305,31,1292,18,"isFpValid"],[1305,32,1292,19,"fp"],[1305,34,1292,29],[1305,36,1292,31],[1306,8,1293,4],[1306,12,1293,8,"fp"],[1306,14,1293,10],[1306,15,1293,11,"length"],[1306,21,1293,17],[1306,26,1293,22],[1306,27,1293,23],[1306,29,1293,25],[1306,36,1293,32],[1306,41,1293,37],[1307,8,1294,4],[1307,15,1294,11],[1307,31,1294,27],[1307,32,1294,28,"test"],[1307,36,1294,32],[1307,37,1294,33,"fp"],[1307,39,1294,35],[1307,40,1294,36],[1308,6,1295,2],[1310,6,1297,2],[1311,0,1298,0],[1312,0,1299,0],[1313,0,1300,0],[1314,0,1301,0],[1315,0,1302,0],[1316,0,1303,0],[1317,0,1304,0],[1318,4,1297,2],[1319,6,1297,2,"key"],[1319,9,1297,2],[1320,6,1297,2,"value"],[1320,11,1297,2],[1320,13,1305,2],[1320,22,1305,9,"isXpubForMultisig"],[1320,39,1305,26,"isXpubForMultisig"],[1320,40,1305,27,"xpub"],[1320,44,1305,39],[1320,46,1305,50],[1321,8,1306,4],[1321,15,1306,11],[1321,16,1306,12],[1321,22,1306,18],[1321,24,1306,20],[1321,30,1306,26],[1321,32,1306,28],[1321,38,1306,34],[1321,39,1306,35],[1321,40,1306,36,"includes"],[1321,48,1306,44],[1321,49,1306,45,"xpub"],[1321,53,1306,49],[1321,54,1306,50,"substring"],[1321,63,1306,59],[1321,64,1306,60],[1321,65,1306,61],[1321,67,1306,63],[1321,68,1306,64],[1321,69,1306,65],[1321,70,1306,66],[1322,6,1307,2],[1323,4,1307,3],[1324,2,1307,3],[1324,4,58,38,"AbstractHDElectrumWallet"],[1324,35,58,38],[1324,36,58,38,"AbstractHDElectrumWallet"],[1324,93,58,62],[1325,2,58,13,"MultisigHDWallet"],[1325,18,58,29],[1325,19,59,18,"type"],[1325,23,59,22],[1325,26,59,25],[1325,38,59,37],[1326,2,58,13,"MultisigHDWallet"],[1326,18,58,29],[1326,19,60,18,"typeReadable"],[1326,31,60,30],[1326,34,60,33],[1326,50,60,49],[1327,2,58,13,"MultisigHDWallet"],[1327,18,58,29],[1327,19,66,9,"FORMAT_P2WSH"],[1327,31,66,21],[1327,34,66,24],[1327,41,66,31],[1328,2,58,13,"MultisigHDWallet"],[1328,18,58,29],[1328,19,67,9,"FORMAT_P2SH_P2WSH"],[1328,36,67,26],[1328,39,67,29],[1328,51,67,41],[1329,2,58,13,"MultisigHDWallet"],[1329,18,58,29],[1329,19,68,9,"FORMAT_P2SH_P2WSH_ALT"],[1329,40,68,30],[1329,43,68,33],[1329,55,68,45],[1330,2,58,13,"MultisigHDWallet"],[1330,18,58,29],[1330,19,69,9,"FORMAT_P2SH"],[1330,30,69,20],[1330,33,69,23],[1330,39,69,29],[1331,2,58,13,"MultisigHDWallet"],[1331,18,58,29],[1331,19,71,9,"PATH_NATIVE_SEGWIT"],[1331,37,71,27],[1331,40,71,30],[1331,56,71,46],[1332,2,58,13,"MultisigHDWallet"],[1332,18,58,29],[1332,19,72,9,"PATH_WRAPPED_SEGWIT"],[1332,38,72,28],[1332,41,72,31],[1332,57,72,47],[1333,2,58,13,"MultisigHDWallet"],[1333,18,58,29],[1333,19,73,9,"PATH_LEGACY"],[1333,30,73,20],[1333,33,73,23],[1333,40,73,30],[1334,0,73,30],[1334,3]],"functionMap":{"names":["<global>","electrumSegwit","electrumStandart","MultisigHDWallet","MultisigHDWallet#isLegacy","MultisigHDWallet#isNativeSegwit","MultisigHDWallet#isWrappedSegwit","MultisigHDWallet#setWrappedSegwit","MultisigHDWallet#setNativeSegwit","MultisigHDWallet#setLegacy","MultisigHDWallet#setM","MultisigHDWallet#getM","MultisigHDWallet#getN","MultisigHDWallet#setDerivationPath","MultisigHDWallet#getCustomDerivationPathForCosigner","MultisigHDWallet#getCosigner","MultisigHDWallet#getFingerprint","MultisigHDWallet#getCosignerForFingerprint","MultisigHDWallet#getCosignerPassphrase","MultisigHDWallet.isXpubValid","MultisigHDWallet.isXprvValid","MultisigHDWallet#addCosigner","MultisigHDWallet.convertMultisigXprvToRegularXprv","MultisigHDWallet.convertXprvToXpub","MultisigHDWallet#_getXpubFromCosignerIndex","MultisigHDWallet#_getExternalAddressByIndex","MultisigHDWallet#_getAddressFromNode","MultisigHDWallet#_getInternalAddressByIndex","MultisigHDWallet.seedToXpub","MultisigHDWallet#convertXpubToMultisignatureXpub","MultisigHDWallet#convertXprvToMultisignatureXprv","MultisigHDWallet.isXpubString","MultisigHDWallet.isXprvString","MultisigHDWallet.ckccXfp2fingerprint","MultisigHDWallet#getXpub","MultisigHDWallet#getSecret","MultisigHDWallet#setSecret","MultisigHDWallet#_getDerivationPathByAddressWithCustomPath","MultisigHDWallet#_getWifForAddress","MultisigHDWallet#_getPubkeyByAddress","MultisigHDWallet#_getDerivationPathByAddress","MultisigHDWallet#_addPsbtInput","MultisigHDWallet#_getOutputDataForChange","MultisigHDWallet#howManySignaturesCanWeMake","MultisigHDWallet#coinselect","MultisigHDWallet#createTransaction","inputs.forEach$argument_0","outputs.forEach$argument_0","MultisigHDWallet.convertElectrumMnemonicToSeed","MultisigHDWallet.sortBuffers","MultisigHDWallet#prepareForSerialization","MultisigHDWallet.isPathValid","MultisigHDWallet#allowSend","MultisigHDWallet#allowSignVerifyMessage","MultisigHDWallet#fetchUtxo","getUtxo.map$argument_0","MultisigHDWallet#getID","MultisigHDWallet#calculateFeeFromPsbt","MultisigHDWallet#calculateHowManySignaturesWeHaveFromPsbt","MultisigHDWallet#cosignPsbt","MultisigHDWallet#replaceCosignerXpubWithSeed","MultisigHDWallet#replaceCosignerSeedWithXpub","MultisigHDWallet#deleteCosigner","_cosignersFingerprints.filter$argument_0","_cosigners.filter$argument_0","_cosignersCustomPaths.filter$argument_0","_cosignersPassphrases.filter$argument_0","MultisigHDWallet#getFormat","MultisigHDWallet.isFpValid","MultisigHDWallet.isXpubForMultisig","MultisigHDWallet#isSegwit"],"mappings":"AAA;uBC6C;EDG;yBEE;EFG;OGI;EC6B;GDE;EEE;GFE;EGE;GHE;EIE;GJE;EKE;GLE;EME;GNE;EOE;GPE;EQK;GRE;ESK;GTE;EUE;GVgB;EWE;GXI;EYE;GZG;EaE;GbG;EcE;GdG;EeE;GfG;EgBE;GhBW;EiBE;GjBQ;EkBS;GlB4C;EmBE;GnBI;EoBE;GpBG;EqBS;GrBe;EsBE;GtBQ;EuBE;GvBmD;EwBE;GxBQ;EyBE;GzBW;E0BU;G1BU;E2BE;G3BU;E4BE;G5BE;E6BE;G7BE;E8BQ;G9BgB;E+BE;G/BE;EgCE;GhC2E;EiCE;GjCgM;EkCE;GlCU;EmCE;GnCG;EoCE;GpCE;EqCE;GrCE;EsCE;GtC8G;EuCE;GvC4E;EwCE;GxCO;EyCE;GzC6B;E0CK;mBCkB;KDG;oBEE;KFuB;G1C8B;E6CE;G7CY;E8CK;G9CE;E+CE;G/CI;EgDE;GhDO;EiDE;GjDE;EkDE;GlDE;EmDE;6BCI,WD;GnDW;EqDE;GrDG;EsDE;GtDkC;EuDE;GvDS;EwDM;GxD2D;EyDK;GzDU;E0DK;G1DS;E2DE;qECI;KDE;6CEE;KFE;mEGE;KHE;mEIE;KJE;G3DQ;EgEE;GhEM;EiEM;GjEG;EkEU;GlEE;EmEE;GnEE;CHC"}},"type":"js/module"}]}