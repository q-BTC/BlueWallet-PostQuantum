{"dependencies":[{"name":"./_root","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":29,"index":29}}],"key":"aMMrFUUpmMT9OsMCSAp6sYhPpGA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Built-in value references. */\n  var Buffer = moduleExports ? _$$_REQUIRE(_dependencyMap[0], \"./_root\").Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n  /**\n   * Creates a clone of  `buffer`.\n   *\n   * @private\n   * @param {Buffer} buffer The buffer to clone.\n   * @param {boolean} [isDeep] Specify a deep clone.\n   * @returns {Buffer} Returns the cloned buffer.\n   */\n  function cloneBuffer(buffer, isDeep) {\n    if (isDeep) {\n      return buffer.slice();\n    }\n    var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n    buffer.copy(result);\n    return result;\n  }\n  module.exports = cloneBuffer;\n});","lineCount":33,"map":[[2,2,3,0],[3,2,4,0],[3,6,4,4,"freeExports"],[3,17,4,15],[3,20,4,18],[3,27,4,25,"exports"],[3,34,4,32],[3,38,4,36],[3,46,4,44],[3,50,4,48,"exports"],[3,57,4,55],[3,61,4,59],[3,62,4,60,"exports"],[3,69,4,67],[3,70,4,68,"nodeType"],[3,78,4,76],[3,82,4,80,"exports"],[3,89,4,87],[5,2,6,0],[6,2,7,0],[6,6,7,4,"freeModule"],[6,16,7,14],[6,19,7,17,"freeExports"],[6,30,7,28],[6,34,7,32],[6,41,7,39,"module"],[6,47,7,45],[6,51,7,49],[6,59,7,57],[6,63,7,61,"module"],[6,69,7,67],[6,73,7,71],[6,74,7,72,"module"],[6,80,7,78],[6,81,7,79,"nodeType"],[6,89,7,87],[6,93,7,91,"module"],[6,99,7,97],[8,2,9,0],[9,2,10,0],[9,6,10,4,"moduleExports"],[9,19,10,17],[9,22,10,20,"freeModule"],[9,32,10,30],[9,36,10,34,"freeModule"],[9,46,10,44],[9,47,10,45,"exports"],[9,54,10,52],[9,59,10,57,"freeExports"],[9,70,10,68],[11,2,12,0],[12,2,13,0],[12,6,13,4,"Buffer"],[12,12,13,10],[12,15,13,13,"moduleExports"],[12,28,13,26],[12,31,13,29,"_$$_REQUIRE"],[12,42,13,29],[12,43,13,29,"_dependencyMap"],[12,57,13,29],[12,73,13,34,"Buffer"],[12,79,13,40],[12,82,13,43,"undefined"],[12,91,13,52],[13,4,14,4,"allocUnsafe"],[13,15,14,15],[13,18,14,18,"Buffer"],[13,24,14,24],[13,27,14,27,"Buffer"],[13,33,14,33],[13,34,14,34,"allocUnsafe"],[13,45,14,45],[13,48,14,48,"undefined"],[13,57,14,57],[15,2,16,0],[16,0,17,0],[17,0,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,2,24,0],[23,11,24,9,"cloneBuffer"],[23,22,24,20,"cloneBuffer"],[23,23,24,21,"buffer"],[23,29,24,27],[23,31,24,29,"isDeep"],[23,37,24,35],[23,39,24,37],[24,4,25,2],[24,8,25,6,"isDeep"],[24,14,25,12],[24,16,25,14],[25,6,26,4],[25,13,26,11,"buffer"],[25,19,26,17],[25,20,26,18,"slice"],[25,25,26,23],[25,26,26,24],[25,27,26,25],[26,4,27,2],[27,4,28,2],[27,8,28,6,"length"],[27,14,28,12],[27,17,28,15,"buffer"],[27,23,28,21],[27,24,28,22,"length"],[27,30,28,28],[28,6,29,6,"result"],[28,12,29,12],[28,15,29,15,"allocUnsafe"],[28,26,29,26],[28,29,29,29,"allocUnsafe"],[28,40,29,40],[28,41,29,41,"length"],[28,47,29,47],[28,48,29,48],[28,51,29,51],[28,55,29,55,"buffer"],[28,61,29,61],[28,62,29,62,"constructor"],[28,73,29,73],[28,74,29,74,"length"],[28,80,29,80],[28,81,29,81],[29,4,31,2,"buffer"],[29,10,31,8],[29,11,31,9,"copy"],[29,15,31,13],[29,16,31,14,"result"],[29,22,31,20],[29,23,31,21],[30,4,32,2],[30,11,32,9,"result"],[30,17,32,15],[31,2,33,0],[32,2,35,0,"module"],[32,8,35,6],[32,9,35,7,"exports"],[32,16,35,14],[32,19,35,17,"cloneBuffer"],[32,30,35,28],[33,0,35,29],[33,3]],"functionMap":{"names":["<global>","cloneBuffer"],"mappings":"AAA;ACuB;CDS"}},"type":"js/module"}]}