{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":99,"column":0,"index":3060}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":27,"index":405},"end":{"line":14,"column":54,"index":432}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[1], \"uint8array-tools\"));\n  var range = function range(n) {\n    return _toConsumableArray(Array(n).keys());\n  };\n  var isValidDERKey = function isValidDERKey(pubkey) {\n    return pubkey.length === 33 && [2, 3].includes(pubkey[0]) || pubkey.length === 65 && 4 === pubkey[0];\n  };\n  function makeConverter(TYPE_BYTE) {\n    var isValidPubkey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : isValidDERKey;\n    function decode(keyVal) {\n      if (keyVal.key[0] !== TYPE_BYTE) {\n        throw new Error('Decode Error: could not decode bip32Derivation with key 0x' + tools.toHex(keyVal.key));\n      }\n      var pubkey = keyVal.key.slice(1);\n      if (!isValidPubkey(pubkey)) {\n        throw new Error('Decode Error: bip32Derivation has invalid pubkey in key 0x' + tools.toHex(keyVal.key));\n      }\n      if (keyVal.value.length / 4 % 1 !== 0) {\n        throw new Error('Decode Error: Input BIP32_DERIVATION value length should be multiple of 4');\n      }\n      var data = {\n        masterFingerprint: keyVal.value.slice(0, 4),\n        pubkey: pubkey,\n        path: 'm'\n      };\n      for (var i of range(keyVal.value.length / 4 - 1)) {\n        var val = tools.readUInt32(keyVal.value, i * 4 + 4, 'LE');\n        var isHard = !!(val & 0x80000000);\n        var idx = val & 0x7fffffff;\n        data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n      }\n      return data;\n    }\n    function encode(data) {\n      var head = Uint8Array.from([TYPE_BYTE]);\n      var key = tools.concat([head, data.pubkey]);\n      var splitPath = data.path.split('/');\n      var value = new Uint8Array(splitPath.length * 4);\n      value.set(data.masterFingerprint, 0);\n      var offset = 4;\n      splitPath.slice(1).forEach(function (level) {\n        var isHard = level.slice(-1) === \"'\";\n        var num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n        if (isHard) num += 0x80000000;\n        tools.writeUInt32(value, offset, num, 'LE');\n        offset += 4;\n      });\n      return {\n        key: key,\n        value: value\n      };\n    }\n    var expected = '{ masterFingerprint: Uint8Array; pubkey: Uint8Array; path: string; }';\n    function check(data) {\n      return data.pubkey instanceof Uint8Array && data.masterFingerprint instanceof Uint8Array && typeof data.path === 'string' && isValidPubkey(data.pubkey) && data.masterFingerprint.length === 4;\n    }\n    function canAddToArray(array, item, dupeSet) {\n      var dupeString = tools.toHex(item.pubkey);\n      if (dupeSet.has(dupeString)) return false;\n      dupeSet.add(dupeString);\n      return array.filter(function (v) {\n        return tools.compare(v.pubkey, item.pubkey) === 0;\n      }).length === 0;\n    }\n    return {\n      decode: decode,\n      encode: encode,\n      check: check,\n      expected: expected,\n      canAddToArray: canAddToArray\n    };\n  }\n  exports.makeConverter = makeConverter;\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0],[5,6,2,4,"__importStar"],[5,18,2,16],[5,21,3,3],[5,25,3,7],[5,29,3,11],[5,33,3,15],[5,34,3,16,"__importStar"],[5,46,3,28],[5,50,4,2],[5,60,4,11,"mod"],[5,63,4,14],[5,65,4,16],[6,4,5,4],[6,8,5,8,"mod"],[6,11,5,11],[6,15,5,15,"mod"],[6,18,5,18],[6,19,5,19,"__esModule"],[6,29,5,29],[6,31,5,31],[6,38,5,38,"mod"],[6,41,5,41],[7,4,6,4],[7,8,6,8,"result"],[7,14,6,14],[7,17,6,17],[7,18,6,18],[7,19,6,19],[8,4,7,4],[8,8,7,8,"mod"],[8,11,7,11],[8,15,7,15],[8,19,7,19],[8,21,8,6],[8,26,8,11],[8,30,8,15,"k"],[8,31,8,16],[8,35,8,20,"mod"],[8,38,8,23],[8,40,9,8],[8,44,9,12,"Object"],[8,50,9,18],[8,51,9,19,"hasOwnProperty"],[8,65,9,33],[8,66,9,34,"call"],[8,70,9,38],[8,71,9,39,"mod"],[8,74,9,42],[8,76,9,44,"k"],[8,77,9,45],[8,78,9,46],[8,80,9,48,"result"],[8,86,9,54],[8,87,9,55,"k"],[8,88,9,56],[8,89,9,57],[8,92,9,60,"mod"],[8,95,9,63],[8,96,9,64,"k"],[8,97,9,65],[8,98,9,66],[9,4,10,4,"result"],[9,10,10,10],[9,11,10,11],[9,20,10,20],[9,21,10,21],[9,24,10,24,"mod"],[9,27,10,27],[10,4,11,4],[10,11,11,11,"result"],[10,17,11,17],[11,2,12,2],[11,3,12,3],[12,2,13,0,"Object"],[12,8,13,6],[12,9,13,7,"defineProperty"],[12,23,13,21],[12,24,13,22,"exports"],[12,31,13,29],[12,33,13,31],[12,45,13,43],[12,47,13,45],[13,4,13,47,"value"],[13,9,13,52],[13,11,13,54],[14,2,13,59],[14,3,13,60],[14,4,13,61],[15,2,14,0],[15,6,14,6,"tools"],[15,11,14,11],[15,14,14,14,"__importStar"],[15,26,14,26],[15,27,14,27,"require"],[15,38,14,34],[15,39,14,34,"_dependencyMap"],[15,53,14,34],[15,76,14,53],[15,77,14,54],[15,78,14,55],[16,2,15,0],[16,6,15,6,"range"],[16,11,15,11],[16,14,15,14],[16,23,15,6,"range"],[16,28,15,11,"range"],[16,29,15,14,"n"],[16,30,15,15],[17,4,15,15],[17,11,15,15,"_toConsumableArray"],[17,29,15,15],[17,30,15,23,"Array"],[17,35,15,28],[17,36,15,29,"n"],[17,37,15,30],[17,38,15,31],[17,39,15,32,"keys"],[17,43,15,36],[17,44,15,37],[17,45,15,38],[18,2,15,38],[18,3,15,39],[19,2,16,0],[19,6,16,6,"isValidDERKey"],[19,19,16,19],[19,22,16,22],[19,31,16,6,"isValidDERKey"],[19,44,16,19,"isValidDERKey"],[19,45,16,22,"pubkey"],[19,51,16,28],[20,4,16,28],[20,11,17,3,"pubkey"],[20,17,17,9],[20,18,17,10,"length"],[20,24,17,16],[20,29,17,21],[20,31,17,23],[20,35,17,27],[20,36,17,28],[20,37,17,29],[20,39,17,31],[20,40,17,32],[20,41,17,33],[20,42,17,34,"includes"],[20,50,17,42],[20,51,17,43,"pubkey"],[20,57,17,49],[20,58,17,50],[20,59,17,51],[20,60,17,52],[20,61,17,53],[20,65,18,3,"pubkey"],[20,71,18,9],[20,72,18,10,"length"],[20,78,18,16],[20,83,18,21],[20,85,18,23],[20,89,18,27],[20,90,18,28],[20,95,18,33,"pubkey"],[20,101,18,39],[20,102,18,40],[20,103,18,41],[20,104,18,43],[21,2,18,43],[22,2,19,0],[22,11,19,9,"makeConverter"],[22,24,19,22,"makeConverter"],[22,25,19,23,"TYPE_BYTE"],[22,34,19,32],[22,36,19,65],[23,4,19,65],[23,8,19,34,"isValidPubkey"],[23,21,19,47],[23,24,19,47,"arguments"],[23,33,19,47],[23,34,19,47,"length"],[23,40,19,47],[23,48,19,47,"arguments"],[23,57,19,47],[23,65,19,47,"undefined"],[23,74,19,47],[23,77,19,47,"arguments"],[23,86,19,47],[23,92,19,50,"isValidDERKey"],[23,105,19,63],[24,4,20,2],[24,13,20,11,"decode"],[24,19,20,17,"decode"],[24,20,20,18,"keyVal"],[24,26,20,24],[24,28,20,26],[25,6,21,4],[25,10,21,8,"keyVal"],[25,16,21,14],[25,17,21,15,"key"],[25,20,21,18],[25,21,21,19],[25,22,21,20],[25,23,21,21],[25,28,21,26,"TYPE_BYTE"],[25,37,21,35],[25,39,21,37],[26,8,22,6],[26,14,22,12],[26,18,22,16,"Error"],[26,23,22,21],[26,24,23,8],[26,84,23,68],[26,87,24,10,"tools"],[26,92,24,15],[26,93,24,16,"toHex"],[26,98,24,21],[26,99,24,22,"keyVal"],[26,105,24,28],[26,106,24,29,"key"],[26,109,24,32],[26,110,25,6],[26,111,25,7],[27,6,26,4],[28,6,27,4],[28,10,27,10,"pubkey"],[28,16,27,16],[28,19,27,19,"keyVal"],[28,25,27,25],[28,26,27,26,"key"],[28,29,27,29],[28,30,27,30,"slice"],[28,35,27,35],[28,36,27,36],[28,37,27,37],[28,38,27,38],[29,6,28,4],[29,10,28,8],[29,11,28,9,"isValidPubkey"],[29,24,28,22],[29,25,28,23,"pubkey"],[29,31,28,29],[29,32,28,30],[29,34,28,32],[30,8,29,6],[30,14,29,12],[30,18,29,16,"Error"],[30,23,29,21],[30,24,30,8],[30,84,30,68],[30,87,31,10,"tools"],[30,92,31,15],[30,93,31,16,"toHex"],[30,98,31,21],[30,99,31,22,"keyVal"],[30,105,31,28],[30,106,31,29,"key"],[30,109,31,32],[30,110,32,6],[30,111,32,7],[31,6,33,4],[32,6,34,4],[32,10,34,9,"keyVal"],[32,16,34,15],[32,17,34,16,"value"],[32,22,34,21],[32,23,34,22,"length"],[32,29,34,28],[32,32,34,31],[32,33,34,32],[32,36,34,36],[32,37,34,37],[32,42,34,42],[32,43,34,43],[32,45,34,45],[33,8,35,6],[33,14,35,12],[33,18,35,16,"Error"],[33,23,35,21],[33,24,36,8],[33,99,37,6],[33,100,37,7],[34,6,38,4],[35,6,39,4],[35,10,39,10,"data"],[35,14,39,14],[35,17,39,17],[36,8,40,6,"masterFingerprint"],[36,25,40,23],[36,27,40,25,"keyVal"],[36,33,40,31],[36,34,40,32,"value"],[36,39,40,37],[36,40,40,38,"slice"],[36,45,40,43],[36,46,40,44],[36,47,40,45],[36,49,40,47],[36,50,40,48],[36,51,40,49],[37,8,41,6,"pubkey"],[37,14,41,12],[37,16,41,6,"pubkey"],[37,22,41,12],[38,8,42,6,"path"],[38,12,42,10],[38,14,42,12],[39,6,43,4],[39,7,43,5],[40,6,44,4],[40,11,44,9],[40,15,44,15,"i"],[40,16,44,16],[40,20,44,20,"range"],[40,25,44,25],[40,26,44,26,"keyVal"],[40,32,44,32],[40,33,44,33,"value"],[40,38,44,38],[40,39,44,39,"length"],[40,45,44,45],[40,48,44,48],[40,49,44,49],[40,52,44,52],[40,53,44,53],[40,54,44,54],[40,56,44,56],[41,8,45,6],[41,12,45,12,"val"],[41,15,45,15],[41,18,45,18,"tools"],[41,23,45,23],[41,24,45,24,"readUInt32"],[41,34,45,34],[41,35,45,35,"keyVal"],[41,41,45,41],[41,42,45,42,"value"],[41,47,45,47],[41,49,45,49,"i"],[41,50,45,50],[41,53,45,53],[41,54,45,54],[41,57,45,57],[41,58,45,58],[41,60,45,60],[41,64,45,64],[41,65,45,65],[42,8,46,6],[42,12,46,12,"isHard"],[42,18,46,18],[42,21,46,21],[42,22,46,22],[42,24,46,24,"val"],[42,27,46,27],[42,30,46,30],[42,40,46,40],[42,41,46,41],[43,8,47,6],[43,12,47,12,"idx"],[43,15,47,15],[43,18,47,18,"val"],[43,21,47,21],[43,24,47,24],[43,34,47,34],[44,8,48,6,"data"],[44,12,48,10],[44,13,48,11,"path"],[44,17,48,15],[44,21,48,19],[44,24,48,22],[44,27,48,25,"idx"],[44,30,48,28],[44,31,48,29,"toString"],[44,39,48,37],[44,40,48,38],[44,42,48,40],[44,43,48,41],[44,47,48,45,"isHard"],[44,53,48,51],[44,56,48,54],[44,59,48,57],[44,62,48,60],[44,64,48,62],[44,65,48,63],[45,6,49,4],[46,6,50,4],[46,13,50,11,"data"],[46,17,50,15],[47,4,51,2],[48,4,52,2],[48,13,52,11,"encode"],[48,19,52,17,"encode"],[48,20,52,18,"data"],[48,24,52,22],[48,26,52,24],[49,6,53,4],[49,10,53,10,"head"],[49,14,53,14],[49,17,53,17,"Uint8Array"],[49,27,53,27],[49,28,53,28,"from"],[49,32,53,32],[49,33,53,33],[49,34,53,34,"TYPE_BYTE"],[49,43,53,43],[49,44,53,44],[49,45,53,45],[50,6,54,4],[50,10,54,10,"key"],[50,13,54,13],[50,16,54,16,"tools"],[50,21,54,21],[50,22,54,22,"concat"],[50,28,54,28],[50,29,54,29],[50,30,54,30,"head"],[50,34,54,34],[50,36,54,36,"data"],[50,40,54,40],[50,41,54,41,"pubkey"],[50,47,54,47],[50,48,54,48],[50,49,54,49],[51,6,55,4],[51,10,55,10,"splitPath"],[51,19,55,19],[51,22,55,22,"data"],[51,26,55,26],[51,27,55,27,"path"],[51,31,55,31],[51,32,55,32,"split"],[51,37,55,37],[51,38,55,38],[51,41,55,41],[51,42,55,42],[52,6,56,4],[52,10,56,10,"value"],[52,15,56,15],[52,18,56,18],[52,22,56,22,"Uint8Array"],[52,32,56,32],[52,33,56,33,"splitPath"],[52,42,56,42],[52,43,56,43,"length"],[52,49,56,49],[52,52,56,52],[52,53,56,53],[52,54,56,54],[53,6,57,4,"value"],[53,11,57,9],[53,12,57,10,"set"],[53,15,57,13],[53,16,57,14,"data"],[53,20,57,18],[53,21,57,19,"masterFingerprint"],[53,38,57,36],[53,40,57,38],[53,41,57,39],[53,42,57,40],[54,6,58,4],[54,10,58,8,"offset"],[54,16,58,14],[54,19,58,17],[54,20,58,18],[55,6,59,4,"splitPath"],[55,15,59,13],[55,16,59,14,"slice"],[55,21,59,19],[55,22,59,20],[55,23,59,21],[55,24,59,22],[55,25,59,23,"forEach"],[55,32,59,30],[55,33,59,31],[55,43,59,31,"level"],[55,48,59,36],[55,50,59,40],[56,8,60,6],[56,12,60,12,"isHard"],[56,18,60,18],[56,21,60,21,"level"],[56,26,60,26],[56,27,60,27,"slice"],[56,32,60,32],[56,33,60,33],[56,34,60,34],[56,35,60,35],[56,36,60,36],[56,41,60,41],[56,44,60,44],[57,8,61,6],[57,12,61,10,"num"],[57,15,61,13],[57,18,61,16],[57,28,61,26],[57,31,61,29,"parseInt"],[57,39,61,37],[57,40,61,38,"isHard"],[57,46,61,44],[57,49,61,47,"level"],[57,54,61,52],[57,55,61,53,"slice"],[57,60,61,58],[57,61,61,59],[57,62,61,60],[57,64,61,62],[57,65,61,63],[57,66,61,64],[57,67,61,65],[57,70,61,68,"level"],[57,75,61,73],[57,77,61,75],[57,79,61,77],[57,80,61,78],[58,8,62,6],[58,12,62,10,"isHard"],[58,18,62,16],[58,20,62,18,"num"],[58,23,62,21],[58,27,62,25],[58,37,62,35],[59,8,63,6,"tools"],[59,13,63,11],[59,14,63,12,"writeUInt32"],[59,25,63,23],[59,26,63,24,"value"],[59,31,63,29],[59,33,63,31,"offset"],[59,39,63,37],[59,41,63,39,"num"],[59,44,63,42],[59,46,63,44],[59,50,63,48],[59,51,63,49],[60,8,64,6,"offset"],[60,14,64,12],[60,18,64,16],[60,19,64,17],[61,6,65,4],[61,7,65,5],[61,8,65,6],[62,6,66,4],[62,13,66,11],[63,8,67,6,"key"],[63,11,67,9],[63,13,67,6,"key"],[63,16,67,9],[64,8,68,6,"value"],[64,13,68,11],[64,15,68,6,"value"],[65,6,69,4],[65,7,69,5],[66,4,70,2],[67,4,71,2],[67,8,71,8,"expected"],[67,16,71,16],[67,19,72,4],[67,89,72,74],[68,4,73,2],[68,13,73,11,"check"],[68,18,73,16,"check"],[68,19,73,17,"data"],[68,23,73,21],[68,25,73,23],[69,6,74,4],[69,13,75,6,"data"],[69,17,75,10],[69,18,75,11,"pubkey"],[69,24,75,17],[69,36,75,29,"Uint8Array"],[69,46,75,39],[69,50,76,6,"data"],[69,54,76,10],[69,55,76,11,"masterFingerprint"],[69,72,76,28],[69,84,76,40,"Uint8Array"],[69,94,76,50],[69,98,77,6],[69,105,77,13,"data"],[69,109,77,17],[69,110,77,18,"path"],[69,114,77,22],[69,119,77,27],[69,127,77,35],[69,131,78,6,"isValidPubkey"],[69,144,78,19],[69,145,78,20,"data"],[69,149,78,24],[69,150,78,25,"pubkey"],[69,156,78,31],[69,157,78,32],[69,161,79,6,"data"],[69,165,79,10],[69,166,79,11,"masterFingerprint"],[69,183,79,28],[69,184,79,29,"length"],[69,190,79,35],[69,195,79,40],[69,196,79,41],[70,4,81,2],[71,4,82,2],[71,13,82,11,"canAddToArray"],[71,26,82,24,"canAddToArray"],[71,27,82,25,"array"],[71,32,82,30],[71,34,82,32,"item"],[71,38,82,36],[71,40,82,38,"dupeSet"],[71,47,82,45],[71,49,82,47],[72,6,83,4],[72,10,83,10,"dupeString"],[72,20,83,20],[72,23,83,23,"tools"],[72,28,83,28],[72,29,83,29,"toHex"],[72,34,83,34],[72,35,83,35,"item"],[72,39,83,39],[72,40,83,40,"pubkey"],[72,46,83,46],[72,47,83,47],[73,6,84,4],[73,10,84,8,"dupeSet"],[73,17,84,15],[73,18,84,16,"has"],[73,21,84,19],[73,22,84,20,"dupeString"],[73,32,84,30],[73,33,84,31],[73,35,84,33],[73,42,84,40],[73,47,84,45],[74,6,85,4,"dupeSet"],[74,13,85,11],[74,14,85,12,"add"],[74,17,85,15],[74,18,85,16,"dupeString"],[74,28,85,26],[74,29,85,27],[75,6,86,4],[75,13,87,6,"array"],[75,18,87,11],[75,19,87,12,"filter"],[75,25,87,18],[75,26,87,19],[75,36,87,19,"v"],[75,37,87,20],[76,8,87,20],[76,15,87,24,"tools"],[76,20,87,29],[76,21,87,30,"compare"],[76,28,87,37],[76,29,87,38,"v"],[76,30,87,39],[76,31,87,40,"pubkey"],[76,37,87,46],[76,39,87,48,"item"],[76,43,87,52],[76,44,87,53,"pubkey"],[76,50,87,59],[76,51,87,60],[76,56,87,65],[76,57,87,66],[77,6,87,66],[77,8,87,67],[77,9,87,68,"length"],[77,15,87,74],[77,20,87,79],[77,21,87,80],[78,4,89,2],[79,4,90,2],[79,11,90,9],[80,6,91,4,"decode"],[80,12,91,10],[80,14,91,4,"decode"],[80,20,91,10],[81,6,92,4,"encode"],[81,12,92,10],[81,14,92,4,"encode"],[81,20,92,10],[82,6,93,4,"check"],[82,11,93,9],[82,13,93,4,"check"],[82,18,93,9],[83,6,94,4,"expected"],[83,14,94,12],[83,16,94,4,"expected"],[83,24,94,12],[84,6,95,4,"canAddToArray"],[84,19,95,17],[84,21,95,4,"canAddToArray"],[85,4,96,2],[85,5,96,3],[86,2,97,0],[87,2,98,0,"exports"],[87,9,98,7],[87,10,98,8,"makeConverter"],[87,23,98,21],[87,26,98,24,"makeConverter"],[87,39,98,37],[88,0,98,38],[88,3]],"functionMap":{"names":["<global>","<anonymous>","range","isValidDERKey","makeConverter","decode","encode","splitPath.slice.forEach$argument_0","check","canAddToArray","array.filter$argument_0"],"mappings":"AAA;ECG;GDQ;cEG,yBF;sBGC;2CHE;AIC;ECC;GD+B;EEC;+BCO;KDM;GFK;EIG;GJQ;EKC;mBCK,+CD;GLE;CJQ"}},"type":"js/module"}]}