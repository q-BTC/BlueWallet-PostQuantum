{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":30,"index":45}},{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":30,"index":45}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}},{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":60},"end":{"line":4,"column":43,"index":90}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function BlockHash() {\n    this.pending = null;\n    this.pendingTotal = 0;\n    this.blockSize = this.constructor.blockSize;\n    this.outSize = this.constructor.outSize;\n    this.hmacStrength = this.constructor.hmacStrength;\n    this.padLength = this.constructor.padLength / 8;\n    this.endian = 'big';\n    this._delta8 = this.blockSize / 8;\n    this._delta32 = this.blockSize / 32;\n  }\n  exports.BlockHash = BlockHash;\n  BlockHash.prototype.update = function update(msg, enc) {\n    // Convert message to array, pad it, and join into 32bit blocks\n    msg = _$$_REQUIRE(_dependencyMap[0], \"./utils\").toArray(msg, enc);\n    if (!this.pending) this.pending = msg;else this.pending = this.pending.concat(msg);\n    this.pendingTotal += msg.length;\n\n    // Enough data, try updating\n    if (this.pending.length >= this._delta8) {\n      msg = this.pending;\n\n      // Process pending data in blocks\n      var r = msg.length % this._delta8;\n      this.pending = msg.slice(msg.length - r, msg.length);\n      if (this.pending.length === 0) this.pending = null;\n      msg = _$$_REQUIRE(_dependencyMap[0], \"./utils\").join32(msg, 0, msg.length - r, this.endian);\n      for (var i = 0; i < msg.length; i += this._delta32) this._update(msg, i, i + this._delta32);\n    }\n    return this;\n  };\n  BlockHash.prototype.digest = function digest(enc) {\n    this.update(this._pad());\n    _$$_REQUIRE(_dependencyMap[1], \"minimalistic-assert\")(this.pending === null);\n    return this._digest(enc);\n  };\n  BlockHash.prototype._pad = function pad() {\n    var len = this.pendingTotal;\n    var bytes = this._delta8;\n    var k = bytes - (len + this.padLength) % bytes;\n    var res = new Array(k + this.padLength);\n    res[0] = 0x80;\n    for (var i = 1; i < k; i++) res[i] = 0;\n\n    // Append length\n    len <<= 3;\n    if (this.endian === 'big') {\n      for (var t = 8; t < this.padLength; t++) res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len & 0xff;\n    } else {\n      res[i++] = len & 0xff;\n      res[i++] = len >>> 8 & 0xff;\n      res[i++] = len >>> 16 & 0xff;\n      res[i++] = len >>> 24 & 0xff;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      res[i++] = 0;\n      for (t = 8; t < this.padLength; t++) res[i++] = 0;\n    }\n    return res;\n  };\n});","lineCount":73,"map":[[2,2,1,0],[2,14,1,12],[4,2,6,0],[4,11,6,9,"BlockHash"],[4,20,6,18,"BlockHash"],[4,21,6,18],[4,23,6,21],[5,4,7,2],[5,8,7,6],[5,9,7,7,"pending"],[5,16,7,14],[5,19,7,17],[5,23,7,21],[6,4,8,2],[6,8,8,6],[6,9,8,7,"pendingTotal"],[6,21,8,19],[6,24,8,22],[6,25,8,23],[7,4,9,2],[7,8,9,6],[7,9,9,7,"blockSize"],[7,18,9,16],[7,21,9,19],[7,25,9,23],[7,26,9,24,"constructor"],[7,37,9,35],[7,38,9,36,"blockSize"],[7,47,9,45],[8,4,10,2],[8,8,10,6],[8,9,10,7,"outSize"],[8,16,10,14],[8,19,10,17],[8,23,10,21],[8,24,10,22,"constructor"],[8,35,10,33],[8,36,10,34,"outSize"],[8,43,10,41],[9,4,11,2],[9,8,11,6],[9,9,11,7,"hmacStrength"],[9,21,11,19],[9,24,11,22],[9,28,11,26],[9,29,11,27,"constructor"],[9,40,11,38],[9,41,11,39,"hmacStrength"],[9,53,11,51],[10,4,12,2],[10,8,12,6],[10,9,12,7,"padLength"],[10,18,12,16],[10,21,12,19],[10,25,12,23],[10,26,12,24,"constructor"],[10,37,12,35],[10,38,12,36,"padLength"],[10,47,12,45],[10,50,12,48],[10,51,12,49],[11,4,13,2],[11,8,13,6],[11,9,13,7,"endian"],[11,15,13,13],[11,18,13,16],[11,23,13,21],[12,4,15,2],[12,8,15,6],[12,9,15,7,"_delta8"],[12,16,15,14],[12,19,15,17],[12,23,15,21],[12,24,15,22,"blockSize"],[12,33,15,31],[12,36,15,34],[12,37,15,35],[13,4,16,2],[13,8,16,6],[13,9,16,7,"_delta32"],[13,17,16,15],[13,20,16,18],[13,24,16,22],[13,25,16,23,"blockSize"],[13,34,16,32],[13,37,16,35],[13,39,16,37],[14,2,17,0],[15,2,18,0,"exports"],[15,9,18,7],[15,10,18,8,"BlockHash"],[15,19,18,17],[15,22,18,20,"BlockHash"],[15,31,18,29],[16,2,20,0,"BlockHash"],[16,11,20,9],[16,12,20,10,"prototype"],[16,21,20,19],[16,22,20,20,"update"],[16,28,20,26],[16,31,20,29],[16,40,20,38,"update"],[16,46,20,44,"update"],[16,47,20,45,"msg"],[16,50,20,48],[16,52,20,50,"enc"],[16,55,20,53],[16,57,20,55],[17,4,21,2],[18,4,22,2,"msg"],[18,7,22,5],[18,10,22,8,"_$$_REQUIRE"],[18,21,22,8],[18,22,22,8,"_dependencyMap"],[18,36,22,8],[18,52,22,14,"toArray"],[18,59,22,21],[18,60,22,22,"msg"],[18,63,22,25],[18,65,22,27,"enc"],[18,68,22,30],[18,69,22,31],[19,4,23,2],[19,8,23,6],[19,9,23,7],[19,13,23,11],[19,14,23,12,"pending"],[19,21,23,19],[19,23,24,4],[19,27,24,8],[19,28,24,9,"pending"],[19,35,24,16],[19,38,24,19,"msg"],[19,41,24,22],[19,42,24,23],[19,47,26,4],[19,51,26,8],[19,52,26,9,"pending"],[19,59,26,16],[19,62,26,19],[19,66,26,23],[19,67,26,24,"pending"],[19,74,26,31],[19,75,26,32,"concat"],[19,81,26,38],[19,82,26,39,"msg"],[19,85,26,42],[19,86,26,43],[20,4,27,2],[20,8,27,6],[20,9,27,7,"pendingTotal"],[20,21,27,19],[20,25,27,23,"msg"],[20,28,27,26],[20,29,27,27,"length"],[20,35,27,33],[22,4,29,2],[23,4,30,2],[23,8,30,6],[23,12,30,10],[23,13,30,11,"pending"],[23,20,30,18],[23,21,30,19,"length"],[23,27,30,25],[23,31,30,29],[23,35,30,33],[23,36,30,34,"_delta8"],[23,43,30,41],[23,45,30,43],[24,6,31,4,"msg"],[24,9,31,7],[24,12,31,10],[24,16,31,14],[24,17,31,15,"pending"],[24,24,31,22],[26,6,33,4],[27,6,34,4],[27,10,34,8,"r"],[27,11,34,9],[27,14,34,12,"msg"],[27,17,34,15],[27,18,34,16,"length"],[27,24,34,22],[27,27,34,25],[27,31,34,29],[27,32,34,30,"_delta8"],[27,39,34,37],[28,6,35,4],[28,10,35,8],[28,11,35,9,"pending"],[28,18,35,16],[28,21,35,19,"msg"],[28,24,35,22],[28,25,35,23,"slice"],[28,30,35,28],[28,31,35,29,"msg"],[28,34,35,32],[28,35,35,33,"length"],[28,41,35,39],[28,44,35,42,"r"],[28,45,35,43],[28,47,35,45,"msg"],[28,50,35,48],[28,51,35,49,"length"],[28,57,35,55],[28,58,35,56],[29,6,36,4],[29,10,36,8],[29,14,36,12],[29,15,36,13,"pending"],[29,22,36,20],[29,23,36,21,"length"],[29,29,36,27],[29,34,36,32],[29,35,36,33],[29,37,37,6],[29,41,37,10],[29,42,37,11,"pending"],[29,49,37,18],[29,52,37,21],[29,56,37,25],[30,6,39,4,"msg"],[30,9,39,7],[30,12,39,10,"_$$_REQUIRE"],[30,23,39,10],[30,24,39,10,"_dependencyMap"],[30,38,39,10],[30,54,39,16,"join32"],[30,60,39,22],[30,61,39,23,"msg"],[30,64,39,26],[30,66,39,28],[30,67,39,29],[30,69,39,31,"msg"],[30,72,39,34],[30,73,39,35,"length"],[30,79,39,41],[30,82,39,44,"r"],[30,83,39,45],[30,85,39,47],[30,89,39,51],[30,90,39,52,"endian"],[30,96,39,58],[30,97,39,59],[31,6,40,4],[31,11,40,9],[31,15,40,13,"i"],[31,16,40,14],[31,19,40,17],[31,20,40,18],[31,22,40,20,"i"],[31,23,40,21],[31,26,40,24,"msg"],[31,29,40,27],[31,30,40,28,"length"],[31,36,40,34],[31,38,40,36,"i"],[31,39,40,37],[31,43,40,41],[31,47,40,45],[31,48,40,46,"_delta32"],[31,56,40,54],[31,58,41,6],[31,62,41,10],[31,63,41,11,"_update"],[31,70,41,18],[31,71,41,19,"msg"],[31,74,41,22],[31,76,41,24,"i"],[31,77,41,25],[31,79,41,27,"i"],[31,80,41,28],[31,83,41,31],[31,87,41,35],[31,88,41,36,"_delta32"],[31,96,41,44],[31,97,41,45],[32,4,42,2],[33,4,44,2],[33,11,44,9],[33,15,44,13],[34,2,45,0],[34,3,45,1],[35,2,47,0,"BlockHash"],[35,11,47,9],[35,12,47,10,"prototype"],[35,21,47,19],[35,22,47,20,"digest"],[35,28,47,26],[35,31,47,29],[35,40,47,38,"digest"],[35,46,47,44,"digest"],[35,47,47,45,"enc"],[35,50,47,48],[35,52,47,50],[36,4,48,2],[36,8,48,6],[36,9,48,7,"update"],[36,15,48,13],[36,16,48,14],[36,20,48,18],[36,21,48,19,"_pad"],[36,25,48,23],[36,26,48,24],[36,27,48,25],[36,28,48,26],[37,4,49,2,"_$$_REQUIRE"],[37,15,49,2],[37,16,49,2,"_dependencyMap"],[37,30,49,2],[37,58,49,9],[37,62,49,13],[37,63,49,14,"pending"],[37,70,49,21],[37,75,49,26],[37,79,49,30],[37,80,49,31],[38,4,51,2],[38,11,51,9],[38,15,51,13],[38,16,51,14,"_digest"],[38,23,51,21],[38,24,51,22,"enc"],[38,27,51,25],[38,28,51,26],[39,2,52,0],[39,3,52,1],[40,2,54,0,"BlockHash"],[40,11,54,9],[40,12,54,10,"prototype"],[40,21,54,19],[40,22,54,20,"_pad"],[40,26,54,24],[40,29,54,27],[40,38,54,36,"pad"],[40,41,54,39,"pad"],[40,42,54,39],[40,44,54,42],[41,4,55,2],[41,8,55,6,"len"],[41,11,55,9],[41,14,55,12],[41,18,55,16],[41,19,55,17,"pendingTotal"],[41,31,55,29],[42,4,56,2],[42,8,56,6,"bytes"],[42,13,56,11],[42,16,56,14],[42,20,56,18],[42,21,56,19,"_delta8"],[42,28,56,26],[43,4,57,2],[43,8,57,6,"k"],[43,9,57,7],[43,12,57,10,"bytes"],[43,17,57,15],[43,20,57,19],[43,21,57,20,"len"],[43,24,57,23],[43,27,57,26],[43,31,57,30],[43,32,57,31,"padLength"],[43,41,57,40],[43,45,57,44,"bytes"],[43,50,57,50],[44,4,58,2],[44,8,58,6,"res"],[44,11,58,9],[44,14,58,12],[44,18,58,16,"Array"],[44,23,58,21],[44,24,58,22,"k"],[44,25,58,23],[44,28,58,26],[44,32,58,30],[44,33,58,31,"padLength"],[44,42,58,40],[44,43,58,41],[45,4,59,2,"res"],[45,7,59,5],[45,8,59,6],[45,9,59,7],[45,10,59,8],[45,13,59,11],[45,17,59,15],[46,4,60,2],[46,9,60,7],[46,13,60,11,"i"],[46,14,60,12],[46,17,60,15],[46,18,60,16],[46,20,60,18,"i"],[46,21,60,19],[46,24,60,22,"k"],[46,25,60,23],[46,27,60,25,"i"],[46,28,60,26],[46,30,60,28],[46,32,61,4,"res"],[46,35,61,7],[46,36,61,8,"i"],[46,37,61,9],[46,38,61,10],[46,41,61,13],[46,42,61,14],[48,4,63,2],[49,4,64,2,"len"],[49,7,64,5],[49,12,64,10],[49,13,64,11],[50,4,65,2],[50,8,65,6],[50,12,65,10],[50,13,65,11,"endian"],[50,19,65,17],[50,24,65,22],[50,29,65,27],[50,31,65,29],[51,6,66,4],[51,11,66,9],[51,15,66,13,"t"],[51,16,66,14],[51,19,66,17],[51,20,66,18],[51,22,66,20,"t"],[51,23,66,21],[51,26,66,24],[51,30,66,28],[51,31,66,29,"padLength"],[51,40,66,38],[51,42,66,40,"t"],[51,43,66,41],[51,45,66,43],[51,47,67,6,"res"],[51,50,67,9],[51,51,67,10,"i"],[51,52,67,11],[51,54,67,13],[51,55,67,14],[51,58,67,17],[51,59,67,18],[52,6,69,4,"res"],[52,9,69,7],[52,10,69,8,"i"],[52,11,69,9],[52,13,69,11],[52,14,69,12],[52,17,69,15],[52,18,69,16],[53,6,70,4,"res"],[53,9,70,7],[53,10,70,8,"i"],[53,11,70,9],[53,13,70,11],[53,14,70,12],[53,17,70,15],[53,18,70,16],[54,6,71,4,"res"],[54,9,71,7],[54,10,71,8,"i"],[54,11,71,9],[54,13,71,11],[54,14,71,12],[54,17,71,15],[54,18,71,16],[55,6,72,4,"res"],[55,9,72,7],[55,10,72,8,"i"],[55,11,72,9],[55,13,72,11],[55,14,72,12],[55,17,72,15],[55,18,72,16],[56,6,73,4,"res"],[56,9,73,7],[56,10,73,8,"i"],[56,11,73,9],[56,13,73,11],[56,14,73,12],[56,17,73,16,"len"],[56,20,73,19],[56,25,73,24],[56,27,73,26],[56,30,73,30],[56,34,73,34],[57,6,74,4,"res"],[57,9,74,7],[57,10,74,8,"i"],[57,11,74,9],[57,13,74,11],[57,14,74,12],[57,17,74,16,"len"],[57,20,74,19],[57,25,74,24],[57,27,74,26],[57,30,74,30],[57,34,74,34],[58,6,75,4,"res"],[58,9,75,7],[58,10,75,8,"i"],[58,11,75,9],[58,13,75,11],[58,14,75,12],[58,17,75,16,"len"],[58,20,75,19],[58,25,75,24],[58,26,75,25],[58,29,75,29],[58,33,75,33],[59,6,76,4,"res"],[59,9,76,7],[59,10,76,8,"i"],[59,11,76,9],[59,13,76,11],[59,14,76,12],[59,17,76,15,"len"],[59,20,76,18],[59,23,76,21],[59,27,76,25],[60,4,77,2],[60,5,77,3],[60,11,77,9],[61,6,78,4,"res"],[61,9,78,7],[61,10,78,8,"i"],[61,11,78,9],[61,13,78,11],[61,14,78,12],[61,17,78,15,"len"],[61,20,78,18],[61,23,78,21],[61,27,78,25],[62,6,79,4,"res"],[62,9,79,7],[62,10,79,8,"i"],[62,11,79,9],[62,13,79,11],[62,14,79,12],[62,17,79,16,"len"],[62,20,79,19],[62,25,79,24],[62,26,79,25],[62,29,79,29],[62,33,79,33],[63,6,80,4,"res"],[63,9,80,7],[63,10,80,8,"i"],[63,11,80,9],[63,13,80,11],[63,14,80,12],[63,17,80,16,"len"],[63,20,80,19],[63,25,80,24],[63,27,80,26],[63,30,80,30],[63,34,80,34],[64,6,81,4,"res"],[64,9,81,7],[64,10,81,8,"i"],[64,11,81,9],[64,13,81,11],[64,14,81,12],[64,17,81,16,"len"],[64,20,81,19],[64,25,81,24],[64,27,81,26],[64,30,81,30],[64,34,81,34],[65,6,82,4,"res"],[65,9,82,7],[65,10,82,8,"i"],[65,11,82,9],[65,13,82,11],[65,14,82,12],[65,17,82,15],[65,18,82,16],[66,6,83,4,"res"],[66,9,83,7],[66,10,83,8,"i"],[66,11,83,9],[66,13,83,11],[66,14,83,12],[66,17,83,15],[66,18,83,16],[67,6,84,4,"res"],[67,9,84,7],[67,10,84,8,"i"],[67,11,84,9],[67,13,84,11],[67,14,84,12],[67,17,84,15],[67,18,84,16],[68,6,85,4,"res"],[68,9,85,7],[68,10,85,8,"i"],[68,11,85,9],[68,13,85,11],[68,14,85,12],[68,17,85,15],[68,18,85,16],[69,6,87,4],[69,11,87,9,"t"],[69,12,87,10],[69,15,87,13],[69,16,87,14],[69,18,87,16,"t"],[69,19,87,17],[69,22,87,20],[69,26,87,24],[69,27,87,25,"padLength"],[69,36,87,34],[69,38,87,36,"t"],[69,39,87,37],[69,41,87,39],[69,43,88,6,"res"],[69,46,88,9],[69,47,88,10,"i"],[69,48,88,11],[69,50,88,13],[69,51,88,14],[69,54,88,17],[69,55,88,18],[70,4,89,2],[71,4,91,2],[71,11,91,9,"res"],[71,14,91,12],[72,2,92,0],[72,3,92,1],[73,0,92,2],[73,3]],"functionMap":{"names":["<global>","BlockHash","update","digest","pad"],"mappings":"AAA;ACK;CDW;6BEG;CFyB;6BGE;CHK;2BIE;CJsC"}},"type":"js/module"}]}