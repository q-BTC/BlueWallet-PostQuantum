{"dependencies":[{"name":"side-channel-weakmap","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":28,"index":236},"end":{"line":7,"column":59,"index":267}}],"key":"1nWSIvxghcvQWfuk6eSYZHkYf2A="}},{"name":"side-channel-map","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":24,"index":179},"end":{"line":6,"column":51,"index":206}}],"key":"4KgF1Kj35NpNTyy3u1IfGKKeZa8="}},{"name":"side-channel-list","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":25,"index":125},"end":{"line":5,"column":53,"index":153}}],"key":"wg4Wp9M8neDAj8tJ3sEkCHAtOvU="}},{"name":"es-errors/type","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":42,"index":57}}],"key":"JK6ql1q9XC7Vc2zUHS8FnD1mVEg="}},{"name":"object-inspect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":73},"end":{"line":4,"column":39,"index":98}}],"key":"aJimx9YkW5uUGBRRft350T29Ty8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var makeChannel = _$$_REQUIRE(_dependencyMap[0], \"side-channel-weakmap\") || _$$_REQUIRE(_dependencyMap[1], \"side-channel-map\") || _$$_REQUIRE(_dependencyMap[2], \"side-channel-list\");\n\n  /** @type {import('.')} */\n  module.exports = function getSideChannel() {\n    /** @typedef {ReturnType<typeof getSideChannel>} Channel */\n\n    /** @type {Channel | undefined} */var $channelData;\n\n    /** @type {Channel} */\n    var channel = {\n      assert: function assert(key) {\n        if (!channel.has(key)) {\n          throw new (_$$_REQUIRE(_dependencyMap[3], \"es-errors/type\"))('Side channel does not contain ' + _$$_REQUIRE(_dependencyMap[4], \"object-inspect\")(key));\n        }\n      },\n      'delete': function _delete(key) {\n        return !!$channelData && $channelData['delete'](key);\n      },\n      get: function get(key) {\n        return $channelData && $channelData.get(key);\n      },\n      has: function has(key) {\n        return !!$channelData && $channelData.has(key);\n      },\n      set: function set(key, value) {\n        if (!$channelData) {\n          $channelData = makeChannel();\n        }\n        $channelData.set(key, value);\n      }\n    };\n    // @ts-expect-error TODO: figure out why this is erroring\n    return channel;\n  };\n});","lineCount":38,"map":[[2,2,1,0],[2,14,1,12],[4,2,9,0],[4,6,9,4,"makeChannel"],[4,17,9,15],[4,20,9,18,"_$$_REQUIRE"],[4,31,9,18],[4,32,9,18,"_dependencyMap"],[4,46,9,18],[4,78,9,18,"_$$_REQUIRE"],[4,89,9,18],[4,90,9,18,"_dependencyMap"],[4,104,9,18],[4,128,9,60],[4,132,9,60,"_$$_REQUIRE"],[4,143,9,60],[4,144,9,60,"_dependencyMap"],[4,158,9,60],[4,183,9,82],[6,2,11,0],[7,2,12,0,"module"],[7,8,12,6],[7,9,12,7,"exports"],[7,16,12,14],[7,19,12,17],[7,28,12,26,"getSideChannel"],[7,42,12,40,"getSideChannel"],[7,43,12,40],[7,45,12,43],[8,4,13,1],[10,4,15,1],[10,38,15,36],[10,42,15,40,"$channelData"],[10,54,15,52],[12,4,17,1],[13,4,18,1],[13,8,18,5,"channel"],[13,15,18,12],[13,18,18,15],[14,6,19,2,"assert"],[14,12,19,8],[14,14,19,10],[14,23,19,2,"assert"],[14,29,19,8,"assert"],[14,30,19,20,"key"],[14,33,19,23],[14,35,19,25],[15,8,20,3],[15,12,20,7],[15,13,20,8,"channel"],[15,20,20,15],[15,21,20,16,"has"],[15,24,20,19],[15,25,20,20,"key"],[15,28,20,23],[15,29,20,24],[15,31,20,26],[16,10,21,4],[16,16,21,10],[16,21,21,10,"_$$_REQUIRE"],[16,32,21,10],[16,33,21,10,"_dependencyMap"],[16,47,21,10],[16,71,21,25],[16,103,21,57],[16,106,21,60,"_$$_REQUIRE"],[16,117,21,60],[16,118,21,60,"_dependencyMap"],[16,132,21,60],[16,155,21,68,"key"],[16,158,21,71],[16,159,21,72],[16,160,21,73],[17,8,22,3],[18,6,23,2],[18,7,23,3],[19,6,24,2],[19,14,24,10],[19,16,24,12],[19,25,24,2,"_delete"],[19,32,24,10,"_delete"],[19,33,24,22,"key"],[19,36,24,25],[19,38,24,27],[20,8,25,3],[20,15,25,10],[20,16,25,11],[20,17,25,12,"$channelData"],[20,29,25,24],[20,33,25,28,"$channelData"],[20,45,25,40],[20,46,25,41],[20,54,25,49],[20,55,25,50],[20,56,25,51,"key"],[20,59,25,54],[20,60,25,55],[21,6,26,2],[21,7,26,3],[22,6,27,2,"get"],[22,9,27,5],[22,11,27,7],[22,20,27,2,"get"],[22,23,27,5,"get"],[22,24,27,17,"key"],[22,27,27,20],[22,29,27,22],[23,8,28,3],[23,15,28,10,"$channelData"],[23,27,28,22],[23,31,28,26,"$channelData"],[23,43,28,38],[23,44,28,39,"get"],[23,47,28,42],[23,48,28,43,"key"],[23,51,28,46],[23,52,28,47],[24,6,29,2],[24,7,29,3],[25,6,30,2,"has"],[25,9,30,5],[25,11,30,7],[25,20,30,2,"has"],[25,23,30,5,"has"],[25,24,30,17,"key"],[25,27,30,20],[25,29,30,22],[26,8,31,3],[26,15,31,10],[26,16,31,11],[26,17,31,12,"$channelData"],[26,29,31,24],[26,33,31,28,"$channelData"],[26,45,31,40],[26,46,31,41,"has"],[26,49,31,44],[26,50,31,45,"key"],[26,53,31,48],[26,54,31,49],[27,6,32,2],[27,7,32,3],[28,6,33,2,"set"],[28,9,33,5],[28,11,33,7],[28,20,33,2,"set"],[28,23,33,5,"set"],[28,24,33,17,"key"],[28,27,33,20],[28,29,33,22,"value"],[28,34,33,27],[28,36,33,29],[29,8,34,3],[29,12,34,7],[29,13,34,8,"$channelData"],[29,25,34,20],[29,27,34,22],[30,10,35,4,"$channelData"],[30,22,35,16],[30,25,35,19,"makeChannel"],[30,36,35,30],[30,37,35,31],[30,38,35,32],[31,8,36,3],[32,8,38,3,"$channelData"],[32,20,38,15],[32,21,38,16,"set"],[32,24,38,19],[32,25,38,20,"key"],[32,28,38,23],[32,30,38,25,"value"],[32,35,38,30],[32,36,38,31],[33,6,39,2],[34,4,40,1],[34,5,40,2],[35,4,41,1],[36,4,42,1],[36,11,42,8,"channel"],[36,18,42,15],[37,2,43,0],[37,3,43,1],[38,0,43,2],[38,3]],"functionMap":{"names":["<global>","getSideChannel","channel.assert","channel._delete","channel.get","channel.has","channel.set"],"mappings":"AAA;iBCW;UCO;GDI;YEC;GFE;OGC;GHE;OIC;GJE;OKC;GLM;CDI"}},"type":"js/module"}]}