{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1399,"column":0,"index":44699}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1399,"column":0,"index":44699}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1399,"column":0,"index":44699}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1399,"column":0,"index":44699}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":19,"index":405},"end":{"line":10,"column":40,"index":426}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}},{"name":"bip174","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":34,"index":111}},{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":34,"index":111}}],"key":"H24KkgPT2zAV/Za0F3dKre/tztw="}},{"name":"./bufferutils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":22,"index":284},"end":{"line":7,"column":46,"index":308}},{"start":{"line":7,"column":22,"index":284},"end":{"line":7,"column":46,"index":308}},{"start":{"line":7,"column":22,"index":284},"end":{"line":7,"column":46,"index":308}},{"start":{"line":7,"column":22,"index":284},"end":{"line":7,"column":46,"index":308}}],"key":"8h+4nPdiw4lgWqmpJE4tN3Ks+fM="}},{"name":"./address","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":18,"index":240},"end":{"line":6,"column":38,"index":260}},{"start":{"line":6,"column":18,"index":240},"end":{"line":6,"column":38,"index":260}}],"key":"GT9ovCpEVJfvfL3l5/wI3+rX9eo=","isOptional":false}},{"name":"bip174/src/lib/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}},{"start":{"line":5,"column":16,"index":189},"end":{"line":5,"column":47,"index":220}}],"key":"24etM7du7wf4wGau9TCD9ughqCk="}},{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}},{"start":{"line":12,"column":16,"index":484},"end":{"line":12,"column":35,"index":503}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}},{"name":"./ecpair","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":17,"index":365},"end":{"line":9,"column":36,"index":384}},{"start":{"line":9,"column":17,"index":365},"end":{"line":9,"column":36,"index":384}}],"key":"gBmfZquSE9Xxa5HPpEFCKKFZvzw="}},{"name":"./transaction","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}},{"start":{"line":13,"column":22,"index":527},"end":{"line":13,"column":46,"index":551}}],"key":"QyHAamlaDdme9J9SOOQ5bKZGvis="}},{"name":"./payments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}},{"start":{"line":11,"column":17,"index":445},"end":{"line":11,"column":38,"index":466}}],"key":"jFG+uchKeOlOOhe0V9dHvbyfUWQ="}},{"name":"bip174/src/lib/converter/varint","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":129},"end":{"line":4,"column":58,"index":171}},{"start":{"line":4,"column":16,"index":129},"end":{"line":4,"column":58,"index":171}},{"start":{"line":4,"column":16,"index":129},"end":{"line":4,"column":58,"index":171}},{"start":{"line":4,"column":16,"index":129},"end":{"line":4,"column":58,"index":171}}],"key":"WqBUbX5ejlk4QpY7GpLq5kE/73U="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":327},"end":{"line":8,"column":36,"index":346}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  /**\n   * These are the default arguments for a Psbt instance.\n   */\n  var DEFAULT_OPTS = {\n    /**\n     * A bitcoinjs Network object. This is only used if you pass an `address`\n     * parameter to addOutput. Otherwise it is not needed and can be left default.\n     */\n    network: _$$_REQUIRE(_dependencyMap[4], \"./networks\").bitcoin,\n    /**\n     * When extractTransaction is called, the fee rate is checked.\n     * THIS IS NOT TO BE RELIED ON.\n     * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n     */\n    maximumFeeRate: 5000\n  };\n  /**\n   * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n   * There are 6 roles that this class fulfills. (Explained in BIP174)\n   *\n   * Creator: This can be done with `new Psbt()`\n   * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n   *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n   *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n   *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n   *   addInput requires hash: Buffer | string; and index: number; as attributes\n   *   and can also include any attributes that are used in updateInput method.\n   *   addOutput requires script: Buffer; and value: number; and likewise can include\n   *   data for updateOutput.\n   *   For a list of what attributes should be what types. Check the bip174 library.\n   *   Also, check the integration tests for some examples of usage.\n   * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n   *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n   *   your info. Or you can explicitly sign a specific input with signInput and\n   *   signInputAsync. For the async methods you can create a SignerAsync object\n   *   and use something like a hardware wallet to sign with. (You must implement this)\n   * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n   *   the psbt calling combine will always have precedence when a conflict occurs.\n   *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n   *   all sequences, version, locktime, etc. are the same before combining.\n   * Input Finalizer: This role is fairly important. Not only does it need to construct\n   *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n   *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n   *   Running any finalize method will delete any data in the input(s) that are no longer\n   *   needed due to the finalized scripts containing the information.\n   * Transaction Extractor: This role will perform some checks before returning a\n   *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n   */\n  var Psbt = /*#__PURE__*/function () {\n    function Psbt() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new (_$$_REQUIRE(_dependencyMap[5], \"bip174\").Psbt)(new PsbtTransaction());\n      _classCallCheck(this, Psbt);\n      this.data = data;\n      // set defaults\n      this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n      this.__CACHE = {\n        __NON_WITNESS_UTXO_TX_CACHE: [],\n        __NON_WITNESS_UTXO_BUF_CACHE: [],\n        __TX_IN_CACHE: {},\n        __TX: this.data.globalMap.unsignedTx.tx,\n        // Old TransactionBuilder behavior was to not confirm input values\n        // before signing. Even though we highly encourage people to get\n        // the full parent transaction to verify values, the ability to\n        // sign non-segwit inputs without the full transaction was often\n        // requested. So the only way to activate is to use @ts-ignore.\n        // We will disable exporting the Psbt when unsafe sign is active.\n        // because it is not BIP174 compliant.\n        __UNSAFE_SIGN_NONSEGWIT: false\n      };\n      if (this.data.inputs.length === 0) this.setVersion(2);\n      // Make data hidden when enumerating\n      var dpew = function dpew(obj, attr, enumerable, writable) {\n        return Object.defineProperty(obj, attr, {\n          enumerable: enumerable,\n          writable: writable\n        });\n      };\n      dpew(this, '__CACHE', false, true);\n      dpew(this, 'opts', false, true);\n    }\n    return _createClass(Psbt, [{\n      key: \"inputCount\",\n      get: function get() {\n        return this.data.inputs.length;\n      }\n    }, {\n      key: \"version\",\n      get: function get() {\n        return this.__CACHE.__TX.version;\n      },\n      set: function set(version) {\n        this.setVersion(version);\n      }\n    }, {\n      key: \"locktime\",\n      get: function get() {\n        return this.__CACHE.__TX.locktime;\n      },\n      set: function set(locktime) {\n        this.setLocktime(locktime);\n      }\n    }, {\n      key: \"txInputs\",\n      get: function get() {\n        return this.__CACHE.__TX.ins.map(function (input) {\n          return {\n            hash: _$$_REQUIRE(_dependencyMap[6], \"./bufferutils\").cloneBuffer(input.hash),\n            index: input.index,\n            sequence: input.sequence\n          };\n        });\n      }\n    }, {\n      key: \"txOutputs\",\n      get: function get() {\n        var _this = this;\n        return this.__CACHE.__TX.outs.map(function (output) {\n          var address;\n          try {\n            address = _$$_REQUIRE(_dependencyMap[7], \"./address\").fromOutputScript(output.script, _this.opts.network);\n          } catch (_) {}\n          return {\n            script: _$$_REQUIRE(_dependencyMap[6], \"./bufferutils\").cloneBuffer(output.script),\n            value: output.value,\n            address: address\n          };\n        });\n      }\n    }, {\n      key: \"combine\",\n      value: function combine() {\n        var _this$data;\n        for (var _len = arguments.length, those = new Array(_len), _key = 0; _key < _len; _key++) {\n          those[_key] = arguments[_key];\n        }\n        (_this$data = this.data).combine.apply(_this$data, _toConsumableArray(those.map(function (o) {\n          return o.data;\n        })));\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        // TODO: more efficient cloning\n        var res = Psbt.fromBuffer(this.data.toBuffer());\n        res.opts = JSON.parse(JSON.stringify(this.opts));\n        return res;\n      }\n    }, {\n      key: \"setMaximumFeeRate\",\n      value: function setMaximumFeeRate(satoshiPerByte) {\n        check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n        this.opts.maximumFeeRate = satoshiPerByte;\n      }\n    }, {\n      key: \"setVersion\",\n      value: function setVersion(version) {\n        check32Bit(version);\n        checkInputsForPartialSig(this.data.inputs, 'setVersion');\n        var c = this.__CACHE;\n        c.__TX.version = version;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"setLocktime\",\n      value: function setLocktime(locktime) {\n        check32Bit(locktime);\n        checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n        var c = this.__CACHE;\n        c.__TX.locktime = locktime;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"setInputSequence\",\n      value: function setInputSequence(inputIndex, sequence) {\n        check32Bit(sequence);\n        checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n        var c = this.__CACHE;\n        if (c.__TX.ins.length <= inputIndex) {\n          throw new Error('Input index too high');\n        }\n        c.__TX.ins[inputIndex].sequence = sequence;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"addInputs\",\n      value: function addInputs(inputDatas) {\n        var _this2 = this;\n        inputDatas.forEach(function (inputData) {\n          return _this2.addInput(inputData);\n        });\n        return this;\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(inputData) {\n        if (arguments.length > 1 || !inputData || inputData.hash === undefined || inputData.index === undefined) {\n          throw new Error(`Invalid arguments for Psbt.addInput. ` + `Requires single object with at least [hash] and [index]`);\n        }\n        checkInputsForPartialSig(this.data.inputs, 'addInput');\n        if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n        var c = this.__CACHE;\n        this.data.addInput(inputData);\n        var txIn = c.__TX.ins[c.__TX.ins.length - 1];\n        checkTxInputCache(c, txIn);\n        var inputIndex = this.data.inputs.length - 1;\n        var input = this.data.inputs[inputIndex];\n        if (input.nonWitnessUtxo) {\n          addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n        }\n        c.__FEE = undefined;\n        c.__FEE_RATE = undefined;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"addOutputs\",\n      value: function addOutputs(outputDatas) {\n        var _this3 = this;\n        outputDatas.forEach(function (outputData) {\n          return _this3.addOutput(outputData);\n        });\n        return this;\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(outputData) {\n        if (arguments.length > 1 || !outputData || outputData.value === undefined || outputData.address === undefined && outputData.script === undefined) {\n          throw new Error(`Invalid arguments for Psbt.addOutput. ` + `Requires single object with at least [script or address] and [value]`);\n        }\n        checkInputsForPartialSig(this.data.inputs, 'addOutput');\n        var _outputData = outputData,\n          address = _outputData.address;\n        if (typeof address === 'string') {\n          var network = this.opts.network;\n          var script = _$$_REQUIRE(_dependencyMap[7], \"./address\").toOutputScript(address, network);\n          outputData = Object.assign(outputData, {\n            script: script\n          });\n        }\n        var c = this.__CACHE;\n        this.data.addOutput(outputData);\n        c.__FEE = undefined;\n        c.__FEE_RATE = undefined;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"extractTransaction\",\n      value: function extractTransaction(disableFeeCheck) {\n        if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n        var c = this.__CACHE;\n        if (!disableFeeCheck) {\n          checkFees(this, c, this.opts);\n        }\n        if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n        var tx = c.__TX.clone();\n        inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n        return tx;\n      }\n    }, {\n      key: \"getFeeRate\",\n      value: function getFeeRate() {\n        return getTxCacheValue('__FEE_RATE', 'fee rate', this.data.inputs, this.__CACHE);\n      }\n    }, {\n      key: \"getFee\",\n      value: function getFee() {\n        return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n      }\n    }, {\n      key: \"finalizeAllInputs\",\n      value: function finalizeAllInputs() {\n        var _this4 = this;\n        _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(this.data.inputs, 0); // making sure we have at least one\n        range(this.data.inputs.length).forEach(function (idx) {\n          return _this4.finalizeInput(idx);\n        });\n        return this;\n      }\n    }, {\n      key: \"finalizeInput\",\n      value: function finalizeInput(inputIndex) {\n        var finalScriptsFunc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : getFinalScripts;\n        var input = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(this.data.inputs, inputIndex);\n        var _getScriptFromInput = getScriptFromInput(inputIndex, input, this.__CACHE),\n          script = _getScriptFromInput.script,\n          isP2SH = _getScriptFromInput.isP2SH,\n          isP2WSH = _getScriptFromInput.isP2WSH,\n          isSegwit = _getScriptFromInput.isSegwit;\n        if (!script) throw new Error(`No script found for input #${inputIndex}`);\n        checkPartialSigSighashes(input);\n        var _finalScriptsFunc = finalScriptsFunc(inputIndex, input, script, isSegwit, isP2SH, isP2WSH),\n          finalScriptSig = _finalScriptsFunc.finalScriptSig,\n          finalScriptWitness = _finalScriptsFunc.finalScriptWitness;\n        if (finalScriptSig) this.data.updateInput(inputIndex, {\n          finalScriptSig: finalScriptSig\n        });\n        if (finalScriptWitness) this.data.updateInput(inputIndex, {\n          finalScriptWitness: finalScriptWitness\n        });\n        if (!finalScriptSig && !finalScriptWitness) throw new Error(`Unknown error finalizing input #${inputIndex}`);\n        this.data.clearFinalizedInput(inputIndex);\n        return this;\n      }\n    }, {\n      key: \"getInputType\",\n      value: function getInputType(inputIndex) {\n        var input = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(this.data.inputs, inputIndex);\n        var script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n        var result = getMeaningfulScript(script, inputIndex, 'input', input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig), input.witnessScript || redeemFromFinalWitnessScript(input.finalScriptWitness));\n        var type = result.type === 'raw' ? '' : result.type + '-';\n        var mainType = classifyScript(result.meaningfulScript);\n        return type + mainType;\n      }\n    }, {\n      key: \"inputHasPubkey\",\n      value: function inputHasPubkey(inputIndex, pubkey) {\n        var input = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(this.data.inputs, inputIndex);\n        return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n      }\n    }, {\n      key: \"inputHasHDKey\",\n      value: function inputHasHDKey(inputIndex, root) {\n        var input = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(this.data.inputs, inputIndex);\n        var derivationIsMine = bip32DerivationIsMine(root);\n        return !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine);\n      }\n    }, {\n      key: \"outputHasPubkey\",\n      value: function outputHasPubkey(outputIndex, pubkey) {\n        var output = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForOutput(this.data.outputs, outputIndex);\n        return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n      }\n    }, {\n      key: \"outputHasHDKey\",\n      value: function outputHasHDKey(outputIndex, root) {\n        var output = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForOutput(this.data.outputs, outputIndex);\n        var derivationIsMine = bip32DerivationIsMine(root);\n        return !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine);\n      }\n    }, {\n      key: \"validateSignaturesOfAllInputs\",\n      value: function validateSignaturesOfAllInputs() {\n        var _this5 = this;\n        _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(this.data.inputs, 0); // making sure we have at least one\n        var results = range(this.data.inputs.length).map(function (idx) {\n          return _this5.validateSignaturesOfInput(idx);\n        });\n        return results.reduce(function (final, res) {\n          return res === true && final;\n        }, true);\n      }\n    }, {\n      key: \"validateSignaturesOfInput\",\n      value: function validateSignaturesOfInput(inputIndex, pubkey) {\n        var input = this.data.inputs[inputIndex];\n        var partialSig = (input || {}).partialSig;\n        if (!input || !partialSig || partialSig.length < 1) throw new Error('No signatures to validate');\n        var mySigs = pubkey ? partialSig.filter(function (sig) {\n          return sig.pubkey.equals(pubkey);\n        }) : partialSig;\n        if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n        var results = [];\n        var hashCache;\n        var scriptCache;\n        var sighashCache;\n        for (var pSig of mySigs) {\n          var sig = _$$_REQUIRE(_dependencyMap[9], \"./script\").signature.decode(pSig.signature);\n          var _ref = sighashCache !== sig.hashType ? getHashForSig(inputIndex, Object.assign({}, input, {\n              sighashType: sig.hashType\n            }), this.__CACHE, true) : {\n              hash: hashCache,\n              script: scriptCache\n            },\n            hash = _ref.hash,\n            script = _ref.script;\n          sighashCache = sig.hashType;\n          hashCache = hash;\n          scriptCache = script;\n          checkScriptForPubkey(pSig.pubkey, script, 'verify');\n          var keypair = _$$_REQUIRE(_dependencyMap[10], \"./ecpair\").fromPublicKey(pSig.pubkey);\n          results.push(keypair.verify(hash, sig.signature));\n        }\n        return results.every(function (res) {\n          return res === true;\n        });\n      }\n    }, {\n      key: \"signAllInputsHD\",\n      value: function signAllInputsHD(hdKeyPair) {\n        var sighashTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n          throw new Error('Need HDSigner to sign input');\n        }\n        var results = [];\n        for (var i of range(this.data.inputs.length)) {\n          try {\n            this.signInputHD(i, hdKeyPair, sighashTypes);\n            results.push(true);\n          } catch (err) {\n            results.push(false);\n          }\n        }\n        if (results.every(function (v) {\n          return v === false;\n        })) {\n          throw new Error('No inputs were signed');\n        }\n        return this;\n      }\n    }, {\n      key: \"signAllInputsHDAsync\",\n      value: function signAllInputsHDAsync(hdKeyPair) {\n        var _this6 = this;\n        var sighashTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        return new Promise(function (resolve, reject) {\n          if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n            return reject(new Error('Need HDSigner to sign input'));\n          }\n          var results = [];\n          var promises = [];\n          for (var i of range(_this6.data.inputs.length)) {\n            promises.push(_this6.signInputHDAsync(i, hdKeyPair, sighashTypes).then(function () {\n              results.push(true);\n            }, function () {\n              results.push(false);\n            }));\n          }\n          return Promise.all(promises).then(function () {\n            if (results.every(function (v) {\n              return v === false;\n            })) {\n              return reject(new Error('No inputs were signed'));\n            }\n            resolve();\n          });\n        });\n      }\n    }, {\n      key: \"signInputHD\",\n      value: function signInputHD(inputIndex, hdKeyPair) {\n        var _this7 = this;\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n          throw new Error('Need HDSigner to sign input');\n        }\n        var signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n        signers.forEach(function (signer) {\n          return _this7.signInput(inputIndex, signer, sighashTypes);\n        });\n        return this;\n      }\n    }, {\n      key: \"signInputHDAsync\",\n      value: function signInputHDAsync(inputIndex, hdKeyPair) {\n        var _this8 = this;\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        return new Promise(function (resolve, reject) {\n          if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n            return reject(new Error('Need HDSigner to sign input'));\n          }\n          var signers = getSignersFromHD(inputIndex, _this8.data.inputs, hdKeyPair);\n          var promises = signers.map(function (signer) {\n            return _this8.signInputAsync(inputIndex, signer, sighashTypes);\n          });\n          return Promise.all(promises).then(function () {\n            resolve();\n          }).catch(reject);\n        });\n      }\n    }, {\n      key: \"signAllInputs\",\n      value: function signAllInputs(keyPair) {\n        var sighashTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n        // TODO: Add a pubkey/pubkeyhash cache to each input\n        // as input information is added, then eventually\n        // optimize this method.\n        var results = [];\n        for (var i of range(this.data.inputs.length)) {\n          try {\n            this.signInput(i, keyPair, sighashTypes);\n            results.push(true);\n          } catch (err) {\n            results.push(false);\n          }\n        }\n        if (results.every(function (v) {\n          return v === false;\n        })) {\n          throw new Error('No inputs were signed');\n        }\n        return this;\n      }\n    }, {\n      key: \"signAllInputsAsync\",\n      value: function signAllInputsAsync(keyPair) {\n        var _this9 = this;\n        var sighashTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        return new Promise(function (resolve, reject) {\n          if (!keyPair || !keyPair.publicKey) return reject(new Error('Need Signer to sign input'));\n          // TODO: Add a pubkey/pubkeyhash cache to each input\n          // as input information is added, then eventually\n          // optimize this method.\n          var results = [];\n          var promises = [];\n          for (var _ref2 of _this9.data.inputs.entries()) {\n            var _ref3 = _slicedToArray(_ref2, 1);\n            var i = _ref3[0];\n            promises.push(_this9.signInputAsync(i, keyPair, sighashTypes).then(function () {\n              results.push(true);\n            }, function () {\n              results.push(false);\n            }));\n          }\n          return Promise.all(promises).then(function () {\n            if (results.every(function (v) {\n              return v === false;\n            })) {\n              return reject(new Error('No inputs were signed'));\n            }\n            resolve();\n          });\n        });\n      }\n    }, {\n      key: \"signInput\",\n      value: function signInput(inputIndex, keyPair) {\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n        var _getHashAndSighashTyp = getHashAndSighashType(this.data.inputs, inputIndex, keyPair.publicKey, this.__CACHE, sighashTypes),\n          hash = _getHashAndSighashTyp.hash,\n          sighashType = _getHashAndSighashTyp.sighashType;\n        var partialSig = [{\n          pubkey: keyPair.publicKey,\n          signature: _$$_REQUIRE(_dependencyMap[9], \"./script\").signature.encode(keyPair.sign(hash), sighashType)\n        }];\n        this.data.updateInput(inputIndex, {\n          partialSig: partialSig\n        });\n        return this;\n      }\n    }, {\n      key: \"signInputAsync\",\n      value: function signInputAsync(inputIndex, keyPair) {\n        var _this0 = this;\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL];\n        return Promise.resolve().then(function () {\n          if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n          var _getHashAndSighashTyp2 = getHashAndSighashType(_this0.data.inputs, inputIndex, keyPair.publicKey, _this0.__CACHE, sighashTypes),\n            hash = _getHashAndSighashTyp2.hash,\n            sighashType = _getHashAndSighashTyp2.sighashType;\n          return Promise.resolve(keyPair.sign(hash)).then(function (signature) {\n            var partialSig = [{\n              pubkey: keyPair.publicKey,\n              signature: _$$_REQUIRE(_dependencyMap[9], \"./script\").signature.encode(signature, sighashType)\n            }];\n            _this0.data.updateInput(inputIndex, {\n              partialSig: partialSig\n            });\n          });\n        });\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer() {\n        checkCache(this.__CACHE);\n        return this.data.toBuffer();\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex() {\n        checkCache(this.__CACHE);\n        return this.data.toHex();\n      }\n    }, {\n      key: \"toBase64\",\n      value: function toBase64() {\n        checkCache(this.__CACHE);\n        return this.data.toBase64();\n      }\n    }, {\n      key: \"updateGlobal\",\n      value: function updateGlobal(updateData) {\n        this.data.updateGlobal(updateData);\n        return this;\n      }\n    }, {\n      key: \"updateInput\",\n      value: function updateInput(inputIndex, updateData) {\n        if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n        this.data.updateInput(inputIndex, updateData);\n        if (updateData.nonWitnessUtxo) {\n          addNonWitnessTxCache(this.__CACHE, this.data.inputs[inputIndex], inputIndex);\n        }\n        return this;\n      }\n    }, {\n      key: \"updateOutput\",\n      value: function updateOutput(outputIndex, updateData) {\n        this.data.updateOutput(outputIndex, updateData);\n        return this;\n      }\n    }, {\n      key: \"addUnknownKeyValToGlobal\",\n      value: function addUnknownKeyValToGlobal(keyVal) {\n        this.data.addUnknownKeyValToGlobal(keyVal);\n        return this;\n      }\n    }, {\n      key: \"addUnknownKeyValToInput\",\n      value: function addUnknownKeyValToInput(inputIndex, keyVal) {\n        this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n        return this;\n      }\n    }, {\n      key: \"addUnknownKeyValToOutput\",\n      value: function addUnknownKeyValToOutput(outputIndex, keyVal) {\n        this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n        return this;\n      }\n    }, {\n      key: \"clearFinalizedInput\",\n      value: function clearFinalizedInput(inputIndex) {\n        this.data.clearFinalizedInput(inputIndex);\n        return this;\n      }\n    }], [{\n      key: \"fromBase64\",\n      value: function fromBase64(data) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var buffer = Buffer.from(data, 'base64');\n        return this.fromBuffer(buffer, opts);\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(data) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var buffer = Buffer.from(data, 'hex');\n        return this.fromBuffer(buffer, opts);\n      }\n    }, {\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var psbtBase = _$$_REQUIRE(_dependencyMap[5], \"bip174\").Psbt.fromBuffer(buffer, transactionFromBuffer);\n        var psbt = new Psbt(opts, psbtBase);\n        checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n        return psbt;\n      }\n    }]);\n  }();\n  exports.Psbt = Psbt;\n  /**\n   * This function is needed to pass to the bip174 base class's fromBuffer.\n   * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n   * Transaction (From the bip174 library) interface.\n   */\n  var transactionFromBuffer = function transactionFromBuffer(buffer) {\n    return new PsbtTransaction(buffer);\n  };\n  /**\n   * This class implements the Transaction interface from bip174 library.\n   * It contains a bitcoinjs-lib Transaction object.\n   */\n  var PsbtTransaction = /*#__PURE__*/function () {\n    function PsbtTransaction() {\n      var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Buffer.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      _classCallCheck(this, PsbtTransaction);\n      this.tx = _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.fromBuffer(buffer);\n      checkTxEmpty(this.tx);\n      Object.defineProperty(this, 'tx', {\n        enumerable: false,\n        writable: true\n      });\n    }\n    return _createClass(PsbtTransaction, [{\n      key: \"getInputOutputCounts\",\n      value: function getInputOutputCounts() {\n        return {\n          inputCount: this.tx.ins.length,\n          outputCount: this.tx.outs.length\n        };\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(input) {\n        if (input.hash === undefined || input.index === undefined || !Buffer.isBuffer(input.hash) && typeof input.hash !== 'string' || typeof input.index !== 'number') {\n          throw new Error('Error adding input.');\n        }\n        var hash = typeof input.hash === 'string' ? _$$_REQUIRE(_dependencyMap[6], \"./bufferutils\").reverseBuffer(Buffer.from(input.hash, 'hex')) : input.hash;\n        this.tx.addInput(hash, input.index, input.sequence);\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(output) {\n        if (output.script === undefined || output.value === undefined || !Buffer.isBuffer(output.script) || typeof output.value !== 'number') {\n          throw new Error('Error adding output.');\n        }\n        this.tx.addOutput(output.script, output.value);\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer() {\n        return this.tx.toBuffer();\n      }\n    }]);\n  }();\n  function canFinalize(input, script, scriptType) {\n    switch (scriptType) {\n      case 'pubkey':\n      case 'pubkeyhash':\n      case 'witnesspubkeyhash':\n        return hasSigs(1, input.partialSig);\n      case 'multisig':\n        var p2ms = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2ms({\n          output: script\n        });\n        return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n      default:\n        return false;\n    }\n  }\n  function checkCache(cache) {\n    if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n      throw new Error('Not BIP174 compliant, can not export');\n    }\n  }\n  function hasSigs(neededSigs, partialSig, pubkeys) {\n    if (!partialSig) return false;\n    var sigs;\n    if (pubkeys) {\n      sigs = pubkeys.map(function (pkey) {\n        var pubkey = _$$_REQUIRE(_dependencyMap[10], \"./ecpair\").fromPublicKey(pkey, {\n          compressed: true\n        }).publicKey;\n        return partialSig.find(function (pSig) {\n          return pSig.pubkey.equals(pubkey);\n        });\n      }).filter(function (v) {\n        return !!v;\n      });\n    } else {\n      sigs = partialSig;\n    }\n    if (sigs.length > neededSigs) throw new Error('Too many signatures');\n    return sigs.length === neededSigs;\n  }\n  function isFinalized(input) {\n    return !!input.finalScriptSig || !!input.finalScriptWitness;\n  }\n  function isPaymentFactory(payment) {\n    return function (script) {\n      try {\n        payment({\n          output: script\n        });\n        return true;\n      } catch (err) {\n        return false;\n      }\n    };\n  }\n  var isP2MS = isPaymentFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2ms);\n  var isP2PK = isPaymentFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2pk);\n  var isP2PKH = isPaymentFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2pkh);\n  var isP2WPKH = isPaymentFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2wpkh);\n  var isP2WSHScript = isPaymentFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2wsh);\n  var isP2SHScript = isPaymentFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2sh);\n  function bip32DerivationIsMine(root) {\n    return function (d) {\n      if (!d.masterFingerprint.equals(root.fingerprint)) return false;\n      if (!root.derivePath(d.path).publicKey.equals(d.pubkey)) return false;\n      return true;\n    };\n  }\n  function check32Bit(num) {\n    if (typeof num !== 'number' || num !== Math.floor(num) || num > 0xffffffff || num < 0) {\n      throw new Error('Invalid 32 bit integer');\n    }\n  }\n  function checkFees(psbt, cache, opts) {\n    var feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n    var vsize = cache.__EXTRACTED_TX.virtualSize();\n    var satoshis = feeRate * vsize;\n    if (feeRate >= opts.maximumFeeRate) {\n      throw new Error(`Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` + `fees, which is ${feeRate} satoshi per byte for a transaction ` + `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` + `byte). Use setMaximumFeeRate method to raise your threshold, or ` + `pass true to the first arg of extractTransaction.`);\n    }\n  }\n  function checkInputsForPartialSig(inputs, action) {\n    inputs.forEach(function (input) {\n      var throws = false;\n      var pSigs = [];\n      if ((input.partialSig || []).length === 0) {\n        if (!input.finalScriptSig && !input.finalScriptWitness) return;\n        pSigs = getPsigsFromInputFinalScripts(input);\n      } else {\n        pSigs = input.partialSig;\n      }\n      pSigs.forEach(function (pSig) {\n        var _bscript$signature$de = _$$_REQUIRE(_dependencyMap[9], \"./script\").signature.decode(pSig.signature),\n          hashType = _bscript$signature$de.hashType;\n        var whitelist = [];\n        var isAnyoneCanPay = hashType & _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ANYONECANPAY;\n        if (isAnyoneCanPay) whitelist.push('addInput');\n        var hashMod = hashType & 0x1f;\n        switch (hashMod) {\n          case _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL:\n            break;\n          case _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_SINGLE:\n          case _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_NONE:\n            whitelist.push('addOutput');\n            whitelist.push('setInputSequence');\n            break;\n        }\n        if (whitelist.indexOf(action) === -1) {\n          throws = true;\n        }\n      });\n      if (throws) {\n        throw new Error('Can not modify transaction, signatures exist.');\n      }\n    });\n  }\n  function checkPartialSigSighashes(input) {\n    if (!input.sighashType || !input.partialSig) return;\n    var partialSig = input.partialSig,\n      sighashType = input.sighashType;\n    partialSig.forEach(function (pSig) {\n      var _bscript$signature$de2 = _$$_REQUIRE(_dependencyMap[9], \"./script\").signature.decode(pSig.signature),\n        hashType = _bscript$signature$de2.hashType;\n      if (sighashType !== hashType) {\n        throw new Error('Signature sighash does not match input sighash type');\n      }\n    });\n  }\n  function checkScriptForPubkey(pubkey, script, action) {\n    if (!pubkeyInScript(pubkey, script)) {\n      throw new Error(`Can not ${action} for this input with the key ${pubkey.toString('hex')}`);\n    }\n  }\n  function checkTxEmpty(tx) {\n    var isEmpty = tx.ins.every(function (input) {\n      return input.script && input.script.length === 0 && input.witness && input.witness.length === 0;\n    });\n    if (!isEmpty) {\n      throw new Error('Format Error: Transaction ScriptSigs are not empty');\n    }\n  }\n  function checkTxForDupeIns(tx, cache) {\n    tx.ins.forEach(function (input) {\n      checkTxInputCache(cache, input);\n    });\n  }\n  function checkTxInputCache(cache, input) {\n    var key = _$$_REQUIRE(_dependencyMap[6], \"./bufferutils\").reverseBuffer(Buffer.from(input.hash)).toString('hex') + ':' + input.index;\n    if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n    cache.__TX_IN_CACHE[key] = 1;\n  }\n  function scriptCheckerFactory(payment, paymentScriptName) {\n    return function (inputIndex, scriptPubKey, redeemScript, ioType) {\n      var redeemScriptOutput = payment({\n        redeem: {\n          output: redeemScript\n        }\n      }).output;\n      if (!scriptPubKey.equals(redeemScriptOutput)) {\n        throw new Error(`${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`);\n      }\n    };\n  }\n  var checkRedeemScript = scriptCheckerFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2sh, 'Redeem script');\n  var checkWitnessScript = scriptCheckerFactory(_$$_REQUIRE(_dependencyMap[12], \"./payments\").p2wsh, 'Witness script');\n  function getTxCacheValue(key, name, inputs, c) {\n    if (!inputs.every(isFinalized)) throw new Error(`PSBT must be finalized to calculate ${name}`);\n    if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n    if (key === '__FEE' && c.__FEE) return c.__FEE;\n    var tx;\n    var mustFinalize = true;\n    if (c.__EXTRACTED_TX) {\n      tx = c.__EXTRACTED_TX;\n      mustFinalize = false;\n    } else {\n      tx = c.__TX.clone();\n    }\n    inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n    if (key === '__FEE_RATE') return c.__FEE_RATE;else if (key === '__FEE') return c.__FEE;\n  }\n  function getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n    var scriptType = classifyScript(script);\n    if (!canFinalize(input, script, scriptType)) throw new Error(`Can not finalize input #${inputIndex}`);\n    return prepareFinalScripts(script, scriptType, input.partialSig, isSegwit, isP2SH, isP2WSH);\n  }\n  function prepareFinalScripts(script, scriptType, partialSig, isSegwit, isP2SH, isP2WSH) {\n    var finalScriptSig;\n    var finalScriptWitness;\n    // Wow, the payments API is very handy\n    var payment = getPayment(script, scriptType, partialSig);\n    var p2wsh = !isP2WSH ? null : _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2wsh({\n      redeem: payment\n    });\n    var p2sh = !isP2SH ? null : _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2sh({\n      redeem: p2wsh || payment\n    });\n    if (isSegwit) {\n      if (p2wsh) {\n        finalScriptWitness = witnessStackToScriptWitness(p2wsh.witness);\n      } else {\n        finalScriptWitness = witnessStackToScriptWitness(payment.witness);\n      }\n      if (p2sh) {\n        finalScriptSig = p2sh.input;\n      }\n    } else {\n      if (p2sh) {\n        finalScriptSig = p2sh.input;\n      } else {\n        finalScriptSig = payment.input;\n      }\n    }\n    return {\n      finalScriptSig: finalScriptSig,\n      finalScriptWitness: finalScriptWitness\n    };\n  }\n  function getHashAndSighashType(inputs, inputIndex, pubkey, cache, sighashTypes) {\n    var input = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(inputs, inputIndex);\n    var _getHashForSig = getHashForSig(inputIndex, input, cache, false, sighashTypes),\n      hash = _getHashForSig.hash,\n      sighashType = _getHashForSig.sighashType,\n      script = _getHashForSig.script;\n    checkScriptForPubkey(pubkey, script, 'sign');\n    return {\n      hash: hash,\n      sighashType: sighashType\n    };\n  }\n  function getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n    var unsignedTx = cache.__TX;\n    var sighashType = input.sighashType || _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL;\n    if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n      var str = sighashTypeToString(sighashType);\n      throw new Error(`Sighash type is not allowed. Retry the sign method passing the ` + `sighashTypes array of whitelisted types. Sighash type: ${str}`);\n    }\n    var hash;\n    var prevout;\n    if (input.nonWitnessUtxo) {\n      var nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(cache, input, inputIndex);\n      var prevoutHash = unsignedTx.ins[inputIndex].hash;\n      var utxoHash = nonWitnessUtxoTx.getHash();\n      // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n      if (!prevoutHash.equals(utxoHash)) {\n        throw new Error(`Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`);\n      }\n      var prevoutIndex = unsignedTx.ins[inputIndex].index;\n      prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n    } else if (input.witnessUtxo) {\n      prevout = input.witnessUtxo;\n    } else {\n      throw new Error('Need a Utxo input item for signing');\n    }\n    var _getMeaningfulScript = getMeaningfulScript(prevout.script, inputIndex, 'input', input.redeemScript, input.witnessScript),\n      meaningfulScript = _getMeaningfulScript.meaningfulScript,\n      type = _getMeaningfulScript.type;\n    if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n      hash = unsignedTx.hashForWitnessV0(inputIndex, meaningfulScript, prevout.value, sighashType);\n    } else if (isP2WPKH(meaningfulScript)) {\n      // P2WPKH uses the P2PKH template for prevoutScript when signing\n      var signingScript = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2pkh({\n        hash: meaningfulScript.slice(2)\n      }).output;\n      hash = unsignedTx.hashForWitnessV0(inputIndex, signingScript, prevout.value, sighashType);\n    } else {\n      // non-segwit\n      if (input.nonWitnessUtxo === undefined && cache.__UNSAFE_SIGN_NONSEGWIT === false) throw new Error(`Input #${inputIndex} has witnessUtxo but non-segwit script: ` + `${meaningfulScript.toString('hex')}`);\n      if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false) console.warn('Warning: Signing non-segwit inputs without the full parent transaction ' + 'means there is a chance that a miner could feed you incorrect information ' + 'to trick you into paying large fees. This behavior is the same as the old ' + 'TransactionBuilder class when signing non-segwit scripts. You are not ' + 'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' + 'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' + '*********************');\n      hash = unsignedTx.hashForSignature(inputIndex, meaningfulScript, sighashType);\n    }\n    return {\n      script: meaningfulScript,\n      sighashType: sighashType,\n      hash: hash\n    };\n  }\n  function getPayment(script, scriptType, partialSig) {\n    var payment;\n    switch (scriptType) {\n      case 'multisig':\n        var sigs = getSortedSigs(script, partialSig);\n        payment = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2ms({\n          output: script,\n          signatures: sigs\n        });\n        break;\n      case 'pubkey':\n        payment = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2pk({\n          output: script,\n          signature: partialSig[0].signature\n        });\n        break;\n      case 'pubkeyhash':\n        payment = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2pkh({\n          output: script,\n          pubkey: partialSig[0].pubkey,\n          signature: partialSig[0].signature\n        });\n        break;\n      case 'witnesspubkeyhash':\n        payment = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2wpkh({\n          output: script,\n          pubkey: partialSig[0].pubkey,\n          signature: partialSig[0].signature\n        });\n        break;\n    }\n    return payment;\n  }\n  function getPsigsFromInputFinalScripts(input) {\n    var scriptItems = !input.finalScriptSig ? [] : _$$_REQUIRE(_dependencyMap[9], \"./script\").decompile(input.finalScriptSig) || [];\n    var witnessItems = !input.finalScriptWitness ? [] : _$$_REQUIRE(_dependencyMap[9], \"./script\").decompile(input.finalScriptWitness) || [];\n    return scriptItems.concat(witnessItems).filter(function (item) {\n      return Buffer.isBuffer(item) && _$$_REQUIRE(_dependencyMap[9], \"./script\").isCanonicalScriptSignature(item);\n    }).map(function (sig) {\n      return {\n        signature: sig\n      };\n    });\n  }\n  function getScriptFromInput(inputIndex, input, cache) {\n    var unsignedTx = cache.__TX;\n    var res = {\n      script: null,\n      isSegwit: false,\n      isP2SH: false,\n      isP2WSH: false\n    };\n    res.isP2SH = !!input.redeemScript;\n    res.isP2WSH = !!input.witnessScript;\n    if (input.witnessScript) {\n      res.script = input.witnessScript;\n    } else if (input.redeemScript) {\n      res.script = input.redeemScript;\n    } else {\n      if (input.nonWitnessUtxo) {\n        var nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(cache, input, inputIndex);\n        var prevoutIndex = unsignedTx.ins[inputIndex].index;\n        res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n      } else if (input.witnessUtxo) {\n        res.script = input.witnessUtxo.script;\n      }\n    }\n    if (input.witnessScript || isP2WPKH(res.script)) {\n      res.isSegwit = true;\n    }\n    return res;\n  }\n  function getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n    var input = _$$_REQUIRE(_dependencyMap[8], \"bip174/src/lib/utils\").checkForInput(inputs, inputIndex);\n    if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n      throw new Error('Need bip32Derivation to sign with HD');\n    }\n    var myDerivations = input.bip32Derivation.map(function (bipDv) {\n      if (bipDv.masterFingerprint.equals(hdKeyPair.fingerprint)) {\n        return bipDv;\n      } else {\n        return;\n      }\n    }).filter(function (v) {\n      return !!v;\n    });\n    if (myDerivations.length === 0) {\n      throw new Error('Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint');\n    }\n    var signers = myDerivations.map(function (bipDv) {\n      var node = hdKeyPair.derivePath(bipDv.path);\n      if (!bipDv.pubkey.equals(node.publicKey)) {\n        throw new Error('pubkey did not match bip32Derivation');\n      }\n      return node;\n    });\n    return signers;\n  }\n  function getSortedSigs(script, partialSig) {\n    var p2ms = _$$_REQUIRE(_dependencyMap[12], \"./payments\").p2ms({\n      output: script\n    });\n    // for each pubkey in order of p2ms script\n    return p2ms.pubkeys.map(function (pk) {\n      // filter partialSig array by pubkey being equal\n      return (partialSig.filter(function (ps) {\n        return ps.pubkey.equals(pk);\n      })[0] || {}).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    }).filter(function (v) {\n      return !!v;\n    });\n  }\n  function scriptWitnessToWitnessStack(buffer) {\n    var offset = 0;\n    function readSlice(n) {\n      offset += n;\n      return buffer.slice(offset - n, offset);\n    }\n    function readVarInt() {\n      var vi = _$$_REQUIRE(_dependencyMap[13], \"bip174/src/lib/converter/varint\").decode(buffer, offset);\n      offset += _$$_REQUIRE(_dependencyMap[13], \"bip174/src/lib/converter/varint\").decode.bytes;\n      return vi;\n    }\n    function readVarSlice() {\n      return readSlice(readVarInt());\n    }\n    function readVector() {\n      var count = readVarInt();\n      var vector = [];\n      for (var i = 0; i < count; i++) vector.push(readVarSlice());\n      return vector;\n    }\n    return readVector();\n  }\n  function sighashTypeToString(sighashType) {\n    var text = sighashType & _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ANYONECANPAY ? 'SIGHASH_ANYONECANPAY | ' : '';\n    var sigMod = sighashType & 0x1f;\n    switch (sigMod) {\n      case _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_ALL:\n        text += 'SIGHASH_ALL';\n        break;\n      case _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_SINGLE:\n        text += 'SIGHASH_SINGLE';\n        break;\n      case _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.SIGHASH_NONE:\n        text += 'SIGHASH_NONE';\n        break;\n    }\n    return text;\n  }\n  function witnessStackToScriptWitness(witness) {\n    var buffer = Buffer.allocUnsafe(0);\n    function writeSlice(slice) {\n      buffer = Buffer.concat([buffer, Buffer.from(slice)]);\n    }\n    function writeVarInt(i) {\n      var currentLen = buffer.length;\n      var varintLen = _$$_REQUIRE(_dependencyMap[13], \"bip174/src/lib/converter/varint\").encodingLength(i);\n      buffer = Buffer.concat([buffer, Buffer.allocUnsafe(varintLen)]);\n      _$$_REQUIRE(_dependencyMap[13], \"bip174/src/lib/converter/varint\").encode(i, buffer, currentLen);\n    }\n    function writeVarSlice(slice) {\n      writeVarInt(slice.length);\n      writeSlice(slice);\n    }\n    function writeVector(vector) {\n      writeVarInt(vector.length);\n      vector.forEach(writeVarSlice);\n    }\n    writeVector(witness);\n    return buffer;\n  }\n  function addNonWitnessTxCache(cache, input, inputIndex) {\n    cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n    var tx = _$$_REQUIRE(_dependencyMap[11], \"./transaction\").Transaction.fromBuffer(input.nonWitnessUtxo);\n    cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n    var self = cache;\n    var selfIndex = inputIndex;\n    delete input.nonWitnessUtxo;\n    Object.defineProperty(input, 'nonWitnessUtxo', {\n      enumerable: true,\n      get: function get() {\n        var buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n        var txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n        if (buf !== undefined) {\n          return buf;\n        } else {\n          var newBuf = txCache.toBuffer();\n          self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n          return newBuf;\n        }\n      },\n      set: function set(data) {\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n      }\n    });\n  }\n  function inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n    var inputAmount = 0;\n    inputs.forEach(function (input, idx) {\n      if (mustFinalize && input.finalScriptSig) tx.ins[idx].script = input.finalScriptSig;\n      if (mustFinalize && input.finalScriptWitness) {\n        tx.ins[idx].witness = scriptWitnessToWitnessStack(input.finalScriptWitness);\n      }\n      if (input.witnessUtxo) {\n        inputAmount += input.witnessUtxo.value;\n      } else if (input.nonWitnessUtxo) {\n        var nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n        var vout = tx.ins[idx].index;\n        var out = nwTx.outs[vout];\n        inputAmount += out.value;\n      }\n    });\n    var outputAmount = tx.outs.reduce(function (total, o) {\n      return total + o.value;\n    }, 0);\n    var fee = inputAmount - outputAmount;\n    if (fee < 0) {\n      throw new Error('Outputs are spending more than Inputs');\n    }\n    var bytes = tx.virtualSize();\n    cache.__FEE = fee;\n    cache.__EXTRACTED_TX = tx;\n    cache.__FEE_RATE = Math.floor(fee / bytes);\n  }\n  function nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n    var c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n    if (!c[inputIndex]) {\n      addNonWitnessTxCache(cache, input, inputIndex);\n    }\n    return c[inputIndex];\n  }\n  function getScriptFromUtxo(inputIndex, input, cache) {\n    if (input.witnessUtxo !== undefined) {\n      return input.witnessUtxo.script;\n    } else if (input.nonWitnessUtxo !== undefined) {\n      var nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(cache, input, inputIndex);\n      return nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index].script;\n    } else {\n      throw new Error(\"Can't find pubkey in input without Utxo data\");\n    }\n  }\n  function pubkeyInInput(pubkey, input, inputIndex, cache) {\n    var script = getScriptFromUtxo(inputIndex, input, cache);\n    var _getMeaningfulScript2 = getMeaningfulScript(script, inputIndex, 'input', input.redeemScript, input.witnessScript),\n      meaningfulScript = _getMeaningfulScript2.meaningfulScript;\n    return pubkeyInScript(pubkey, meaningfulScript);\n  }\n  function pubkeyInOutput(pubkey, output, outputIndex, cache) {\n    var script = cache.__TX.outs[outputIndex].script;\n    var _getMeaningfulScript3 = getMeaningfulScript(script, outputIndex, 'output', output.redeemScript, output.witnessScript),\n      meaningfulScript = _getMeaningfulScript3.meaningfulScript;\n    return pubkeyInScript(pubkey, meaningfulScript);\n  }\n  function redeemFromFinalScriptSig(finalScript) {\n    if (!finalScript) return;\n    var decomp = _$$_REQUIRE(_dependencyMap[9], \"./script\").decompile(finalScript);\n    if (!decomp) return;\n    var lastItem = decomp[decomp.length - 1];\n    if (!Buffer.isBuffer(lastItem) || isPubkeyLike(lastItem) || isSigLike(lastItem)) return;\n    var sDecomp = _$$_REQUIRE(_dependencyMap[9], \"./script\").decompile(lastItem);\n    if (!sDecomp) return;\n    return lastItem;\n  }\n  function redeemFromFinalWitnessScript(finalScript) {\n    if (!finalScript) return;\n    var decomp = scriptWitnessToWitnessStack(finalScript);\n    var lastItem = decomp[decomp.length - 1];\n    if (isPubkeyLike(lastItem)) return;\n    var sDecomp = _$$_REQUIRE(_dependencyMap[9], \"./script\").decompile(lastItem);\n    if (!sDecomp) return;\n    return lastItem;\n  }\n  function isPubkeyLike(buf) {\n    return buf.length === 33 && _$$_REQUIRE(_dependencyMap[9], \"./script\").isCanonicalPubKey(buf);\n  }\n  function isSigLike(buf) {\n    return _$$_REQUIRE(_dependencyMap[9], \"./script\").isCanonicalScriptSignature(buf);\n  }\n  function getMeaningfulScript(script, index, ioType, redeemScript, witnessScript) {\n    var isP2SH = isP2SHScript(script);\n    var isP2SHP2WSH = isP2SH && redeemScript && isP2WSHScript(redeemScript);\n    var isP2WSH = isP2WSHScript(script);\n    if (isP2SH && redeemScript === undefined) throw new Error('scriptPubkey is P2SH but redeemScript missing');\n    if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined) throw new Error('scriptPubkey or redeemScript is P2WSH but witnessScript missing');\n    var meaningfulScript;\n    if (isP2SHP2WSH) {\n      meaningfulScript = witnessScript;\n      checkRedeemScript(index, script, redeemScript, ioType);\n      checkWitnessScript(index, redeemScript, witnessScript, ioType);\n      checkInvalidP2WSH(meaningfulScript);\n    } else if (isP2WSH) {\n      meaningfulScript = witnessScript;\n      checkWitnessScript(index, script, witnessScript, ioType);\n      checkInvalidP2WSH(meaningfulScript);\n    } else if (isP2SH) {\n      meaningfulScript = redeemScript;\n      checkRedeemScript(index, script, redeemScript, ioType);\n    } else {\n      meaningfulScript = script;\n    }\n    return {\n      meaningfulScript: meaningfulScript,\n      type: isP2SHP2WSH ? 'p2sh-p2wsh' : isP2SH ? 'p2sh' : isP2WSH ? 'p2wsh' : 'raw'\n    };\n  }\n  function checkInvalidP2WSH(script) {\n    if (isP2WPKH(script) || isP2SHScript(script)) {\n      throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n    }\n  }\n  function pubkeyInScript(pubkey, script) {\n    var pubkeyHash = _$$_REQUIRE(_dependencyMap[14], \"./crypto\").hash160(pubkey);\n    var decompiled = _$$_REQUIRE(_dependencyMap[9], \"./script\").decompile(script);\n    if (decompiled === null) throw new Error('Unknown script error');\n    return decompiled.some(function (element) {\n      if (typeof element === 'number') return false;\n      return element.equals(pubkey) || element.equals(pubkeyHash);\n    });\n  }\n  function classifyScript(script) {\n    if (isP2WPKH(script)) return 'witnesspubkeyhash';\n    if (isP2PKH(script)) return 'pubkeyhash';\n    if (isP2MS(script)) return 'multisig';\n    if (isP2PK(script)) return 'pubkey';\n    return 'nonstandard';\n  }\n  function range(n) {\n    return _toConsumableArray(Array(n).keys());\n  }\n});","lineCount":1332,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,1,13],[5,6,1,13,"_toConsumableArray"],[5,24,1,13],[5,27,1,13,"_$$_REQUIRE"],[5,38,1,13],[5,39,1,13,"_dependencyMap"],[5,53,1,13],[6,2,1,13],[6,6,1,13,"_classCallCheck"],[6,21,1,13],[6,24,1,13,"_$$_REQUIRE"],[6,35,1,13],[6,36,1,13,"_dependencyMap"],[6,50,1,13],[7,2,1,13],[7,6,1,13,"_createClass"],[7,18,1,13],[7,21,1,13,"_$$_REQUIRE"],[7,32,1,13],[7,33,1,13,"_dependencyMap"],[7,47,1,13],[8,2,2,0,"Object"],[8,8,2,6],[8,9,2,7,"defineProperty"],[8,23,2,21],[8,24,2,22,"exports"],[8,31,2,29],[8,33,2,31],[8,45,2,43],[8,47,2,45],[9,4,2,47,"value"],[9,9,2,52],[9,11,2,54],[10,2,2,59],[10,3,2,60],[10,4,2,61],[11,2,14,0],[12,0,15,0],[13,0,16,0],[14,2,17,0],[14,6,17,6,"DEFAULT_OPTS"],[14,18,17,18],[14,21,17,21],[15,4,18,2],[16,0,19,0],[17,0,20,0],[18,0,21,0],[19,4,22,2,"network"],[19,11,22,9],[19,13,22,11,"_$$_REQUIRE"],[19,24,22,11],[19,25,22,11,"_dependencyMap"],[19,39,22,11],[19,58,22,22,"bitcoin"],[19,65,22,29],[20,4,23,2],[21,0,24,0],[22,0,25,0],[23,0,26,0],[24,0,27,0],[25,4,28,2,"maximumFeeRate"],[25,18,28,16],[25,20,28,18],[26,2,29,0],[26,3,29,1],[27,2,30,0],[28,0,31,0],[29,0,32,0],[30,0,33,0],[31,0,34,0],[32,0,35,0],[33,0,36,0],[34,0,37,0],[35,0,38,0],[36,0,39,0],[37,0,40,0],[38,0,41,0],[39,0,42,0],[40,0,43,0],[41,0,44,0],[42,0,45,0],[43,0,46,0],[44,0,47,0],[45,0,48,0],[46,0,49,0],[47,0,50,0],[48,0,51,0],[49,0,52,0],[50,0,53,0],[51,0,54,0],[52,0,55,0],[53,0,56,0],[54,0,57,0],[55,0,58,0],[56,0,59,0],[57,0,60,0],[58,0,61,0],[59,2,30,0],[59,6,62,6,"Psbt"],[59,10,62,10],[60,4,63,2],[60,13,63,2,"Psbt"],[60,18,63,2],[60,20,63,74],[61,6,63,74],[61,10,63,14,"opts"],[61,14,63,18],[61,17,63,18,"arguments"],[61,26,63,18],[61,27,63,18,"length"],[61,33,63,18],[61,41,63,18,"arguments"],[61,50,63,18],[61,58,63,18,"undefined"],[61,67,63,18],[61,70,63,18,"arguments"],[61,79,63,18],[61,85,63,21],[61,86,63,22],[61,87,63,23],[62,6,63,23],[62,10,63,25,"data"],[62,14,63,29],[62,17,63,29,"arguments"],[62,26,63,29],[62,27,63,29,"length"],[62,33,63,29],[62,41,63,29,"arguments"],[62,50,63,29],[62,58,63,29,"undefined"],[62,67,63,29],[62,70,63,29,"arguments"],[62,79,63,29],[62,85,63,32],[62,90,63,36,"_$$_REQUIRE"],[62,101,63,36],[62,102,63,36,"_dependencyMap"],[62,116,63,36],[62,131,63,45,"Psbt"],[62,135,63,49],[62,137,63,50],[62,141,63,54,"PsbtTransaction"],[62,156,63,69],[62,157,63,70],[62,158,63,71],[62,159,63,72],[63,6,63,72,"_classCallCheck"],[63,21,63,72],[63,28,63,72,"Psbt"],[63,32,63,72],[64,6,64,4],[64,10,64,8],[64,11,64,9,"data"],[64,15,64,13],[64,18,64,16,"data"],[64,22,64,20],[65,6,65,4],[66,6,66,4],[66,10,66,8],[66,11,66,9,"opts"],[66,15,66,13],[66,18,66,16,"Object"],[66,24,66,22],[66,25,66,23,"assign"],[66,31,66,29],[66,32,66,30],[66,33,66,31],[66,34,66,32],[66,36,66,34,"DEFAULT_OPTS"],[66,48,66,46],[66,50,66,48,"opts"],[66,54,66,52],[66,55,66,53],[67,6,67,4],[67,10,67,8],[67,11,67,9,"__CACHE"],[67,18,67,16],[67,21,67,19],[68,8,68,6,"__NON_WITNESS_UTXO_TX_CACHE"],[68,35,68,33],[68,37,68,35],[68,39,68,37],[69,8,69,6,"__NON_WITNESS_UTXO_BUF_CACHE"],[69,36,69,34],[69,38,69,36],[69,40,69,38],[70,8,70,6,"__TX_IN_CACHE"],[70,21,70,19],[70,23,70,21],[70,24,70,22],[70,25,70,23],[71,8,71,6,"__TX"],[71,12,71,10],[71,14,71,12],[71,18,71,16],[71,19,71,17,"data"],[71,23,71,21],[71,24,71,22,"globalMap"],[71,33,71,31],[71,34,71,32,"unsignedTx"],[71,44,71,42],[71,45,71,43,"tx"],[71,47,71,45],[72,8,72,6],[73,8,73,6],[74,8,74,6],[75,8,75,6],[76,8,76,6],[77,8,77,6],[78,8,78,6],[79,8,79,6,"__UNSAFE_SIGN_NONSEGWIT"],[79,31,79,29],[79,33,79,31],[80,6,80,4],[80,7,80,5],[81,6,81,4],[81,10,81,8],[81,14,81,12],[81,15,81,13,"data"],[81,19,81,17],[81,20,81,18,"inputs"],[81,26,81,24],[81,27,81,25,"length"],[81,33,81,31],[81,38,81,36],[81,39,81,37],[81,41,81,39],[81,45,81,43],[81,46,81,44,"setVersion"],[81,56,81,54],[81,57,81,55],[81,58,81,56],[81,59,81,57],[82,6,82,4],[83,6,83,4],[83,10,83,10,"dpew"],[83,14,83,14],[83,17,83,17],[83,26,83,10,"dpew"],[83,30,83,14,"dpew"],[83,31,83,18,"obj"],[83,34,83,21],[83,36,83,23,"attr"],[83,40,83,27],[83,42,83,29,"enumerable"],[83,52,83,39],[83,54,83,41,"writable"],[83,62,83,49],[84,8,83,49],[84,15,84,6,"Object"],[84,21,84,12],[84,22,84,13,"defineProperty"],[84,36,84,27],[84,37,84,28,"obj"],[84,40,84,31],[84,42,84,33,"attr"],[84,46,84,37],[84,48,84,39],[85,10,85,8,"enumerable"],[85,20,85,18],[85,22,85,8,"enumerable"],[85,32,85,18],[86,10,86,8,"writable"],[86,18,86,16],[86,20,86,8,"writable"],[87,8,87,6],[87,9,87,7],[87,10,87,8],[88,6,87,8],[89,6,88,4,"dpew"],[89,10,88,8],[89,11,88,9],[89,15,88,13],[89,17,88,15],[89,26,88,24],[89,28,88,26],[89,33,88,31],[89,35,88,33],[89,39,88,37],[89,40,88,38],[90,6,89,4,"dpew"],[90,10,89,8],[90,11,89,9],[90,15,89,13],[90,17,89,15],[90,23,89,21],[90,25,89,23],[90,30,89,28],[90,32,89,30],[90,36,89,34],[90,37,89,35],[91,4,90,2],[92,4,90,3],[92,11,90,3,"_createClass"],[92,23,90,3],[92,24,90,3,"Psbt"],[92,28,90,3],[93,6,90,3,"key"],[93,9,90,3],[94,6,90,3,"get"],[94,9,90,3],[94,11,105,2],[94,20,105,2,"get"],[94,24,105,2],[94,26,105,19],[95,8,106,4],[95,15,106,11],[95,19,106,15],[95,20,106,16,"data"],[95,24,106,20],[95,25,106,21,"inputs"],[95,31,106,27],[95,32,106,28,"length"],[95,38,106,34],[96,6,107,2],[97,4,107,3],[98,6,107,3,"key"],[98,9,107,3],[99,6,107,3,"get"],[99,9,107,3],[99,11,108,2],[99,20,108,2,"get"],[99,24,108,2],[99,26,108,16],[100,8,109,4],[100,15,109,11],[100,19,109,15],[100,20,109,16,"__CACHE"],[100,27,109,23],[100,28,109,24,"__TX"],[100,32,109,28],[100,33,109,29,"version"],[100,40,109,36],[101,6,110,2],[101,7,110,3],[102,6,110,3,"set"],[102,9,110,3],[102,11,111,2],[102,20,111,2,"set"],[102,24,111,14,"version"],[102,31,111,21],[102,33,111,23],[103,8,112,4],[103,12,112,8],[103,13,112,9,"setVersion"],[103,23,112,19],[103,24,112,20,"version"],[103,31,112,27],[103,32,112,28],[104,6,113,2],[105,4,113,3],[106,6,113,3,"key"],[106,9,113,3],[107,6,113,3,"get"],[107,9,113,3],[107,11,114,2],[107,20,114,2,"get"],[107,24,114,2],[107,26,114,17],[108,8,115,4],[108,15,115,11],[108,19,115,15],[108,20,115,16,"__CACHE"],[108,27,115,23],[108,28,115,24,"__TX"],[108,32,115,28],[108,33,115,29,"locktime"],[108,41,115,37],[109,6,116,2],[109,7,116,3],[110,6,116,3,"set"],[110,9,116,3],[110,11,117,2],[110,20,117,2,"set"],[110,24,117,15,"locktime"],[110,32,117,23],[110,34,117,25],[111,8,118,4],[111,12,118,8],[111,13,118,9,"setLocktime"],[111,24,118,20],[111,25,118,21,"locktime"],[111,33,118,29],[111,34,118,30],[112,6,119,2],[113,4,119,3],[114,6,119,3,"key"],[114,9,119,3],[115,6,119,3,"get"],[115,9,119,3],[115,11,120,2],[115,20,120,2,"get"],[115,24,120,2],[115,26,120,17],[116,8,121,4],[116,15,121,11],[116,19,121,15],[116,20,121,16,"__CACHE"],[116,27,121,23],[116,28,121,24,"__TX"],[116,32,121,28],[116,33,121,29,"ins"],[116,36,121,32],[116,37,121,33,"map"],[116,40,121,36],[116,41,121,37],[116,51,121,37,"input"],[116,56,121,42],[117,10,121,42],[117,17,121,47],[118,12,122,6,"hash"],[118,16,122,10],[118,18,122,12,"_$$_REQUIRE"],[118,29,122,12],[118,30,122,12,"_dependencyMap"],[118,44,122,12],[118,66,122,26,"cloneBuffer"],[118,77,122,37],[118,78,122,38,"input"],[118,83,122,43],[118,84,122,44,"hash"],[118,88,122,48],[118,89,122,49],[119,12,123,6,"index"],[119,17,123,11],[119,19,123,13,"input"],[119,24,123,18],[119,25,123,19,"index"],[119,30,123,24],[120,12,124,6,"sequence"],[120,20,124,14],[120,22,124,16,"input"],[120,27,124,21],[120,28,124,22,"sequence"],[121,10,125,4],[121,11,125,5],[122,8,125,5],[122,9,125,6],[122,10,125,7],[123,6,126,2],[124,4,126,3],[125,6,126,3,"key"],[125,9,126,3],[126,6,126,3,"get"],[126,9,126,3],[126,11,127,2],[126,20,127,2,"get"],[126,24,127,2],[126,26,127,18],[127,8,127,18],[127,12,127,18,"_this"],[127,17,127,18],[128,8,128,4],[128,15,128,11],[128,19,128,15],[128,20,128,16,"__CACHE"],[128,27,128,23],[128,28,128,24,"__TX"],[128,32,128,28],[128,33,128,29,"outs"],[128,37,128,33],[128,38,128,34,"map"],[128,41,128,37],[128,42,128,38],[128,52,128,38,"output"],[128,58,128,44],[128,60,128,48],[129,10,129,6],[129,14,129,10,"address"],[129,21,129,17],[130,10,130,6],[130,14,130,10],[131,12,131,8,"address"],[131,19,131,15],[131,22,131,18,"_$$_REQUIRE"],[131,33,131,18],[131,34,131,18,"_dependencyMap"],[131,48,131,18],[131,66,131,28,"fromOutputScript"],[131,82,131,44],[131,83,131,45,"output"],[131,89,131,51],[131,90,131,52,"script"],[131,96,131,58],[131,98,131,60,"_this"],[131,103,131,64],[131,104,131,65,"opts"],[131,108,131,69],[131,109,131,70,"network"],[131,116,131,77],[131,117,131,78],[132,10,132,6],[132,11,132,7],[132,12,132,8],[132,19,132,15,"_"],[132,20,132,16],[132,22,132,18],[132,23,132,19],[133,10,133,6],[133,17,133,13],[134,12,134,8,"script"],[134,18,134,14],[134,20,134,16,"_$$_REQUIRE"],[134,31,134,16],[134,32,134,16,"_dependencyMap"],[134,46,134,16],[134,68,134,30,"cloneBuffer"],[134,79,134,41],[134,80,134,42,"output"],[134,86,134,48],[134,87,134,49,"script"],[134,93,134,55],[134,94,134,56],[135,12,135,8,"value"],[135,17,135,13],[135,19,135,15,"output"],[135,25,135,21],[135,26,135,22,"value"],[135,31,135,27],[136,12,136,8,"address"],[136,19,136,15],[136,21,136,8,"address"],[137,10,137,6],[137,11,137,7],[138,8,138,4],[138,9,138,5],[138,10,138,6],[139,6,139,2],[140,4,139,3],[141,6,139,3,"key"],[141,9,139,3],[142,6,139,3,"value"],[142,11,139,3],[142,13,140,2],[142,22,140,2,"combine"],[142,29,140,9,"combine"],[142,30,140,9],[142,32,140,20],[143,8,140,20],[143,12,140,20,"_this$data"],[143,22,140,20],[144,8,140,20],[144,17,140,20,"_len"],[144,21,140,20],[144,24,140,20,"arguments"],[144,33,140,20],[144,34,140,20,"length"],[144,40,140,20],[144,42,140,13,"those"],[144,47,140,18],[144,54,140,18,"Array"],[144,59,140,18],[144,60,140,18,"_len"],[144,64,140,18],[144,67,140,18,"_key"],[144,71,140,18],[144,77,140,18,"_key"],[144,81,140,18],[144,84,140,18,"_len"],[144,88,140,18],[144,90,140,18,"_key"],[144,94,140,18],[145,10,140,13,"those"],[145,15,140,18],[145,16,140,18,"_key"],[145,20,140,18],[145,24,140,18,"arguments"],[145,33,140,18],[145,34,140,18,"_key"],[145,38,140,18],[146,8,140,18],[147,8,141,4],[147,9,141,4,"_this$data"],[147,19,141,4],[147,26,141,8],[147,27,141,9,"data"],[147,31,141,13],[147,33,141,14,"combine"],[147,40,141,21],[147,41,141,21,"apply"],[147,46,141,21],[147,47,141,21,"_this$data"],[147,57,141,21],[147,59,141,21,"_toConsumableArray"],[147,77,141,21],[147,78,141,25,"those"],[147,83,141,30],[147,84,141,31,"map"],[147,87,141,34],[147,88,141,35],[147,98,141,35,"o"],[147,99,141,36],[148,10,141,36],[148,17,141,40,"o"],[148,18,141,41],[148,19,141,42,"data"],[148,23,141,46],[149,8,141,46],[149,10,141,47],[149,12,141,48],[150,8,142,4],[150,15,142,11],[150,19,142,15],[151,6,143,2],[152,4,143,3],[153,6,143,3,"key"],[153,9,143,3],[154,6,143,3,"value"],[154,11,143,3],[154,13,144,2],[154,22,144,2,"clone"],[154,27,144,7,"clone"],[154,28,144,7],[154,30,144,10],[155,8,145,4],[156,8,146,4],[156,12,146,10,"res"],[156,15,146,13],[156,18,146,16,"Psbt"],[156,22,146,20],[156,23,146,21,"fromBuffer"],[156,33,146,31],[156,34,146,32],[156,38,146,36],[156,39,146,37,"data"],[156,43,146,41],[156,44,146,42,"toBuffer"],[156,52,146,50],[156,53,146,51],[156,54,146,52],[156,55,146,53],[157,8,147,4,"res"],[157,11,147,7],[157,12,147,8,"opts"],[157,16,147,12],[157,19,147,15,"JSON"],[157,23,147,19],[157,24,147,20,"parse"],[157,29,147,25],[157,30,147,26,"JSON"],[157,34,147,30],[157,35,147,31,"stringify"],[157,44,147,40],[157,45,147,41],[157,49,147,45],[157,50,147,46,"opts"],[157,54,147,50],[157,55,147,51],[157,56,147,52],[158,8,148,4],[158,15,148,11,"res"],[158,18,148,14],[159,6,149,2],[160,4,149,3],[161,6,149,3,"key"],[161,9,149,3],[162,6,149,3,"value"],[162,11,149,3],[162,13,150,2],[162,22,150,2,"setMaximumFeeRate"],[162,39,150,19,"setMaximumFeeRate"],[162,40,150,20,"satoshiPerByte"],[162,54,150,34],[162,56,150,36],[163,8,151,4,"check32Bit"],[163,18,151,14],[163,19,151,15,"satoshiPerByte"],[163,33,151,29],[163,34,151,30],[163,35,151,31],[163,36,151,32],[164,8,152,4],[164,12,152,8],[164,13,152,9,"opts"],[164,17,152,13],[164,18,152,14,"maximumFeeRate"],[164,32,152,28],[164,35,152,31,"satoshiPerByte"],[164,49,152,45],[165,6,153,2],[166,4,153,3],[167,6,153,3,"key"],[167,9,153,3],[168,6,153,3,"value"],[168,11,153,3],[168,13,154,2],[168,22,154,2,"setVersion"],[168,32,154,12,"setVersion"],[168,33,154,13,"version"],[168,40,154,20],[168,42,154,22],[169,8,155,4,"check32Bit"],[169,18,155,14],[169,19,155,15,"version"],[169,26,155,22],[169,27,155,23],[170,8,156,4,"checkInputsForPartialSig"],[170,32,156,28],[170,33,156,29],[170,37,156,33],[170,38,156,34,"data"],[170,42,156,38],[170,43,156,39,"inputs"],[170,49,156,45],[170,51,156,47],[170,63,156,59],[170,64,156,60],[171,8,157,4],[171,12,157,10,"c"],[171,13,157,11],[171,16,157,14],[171,20,157,18],[171,21,157,19,"__CACHE"],[171,28,157,26],[172,8,158,4,"c"],[172,9,158,5],[172,10,158,6,"__TX"],[172,14,158,10],[172,15,158,11,"version"],[172,22,158,18],[172,25,158,21,"version"],[172,32,158,28],[173,8,159,4,"c"],[173,9,159,5],[173,10,159,6,"__EXTRACTED_TX"],[173,24,159,20],[173,27,159,23,"undefined"],[173,36,159,32],[174,8,160,4],[174,15,160,11],[174,19,160,15],[175,6,161,2],[176,4,161,3],[177,6,161,3,"key"],[177,9,161,3],[178,6,161,3,"value"],[178,11,161,3],[178,13,162,2],[178,22,162,2,"setLocktime"],[178,33,162,13,"setLocktime"],[178,34,162,14,"locktime"],[178,42,162,22],[178,44,162,24],[179,8,163,4,"check32Bit"],[179,18,163,14],[179,19,163,15,"locktime"],[179,27,163,23],[179,28,163,24],[180,8,164,4,"checkInputsForPartialSig"],[180,32,164,28],[180,33,164,29],[180,37,164,33],[180,38,164,34,"data"],[180,42,164,38],[180,43,164,39,"inputs"],[180,49,164,45],[180,51,164,47],[180,64,164,60],[180,65,164,61],[181,8,165,4],[181,12,165,10,"c"],[181,13,165,11],[181,16,165,14],[181,20,165,18],[181,21,165,19,"__CACHE"],[181,28,165,26],[182,8,166,4,"c"],[182,9,166,5],[182,10,166,6,"__TX"],[182,14,166,10],[182,15,166,11,"locktime"],[182,23,166,19],[182,26,166,22,"locktime"],[182,34,166,30],[183,8,167,4,"c"],[183,9,167,5],[183,10,167,6,"__EXTRACTED_TX"],[183,24,167,20],[183,27,167,23,"undefined"],[183,36,167,32],[184,8,168,4],[184,15,168,11],[184,19,168,15],[185,6,169,2],[186,4,169,3],[187,6,169,3,"key"],[187,9,169,3],[188,6,169,3,"value"],[188,11,169,3],[188,13,170,2],[188,22,170,2,"setInputSequence"],[188,38,170,18,"setInputSequence"],[188,39,170,19,"inputIndex"],[188,49,170,29],[188,51,170,31,"sequence"],[188,59,170,39],[188,61,170,41],[189,8,171,4,"check32Bit"],[189,18,171,14],[189,19,171,15,"sequence"],[189,27,171,23],[189,28,171,24],[190,8,172,4,"checkInputsForPartialSig"],[190,32,172,28],[190,33,172,29],[190,37,172,33],[190,38,172,34,"data"],[190,42,172,38],[190,43,172,39,"inputs"],[190,49,172,45],[190,51,172,47],[190,69,172,65],[190,70,172,66],[191,8,173,4],[191,12,173,10,"c"],[191,13,173,11],[191,16,173,14],[191,20,173,18],[191,21,173,19,"__CACHE"],[191,28,173,26],[192,8,174,4],[192,12,174,8,"c"],[192,13,174,9],[192,14,174,10,"__TX"],[192,18,174,14],[192,19,174,15,"ins"],[192,22,174,18],[192,23,174,19,"length"],[192,29,174,25],[192,33,174,29,"inputIndex"],[192,43,174,39],[192,45,174,41],[193,10,175,6],[193,16,175,12],[193,20,175,16,"Error"],[193,25,175,21],[193,26,175,22],[193,48,175,44],[193,49,175,45],[194,8,176,4],[195,8,177,4,"c"],[195,9,177,5],[195,10,177,6,"__TX"],[195,14,177,10],[195,15,177,11,"ins"],[195,18,177,14],[195,19,177,15,"inputIndex"],[195,29,177,25],[195,30,177,26],[195,31,177,27,"sequence"],[195,39,177,35],[195,42,177,38,"sequence"],[195,50,177,46],[196,8,178,4,"c"],[196,9,178,5],[196,10,178,6,"__EXTRACTED_TX"],[196,24,178,20],[196,27,178,23,"undefined"],[196,36,178,32],[197,8,179,4],[197,15,179,11],[197,19,179,15],[198,6,180,2],[199,4,180,3],[200,6,180,3,"key"],[200,9,180,3],[201,6,180,3,"value"],[201,11,180,3],[201,13,181,2],[201,22,181,2,"addInputs"],[201,31,181,11,"addInputs"],[201,32,181,12,"inputDatas"],[201,42,181,22],[201,44,181,24],[202,8,181,24],[202,12,181,24,"_this2"],[202,18,181,24],[203,8,182,4,"inputDatas"],[203,18,182,14],[203,19,182,15,"forEach"],[203,26,182,22],[203,27,182,23],[203,37,182,23,"inputData"],[203,46,182,32],[204,10,182,32],[204,17,182,36,"_this2"],[204,23,182,40],[204,24,182,41,"addInput"],[204,32,182,49],[204,33,182,50,"inputData"],[204,42,182,59],[204,43,182,60],[205,8,182,60],[205,10,182,61],[206,8,183,4],[206,15,183,11],[206,19,183,15],[207,6,184,2],[208,4,184,3],[209,6,184,3,"key"],[209,9,184,3],[210,6,184,3,"value"],[210,11,184,3],[210,13,185,2],[210,22,185,2,"addInput"],[210,30,185,10,"addInput"],[210,31,185,11,"inputData"],[210,40,185,20],[210,42,185,22],[211,8,186,4],[211,12,187,6,"arguments"],[211,21,187,15],[211,22,187,16,"length"],[211,28,187,22],[211,31,187,25],[211,32,187,26],[211,36,188,6],[211,37,188,7,"inputData"],[211,46,188,16],[211,50,189,6,"inputData"],[211,59,189,15],[211,60,189,16,"hash"],[211,64,189,20],[211,69,189,25,"undefined"],[211,78,189,34],[211,82,190,6,"inputData"],[211,91,190,15],[211,92,190,16,"index"],[211,97,190,21],[211,102,190,26,"undefined"],[211,111,190,35],[211,113,191,6],[212,10,192,6],[212,16,192,12],[212,20,192,16,"Error"],[212,25,192,21],[212,26,193,8],[212,65,193,47],[212,68,194,10],[212,125,195,6],[212,126,195,7],[213,8,196,4],[214,8,197,4,"checkInputsForPartialSig"],[214,32,197,28],[214,33,197,29],[214,37,197,33],[214,38,197,34,"data"],[214,42,197,38],[214,43,197,39,"inputs"],[214,49,197,45],[214,51,197,47],[214,61,197,57],[214,62,197,58],[215,8,198,4],[215,12,198,8,"inputData"],[215,21,198,17],[215,22,198,18,"witnessScript"],[215,35,198,31],[215,37,198,33,"checkInvalidP2WSH"],[215,54,198,50],[215,55,198,51,"inputData"],[215,64,198,60],[215,65,198,61,"witnessScript"],[215,78,198,74],[215,79,198,75],[216,8,199,4],[216,12,199,10,"c"],[216,13,199,11],[216,16,199,14],[216,20,199,18],[216,21,199,19,"__CACHE"],[216,28,199,26],[217,8,200,4],[217,12,200,8],[217,13,200,9,"data"],[217,17,200,13],[217,18,200,14,"addInput"],[217,26,200,22],[217,27,200,23,"inputData"],[217,36,200,32],[217,37,200,33],[218,8,201,4],[218,12,201,10,"txIn"],[218,16,201,14],[218,19,201,17,"c"],[218,20,201,18],[218,21,201,19,"__TX"],[218,25,201,23],[218,26,201,24,"ins"],[218,29,201,27],[218,30,201,28,"c"],[218,31,201,29],[218,32,201,30,"__TX"],[218,36,201,34],[218,37,201,35,"ins"],[218,40,201,38],[218,41,201,39,"length"],[218,47,201,45],[218,50,201,48],[218,51,201,49],[218,52,201,50],[219,8,202,4,"checkTxInputCache"],[219,25,202,21],[219,26,202,22,"c"],[219,27,202,23],[219,29,202,25,"txIn"],[219,33,202,29],[219,34,202,30],[220,8,203,4],[220,12,203,10,"inputIndex"],[220,22,203,20],[220,25,203,23],[220,29,203,27],[220,30,203,28,"data"],[220,34,203,32],[220,35,203,33,"inputs"],[220,41,203,39],[220,42,203,40,"length"],[220,48,203,46],[220,51,203,49],[220,52,203,50],[221,8,204,4],[221,12,204,10,"input"],[221,17,204,15],[221,20,204,18],[221,24,204,22],[221,25,204,23,"data"],[221,29,204,27],[221,30,204,28,"inputs"],[221,36,204,34],[221,37,204,35,"inputIndex"],[221,47,204,45],[221,48,204,46],[222,8,205,4],[222,12,205,8,"input"],[222,17,205,13],[222,18,205,14,"nonWitnessUtxo"],[222,32,205,28],[222,34,205,30],[223,10,206,6,"addNonWitnessTxCache"],[223,30,206,26],[223,31,206,27],[223,35,206,31],[223,36,206,32,"__CACHE"],[223,43,206,39],[223,45,206,41,"input"],[223,50,206,46],[223,52,206,48,"inputIndex"],[223,62,206,58],[223,63,206,59],[224,8,207,4],[225,8,208,4,"c"],[225,9,208,5],[225,10,208,6,"__FEE"],[225,15,208,11],[225,18,208,14,"undefined"],[225,27,208,23],[226,8,209,4,"c"],[226,9,209,5],[226,10,209,6,"__FEE_RATE"],[226,20,209,16],[226,23,209,19,"undefined"],[226,32,209,28],[227,8,210,4,"c"],[227,9,210,5],[227,10,210,6,"__EXTRACTED_TX"],[227,24,210,20],[227,27,210,23,"undefined"],[227,36,210,32],[228,8,211,4],[228,15,211,11],[228,19,211,15],[229,6,212,2],[230,4,212,3],[231,6,212,3,"key"],[231,9,212,3],[232,6,212,3,"value"],[232,11,212,3],[232,13,213,2],[232,22,213,2,"addOutputs"],[232,32,213,12,"addOutputs"],[232,33,213,13,"outputDatas"],[232,44,213,24],[232,46,213,26],[233,8,213,26],[233,12,213,26,"_this3"],[233,18,213,26],[234,8,214,4,"outputDatas"],[234,19,214,15],[234,20,214,16,"forEach"],[234,27,214,23],[234,28,214,24],[234,38,214,24,"outputData"],[234,48,214,34],[235,10,214,34],[235,17,214,38,"_this3"],[235,23,214,42],[235,24,214,43,"addOutput"],[235,33,214,52],[235,34,214,53,"outputData"],[235,44,214,63],[235,45,214,64],[236,8,214,64],[236,10,214,65],[237,8,215,4],[237,15,215,11],[237,19,215,15],[238,6,216,2],[239,4,216,3],[240,6,216,3,"key"],[240,9,216,3],[241,6,216,3,"value"],[241,11,216,3],[241,13,217,2],[241,22,217,2,"addOutput"],[241,31,217,11,"addOutput"],[241,32,217,12,"outputData"],[241,42,217,22],[241,44,217,24],[242,8,218,4],[242,12,219,6,"arguments"],[242,21,219,15],[242,22,219,16,"length"],[242,28,219,22],[242,31,219,25],[242,32,219,26],[242,36,220,6],[242,37,220,7,"outputData"],[242,47,220,17],[242,51,221,6,"outputData"],[242,61,221,16],[242,62,221,17,"value"],[242,67,221,22],[242,72,221,27,"undefined"],[242,81,221,36],[242,85,222,7,"outputData"],[242,95,222,17],[242,96,222,18,"address"],[242,103,222,25],[242,108,222,30,"undefined"],[242,117,222,39],[242,121,222,43,"outputData"],[242,131,222,53],[242,132,222,54,"script"],[242,138,222,60],[242,143,222,65,"undefined"],[242,152,222,75],[242,154,223,6],[243,10,224,6],[243,16,224,12],[243,20,224,16,"Error"],[243,25,224,21],[243,26,225,8],[243,66,225,48],[243,69,226,10],[243,139,227,6],[243,140,227,7],[244,8,228,4],[245,8,229,4,"checkInputsForPartialSig"],[245,32,229,28],[245,33,229,29],[245,37,229,33],[245,38,229,34,"data"],[245,42,229,38],[245,43,229,39,"inputs"],[245,49,229,45],[245,51,229,47],[245,62,229,58],[245,63,229,59],[246,8,230,4],[246,12,230,4,"_outputData"],[246,23,230,4],[246,26,230,24,"outputData"],[246,36,230,34],[247,10,230,12,"address"],[247,17,230,19],[247,20,230,19,"_outputData"],[247,31,230,19],[247,32,230,12,"address"],[247,39,230,19],[248,8,231,4],[248,12,231,8],[248,19,231,15,"address"],[248,26,231,22],[248,31,231,27],[248,39,231,35],[248,41,231,37],[249,10,232,6],[249,14,232,14,"network"],[249,21,232,21],[249,24,232,26],[249,28,232,30],[249,29,232,31,"opts"],[249,33,232,35],[249,34,232,14,"network"],[249,41,232,21],[250,10,233,6],[250,14,233,12,"script"],[250,20,233,18],[250,23,233,21,"_$$_REQUIRE"],[250,34,233,21],[250,35,233,21,"_dependencyMap"],[250,49,233,21],[250,67,233,31,"toOutputScript"],[250,81,233,45],[250,82,233,46,"address"],[250,89,233,53],[250,91,233,55,"network"],[250,98,233,62],[250,99,233,63],[251,10,234,6,"outputData"],[251,20,234,16],[251,23,234,19,"Object"],[251,29,234,25],[251,30,234,26,"assign"],[251,36,234,32],[251,37,234,33,"outputData"],[251,47,234,43],[251,49,234,45],[252,12,234,47,"script"],[252,18,234,53],[252,20,234,47,"script"],[253,10,234,54],[253,11,234,55],[253,12,234,56],[254,8,235,4],[255,8,236,4],[255,12,236,10,"c"],[255,13,236,11],[255,16,236,14],[255,20,236,18],[255,21,236,19,"__CACHE"],[255,28,236,26],[256,8,237,4],[256,12,237,8],[256,13,237,9,"data"],[256,17,237,13],[256,18,237,14,"addOutput"],[256,27,237,23],[256,28,237,24,"outputData"],[256,38,237,34],[256,39,237,35],[257,8,238,4,"c"],[257,9,238,5],[257,10,238,6,"__FEE"],[257,15,238,11],[257,18,238,14,"undefined"],[257,27,238,23],[258,8,239,4,"c"],[258,9,239,5],[258,10,239,6,"__FEE_RATE"],[258,20,239,16],[258,23,239,19,"undefined"],[258,32,239,28],[259,8,240,4,"c"],[259,9,240,5],[259,10,240,6,"__EXTRACTED_TX"],[259,24,240,20],[259,27,240,23,"undefined"],[259,36,240,32],[260,8,241,4],[260,15,241,11],[260,19,241,15],[261,6,242,2],[262,4,242,3],[263,6,242,3,"key"],[263,9,242,3],[264,6,242,3,"value"],[264,11,242,3],[264,13,243,2],[264,22,243,2,"extractTransaction"],[264,40,243,20,"extractTransaction"],[264,41,243,21,"disableFeeCheck"],[264,56,243,36],[264,58,243,38],[265,8,244,4],[265,12,244,8],[265,13,244,9],[265,17,244,13],[265,18,244,14,"data"],[265,22,244,18],[265,23,244,19,"inputs"],[265,29,244,25],[265,30,244,26,"every"],[265,35,244,31],[265,36,244,32,"isFinalized"],[265,47,244,43],[265,48,244,44],[265,50,244,46],[265,56,244,52],[265,60,244,56,"Error"],[265,65,244,61],[265,66,244,62],[265,81,244,77],[265,82,244,78],[266,8,245,4],[266,12,245,10,"c"],[266,13,245,11],[266,16,245,14],[266,20,245,18],[266,21,245,19,"__CACHE"],[266,28,245,26],[267,8,246,4],[267,12,246,8],[267,13,246,9,"disableFeeCheck"],[267,28,246,24],[267,30,246,26],[268,10,247,6,"checkFees"],[268,19,247,15],[268,20,247,16],[268,24,247,20],[268,26,247,22,"c"],[268,27,247,23],[268,29,247,25],[268,33,247,29],[268,34,247,30,"opts"],[268,38,247,34],[268,39,247,35],[269,8,248,4],[270,8,249,4],[270,12,249,8,"c"],[270,13,249,9],[270,14,249,10,"__EXTRACTED_TX"],[270,28,249,24],[270,30,249,26],[270,37,249,33,"c"],[270,38,249,34],[270,39,249,35,"__EXTRACTED_TX"],[270,53,249,49],[271,8,250,4],[271,12,250,10,"tx"],[271,14,250,12],[271,17,250,15,"c"],[271,18,250,16],[271,19,250,17,"__TX"],[271,23,250,21],[271,24,250,22,"clone"],[271,29,250,27],[271,30,250,28],[271,31,250,29],[272,8,251,4,"inputFinalizeGetAmts"],[272,28,251,24],[272,29,251,25],[272,33,251,29],[272,34,251,30,"data"],[272,38,251,34],[272,39,251,35,"inputs"],[272,45,251,41],[272,47,251,43,"tx"],[272,49,251,45],[272,51,251,47,"c"],[272,52,251,48],[272,54,251,50],[272,58,251,54],[272,59,251,55],[273,8,252,4],[273,15,252,11,"tx"],[273,17,252,13],[274,6,253,2],[275,4,253,3],[276,6,253,3,"key"],[276,9,253,3],[277,6,253,3,"value"],[277,11,253,3],[277,13,254,2],[277,22,254,2,"getFeeRate"],[277,32,254,12,"getFeeRate"],[277,33,254,12],[277,35,254,15],[278,8,255,4],[278,15,255,11,"getTxCacheValue"],[278,30,255,26],[278,31,256,6],[278,43,256,18],[278,45,257,6],[278,55,257,16],[278,57,258,6],[278,61,258,10],[278,62,258,11,"data"],[278,66,258,15],[278,67,258,16,"inputs"],[278,73,258,22],[278,75,259,6],[278,79,259,10],[278,80,259,11,"__CACHE"],[278,87,260,4],[278,88,260,5],[279,6,261,2],[280,4,261,3],[281,6,261,3,"key"],[281,9,261,3],[282,6,261,3,"value"],[282,11,261,3],[282,13,262,2],[282,22,262,2,"getFee"],[282,28,262,8,"getFee"],[282,29,262,8],[282,31,262,11],[283,8,263,4],[283,15,263,11,"getTxCacheValue"],[283,30,263,26],[283,31,263,27],[283,38,263,34],[283,40,263,36],[283,45,263,41],[283,47,263,43],[283,51,263,47],[283,52,263,48,"data"],[283,56,263,52],[283,57,263,53,"inputs"],[283,63,263,59],[283,65,263,61],[283,69,263,65],[283,70,263,66,"__CACHE"],[283,77,263,73],[283,78,263,74],[284,6,264,2],[285,4,264,3],[286,6,264,3,"key"],[286,9,264,3],[287,6,264,3,"value"],[287,11,264,3],[287,13,265,2],[287,22,265,2,"finalizeAllInputs"],[287,39,265,19,"finalizeAllInputs"],[287,40,265,19],[287,42,265,22],[288,8,265,22],[288,12,265,22,"_this4"],[288,18,265,22],[289,8,266,4,"_$$_REQUIRE"],[289,19,266,4],[289,20,266,4,"_dependencyMap"],[289,34,266,4],[289,63,266,12,"checkForInput"],[289,76,266,25],[289,77,266,26],[289,81,266,30],[289,82,266,31,"data"],[289,86,266,35],[289,87,266,36,"inputs"],[289,93,266,42],[289,95,266,44],[289,96,266,45],[289,97,266,46],[289,98,266,47],[289,99,266,48],[290,8,267,4,"range"],[290,13,267,9],[290,14,267,10],[290,18,267,14],[290,19,267,15,"data"],[290,23,267,19],[290,24,267,20,"inputs"],[290,30,267,26],[290,31,267,27,"length"],[290,37,267,33],[290,38,267,34],[290,39,267,35,"forEach"],[290,46,267,42],[290,47,267,43],[290,57,267,43,"idx"],[290,60,267,46],[291,10,267,46],[291,17,267,50,"_this4"],[291,23,267,54],[291,24,267,55,"finalizeInput"],[291,37,267,68],[291,38,267,69,"idx"],[291,41,267,72],[291,42,267,73],[292,8,267,73],[292,10,267,74],[293,8,268,4],[293,15,268,11],[293,19,268,15],[294,6,269,2],[295,4,269,3],[296,6,269,3,"key"],[296,9,269,3],[297,6,269,3,"value"],[297,11,269,3],[297,13,270,2],[297,22,270,2,"finalizeInput"],[297,35,270,15,"finalizeInput"],[297,36,270,16,"inputIndex"],[297,46,270,26],[297,48,270,64],[298,8,270,64],[298,12,270,28,"finalScriptsFunc"],[298,28,270,44],[298,31,270,44,"arguments"],[298,40,270,44],[298,41,270,44,"length"],[298,47,270,44],[298,55,270,44,"arguments"],[298,64,270,44],[298,72,270,44,"undefined"],[298,81,270,44],[298,84,270,44,"arguments"],[298,93,270,44],[298,99,270,47,"getFinalScripts"],[298,114,270,62],[299,8,271,4],[299,12,271,10,"input"],[299,17,271,15],[299,20,271,18,"_$$_REQUIRE"],[299,31,271,18],[299,32,271,18,"_dependencyMap"],[299,46,271,18],[299,75,271,26,"checkForInput"],[299,88,271,39],[299,89,271,40],[299,93,271,44],[299,94,271,45,"data"],[299,98,271,49],[299,99,271,50,"inputs"],[299,105,271,56],[299,107,271,58,"inputIndex"],[299,117,271,68],[299,118,271,69],[300,8,272,4],[300,12,272,4,"_getScriptFromInput"],[300,31,272,4],[300,34,272,50,"getScriptFromInput"],[300,52,272,68],[300,53,273,6,"inputIndex"],[300,63,273,16],[300,65,274,6,"input"],[300,70,274,11],[300,72,275,6],[300,76,275,10],[300,77,275,11,"__CACHE"],[300,84,276,4],[300,85,276,5],[301,10,272,12,"script"],[301,16,272,18],[301,19,272,18,"_getScriptFromInput"],[301,38,272,18],[301,39,272,12,"script"],[301,45,272,18],[302,10,272,20,"isP2SH"],[302,16,272,26],[302,19,272,26,"_getScriptFromInput"],[302,38,272,26],[302,39,272,20,"isP2SH"],[302,45,272,26],[303,10,272,28,"isP2WSH"],[303,17,272,35],[303,20,272,35,"_getScriptFromInput"],[303,39,272,35],[303,40,272,28,"isP2WSH"],[303,47,272,35],[304,10,272,37,"isSegwit"],[304,18,272,45],[304,21,272,45,"_getScriptFromInput"],[304,40,272,45],[304,41,272,37,"isSegwit"],[304,49,272,45],[305,8,277,4],[305,12,277,8],[305,13,277,9,"script"],[305,19,277,15],[305,21,277,17],[305,27,277,23],[305,31,277,27,"Error"],[305,36,277,32],[305,37,277,33],[305,67,277,63,"inputIndex"],[305,77,277,73],[305,79,277,75],[305,80,277,76],[306,8,278,4,"checkPartialSigSighashes"],[306,32,278,28],[306,33,278,29,"input"],[306,38,278,34],[306,39,278,35],[307,8,279,4],[307,12,279,4,"_finalScriptsFunc"],[307,29,279,4],[307,32,279,51,"finalScriptsFunc"],[307,48,279,67],[307,49,280,6,"inputIndex"],[307,59,280,16],[307,61,281,6,"input"],[307,66,281,11],[307,68,282,6,"script"],[307,74,282,12],[307,76,283,6,"isSegwit"],[307,84,283,14],[307,86,284,6,"isP2SH"],[307,92,284,12],[307,94,285,6,"isP2WSH"],[307,101,286,4],[307,102,286,5],[308,10,279,12,"finalScriptSig"],[308,24,279,26],[308,27,279,26,"_finalScriptsFunc"],[308,44,279,26],[308,45,279,12,"finalScriptSig"],[308,59,279,26],[309,10,279,28,"finalScriptWitness"],[309,28,279,46],[309,31,279,46,"_finalScriptsFunc"],[309,48,279,46],[309,49,279,28,"finalScriptWitness"],[309,67,279,46],[310,8,287,4],[310,12,287,8,"finalScriptSig"],[310,26,287,22],[310,28,287,24],[310,32,287,28],[310,33,287,29,"data"],[310,37,287,33],[310,38,287,34,"updateInput"],[310,49,287,45],[310,50,287,46,"inputIndex"],[310,60,287,56],[310,62,287,58],[311,10,287,60,"finalScriptSig"],[311,24,287,74],[311,26,287,60,"finalScriptSig"],[312,8,287,75],[312,9,287,76],[312,10,287,77],[313,8,288,4],[313,12,288,8,"finalScriptWitness"],[313,30,288,26],[313,32,289,6],[313,36,289,10],[313,37,289,11,"data"],[313,41,289,15],[313,42,289,16,"updateInput"],[313,53,289,27],[313,54,289,28,"inputIndex"],[313,64,289,38],[313,66,289,40],[314,10,289,42,"finalScriptWitness"],[314,28,289,60],[314,30,289,42,"finalScriptWitness"],[315,8,289,61],[315,9,289,62],[315,10,289,63],[316,8,290,4],[316,12,290,8],[316,13,290,9,"finalScriptSig"],[316,27,290,23],[316,31,290,27],[316,32,290,28,"finalScriptWitness"],[316,50,290,46],[316,52,291,6],[316,58,291,12],[316,62,291,16,"Error"],[316,67,291,21],[316,68,291,22],[316,103,291,57,"inputIndex"],[316,113,291,67],[316,115,291,69],[316,116,291,70],[317,8,292,4],[317,12,292,8],[317,13,292,9,"data"],[317,17,292,13],[317,18,292,14,"clearFinalizedInput"],[317,37,292,33],[317,38,292,34,"inputIndex"],[317,48,292,44],[317,49,292,45],[318,8,293,4],[318,15,293,11],[318,19,293,15],[319,6,294,2],[320,4,294,3],[321,6,294,3,"key"],[321,9,294,3],[322,6,294,3,"value"],[322,11,294,3],[322,13,295,2],[322,22,295,2,"getInputType"],[322,34,295,14,"getInputType"],[322,35,295,15,"inputIndex"],[322,45,295,25],[322,47,295,27],[323,8,296,4],[323,12,296,10,"input"],[323,17,296,15],[323,20,296,18,"_$$_REQUIRE"],[323,31,296,18],[323,32,296,18,"_dependencyMap"],[323,46,296,18],[323,75,296,26,"checkForInput"],[323,88,296,39],[323,89,296,40],[323,93,296,44],[323,94,296,45,"data"],[323,98,296,49],[323,99,296,50,"inputs"],[323,105,296,56],[323,107,296,58,"inputIndex"],[323,117,296,68],[323,118,296,69],[324,8,297,4],[324,12,297,10,"script"],[324,18,297,16],[324,21,297,19,"getScriptFromUtxo"],[324,38,297,36],[324,39,297,37,"inputIndex"],[324,49,297,47],[324,51,297,49,"input"],[324,56,297,54],[324,58,297,56],[324,62,297,60],[324,63,297,61,"__CACHE"],[324,70,297,68],[324,71,297,69],[325,8,298,4],[325,12,298,10,"result"],[325,18,298,16],[325,21,298,19,"getMeaningfulScript"],[325,40,298,38],[325,41,299,6,"script"],[325,47,299,12],[325,49,300,6,"inputIndex"],[325,59,300,16],[325,61,301,6],[325,68,301,13],[325,70,302,6,"input"],[325,75,302,11],[325,76,302,12,"redeemScript"],[325,88,302,24],[325,92,302,28,"redeemFromFinalScriptSig"],[325,116,302,52],[325,117,302,53,"input"],[325,122,302,58],[325,123,302,59,"finalScriptSig"],[325,137,302,73],[325,138,302,74],[325,140,303,6,"input"],[325,145,303,11],[325,146,303,12,"witnessScript"],[325,159,303,25],[325,163,304,8,"redeemFromFinalWitnessScript"],[325,191,304,36],[325,192,304,37,"input"],[325,197,304,42],[325,198,304,43,"finalScriptWitness"],[325,216,304,61],[325,217,305,4],[325,218,305,5],[326,8,306,4],[326,12,306,10,"type"],[326,16,306,14],[326,19,306,17,"result"],[326,25,306,23],[326,26,306,24,"type"],[326,30,306,28],[326,35,306,33],[326,40,306,38],[326,43,306,41],[326,45,306,43],[326,48,306,46,"result"],[326,54,306,52],[326,55,306,53,"type"],[326,59,306,57],[326,62,306,60],[326,65,306,63],[327,8,307,4],[327,12,307,10,"mainType"],[327,20,307,18],[327,23,307,21,"classifyScript"],[327,37,307,35],[327,38,307,36,"result"],[327,44,307,42],[327,45,307,43,"meaningfulScript"],[327,61,307,59],[327,62,307,60],[328,8,308,4],[328,15,308,11,"type"],[328,19,308,15],[328,22,308,18,"mainType"],[328,30,308,26],[329,6,309,2],[330,4,309,3],[331,6,309,3,"key"],[331,9,309,3],[332,6,309,3,"value"],[332,11,309,3],[332,13,310,2],[332,22,310,2,"inputHasPubkey"],[332,36,310,16,"inputHasPubkey"],[332,37,310,17,"inputIndex"],[332,47,310,27],[332,49,310,29,"pubkey"],[332,55,310,35],[332,57,310,37],[333,8,311,4],[333,12,311,10,"input"],[333,17,311,15],[333,20,311,18,"_$$_REQUIRE"],[333,31,311,18],[333,32,311,18,"_dependencyMap"],[333,46,311,18],[333,75,311,26,"checkForInput"],[333,88,311,39],[333,89,311,40],[333,93,311,44],[333,94,311,45,"data"],[333,98,311,49],[333,99,311,50,"inputs"],[333,105,311,56],[333,107,311,58,"inputIndex"],[333,117,311,68],[333,118,311,69],[334,8,312,4],[334,15,312,11,"pubkeyInInput"],[334,28,312,24],[334,29,312,25,"pubkey"],[334,35,312,31],[334,37,312,33,"input"],[334,42,312,38],[334,44,312,40,"inputIndex"],[334,54,312,50],[334,56,312,52],[334,60,312,56],[334,61,312,57,"__CACHE"],[334,68,312,64],[334,69,312,65],[335,6,313,2],[336,4,313,3],[337,6,313,3,"key"],[337,9,313,3],[338,6,313,3,"value"],[338,11,313,3],[338,13,314,2],[338,22,314,2,"inputHasHDKey"],[338,35,314,15,"inputHasHDKey"],[338,36,314,16,"inputIndex"],[338,46,314,26],[338,48,314,28,"root"],[338,52,314,32],[338,54,314,34],[339,8,315,4],[339,12,315,10,"input"],[339,17,315,15],[339,20,315,18,"_$$_REQUIRE"],[339,31,315,18],[339,32,315,18,"_dependencyMap"],[339,46,315,18],[339,75,315,26,"checkForInput"],[339,88,315,39],[339,89,315,40],[339,93,315,44],[339,94,315,45,"data"],[339,98,315,49],[339,99,315,50,"inputs"],[339,105,315,56],[339,107,315,58,"inputIndex"],[339,117,315,68],[339,118,315,69],[340,8,316,4],[340,12,316,10,"derivationIsMine"],[340,28,316,26],[340,31,316,29,"bip32DerivationIsMine"],[340,52,316,50],[340,53,316,51,"root"],[340,57,316,55],[340,58,316,56],[341,8,317,4],[341,15,318,6],[341,16,318,7],[341,17,318,8,"input"],[341,22,318,13],[341,23,318,14,"bip32Derivation"],[341,38,318,29],[341,42,318,33,"input"],[341,47,318,38],[341,48,318,39,"bip32Derivation"],[341,63,318,54],[341,64,318,55,"some"],[341,68,318,59],[341,69,318,60,"derivationIsMine"],[341,85,318,76],[341,86,318,77],[342,6,320,2],[343,4,320,3],[344,6,320,3,"key"],[344,9,320,3],[345,6,320,3,"value"],[345,11,320,3],[345,13,321,2],[345,22,321,2,"outputHasPubkey"],[345,37,321,17,"outputHasPubkey"],[345,38,321,18,"outputIndex"],[345,49,321,29],[345,51,321,31,"pubkey"],[345,57,321,37],[345,59,321,39],[346,8,322,4],[346,12,322,10,"output"],[346,18,322,16],[346,21,322,19,"_$$_REQUIRE"],[346,32,322,19],[346,33,322,19,"_dependencyMap"],[346,47,322,19],[346,76,322,27,"checkForOutput"],[346,90,322,41],[346,91,322,42],[346,95,322,46],[346,96,322,47,"data"],[346,100,322,51],[346,101,322,52,"outputs"],[346,108,322,59],[346,110,322,61,"outputIndex"],[346,121,322,72],[346,122,322,73],[347,8,323,4],[347,15,323,11,"pubkeyInOutput"],[347,29,323,25],[347,30,323,26,"pubkey"],[347,36,323,32],[347,38,323,34,"output"],[347,44,323,40],[347,46,323,42,"outputIndex"],[347,57,323,53],[347,59,323,55],[347,63,323,59],[347,64,323,60,"__CACHE"],[347,71,323,67],[347,72,323,68],[348,6,324,2],[349,4,324,3],[350,6,324,3,"key"],[350,9,324,3],[351,6,324,3,"value"],[351,11,324,3],[351,13,325,2],[351,22,325,2,"outputHasHDKey"],[351,36,325,16,"outputHasHDKey"],[351,37,325,17,"outputIndex"],[351,48,325,28],[351,50,325,30,"root"],[351,54,325,34],[351,56,325,36],[352,8,326,4],[352,12,326,10,"output"],[352,18,326,16],[352,21,326,19,"_$$_REQUIRE"],[352,32,326,19],[352,33,326,19,"_dependencyMap"],[352,47,326,19],[352,76,326,27,"checkForOutput"],[352,90,326,41],[352,91,326,42],[352,95,326,46],[352,96,326,47,"data"],[352,100,326,51],[352,101,326,52,"outputs"],[352,108,326,59],[352,110,326,61,"outputIndex"],[352,121,326,72],[352,122,326,73],[353,8,327,4],[353,12,327,10,"derivationIsMine"],[353,28,327,26],[353,31,327,29,"bip32DerivationIsMine"],[353,52,327,50],[353,53,327,51,"root"],[353,57,327,55],[353,58,327,56],[354,8,328,4],[354,15,329,6],[354,16,329,7],[354,17,329,8,"output"],[354,23,329,14],[354,24,329,15,"bip32Derivation"],[354,39,329,30],[354,43,329,34,"output"],[354,49,329,40],[354,50,329,41,"bip32Derivation"],[354,65,329,56],[354,66,329,57,"some"],[354,70,329,61],[354,71,329,62,"derivationIsMine"],[354,87,329,78],[354,88,329,79],[355,6,331,2],[356,4,331,3],[357,6,331,3,"key"],[357,9,331,3],[358,6,331,3,"value"],[358,11,331,3],[358,13,332,2],[358,22,332,2,"validateSignaturesOfAllInputs"],[358,51,332,31,"validateSignaturesOfAllInputs"],[358,52,332,31],[358,54,332,34],[359,8,332,34],[359,12,332,34,"_this5"],[359,18,332,34],[360,8,333,4,"_$$_REQUIRE"],[360,19,333,4],[360,20,333,4,"_dependencyMap"],[360,34,333,4],[360,63,333,12,"checkForInput"],[360,76,333,25],[360,77,333,26],[360,81,333,30],[360,82,333,31,"data"],[360,86,333,35],[360,87,333,36,"inputs"],[360,93,333,42],[360,95,333,44],[360,96,333,45],[360,97,333,46],[360,98,333,47],[360,99,333,48],[361,8,334,4],[361,12,334,10,"results"],[361,19,334,17],[361,22,334,20,"range"],[361,27,334,25],[361,28,334,26],[361,32,334,30],[361,33,334,31,"data"],[361,37,334,35],[361,38,334,36,"inputs"],[361,44,334,42],[361,45,334,43,"length"],[361,51,334,49],[361,52,334,50],[361,53,334,51,"map"],[361,56,334,54],[361,57,334,55],[361,67,334,55,"idx"],[361,70,334,58],[362,10,334,58],[362,17,335,6,"_this5"],[362,23,335,10],[362,24,335,11,"validateSignaturesOfInput"],[362,49,335,36],[362,50,335,37,"idx"],[362,53,335,40],[362,54,335,41],[363,8,335,41],[363,9,336,4],[363,10,336,5],[364,8,337,4],[364,15,337,11,"results"],[364,22,337,18],[364,23,337,19,"reduce"],[364,29,337,25],[364,30,337,26],[364,40,337,27,"final"],[364,45,337,32],[364,47,337,34,"res"],[364,50,337,37],[365,10,337,37],[365,17,337,42,"res"],[365,20,337,45],[365,25,337,50],[365,29,337,54],[365,33,337,58,"final"],[365,38,337,63],[366,8,337,63],[366,11,337,65],[366,15,337,69],[366,16,337,70],[367,6,338,2],[368,4,338,3],[369,6,338,3,"key"],[369,9,338,3],[370,6,338,3,"value"],[370,11,338,3],[370,13,339,2],[370,22,339,2,"validateSignaturesOfInput"],[370,47,339,27,"validateSignaturesOfInput"],[370,48,339,28,"inputIndex"],[370,58,339,38],[370,60,339,40,"pubkey"],[370,66,339,46],[370,68,339,48],[371,8,340,4],[371,12,340,10,"input"],[371,17,340,15],[371,20,340,18],[371,24,340,22],[371,25,340,23,"data"],[371,29,340,27],[371,30,340,28,"inputs"],[371,36,340,34],[371,37,340,35,"inputIndex"],[371,47,340,45],[371,48,340,46],[372,8,341,4],[372,12,341,10,"partialSig"],[372,22,341,20],[372,25,341,23],[372,26,341,24,"input"],[372,31,341,29],[372,35,341,33],[372,36,341,34],[372,37,341,35],[372,39,341,37,"partialSig"],[372,49,341,47],[373,8,342,4],[373,12,342,8],[373,13,342,9,"input"],[373,18,342,14],[373,22,342,18],[373,23,342,19,"partialSig"],[373,33,342,29],[373,37,342,33,"partialSig"],[373,47,342,43],[373,48,342,44,"length"],[373,54,342,50],[373,57,342,53],[373,58,342,54],[373,60,343,6],[373,66,343,12],[373,70,343,16,"Error"],[373,75,343,21],[373,76,343,22],[373,103,343,49],[373,104,343,50],[374,8,344,4],[374,12,344,10,"mySigs"],[374,18,344,16],[374,21,344,19,"pubkey"],[374,27,344,25],[374,30,345,8,"partialSig"],[374,40,345,18],[374,41,345,19,"filter"],[374,47,345,25],[374,48,345,26],[374,58,345,26,"sig"],[374,61,345,29],[375,10,345,29],[375,17,345,33,"sig"],[375,20,345,36],[375,21,345,37,"pubkey"],[375,27,345,43],[375,28,345,44,"equals"],[375,34,345,50],[375,35,345,51,"pubkey"],[375,41,345,57],[375,42,345,58],[376,8,345,58],[376,10,345,59],[376,13,346,8,"partialSig"],[376,23,346,18],[377,8,347,4],[377,12,347,8,"mySigs"],[377,18,347,14],[377,19,347,15,"length"],[377,25,347,21],[377,28,347,24],[377,29,347,25],[377,31,347,27],[377,37,347,33],[377,41,347,37,"Error"],[377,46,347,42],[377,47,347,43],[377,78,347,74],[377,79,347,75],[378,8,348,4],[378,12,348,10,"results"],[378,19,348,17],[378,22,348,20],[378,24,348,22],[379,8,349,4],[379,12,349,8,"hashCache"],[379,21,349,17],[380,8,350,4],[380,12,350,8,"scriptCache"],[380,23,350,19],[381,8,351,4],[381,12,351,8,"sighashCache"],[381,24,351,20],[382,8,352,4],[382,13,352,9],[382,17,352,15,"pSig"],[382,21,352,19],[382,25,352,23,"mySigs"],[382,31,352,29],[382,33,352,31],[383,10,353,6],[383,14,353,12,"sig"],[383,17,353,15],[383,20,353,18,"_$$_REQUIRE"],[383,31,353,18],[383,32,353,18,"_dependencyMap"],[383,46,353,18],[383,63,353,26,"signature"],[383,72,353,35],[383,73,353,36,"decode"],[383,79,353,42],[383,80,353,43,"pSig"],[383,84,353,47],[383,85,353,48,"signature"],[383,94,353,57],[383,95,353,58],[384,10,354,6],[384,14,354,6,"_ref"],[384,18,354,6],[384,21,355,8,"sighashCache"],[384,33,355,20],[384,38,355,25,"sig"],[384,41,355,28],[384,42,355,29,"hashType"],[384,50,355,37],[384,53,356,12,"getHashForSig"],[384,66,356,25],[384,67,357,14,"inputIndex"],[384,77,357,24],[384,79,358,14,"Object"],[384,85,358,20],[384,86,358,21,"assign"],[384,92,358,27],[384,93,358,28],[384,94,358,29],[384,95,358,30],[384,97,358,32,"input"],[384,102,358,37],[384,104,358,39],[385,14,358,41,"sighashType"],[385,25,358,52],[385,27,358,54,"sig"],[385,30,358,57],[385,31,358,58,"hashType"],[386,12,358,67],[386,13,358,68],[386,14,358,69],[386,16,359,14],[386,20,359,18],[386,21,359,19,"__CACHE"],[386,28,359,26],[386,30,360,14],[386,34,361,12],[386,35,361,13],[386,38,362,12],[387,14,362,14,"hash"],[387,18,362,18],[387,20,362,20,"hashCache"],[387,29,362,29],[388,14,362,31,"script"],[388,20,362,37],[388,22,362,39,"scriptCache"],[389,12,362,51],[389,13,362,52],[390,12,354,14,"hash"],[390,16,354,18],[390,19,354,18,"_ref"],[390,23,354,18],[390,24,354,14,"hash"],[390,28,354,18],[391,12,354,20,"script"],[391,18,354,26],[391,21,354,26,"_ref"],[391,25,354,26],[391,26,354,20,"script"],[391,32,354,26],[392,10,363,6,"sighashCache"],[392,22,363,18],[392,25,363,21,"sig"],[392,28,363,24],[392,29,363,25,"hashType"],[392,37,363,33],[393,10,364,6,"hashCache"],[393,19,364,15],[393,22,364,18,"hash"],[393,26,364,22],[394,10,365,6,"scriptCache"],[394,21,365,17],[394,24,365,20,"script"],[394,30,365,26],[395,10,366,6,"checkScriptForPubkey"],[395,30,366,26],[395,31,366,27,"pSig"],[395,35,366,31],[395,36,366,32,"pubkey"],[395,42,366,38],[395,44,366,40,"script"],[395,50,366,46],[395,52,366,48],[395,60,366,56],[395,61,366,57],[396,10,367,6],[396,14,367,12,"keypair"],[396,21,367,19],[396,24,367,22,"_$$_REQUIRE"],[396,35,367,22],[396,36,367,22,"_dependencyMap"],[396,50,367,22],[396,68,367,31,"fromPublicKey"],[396,81,367,44],[396,82,367,45,"pSig"],[396,86,367,49],[396,87,367,50,"pubkey"],[396,93,367,56],[396,94,367,57],[397,10,368,6,"results"],[397,17,368,13],[397,18,368,14,"push"],[397,22,368,18],[397,23,368,19,"keypair"],[397,30,368,26],[397,31,368,27,"verify"],[397,37,368,33],[397,38,368,34,"hash"],[397,42,368,38],[397,44,368,40,"sig"],[397,47,368,43],[397,48,368,44,"signature"],[397,57,368,53],[397,58,368,54],[397,59,368,55],[398,8,369,4],[399,8,370,4],[399,15,370,11,"results"],[399,22,370,18],[399,23,370,19,"every"],[399,28,370,24],[399,29,370,25],[399,39,370,25,"res"],[399,42,370,28],[400,10,370,28],[400,17,370,32,"res"],[400,20,370,35],[400,25,370,40],[400,29,370,44],[401,8,370,44],[401,10,370,45],[402,6,371,2],[403,4,371,3],[404,6,371,3,"key"],[404,9,371,3],[405,6,371,3,"value"],[405,11,371,3],[405,13,372,2],[405,22,372,2,"signAllInputsHD"],[405,37,372,17,"signAllInputsHD"],[405,38,373,4,"hdKeyPair"],[405,47,373,13],[405,49,375,4],[406,8,375,4],[406,12,374,4,"sighashTypes"],[406,24,374,16],[406,27,374,16,"arguments"],[406,36,374,16],[406,37,374,16,"length"],[406,43,374,16],[406,51,374,16,"arguments"],[406,60,374,16],[406,68,374,16,"undefined"],[406,77,374,16],[406,80,374,16,"arguments"],[406,89,374,16],[406,95,374,19],[406,96,374,20,"_$$_REQUIRE"],[406,107,374,20],[406,108,374,20,"_dependencyMap"],[406,122,374,20],[406,145,374,34,"Transaction"],[406,156,374,45],[406,157,374,46,"SIGHASH_ALL"],[406,168,374,57],[406,169,374,58],[407,8,376,4],[407,12,376,8],[407,13,376,9,"hdKeyPair"],[407,22,376,18],[407,26,376,22],[407,27,376,23,"hdKeyPair"],[407,36,376,32],[407,37,376,33,"publicKey"],[407,46,376,42],[407,50,376,46],[407,51,376,47,"hdKeyPair"],[407,60,376,56],[407,61,376,57,"fingerprint"],[407,72,376,68],[407,74,376,70],[408,10,377,6],[408,16,377,12],[408,20,377,16,"Error"],[408,25,377,21],[408,26,377,22],[408,55,377,51],[408,56,377,52],[409,8,378,4],[410,8,379,4],[410,12,379,10,"results"],[410,19,379,17],[410,22,379,20],[410,24,379,22],[411,8,380,4],[411,13,380,9],[411,17,380,15,"i"],[411,18,380,16],[411,22,380,20,"range"],[411,27,380,25],[411,28,380,26],[411,32,380,30],[411,33,380,31,"data"],[411,37,380,35],[411,38,380,36,"inputs"],[411,44,380,42],[411,45,380,43,"length"],[411,51,380,49],[411,52,380,50],[411,54,380,52],[412,10,381,6],[412,14,381,10],[413,12,382,8],[413,16,382,12],[413,17,382,13,"signInputHD"],[413,28,382,24],[413,29,382,25,"i"],[413,30,382,26],[413,32,382,28,"hdKeyPair"],[413,41,382,37],[413,43,382,39,"sighashTypes"],[413,55,382,51],[413,56,382,52],[414,12,383,8,"results"],[414,19,383,15],[414,20,383,16,"push"],[414,24,383,20],[414,25,383,21],[414,29,383,25],[414,30,383,26],[415,10,384,6],[415,11,384,7],[415,12,384,8],[415,19,384,15,"err"],[415,22,384,18],[415,24,384,20],[416,12,385,8,"results"],[416,19,385,15],[416,20,385,16,"push"],[416,24,385,20],[416,25,385,21],[416,30,385,26],[416,31,385,27],[417,10,386,6],[418,8,387,4],[419,8,388,4],[419,12,388,8,"results"],[419,19,388,15],[419,20,388,16,"every"],[419,25,388,21],[419,26,388,22],[419,36,388,22,"v"],[419,37,388,23],[420,10,388,23],[420,17,388,27,"v"],[420,18,388,28],[420,23,388,33],[420,28,388,38],[421,8,388,38],[421,10,388,39],[421,12,388,41],[422,10,389,6],[422,16,389,12],[422,20,389,16,"Error"],[422,25,389,21],[422,26,389,22],[422,49,389,45],[422,50,389,46],[423,8,390,4],[424,8,391,4],[424,15,391,11],[424,19,391,15],[425,6,392,2],[426,4,392,3],[427,6,392,3,"key"],[427,9,392,3],[428,6,392,3,"value"],[428,11,392,3],[428,13,393,2],[428,22,393,2,"signAllInputsHDAsync"],[428,42,393,22,"signAllInputsHDAsync"],[428,43,394,4,"hdKeyPair"],[428,52,394,13],[428,54,396,4],[429,8,396,4],[429,12,396,4,"_this6"],[429,18,396,4],[430,8,396,4],[430,12,395,4,"sighashTypes"],[430,24,395,16],[430,27,395,16,"arguments"],[430,36,395,16],[430,37,395,16,"length"],[430,43,395,16],[430,51,395,16,"arguments"],[430,60,395,16],[430,68,395,16,"undefined"],[430,77,395,16],[430,80,395,16,"arguments"],[430,89,395,16],[430,95,395,19],[430,96,395,20,"_$$_REQUIRE"],[430,107,395,20],[430,108,395,20,"_dependencyMap"],[430,122,395,20],[430,145,395,34,"Transaction"],[430,156,395,45],[430,157,395,46,"SIGHASH_ALL"],[430,168,395,57],[430,169,395,58],[431,8,397,4],[431,15,397,11],[431,19,397,15,"Promise"],[431,26,397,22],[431,27,397,23],[431,37,397,24,"resolve"],[431,44,397,31],[431,46,397,33,"reject"],[431,52,397,39],[431,54,397,44],[432,10,398,6],[432,14,398,10],[432,15,398,11,"hdKeyPair"],[432,24,398,20],[432,28,398,24],[432,29,398,25,"hdKeyPair"],[432,38,398,34],[432,39,398,35,"publicKey"],[432,48,398,44],[432,52,398,48],[432,53,398,49,"hdKeyPair"],[432,62,398,58],[432,63,398,59,"fingerprint"],[432,74,398,70],[432,76,398,72],[433,12,399,8],[433,19,399,15,"reject"],[433,25,399,21],[433,26,399,22],[433,30,399,26,"Error"],[433,35,399,31],[433,36,399,32],[433,65,399,61],[433,66,399,62],[433,67,399,63],[434,10,400,6],[435,10,401,6],[435,14,401,12,"results"],[435,21,401,19],[435,24,401,22],[435,26,401,24],[436,10,402,6],[436,14,402,12,"promises"],[436,22,402,20],[436,25,402,23],[436,27,402,25],[437,10,403,6],[437,15,403,11],[437,19,403,17,"i"],[437,20,403,18],[437,24,403,22,"range"],[437,29,403,27],[437,30,403,28,"_this6"],[437,36,403,32],[437,37,403,33,"data"],[437,41,403,37],[437,42,403,38,"inputs"],[437,48,403,44],[437,49,403,45,"length"],[437,55,403,51],[437,56,403,52],[437,58,403,54],[438,12,404,8,"promises"],[438,20,404,16],[438,21,404,17,"push"],[438,25,404,21],[438,26,405,10,"_this6"],[438,32,405,14],[438,33,405,15,"signInputHDAsync"],[438,49,405,31],[438,50,405,32,"i"],[438,51,405,33],[438,53,405,35,"hdKeyPair"],[438,62,405,44],[438,64,405,46,"sighashTypes"],[438,76,405,58],[438,77,405,59],[438,78,405,60,"then"],[438,82,405,64],[438,83,406,12],[438,95,406,18],[439,14,407,14,"results"],[439,21,407,21],[439,22,407,22,"push"],[439,26,407,26],[439,27,407,27],[439,31,407,31],[439,32,407,32],[440,12,408,12],[440,13,408,13],[440,15,409,12],[440,27,409,18],[441,14,410,14,"results"],[441,21,410,21],[441,22,410,22,"push"],[441,26,410,26],[441,27,410,27],[441,32,410,32],[441,33,410,33],[442,12,411,12],[442,13,412,10],[442,14,413,8],[442,15,413,9],[443,10,414,6],[444,10,415,6],[444,17,415,13,"Promise"],[444,24,415,20],[444,25,415,21,"all"],[444,28,415,24],[444,29,415,25,"promises"],[444,37,415,33],[444,38,415,34],[444,39,415,35,"then"],[444,43,415,39],[444,44,415,40],[444,56,415,46],[445,12,416,8],[445,16,416,12,"results"],[445,23,416,19],[445,24,416,20,"every"],[445,29,416,25],[445,30,416,26],[445,40,416,26,"v"],[445,41,416,27],[446,14,416,27],[446,21,416,31,"v"],[446,22,416,32],[446,27,416,37],[446,32,416,42],[447,12,416,42],[447,14,416,43],[447,16,416,45],[448,14,417,10],[448,21,417,17,"reject"],[448,27,417,23],[448,28,417,24],[448,32,417,28,"Error"],[448,37,417,33],[448,38,417,34],[448,61,417,57],[448,62,417,58],[448,63,417,59],[449,12,418,8],[450,12,419,8,"resolve"],[450,19,419,15],[450,20,419,16],[450,21,419,17],[451,10,420,6],[451,11,420,7],[451,12,420,8],[452,8,421,4],[452,9,421,5],[452,10,421,6],[453,6,422,2],[454,4,422,3],[455,6,422,3,"key"],[455,9,422,3],[456,6,422,3,"value"],[456,11,422,3],[456,13,423,2],[456,22,423,2,"signInputHD"],[456,33,423,13,"signInputHD"],[456,34,424,4,"inputIndex"],[456,44,424,14],[456,46,425,4,"hdKeyPair"],[456,55,425,13],[456,57,427,4],[457,8,427,4],[457,12,427,4,"_this7"],[457,18,427,4],[458,8,427,4],[458,12,426,4,"sighashTypes"],[458,24,426,16],[458,27,426,16,"arguments"],[458,36,426,16],[458,37,426,16,"length"],[458,43,426,16],[458,51,426,16,"arguments"],[458,60,426,16],[458,68,426,16,"undefined"],[458,77,426,16],[458,80,426,16,"arguments"],[458,89,426,16],[458,95,426,19],[458,96,426,20,"_$$_REQUIRE"],[458,107,426,20],[458,108,426,20,"_dependencyMap"],[458,122,426,20],[458,145,426,34,"Transaction"],[458,156,426,45],[458,157,426,46,"SIGHASH_ALL"],[458,168,426,57],[458,169,426,58],[459,8,428,4],[459,12,428,8],[459,13,428,9,"hdKeyPair"],[459,22,428,18],[459,26,428,22],[459,27,428,23,"hdKeyPair"],[459,36,428,32],[459,37,428,33,"publicKey"],[459,46,428,42],[459,50,428,46],[459,51,428,47,"hdKeyPair"],[459,60,428,56],[459,61,428,57,"fingerprint"],[459,72,428,68],[459,74,428,70],[460,10,429,6],[460,16,429,12],[460,20,429,16,"Error"],[460,25,429,21],[460,26,429,22],[460,55,429,51],[460,56,429,52],[461,8,430,4],[462,8,431,4],[462,12,431,10,"signers"],[462,19,431,17],[462,22,431,20,"getSignersFromHD"],[462,38,431,36],[462,39,431,37,"inputIndex"],[462,49,431,47],[462,51,431,49],[462,55,431,53],[462,56,431,54,"data"],[462,60,431,58],[462,61,431,59,"inputs"],[462,67,431,65],[462,69,431,67,"hdKeyPair"],[462,78,431,76],[462,79,431,77],[463,8,432,4,"signers"],[463,15,432,11],[463,16,432,12,"forEach"],[463,23,432,19],[463,24,432,20],[463,34,432,20,"signer"],[463,40,432,26],[464,10,432,26],[464,17,432,30,"_this7"],[464,23,432,34],[464,24,432,35,"signInput"],[464,33,432,44],[464,34,432,45,"inputIndex"],[464,44,432,55],[464,46,432,57,"signer"],[464,52,432,63],[464,54,432,65,"sighashTypes"],[464,66,432,77],[464,67,432,78],[465,8,432,78],[465,10,432,79],[466,8,433,4],[466,15,433,11],[466,19,433,15],[467,6,434,2],[468,4,434,3],[469,6,434,3,"key"],[469,9,434,3],[470,6,434,3,"value"],[470,11,434,3],[470,13,435,2],[470,22,435,2,"signInputHDAsync"],[470,38,435,18,"signInputHDAsync"],[470,39,436,4,"inputIndex"],[470,49,436,14],[470,51,437,4,"hdKeyPair"],[470,60,437,13],[470,62,439,4],[471,8,439,4],[471,12,439,4,"_this8"],[471,18,439,4],[472,8,439,4],[472,12,438,4,"sighashTypes"],[472,24,438,16],[472,27,438,16,"arguments"],[472,36,438,16],[472,37,438,16,"length"],[472,43,438,16],[472,51,438,16,"arguments"],[472,60,438,16],[472,68,438,16,"undefined"],[472,77,438,16],[472,80,438,16,"arguments"],[472,89,438,16],[472,95,438,19],[472,96,438,20,"_$$_REQUIRE"],[472,107,438,20],[472,108,438,20,"_dependencyMap"],[472,122,438,20],[472,145,438,34,"Transaction"],[472,156,438,45],[472,157,438,46,"SIGHASH_ALL"],[472,168,438,57],[472,169,438,58],[473,8,440,4],[473,15,440,11],[473,19,440,15,"Promise"],[473,26,440,22],[473,27,440,23],[473,37,440,24,"resolve"],[473,44,440,31],[473,46,440,33,"reject"],[473,52,440,39],[473,54,440,44],[474,10,441,6],[474,14,441,10],[474,15,441,11,"hdKeyPair"],[474,24,441,20],[474,28,441,24],[474,29,441,25,"hdKeyPair"],[474,38,441,34],[474,39,441,35,"publicKey"],[474,48,441,44],[474,52,441,48],[474,53,441,49,"hdKeyPair"],[474,62,441,58],[474,63,441,59,"fingerprint"],[474,74,441,70],[474,76,441,72],[475,12,442,8],[475,19,442,15,"reject"],[475,25,442,21],[475,26,442,22],[475,30,442,26,"Error"],[475,35,442,31],[475,36,442,32],[475,65,442,61],[475,66,442,62],[475,67,442,63],[476,10,443,6],[477,10,444,6],[477,14,444,12,"signers"],[477,21,444,19],[477,24,444,22,"getSignersFromHD"],[477,40,444,38],[477,41,444,39,"inputIndex"],[477,51,444,49],[477,53,444,51,"_this8"],[477,59,444,55],[477,60,444,56,"data"],[477,64,444,60],[477,65,444,61,"inputs"],[477,71,444,67],[477,73,444,69,"hdKeyPair"],[477,82,444,78],[477,83,444,79],[478,10,445,6],[478,14,445,12,"promises"],[478,22,445,20],[478,25,445,23,"signers"],[478,32,445,30],[478,33,445,31,"map"],[478,36,445,34],[478,37,445,35],[478,47,445,35,"signer"],[478,53,445,41],[479,12,445,41],[479,19,446,8,"_this8"],[479,25,446,12],[479,26,446,13,"signInputAsync"],[479,40,446,27],[479,41,446,28,"inputIndex"],[479,51,446,38],[479,53,446,40,"signer"],[479,59,446,46],[479,61,446,48,"sighashTypes"],[479,73,446,60],[479,74,446,61],[480,10,446,61],[480,11,447,6],[480,12,447,7],[481,10,448,6],[481,17,448,13,"Promise"],[481,24,448,20],[481,25,448,21,"all"],[481,28,448,24],[481,29,448,25,"promises"],[481,37,448,33],[481,38,448,34],[481,39,449,9,"then"],[481,43,449,13],[481,44,449,14],[481,56,449,20],[482,12,450,10,"resolve"],[482,19,450,17],[482,20,450,18],[482,21,450,19],[483,10,451,8],[483,11,451,9],[483,12,451,10],[483,13,452,9,"catch"],[483,18,452,14],[483,19,452,15,"reject"],[483,25,452,21],[483,26,452,22],[484,8,453,4],[484,9,453,5],[484,10,453,6],[485,6,454,2],[486,4,454,3],[487,6,454,3,"key"],[487,9,454,3],[488,6,454,3,"value"],[488,11,454,3],[488,13,455,2],[488,22,455,2,"signAllInputs"],[488,35,455,15,"signAllInputs"],[488,36,456,4,"keyPair"],[488,43,456,11],[488,45,458,4],[489,8,458,4],[489,12,457,4,"sighashTypes"],[489,24,457,16],[489,27,457,16,"arguments"],[489,36,457,16],[489,37,457,16,"length"],[489,43,457,16],[489,51,457,16,"arguments"],[489,60,457,16],[489,68,457,16,"undefined"],[489,77,457,16],[489,80,457,16,"arguments"],[489,89,457,16],[489,95,457,19],[489,96,457,20,"_$$_REQUIRE"],[489,107,457,20],[489,108,457,20,"_dependencyMap"],[489,122,457,20],[489,145,457,34,"Transaction"],[489,156,457,45],[489,157,457,46,"SIGHASH_ALL"],[489,168,457,57],[489,169,457,58],[490,8,459,4],[490,12,459,8],[490,13,459,9,"keyPair"],[490,20,459,16],[490,24,459,20],[490,25,459,21,"keyPair"],[490,32,459,28],[490,33,459,29,"publicKey"],[490,42,459,38],[490,44,460,6],[490,50,460,12],[490,54,460,16,"Error"],[490,59,460,21],[490,60,460,22],[490,87,460,49],[490,88,460,50],[491,8,461,4],[492,8,462,4],[493,8,463,4],[494,8,464,4],[494,12,464,10,"results"],[494,19,464,17],[494,22,464,20],[494,24,464,22],[495,8,465,4],[495,13,465,9],[495,17,465,15,"i"],[495,18,465,16],[495,22,465,20,"range"],[495,27,465,25],[495,28,465,26],[495,32,465,30],[495,33,465,31,"data"],[495,37,465,35],[495,38,465,36,"inputs"],[495,44,465,42],[495,45,465,43,"length"],[495,51,465,49],[495,52,465,50],[495,54,465,52],[496,10,466,6],[496,14,466,10],[497,12,467,8],[497,16,467,12],[497,17,467,13,"signInput"],[497,26,467,22],[497,27,467,23,"i"],[497,28,467,24],[497,30,467,26,"keyPair"],[497,37,467,33],[497,39,467,35,"sighashTypes"],[497,51,467,47],[497,52,467,48],[498,12,468,8,"results"],[498,19,468,15],[498,20,468,16,"push"],[498,24,468,20],[498,25,468,21],[498,29,468,25],[498,30,468,26],[499,10,469,6],[499,11,469,7],[499,12,469,8],[499,19,469,15,"err"],[499,22,469,18],[499,24,469,20],[500,12,470,8,"results"],[500,19,470,15],[500,20,470,16,"push"],[500,24,470,20],[500,25,470,21],[500,30,470,26],[500,31,470,27],[501,10,471,6],[502,8,472,4],[503,8,473,4],[503,12,473,8,"results"],[503,19,473,15],[503,20,473,16,"every"],[503,25,473,21],[503,26,473,22],[503,36,473,22,"v"],[503,37,473,23],[504,10,473,23],[504,17,473,27,"v"],[504,18,473,28],[504,23,473,33],[504,28,473,38],[505,8,473,38],[505,10,473,39],[505,12,473,41],[506,10,474,6],[506,16,474,12],[506,20,474,16,"Error"],[506,25,474,21],[506,26,474,22],[506,49,474,45],[506,50,474,46],[507,8,475,4],[508,8,476,4],[508,15,476,11],[508,19,476,15],[509,6,477,2],[510,4,477,3],[511,6,477,3,"key"],[511,9,477,3],[512,6,477,3,"value"],[512,11,477,3],[512,13,478,2],[512,22,478,2,"signAllInputsAsync"],[512,40,478,20,"signAllInputsAsync"],[512,41,479,4,"keyPair"],[512,48,479,11],[512,50,481,4],[513,8,481,4],[513,12,481,4,"_this9"],[513,18,481,4],[514,8,481,4],[514,12,480,4,"sighashTypes"],[514,24,480,16],[514,27,480,16,"arguments"],[514,36,480,16],[514,37,480,16,"length"],[514,43,480,16],[514,51,480,16,"arguments"],[514,60,480,16],[514,68,480,16,"undefined"],[514,77,480,16],[514,80,480,16,"arguments"],[514,89,480,16],[514,95,480,19],[514,96,480,20,"_$$_REQUIRE"],[514,107,480,20],[514,108,480,20,"_dependencyMap"],[514,122,480,20],[514,145,480,34,"Transaction"],[514,156,480,45],[514,157,480,46,"SIGHASH_ALL"],[514,168,480,57],[514,169,480,58],[515,8,482,4],[515,15,482,11],[515,19,482,15,"Promise"],[515,26,482,22],[515,27,482,23],[515,37,482,24,"resolve"],[515,44,482,31],[515,46,482,33,"reject"],[515,52,482,39],[515,54,482,44],[516,10,483,6],[516,14,483,10],[516,15,483,11,"keyPair"],[516,22,483,18],[516,26,483,22],[516,27,483,23,"keyPair"],[516,34,483,30],[516,35,483,31,"publicKey"],[516,44,483,40],[516,46,484,8],[516,53,484,15,"reject"],[516,59,484,21],[516,60,484,22],[516,64,484,26,"Error"],[516,69,484,31],[516,70,484,32],[516,97,484,59],[516,98,484,60],[516,99,484,61],[517,10,485,6],[518,10,486,6],[519,10,487,6],[520,10,488,6],[520,14,488,12,"results"],[520,21,488,19],[520,24,488,22],[520,26,488,24],[521,10,489,6],[521,14,489,12,"promises"],[521,22,489,20],[521,25,489,23],[521,27,489,25],[522,10,490,6],[522,19,490,6,"_ref2"],[522,24,490,6],[522,28,490,24,"_this9"],[522,34,490,28],[522,35,490,29,"data"],[522,39,490,33],[522,40,490,34,"inputs"],[522,46,490,40],[522,47,490,41,"entries"],[522,54,490,48],[522,55,490,49],[522,56,490,50],[522,58,490,52],[523,12,490,52],[523,16,490,52,"_ref3"],[523,21,490,52],[523,24,490,52,"_slicedToArray"],[523,38,490,52],[523,39,490,52,"_ref2"],[523,44,490,52],[524,12,490,52],[524,16,490,18,"i"],[524,17,490,19],[524,20,490,19,"_ref3"],[524,25,490,19],[525,12,491,8,"promises"],[525,20,491,16],[525,21,491,17,"push"],[525,25,491,21],[525,26,492,10,"_this9"],[525,32,492,14],[525,33,492,15,"signInputAsync"],[525,47,492,29],[525,48,492,30,"i"],[525,49,492,31],[525,51,492,33,"keyPair"],[525,58,492,40],[525,60,492,42,"sighashTypes"],[525,72,492,54],[525,73,492,55],[525,74,492,56,"then"],[525,78,492,60],[525,79,493,12],[525,91,493,18],[526,14,494,14,"results"],[526,21,494,21],[526,22,494,22,"push"],[526,26,494,26],[526,27,494,27],[526,31,494,31],[526,32,494,32],[527,12,495,12],[527,13,495,13],[527,15,496,12],[527,27,496,18],[528,14,497,14,"results"],[528,21,497,21],[528,22,497,22,"push"],[528,26,497,26],[528,27,497,27],[528,32,497,32],[528,33,497,33],[529,12,498,12],[529,13,499,10],[529,14,500,8],[529,15,500,9],[530,10,501,6],[531,10,502,6],[531,17,502,13,"Promise"],[531,24,502,20],[531,25,502,21,"all"],[531,28,502,24],[531,29,502,25,"promises"],[531,37,502,33],[531,38,502,34],[531,39,502,35,"then"],[531,43,502,39],[531,44,502,40],[531,56,502,46],[532,12,503,8],[532,16,503,12,"results"],[532,23,503,19],[532,24,503,20,"every"],[532,29,503,25],[532,30,503,26],[532,40,503,26,"v"],[532,41,503,27],[533,14,503,27],[533,21,503,31,"v"],[533,22,503,32],[533,27,503,37],[533,32,503,42],[534,12,503,42],[534,14,503,43],[534,16,503,45],[535,14,504,10],[535,21,504,17,"reject"],[535,27,504,23],[535,28,504,24],[535,32,504,28,"Error"],[535,37,504,33],[535,38,504,34],[535,61,504,57],[535,62,504,58],[535,63,504,59],[536,12,505,8],[537,12,506,8,"resolve"],[537,19,506,15],[537,20,506,16],[537,21,506,17],[538,10,507,6],[538,11,507,7],[538,12,507,8],[539,8,508,4],[539,9,508,5],[539,10,508,6],[540,6,509,2],[541,4,509,3],[542,6,509,3,"key"],[542,9,509,3],[543,6,509,3,"value"],[543,11,509,3],[543,13,510,2],[543,22,510,2,"signInput"],[543,31,510,11,"signInput"],[543,32,511,4,"inputIndex"],[543,42,511,14],[543,44,512,4,"keyPair"],[543,51,512,11],[543,53,514,4],[544,8,514,4],[544,12,513,4,"sighashTypes"],[544,24,513,16],[544,27,513,16,"arguments"],[544,36,513,16],[544,37,513,16,"length"],[544,43,513,16],[544,51,513,16,"arguments"],[544,60,513,16],[544,68,513,16,"undefined"],[544,77,513,16],[544,80,513,16,"arguments"],[544,89,513,16],[544,95,513,19],[544,96,513,20,"_$$_REQUIRE"],[544,107,513,20],[544,108,513,20,"_dependencyMap"],[544,122,513,20],[544,145,513,34,"Transaction"],[544,156,513,45],[544,157,513,46,"SIGHASH_ALL"],[544,168,513,57],[544,169,513,58],[545,8,515,4],[545,12,515,8],[545,13,515,9,"keyPair"],[545,20,515,16],[545,24,515,20],[545,25,515,21,"keyPair"],[545,32,515,28],[545,33,515,29,"publicKey"],[545,42,515,38],[545,44,516,6],[545,50,516,12],[545,54,516,16,"Error"],[545,59,516,21],[545,60,516,22],[545,87,516,49],[545,88,516,50],[546,8,517,4],[546,12,517,4,"_getHashAndSighashTyp"],[546,33,517,4],[546,36,517,34,"getHashAndSighashType"],[546,57,517,55],[546,58,518,6],[546,62,518,10],[546,63,518,11,"data"],[546,67,518,15],[546,68,518,16,"inputs"],[546,74,518,22],[546,76,519,6,"inputIndex"],[546,86,519,16],[546,88,520,6,"keyPair"],[546,95,520,13],[546,96,520,14,"publicKey"],[546,105,520,23],[546,107,521,6],[546,111,521,10],[546,112,521,11,"__CACHE"],[546,119,521,18],[546,121,522,6,"sighashTypes"],[546,133,523,4],[546,134,523,5],[547,10,517,12,"hash"],[547,14,517,16],[547,17,517,16,"_getHashAndSighashTyp"],[547,38,517,16],[547,39,517,12,"hash"],[547,43,517,16],[548,10,517,18,"sighashType"],[548,21,517,29],[548,24,517,29,"_getHashAndSighashTyp"],[548,45,517,29],[548,46,517,18,"sighashType"],[548,57,517,29],[549,8,524,4],[549,12,524,10,"partialSig"],[549,22,524,20],[549,25,524,23],[549,26,525,6],[550,10,526,8,"pubkey"],[550,16,526,14],[550,18,526,16,"keyPair"],[550,25,526,23],[550,26,526,24,"publicKey"],[550,35,526,33],[551,10,527,8,"signature"],[551,19,527,17],[551,21,527,19,"_$$_REQUIRE"],[551,32,527,19],[551,33,527,19,"_dependencyMap"],[551,47,527,19],[551,64,527,27,"signature"],[551,73,527,36],[551,74,527,37,"encode"],[551,80,527,43],[551,81,527,44,"keyPair"],[551,88,527,51],[551,89,527,52,"sign"],[551,93,527,56],[551,94,527,57,"hash"],[551,98,527,61],[551,99,527,62],[551,101,527,64,"sighashType"],[551,112,527,75],[552,8,528,6],[552,9,528,7],[552,10,529,5],[553,8,530,4],[553,12,530,8],[553,13,530,9,"data"],[553,17,530,13],[553,18,530,14,"updateInput"],[553,29,530,25],[553,30,530,26,"inputIndex"],[553,40,530,36],[553,42,530,38],[554,10,530,40,"partialSig"],[554,20,530,50],[554,22,530,40,"partialSig"],[555,8,530,51],[555,9,530,52],[555,10,530,53],[556,8,531,4],[556,15,531,11],[556,19,531,15],[557,6,532,2],[558,4,532,3],[559,6,532,3,"key"],[559,9,532,3],[560,6,532,3,"value"],[560,11,532,3],[560,13,533,2],[560,22,533,2,"signInputAsync"],[560,36,533,16,"signInputAsync"],[560,37,534,4,"inputIndex"],[560,47,534,14],[560,49,535,4,"keyPair"],[560,56,535,11],[560,58,537,4],[561,8,537,4],[561,12,537,4,"_this0"],[561,18,537,4],[562,8,537,4],[562,12,536,4,"sighashTypes"],[562,24,536,16],[562,27,536,16,"arguments"],[562,36,536,16],[562,37,536,16,"length"],[562,43,536,16],[562,51,536,16,"arguments"],[562,60,536,16],[562,68,536,16,"undefined"],[562,77,536,16],[562,80,536,16,"arguments"],[562,89,536,16],[562,95,536,19],[562,96,536,20,"_$$_REQUIRE"],[562,107,536,20],[562,108,536,20,"_dependencyMap"],[562,122,536,20],[562,145,536,34,"Transaction"],[562,156,536,45],[562,157,536,46,"SIGHASH_ALL"],[562,168,536,57],[562,169,536,58],[563,8,538,4],[563,15,538,11,"Promise"],[563,22,538,18],[563,23,538,19,"resolve"],[563,30,538,26],[563,31,538,27],[563,32,538,28],[563,33,538,29,"then"],[563,37,538,33],[563,38,538,34],[563,50,538,40],[564,10,539,6],[564,14,539,10],[564,15,539,11,"keyPair"],[564,22,539,18],[564,26,539,22],[564,27,539,23,"keyPair"],[564,34,539,30],[564,35,539,31,"publicKey"],[564,44,539,40],[564,46,540,8],[564,52,540,14],[564,56,540,18,"Error"],[564,61,540,23],[564,62,540,24],[564,89,540,51],[564,90,540,52],[565,10,541,6],[565,14,541,6,"_getHashAndSighashTyp2"],[565,36,541,6],[565,39,541,36,"getHashAndSighashType"],[565,60,541,57],[565,61,542,8,"_this0"],[565,67,542,12],[565,68,542,13,"data"],[565,72,542,17],[565,73,542,18,"inputs"],[565,79,542,24],[565,81,543,8,"inputIndex"],[565,91,543,18],[565,93,544,8,"keyPair"],[565,100,544,15],[565,101,544,16,"publicKey"],[565,110,544,25],[565,112,545,8,"_this0"],[565,118,545,12],[565,119,545,13,"__CACHE"],[565,126,545,20],[565,128,546,8,"sighashTypes"],[565,140,547,6],[565,141,547,7],[566,12,541,14,"hash"],[566,16,541,18],[566,19,541,18,"_getHashAndSighashTyp2"],[566,41,541,18],[566,42,541,14,"hash"],[566,46,541,18],[567,12,541,20,"sighashType"],[567,23,541,31],[567,26,541,31,"_getHashAndSighashTyp2"],[567,48,541,31],[567,49,541,20,"sighashType"],[567,60,541,31],[568,10,548,6],[568,17,548,13,"Promise"],[568,24,548,20],[568,25,548,21,"resolve"],[568,32,548,28],[568,33,548,29,"keyPair"],[568,40,548,36],[568,41,548,37,"sign"],[568,45,548,41],[568,46,548,42,"hash"],[568,50,548,46],[568,51,548,47],[568,52,548,48],[568,53,548,49,"then"],[568,57,548,53],[568,58,548,54],[568,68,548,54,"signature"],[568,77,548,63],[568,79,548,67],[569,12,549,8],[569,16,549,14,"partialSig"],[569,26,549,24],[569,29,549,27],[569,30,550,10],[570,14,551,12,"pubkey"],[570,20,551,18],[570,22,551,20,"keyPair"],[570,29,551,27],[570,30,551,28,"publicKey"],[570,39,551,37],[571,14,552,12,"signature"],[571,23,552,21],[571,25,552,23,"_$$_REQUIRE"],[571,36,552,23],[571,37,552,23,"_dependencyMap"],[571,51,552,23],[571,68,552,31,"signature"],[571,77,552,40],[571,78,552,41,"encode"],[571,84,552,47],[571,85,552,48,"signature"],[571,94,552,57],[571,96,552,59,"sighashType"],[571,107,552,70],[572,12,553,10],[572,13,553,11],[572,14,554,9],[573,12,555,8,"_this0"],[573,18,555,12],[573,19,555,13,"data"],[573,23,555,17],[573,24,555,18,"updateInput"],[573,35,555,29],[573,36,555,30,"inputIndex"],[573,46,555,40],[573,48,555,42],[574,14,555,44,"partialSig"],[574,24,555,54],[574,26,555,44,"partialSig"],[575,12,555,55],[575,13,555,56],[575,14,555,57],[576,10,556,6],[576,11,556,7],[576,12,556,8],[577,8,557,4],[577,9,557,5],[577,10,557,6],[578,6,558,2],[579,4,558,3],[580,6,558,3,"key"],[580,9,558,3],[581,6,558,3,"value"],[581,11,558,3],[581,13,559,2],[581,22,559,2,"toBuffer"],[581,30,559,10,"toBuffer"],[581,31,559,10],[581,33,559,13],[582,8,560,4,"checkCache"],[582,18,560,14],[582,19,560,15],[582,23,560,19],[582,24,560,20,"__CACHE"],[582,31,560,27],[582,32,560,28],[583,8,561,4],[583,15,561,11],[583,19,561,15],[583,20,561,16,"data"],[583,24,561,20],[583,25,561,21,"toBuffer"],[583,33,561,29],[583,34,561,30],[583,35,561,31],[584,6,562,2],[585,4,562,3],[586,6,562,3,"key"],[586,9,562,3],[587,6,562,3,"value"],[587,11,562,3],[587,13,563,2],[587,22,563,2,"toHex"],[587,27,563,7,"toHex"],[587,28,563,7],[587,30,563,10],[588,8,564,4,"checkCache"],[588,18,564,14],[588,19,564,15],[588,23,564,19],[588,24,564,20,"__CACHE"],[588,31,564,27],[588,32,564,28],[589,8,565,4],[589,15,565,11],[589,19,565,15],[589,20,565,16,"data"],[589,24,565,20],[589,25,565,21,"toHex"],[589,30,565,26],[589,31,565,27],[589,32,565,28],[590,6,566,2],[591,4,566,3],[592,6,566,3,"key"],[592,9,566,3],[593,6,566,3,"value"],[593,11,566,3],[593,13,567,2],[593,22,567,2,"toBase64"],[593,30,567,10,"toBase64"],[593,31,567,10],[593,33,567,13],[594,8,568,4,"checkCache"],[594,18,568,14],[594,19,568,15],[594,23,568,19],[594,24,568,20,"__CACHE"],[594,31,568,27],[594,32,568,28],[595,8,569,4],[595,15,569,11],[595,19,569,15],[595,20,569,16,"data"],[595,24,569,20],[595,25,569,21,"toBase64"],[595,33,569,29],[595,34,569,30],[595,35,569,31],[596,6,570,2],[597,4,570,3],[598,6,570,3,"key"],[598,9,570,3],[599,6,570,3,"value"],[599,11,570,3],[599,13,571,2],[599,22,571,2,"updateGlobal"],[599,34,571,14,"updateGlobal"],[599,35,571,15,"updateData"],[599,45,571,25],[599,47,571,27],[600,8,572,4],[600,12,572,8],[600,13,572,9,"data"],[600,17,572,13],[600,18,572,14,"updateGlobal"],[600,30,572,26],[600,31,572,27,"updateData"],[600,41,572,37],[600,42,572,38],[601,8,573,4],[601,15,573,11],[601,19,573,15],[602,6,574,2],[603,4,574,3],[604,6,574,3,"key"],[604,9,574,3],[605,6,574,3,"value"],[605,11,574,3],[605,13,575,2],[605,22,575,2,"updateInput"],[605,33,575,13,"updateInput"],[605,34,575,14,"inputIndex"],[605,44,575,24],[605,46,575,26,"updateData"],[605,56,575,36],[605,58,575,38],[606,8,576,4],[606,12,576,8,"updateData"],[606,22,576,18],[606,23,576,19,"witnessScript"],[606,36,576,32],[606,38,576,34,"checkInvalidP2WSH"],[606,55,576,51],[606,56,576,52,"updateData"],[606,66,576,62],[606,67,576,63,"witnessScript"],[606,80,576,76],[606,81,576,77],[607,8,577,4],[607,12,577,8],[607,13,577,9,"data"],[607,17,577,13],[607,18,577,14,"updateInput"],[607,29,577,25],[607,30,577,26,"inputIndex"],[607,40,577,36],[607,42,577,38,"updateData"],[607,52,577,48],[607,53,577,49],[608,8,578,4],[608,12,578,8,"updateData"],[608,22,578,18],[608,23,578,19,"nonWitnessUtxo"],[608,37,578,33],[608,39,578,35],[609,10,579,6,"addNonWitnessTxCache"],[609,30,579,26],[609,31,580,8],[609,35,580,12],[609,36,580,13,"__CACHE"],[609,43,580,20],[609,45,581,8],[609,49,581,12],[609,50,581,13,"data"],[609,54,581,17],[609,55,581,18,"inputs"],[609,61,581,24],[609,62,581,25,"inputIndex"],[609,72,581,35],[609,73,581,36],[609,75,582,8,"inputIndex"],[609,85,583,6],[609,86,583,7],[610,8,584,4],[611,8,585,4],[611,15,585,11],[611,19,585,15],[612,6,586,2],[613,4,586,3],[614,6,586,3,"key"],[614,9,586,3],[615,6,586,3,"value"],[615,11,586,3],[615,13,587,2],[615,22,587,2,"updateOutput"],[615,34,587,14,"updateOutput"],[615,35,587,15,"outputIndex"],[615,46,587,26],[615,48,587,28,"updateData"],[615,58,587,38],[615,60,587,40],[616,8,588,4],[616,12,588,8],[616,13,588,9,"data"],[616,17,588,13],[616,18,588,14,"updateOutput"],[616,30,588,26],[616,31,588,27,"outputIndex"],[616,42,588,38],[616,44,588,40,"updateData"],[616,54,588,50],[616,55,588,51],[617,8,589,4],[617,15,589,11],[617,19,589,15],[618,6,590,2],[619,4,590,3],[620,6,590,3,"key"],[620,9,590,3],[621,6,590,3,"value"],[621,11,590,3],[621,13,591,2],[621,22,591,2,"addUnknownKeyValToGlobal"],[621,46,591,26,"addUnknownKeyValToGlobal"],[621,47,591,27,"keyVal"],[621,53,591,33],[621,55,591,35],[622,8,592,4],[622,12,592,8],[622,13,592,9,"data"],[622,17,592,13],[622,18,592,14,"addUnknownKeyValToGlobal"],[622,42,592,38],[622,43,592,39,"keyVal"],[622,49,592,45],[622,50,592,46],[623,8,593,4],[623,15,593,11],[623,19,593,15],[624,6,594,2],[625,4,594,3],[626,6,594,3,"key"],[626,9,594,3],[627,6,594,3,"value"],[627,11,594,3],[627,13,595,2],[627,22,595,2,"addUnknownKeyValToInput"],[627,45,595,25,"addUnknownKeyValToInput"],[627,46,595,26,"inputIndex"],[627,56,595,36],[627,58,595,38,"keyVal"],[627,64,595,44],[627,66,595,46],[628,8,596,4],[628,12,596,8],[628,13,596,9,"data"],[628,17,596,13],[628,18,596,14,"addUnknownKeyValToInput"],[628,41,596,37],[628,42,596,38,"inputIndex"],[628,52,596,48],[628,54,596,50,"keyVal"],[628,60,596,56],[628,61,596,57],[629,8,597,4],[629,15,597,11],[629,19,597,15],[630,6,598,2],[631,4,598,3],[632,6,598,3,"key"],[632,9,598,3],[633,6,598,3,"value"],[633,11,598,3],[633,13,599,2],[633,22,599,2,"addUnknownKeyValToOutput"],[633,46,599,26,"addUnknownKeyValToOutput"],[633,47,599,27,"outputIndex"],[633,58,599,38],[633,60,599,40,"keyVal"],[633,66,599,46],[633,68,599,48],[634,8,600,4],[634,12,600,8],[634,13,600,9,"data"],[634,17,600,13],[634,18,600,14,"addUnknownKeyValToOutput"],[634,42,600,38],[634,43,600,39,"outputIndex"],[634,54,600,50],[634,56,600,52,"keyVal"],[634,62,600,58],[634,63,600,59],[635,8,601,4],[635,15,601,11],[635,19,601,15],[636,6,602,2],[637,4,602,3],[638,6,602,3,"key"],[638,9,602,3],[639,6,602,3,"value"],[639,11,602,3],[639,13,603,2],[639,22,603,2,"clearFinalizedInput"],[639,41,603,21,"clearFinalizedInput"],[639,42,603,22,"inputIndex"],[639,52,603,32],[639,54,603,34],[640,8,604,4],[640,12,604,8],[640,13,604,9,"data"],[640,17,604,13],[640,18,604,14,"clearFinalizedInput"],[640,37,604,33],[640,38,604,34,"inputIndex"],[640,48,604,44],[640,49,604,45],[641,8,605,4],[641,15,605,11],[641,19,605,15],[642,6,606,2],[643,4,606,3],[644,6,606,3,"key"],[644,9,606,3],[645,6,606,3,"value"],[645,11,606,3],[645,13,91,2],[645,22,91,9,"fromBase64"],[645,32,91,19,"fromBase64"],[645,33,91,20,"data"],[645,37,91,24],[645,39,91,37],[646,8,91,37],[646,12,91,26,"opts"],[646,16,91,30],[646,19,91,30,"arguments"],[646,28,91,30],[646,29,91,30,"length"],[646,35,91,30],[646,43,91,30,"arguments"],[646,52,91,30],[646,60,91,30,"undefined"],[646,69,91,30],[646,72,91,30,"arguments"],[646,81,91,30],[646,87,91,33],[646,88,91,34],[646,89,91,35],[647,8,92,4],[647,12,92,10,"buffer"],[647,18,92,16],[647,21,92,19,"Buffer"],[647,27,92,25],[647,28,92,26,"from"],[647,32,92,30],[647,33,92,31,"data"],[647,37,92,35],[647,39,92,37],[647,47,92,45],[647,48,92,46],[648,8,93,4],[648,15,93,11],[648,19,93,15],[648,20,93,16,"fromBuffer"],[648,30,93,26],[648,31,93,27,"buffer"],[648,37,93,33],[648,39,93,35,"opts"],[648,43,93,39],[648,44,93,40],[649,6,94,2],[650,4,94,3],[651,6,94,3,"key"],[651,9,94,3],[652,6,94,3,"value"],[652,11,94,3],[652,13,95,2],[652,22,95,9,"fromHex"],[652,29,95,16,"fromHex"],[652,30,95,17,"data"],[652,34,95,21],[652,36,95,34],[653,8,95,34],[653,12,95,23,"opts"],[653,16,95,27],[653,19,95,27,"arguments"],[653,28,95,27],[653,29,95,27,"length"],[653,35,95,27],[653,43,95,27,"arguments"],[653,52,95,27],[653,60,95,27,"undefined"],[653,69,95,27],[653,72,95,27,"arguments"],[653,81,95,27],[653,87,95,30],[653,88,95,31],[653,89,95,32],[654,8,96,4],[654,12,96,10,"buffer"],[654,18,96,16],[654,21,96,19,"Buffer"],[654,27,96,25],[654,28,96,26,"from"],[654,32,96,30],[654,33,96,31,"data"],[654,37,96,35],[654,39,96,37],[654,44,96,42],[654,45,96,43],[655,8,97,4],[655,15,97,11],[655,19,97,15],[655,20,97,16,"fromBuffer"],[655,30,97,26],[655,31,97,27,"buffer"],[655,37,97,33],[655,39,97,35,"opts"],[655,43,97,39],[655,44,97,40],[656,6,98,2],[657,4,98,3],[658,6,98,3,"key"],[658,9,98,3],[659,6,98,3,"value"],[659,11,98,3],[659,13,99,2],[659,22,99,9,"fromBuffer"],[659,32,99,19,"fromBuffer"],[659,33,99,20,"buffer"],[659,39,99,26],[659,41,99,39],[660,8,99,39],[660,12,99,28,"opts"],[660,16,99,32],[660,19,99,32,"arguments"],[660,28,99,32],[660,29,99,32,"length"],[660,35,99,32],[660,43,99,32,"arguments"],[660,52,99,32],[660,60,99,32,"undefined"],[660,69,99,32],[660,72,99,32,"arguments"],[660,81,99,32],[660,87,99,35],[660,88,99,36],[660,89,99,37],[661,8,100,4],[661,12,100,10,"psbtBase"],[661,20,100,18],[661,23,100,21,"_$$_REQUIRE"],[661,34,100,21],[661,35,100,21,"_dependencyMap"],[661,49,100,21],[661,64,100,30,"Psbt"],[661,68,100,34],[661,69,100,35,"fromBuffer"],[661,79,100,45],[661,80,100,46,"buffer"],[661,86,100,52],[661,88,100,54,"transactionFromBuffer"],[661,109,100,75],[661,110,100,76],[662,8,101,4],[662,12,101,10,"psbt"],[662,16,101,14],[662,19,101,17],[662,23,101,21,"Psbt"],[662,27,101,25],[662,28,101,26,"opts"],[662,32,101,30],[662,34,101,32,"psbtBase"],[662,42,101,40],[662,43,101,41],[663,8,102,4,"checkTxForDupeIns"],[663,25,102,21],[663,26,102,22,"psbt"],[663,30,102,26],[663,31,102,27,"__CACHE"],[663,38,102,34],[663,39,102,35,"__TX"],[663,43,102,39],[663,45,102,41,"psbt"],[663,49,102,45],[663,50,102,46,"__CACHE"],[663,57,102,53],[663,58,102,54],[664,8,103,4],[664,15,103,11,"psbt"],[664,19,103,15],[665,6,104,2],[666,4,104,3],[667,2,104,3],[668,2,608,0,"exports"],[668,9,608,7],[668,10,608,8,"Psbt"],[668,14,608,12],[668,17,608,15,"Psbt"],[668,21,608,19],[669,2,609,0],[670,0,610,0],[671,0,611,0],[672,0,612,0],[673,0,613,0],[674,2,614,0],[674,6,614,6,"transactionFromBuffer"],[674,27,614,27],[674,30,614,30],[674,39,614,6,"transactionFromBuffer"],[674,60,614,27,"transactionFromBuffer"],[674,61,614,30,"buffer"],[674,67,614,36],[675,4,614,36],[675,11,614,40],[675,15,614,44,"PsbtTransaction"],[675,30,614,59],[675,31,614,60,"buffer"],[675,37,614,66],[675,38,614,67],[676,2,614,67],[677,2,615,0],[678,0,616,0],[679,0,617,0],[680,0,618,0],[681,2,615,0],[681,6,619,6,"PsbtTransaction"],[681,21,619,21],[682,4,620,2],[682,13,620,2,"PsbtTransaction"],[682,29,620,2],[682,31,620,68],[683,6,620,68],[683,10,620,14,"buffer"],[683,16,620,20],[683,19,620,20,"arguments"],[683,28,620,20],[683,29,620,20,"length"],[683,35,620,20],[683,43,620,20,"arguments"],[683,52,620,20],[683,60,620,20,"undefined"],[683,69,620,20],[683,72,620,20,"arguments"],[683,81,620,20],[683,87,620,23,"Buffer"],[683,93,620,29],[683,94,620,30,"from"],[683,98,620,34],[683,99,620,35],[683,100,620,36],[683,101,620,37],[683,103,620,39],[683,104,620,40],[683,106,620,42],[683,107,620,43],[683,109,620,45],[683,110,620,46],[683,112,620,48],[683,113,620,49],[683,115,620,51],[683,116,620,52],[683,118,620,54],[683,119,620,55],[683,121,620,57],[683,122,620,58],[683,124,620,60],[683,125,620,61],[683,127,620,63],[683,128,620,64],[683,129,620,65],[683,130,620,66],[684,6,620,66,"_classCallCheck"],[684,21,620,66],[684,28,620,66,"PsbtTransaction"],[684,43,620,66],[685,6,621,4],[685,10,621,8],[685,11,621,9,"tx"],[685,13,621,11],[685,16,621,14,"_$$_REQUIRE"],[685,27,621,14],[685,28,621,14,"_dependencyMap"],[685,42,621,14],[685,65,621,28,"Transaction"],[685,76,621,39],[685,77,621,40,"fromBuffer"],[685,87,621,50],[685,88,621,51,"buffer"],[685,94,621,57],[685,95,621,58],[686,6,622,4,"checkTxEmpty"],[686,18,622,16],[686,19,622,17],[686,23,622,21],[686,24,622,22,"tx"],[686,26,622,24],[686,27,622,25],[687,6,623,4,"Object"],[687,12,623,10],[687,13,623,11,"defineProperty"],[687,27,623,25],[687,28,623,26],[687,32,623,30],[687,34,623,32],[687,38,623,36],[687,40,623,38],[688,8,624,6,"enumerable"],[688,18,624,16],[688,20,624,18],[688,25,624,23],[689,8,625,6,"writable"],[689,16,625,14],[689,18,625,16],[690,6,626,4],[690,7,626,5],[690,8,626,6],[691,4,627,2],[692,4,627,3],[692,11,627,3,"_createClass"],[692,23,627,3],[692,24,627,3,"PsbtTransaction"],[692,39,627,3],[693,6,627,3,"key"],[693,9,627,3],[694,6,627,3,"value"],[694,11,627,3],[694,13,628,2],[694,22,628,2,"getInputOutputCounts"],[694,42,628,22,"getInputOutputCounts"],[694,43,628,22],[694,45,628,25],[695,8,629,4],[695,15,629,11],[696,10,630,6,"inputCount"],[696,20,630,16],[696,22,630,18],[696,26,630,22],[696,27,630,23,"tx"],[696,29,630,25],[696,30,630,26,"ins"],[696,33,630,29],[696,34,630,30,"length"],[696,40,630,36],[697,10,631,6,"outputCount"],[697,21,631,17],[697,23,631,19],[697,27,631,23],[697,28,631,24,"tx"],[697,30,631,26],[697,31,631,27,"outs"],[697,35,631,31],[697,36,631,32,"length"],[698,8,632,4],[698,9,632,5],[699,6,633,2],[700,4,633,3],[701,6,633,3,"key"],[701,9,633,3],[702,6,633,3,"value"],[702,11,633,3],[702,13,634,2],[702,22,634,2,"addInput"],[702,30,634,10,"addInput"],[702,31,634,11,"input"],[702,36,634,16],[702,38,634,18],[703,8,635,4],[703,12,636,6,"input"],[703,17,636,11],[703,18,636,12,"hash"],[703,22,636,16],[703,27,636,21,"undefined"],[703,36,636,30],[703,40,637,6,"input"],[703,45,637,11],[703,46,637,12,"index"],[703,51,637,17],[703,56,637,22,"undefined"],[703,65,637,31],[703,69,638,7],[703,70,638,8,"Buffer"],[703,76,638,14],[703,77,638,15,"isBuffer"],[703,85,638,23],[703,86,638,24,"input"],[703,91,638,29],[703,92,638,30,"hash"],[703,96,638,34],[703,97,638,35],[703,101,638,39],[703,108,638,46,"input"],[703,113,638,51],[703,114,638,52,"hash"],[703,118,638,56],[703,123,638,61],[703,131,638,70],[703,135,639,6],[703,142,639,13,"input"],[703,147,639,18],[703,148,639,19,"index"],[703,153,639,24],[703,158,639,29],[703,166,639,37],[703,168,640,6],[704,10,641,6],[704,16,641,12],[704,20,641,16,"Error"],[704,25,641,21],[704,26,641,22],[704,47,641,43],[704,48,641,44],[705,8,642,4],[706,8,643,4],[706,12,643,10,"hash"],[706,16,643,14],[706,19,644,6],[706,26,644,13,"input"],[706,31,644,18],[706,32,644,19,"hash"],[706,36,644,23],[706,41,644,28],[706,49,644,36],[706,52,645,10,"_$$_REQUIRE"],[706,63,645,10],[706,64,645,10,"_dependencyMap"],[706,78,645,10],[706,100,645,24,"reverseBuffer"],[706,113,645,37],[706,114,645,38,"Buffer"],[706,120,645,44],[706,121,645,45,"from"],[706,125,645,49],[706,126,645,50,"input"],[706,131,645,55],[706,132,645,56,"hash"],[706,136,645,60],[706,138,645,62],[706,143,645,67],[706,144,645,68],[706,145,645,69],[706,148,646,10,"input"],[706,153,646,15],[706,154,646,16,"hash"],[706,158,646,20],[707,8,647,4],[707,12,647,8],[707,13,647,9,"tx"],[707,15,647,11],[707,16,647,12,"addInput"],[707,24,647,20],[707,25,647,21,"hash"],[707,29,647,25],[707,31,647,27,"input"],[707,36,647,32],[707,37,647,33,"index"],[707,42,647,38],[707,44,647,40,"input"],[707,49,647,45],[707,50,647,46,"sequence"],[707,58,647,54],[707,59,647,55],[708,6,648,2],[709,4,648,3],[710,6,648,3,"key"],[710,9,648,3],[711,6,648,3,"value"],[711,11,648,3],[711,13,649,2],[711,22,649,2,"addOutput"],[711,31,649,11,"addOutput"],[711,32,649,12,"output"],[711,38,649,18],[711,40,649,20],[712,8,650,4],[712,12,651,6,"output"],[712,18,651,12],[712,19,651,13,"script"],[712,25,651,19],[712,30,651,24,"undefined"],[712,39,651,33],[712,43,652,6,"output"],[712,49,652,12],[712,50,652,13,"value"],[712,55,652,18],[712,60,652,23,"undefined"],[712,69,652,32],[712,73,653,6],[712,74,653,7,"Buffer"],[712,80,653,13],[712,81,653,14,"isBuffer"],[712,89,653,22],[712,90,653,23,"output"],[712,96,653,29],[712,97,653,30,"script"],[712,103,653,36],[712,104,653,37],[712,108,654,6],[712,115,654,13,"output"],[712,121,654,19],[712,122,654,20,"value"],[712,127,654,25],[712,132,654,30],[712,140,654,38],[712,142,655,6],[713,10,656,6],[713,16,656,12],[713,20,656,16,"Error"],[713,25,656,21],[713,26,656,22],[713,48,656,44],[713,49,656,45],[714,8,657,4],[715,8,658,4],[715,12,658,8],[715,13,658,9,"tx"],[715,15,658,11],[715,16,658,12,"addOutput"],[715,25,658,21],[715,26,658,22,"output"],[715,32,658,28],[715,33,658,29,"script"],[715,39,658,35],[715,41,658,37,"output"],[715,47,658,43],[715,48,658,44,"value"],[715,53,658,49],[715,54,658,50],[716,6,659,2],[717,4,659,3],[718,6,659,3,"key"],[718,9,659,3],[719,6,659,3,"value"],[719,11,659,3],[719,13,660,2],[719,22,660,2,"toBuffer"],[719,30,660,10,"toBuffer"],[719,31,660,10],[719,33,660,13],[720,8,661,4],[720,15,661,11],[720,19,661,15],[720,20,661,16,"tx"],[720,22,661,18],[720,23,661,19,"toBuffer"],[720,31,661,27],[720,32,661,28],[720,33,661,29],[721,6,662,2],[722,4,662,3],[723,2,662,3],[724,2,664,0],[724,11,664,9,"canFinalize"],[724,22,664,20,"canFinalize"],[724,23,664,21,"input"],[724,28,664,26],[724,30,664,28,"script"],[724,36,664,34],[724,38,664,36,"scriptType"],[724,48,664,46],[724,50,664,48],[725,4,665,2],[725,12,665,10,"scriptType"],[725,22,665,20],[726,6,666,4],[726,11,666,9],[726,19,666,17],[727,6,667,4],[727,11,667,9],[727,23,667,21],[728,6,668,4],[728,11,668,9],[728,30,668,28],[729,8,669,6],[729,15,669,13,"hasSigs"],[729,22,669,20],[729,23,669,21],[729,24,669,22],[729,26,669,24,"input"],[729,31,669,29],[729,32,669,30,"partialSig"],[729,42,669,40],[729,43,669,41],[730,6,670,4],[730,11,670,9],[730,21,670,19],[731,8,671,6],[731,12,671,12,"p2ms"],[731,16,671,16],[731,19,671,19,"_$$_REQUIRE"],[731,30,671,19],[731,31,671,19,"_dependencyMap"],[731,45,671,19],[731,65,671,28,"p2ms"],[731,69,671,32],[731,70,671,33],[732,10,671,35,"output"],[732,16,671,41],[732,18,671,43,"script"],[733,8,671,50],[733,9,671,51],[733,10,671,52],[734,8,672,6],[734,15,672,13,"hasSigs"],[734,22,672,20],[734,23,672,21,"p2ms"],[734,27,672,25],[734,28,672,26,"m"],[734,29,672,27],[734,31,672,29,"input"],[734,36,672,34],[734,37,672,35,"partialSig"],[734,47,672,45],[734,49,672,47,"p2ms"],[734,53,672,51],[734,54,672,52,"pubkeys"],[734,61,672,59],[734,62,672,60],[735,6,673,4],[736,8,674,6],[736,15,674,13],[736,20,674,18],[737,4,675,2],[738,2,676,0],[739,2,677,0],[739,11,677,9,"checkCache"],[739,21,677,19,"checkCache"],[739,22,677,20,"cache"],[739,27,677,25],[739,29,677,27],[740,4,678,2],[740,8,678,6,"cache"],[740,13,678,11],[740,14,678,12,"__UNSAFE_SIGN_NONSEGWIT"],[740,37,678,35],[740,42,678,40],[740,47,678,45],[740,49,678,47],[741,6,679,4],[741,12,679,10],[741,16,679,14,"Error"],[741,21,679,19],[741,22,679,20],[741,60,679,58],[741,61,679,59],[742,4,680,2],[743,2,681,0],[744,2,682,0],[744,11,682,9,"hasSigs"],[744,18,682,16,"hasSigs"],[744,19,682,17,"neededSigs"],[744,29,682,27],[744,31,682,29,"partialSig"],[744,41,682,39],[744,43,682,41,"pubkeys"],[744,50,682,48],[744,52,682,50],[745,4,683,2],[745,8,683,6],[745,9,683,7,"partialSig"],[745,19,683,17],[745,21,683,19],[745,28,683,26],[745,33,683,31],[746,4,684,2],[746,8,684,6,"sigs"],[746,12,684,10],[747,4,685,2],[747,8,685,6,"pubkeys"],[747,15,685,13],[747,17,685,15],[748,6,686,4,"sigs"],[748,10,686,8],[748,13,686,11,"pubkeys"],[748,20,686,18],[748,21,687,7,"map"],[748,24,687,10],[748,25,687,11],[748,35,687,11,"pkey"],[748,39,687,15],[748,41,687,19],[749,8,688,8],[749,12,688,14,"pubkey"],[749,18,688,20],[749,21,688,23,"_$$_REQUIRE"],[749,32,688,23],[749,33,688,23,"_dependencyMap"],[749,47,688,23],[749,65,688,32,"fromPublicKey"],[749,78,688,45],[749,79,688,46,"pkey"],[749,83,688,50],[749,85,688,52],[750,10,688,54,"compressed"],[750,20,688,64],[750,22,688,66],[751,8,688,71],[751,9,688,72],[751,10,688,73],[751,11,689,11,"publicKey"],[751,20,689,20],[752,8,690,8],[752,15,690,15,"partialSig"],[752,25,690,25],[752,26,690,26,"find"],[752,30,690,30],[752,31,690,31],[752,41,690,31,"pSig"],[752,45,690,35],[753,10,690,35],[753,17,690,39,"pSig"],[753,21,690,43],[753,22,690,44,"pubkey"],[753,28,690,50],[753,29,690,51,"equals"],[753,35,690,57],[753,36,690,58,"pubkey"],[753,42,690,64],[753,43,690,65],[754,8,690,65],[754,10,690,66],[755,6,691,6],[755,7,691,7],[755,8,691,8],[755,9,692,7,"filter"],[755,15,692,13],[755,16,692,14],[755,26,692,14,"v"],[755,27,692,15],[756,8,692,15],[756,15,692,19],[756,16,692,20],[756,17,692,21,"v"],[756,18,692,22],[757,6,692,22],[757,8,692,23],[758,4,693,2],[758,5,693,3],[758,11,693,9],[759,6,694,4,"sigs"],[759,10,694,8],[759,13,694,11,"partialSig"],[759,23,694,21],[760,4,695,2],[761,4,696,2],[761,8,696,6,"sigs"],[761,12,696,10],[761,13,696,11,"length"],[761,19,696,17],[761,22,696,20,"neededSigs"],[761,32,696,30],[761,34,696,32],[761,40,696,38],[761,44,696,42,"Error"],[761,49,696,47],[761,50,696,48],[761,71,696,69],[761,72,696,70],[762,4,697,2],[762,11,697,9,"sigs"],[762,15,697,13],[762,16,697,14,"length"],[762,22,697,20],[762,27,697,25,"neededSigs"],[762,37,697,35],[763,2,698,0],[764,2,699,0],[764,11,699,9,"isFinalized"],[764,22,699,20,"isFinalized"],[764,23,699,21,"input"],[764,28,699,26],[764,30,699,28],[765,4,700,2],[765,11,700,9],[765,12,700,10],[765,13,700,11,"input"],[765,18,700,16],[765,19,700,17,"finalScriptSig"],[765,33,700,31],[765,37,700,35],[765,38,700,36],[765,39,700,37,"input"],[765,44,700,42],[765,45,700,43,"finalScriptWitness"],[765,63,700,61],[766,2,701,0],[767,2,702,0],[767,11,702,9,"isPaymentFactory"],[767,27,702,25,"isPaymentFactory"],[767,28,702,26,"payment"],[767,35,702,33],[767,37,702,35],[768,4,703,2],[768,11,703,9],[768,21,703,9,"script"],[768,27,703,15],[768,29,703,19],[769,6,704,4],[769,10,704,8],[770,8,705,6,"payment"],[770,15,705,13],[770,16,705,14],[771,10,705,16,"output"],[771,16,705,22],[771,18,705,24,"script"],[772,8,705,31],[772,9,705,32],[772,10,705,33],[773,8,706,6],[773,15,706,13],[773,19,706,17],[774,6,707,4],[774,7,707,5],[774,8,707,6],[774,15,707,13,"err"],[774,18,707,16],[774,20,707,18],[775,8,708,6],[775,15,708,13],[775,20,708,18],[776,6,709,4],[777,4,710,2],[777,5,710,3],[778,2,711,0],[779,2,712,0],[779,6,712,6,"isP2MS"],[779,12,712,12],[779,15,712,15,"isPaymentFactory"],[779,31,712,31],[779,32,712,32,"_$$_REQUIRE"],[779,43,712,32],[779,44,712,32,"_dependencyMap"],[779,58,712,32],[779,78,712,41,"p2ms"],[779,82,712,45],[779,83,712,46],[780,2,713,0],[780,6,713,6,"isP2PK"],[780,12,713,12],[780,15,713,15,"isPaymentFactory"],[780,31,713,31],[780,32,713,32,"_$$_REQUIRE"],[780,43,713,32],[780,44,713,32,"_dependencyMap"],[780,58,713,32],[780,78,713,41,"p2pk"],[780,82,713,45],[780,83,713,46],[781,2,714,0],[781,6,714,6,"isP2PKH"],[781,13,714,13],[781,16,714,16,"isPaymentFactory"],[781,32,714,32],[781,33,714,33,"_$$_REQUIRE"],[781,44,714,33],[781,45,714,33,"_dependencyMap"],[781,59,714,33],[781,79,714,42,"p2pkh"],[781,84,714,47],[781,85,714,48],[782,2,715,0],[782,6,715,6,"isP2WPKH"],[782,14,715,14],[782,17,715,17,"isPaymentFactory"],[782,33,715,33],[782,34,715,34,"_$$_REQUIRE"],[782,45,715,34],[782,46,715,34,"_dependencyMap"],[782,60,715,34],[782,80,715,43,"p2wpkh"],[782,86,715,49],[782,87,715,50],[783,2,716,0],[783,6,716,6,"isP2WSHScript"],[783,19,716,19],[783,22,716,22,"isPaymentFactory"],[783,38,716,38],[783,39,716,39,"_$$_REQUIRE"],[783,50,716,39],[783,51,716,39,"_dependencyMap"],[783,65,716,39],[783,85,716,48,"p2wsh"],[783,90,716,53],[783,91,716,54],[784,2,717,0],[784,6,717,6,"isP2SHScript"],[784,18,717,18],[784,21,717,21,"isPaymentFactory"],[784,37,717,37],[784,38,717,38,"_$$_REQUIRE"],[784,49,717,38],[784,50,717,38,"_dependencyMap"],[784,64,717,38],[784,84,717,47,"p2sh"],[784,88,717,51],[784,89,717,52],[785,2,718,0],[785,11,718,9,"bip32DerivationIsMine"],[785,32,718,30,"bip32DerivationIsMine"],[785,33,718,31,"root"],[785,37,718,35],[785,39,718,37],[786,4,719,2],[786,11,719,9],[786,21,719,9,"d"],[786,22,719,10],[786,24,719,14],[787,6,720,4],[787,10,720,8],[787,11,720,9,"d"],[787,12,720,10],[787,13,720,11,"masterFingerprint"],[787,30,720,28],[787,31,720,29,"equals"],[787,37,720,35],[787,38,720,36,"root"],[787,42,720,40],[787,43,720,41,"fingerprint"],[787,54,720,52],[787,55,720,53],[787,57,720,55],[787,64,720,62],[787,69,720,67],[788,6,721,4],[788,10,721,8],[788,11,721,9,"root"],[788,15,721,13],[788,16,721,14,"derivePath"],[788,26,721,24],[788,27,721,25,"d"],[788,28,721,26],[788,29,721,27,"path"],[788,33,721,31],[788,34,721,32],[788,35,721,33,"publicKey"],[788,44,721,42],[788,45,721,43,"equals"],[788,51,721,49],[788,52,721,50,"d"],[788,53,721,51],[788,54,721,52,"pubkey"],[788,60,721,58],[788,61,721,59],[788,63,721,61],[788,70,721,68],[788,75,721,73],[789,6,722,4],[789,13,722,11],[789,17,722,15],[790,4,723,2],[790,5,723,3],[791,2,724,0],[792,2,725,0],[792,11,725,9,"check32Bit"],[792,21,725,19,"check32Bit"],[792,22,725,20,"num"],[792,25,725,23],[792,27,725,25],[793,4,726,2],[793,8,727,4],[793,15,727,11,"num"],[793,18,727,14],[793,23,727,19],[793,31,727,27],[793,35,728,4,"num"],[793,38,728,7],[793,43,728,12,"Math"],[793,47,728,16],[793,48,728,17,"floor"],[793,53,728,22],[793,54,728,23,"num"],[793,57,728,26],[793,58,728,27],[793,62,729,4,"num"],[793,65,729,7],[793,68,729,10],[793,78,729,20],[793,82,730,4,"num"],[793,85,730,7],[793,88,730,10],[793,89,730,11],[793,91,731,4],[794,6,732,4],[794,12,732,10],[794,16,732,14,"Error"],[794,21,732,19],[794,22,732,20],[794,46,732,44],[794,47,732,45],[795,4,733,2],[796,2,734,0],[797,2,735,0],[797,11,735,9,"checkFees"],[797,20,735,18,"checkFees"],[797,21,735,19,"psbt"],[797,25,735,23],[797,27,735,25,"cache"],[797,32,735,30],[797,34,735,32,"opts"],[797,38,735,36],[797,40,735,38],[798,4,736,2],[798,8,736,8,"feeRate"],[798,15,736,15],[798,18,736,18,"cache"],[798,23,736,23],[798,24,736,24,"__FEE_RATE"],[798,34,736,34],[798,38,736,38,"psbt"],[798,42,736,42],[798,43,736,43,"getFeeRate"],[798,53,736,53],[798,54,736,54],[798,55,736,55],[799,4,737,2],[799,8,737,8,"vsize"],[799,13,737,13],[799,16,737,16,"cache"],[799,21,737,21],[799,22,737,22,"__EXTRACTED_TX"],[799,36,737,36],[799,37,737,37,"virtualSize"],[799,48,737,48],[799,49,737,49],[799,50,737,50],[800,4,738,2],[800,8,738,8,"satoshis"],[800,16,738,16],[800,19,738,19,"feeRate"],[800,26,738,26],[800,29,738,29,"vsize"],[800,34,738,34],[801,4,739,2],[801,8,739,6,"feeRate"],[801,15,739,13],[801,19,739,17,"opts"],[801,23,739,21],[801,24,739,22,"maximumFeeRate"],[801,38,739,36],[801,40,739,38],[802,6,740,4],[802,12,740,10],[802,16,740,14,"Error"],[802,21,740,19],[802,22,741,6],[802,56,741,40],[802,57,741,41,"satoshis"],[802,65,741,49],[802,68,741,52],[802,71,741,55],[802,73,741,57,"toFixed"],[802,80,741,64],[802,81,741,65],[802,82,741,66],[802,83,741,67],[802,89,741,73],[802,92,742,8],[802,110,742,26,"feeRate"],[802,117,742,33],[802,155,742,71],[802,158,743,8],[802,177,743,27,"vsize"],[802,182,743,32],[802,224,743,74],[802,227,744,8],[802,293,744,74],[802,296,745,8],[802,347,746,4],[802,348,746,5],[803,4,747,2],[804,2,748,0],[805,2,749,0],[805,11,749,9,"checkInputsForPartialSig"],[805,35,749,33,"checkInputsForPartialSig"],[805,36,749,34,"inputs"],[805,42,749,40],[805,44,749,42,"action"],[805,50,749,48],[805,52,749,50],[806,4,750,2,"inputs"],[806,10,750,8],[806,11,750,9,"forEach"],[806,18,750,16],[806,19,750,17],[806,29,750,17,"input"],[806,34,750,22],[806,36,750,26],[807,6,751,4],[807,10,751,8,"throws"],[807,16,751,14],[807,19,751,17],[807,24,751,22],[808,6,752,4],[808,10,752,8,"pSigs"],[808,15,752,13],[808,18,752,16],[808,20,752,18],[809,6,753,4],[809,10,753,8],[809,11,753,9,"input"],[809,16,753,14],[809,17,753,15,"partialSig"],[809,27,753,25],[809,31,753,29],[809,33,753,31],[809,35,753,33,"length"],[809,41,753,39],[809,46,753,44],[809,47,753,45],[809,49,753,47],[810,8,754,6],[810,12,754,10],[810,13,754,11,"input"],[810,18,754,16],[810,19,754,17,"finalScriptSig"],[810,33,754,31],[810,37,754,35],[810,38,754,36,"input"],[810,43,754,41],[810,44,754,42,"finalScriptWitness"],[810,62,754,60],[810,64,754,62],[811,8,755,6,"pSigs"],[811,13,755,11],[811,16,755,14,"getPsigsFromInputFinalScripts"],[811,45,755,43],[811,46,755,44,"input"],[811,51,755,49],[811,52,755,50],[812,6,756,4],[812,7,756,5],[812,13,756,11],[813,8,757,6,"pSigs"],[813,13,757,11],[813,16,757,14,"input"],[813,21,757,19],[813,22,757,20,"partialSig"],[813,32,757,30],[814,6,758,4],[815,6,759,4,"pSigs"],[815,11,759,9],[815,12,759,10,"forEach"],[815,19,759,17],[815,20,759,18],[815,30,759,18,"pSig"],[815,34,759,22],[815,36,759,26],[816,8,760,6],[816,12,760,6,"_bscript$signature$de"],[816,33,760,6],[816,36,760,27,"_$$_REQUIRE"],[816,47,760,27],[816,48,760,27,"_dependencyMap"],[816,62,760,27],[816,79,760,35,"signature"],[816,88,760,44],[816,89,760,45,"decode"],[816,95,760,51],[816,96,760,52,"pSig"],[816,100,760,56],[816,101,760,57,"signature"],[816,110,760,66],[816,111,760,67],[817,10,760,14,"hashType"],[817,18,760,22],[817,21,760,22,"_bscript$signature$de"],[817,42,760,22],[817,43,760,14,"hashType"],[817,51,760,22],[818,8,761,6],[818,12,761,12,"whitelist"],[818,21,761,21],[818,24,761,24],[818,26,761,26],[819,8,762,6],[819,12,762,12,"isAnyoneCanPay"],[819,26,762,26],[819,29,763,8,"hashType"],[819,37,763,16],[819,40,763,19,"_$$_REQUIRE"],[819,51,763,19],[819,52,763,19,"_dependencyMap"],[819,66,763,19],[819,89,763,33,"Transaction"],[819,100,763,44],[819,101,763,45,"SIGHASH_ANYONECANPAY"],[819,121,763,65],[820,8,764,6],[820,12,764,10,"isAnyoneCanPay"],[820,26,764,24],[820,28,764,26,"whitelist"],[820,37,764,35],[820,38,764,36,"push"],[820,42,764,40],[820,43,764,41],[820,53,764,51],[820,54,764,52],[821,8,765,6],[821,12,765,12,"hashMod"],[821,19,765,19],[821,22,765,22,"hashType"],[821,30,765,30],[821,33,765,33],[821,37,765,37],[822,8,766,6],[822,16,766,14,"hashMod"],[822,23,766,21],[823,10,767,8],[823,15,767,13,"_$$_REQUIRE"],[823,26,767,13],[823,27,767,13,"_dependencyMap"],[823,41,767,13],[823,64,767,27,"Transaction"],[823,75,767,38],[823,76,767,39,"SIGHASH_ALL"],[823,87,767,50],[824,12,768,10],[825,10,769,8],[825,15,769,13,"_$$_REQUIRE"],[825,26,769,13],[825,27,769,13,"_dependencyMap"],[825,41,769,13],[825,64,769,27,"Transaction"],[825,75,769,38],[825,76,769,39,"SIGHASH_SINGLE"],[825,90,769,53],[826,10,770,8],[826,15,770,13,"_$$_REQUIRE"],[826,26,770,13],[826,27,770,13,"_dependencyMap"],[826,41,770,13],[826,64,770,27,"Transaction"],[826,75,770,38],[826,76,770,39,"SIGHASH_NONE"],[826,88,770,51],[827,12,771,10,"whitelist"],[827,21,771,19],[827,22,771,20,"push"],[827,26,771,24],[827,27,771,25],[827,38,771,36],[827,39,771,37],[828,12,772,10,"whitelist"],[828,21,772,19],[828,22,772,20,"push"],[828,26,772,24],[828,27,772,25],[828,45,772,43],[828,46,772,44],[829,12,773,10],[830,8,774,6],[831,8,775,6],[831,12,775,10,"whitelist"],[831,21,775,19],[831,22,775,20,"indexOf"],[831,29,775,27],[831,30,775,28,"action"],[831,36,775,34],[831,37,775,35],[831,42,775,40],[831,43,775,41],[831,44,775,42],[831,46,775,44],[832,10,776,8,"throws"],[832,16,776,14],[832,19,776,17],[832,23,776,21],[833,8,777,6],[834,6,778,4],[834,7,778,5],[834,8,778,6],[835,6,779,4],[835,10,779,8,"throws"],[835,16,779,14],[835,18,779,16],[836,8,780,6],[836,14,780,12],[836,18,780,16,"Error"],[836,23,780,21],[836,24,780,22],[836,71,780,69],[836,72,780,70],[837,6,781,4],[838,4,782,2],[838,5,782,3],[838,6,782,4],[839,2,783,0],[840,2,784,0],[840,11,784,9,"checkPartialSigSighashes"],[840,35,784,33,"checkPartialSigSighashes"],[840,36,784,34,"input"],[840,41,784,39],[840,43,784,41],[841,4,785,2],[841,8,785,6],[841,9,785,7,"input"],[841,14,785,12],[841,15,785,13,"sighashType"],[841,26,785,24],[841,30,785,28],[841,31,785,29,"input"],[841,36,785,34],[841,37,785,35,"partialSig"],[841,47,785,45],[841,49,785,47],[842,4,786,2],[842,8,786,10,"partialSig"],[842,18,786,20],[842,21,786,38,"input"],[842,26,786,43],[842,27,786,10,"partialSig"],[842,37,786,20],[843,6,786,22,"sighashType"],[843,17,786,33],[843,20,786,38,"input"],[843,25,786,43],[843,26,786,22,"sighashType"],[843,37,786,33],[844,4,787,2,"partialSig"],[844,14,787,12],[844,15,787,13,"forEach"],[844,22,787,20],[844,23,787,21],[844,33,787,21,"pSig"],[844,37,787,25],[844,39,787,29],[845,6,788,4],[845,10,788,4,"_bscript$signature$de2"],[845,32,788,4],[845,35,788,25,"_$$_REQUIRE"],[845,46,788,25],[845,47,788,25,"_dependencyMap"],[845,61,788,25],[845,78,788,33,"signature"],[845,87,788,42],[845,88,788,43,"decode"],[845,94,788,49],[845,95,788,50,"pSig"],[845,99,788,54],[845,100,788,55,"signature"],[845,109,788,64],[845,110,788,65],[846,8,788,12,"hashType"],[846,16,788,20],[846,19,788,20,"_bscript$signature$de2"],[846,41,788,20],[846,42,788,12,"hashType"],[846,50,788,20],[847,6,789,4],[847,10,789,8,"sighashType"],[847,21,789,19],[847,26,789,24,"hashType"],[847,34,789,32],[847,36,789,34],[848,8,790,6],[848,14,790,12],[848,18,790,16,"Error"],[848,23,790,21],[848,24,790,22],[848,77,790,75],[848,78,790,76],[849,6,791,4],[850,4,792,2],[850,5,792,3],[850,6,792,4],[851,2,793,0],[852,2,794,0],[852,11,794,9,"checkScriptForPubkey"],[852,31,794,29,"checkScriptForPubkey"],[852,32,794,30,"pubkey"],[852,38,794,36],[852,40,794,38,"script"],[852,46,794,44],[852,48,794,46,"action"],[852,54,794,52],[852,56,794,54],[853,4,795,2],[853,8,795,6],[853,9,795,7,"pubkeyInScript"],[853,23,795,21],[853,24,795,22,"pubkey"],[853,30,795,28],[853,32,795,30,"script"],[853,38,795,36],[853,39,795,37],[853,41,795,39],[854,6,796,4],[854,12,796,10],[854,16,796,14,"Error"],[854,21,796,19],[854,22,797,6],[854,33,797,17,"action"],[854,39,797,23],[854,71,797,55,"pubkey"],[854,77,797,61],[854,78,797,62,"toString"],[854,86,797,70],[854,87,797,71],[854,92,797,76],[854,93,797,77],[854,95,798,4],[854,96,798,5],[855,4,799,2],[856,2,800,0],[857,2,801,0],[857,11,801,9,"checkTxEmpty"],[857,23,801,21,"checkTxEmpty"],[857,24,801,22,"tx"],[857,26,801,24],[857,28,801,26],[858,4,802,2],[858,8,802,8,"isEmpty"],[858,15,802,15],[858,18,802,18,"tx"],[858,20,802,20],[858,21,802,21,"ins"],[858,24,802,24],[858,25,802,25,"every"],[858,30,802,30],[858,31,803,4],[858,41,803,4,"input"],[858,46,803,9],[859,6,803,9],[859,13,804,6,"input"],[859,18,804,11],[859,19,804,12,"script"],[859,25,804,18],[859,29,805,6,"input"],[859,34,805,11],[859,35,805,12,"script"],[859,41,805,18],[859,42,805,19,"length"],[859,48,805,25],[859,53,805,30],[859,54,805,31],[859,58,806,6,"input"],[859,63,806,11],[859,64,806,12,"witness"],[859,71,806,19],[859,75,807,6,"input"],[859,80,807,11],[859,81,807,12,"witness"],[859,88,807,19],[859,89,807,20,"length"],[859,95,807,26],[859,100,807,31],[859,101,807,32],[860,4,807,32],[860,5,808,2],[860,6,808,3],[861,4,809,2],[861,8,809,6],[861,9,809,7,"isEmpty"],[861,16,809,14],[861,18,809,16],[862,6,810,4],[862,12,810,10],[862,16,810,14,"Error"],[862,21,810,19],[862,22,810,20],[862,74,810,72],[862,75,810,73],[863,4,811,2],[864,2,812,0],[865,2,813,0],[865,11,813,9,"checkTxForDupeIns"],[865,28,813,26,"checkTxForDupeIns"],[865,29,813,27,"tx"],[865,31,813,29],[865,33,813,31,"cache"],[865,38,813,36],[865,40,813,38],[866,4,814,2,"tx"],[866,6,814,4],[866,7,814,5,"ins"],[866,10,814,8],[866,11,814,9,"forEach"],[866,18,814,16],[866,19,814,17],[866,29,814,17,"input"],[866,34,814,22],[866,36,814,26],[867,6,815,4,"checkTxInputCache"],[867,23,815,21],[867,24,815,22,"cache"],[867,29,815,27],[867,31,815,29,"input"],[867,36,815,34],[867,37,815,35],[868,4,816,2],[868,5,816,3],[868,6,816,4],[869,2,817,0],[870,2,818,0],[870,11,818,9,"checkTxInputCache"],[870,28,818,26,"checkTxInputCache"],[870,29,818,27,"cache"],[870,34,818,32],[870,36,818,34,"input"],[870,41,818,39],[870,43,818,41],[871,4,819,2],[871,8,819,8,"key"],[871,11,819,11],[871,14,820,4,"_$$_REQUIRE"],[871,25,820,4],[871,26,820,4,"_dependencyMap"],[871,40,820,4],[871,62,820,18,"reverseBuffer"],[871,75,820,31],[871,76,820,32,"Buffer"],[871,82,820,38],[871,83,820,39,"from"],[871,87,820,43],[871,88,820,44,"input"],[871,93,820,49],[871,94,820,50,"hash"],[871,98,820,54],[871,99,820,55],[871,100,820,56],[871,101,820,57,"toString"],[871,109,820,65],[871,110,820,66],[871,115,820,71],[871,116,820,72],[871,119,821,4],[871,122,821,7],[871,125,822,4,"input"],[871,130,822,9],[871,131,822,10,"index"],[871,136,822,15],[872,4,823,2],[872,8,823,6,"cache"],[872,13,823,11],[872,14,823,12,"__TX_IN_CACHE"],[872,27,823,25],[872,28,823,26,"key"],[872,31,823,29],[872,32,823,30],[872,34,823,32],[872,40,823,38],[872,44,823,42,"Error"],[872,49,823,47],[872,50,823,48],[872,77,823,75],[872,78,823,76],[873,4,824,2,"cache"],[873,9,824,7],[873,10,824,8,"__TX_IN_CACHE"],[873,23,824,21],[873,24,824,22,"key"],[873,27,824,25],[873,28,824,26],[873,31,824,29],[873,32,824,30],[874,2,825,0],[875,2,826,0],[875,11,826,9,"scriptCheckerFactory"],[875,31,826,29,"scriptCheckerFactory"],[875,32,826,30,"payment"],[875,39,826,37],[875,41,826,39,"paymentScriptName"],[875,58,826,56],[875,60,826,58],[876,4,827,2],[876,11,827,9],[876,21,827,10,"inputIndex"],[876,31,827,20],[876,33,827,22,"scriptPubKey"],[876,45,827,34],[876,47,827,36,"redeemScript"],[876,59,827,48],[876,61,827,50,"ioType"],[876,67,827,56],[876,69,827,61],[877,6,828,4],[877,10,828,10,"redeemScriptOutput"],[877,28,828,28],[877,31,828,31,"payment"],[877,38,828,38],[877,39,828,39],[878,8,829,6,"redeem"],[878,14,829,12],[878,16,829,14],[879,10,829,16,"output"],[879,16,829,22],[879,18,829,24,"redeemScript"],[880,8,829,37],[881,6,830,4],[881,7,830,5],[881,8,830,6],[881,9,830,7,"output"],[881,15,830,13],[882,6,831,4],[882,10,831,8],[882,11,831,9,"scriptPubKey"],[882,23,831,21],[882,24,831,22,"equals"],[882,30,831,28],[882,31,831,29,"redeemScriptOutput"],[882,49,831,47],[882,50,831,48],[882,52,831,50],[883,8,832,6],[883,14,832,12],[883,18,832,16,"Error"],[883,23,832,21],[883,24,833,8],[883,27,833,11,"paymentScriptName"],[883,44,833,28],[883,52,833,36,"ioType"],[883,58,833,42],[883,63,833,47,"inputIndex"],[883,73,833,57],[883,121,834,6],[883,122,834,7],[884,6,835,4],[885,4,836,2],[885,5,836,3],[886,2,837,0],[887,2,838,0],[887,6,838,6,"checkRedeemScript"],[887,23,838,23],[887,26,838,26,"scriptCheckerFactory"],[887,46,838,46],[887,47,838,47,"_$$_REQUIRE"],[887,58,838,47],[887,59,838,47,"_dependencyMap"],[887,73,838,47],[887,93,838,56,"p2sh"],[887,97,838,60],[887,99,838,62],[887,114,838,77],[887,115,838,78],[888,2,839,0],[888,6,839,6,"checkWitnessScript"],[888,24,839,24],[888,27,839,27,"scriptCheckerFactory"],[888,47,839,47],[888,48,840,2,"_$$_REQUIRE"],[888,59,840,2],[888,60,840,2,"_dependencyMap"],[888,74,840,2],[888,94,840,11,"p2wsh"],[888,99,840,16],[888,101,841,2],[888,117,842,0],[888,118,842,1],[889,2,843,0],[889,11,843,9,"getTxCacheValue"],[889,26,843,24,"getTxCacheValue"],[889,27,843,25,"key"],[889,30,843,28],[889,32,843,30,"name"],[889,36,843,34],[889,38,843,36,"inputs"],[889,44,843,42],[889,46,843,44,"c"],[889,47,843,45],[889,49,843,47],[890,4,844,2],[890,8,844,6],[890,9,844,7,"inputs"],[890,15,844,13],[890,16,844,14,"every"],[890,21,844,19],[890,22,844,20,"isFinalized"],[890,33,844,31],[890,34,844,32],[890,36,845,4],[890,42,845,10],[890,46,845,14,"Error"],[890,51,845,19],[890,52,845,20],[890,91,845,59,"name"],[890,95,845,63],[890,97,845,65],[890,98,845,66],[891,4,846,2],[891,8,846,6,"key"],[891,11,846,9],[891,16,846,14],[891,28,846,26],[891,32,846,30,"c"],[891,33,846,31],[891,34,846,32,"__FEE_RATE"],[891,44,846,42],[891,46,846,44],[891,53,846,51,"c"],[891,54,846,52],[891,55,846,53,"__FEE_RATE"],[891,65,846,63],[892,4,847,2],[892,8,847,6,"key"],[892,11,847,9],[892,16,847,14],[892,23,847,21],[892,27,847,25,"c"],[892,28,847,26],[892,29,847,27,"__FEE"],[892,34,847,32],[892,36,847,34],[892,43,847,41,"c"],[892,44,847,42],[892,45,847,43,"__FEE"],[892,50,847,48],[893,4,848,2],[893,8,848,6,"tx"],[893,10,848,8],[894,4,849,2],[894,8,849,6,"mustFinalize"],[894,20,849,18],[894,23,849,21],[894,27,849,25],[895,4,850,2],[895,8,850,6,"c"],[895,9,850,7],[895,10,850,8,"__EXTRACTED_TX"],[895,24,850,22],[895,26,850,24],[896,6,851,4,"tx"],[896,8,851,6],[896,11,851,9,"c"],[896,12,851,10],[896,13,851,11,"__EXTRACTED_TX"],[896,27,851,25],[897,6,852,4,"mustFinalize"],[897,18,852,16],[897,21,852,19],[897,26,852,24],[898,4,853,2],[898,5,853,3],[898,11,853,9],[899,6,854,4,"tx"],[899,8,854,6],[899,11,854,9,"c"],[899,12,854,10],[899,13,854,11,"__TX"],[899,17,854,15],[899,18,854,16,"clone"],[899,23,854,21],[899,24,854,22],[899,25,854,23],[900,4,855,2],[901,4,856,2,"inputFinalizeGetAmts"],[901,24,856,22],[901,25,856,23,"inputs"],[901,31,856,29],[901,33,856,31,"tx"],[901,35,856,33],[901,37,856,35,"c"],[901,38,856,36],[901,40,856,38,"mustFinalize"],[901,52,856,50],[901,53,856,51],[902,4,857,2],[902,8,857,6,"key"],[902,11,857,9],[902,16,857,14],[902,28,857,26],[902,30,857,28],[902,37,857,35,"c"],[902,38,857,36],[902,39,857,37,"__FEE_RATE"],[902,49,857,47],[902,50,857,48],[902,55,858,7],[902,59,858,11,"key"],[902,62,858,14],[902,67,858,19],[902,74,858,26],[902,76,858,28],[902,83,858,35,"c"],[902,84,858,36],[902,85,858,37,"__FEE"],[902,90,858,42],[903,2,859,0],[904,2,860,0],[904,11,860,9,"getFinalScripts"],[904,26,860,24,"getFinalScripts"],[904,27,860,25,"inputIndex"],[904,37,860,35],[904,39,860,37,"input"],[904,44,860,42],[904,46,860,44,"script"],[904,52,860,50],[904,54,860,52,"isSegwit"],[904,62,860,60],[904,64,860,62,"isP2SH"],[904,70,860,68],[904,72,860,70,"isP2WSH"],[904,79,860,77],[904,81,860,79],[905,4,861,2],[905,8,861,8,"scriptType"],[905,18,861,18],[905,21,861,21,"classifyScript"],[905,35,861,35],[905,36,861,36,"script"],[905,42,861,42],[905,43,861,43],[906,4,862,2],[906,8,862,6],[906,9,862,7,"canFinalize"],[906,20,862,18],[906,21,862,19,"input"],[906,26,862,24],[906,28,862,26,"script"],[906,34,862,32],[906,36,862,34,"scriptType"],[906,46,862,44],[906,47,862,45],[906,49,863,4],[906,55,863,10],[906,59,863,14,"Error"],[906,64,863,19],[906,65,863,20],[906,92,863,47,"inputIndex"],[906,102,863,57],[906,104,863,59],[906,105,863,60],[907,4,864,2],[907,11,864,9,"prepareFinalScripts"],[907,30,864,28],[907,31,865,4,"script"],[907,37,865,10],[907,39,866,4,"scriptType"],[907,49,866,14],[907,51,867,4,"input"],[907,56,867,9],[907,57,867,10,"partialSig"],[907,67,867,20],[907,69,868,4,"isSegwit"],[907,77,868,12],[907,79,869,4,"isP2SH"],[907,85,869,10],[907,87,870,4,"isP2WSH"],[907,94,871,2],[907,95,871,3],[908,2,872,0],[909,2,873,0],[909,11,873,9,"prepareFinalScripts"],[909,30,873,28,"prepareFinalScripts"],[909,31,874,2,"script"],[909,37,874,8],[909,39,875,2,"scriptType"],[909,49,875,12],[909,51,876,2,"partialSig"],[909,61,876,12],[909,63,877,2,"isSegwit"],[909,71,877,10],[909,73,878,2,"isP2SH"],[909,79,878,8],[909,81,879,2,"isP2WSH"],[909,88,879,9],[909,90,880,2],[910,4,881,2],[910,8,881,6,"finalScriptSig"],[910,22,881,20],[911,4,882,2],[911,8,882,6,"finalScriptWitness"],[911,26,882,24],[912,4,883,2],[913,4,884,2],[913,8,884,8,"payment"],[913,15,884,15],[913,18,884,18,"getPayment"],[913,28,884,28],[913,29,884,29,"script"],[913,35,884,35],[913,37,884,37,"scriptType"],[913,47,884,47],[913,49,884,49,"partialSig"],[913,59,884,59],[913,60,884,60],[914,4,885,2],[914,8,885,8,"p2wsh"],[914,13,885,13],[914,16,885,16],[914,17,885,17,"isP2WSH"],[914,24,885,24],[914,27,885,27],[914,31,885,31],[914,34,885,34,"_$$_REQUIRE"],[914,45,885,34],[914,46,885,34,"_dependencyMap"],[914,60,885,34],[914,80,885,43,"p2wsh"],[914,85,885,48],[914,86,885,49],[915,6,885,51,"redeem"],[915,12,885,57],[915,14,885,59,"payment"],[916,4,885,67],[916,5,885,68],[916,6,885,69],[917,4,886,2],[917,8,886,8,"p2sh"],[917,12,886,12],[917,15,886,15],[917,16,886,16,"isP2SH"],[917,22,886,22],[917,25,886,25],[917,29,886,29],[917,32,886,32,"_$$_REQUIRE"],[917,43,886,32],[917,44,886,32,"_dependencyMap"],[917,58,886,32],[917,78,886,41,"p2sh"],[917,82,886,45],[917,83,886,46],[918,6,886,48,"redeem"],[918,12,886,54],[918,14,886,56,"p2wsh"],[918,19,886,61],[918,23,886,65,"payment"],[919,4,886,73],[919,5,886,74],[919,6,886,75],[920,4,887,2],[920,8,887,6,"isSegwit"],[920,16,887,14],[920,18,887,16],[921,6,888,4],[921,10,888,8,"p2wsh"],[921,15,888,13],[921,17,888,15],[922,8,889,6,"finalScriptWitness"],[922,26,889,24],[922,29,889,27,"witnessStackToScriptWitness"],[922,56,889,54],[922,57,889,55,"p2wsh"],[922,62,889,60],[922,63,889,61,"witness"],[922,70,889,68],[922,71,889,69],[923,6,890,4],[923,7,890,5],[923,13,890,11],[924,8,891,6,"finalScriptWitness"],[924,26,891,24],[924,29,891,27,"witnessStackToScriptWitness"],[924,56,891,54],[924,57,891,55,"payment"],[924,64,891,62],[924,65,891,63,"witness"],[924,72,891,70],[924,73,891,71],[925,6,892,4],[926,6,893,4],[926,10,893,8,"p2sh"],[926,14,893,12],[926,16,893,14],[927,8,894,6,"finalScriptSig"],[927,22,894,20],[927,25,894,23,"p2sh"],[927,29,894,27],[927,30,894,28,"input"],[927,35,894,33],[928,6,895,4],[929,4,896,2],[929,5,896,3],[929,11,896,9],[930,6,897,4],[930,10,897,8,"p2sh"],[930,14,897,12],[930,16,897,14],[931,8,898,6,"finalScriptSig"],[931,22,898,20],[931,25,898,23,"p2sh"],[931,29,898,27],[931,30,898,28,"input"],[931,35,898,33],[932,6,899,4],[932,7,899,5],[932,13,899,11],[933,8,900,6,"finalScriptSig"],[933,22,900,20],[933,25,900,23,"payment"],[933,32,900,30],[933,33,900,31,"input"],[933,38,900,36],[934,6,901,4],[935,4,902,2],[936,4,903,2],[936,11,903,9],[937,6,904,4,"finalScriptSig"],[937,20,904,18],[937,22,904,4,"finalScriptSig"],[937,36,904,18],[938,6,905,4,"finalScriptWitness"],[938,24,905,22],[938,26,905,4,"finalScriptWitness"],[939,4,906,2],[939,5,906,3],[940,2,907,0],[941,2,908,0],[941,11,908,9,"getHashAndSighashType"],[941,32,908,30,"getHashAndSighashType"],[941,33,909,2,"inputs"],[941,39,909,8],[941,41,910,2,"inputIndex"],[941,51,910,12],[941,53,911,2,"pubkey"],[941,59,911,8],[941,61,912,2,"cache"],[941,66,912,7],[941,68,913,2,"sighashTypes"],[941,80,913,14],[941,82,914,2],[942,4,915,2],[942,8,915,8,"input"],[942,13,915,13],[942,16,915,16,"_$$_REQUIRE"],[942,27,915,16],[942,28,915,16,"_dependencyMap"],[942,42,915,16],[942,71,915,24,"checkForInput"],[942,84,915,37],[942,85,915,38,"inputs"],[942,91,915,44],[942,93,915,46,"inputIndex"],[942,103,915,56],[942,104,915,57],[943,4,916,2],[943,8,916,2,"_getHashForSig"],[943,22,916,2],[943,25,916,40,"getHashForSig"],[943,38,916,53],[943,39,917,4,"inputIndex"],[943,49,917,14],[943,51,918,4,"input"],[943,56,918,9],[943,58,919,4,"cache"],[943,63,919,9],[943,65,920,4],[943,70,920,9],[943,72,921,4,"sighashTypes"],[943,84,922,2],[943,85,922,3],[944,6,916,10,"hash"],[944,10,916,14],[944,13,916,14,"_getHashForSig"],[944,27,916,14],[944,28,916,10,"hash"],[944,32,916,14],[945,6,916,16,"sighashType"],[945,17,916,27],[945,20,916,27,"_getHashForSig"],[945,34,916,27],[945,35,916,16,"sighashType"],[945,46,916,27],[946,6,916,29,"script"],[946,12,916,35],[946,15,916,35,"_getHashForSig"],[946,29,916,35],[946,30,916,29,"script"],[946,36,916,35],[947,4,923,2,"checkScriptForPubkey"],[947,24,923,22],[947,25,923,23,"pubkey"],[947,31,923,29],[947,33,923,31,"script"],[947,39,923,37],[947,41,923,39],[947,47,923,45],[947,48,923,46],[948,4,924,2],[948,11,924,9],[949,6,925,4,"hash"],[949,10,925,8],[949,12,925,4,"hash"],[949,16,925,8],[950,6,926,4,"sighashType"],[950,17,926,15],[950,19,926,4,"sighashType"],[951,4,927,2],[951,5,927,3],[952,2,928,0],[953,2,929,0],[953,11,929,9,"getHashForSig"],[953,24,929,22,"getHashForSig"],[953,25,929,23,"inputIndex"],[953,35,929,33],[953,37,929,35,"input"],[953,42,929,40],[953,44,929,42,"cache"],[953,49,929,47],[953,51,929,49,"forValidate"],[953,62,929,60],[953,64,929,62,"sighashTypes"],[953,76,929,74],[953,78,929,76],[954,4,930,2],[954,8,930,8,"unsignedTx"],[954,18,930,18],[954,21,930,21,"cache"],[954,26,930,26],[954,27,930,27,"__TX"],[954,31,930,31],[955,4,931,2],[955,8,931,8,"sighashType"],[955,19,931,19],[955,22,932,4,"input"],[955,27,932,9],[955,28,932,10,"sighashType"],[955,39,932,21],[955,43,932,25,"_$$_REQUIRE"],[955,54,932,25],[955,55,932,25,"_dependencyMap"],[955,69,932,25],[955,92,932,39,"Transaction"],[955,103,932,50],[955,104,932,51,"SIGHASH_ALL"],[955,115,932,62],[956,4,933,2],[956,8,933,6,"sighashTypes"],[956,20,933,18],[956,24,933,22,"sighashTypes"],[956,36,933,34],[956,37,933,35,"indexOf"],[956,44,933,42],[956,45,933,43,"sighashType"],[956,56,933,54],[956,57,933,55],[956,60,933,58],[956,61,933,59],[956,63,933,61],[957,6,934,4],[957,10,934,10,"str"],[957,13,934,13],[957,16,934,16,"sighashTypeToString"],[957,35,934,35],[957,36,934,36,"sighashType"],[957,47,934,47],[957,48,934,48],[958,6,935,4],[958,12,935,10],[958,16,935,14,"Error"],[958,21,935,19],[958,22,936,6],[958,87,936,71],[958,90,937,8],[958,148,937,66,"str"],[958,151,937,69],[958,153,938,4],[958,154,938,5],[959,4,939,2],[960,4,940,2],[960,8,940,6,"hash"],[960,12,940,10],[961,4,941,2],[961,8,941,6,"prevout"],[961,15,941,13],[962,4,942,2],[962,8,942,6,"input"],[962,13,942,11],[962,14,942,12,"nonWitnessUtxo"],[962,28,942,26],[962,30,942,28],[963,6,943,4],[963,10,943,10,"nonWitnessUtxoTx"],[963,26,943,26],[963,29,943,29,"nonWitnessUtxoTxFromCache"],[963,54,943,54],[963,55,944,6,"cache"],[963,60,944,11],[963,62,945,6,"input"],[963,67,945,11],[963,69,946,6,"inputIndex"],[963,79,947,4],[963,80,947,5],[964,6,948,4],[964,10,948,10,"prevoutHash"],[964,21,948,21],[964,24,948,24,"unsignedTx"],[964,34,948,34],[964,35,948,35,"ins"],[964,38,948,38],[964,39,948,39,"inputIndex"],[964,49,948,49],[964,50,948,50],[964,51,948,51,"hash"],[964,55,948,55],[965,6,949,4],[965,10,949,10,"utxoHash"],[965,18,949,18],[965,21,949,21,"nonWitnessUtxoTx"],[965,37,949,37],[965,38,949,38,"getHash"],[965,45,949,45],[965,46,949,46],[965,47,949,47],[966,6,950,4],[967,6,951,4],[967,10,951,8],[967,11,951,9,"prevoutHash"],[967,22,951,20],[967,23,951,21,"equals"],[967,29,951,27],[967,30,951,28,"utxoHash"],[967,38,951,36],[967,39,951,37],[967,41,951,39],[968,8,952,6],[968,14,952,12],[968,18,952,16,"Error"],[968,23,952,21],[968,24,953,8],[968,60,953,44,"inputIndex"],[968,70,953,54],[968,120,954,6],[968,121,954,7],[969,6,955,4],[970,6,956,4],[970,10,956,10,"prevoutIndex"],[970,22,956,22],[970,25,956,25,"unsignedTx"],[970,35,956,35],[970,36,956,36,"ins"],[970,39,956,39],[970,40,956,40,"inputIndex"],[970,50,956,50],[970,51,956,51],[970,52,956,52,"index"],[970,57,956,57],[971,6,957,4,"prevout"],[971,13,957,11],[971,16,957,14,"nonWitnessUtxoTx"],[971,32,957,30],[971,33,957,31,"outs"],[971,37,957,35],[971,38,957,36,"prevoutIndex"],[971,50,957,48],[971,51,957,49],[972,4,958,2],[972,5,958,3],[972,11,958,9],[972,15,958,13,"input"],[972,20,958,18],[972,21,958,19,"witnessUtxo"],[972,32,958,30],[972,34,958,32],[973,6,959,4,"prevout"],[973,13,959,11],[973,16,959,14,"input"],[973,21,959,19],[973,22,959,20,"witnessUtxo"],[973,33,959,31],[974,4,960,2],[974,5,960,3],[974,11,960,9],[975,6,961,4],[975,12,961,10],[975,16,961,14,"Error"],[975,21,961,19],[975,22,961,20],[975,58,961,56],[975,59,961,57],[976,4,962,2],[977,4,963,2],[977,8,963,2,"_getMeaningfulScript"],[977,28,963,2],[977,31,963,37,"getMeaningfulScript"],[977,50,963,56],[977,51,964,4,"prevout"],[977,58,964,11],[977,59,964,12,"script"],[977,65,964,18],[977,67,965,4,"inputIndex"],[977,77,965,14],[977,79,966,4],[977,86,966,11],[977,88,967,4,"input"],[977,93,967,9],[977,94,967,10,"redeemScript"],[977,106,967,22],[977,108,968,4,"input"],[977,113,968,9],[977,114,968,10,"witnessScript"],[977,127,969,2],[977,128,969,3],[978,6,963,10,"meaningfulScript"],[978,22,963,26],[978,25,963,26,"_getMeaningfulScript"],[978,45,963,26],[978,46,963,10,"meaningfulScript"],[978,62,963,26],[979,6,963,28,"type"],[979,10,963,32],[979,13,963,32,"_getMeaningfulScript"],[979,33,963,32],[979,34,963,28,"type"],[979,38,963,32],[980,4,970,2],[980,8,970,6],[980,9,970,7],[980,21,970,19],[980,23,970,21],[980,30,970,28],[980,31,970,29],[980,32,970,30,"indexOf"],[980,39,970,37],[980,40,970,38,"type"],[980,44,970,42],[980,45,970,43],[980,49,970,47],[980,50,970,48],[980,52,970,50],[981,6,971,4,"hash"],[981,10,971,8],[981,13,971,11,"unsignedTx"],[981,23,971,21],[981,24,971,22,"hashForWitnessV0"],[981,40,971,38],[981,41,972,6,"inputIndex"],[981,51,972,16],[981,53,973,6,"meaningfulScript"],[981,69,973,22],[981,71,974,6,"prevout"],[981,78,974,13],[981,79,974,14,"value"],[981,84,974,19],[981,86,975,6,"sighashType"],[981,97,976,4],[981,98,976,5],[982,4,977,2],[982,5,977,3],[982,11,977,9],[982,15,977,13,"isP2WPKH"],[982,23,977,21],[982,24,977,22,"meaningfulScript"],[982,40,977,38],[982,41,977,39],[982,43,977,41],[983,6,978,4],[984,6,979,4],[984,10,979,10,"signingScript"],[984,23,979,23],[984,26,979,26,"_$$_REQUIRE"],[984,37,979,26],[984,38,979,26,"_dependencyMap"],[984,52,979,26],[984,72,979,35,"p2pkh"],[984,77,979,40],[984,78,979,41],[985,8,979,43,"hash"],[985,12,979,47],[985,14,979,49,"meaningfulScript"],[985,30,979,65],[985,31,979,66,"slice"],[985,36,979,71],[985,37,979,72],[985,38,979,73],[986,6,979,75],[986,7,979,76],[986,8,979,77],[986,9,980,7,"output"],[986,15,980,13],[987,6,981,4,"hash"],[987,10,981,8],[987,13,981,11,"unsignedTx"],[987,23,981,21],[987,24,981,22,"hashForWitnessV0"],[987,40,981,38],[987,41,982,6,"inputIndex"],[987,51,982,16],[987,53,983,6,"signingScript"],[987,66,983,19],[987,68,984,6,"prevout"],[987,75,984,13],[987,76,984,14,"value"],[987,81,984,19],[987,83,985,6,"sighashType"],[987,94,986,4],[987,95,986,5],[988,4,987,2],[988,5,987,3],[988,11,987,9],[989,6,988,4],[990,6,989,4],[990,10,990,6,"input"],[990,15,990,11],[990,16,990,12,"nonWitnessUtxo"],[990,30,990,26],[990,35,990,31,"undefined"],[990,44,990,40],[990,48,991,6,"cache"],[990,53,991,11],[990,54,991,12,"__UNSAFE_SIGN_NONSEGWIT"],[990,77,991,35],[990,82,991,40],[990,87,991,45],[990,89,993,6],[990,95,993,12],[990,99,993,16,"Error"],[990,104,993,21],[990,105,994,8],[990,115,994,18,"inputIndex"],[990,125,994,28],[990,167,994,70],[990,170,995,10],[990,173,995,13,"meaningfulScript"],[990,189,995,29],[990,190,995,30,"toString"],[990,198,995,38],[990,199,995,39],[990,204,995,44],[990,205,995,45],[990,207,996,6],[990,208,996,7],[991,6,997,4],[991,10,997,8],[991,11,997,9,"forValidate"],[991,22,997,20],[991,26,997,24,"cache"],[991,31,997,29],[991,32,997,30,"__UNSAFE_SIGN_NONSEGWIT"],[991,55,997,53],[991,60,997,58],[991,65,997,63],[991,67,998,6,"console"],[991,74,998,13],[991,75,998,14,"warn"],[991,79,998,18],[991,80,999,8],[991,153,999,81],[991,156,1000,10],[991,232,1000,86],[991,235,1001,10],[991,311,1001,86],[991,314,1002,10],[991,386,1002,82],[991,389,1003,10],[991,461,1003,82],[991,464,1004,10],[991,531,1004,77],[991,534,1005,10],[991,557,1006,6],[991,558,1006,7],[992,6,1007,4,"hash"],[992,10,1007,8],[992,13,1007,11,"unsignedTx"],[992,23,1007,21],[992,24,1007,22,"hashForSignature"],[992,40,1007,38],[992,41,1008,6,"inputIndex"],[992,51,1008,16],[992,53,1009,6,"meaningfulScript"],[992,69,1009,22],[992,71,1010,6,"sighashType"],[992,82,1011,4],[992,83,1011,5],[993,4,1012,2],[994,4,1013,2],[994,11,1013,9],[995,6,1014,4,"script"],[995,12,1014,10],[995,14,1014,12,"meaningfulScript"],[995,30,1014,28],[996,6,1015,4,"sighashType"],[996,17,1015,15],[996,19,1015,4,"sighashType"],[996,30,1015,15],[997,6,1016,4,"hash"],[997,10,1016,8],[997,12,1016,4,"hash"],[998,4,1017,2],[998,5,1017,3],[999,2,1018,0],[1000,2,1019,0],[1000,11,1019,9,"getPayment"],[1000,21,1019,19,"getPayment"],[1000,22,1019,20,"script"],[1000,28,1019,26],[1000,30,1019,28,"scriptType"],[1000,40,1019,38],[1000,42,1019,40,"partialSig"],[1000,52,1019,50],[1000,54,1019,52],[1001,4,1020,2],[1001,8,1020,6,"payment"],[1001,15,1020,13],[1002,4,1021,2],[1002,12,1021,10,"scriptType"],[1002,22,1021,20],[1003,6,1022,4],[1003,11,1022,9],[1003,21,1022,19],[1004,8,1023,6],[1004,12,1023,12,"sigs"],[1004,16,1023,16],[1004,19,1023,19,"getSortedSigs"],[1004,32,1023,32],[1004,33,1023,33,"script"],[1004,39,1023,39],[1004,41,1023,41,"partialSig"],[1004,51,1023,51],[1004,52,1023,52],[1005,8,1024,6,"payment"],[1005,15,1024,13],[1005,18,1024,16,"_$$_REQUIRE"],[1005,29,1024,16],[1005,30,1024,16,"_dependencyMap"],[1005,44,1024,16],[1005,64,1024,25,"p2ms"],[1005,68,1024,29],[1005,69,1024,30],[1006,10,1025,8,"output"],[1006,16,1025,14],[1006,18,1025,16,"script"],[1006,24,1025,22],[1007,10,1026,8,"signatures"],[1007,20,1026,18],[1007,22,1026,20,"sigs"],[1008,8,1027,6],[1008,9,1027,7],[1008,10,1027,8],[1009,8,1028,6],[1010,6,1029,4],[1010,11,1029,9],[1010,19,1029,17],[1011,8,1030,6,"payment"],[1011,15,1030,13],[1011,18,1030,16,"_$$_REQUIRE"],[1011,29,1030,16],[1011,30,1030,16,"_dependencyMap"],[1011,44,1030,16],[1011,64,1030,25,"p2pk"],[1011,68,1030,29],[1011,69,1030,30],[1012,10,1031,8,"output"],[1012,16,1031,14],[1012,18,1031,16,"script"],[1012,24,1031,22],[1013,10,1032,8,"signature"],[1013,19,1032,17],[1013,21,1032,19,"partialSig"],[1013,31,1032,29],[1013,32,1032,30],[1013,33,1032,31],[1013,34,1032,32],[1013,35,1032,33,"signature"],[1014,8,1033,6],[1014,9,1033,7],[1014,10,1033,8],[1015,8,1034,6],[1016,6,1035,4],[1016,11,1035,9],[1016,23,1035,21],[1017,8,1036,6,"payment"],[1017,15,1036,13],[1017,18,1036,16,"_$$_REQUIRE"],[1017,29,1036,16],[1017,30,1036,16,"_dependencyMap"],[1017,44,1036,16],[1017,64,1036,25,"p2pkh"],[1017,69,1036,30],[1017,70,1036,31],[1018,10,1037,8,"output"],[1018,16,1037,14],[1018,18,1037,16,"script"],[1018,24,1037,22],[1019,10,1038,8,"pubkey"],[1019,16,1038,14],[1019,18,1038,16,"partialSig"],[1019,28,1038,26],[1019,29,1038,27],[1019,30,1038,28],[1019,31,1038,29],[1019,32,1038,30,"pubkey"],[1019,38,1038,36],[1020,10,1039,8,"signature"],[1020,19,1039,17],[1020,21,1039,19,"partialSig"],[1020,31,1039,29],[1020,32,1039,30],[1020,33,1039,31],[1020,34,1039,32],[1020,35,1039,33,"signature"],[1021,8,1040,6],[1021,9,1040,7],[1021,10,1040,8],[1022,8,1041,6],[1023,6,1042,4],[1023,11,1042,9],[1023,30,1042,28],[1024,8,1043,6,"payment"],[1024,15,1043,13],[1024,18,1043,16,"_$$_REQUIRE"],[1024,29,1043,16],[1024,30,1043,16,"_dependencyMap"],[1024,44,1043,16],[1024,64,1043,25,"p2wpkh"],[1024,70,1043,31],[1024,71,1043,32],[1025,10,1044,8,"output"],[1025,16,1044,14],[1025,18,1044,16,"script"],[1025,24,1044,22],[1026,10,1045,8,"pubkey"],[1026,16,1045,14],[1026,18,1045,16,"partialSig"],[1026,28,1045,26],[1026,29,1045,27],[1026,30,1045,28],[1026,31,1045,29],[1026,32,1045,30,"pubkey"],[1026,38,1045,36],[1027,10,1046,8,"signature"],[1027,19,1046,17],[1027,21,1046,19,"partialSig"],[1027,31,1046,29],[1027,32,1046,30],[1027,33,1046,31],[1027,34,1046,32],[1027,35,1046,33,"signature"],[1028,8,1047,6],[1028,9,1047,7],[1028,10,1047,8],[1029,8,1048,6],[1030,4,1049,2],[1031,4,1050,2],[1031,11,1050,9,"payment"],[1031,18,1050,16],[1032,2,1051,0],[1033,2,1052,0],[1033,11,1052,9,"getPsigsFromInputFinalScripts"],[1033,40,1052,38,"getPsigsFromInputFinalScripts"],[1033,41,1052,39,"input"],[1033,46,1052,44],[1033,48,1052,46],[1034,4,1053,2],[1034,8,1053,8,"scriptItems"],[1034,19,1053,19],[1034,22,1053,22],[1034,23,1053,23,"input"],[1034,28,1053,28],[1034,29,1053,29,"finalScriptSig"],[1034,43,1053,43],[1034,46,1054,6],[1034,48,1054,8],[1034,51,1055,6,"_$$_REQUIRE"],[1034,62,1055,6],[1034,63,1055,6,"_dependencyMap"],[1034,77,1055,6],[1034,94,1055,14,"decompile"],[1034,103,1055,23],[1034,104,1055,24,"input"],[1034,109,1055,29],[1034,110,1055,30,"finalScriptSig"],[1034,124,1055,44],[1034,125,1055,45],[1034,129,1055,49],[1034,131,1055,51],[1035,4,1056,2],[1035,8,1056,8,"witnessItems"],[1035,20,1056,20],[1035,23,1056,23],[1035,24,1056,24,"input"],[1035,29,1056,29],[1035,30,1056,30,"finalScriptWitness"],[1035,48,1056,48],[1035,51,1057,6],[1035,53,1057,8],[1035,56,1058,6,"_$$_REQUIRE"],[1035,67,1058,6],[1035,68,1058,6,"_dependencyMap"],[1035,82,1058,6],[1035,99,1058,14,"decompile"],[1035,108,1058,23],[1035,109,1058,24,"input"],[1035,114,1058,29],[1035,115,1058,30,"finalScriptWitness"],[1035,133,1058,48],[1035,134,1058,49],[1035,138,1058,53],[1035,140,1058,55],[1036,4,1059,2],[1036,11,1059,9,"scriptItems"],[1036,22,1059,20],[1036,23,1060,5,"concat"],[1036,29,1060,11],[1036,30,1060,12,"witnessItems"],[1036,42,1060,24],[1036,43,1060,25],[1036,44,1061,5,"filter"],[1036,50,1061,11],[1036,51,1061,12],[1036,61,1061,12,"item"],[1036,65,1061,16],[1036,67,1061,20],[1037,6,1062,6],[1037,13,1062,13,"Buffer"],[1037,19,1062,19],[1037,20,1062,20,"isBuffer"],[1037,28,1062,28],[1037,29,1062,29,"item"],[1037,33,1062,33],[1037,34,1062,34],[1037,38,1062,38,"_$$_REQUIRE"],[1037,49,1062,38],[1037,50,1062,38,"_dependencyMap"],[1037,64,1062,38],[1037,81,1062,46,"isCanonicalScriptSignature"],[1037,107,1062,72],[1037,108,1062,73,"item"],[1037,112,1062,77],[1037,113,1062,78],[1038,4,1063,4],[1038,5,1063,5],[1038,6,1063,6],[1038,7,1064,5,"map"],[1038,10,1064,8],[1038,11,1064,9],[1038,21,1064,9,"sig"],[1038,24,1064,12],[1039,6,1064,12],[1039,13,1064,17],[1040,8,1064,19,"signature"],[1040,17,1064,28],[1040,19,1064,30,"sig"],[1041,6,1064,34],[1041,7,1064,35],[1042,4,1064,35],[1042,5,1064,36],[1042,6,1064,37],[1043,2,1065,0],[1044,2,1066,0],[1044,11,1066,9,"getScriptFromInput"],[1044,29,1066,27,"getScriptFromInput"],[1044,30,1066,28,"inputIndex"],[1044,40,1066,38],[1044,42,1066,40,"input"],[1044,47,1066,45],[1044,49,1066,47,"cache"],[1044,54,1066,52],[1044,56,1066,54],[1045,4,1067,2],[1045,8,1067,8,"unsignedTx"],[1045,18,1067,18],[1045,21,1067,21,"cache"],[1045,26,1067,26],[1045,27,1067,27,"__TX"],[1045,31,1067,31],[1046,4,1068,2],[1046,8,1068,8,"res"],[1046,11,1068,11],[1046,14,1068,14],[1047,6,1069,4,"script"],[1047,12,1069,10],[1047,14,1069,12],[1047,18,1069,16],[1048,6,1070,4,"isSegwit"],[1048,14,1070,12],[1048,16,1070,14],[1048,21,1070,19],[1049,6,1071,4,"isP2SH"],[1049,12,1071,10],[1049,14,1071,12],[1049,19,1071,17],[1050,6,1072,4,"isP2WSH"],[1050,13,1072,11],[1050,15,1072,13],[1051,4,1073,2],[1051,5,1073,3],[1052,4,1074,2,"res"],[1052,7,1074,5],[1052,8,1074,6,"isP2SH"],[1052,14,1074,12],[1052,17,1074,15],[1052,18,1074,16],[1052,19,1074,17,"input"],[1052,24,1074,22],[1052,25,1074,23,"redeemScript"],[1052,37,1074,35],[1053,4,1075,2,"res"],[1053,7,1075,5],[1053,8,1075,6,"isP2WSH"],[1053,15,1075,13],[1053,18,1075,16],[1053,19,1075,17],[1053,20,1075,18,"input"],[1053,25,1075,23],[1053,26,1075,24,"witnessScript"],[1053,39,1075,37],[1054,4,1076,2],[1054,8,1076,6,"input"],[1054,13,1076,11],[1054,14,1076,12,"witnessScript"],[1054,27,1076,25],[1054,29,1076,27],[1055,6,1077,4,"res"],[1055,9,1077,7],[1055,10,1077,8,"script"],[1055,16,1077,14],[1055,19,1077,17,"input"],[1055,24,1077,22],[1055,25,1077,23,"witnessScript"],[1055,38,1077,36],[1056,4,1078,2],[1056,5,1078,3],[1056,11,1078,9],[1056,15,1078,13,"input"],[1056,20,1078,18],[1056,21,1078,19,"redeemScript"],[1056,33,1078,31],[1056,35,1078,33],[1057,6,1079,4,"res"],[1057,9,1079,7],[1057,10,1079,8,"script"],[1057,16,1079,14],[1057,19,1079,17,"input"],[1057,24,1079,22],[1057,25,1079,23,"redeemScript"],[1057,37,1079,35],[1058,4,1080,2],[1058,5,1080,3],[1058,11,1080,9],[1059,6,1081,4],[1059,10,1081,8,"input"],[1059,15,1081,13],[1059,16,1081,14,"nonWitnessUtxo"],[1059,30,1081,28],[1059,32,1081,30],[1060,8,1082,6],[1060,12,1082,12,"nonWitnessUtxoTx"],[1060,28,1082,28],[1060,31,1082,31,"nonWitnessUtxoTxFromCache"],[1060,56,1082,56],[1060,57,1083,8,"cache"],[1060,62,1083,13],[1060,64,1084,8,"input"],[1060,69,1084,13],[1060,71,1085,8,"inputIndex"],[1060,81,1086,6],[1060,82,1086,7],[1061,8,1087,6],[1061,12,1087,12,"prevoutIndex"],[1061,24,1087,24],[1061,27,1087,27,"unsignedTx"],[1061,37,1087,37],[1061,38,1087,38,"ins"],[1061,41,1087,41],[1061,42,1087,42,"inputIndex"],[1061,52,1087,52],[1061,53,1087,53],[1061,54,1087,54,"index"],[1061,59,1087,59],[1062,8,1088,6,"res"],[1062,11,1088,9],[1062,12,1088,10,"script"],[1062,18,1088,16],[1062,21,1088,19,"nonWitnessUtxoTx"],[1062,37,1088,35],[1062,38,1088,36,"outs"],[1062,42,1088,40],[1062,43,1088,41,"prevoutIndex"],[1062,55,1088,53],[1062,56,1088,54],[1062,57,1088,55,"script"],[1062,63,1088,61],[1063,6,1089,4],[1063,7,1089,5],[1063,13,1089,11],[1063,17,1089,15,"input"],[1063,22,1089,20],[1063,23,1089,21,"witnessUtxo"],[1063,34,1089,32],[1063,36,1089,34],[1064,8,1090,6,"res"],[1064,11,1090,9],[1064,12,1090,10,"script"],[1064,18,1090,16],[1064,21,1090,19,"input"],[1064,26,1090,24],[1064,27,1090,25,"witnessUtxo"],[1064,38,1090,36],[1064,39,1090,37,"script"],[1064,45,1090,43],[1065,6,1091,4],[1066,4,1092,2],[1067,4,1093,2],[1067,8,1093,6,"input"],[1067,13,1093,11],[1067,14,1093,12,"witnessScript"],[1067,27,1093,25],[1067,31,1093,29,"isP2WPKH"],[1067,39,1093,37],[1067,40,1093,38,"res"],[1067,43,1093,41],[1067,44,1093,42,"script"],[1067,50,1093,48],[1067,51,1093,49],[1067,53,1093,51],[1068,6,1094,4,"res"],[1068,9,1094,7],[1068,10,1094,8,"isSegwit"],[1068,18,1094,16],[1068,21,1094,19],[1068,25,1094,23],[1069,4,1095,2],[1070,4,1096,2],[1070,11,1096,9,"res"],[1070,14,1096,12],[1071,2,1097,0],[1072,2,1098,0],[1072,11,1098,9,"getSignersFromHD"],[1072,27,1098,25,"getSignersFromHD"],[1072,28,1098,26,"inputIndex"],[1072,38,1098,36],[1072,40,1098,38,"inputs"],[1072,46,1098,44],[1072,48,1098,46,"hdKeyPair"],[1072,57,1098,55],[1072,59,1098,57],[1073,4,1099,2],[1073,8,1099,8,"input"],[1073,13,1099,13],[1073,16,1099,16,"_$$_REQUIRE"],[1073,27,1099,16],[1073,28,1099,16,"_dependencyMap"],[1073,42,1099,16],[1073,71,1099,24,"checkForInput"],[1073,84,1099,37],[1073,85,1099,38,"inputs"],[1073,91,1099,44],[1073,93,1099,46,"inputIndex"],[1073,103,1099,56],[1073,104,1099,57],[1074,4,1100,2],[1074,8,1100,6],[1074,9,1100,7,"input"],[1074,14,1100,12],[1074,15,1100,13,"bip32Derivation"],[1074,30,1100,28],[1074,34,1100,32,"input"],[1074,39,1100,37],[1074,40,1100,38,"bip32Derivation"],[1074,55,1100,53],[1074,56,1100,54,"length"],[1074,62,1100,60],[1074,67,1100,65],[1074,68,1100,66],[1074,70,1100,68],[1075,6,1101,4],[1075,12,1101,10],[1075,16,1101,14,"Error"],[1075,21,1101,19],[1075,22,1101,20],[1075,60,1101,58],[1075,61,1101,59],[1076,4,1102,2],[1077,4,1103,2],[1077,8,1103,8,"myDerivations"],[1077,21,1103,21],[1077,24,1103,24,"input"],[1077,29,1103,29],[1077,30,1103,30,"bip32Derivation"],[1077,45,1103,45],[1077,46,1104,5,"map"],[1077,49,1104,8],[1077,50,1104,9],[1077,60,1104,9,"bipDv"],[1077,65,1104,14],[1077,67,1104,18],[1078,6,1105,6],[1078,10,1105,10,"bipDv"],[1078,15,1105,15],[1078,16,1105,16,"masterFingerprint"],[1078,33,1105,33],[1078,34,1105,34,"equals"],[1078,40,1105,40],[1078,41,1105,41,"hdKeyPair"],[1078,50,1105,50],[1078,51,1105,51,"fingerprint"],[1078,62,1105,62],[1078,63,1105,63],[1078,65,1105,65],[1079,8,1106,8],[1079,15,1106,15,"bipDv"],[1079,20,1106,20],[1080,6,1107,6],[1080,7,1107,7],[1080,13,1107,13],[1081,8,1108,8],[1082,6,1109,6],[1083,4,1110,4],[1083,5,1110,5],[1083,6,1110,6],[1083,7,1111,5,"filter"],[1083,13,1111,11],[1083,14,1111,12],[1083,24,1111,12,"v"],[1083,25,1111,13],[1084,6,1111,13],[1084,13,1111,17],[1084,14,1111,18],[1084,15,1111,19,"v"],[1084,16,1111,20],[1085,4,1111,20],[1085,6,1111,21],[1086,4,1112,2],[1086,8,1112,6,"myDerivations"],[1086,21,1112,19],[1086,22,1112,20,"length"],[1086,28,1112,26],[1086,33,1112,31],[1086,34,1112,32],[1086,36,1112,34],[1087,6,1113,4],[1087,12,1113,10],[1087,16,1113,14,"Error"],[1087,21,1113,19],[1087,22,1114,6],[1087,100,1115,4],[1087,101,1115,5],[1088,4,1116,2],[1089,4,1117,2],[1089,8,1117,8,"signers"],[1089,15,1117,15],[1089,18,1117,18,"myDerivations"],[1089,31,1117,31],[1089,32,1117,32,"map"],[1089,35,1117,35],[1089,36,1117,36],[1089,46,1117,36,"bipDv"],[1089,51,1117,41],[1089,53,1117,45],[1090,6,1118,4],[1090,10,1118,10,"node"],[1090,14,1118,14],[1090,17,1118,17,"hdKeyPair"],[1090,26,1118,26],[1090,27,1118,27,"derivePath"],[1090,37,1118,37],[1090,38,1118,38,"bipDv"],[1090,43,1118,43],[1090,44,1118,44,"path"],[1090,48,1118,48],[1090,49,1118,49],[1091,6,1119,4],[1091,10,1119,8],[1091,11,1119,9,"bipDv"],[1091,16,1119,14],[1091,17,1119,15,"pubkey"],[1091,23,1119,21],[1091,24,1119,22,"equals"],[1091,30,1119,28],[1091,31,1119,29,"node"],[1091,35,1119,33],[1091,36,1119,34,"publicKey"],[1091,45,1119,43],[1091,46,1119,44],[1091,48,1119,46],[1092,8,1120,6],[1092,14,1120,12],[1092,18,1120,16,"Error"],[1092,23,1120,21],[1092,24,1120,22],[1092,62,1120,60],[1092,63,1120,61],[1093,6,1121,4],[1094,6,1122,4],[1094,13,1122,11,"node"],[1094,17,1122,15],[1095,4,1123,2],[1095,5,1123,3],[1095,6,1123,4],[1096,4,1124,2],[1096,11,1124,9,"signers"],[1096,18,1124,16],[1097,2,1125,0],[1098,2,1126,0],[1098,11,1126,9,"getSortedSigs"],[1098,24,1126,22,"getSortedSigs"],[1098,25,1126,23,"script"],[1098,31,1126,29],[1098,33,1126,31,"partialSig"],[1098,43,1126,41],[1098,45,1126,43],[1099,4,1127,2],[1099,8,1127,8,"p2ms"],[1099,12,1127,12],[1099,15,1127,15,"_$$_REQUIRE"],[1099,26,1127,15],[1099,27,1127,15,"_dependencyMap"],[1099,41,1127,15],[1099,61,1127,24,"p2ms"],[1099,65,1127,28],[1099,66,1127,29],[1100,6,1127,31,"output"],[1100,12,1127,37],[1100,14,1127,39,"script"],[1101,4,1127,46],[1101,5,1127,47],[1101,6,1127,48],[1102,4,1128,2],[1103,4,1129,2],[1103,11,1129,9,"p2ms"],[1103,15,1129,13],[1103,16,1129,14,"pubkeys"],[1103,23,1129,21],[1103,24,1130,5,"map"],[1103,27,1130,8],[1103,28,1130,9],[1103,38,1130,9,"pk"],[1103,40,1130,11],[1103,42,1130,15],[1104,6,1131,6],[1105,6,1132,6],[1105,13,1132,13],[1105,14,1133,8,"partialSig"],[1105,24,1133,18],[1105,25,1133,19,"filter"],[1105,31,1133,25],[1105,32,1133,26],[1105,42,1133,26,"ps"],[1105,44,1133,28],[1105,46,1133,32],[1106,8,1134,10],[1106,15,1134,17,"ps"],[1106,17,1134,19],[1106,18,1134,20,"pubkey"],[1106,24,1134,26],[1106,25,1134,27,"equals"],[1106,31,1134,33],[1106,32,1134,34,"pk"],[1106,34,1134,36],[1106,35,1134,37],[1107,6,1135,8],[1107,7,1135,9],[1107,8,1135,10],[1107,9,1135,11],[1107,10,1135,12],[1107,11,1135,13],[1107,15,1135,17],[1107,16,1135,18],[1107,17,1135,19],[1107,19,1136,8,"signature"],[1107,28,1136,17],[1108,6,1137,6],[1109,6,1138,6],[1110,4,1139,4],[1110,5,1139,5],[1110,6,1139,6],[1110,7,1140,5,"filter"],[1110,13,1140,11],[1110,14,1140,12],[1110,24,1140,12,"v"],[1110,25,1140,13],[1111,6,1140,13],[1111,13,1140,17],[1111,14,1140,18],[1111,15,1140,19,"v"],[1111,16,1140,20],[1112,4,1140,20],[1112,6,1140,21],[1113,2,1141,0],[1114,2,1142,0],[1114,11,1142,9,"scriptWitnessToWitnessStack"],[1114,38,1142,36,"scriptWitnessToWitnessStack"],[1114,39,1142,37,"buffer"],[1114,45,1142,43],[1114,47,1142,45],[1115,4,1143,2],[1115,8,1143,6,"offset"],[1115,14,1143,12],[1115,17,1143,15],[1115,18,1143,16],[1116,4,1144,2],[1116,13,1144,11,"readSlice"],[1116,22,1144,20,"readSlice"],[1116,23,1144,21,"n"],[1116,24,1144,22],[1116,26,1144,24],[1117,6,1145,4,"offset"],[1117,12,1145,10],[1117,16,1145,14,"n"],[1117,17,1145,15],[1118,6,1146,4],[1118,13,1146,11,"buffer"],[1118,19,1146,17],[1118,20,1146,18,"slice"],[1118,25,1146,23],[1118,26,1146,24,"offset"],[1118,32,1146,30],[1118,35,1146,33,"n"],[1118,36,1146,34],[1118,38,1146,36,"offset"],[1118,44,1146,42],[1118,45,1146,43],[1119,4,1147,2],[1120,4,1148,2],[1120,13,1148,11,"readVarInt"],[1120,23,1148,21,"readVarInt"],[1120,24,1148,21],[1120,26,1148,24],[1121,6,1149,4],[1121,10,1149,10,"vi"],[1121,12,1149,12],[1121,15,1149,15,"_$$_REQUIRE"],[1121,26,1149,15],[1121,27,1149,15,"_dependencyMap"],[1121,41,1149,15],[1121,82,1149,23,"decode"],[1121,88,1149,29],[1121,89,1149,30,"buffer"],[1121,95,1149,36],[1121,97,1149,38,"offset"],[1121,103,1149,44],[1121,104,1149,45],[1122,6,1150,4,"offset"],[1122,12,1150,10],[1122,16,1150,14,"_$$_REQUIRE"],[1122,27,1150,14],[1122,28,1150,14,"_dependencyMap"],[1122,42,1150,14],[1122,83,1150,22,"decode"],[1122,89,1150,28],[1122,90,1150,29,"bytes"],[1122,95,1150,34],[1123,6,1151,4],[1123,13,1151,11,"vi"],[1123,15,1151,13],[1124,4,1152,2],[1125,4,1153,2],[1125,13,1153,11,"readVarSlice"],[1125,25,1153,23,"readVarSlice"],[1125,26,1153,23],[1125,28,1153,26],[1126,6,1154,4],[1126,13,1154,11,"readSlice"],[1126,22,1154,20],[1126,23,1154,21,"readVarInt"],[1126,33,1154,31],[1126,34,1154,32],[1126,35,1154,33],[1126,36,1154,34],[1127,4,1155,2],[1128,4,1156,2],[1128,13,1156,11,"readVector"],[1128,23,1156,21,"readVector"],[1128,24,1156,21],[1128,26,1156,24],[1129,6,1157,4],[1129,10,1157,10,"count"],[1129,15,1157,15],[1129,18,1157,18,"readVarInt"],[1129,28,1157,28],[1129,29,1157,29],[1129,30,1157,30],[1130,6,1158,4],[1130,10,1158,10,"vector"],[1130,16,1158,16],[1130,19,1158,19],[1130,21,1158,21],[1131,6,1159,4],[1131,11,1159,9],[1131,15,1159,13,"i"],[1131,16,1159,14],[1131,19,1159,17],[1131,20,1159,18],[1131,22,1159,20,"i"],[1131,23,1159,21],[1131,26,1159,24,"count"],[1131,31,1159,29],[1131,33,1159,31,"i"],[1131,34,1159,32],[1131,36,1159,34],[1131,38,1159,36,"vector"],[1131,44,1159,42],[1131,45,1159,43,"push"],[1131,49,1159,47],[1131,50,1159,48,"readVarSlice"],[1131,62,1159,60],[1131,63,1159,61],[1131,64,1159,62],[1131,65,1159,63],[1132,6,1160,4],[1132,13,1160,11,"vector"],[1132,19,1160,17],[1133,4,1161,2],[1134,4,1162,2],[1134,11,1162,9,"readVector"],[1134,21,1162,19],[1134,22,1162,20],[1134,23,1162,21],[1135,2,1163,0],[1136,2,1164,0],[1136,11,1164,9,"sighashTypeToString"],[1136,30,1164,28,"sighashTypeToString"],[1136,31,1164,29,"sighashType"],[1136,42,1164,40],[1136,44,1164,42],[1137,4,1165,2],[1137,8,1165,6,"text"],[1137,12,1165,10],[1137,15,1166,4,"sighashType"],[1137,26,1166,15],[1137,29,1166,18,"_$$_REQUIRE"],[1137,40,1166,18],[1137,41,1166,18,"_dependencyMap"],[1137,55,1166,18],[1137,78,1166,32,"Transaction"],[1137,89,1166,43],[1137,90,1166,44,"SIGHASH_ANYONECANPAY"],[1137,110,1166,64],[1137,113,1167,8],[1137,138,1167,33],[1137,141,1168,8],[1137,143,1168,10],[1138,4,1169,2],[1138,8,1169,8,"sigMod"],[1138,14,1169,14],[1138,17,1169,17,"sighashType"],[1138,28,1169,28],[1138,31,1169,31],[1138,35,1169,35],[1139,4,1170,2],[1139,12,1170,10,"sigMod"],[1139,18,1170,16],[1140,6,1171,4],[1140,11,1171,9,"_$$_REQUIRE"],[1140,22,1171,9],[1140,23,1171,9,"_dependencyMap"],[1140,37,1171,9],[1140,60,1171,23,"Transaction"],[1140,71,1171,34],[1140,72,1171,35,"SIGHASH_ALL"],[1140,83,1171,46],[1141,8,1172,6,"text"],[1141,12,1172,10],[1141,16,1172,14],[1141,29,1172,27],[1142,8,1173,6],[1143,6,1174,4],[1143,11,1174,9,"_$$_REQUIRE"],[1143,22,1174,9],[1143,23,1174,9,"_dependencyMap"],[1143,37,1174,9],[1143,60,1174,23,"Transaction"],[1143,71,1174,34],[1143,72,1174,35,"SIGHASH_SINGLE"],[1143,86,1174,49],[1144,8,1175,6,"text"],[1144,12,1175,10],[1144,16,1175,14],[1144,32,1175,30],[1145,8,1176,6],[1146,6,1177,4],[1146,11,1177,9,"_$$_REQUIRE"],[1146,22,1177,9],[1146,23,1177,9,"_dependencyMap"],[1146,37,1177,9],[1146,60,1177,23,"Transaction"],[1146,71,1177,34],[1146,72,1177,35,"SIGHASH_NONE"],[1146,84,1177,47],[1147,8,1178,6,"text"],[1147,12,1178,10],[1147,16,1178,14],[1147,30,1178,28],[1148,8,1179,6],[1149,4,1180,2],[1150,4,1181,2],[1150,11,1181,9,"text"],[1150,15,1181,13],[1151,2,1182,0],[1152,2,1183,0],[1152,11,1183,9,"witnessStackToScriptWitness"],[1152,38,1183,36,"witnessStackToScriptWitness"],[1152,39,1183,37,"witness"],[1152,46,1183,44],[1152,48,1183,46],[1153,4,1184,2],[1153,8,1184,6,"buffer"],[1153,14,1184,12],[1153,17,1184,15,"Buffer"],[1153,23,1184,21],[1153,24,1184,22,"allocUnsafe"],[1153,35,1184,33],[1153,36,1184,34],[1153,37,1184,35],[1153,38,1184,36],[1154,4,1185,2],[1154,13,1185,11,"writeSlice"],[1154,23,1185,21,"writeSlice"],[1154,24,1185,22,"slice"],[1154,29,1185,27],[1154,31,1185,29],[1155,6,1186,4,"buffer"],[1155,12,1186,10],[1155,15,1186,13,"Buffer"],[1155,21,1186,19],[1155,22,1186,20,"concat"],[1155,28,1186,26],[1155,29,1186,27],[1155,30,1186,28,"buffer"],[1155,36,1186,34],[1155,38,1186,36,"Buffer"],[1155,44,1186,42],[1155,45,1186,43,"from"],[1155,49,1186,47],[1155,50,1186,48,"slice"],[1155,55,1186,53],[1155,56,1186,54],[1155,57,1186,55],[1155,58,1186,56],[1156,4,1187,2],[1157,4,1188,2],[1157,13,1188,11,"writeVarInt"],[1157,24,1188,22,"writeVarInt"],[1157,25,1188,23,"i"],[1157,26,1188,24],[1157,28,1188,26],[1158,6,1189,4],[1158,10,1189,10,"currentLen"],[1158,20,1189,20],[1158,23,1189,23,"buffer"],[1158,29,1189,29],[1158,30,1189,30,"length"],[1158,36,1189,36],[1159,6,1190,4],[1159,10,1190,10,"varintLen"],[1159,19,1190,19],[1159,22,1190,22,"_$$_REQUIRE"],[1159,33,1190,22],[1159,34,1190,22,"_dependencyMap"],[1159,48,1190,22],[1159,89,1190,30,"encodingLength"],[1159,103,1190,44],[1159,104,1190,45,"i"],[1159,105,1190,46],[1159,106,1190,47],[1160,6,1191,4,"buffer"],[1160,12,1191,10],[1160,15,1191,13,"Buffer"],[1160,21,1191,19],[1160,22,1191,20,"concat"],[1160,28,1191,26],[1160,29,1191,27],[1160,30,1191,28,"buffer"],[1160,36,1191,34],[1160,38,1191,36,"Buffer"],[1160,44,1191,42],[1160,45,1191,43,"allocUnsafe"],[1160,56,1191,54],[1160,57,1191,55,"varintLen"],[1160,66,1191,64],[1160,67,1191,65],[1160,68,1191,66],[1160,69,1191,67],[1161,6,1192,4,"_$$_REQUIRE"],[1161,17,1192,4],[1161,18,1192,4,"_dependencyMap"],[1161,32,1192,4],[1161,73,1192,12,"encode"],[1161,79,1192,18],[1161,80,1192,19,"i"],[1161,81,1192,20],[1161,83,1192,22,"buffer"],[1161,89,1192,28],[1161,91,1192,30,"currentLen"],[1161,101,1192,40],[1161,102,1192,41],[1162,4,1193,2],[1163,4,1194,2],[1163,13,1194,11,"writeVarSlice"],[1163,26,1194,24,"writeVarSlice"],[1163,27,1194,25,"slice"],[1163,32,1194,30],[1163,34,1194,32],[1164,6,1195,4,"writeVarInt"],[1164,17,1195,15],[1164,18,1195,16,"slice"],[1164,23,1195,21],[1164,24,1195,22,"length"],[1164,30,1195,28],[1164,31,1195,29],[1165,6,1196,4,"writeSlice"],[1165,16,1196,14],[1165,17,1196,15,"slice"],[1165,22,1196,20],[1165,23,1196,21],[1166,4,1197,2],[1167,4,1198,2],[1167,13,1198,11,"writeVector"],[1167,24,1198,22,"writeVector"],[1167,25,1198,23,"vector"],[1167,31,1198,29],[1167,33,1198,31],[1168,6,1199,4,"writeVarInt"],[1168,17,1199,15],[1168,18,1199,16,"vector"],[1168,24,1199,22],[1168,25,1199,23,"length"],[1168,31,1199,29],[1168,32,1199,30],[1169,6,1200,4,"vector"],[1169,12,1200,10],[1169,13,1200,11,"forEach"],[1169,20,1200,18],[1169,21,1200,19,"writeVarSlice"],[1169,34,1200,32],[1169,35,1200,33],[1170,4,1201,2],[1171,4,1202,2,"writeVector"],[1171,15,1202,13],[1171,16,1202,14,"witness"],[1171,23,1202,21],[1171,24,1202,22],[1172,4,1203,2],[1172,11,1203,9,"buffer"],[1172,17,1203,15],[1173,2,1204,0],[1174,2,1205,0],[1174,11,1205,9,"addNonWitnessTxCache"],[1174,31,1205,29,"addNonWitnessTxCache"],[1174,32,1205,30,"cache"],[1174,37,1205,35],[1174,39,1205,37,"input"],[1174,44,1205,42],[1174,46,1205,44,"inputIndex"],[1174,56,1205,54],[1174,58,1205,56],[1175,4,1206,2,"cache"],[1175,9,1206,7],[1175,10,1206,8,"__NON_WITNESS_UTXO_BUF_CACHE"],[1175,38,1206,36],[1175,39,1206,37,"inputIndex"],[1175,49,1206,47],[1175,50,1206,48],[1175,53,1206,51,"input"],[1175,58,1206,56],[1175,59,1206,57,"nonWitnessUtxo"],[1175,73,1206,71],[1176,4,1207,2],[1176,8,1207,8,"tx"],[1176,10,1207,10],[1176,13,1207,13,"_$$_REQUIRE"],[1176,24,1207,13],[1176,25,1207,13,"_dependencyMap"],[1176,39,1207,13],[1176,62,1207,27,"Transaction"],[1176,73,1207,38],[1176,74,1207,39,"fromBuffer"],[1176,84,1207,49],[1176,85,1207,50,"input"],[1176,90,1207,55],[1176,91,1207,56,"nonWitnessUtxo"],[1176,105,1207,70],[1176,106,1207,71],[1177,4,1208,2,"cache"],[1177,9,1208,7],[1177,10,1208,8,"__NON_WITNESS_UTXO_TX_CACHE"],[1177,37,1208,35],[1177,38,1208,36,"inputIndex"],[1177,48,1208,46],[1177,49,1208,47],[1177,52,1208,50,"tx"],[1177,54,1208,52],[1178,4,1209,2],[1178,8,1209,8,"self"],[1178,12,1209,12],[1178,15,1209,15,"cache"],[1178,20,1209,20],[1179,4,1210,2],[1179,8,1210,8,"selfIndex"],[1179,17,1210,17],[1179,20,1210,20,"inputIndex"],[1179,30,1210,30],[1180,4,1211,2],[1180,11,1211,9,"input"],[1180,16,1211,14],[1180,17,1211,15,"nonWitnessUtxo"],[1180,31,1211,29],[1181,4,1212,2,"Object"],[1181,10,1212,8],[1181,11,1212,9,"defineProperty"],[1181,25,1212,23],[1181,26,1212,24,"input"],[1181,31,1212,29],[1181,33,1212,31],[1181,49,1212,47],[1181,51,1212,49],[1182,6,1213,4,"enumerable"],[1182,16,1213,14],[1182,18,1213,16],[1182,22,1213,20],[1183,6,1214,4,"get"],[1183,9,1214,7],[1183,20,1214,4,"get"],[1183,23,1214,7,"get"],[1183,24,1214,7],[1183,26,1214,10],[1184,8,1215,6],[1184,12,1215,12,"buf"],[1184,15,1215,15],[1184,18,1215,18,"self"],[1184,22,1215,22],[1184,23,1215,23,"__NON_WITNESS_UTXO_BUF_CACHE"],[1184,51,1215,51],[1184,52,1215,52,"selfIndex"],[1184,61,1215,61],[1184,62,1215,62],[1185,8,1216,6],[1185,12,1216,12,"txCache"],[1185,19,1216,19],[1185,22,1216,22,"self"],[1185,26,1216,26],[1185,27,1216,27,"__NON_WITNESS_UTXO_TX_CACHE"],[1185,54,1216,54],[1185,55,1216,55,"selfIndex"],[1185,64,1216,64],[1185,65,1216,65],[1186,8,1217,6],[1186,12,1217,10,"buf"],[1186,15,1217,13],[1186,20,1217,18,"undefined"],[1186,29,1217,27],[1186,31,1217,29],[1187,10,1218,8],[1187,17,1218,15,"buf"],[1187,20,1218,18],[1188,8,1219,6],[1188,9,1219,7],[1188,15,1219,13],[1189,10,1220,8],[1189,14,1220,14,"newBuf"],[1189,20,1220,20],[1189,23,1220,23,"txCache"],[1189,30,1220,30],[1189,31,1220,31,"toBuffer"],[1189,39,1220,39],[1189,40,1220,40],[1189,41,1220,41],[1190,10,1221,8,"self"],[1190,14,1221,12],[1190,15,1221,13,"__NON_WITNESS_UTXO_BUF_CACHE"],[1190,43,1221,41],[1190,44,1221,42,"selfIndex"],[1190,53,1221,51],[1190,54,1221,52],[1190,57,1221,55,"newBuf"],[1190,63,1221,61],[1191,10,1222,8],[1191,17,1222,15,"newBuf"],[1191,23,1222,21],[1192,8,1223,6],[1193,6,1224,4],[1193,7,1224,5],[1194,6,1225,4,"set"],[1194,9,1225,7],[1194,20,1225,4,"set"],[1194,23,1225,7,"set"],[1194,24,1225,8,"data"],[1194,28,1225,12],[1194,30,1225,14],[1195,8,1226,6,"self"],[1195,12,1226,10],[1195,13,1226,11,"__NON_WITNESS_UTXO_BUF_CACHE"],[1195,41,1226,39],[1195,42,1226,40,"selfIndex"],[1195,51,1226,49],[1195,52,1226,50],[1195,55,1226,53,"data"],[1195,59,1226,57],[1196,6,1227,4],[1197,4,1228,2],[1197,5,1228,3],[1197,6,1228,4],[1198,2,1229,0],[1199,2,1230,0],[1199,11,1230,9,"inputFinalizeGetAmts"],[1199,31,1230,29,"inputFinalizeGetAmts"],[1199,32,1230,30,"inputs"],[1199,38,1230,36],[1199,40,1230,38,"tx"],[1199,42,1230,40],[1199,44,1230,42,"cache"],[1199,49,1230,47],[1199,51,1230,49,"mustFinalize"],[1199,63,1230,61],[1199,65,1230,63],[1200,4,1231,2],[1200,8,1231,6,"inputAmount"],[1200,19,1231,17],[1200,22,1231,20],[1200,23,1231,21],[1201,4,1232,2,"inputs"],[1201,10,1232,8],[1201,11,1232,9,"forEach"],[1201,18,1232,16],[1201,19,1232,17],[1201,29,1232,18,"input"],[1201,34,1232,23],[1201,36,1232,25,"idx"],[1201,39,1232,28],[1201,41,1232,33],[1202,6,1233,4],[1202,10,1233,8,"mustFinalize"],[1202,22,1233,20],[1202,26,1233,24,"input"],[1202,31,1233,29],[1202,32,1233,30,"finalScriptSig"],[1202,46,1233,44],[1202,48,1234,6,"tx"],[1202,50,1234,8],[1202,51,1234,9,"ins"],[1202,54,1234,12],[1202,55,1234,13,"idx"],[1202,58,1234,16],[1202,59,1234,17],[1202,60,1234,18,"script"],[1202,66,1234,24],[1202,69,1234,27,"input"],[1202,74,1234,32],[1202,75,1234,33,"finalScriptSig"],[1202,89,1234,47],[1203,6,1235,4],[1203,10,1235,8,"mustFinalize"],[1203,22,1235,20],[1203,26,1235,24,"input"],[1203,31,1235,29],[1203,32,1235,30,"finalScriptWitness"],[1203,50,1235,48],[1203,52,1235,50],[1204,8,1236,6,"tx"],[1204,10,1236,8],[1204,11,1236,9,"ins"],[1204,14,1236,12],[1204,15,1236,13,"idx"],[1204,18,1236,16],[1204,19,1236,17],[1204,20,1236,18,"witness"],[1204,27,1236,25],[1204,30,1236,28,"scriptWitnessToWitnessStack"],[1204,57,1236,55],[1204,58,1237,8,"input"],[1204,63,1237,13],[1204,64,1237,14,"finalScriptWitness"],[1204,82,1238,6],[1204,83,1238,7],[1205,6,1239,4],[1206,6,1240,4],[1206,10,1240,8,"input"],[1206,15,1240,13],[1206,16,1240,14,"witnessUtxo"],[1206,27,1240,25],[1206,29,1240,27],[1207,8,1241,6,"inputAmount"],[1207,19,1241,17],[1207,23,1241,21,"input"],[1207,28,1241,26],[1207,29,1241,27,"witnessUtxo"],[1207,40,1241,38],[1207,41,1241,39,"value"],[1207,46,1241,44],[1208,6,1242,4],[1208,7,1242,5],[1208,13,1242,11],[1208,17,1242,15,"input"],[1208,22,1242,20],[1208,23,1242,21,"nonWitnessUtxo"],[1208,37,1242,35],[1208,39,1242,37],[1209,8,1243,6],[1209,12,1243,12,"nwTx"],[1209,16,1243,16],[1209,19,1243,19,"nonWitnessUtxoTxFromCache"],[1209,44,1243,44],[1209,45,1243,45,"cache"],[1209,50,1243,50],[1209,52,1243,52,"input"],[1209,57,1243,57],[1209,59,1243,59,"idx"],[1209,62,1243,62],[1209,63,1243,63],[1210,8,1244,6],[1210,12,1244,12,"vout"],[1210,16,1244,16],[1210,19,1244,19,"tx"],[1210,21,1244,21],[1210,22,1244,22,"ins"],[1210,25,1244,25],[1210,26,1244,26,"idx"],[1210,29,1244,29],[1210,30,1244,30],[1210,31,1244,31,"index"],[1210,36,1244,36],[1211,8,1245,6],[1211,12,1245,12,"out"],[1211,15,1245,15],[1211,18,1245,18,"nwTx"],[1211,22,1245,22],[1211,23,1245,23,"outs"],[1211,27,1245,27],[1211,28,1245,28,"vout"],[1211,32,1245,32],[1211,33,1245,33],[1212,8,1246,6,"inputAmount"],[1212,19,1246,17],[1212,23,1246,21,"out"],[1212,26,1246,24],[1212,27,1246,25,"value"],[1212,32,1246,30],[1213,6,1247,4],[1214,4,1248,2],[1214,5,1248,3],[1214,6,1248,4],[1215,4,1249,2],[1215,8,1249,8,"outputAmount"],[1215,20,1249,20],[1215,23,1249,23,"tx"],[1215,25,1249,25],[1215,26,1249,26,"outs"],[1215,30,1249,30],[1215,31,1249,31,"reduce"],[1215,37,1249,37],[1215,38,1249,38],[1215,48,1249,39,"total"],[1215,53,1249,44],[1215,55,1249,46,"o"],[1215,56,1249,47],[1216,6,1249,47],[1216,13,1249,52,"total"],[1216,18,1249,57],[1216,21,1249,60,"o"],[1216,22,1249,61],[1216,23,1249,62,"value"],[1216,28,1249,67],[1217,4,1249,67],[1217,7,1249,69],[1217,8,1249,70],[1217,9,1249,71],[1218,4,1250,2],[1218,8,1250,8,"fee"],[1218,11,1250,11],[1218,14,1250,14,"inputAmount"],[1218,25,1250,25],[1218,28,1250,28,"outputAmount"],[1218,40,1250,40],[1219,4,1251,2],[1219,8,1251,6,"fee"],[1219,11,1251,9],[1219,14,1251,12],[1219,15,1251,13],[1219,17,1251,15],[1220,6,1252,4],[1220,12,1252,10],[1220,16,1252,14,"Error"],[1220,21,1252,19],[1220,22,1252,20],[1220,61,1252,59],[1220,62,1252,60],[1221,4,1253,2],[1222,4,1254,2],[1222,8,1254,8,"bytes"],[1222,13,1254,13],[1222,16,1254,16,"tx"],[1222,18,1254,18],[1222,19,1254,19,"virtualSize"],[1222,30,1254,30],[1222,31,1254,31],[1222,32,1254,32],[1223,4,1255,2,"cache"],[1223,9,1255,7],[1223,10,1255,8,"__FEE"],[1223,15,1255,13],[1223,18,1255,16,"fee"],[1223,21,1255,19],[1224,4,1256,2,"cache"],[1224,9,1256,7],[1224,10,1256,8,"__EXTRACTED_TX"],[1224,24,1256,22],[1224,27,1256,25,"tx"],[1224,29,1256,27],[1225,4,1257,2,"cache"],[1225,9,1257,7],[1225,10,1257,8,"__FEE_RATE"],[1225,20,1257,18],[1225,23,1257,21,"Math"],[1225,27,1257,25],[1225,28,1257,26,"floor"],[1225,33,1257,31],[1225,34,1257,32,"fee"],[1225,37,1257,35],[1225,40,1257,38,"bytes"],[1225,45,1257,43],[1225,46,1257,44],[1226,2,1258,0],[1227,2,1259,0],[1227,11,1259,9,"nonWitnessUtxoTxFromCache"],[1227,36,1259,34,"nonWitnessUtxoTxFromCache"],[1227,37,1259,35,"cache"],[1227,42,1259,40],[1227,44,1259,42,"input"],[1227,49,1259,47],[1227,51,1259,49,"inputIndex"],[1227,61,1259,59],[1227,63,1259,61],[1228,4,1260,2],[1228,8,1260,8,"c"],[1228,9,1260,9],[1228,12,1260,12,"cache"],[1228,17,1260,17],[1228,18,1260,18,"__NON_WITNESS_UTXO_TX_CACHE"],[1228,45,1260,45],[1229,4,1261,2],[1229,8,1261,6],[1229,9,1261,7,"c"],[1229,10,1261,8],[1229,11,1261,9,"inputIndex"],[1229,21,1261,19],[1229,22,1261,20],[1229,24,1261,22],[1230,6,1262,4,"addNonWitnessTxCache"],[1230,26,1262,24],[1230,27,1262,25,"cache"],[1230,32,1262,30],[1230,34,1262,32,"input"],[1230,39,1262,37],[1230,41,1262,39,"inputIndex"],[1230,51,1262,49],[1230,52,1262,50],[1231,4,1263,2],[1232,4,1264,2],[1232,11,1264,9,"c"],[1232,12,1264,10],[1232,13,1264,11,"inputIndex"],[1232,23,1264,21],[1232,24,1264,22],[1233,2,1265,0],[1234,2,1266,0],[1234,11,1266,9,"getScriptFromUtxo"],[1234,28,1266,26,"getScriptFromUtxo"],[1234,29,1266,27,"inputIndex"],[1234,39,1266,37],[1234,41,1266,39,"input"],[1234,46,1266,44],[1234,48,1266,46,"cache"],[1234,53,1266,51],[1234,55,1266,53],[1235,4,1267,2],[1235,8,1267,6,"input"],[1235,13,1267,11],[1235,14,1267,12,"witnessUtxo"],[1235,25,1267,23],[1235,30,1267,28,"undefined"],[1235,39,1267,37],[1235,41,1267,39],[1236,6,1268,4],[1236,13,1268,11,"input"],[1236,18,1268,16],[1236,19,1268,17,"witnessUtxo"],[1236,30,1268,28],[1236,31,1268,29,"script"],[1236,37,1268,35],[1237,4,1269,2],[1237,5,1269,3],[1237,11,1269,9],[1237,15,1269,13,"input"],[1237,20,1269,18],[1237,21,1269,19,"nonWitnessUtxo"],[1237,35,1269,33],[1237,40,1269,38,"undefined"],[1237,49,1269,47],[1237,51,1269,49],[1238,6,1270,4],[1238,10,1270,10,"nonWitnessUtxoTx"],[1238,26,1270,26],[1238,29,1270,29,"nonWitnessUtxoTxFromCache"],[1238,54,1270,54],[1238,55,1271,6,"cache"],[1238,60,1271,11],[1238,62,1272,6,"input"],[1238,67,1272,11],[1238,69,1273,6,"inputIndex"],[1238,79,1274,4],[1238,80,1274,5],[1239,6,1275,4],[1239,13,1275,11,"nonWitnessUtxoTx"],[1239,29,1275,27],[1239,30,1275,28,"outs"],[1239,34,1275,32],[1239,35,1275,33,"cache"],[1239,40,1275,38],[1239,41,1275,39,"__TX"],[1239,45,1275,43],[1239,46,1275,44,"ins"],[1239,49,1275,47],[1239,50,1275,48,"inputIndex"],[1239,60,1275,58],[1239,61,1275,59],[1239,62,1275,60,"index"],[1239,67,1275,65],[1239,68,1275,66],[1239,69,1275,67,"script"],[1239,75,1275,73],[1240,4,1276,2],[1240,5,1276,3],[1240,11,1276,9],[1241,6,1277,4],[1241,12,1277,10],[1241,16,1277,14,"Error"],[1241,21,1277,19],[1241,22,1277,20],[1241,68,1277,66],[1241,69,1277,67],[1242,4,1278,2],[1243,2,1279,0],[1244,2,1280,0],[1244,11,1280,9,"pubkeyInInput"],[1244,24,1280,22,"pubkeyInInput"],[1244,25,1280,23,"pubkey"],[1244,31,1280,29],[1244,33,1280,31,"input"],[1244,38,1280,36],[1244,40,1280,38,"inputIndex"],[1244,50,1280,48],[1244,52,1280,50,"cache"],[1244,57,1280,55],[1244,59,1280,57],[1245,4,1281,2],[1245,8,1281,8,"script"],[1245,14,1281,14],[1245,17,1281,17,"getScriptFromUtxo"],[1245,34,1281,34],[1245,35,1281,35,"inputIndex"],[1245,45,1281,45],[1245,47,1281,47,"input"],[1245,52,1281,52],[1245,54,1281,54,"cache"],[1245,59,1281,59],[1245,60,1281,60],[1246,4,1282,2],[1246,8,1282,2,"_getMeaningfulScript2"],[1246,29,1282,2],[1246,32,1282,31,"getMeaningfulScript"],[1246,51,1282,50],[1246,52,1283,4,"script"],[1246,58,1283,10],[1246,60,1284,4,"inputIndex"],[1246,70,1284,14],[1246,72,1285,4],[1246,79,1285,11],[1246,81,1286,4,"input"],[1246,86,1286,9],[1246,87,1286,10,"redeemScript"],[1246,99,1286,22],[1246,101,1287,4,"input"],[1246,106,1287,9],[1246,107,1287,10,"witnessScript"],[1246,120,1288,2],[1246,121,1288,3],[1247,6,1282,10,"meaningfulScript"],[1247,22,1282,26],[1247,25,1282,26,"_getMeaningfulScript2"],[1247,46,1282,26],[1247,47,1282,10,"meaningfulScript"],[1247,63,1282,26],[1248,4,1289,2],[1248,11,1289,9,"pubkeyInScript"],[1248,25,1289,23],[1248,26,1289,24,"pubkey"],[1248,32,1289,30],[1248,34,1289,32,"meaningfulScript"],[1248,50,1289,48],[1248,51,1289,49],[1249,2,1290,0],[1250,2,1291,0],[1250,11,1291,9,"pubkeyInOutput"],[1250,25,1291,23,"pubkeyInOutput"],[1250,26,1291,24,"pubkey"],[1250,32,1291,30],[1250,34,1291,32,"output"],[1250,40,1291,38],[1250,42,1291,40,"outputIndex"],[1250,53,1291,51],[1250,55,1291,53,"cache"],[1250,60,1291,58],[1250,62,1291,60],[1251,4,1292,2],[1251,8,1292,8,"script"],[1251,14,1292,14],[1251,17,1292,17,"cache"],[1251,22,1292,22],[1251,23,1292,23,"__TX"],[1251,27,1292,27],[1251,28,1292,28,"outs"],[1251,32,1292,32],[1251,33,1292,33,"outputIndex"],[1251,44,1292,44],[1251,45,1292,45],[1251,46,1292,46,"script"],[1251,52,1292,52],[1252,4,1293,2],[1252,8,1293,2,"_getMeaningfulScript3"],[1252,29,1293,2],[1252,32,1293,31,"getMeaningfulScript"],[1252,51,1293,50],[1252,52,1294,4,"script"],[1252,58,1294,10],[1252,60,1295,4,"outputIndex"],[1252,71,1295,15],[1252,73,1296,4],[1252,81,1296,12],[1252,83,1297,4,"output"],[1252,89,1297,10],[1252,90,1297,11,"redeemScript"],[1252,102,1297,23],[1252,104,1298,4,"output"],[1252,110,1298,10],[1252,111,1298,11,"witnessScript"],[1252,124,1299,2],[1252,125,1299,3],[1253,6,1293,10,"meaningfulScript"],[1253,22,1293,26],[1253,25,1293,26,"_getMeaningfulScript3"],[1253,46,1293,26],[1253,47,1293,10,"meaningfulScript"],[1253,63,1293,26],[1254,4,1300,2],[1254,11,1300,9,"pubkeyInScript"],[1254,25,1300,23],[1254,26,1300,24,"pubkey"],[1254,32,1300,30],[1254,34,1300,32,"meaningfulScript"],[1254,50,1300,48],[1254,51,1300,49],[1255,2,1301,0],[1256,2,1302,0],[1256,11,1302,9,"redeemFromFinalScriptSig"],[1256,35,1302,33,"redeemFromFinalScriptSig"],[1256,36,1302,34,"finalScript"],[1256,47,1302,45],[1256,49,1302,47],[1257,4,1303,2],[1257,8,1303,6],[1257,9,1303,7,"finalScript"],[1257,20,1303,18],[1257,22,1303,20],[1258,4,1304,2],[1258,8,1304,8,"decomp"],[1258,14,1304,14],[1258,17,1304,17,"_$$_REQUIRE"],[1258,28,1304,17],[1258,29,1304,17,"_dependencyMap"],[1258,43,1304,17],[1258,60,1304,25,"decompile"],[1258,69,1304,34],[1258,70,1304,35,"finalScript"],[1258,81,1304,46],[1258,82,1304,47],[1259,4,1305,2],[1259,8,1305,6],[1259,9,1305,7,"decomp"],[1259,15,1305,13],[1259,17,1305,15],[1260,4,1306,2],[1260,8,1306,8,"lastItem"],[1260,16,1306,16],[1260,19,1306,19,"decomp"],[1260,25,1306,25],[1260,26,1306,26,"decomp"],[1260,32,1306,32],[1260,33,1306,33,"length"],[1260,39,1306,39],[1260,42,1306,42],[1260,43,1306,43],[1260,44,1306,44],[1261,4,1307,2],[1261,8,1308,4],[1261,9,1308,5,"Buffer"],[1261,15,1308,11],[1261,16,1308,12,"isBuffer"],[1261,24,1308,20],[1261,25,1308,21,"lastItem"],[1261,33,1308,29],[1261,34,1308,30],[1261,38,1309,4,"isPubkeyLike"],[1261,50,1309,16],[1261,51,1309,17,"lastItem"],[1261,59,1309,25],[1261,60,1309,26],[1261,64,1310,4,"isSigLike"],[1261,73,1310,13],[1261,74,1310,14,"lastItem"],[1261,82,1310,22],[1261,83,1310,23],[1261,85,1312,4],[1262,4,1313,2],[1262,8,1313,8,"sDecomp"],[1262,15,1313,15],[1262,18,1313,18,"_$$_REQUIRE"],[1262,29,1313,18],[1262,30,1313,18,"_dependencyMap"],[1262,44,1313,18],[1262,61,1313,26,"decompile"],[1262,70,1313,35],[1262,71,1313,36,"lastItem"],[1262,79,1313,44],[1262,80,1313,45],[1263,4,1314,2],[1263,8,1314,6],[1263,9,1314,7,"sDecomp"],[1263,16,1314,14],[1263,18,1314,16],[1264,4,1315,2],[1264,11,1315,9,"lastItem"],[1264,19,1315,17],[1265,2,1316,0],[1266,2,1317,0],[1266,11,1317,9,"redeemFromFinalWitnessScript"],[1266,39,1317,37,"redeemFromFinalWitnessScript"],[1266,40,1317,38,"finalScript"],[1266,51,1317,49],[1266,53,1317,51],[1267,4,1318,2],[1267,8,1318,6],[1267,9,1318,7,"finalScript"],[1267,20,1318,18],[1267,22,1318,20],[1268,4,1319,2],[1268,8,1319,8,"decomp"],[1268,14,1319,14],[1268,17,1319,17,"scriptWitnessToWitnessStack"],[1268,44,1319,44],[1268,45,1319,45,"finalScript"],[1268,56,1319,56],[1268,57,1319,57],[1269,4,1320,2],[1269,8,1320,8,"lastItem"],[1269,16,1320,16],[1269,19,1320,19,"decomp"],[1269,25,1320,25],[1269,26,1320,26,"decomp"],[1269,32,1320,32],[1269,33,1320,33,"length"],[1269,39,1320,39],[1269,42,1320,42],[1269,43,1320,43],[1269,44,1320,44],[1270,4,1321,2],[1270,8,1321,6,"isPubkeyLike"],[1270,20,1321,18],[1270,21,1321,19,"lastItem"],[1270,29,1321,27],[1270,30,1321,28],[1270,32,1321,30],[1271,4,1322,2],[1271,8,1322,8,"sDecomp"],[1271,15,1322,15],[1271,18,1322,18,"_$$_REQUIRE"],[1271,29,1322,18],[1271,30,1322,18,"_dependencyMap"],[1271,44,1322,18],[1271,61,1322,26,"decompile"],[1271,70,1322,35],[1271,71,1322,36,"lastItem"],[1271,79,1322,44],[1271,80,1322,45],[1272,4,1323,2],[1272,8,1323,6],[1272,9,1323,7,"sDecomp"],[1272,16,1323,14],[1272,18,1323,16],[1273,4,1324,2],[1273,11,1324,9,"lastItem"],[1273,19,1324,17],[1274,2,1325,0],[1275,2,1326,0],[1275,11,1326,9,"isPubkeyLike"],[1275,23,1326,21,"isPubkeyLike"],[1275,24,1326,22,"buf"],[1275,27,1326,25],[1275,29,1326,27],[1276,4,1327,2],[1276,11,1327,9,"buf"],[1276,14,1327,12],[1276,15,1327,13,"length"],[1276,21,1327,19],[1276,26,1327,24],[1276,28,1327,26],[1276,32,1327,30,"_$$_REQUIRE"],[1276,43,1327,30],[1276,44,1327,30,"_dependencyMap"],[1276,58,1327,30],[1276,75,1327,38,"isCanonicalPubKey"],[1276,92,1327,55],[1276,93,1327,56,"buf"],[1276,96,1327,59],[1276,97,1327,60],[1277,2,1328,0],[1278,2,1329,0],[1278,11,1329,9,"isSigLike"],[1278,20,1329,18,"isSigLike"],[1278,21,1329,19,"buf"],[1278,24,1329,22],[1278,26,1329,24],[1279,4,1330,2],[1279,11,1330,9,"_$$_REQUIRE"],[1279,22,1330,9],[1279,23,1330,9,"_dependencyMap"],[1279,37,1330,9],[1279,54,1330,17,"isCanonicalScriptSignature"],[1279,80,1330,43],[1279,81,1330,44,"buf"],[1279,84,1330,47],[1279,85,1330,48],[1280,2,1331,0],[1281,2,1332,0],[1281,11,1332,9,"getMeaningfulScript"],[1281,30,1332,28,"getMeaningfulScript"],[1281,31,1333,2,"script"],[1281,37,1333,8],[1281,39,1334,2,"index"],[1281,44,1334,7],[1281,46,1335,2,"ioType"],[1281,52,1335,8],[1281,54,1336,2,"redeemScript"],[1281,66,1336,14],[1281,68,1337,2,"witnessScript"],[1281,81,1337,15],[1281,83,1338,2],[1282,4,1339,2],[1282,8,1339,8,"isP2SH"],[1282,14,1339,14],[1282,17,1339,17,"isP2SHScript"],[1282,29,1339,29],[1282,30,1339,30,"script"],[1282,36,1339,36],[1282,37,1339,37],[1283,4,1340,2],[1283,8,1340,8,"isP2SHP2WSH"],[1283,19,1340,19],[1283,22,1340,22,"isP2SH"],[1283,28,1340,28],[1283,32,1340,32,"redeemScript"],[1283,44,1340,44],[1283,48,1340,48,"isP2WSHScript"],[1283,61,1340,61],[1283,62,1340,62,"redeemScript"],[1283,74,1340,74],[1283,75,1340,75],[1284,4,1341,2],[1284,8,1341,8,"isP2WSH"],[1284,15,1341,15],[1284,18,1341,18,"isP2WSHScript"],[1284,31,1341,31],[1284,32,1341,32,"script"],[1284,38,1341,38],[1284,39,1341,39],[1285,4,1342,2],[1285,8,1342,6,"isP2SH"],[1285,14,1342,12],[1285,18,1342,16,"redeemScript"],[1285,30,1342,28],[1285,35,1342,33,"undefined"],[1285,44,1342,42],[1285,46,1343,4],[1285,52,1343,10],[1285,56,1343,14,"Error"],[1285,61,1343,19],[1285,62,1343,20],[1285,109,1343,67],[1285,110,1343,68],[1286,4,1344,2],[1286,8,1344,6],[1286,9,1344,7,"isP2WSH"],[1286,16,1344,14],[1286,20,1344,18,"isP2SHP2WSH"],[1286,31,1344,29],[1286,36,1344,34,"witnessScript"],[1286,49,1344,47],[1286,54,1344,52,"undefined"],[1286,63,1344,61],[1286,65,1345,4],[1286,71,1345,10],[1286,75,1345,14,"Error"],[1286,80,1345,19],[1286,81,1346,6],[1286,146,1347,4],[1286,147,1347,5],[1287,4,1348,2],[1287,8,1348,6,"meaningfulScript"],[1287,24,1348,22],[1288,4,1349,2],[1288,8,1349,6,"isP2SHP2WSH"],[1288,19,1349,17],[1288,21,1349,19],[1289,6,1350,4,"meaningfulScript"],[1289,22,1350,20],[1289,25,1350,23,"witnessScript"],[1289,38,1350,36],[1290,6,1351,4,"checkRedeemScript"],[1290,23,1351,21],[1290,24,1351,22,"index"],[1290,29,1351,27],[1290,31,1351,29,"script"],[1290,37,1351,35],[1290,39,1351,37,"redeemScript"],[1290,51,1351,49],[1290,53,1351,51,"ioType"],[1290,59,1351,57],[1290,60,1351,58],[1291,6,1352,4,"checkWitnessScript"],[1291,24,1352,22],[1291,25,1352,23,"index"],[1291,30,1352,28],[1291,32,1352,30,"redeemScript"],[1291,44,1352,42],[1291,46,1352,44,"witnessScript"],[1291,59,1352,57],[1291,61,1352,59,"ioType"],[1291,67,1352,65],[1291,68,1352,66],[1292,6,1353,4,"checkInvalidP2WSH"],[1292,23,1353,21],[1292,24,1353,22,"meaningfulScript"],[1292,40,1353,38],[1292,41,1353,39],[1293,4,1354,2],[1293,5,1354,3],[1293,11,1354,9],[1293,15,1354,13,"isP2WSH"],[1293,22,1354,20],[1293,24,1354,22],[1294,6,1355,4,"meaningfulScript"],[1294,22,1355,20],[1294,25,1355,23,"witnessScript"],[1294,38,1355,36],[1295,6,1356,4,"checkWitnessScript"],[1295,24,1356,22],[1295,25,1356,23,"index"],[1295,30,1356,28],[1295,32,1356,30,"script"],[1295,38,1356,36],[1295,40,1356,38,"witnessScript"],[1295,53,1356,51],[1295,55,1356,53,"ioType"],[1295,61,1356,59],[1295,62,1356,60],[1296,6,1357,4,"checkInvalidP2WSH"],[1296,23,1357,21],[1296,24,1357,22,"meaningfulScript"],[1296,40,1357,38],[1296,41,1357,39],[1297,4,1358,2],[1297,5,1358,3],[1297,11,1358,9],[1297,15,1358,13,"isP2SH"],[1297,21,1358,19],[1297,23,1358,21],[1298,6,1359,4,"meaningfulScript"],[1298,22,1359,20],[1298,25,1359,23,"redeemScript"],[1298,37,1359,35],[1299,6,1360,4,"checkRedeemScript"],[1299,23,1360,21],[1299,24,1360,22,"index"],[1299,29,1360,27],[1299,31,1360,29,"script"],[1299,37,1360,35],[1299,39,1360,37,"redeemScript"],[1299,51,1360,49],[1299,53,1360,51,"ioType"],[1299,59,1360,57],[1299,60,1360,58],[1300,4,1361,2],[1300,5,1361,3],[1300,11,1361,9],[1301,6,1362,4,"meaningfulScript"],[1301,22,1362,20],[1301,25,1362,23,"script"],[1301,31,1362,29],[1302,4,1363,2],[1303,4,1364,2],[1303,11,1364,9],[1304,6,1365,4,"meaningfulScript"],[1304,22,1365,20],[1304,24,1365,4,"meaningfulScript"],[1304,40,1365,20],[1305,6,1366,4,"type"],[1305,10,1366,8],[1305,12,1366,10,"isP2SHP2WSH"],[1305,23,1366,21],[1305,26,1367,8],[1305,38,1367,20],[1305,41,1368,8,"isP2SH"],[1305,47,1368,14],[1305,50,1369,8],[1305,56,1369,14],[1305,59,1370,8,"isP2WSH"],[1305,66,1370,15],[1305,69,1371,8],[1305,76,1371,15],[1305,79,1372,8],[1306,4,1373,2],[1306,5,1373,3],[1307,2,1374,0],[1308,2,1375,0],[1308,11,1375,9,"checkInvalidP2WSH"],[1308,28,1375,26,"checkInvalidP2WSH"],[1308,29,1375,27,"script"],[1308,35,1375,33],[1308,37,1375,35],[1309,4,1376,2],[1309,8,1376,6,"isP2WPKH"],[1309,16,1376,14],[1309,17,1376,15,"script"],[1309,23,1376,21],[1309,24,1376,22],[1309,28,1376,26,"isP2SHScript"],[1309,40,1376,38],[1309,41,1376,39,"script"],[1309,47,1376,45],[1309,48,1376,46],[1309,50,1376,48],[1310,6,1377,4],[1310,12,1377,10],[1310,16,1377,14,"Error"],[1310,21,1377,19],[1310,22,1377,20],[1310,72,1377,70],[1310,73,1377,71],[1311,4,1378,2],[1312,2,1379,0],[1313,2,1380,0],[1313,11,1380,9,"pubkeyInScript"],[1313,25,1380,23,"pubkeyInScript"],[1313,26,1380,24,"pubkey"],[1313,32,1380,30],[1313,34,1380,32,"script"],[1313,40,1380,38],[1313,42,1380,40],[1314,4,1381,2],[1314,8,1381,8,"pubkeyHash"],[1314,18,1381,18],[1314,21,1381,21,"_$$_REQUIRE"],[1314,32,1381,21],[1314,33,1381,21,"_dependencyMap"],[1314,47,1381,21],[1314,65,1381,30,"hash160"],[1314,72,1381,37],[1314,73,1381,38,"pubkey"],[1314,79,1381,44],[1314,80,1381,45],[1315,4,1382,2],[1315,8,1382,8,"decompiled"],[1315,18,1382,18],[1315,21,1382,21,"_$$_REQUIRE"],[1315,32,1382,21],[1315,33,1382,21,"_dependencyMap"],[1315,47,1382,21],[1315,64,1382,29,"decompile"],[1315,73,1382,38],[1315,74,1382,39,"script"],[1315,80,1382,45],[1315,81,1382,46],[1316,4,1383,2],[1316,8,1383,6,"decompiled"],[1316,18,1383,16],[1316,23,1383,21],[1316,27,1383,25],[1316,29,1383,27],[1316,35,1383,33],[1316,39,1383,37,"Error"],[1316,44,1383,42],[1316,45,1383,43],[1316,67,1383,65],[1316,68,1383,66],[1317,4,1384,2],[1317,11,1384,9,"decompiled"],[1317,21,1384,19],[1317,22,1384,20,"some"],[1317,26,1384,24],[1317,27,1384,25],[1317,37,1384,25,"element"],[1317,44,1384,32],[1317,46,1384,36],[1318,6,1385,4],[1318,10,1385,8],[1318,17,1385,15,"element"],[1318,24,1385,22],[1318,29,1385,27],[1318,37,1385,35],[1318,39,1385,37],[1318,46,1385,44],[1318,51,1385,49],[1319,6,1386,4],[1319,13,1386,11,"element"],[1319,20,1386,18],[1319,21,1386,19,"equals"],[1319,27,1386,25],[1319,28,1386,26,"pubkey"],[1319,34,1386,32],[1319,35,1386,33],[1319,39,1386,37,"element"],[1319,46,1386,44],[1319,47,1386,45,"equals"],[1319,53,1386,51],[1319,54,1386,52,"pubkeyHash"],[1319,64,1386,62],[1319,65,1386,63],[1320,4,1387,2],[1320,5,1387,3],[1320,6,1387,4],[1321,2,1388,0],[1322,2,1389,0],[1322,11,1389,9,"classifyScript"],[1322,25,1389,23,"classifyScript"],[1322,26,1389,24,"script"],[1322,32,1389,30],[1322,34,1389,32],[1323,4,1390,2],[1323,8,1390,6,"isP2WPKH"],[1323,16,1390,14],[1323,17,1390,15,"script"],[1323,23,1390,21],[1323,24,1390,22],[1323,26,1390,24],[1323,33,1390,31],[1323,52,1390,50],[1324,4,1391,2],[1324,8,1391,6,"isP2PKH"],[1324,15,1391,13],[1324,16,1391,14,"script"],[1324,22,1391,20],[1324,23,1391,21],[1324,25,1391,23],[1324,32,1391,30],[1324,44,1391,42],[1325,4,1392,2],[1325,8,1392,6,"isP2MS"],[1325,14,1392,12],[1325,15,1392,13,"script"],[1325,21,1392,19],[1325,22,1392,20],[1325,24,1392,22],[1325,31,1392,29],[1325,41,1392,39],[1326,4,1393,2],[1326,8,1393,6,"isP2PK"],[1326,14,1393,12],[1326,15,1393,13,"script"],[1326,21,1393,19],[1326,22,1393,20],[1326,24,1393,22],[1326,31,1393,29],[1326,39,1393,37],[1327,4,1394,2],[1327,11,1394,9],[1327,24,1394,22],[1328,2,1395,0],[1329,2,1396,0],[1329,11,1396,9,"range"],[1329,16,1396,14,"range"],[1329,17,1396,15,"n"],[1329,18,1396,16],[1329,20,1396,18],[1330,4,1397,2],[1330,11,1397,2,"_toConsumableArray"],[1330,29,1397,2],[1330,30,1397,13,"Array"],[1330,35,1397,18],[1330,36,1397,19,"n"],[1330,37,1397,20],[1330,38,1397,21],[1330,39,1397,22,"keys"],[1330,43,1397,26],[1330,44,1397,27],[1330,45,1397,28],[1331,2,1398,0],[1332,0,1398,1],[1332,3]],"functionMap":{"names":["<global>","Psbt","Psbt#constructor","dpew","Psbt.fromBase64","Psbt.fromHex","Psbt.fromBuffer","Psbt#get__inputCount","Psbt#get__version","Psbt#set__version","Psbt#get__locktime","Psbt#set__locktime","Psbt#get__txInputs","__CACHE.__TX.ins.map$argument_0","Psbt#get__txOutputs","__CACHE.__TX.outs.map$argument_0","Psbt#combine","those.map$argument_0","Psbt#clone","Psbt#setMaximumFeeRate","Psbt#setVersion","Psbt#setLocktime","Psbt#setInputSequence","Psbt#addInputs","inputDatas.forEach$argument_0","Psbt#addInput","Psbt#addOutputs","outputDatas.forEach$argument_0","Psbt#addOutput","Psbt#extractTransaction","Psbt#getFeeRate","Psbt#getFee","Psbt#finalizeAllInputs","range.forEach$argument_0","Psbt#finalizeInput","Psbt#getInputType","Psbt#inputHasPubkey","Psbt#inputHasHDKey","Psbt#outputHasPubkey","Psbt#outputHasHDKey","Psbt#validateSignaturesOfAllInputs","range.map$argument_0","results.reduce$argument_0","Psbt#validateSignaturesOfInput","partialSig.filter$argument_0","results.every$argument_0","Psbt#signAllInputsHD","Psbt#signAllInputsHDAsync","Promise$argument_0","signInputHDAsync.then$argument_0","signInputHDAsync.then$argument_1","Promise.all.then$argument_0","Psbt#signInputHD","signers.forEach$argument_0","Psbt#signInputHDAsync","signers.map$argument_0","Psbt#signAllInputs","Psbt#signAllInputsAsync","signInputAsync.then$argument_0","signInputAsync.then$argument_1","Psbt#signInput","Psbt#signInputAsync","Promise.resolve.then$argument_0","Psbt#toBuffer","Psbt#toHex","Psbt#toBase64","Psbt#updateGlobal","Psbt#updateInput","Psbt#updateOutput","Psbt#addUnknownKeyValToGlobal","Psbt#addUnknownKeyValToInput","Psbt#addUnknownKeyValToOutput","Psbt#clearFinalizedInput","transactionFromBuffer","PsbtTransaction","PsbtTransaction#constructor","PsbtTransaction#getInputOutputCounts","PsbtTransaction#addInput","PsbtTransaction#addOutput","PsbtTransaction#toBuffer","canFinalize","checkCache","hasSigs","pubkeys.map$argument_0","partialSig.find$argument_0","pubkeys.map.filter$argument_0","isFinalized","isPaymentFactory","<anonymous>","bip32DerivationIsMine","check32Bit","checkFees","checkInputsForPartialSig","inputs.forEach$argument_0","pSigs.forEach$argument_0","checkPartialSigSighashes","partialSig.forEach$argument_0","checkScriptForPubkey","checkTxEmpty","tx.ins.every$argument_0","checkTxForDupeIns","tx.ins.forEach$argument_0","checkTxInputCache","scriptCheckerFactory","getTxCacheValue","getFinalScripts","prepareFinalScripts","getHashAndSighashType","getHashForSig","getPayment","getPsigsFromInputFinalScripts","scriptItems.concat.filter$argument_0","scriptItems.concat.filter.map$argument_0","getScriptFromInput","getSignersFromHD","input.bip32Derivation.map$argument_0","input.bip32Derivation.map.filter$argument_0","myDerivations.map$argument_0","getSortedSigs","p2ms.pubkeys.map$argument_0","p2ms.pubkeys.map.filter$argument_0","scriptWitnessToWitnessStack","readSlice","readVarInt","readVarSlice","readVector","sighashTypeToString","witnessStackToScriptWitness","writeSlice","writeVarInt","writeVarSlice","writeVector","addNonWitnessTxCache","Object.defineProperty$argument_2.get","Object.defineProperty$argument_2.set","inputFinalizeGetAmts","tx.outs.reduce$argument_0","nonWitnessUtxoTxFromCache","getScriptFromUtxo","pubkeyInInput","pubkeyInOutput","redeemFromFinalScriptSig","redeemFromFinalWitnessScript","isPubkeyLike","isSigLike","getMeaningfulScript","checkInvalidP2WSH","pubkeyInScript","decompiled.some$argument_0","classifyScript","range"],"mappings":"AAA;AC6D;ECC;iBCoB;QDI;GDG;EGC;GHG;EIC;GJG;EKC;GLK;EMC;GNE;EOC;GPE;EQC;GRE;ESC;GTE;EUC;GVE;EWC;qCCC;MDI;GXC;EaC;sCCC;KDU;GbC;EeC;mCCC,WD;GfE;EiBC;GjBK;EkBC;GlBG;EmBC;GnBO;EoBC;GpBO;EqBC;GrBU;EsBC;uBCC,qCD;GtBE;EwBC;GxB2B;EyBC;wBCC,wCD;GzBE;E2BC;G3ByB;E4BC;G5BU;E6BC;G7BO;E8BC;G9BE;E+BC;2CCE,8BD;G/BE;EiCC;GjCwB;EkCC;GlCc;EmCC;GnCG;EoCC;GpCM;EqCC;GrCG;EsCC;GtCM;EuCC;uDCE;yCDC;0BEE,qCF;GvCC;E0CC;0BCM,gCD;yBEyB,mBF;G1CC;E6CC;sBDgB,gBC;G7CI;E8CC;uBCI;YCS;aDE;YEC;aFE;wCGI;0BNC,gBM;OHI;KDC;G9CC;EmDC;oBCS,0DD;GnDE;EqDC;uBNK;mCOK;6DPC;cGG;SHE;KME;GrDC;EuDC;sBXkB,gBW;GvDI;EwDC;uBTI;YUW;aVE;YWC;aXE;wCGI;0BNC,gBM;OHI;KSC;GxDC;E2DC;G3DsB;E4DC;kCCK;KDmB;G5DC;E8DC;G9DG;E+DC;G/DG;EgEC;GhEG;EiEC;GjEG;EkEC;GlEW;EmEC;GnEG;EoEC;GpEG;EqEC;GrEG;EsEC;GtEG;EuEC;GvEG;CDC;8ByEO,qCzE;A0EK;ECC;GDO;EEC;GFK;EGC;GHc;EIC;GJU;EKC;GLE;C1EC;AgFC;ChFY;AiFC;CjFI;AkFC;WCK;+BCG,kCD;ODC;cGC,QH;ClFM;AsFC;CtFE;AuFC;SCC;GDO;CvFC;AyFO;SDC;GCI;CzFC;A0FC;C1FS;A2FC;C3Fa;A4FC;iBCC;kBCS;KDmB;GDI;C5FC;A+FC;qBCG;GDK;C/FC;AiGC;CjGM;AkGC;ICE;gCDI;ClGK;AoGC;iBCC;GDE;CpGC;AsGC;CtGO;AuGC;SfC;GeS;CvGC;AwGM;CxGgB;AyGC;CzGY;A0GC;C1GkC;A2GC;C3GoB;A4GC;C5GyF;A6GC;C7GgC;A8GC;YCS;KDE;SEC,2BF;C9GC;AiHC;CjH+B;AkHC;SCM;KDM;YEC,QF;oCGM;GHM;ClHE;AsHC;SCI;0B3EG;S2EE;KDI;YEC,QF;CtHC;AyHC;ECE;GDG;EEC;GFI;EGC;GHE;EIC;GJK;CzHE;A8HC;C9HkB;A+HC;ECE;GDE;EEC;GFK;EGC;GHG;EIC;GJG;C/HG;AoIC;ICS;KDU;IEC;KFE;CpIE;AuIC;iB1CE;G0CgB;sCCC,6BD;CvIS;AyIC;CzIM;A0IC;C1Ia;A2IC;C3IU;A4IC;C5IU;A6IC;C7Ic;A8IC;C9IQ;A+IC;C/IE;AgJC;ChJE;AiJC;CjJ0C;AkJC;ClJI;AmJC;yBCI;GDG;CnJC;AqJC;CrJM;AsJC;CtJE"}},"type":"js/module"}]}