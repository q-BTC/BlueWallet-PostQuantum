{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var LEFTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftParenthesis;\n  var RIGHTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightParenthesis;\n  module.exports = {\n    name: 'Parentheses',\n    structure: {\n      children: [[]]\n    },\n    parse: function parse(readSequence, recognizer) {\n      var start = this.scanner.tokenStart;\n      var children = null;\n      this.eat(LEFTPARENTHESIS);\n      children = readSequence.call(this, recognizer);\n      if (!this.scanner.eof) {\n        this.eat(RIGHTPARENTHESIS);\n      }\n      return {\n        type: 'Parentheses',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('(');\n      this.children(node);\n      this.chunk(')');\n    }\n  };\n});","lineCount":29,"map":[[2,2,3,0],[2,6,3,4,"LEFTPARENTHESIS"],[2,21,3,19],[2,24,3,22,"_$$_REQUIRE"],[2,35,3,22],[2,36,3,22,"_dependencyMap"],[2,50,3,22],[2,74,3,22,"TYPE"],[2,78,3,22],[2,79,3,27,"LeftParenthesis"],[2,94,3,42],[3,2,4,0],[3,6,4,4,"RIGHTPARENTHESIS"],[3,22,4,20],[3,25,4,23,"_$$_REQUIRE"],[3,36,4,23],[3,37,4,23,"_dependencyMap"],[3,51,4,23],[3,75,4,23,"TYPE"],[3,79,4,23],[3,80,4,28,"RightParenthesis"],[3,96,4,44],[4,2,6,0,"module"],[4,8,6,6],[4,9,6,7,"exports"],[4,16,6,14],[4,19,6,17],[5,4,7,4,"name"],[5,8,7,8],[5,10,7,10],[5,23,7,23],[6,4,8,4,"structure"],[6,13,8,13],[6,15,8,15],[7,6,9,8,"children"],[7,14,9,16],[7,16,9,18],[7,17,9,19],[7,19,9,21],[8,4,10,4],[8,5,10,5],[9,4,11,4,"parse"],[9,9,11,9],[9,11,11,11],[9,20,11,4,"parse"],[9,25,11,9,"parse"],[9,26,11,20,"readSequence"],[9,38,11,32],[9,40,11,34,"recognizer"],[9,50,11,44],[9,52,11,46],[10,6,12,8],[10,10,12,12,"start"],[10,15,12,17],[10,18,12,20],[10,22,12,24],[10,23,12,25,"scanner"],[10,30,12,32],[10,31,12,33,"tokenStart"],[10,41,12,43],[11,6,13,8],[11,10,13,12,"children"],[11,18,13,20],[11,21,13,23],[11,25,13,27],[12,6,15,8],[12,10,15,12],[12,11,15,13,"eat"],[12,14,15,16],[12,15,15,17,"LEFTPARENTHESIS"],[12,30,15,32],[12,31,15,33],[13,6,17,8,"children"],[13,14,17,16],[13,17,17,19,"readSequence"],[13,29,17,31],[13,30,17,32,"call"],[13,34,17,36],[13,35,17,37],[13,39,17,41],[13,41,17,43,"recognizer"],[13,51,17,53],[13,52,17,54],[14,6,19,8],[14,10,19,12],[14,11,19,13],[14,15,19,17],[14,16,19,18,"scanner"],[14,23,19,25],[14,24,19,26,"eof"],[14,27,19,29],[14,29,19,31],[15,8,20,12],[15,12,20,16],[15,13,20,17,"eat"],[15,16,20,20],[15,17,20,21,"RIGHTPARENTHESIS"],[15,33,20,37],[15,34,20,38],[16,6,21,8],[17,6,23,8],[17,13,23,15],[18,8,24,12,"type"],[18,12,24,16],[18,14,24,18],[18,27,24,31],[19,8,25,12,"loc"],[19,11,25,15],[19,13,25,17],[19,17,25,21],[19,18,25,22,"getLocation"],[19,29,25,33],[19,30,25,34,"start"],[19,35,25,39],[19,37,25,41],[19,41,25,45],[19,42,25,46,"scanner"],[19,49,25,53],[19,50,25,54,"tokenStart"],[19,60,25,64],[19,61,25,65],[20,8,26,12,"children"],[20,16,26,20],[20,18,26,22,"children"],[21,6,27,8],[21,7,27,9],[22,4,28,4],[22,5,28,5],[23,4,29,4,"generate"],[23,12,29,12],[23,14,29,14],[23,23,29,4,"generate"],[23,31,29,12,"generate"],[23,32,29,23,"node"],[23,36,29,27],[23,38,29,29],[24,6,30,8],[24,10,30,12],[24,11,30,13,"chunk"],[24,16,30,18],[24,17,30,19],[24,20,30,22],[24,21,30,23],[25,6,31,8],[25,10,31,12],[25,11,31,13,"children"],[25,19,31,21],[25,20,31,22,"node"],[25,24,31,26],[25,25,31,27],[26,6,32,8],[26,10,32,12],[26,11,32,13,"chunk"],[26,16,32,18],[26,17,32,19],[26,20,32,22],[26,21,32,23],[27,4,33,4],[28,2,34,0],[28,3,34,1],[29,0,34,2],[29,3]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCU;KDiB;cEC;KFI"}},"type":"js/module"}]}