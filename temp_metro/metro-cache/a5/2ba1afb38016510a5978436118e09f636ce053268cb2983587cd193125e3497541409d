{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var RIGHTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightParenthesis;\n\n  // <function-token> <sequence> )\n  module.exports = {\n    name: 'Function',\n    structure: {\n      name: String,\n      children: [[]]\n    },\n    parse: function parse(readSequence, recognizer) {\n      var start = this.scanner.tokenStart;\n      var name = this.consumeFunctionName();\n      var nameLowerCase = name.toLowerCase();\n      var children;\n      children = recognizer.hasOwnProperty(nameLowerCase) ? recognizer[nameLowerCase].call(this, recognizer) : readSequence.call(this, recognizer);\n      if (!this.scanner.eof) {\n        this.eat(RIGHTPARENTHESIS);\n      }\n      return {\n        type: 'Function',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.name);\n      this.chunk('(');\n      this.children(node);\n      this.chunk(')');\n    },\n    walkContext: 'function'\n  };\n});","lineCount":35,"map":[[2,2,3,0],[2,6,3,4,"RIGHTPARENTHESIS"],[2,22,3,20],[2,25,3,23,"_$$_REQUIRE"],[2,36,3,23],[2,37,3,23,"_dependencyMap"],[2,51,3,23],[2,75,3,23,"TYPE"],[2,79,3,23],[2,80,3,28,"RightParenthesis"],[2,96,3,44],[4,2,5,0],[5,2,6,0,"module"],[5,8,6,6],[5,9,6,7,"exports"],[5,16,6,14],[5,19,6,17],[6,4,7,4,"name"],[6,8,7,8],[6,10,7,10],[6,20,7,20],[7,4,8,4,"structure"],[7,13,8,13],[7,15,8,15],[8,6,9,8,"name"],[8,10,9,12],[8,12,9,14,"String"],[8,18,9,20],[9,6,10,8,"children"],[9,14,10,16],[9,16,10,18],[9,17,10,19],[9,19,10,21],[10,4,11,4],[10,5,11,5],[11,4,12,4,"parse"],[11,9,12,9],[11,11,12,11],[11,20,12,4,"parse"],[11,25,12,9,"parse"],[11,26,12,20,"readSequence"],[11,38,12,32],[11,40,12,34,"recognizer"],[11,50,12,44],[11,52,12,46],[12,6,13,8],[12,10,13,12,"start"],[12,15,13,17],[12,18,13,20],[12,22,13,24],[12,23,13,25,"scanner"],[12,30,13,32],[12,31,13,33,"tokenStart"],[12,41,13,43],[13,6,14,8],[13,10,14,12,"name"],[13,14,14,16],[13,17,14,19],[13,21,14,23],[13,22,14,24,"consumeFunctionName"],[13,41,14,43],[13,42,14,44],[13,43,14,45],[14,6,15,8],[14,10,15,12,"nameLowerCase"],[14,23,15,25],[14,26,15,28,"name"],[14,30,15,32],[14,31,15,33,"toLowerCase"],[14,42,15,44],[14,43,15,45],[14,44,15,46],[15,6,16,8],[15,10,16,12,"children"],[15,18,16,20],[16,6,18,8,"children"],[16,14,18,16],[16,17,18,19,"recognizer"],[16,27,18,29],[16,28,18,30,"hasOwnProperty"],[16,42,18,44],[16,43,18,45,"nameLowerCase"],[16,56,18,58],[16,57,18,59],[16,60,19,14,"recognizer"],[16,70,19,24],[16,71,19,25,"nameLowerCase"],[16,84,19,38],[16,85,19,39],[16,86,19,40,"call"],[16,90,19,44],[16,91,19,45],[16,95,19,49],[16,97,19,51,"recognizer"],[16,107,19,61],[16,108,19,62],[16,111,20,14,"readSequence"],[16,123,20,26],[16,124,20,27,"call"],[16,128,20,31],[16,129,20,32],[16,133,20,36],[16,135,20,38,"recognizer"],[16,145,20,48],[16,146,20,49],[17,6,22,8],[17,10,22,12],[17,11,22,13],[17,15,22,17],[17,16,22,18,"scanner"],[17,23,22,25],[17,24,22,26,"eof"],[17,27,22,29],[17,29,22,31],[18,8,23,12],[18,12,23,16],[18,13,23,17,"eat"],[18,16,23,20],[18,17,23,21,"RIGHTPARENTHESIS"],[18,33,23,37],[18,34,23,38],[19,6,24,8],[20,6,26,8],[20,13,26,15],[21,8,27,12,"type"],[21,12,27,16],[21,14,27,18],[21,24,27,28],[22,8,28,12,"loc"],[22,11,28,15],[22,13,28,17],[22,17,28,21],[22,18,28,22,"getLocation"],[22,29,28,33],[22,30,28,34,"start"],[22,35,28,39],[22,37,28,41],[22,41,28,45],[22,42,28,46,"scanner"],[22,49,28,53],[22,50,28,54,"tokenStart"],[22,60,28,64],[22,61,28,65],[23,8,29,12,"name"],[23,12,29,16],[23,14,29,18,"name"],[23,18,29,22],[24,8,30,12,"children"],[24,16,30,20],[24,18,30,22,"children"],[25,6,31,8],[25,7,31,9],[26,4,32,4],[26,5,32,5],[27,4,33,4,"generate"],[27,12,33,12],[27,14,33,14],[27,23,33,4,"generate"],[27,31,33,12,"generate"],[27,32,33,23,"node"],[27,36,33,27],[27,38,33,29],[28,6,34,8],[28,10,34,12],[28,11,34,13,"chunk"],[28,16,34,18],[28,17,34,19,"node"],[28,21,34,23],[28,22,34,24,"name"],[28,26,34,28],[28,27,34,29],[29,6,35,8],[29,10,35,12],[29,11,35,13,"chunk"],[29,16,35,18],[29,17,35,19],[29,20,35,22],[29,21,35,23],[30,6,36,8],[30,10,36,12],[30,11,36,13,"children"],[30,19,36,21],[30,20,36,22,"node"],[30,24,36,26],[30,25,36,27],[31,6,37,8],[31,10,37,12],[31,11,37,13,"chunk"],[31,16,37,18],[31,17,37,19],[31,20,37,22],[31,21,37,23],[32,4,38,4],[32,5,38,5],[33,4,39,4,"walkContext"],[33,15,39,15],[33,17,39,17],[34,2,40,0],[34,3,40,1],[35,0,40,2],[35,3]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCW;KDoB;cEC;KFK"}},"type":"js/module"}]}