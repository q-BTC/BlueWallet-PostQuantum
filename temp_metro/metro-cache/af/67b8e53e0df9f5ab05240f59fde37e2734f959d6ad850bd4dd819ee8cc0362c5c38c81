{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":170,"column":0,"index":6821}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bip32","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"N06/O/9WKiQ+JvkVogn1t6zAaK0="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":43,"index":97}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"../../blue_modules/BlueElectrum","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":189},"end":{"line":6,"column":64,"index":253}}],"key":"4YdrXI/cQIf9X1EFj5L/r0NpY3g="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":321},"end":{"line":8,"column":47,"index":368}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"./abstract-hd-electrum-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":369},"end":{"line":9,"column":73,"index":442}},{"start":{"line":9,"column":0,"index":369},"end":{"line":9,"column":73,"index":442}}],"key":"A/Wx3xahkB658fXb/ksu5385tqM="}},{"name":"./hd-legacy-p2pkh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":443},"end":{"line":10,"column":63,"index":506}},{"start":{"line":10,"column":0,"index":443},"end":{"line":10,"column":63,"index":506}}],"key":"RiyoZy628ijdaK3Jm8TOnQocd1A="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.HDLegacyBreadwalletWallet = void 0;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n  var _bip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"bip32\"));\n  var bitcoinjs = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"bitcoinjs-lib\"));\n  var BlueElectrum = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"../../blue_modules/BlueElectrum\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../../blue_modules/noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var bip32 = (0, _bip.default)(_noble_ecc.default);\n\n  /**\n   * HD Wallet (BIP39).\n   * In particular, Breadwallet-compatible (Legacy addresses)\n   */\n  var HDLegacyBreadwalletWallet = exports.HDLegacyBreadwalletWallet = /*#__PURE__*/function (_HDLegacyP2PKHWallet) {\n    function HDLegacyBreadwalletWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, HDLegacyBreadwalletWallet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HDLegacyBreadwalletWallet, [].concat(args));\n      // @ts-ignore: override\n      _this.type = HDLegacyBreadwalletWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = HDLegacyBreadwalletWallet.typeReadable;\n      // track address index at which wallet switched to segwit\n      _this._external_segwit_index = null;\n      _this._internal_segwit_index = null;\n      return _this;\n    }\n    (0, _inherits2.default)(HDLegacyBreadwalletWallet, _HDLegacyP2PKHWallet);\n    return (0, _createClass2.default)(HDLegacyBreadwalletWallet, [{\n      key: \"_calcNodeAddressByIndex\",\n      value:\n      // we need a separate function without external_addresses_cache to use in binarySearch\n      function _calcNodeAddressByIndex(node, index) {\n        var p2wpkh = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        var _node;\n        if (node === 0) {\n          _node = this._node0 || (this._node0 = bip32.fromBase58(this.getXpub()).derive(node));\n        }\n        if (node === 1) {\n          _node = this._node1 || (this._node1 = bip32.fromBase58(this.getXpub()).derive(node));\n        }\n        if (!_node) {\n          throw new Error('Internal error: this._node0 or this._node1 is undefined');\n        }\n        var pubkey = _node.derive(index).publicKey;\n        var address = p2wpkh ? bitcoinjs.payments.p2wpkh({\n          pubkey: pubkey\n        }).address : bitcoinjs.payments.p2pkh({\n          pubkey: pubkey\n        }).address;\n        if (!address) {\n          throw new Error('Internal error: no address in _calcNodeAddressByIndex');\n        }\n        return address;\n      }\n\n      // this function is different from HDLegacyP2PKHWallet._getNodeAddressByIndex.\n      // It takes _external_segwit_index _internal_segwit_index for account\n      // and starts to generate segwit addresses if index more than them\n    }, {\n      key: \"_getNodeAddressByIndex\",\n      value: function _getNodeAddressByIndex(node, index) {\n        index = index * 1; // cast to int\n        if (node === 0) {\n          if (this.external_addresses_cache[index]) return this.external_addresses_cache[index]; // cache hit\n        }\n        if (node === 1) {\n          if (this.internal_addresses_cache[index]) return this.internal_addresses_cache[index]; // cache hit\n        }\n        var p2wpkh = false;\n        if (node === 0 && this._external_segwit_index !== null && index >= this._external_segwit_index || node === 1 && this._internal_segwit_index !== null && index >= this._internal_segwit_index) {\n          p2wpkh = true;\n        }\n        var address = this._calcNodeAddressByIndex(node, index, p2wpkh);\n        if (node === 0) {\n          return this.external_addresses_cache[index] = address;\n        }\n        if (node === 1) {\n          return this.internal_addresses_cache[index] = address;\n        }\n        throw new Error('Internal error: unknown node');\n      }\n    }, {\n      key: \"fetchBalance\",\n      value: function () {\n        var _fetchBalance = (0, _asyncToGenerator2.default)(function* () {\n          try {\n            if (this.next_free_change_address_index === 0 && this.next_free_address_index === 0) {\n              // doing binary search for last used addresses external/internal and legacy/bech32:\n              var _yield$Promise$all = yield Promise.all([this._binarySearchIteration(0, 1000, 0, false), this._binarySearchIteration(0, 1000, 1, false)]),\n                _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 2),\n                nextFreeExternalLegacy = _yield$Promise$all2[0],\n                nextFreeInternalLegacy = _yield$Promise$all2[1];\n              var _yield$Promise$all3 = yield Promise.all([this._binarySearchIteration(nextFreeExternalLegacy, nextFreeExternalLegacy + 1000, 0, true), this._binarySearchIteration(nextFreeInternalLegacy, nextFreeInternalLegacy + 1000, 1, true)]),\n                _yield$Promise$all4 = (0, _slicedToArray2.default)(_yield$Promise$all3, 2),\n                nextFreeExternalBech32 = _yield$Promise$all4[0],\n                nextFreeInternalBech32 = _yield$Promise$all4[1];\n\n              // trying to detect if segwit activated. This condition can be deleted when BRD will enable segwit by default\n              if (nextFreeExternalLegacy < nextFreeExternalBech32) {\n                this._external_segwit_index = nextFreeExternalLegacy;\n              }\n              this.next_free_address_index = nextFreeExternalBech32;\n              this._internal_segwit_index = nextFreeInternalLegacy; // force segwit for change\n              this.next_free_change_address_index = nextFreeInternalBech32;\n            } // end rescanning fresh wallet\n\n            // finally fetching balance\n            yield this._fetchBalance();\n          } catch (err) {\n            console.warn(err);\n          }\n        });\n        function fetchBalance() {\n          return _fetchBalance.apply(this, arguments);\n        }\n        return fetchBalance;\n      }()\n    }, {\n      key: \"_binarySearchIteration\",\n      value: function () {\n        var _binarySearchIteration2 = (0, _asyncToGenerator2.default)(function* (startIndex, endIndex) {\n          var _this2 = this;\n          var node = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n          var p2wpkh = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n          var gerenateChunkAddresses = function gerenateChunkAddresses(chunkNum) {\n            var ret = [];\n            for (var c = _this2.gap_limit * chunkNum; c < _this2.gap_limit * (chunkNum + 1); c++) {\n              ret.push(_this2._calcNodeAddressByIndex(node, c, p2wpkh));\n            }\n            return ret;\n          };\n          var lastChunkWithUsedAddressesNum;\n          var lastHistoriesWithUsedAddresses;\n          for (var c = 0; c < Math.round(endIndex / this.gap_limit); c++) {\n            var histories = yield BlueElectrum.multiGetHistoryByAddress(gerenateChunkAddresses(c));\n            if (_$$_REQUIRE(_dependencyMap[12], \"./abstract-hd-electrum-wallet\").AbstractHDElectrumWallet._getTransactionsFromHistories(histories).length > 0) {\n              // in this particular chunk we have used addresses\n              lastChunkWithUsedAddressesNum = c;\n              lastHistoriesWithUsedAddresses = histories;\n            } else {\n              // empty chunk. no sense searching more chunks\n              break;\n            }\n          }\n          var lastUsedIndex = startIndex;\n          if (lastHistoriesWithUsedAddresses) {\n            // now searching for last used address in batch lastChunkWithUsedAddressesNum\n            for (var _c = lastChunkWithUsedAddressesNum * this.gap_limit; _c < lastChunkWithUsedAddressesNum * this.gap_limit + this.gap_limit; _c++) {\n              var address = this._calcNodeAddressByIndex(node, _c, p2wpkh);\n              if (lastHistoriesWithUsedAddresses[address] && lastHistoriesWithUsedAddresses[address].length > 0) {\n                lastUsedIndex = Math.max(_c, lastUsedIndex) + 1; // point to next, which is supposed to be unsued\n              }\n            }\n          }\n          return lastUsedIndex;\n        });\n        function _binarySearchIteration(_x, _x2) {\n          return _binarySearchIteration2.apply(this, arguments);\n        }\n        return _binarySearchIteration;\n      }()\n    }, {\n      key: \"_addPsbtInput\",\n      value: function _addPsbtInput(psbt, input, sequence, masterFingerprintBuffer) {\n        var _input$address;\n        // hack to use\n        // AbstractHDElectrumWallet._addPsbtInput for bech32 address\n        // HDLegacyP2PKHWallet._addPsbtInput for legacy address\n        var ProxyClass = input != null && (_input$address = input.address) != null && _input$address.startsWith('bc1') ? _$$_REQUIRE(_dependencyMap[12], \"./abstract-hd-electrum-wallet\").AbstractHDElectrumWallet : _$$_REQUIRE(_dependencyMap[13], \"./hd-legacy-p2pkh-wallet\").HDLegacyP2PKHWallet;\n        var proxy = new ProxyClass();\n        return proxy._addPsbtInput.apply(this, [psbt, input, sequence, masterFingerprintBuffer]);\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[13], \"./hd-legacy-p2pkh-wallet\").HDLegacyP2PKHWallet);\n  HDLegacyBreadwalletWallet.type = 'HDLegacyBreadwallet';\n  HDLegacyBreadwalletWallet.typeReadable = 'HD Legacy Breadwallet (P2PKH)';\n  HDLegacyBreadwalletWallet.derivationPath = \"m/0'\";\n});","lineCount":196,"map":[[14,2,1,0],[14,6,1,0,"_bip"],[14,10,1,0],[14,13,1,0,"_interopRequireDefault"],[14,35,1,0],[14,36,1,0,"_$$_REQUIRE"],[14,47,1,0],[14,48,1,0,"_dependencyMap"],[14,62,1,0],[15,2,2,0],[15,6,2,0,"bitcoinjs"],[15,15,2,0],[15,18,2,0,"_interopRequireWildcard"],[15,41,2,0],[15,42,2,0,"_$$_REQUIRE"],[15,53,2,0],[15,54,2,0,"_dependencyMap"],[15,68,2,0],[16,2,6,0],[16,6,6,0,"BlueElectrum"],[16,18,6,0],[16,21,6,0,"_interopRequireWildcard"],[16,44,6,0],[16,45,6,0,"_$$_REQUIRE"],[16,56,6,0],[16,57,6,0,"_dependencyMap"],[16,71,6,0],[17,2,8,0],[17,6,8,0,"_noble_ecc"],[17,16,8,0],[17,19,8,0,"_interopRequireDefault"],[17,41,8,0],[17,42,8,0,"_$$_REQUIRE"],[17,53,8,0],[17,54,8,0,"_dependencyMap"],[17,68,8,0],[18,2,8,47],[18,11,8,47,"_getRequireWildcardCache"],[18,36,8,47,"e"],[18,37,8,47],[18,66,8,47,"WeakMap"],[18,73,8,47],[18,92,8,47,"r"],[18,93,8,47],[18,100,8,47,"WeakMap"],[18,107,8,47],[18,111,8,47,"t"],[18,112,8,47],[18,119,8,47,"WeakMap"],[18,126,8,47],[18,138,8,47,"_getRequireWildcardCache"],[18,162,8,47],[18,174,8,47,"_getRequireWildcardCache"],[18,199,8,47,"e"],[18,200,8,47],[18,211,8,47,"e"],[18,212,8,47],[18,215,8,47,"t"],[18,216,8,47],[18,219,8,47,"r"],[18,220,8,47],[18,225,8,47,"e"],[18,226,8,47],[19,2,8,47],[19,11,8,47,"_interopRequireWildcard"],[19,35,8,47,"e"],[19,36,8,47],[19,38,8,47,"r"],[19,39,8,47],[19,48,8,47,"r"],[19,49,8,47],[19,53,8,47,"e"],[19,54,8,47],[19,58,8,47,"e"],[19,59,8,47],[19,60,8,47,"__esModule"],[19,70,8,47],[19,79,8,47,"e"],[19,80,8,47],[19,95,8,47,"e"],[19,96,8,47],[19,119,8,47,"e"],[19,120,8,47],[19,145,8,47,"e"],[19,146,8,47],[19,157,8,47,"default"],[19,164,8,47],[19,166,8,47,"e"],[19,167,8,47],[19,175,8,47,"t"],[19,176,8,47],[19,179,8,47,"_getRequireWildcardCache"],[19,203,8,47],[19,204,8,47,"r"],[19,205,8,47],[19,212,8,47,"t"],[19,213,8,47],[19,217,8,47,"t"],[19,218,8,47],[19,219,8,47,"has"],[19,222,8,47],[19,223,8,47,"e"],[19,224,8,47],[19,234,8,47,"t"],[19,235,8,47],[19,236,8,47,"get"],[19,239,8,47],[19,240,8,47,"e"],[19,241,8,47],[19,248,8,47,"n"],[19,249,8,47],[19,254,8,47,"__proto__"],[19,263,8,47],[19,273,8,47,"a"],[19,274,8,47],[19,277,8,47,"Object"],[19,283,8,47],[19,284,8,47,"defineProperty"],[19,298,8,47],[19,302,8,47,"Object"],[19,308,8,47],[19,309,8,47,"getOwnPropertyDescriptor"],[19,333,8,47],[19,344,8,47,"u"],[19,345,8,47],[19,349,8,47,"e"],[19,350,8,47],[19,370,8,47,"u"],[19,371,8,47],[19,378,8,47,"hasOwnProperty"],[19,392,8,47],[19,393,8,47,"call"],[19,397,8,47],[19,398,8,47,"e"],[19,399,8,47],[19,401,8,47,"u"],[19,402,8,47],[19,411,8,47,"i"],[19,412,8,47],[19,415,8,47,"a"],[19,416,8,47],[19,419,8,47,"Object"],[19,425,8,47],[19,426,8,47,"getOwnPropertyDescriptor"],[19,450,8,47],[19,451,8,47,"e"],[19,452,8,47],[19,454,8,47,"u"],[19,455,8,47],[19,465,8,47,"i"],[19,466,8,47],[19,471,8,47,"i"],[19,472,8,47],[19,473,8,47,"get"],[19,476,8,47],[19,480,8,47,"i"],[19,481,8,47],[19,482,8,47,"set"],[19,485,8,47],[19,489,8,47,"Object"],[19,495,8,47],[19,496,8,47,"defineProperty"],[19,510,8,47],[19,511,8,47,"n"],[19,512,8,47],[19,514,8,47,"u"],[19,515,8,47],[19,517,8,47,"i"],[19,518,8,47],[19,522,8,47,"n"],[19,523,8,47],[19,524,8,47,"u"],[19,525,8,47],[19,529,8,47,"e"],[19,530,8,47],[19,531,8,47,"u"],[19,532,8,47],[19,544,8,47,"n"],[19,545,8,47],[19,546,8,47,"default"],[19,553,8,47],[19,556,8,47,"e"],[19,557,8,47],[19,559,8,47,"t"],[19,560,8,47],[19,564,8,47,"t"],[19,565,8,47],[19,566,8,47,"set"],[19,569,8,47],[19,570,8,47,"e"],[19,571,8,47],[19,573,8,47,"n"],[19,574,8,47],[19,577,8,47,"n"],[19,578,8,47],[20,2,8,47],[20,11,8,47,"_callSuper"],[20,22,8,47,"t"],[20,23,8,47],[20,25,8,47,"o"],[20,26,8,47],[20,28,8,47,"e"],[20,29,8,47],[20,40,8,47,"o"],[20,41,8,47],[20,48,8,47,"_getPrototypeOf2"],[20,64,8,47],[20,65,8,47,"default"],[20,72,8,47],[20,74,8,47,"o"],[20,75,8,47],[20,82,8,47,"_possibleConstructorReturn2"],[20,109,8,47],[20,110,8,47,"default"],[20,117,8,47],[20,119,8,47,"t"],[20,120,8,47],[20,122,8,47,"_isNativeReflectConstruct"],[20,147,8,47],[20,152,8,47,"Reflect"],[20,159,8,47],[20,160,8,47,"construct"],[20,169,8,47],[20,170,8,47,"o"],[20,171,8,47],[20,173,8,47,"e"],[20,174,8,47],[20,186,8,47,"_getPrototypeOf2"],[20,202,8,47],[20,203,8,47,"default"],[20,210,8,47],[20,212,8,47,"t"],[20,213,8,47],[20,215,8,47,"constructor"],[20,226,8,47],[20,230,8,47,"o"],[20,231,8,47],[20,232,8,47,"apply"],[20,237,8,47],[20,238,8,47,"t"],[20,239,8,47],[20,241,8,47,"e"],[20,242,8,47],[21,2,8,47],[21,11,8,47,"_isNativeReflectConstruct"],[21,37,8,47],[21,51,8,47,"t"],[21,52,8,47],[21,56,8,47,"Boolean"],[21,63,8,47],[21,64,8,47,"prototype"],[21,73,8,47],[21,74,8,47,"valueOf"],[21,81,8,47],[21,82,8,47,"call"],[21,86,8,47],[21,87,8,47,"Reflect"],[21,94,8,47],[21,95,8,47,"construct"],[21,104,8,47],[21,105,8,47,"Boolean"],[21,112,8,47],[21,145,8,47,"t"],[21,146,8,47],[21,159,8,47,"_isNativeReflectConstruct"],[21,184,8,47],[21,196,8,47,"_isNativeReflectConstruct"],[21,222,8,47],[21,235,8,47,"t"],[21,236,8,47],[22,2,12,0],[22,6,12,6,"bip32"],[22,11,12,11],[22,14,12,14],[22,18,12,14,"BIP32Factory"],[22,30,12,26],[22,32,12,27,"ecc"],[22,50,12,30],[22,51,12,31],[24,2,14,0],[25,0,15,0],[26,0,16,0],[27,0,17,0],[28,2,14,0],[28,6,18,13,"HDLegacyBreadwalletWallet"],[28,31,18,38],[28,34,18,38,"exports"],[28,41,18,38],[28,42,18,38,"HDLegacyBreadwalletWallet"],[28,67,18,38],[28,93,18,38,"_HDLegacyP2PKHWallet"],[28,113,18,38],[29,4,18,38],[29,13,18,38,"HDLegacyBreadwalletWallet"],[29,39,18,38],[30,6,18,38],[30,10,18,38,"_this"],[30,15,18,38],[31,6,18,38],[31,10,18,38,"_classCallCheck2"],[31,26,18,38],[31,27,18,38,"default"],[31,34,18,38],[31,42,18,38,"HDLegacyBreadwalletWallet"],[31,67,18,38],[32,6,18,38],[32,15,18,38,"_len"],[32,19,18,38],[32,22,18,38,"arguments"],[32,31,18,38],[32,32,18,38,"length"],[32,38,18,38],[32,40,18,38,"args"],[32,44,18,38],[32,51,18,38,"Array"],[32,56,18,38],[32,57,18,38,"_len"],[32,61,18,38],[32,64,18,38,"_key"],[32,68,18,38],[32,74,18,38,"_key"],[32,78,18,38],[32,81,18,38,"_len"],[32,85,18,38],[32,87,18,38,"_key"],[32,91,18,38],[33,8,18,38,"args"],[33,12,18,38],[33,13,18,38,"_key"],[33,17,18,38],[33,21,18,38,"arguments"],[33,30,18,38],[33,31,18,38,"_key"],[33,35,18,38],[34,6,18,38],[35,6,18,38,"_this"],[35,11,18,38],[35,14,18,38,"_callSuper"],[35,24,18,38],[35,31,18,38,"HDLegacyBreadwalletWallet"],[35,56,18,38],[35,61,18,38,"concat"],[35,67,18,38],[35,68,18,38,"args"],[35,72,18,38],[36,6,21,2],[37,6,21,2,"_this"],[37,11,21,2],[37,12,22,18,"type"],[37,16,22,22],[37,19,22,25,"HDLegacyBreadwalletWallet"],[37,44,22,50],[37,45,22,51,"type"],[37,49,22,55],[38,6,23,2],[39,6,23,2,"_this"],[39,11,23,2],[39,12,24,18,"typeReadable"],[39,24,24,30],[39,27,24,33,"HDLegacyBreadwalletWallet"],[39,52,24,58],[39,53,24,59,"typeReadable"],[39,65,24,71],[40,6,27,2],[41,6,27,2,"_this"],[41,11,27,2],[41,12,28,2,"_external_segwit_index"],[41,34,28,24],[41,37,28,42],[41,41,28,46],[42,6,28,46,"_this"],[42,11,28,46],[42,12,29,2,"_internal_segwit_index"],[42,34,29,24],[42,37,29,42],[42,41,29,46],[43,6,29,46],[43,13,29,46,"_this"],[43,18,29,46],[44,4,29,46],[45,4,29,46],[45,8,29,46,"_inherits2"],[45,18,29,46],[45,19,29,46,"default"],[45,26,29,46],[45,28,29,46,"HDLegacyBreadwalletWallet"],[45,53,29,46],[45,55,29,46,"_HDLegacyP2PKHWallet"],[45,75,29,46],[46,4,29,46],[46,15,29,46,"_createClass2"],[46,28,29,46],[46,29,29,46,"default"],[46,36,29,46],[46,38,29,46,"HDLegacyBreadwalletWallet"],[46,63,29,46],[47,6,29,46,"key"],[47,9,29,46],[48,6,29,46,"value"],[48,11,29,46],[49,6,31,2],[50,6,32,2],[50,15,32,2,"_calcNodeAddressByIndex"],[50,38,32,25,"_calcNodeAddressByIndex"],[50,39,32,26,"node"],[50,43,32,38],[50,45,32,40,"index"],[50,50,32,53],[50,52,32,80],[51,8,32,80],[51,12,32,55,"p2wpkh"],[51,18,32,70],[51,21,32,70,"arguments"],[51,30,32,70],[51,31,32,70,"length"],[51,37,32,70],[51,45,32,70,"arguments"],[51,54,32,70],[51,62,32,70,"undefined"],[51,71,32,70],[51,74,32,70,"arguments"],[51,83,32,70],[51,89,32,73],[51,94,32,78],[52,8,33,4],[52,12,33,8,"_node"],[52,17,33,41],[53,8,34,4],[53,12,34,8,"node"],[53,16,34,12],[53,21,34,17],[53,22,34,18],[53,24,34,20],[54,10,35,6,"_node"],[54,15,35,11],[54,18,35,14],[54,22,35,18],[54,23,35,19,"_node0"],[54,29,35,25],[54,34,35,30],[54,38,35,34],[54,39,35,35,"_node0"],[54,45,35,41],[54,48,35,44,"bip32"],[54,53,35,49],[54,54,35,50,"fromBase58"],[54,64,35,60],[54,65,35,61],[54,69,35,65],[54,70,35,66,"getXpub"],[54,77,35,73],[54,78,35,74],[54,79,35,75],[54,80,35,76],[54,81,35,77,"derive"],[54,87,35,83],[54,88,35,84,"node"],[54,92,35,88],[54,93,35,89],[54,94,35,90],[55,8,36,4],[56,8,37,4],[56,12,37,8,"node"],[56,16,37,12],[56,21,37,17],[56,22,37,18],[56,24,37,20],[57,10,38,6,"_node"],[57,15,38,11],[57,18,38,14],[57,22,38,18],[57,23,38,19,"_node1"],[57,29,38,25],[57,34,38,30],[57,38,38,34],[57,39,38,35,"_node1"],[57,45,38,41],[57,48,38,44,"bip32"],[57,53,38,49],[57,54,38,50,"fromBase58"],[57,64,38,60],[57,65,38,61],[57,69,38,65],[57,70,38,66,"getXpub"],[57,77,38,73],[57,78,38,74],[57,79,38,75],[57,80,38,76],[57,81,38,77,"derive"],[57,87,38,83],[57,88,38,84,"node"],[57,92,38,88],[57,93,38,89],[57,94,38,90],[58,8,39,4],[59,8,41,4],[59,12,41,8],[59,13,41,9,"_node"],[59,18,41,14],[59,20,41,16],[60,10,42,6],[60,16,42,12],[60,20,42,16,"Error"],[60,25,42,21],[60,26,42,22],[60,83,42,79],[60,84,42,80],[61,8,43,4],[62,8,45,4],[62,12,45,10,"pubkey"],[62,18,45,16],[62,21,45,19,"_node"],[62,26,45,24],[62,27,45,25,"derive"],[62,33,45,31],[62,34,45,32,"index"],[62,39,45,37],[62,40,45,38],[62,41,45,39,"publicKey"],[62,50,45,48],[63,8,46,4],[63,12,46,10,"address"],[63,19,46,17],[63,22,46,20,"p2wpkh"],[63,28,46,26],[63,31,46,29,"bitcoinjs"],[63,40,46,38],[63,41,46,39,"payments"],[63,49,46,47],[63,50,46,48,"p2wpkh"],[63,56,46,54],[63,57,46,55],[64,10,46,57,"pubkey"],[64,16,46,63],[64,18,46,57,"pubkey"],[65,8,46,64],[65,9,46,65],[65,10,46,66],[65,11,46,67,"address"],[65,18,46,74],[65,21,46,77,"bitcoinjs"],[65,30,46,86],[65,31,46,87,"payments"],[65,39,46,95],[65,40,46,96,"p2pkh"],[65,45,46,101],[65,46,46,102],[66,10,46,104,"pubkey"],[66,16,46,110],[66,18,46,104,"pubkey"],[67,8,46,111],[67,9,46,112],[67,10,46,113],[67,11,46,114,"address"],[67,18,46,121],[68,8,48,4],[68,12,48,8],[68,13,48,9,"address"],[68,20,48,16],[68,22,48,18],[69,10,49,6],[69,16,49,12],[69,20,49,16,"Error"],[69,25,49,21],[69,26,49,22],[69,81,49,77],[69,82,49,78],[70,8,50,4],[71,8,52,4],[71,15,52,11,"address"],[71,22,52,18],[72,6,53,2],[74,6,55,2],[75,6,56,2],[76,6,57,2],[77,4,57,2],[78,6,57,2,"key"],[78,9,57,2],[79,6,57,2,"value"],[79,11,57,2],[79,13,58,2],[79,22,58,2,"_getNodeAddressByIndex"],[79,44,58,24,"_getNodeAddressByIndex"],[79,45,58,25,"node"],[79,49,58,37],[79,51,58,39,"index"],[79,56,58,52],[79,58,58,62],[80,8,59,4,"index"],[80,13,59,9],[80,16,59,12,"index"],[80,21,59,17],[80,24,59,20],[80,25,59,21],[80,26,59,22],[80,27,59,23],[81,8,60,4],[81,12,60,8,"node"],[81,16,60,12],[81,21,60,17],[81,22,60,18],[81,24,60,20],[82,10,61,6],[82,14,61,10],[82,18,61,14],[82,19,61,15,"external_addresses_cache"],[82,43,61,39],[82,44,61,40,"index"],[82,49,61,45],[82,50,61,46],[82,52,61,48],[82,59,61,55],[82,63,61,59],[82,64,61,60,"external_addresses_cache"],[82,88,61,84],[82,89,61,85,"index"],[82,94,61,90],[82,95,61,91],[82,96,61,92],[82,97,61,93],[83,8,62,4],[84,8,64,4],[84,12,64,8,"node"],[84,16,64,12],[84,21,64,17],[84,22,64,18],[84,24,64,20],[85,10,65,6],[85,14,65,10],[85,18,65,14],[85,19,65,15,"internal_addresses_cache"],[85,43,65,39],[85,44,65,40,"index"],[85,49,65,45],[85,50,65,46],[85,52,65,48],[85,59,65,55],[85,63,65,59],[85,64,65,60,"internal_addresses_cache"],[85,88,65,84],[85,89,65,85,"index"],[85,94,65,90],[85,95,65,91],[85,96,65,92],[85,97,65,93],[86,8,66,4],[87,8,68,4],[87,12,68,8,"p2wpkh"],[87,18,68,14],[87,21,68,17],[87,26,68,22],[88,8,69,4],[88,12,70,7,"node"],[88,16,70,11],[88,21,70,16],[88,22,70,17],[88,26,70,21],[88,30,70,25],[88,31,70,26,"_external_segwit_index"],[88,53,70,48],[88,58,70,53],[88,62,70,57],[88,66,70,61,"index"],[88,71,70,66],[88,75,70,70],[88,79,70,74],[88,80,70,75,"_external_segwit_index"],[88,102,70,97],[88,106,71,7,"node"],[88,110,71,11],[88,115,71,16],[88,116,71,17],[88,120,71,21],[88,124,71,25],[88,125,71,26,"_internal_segwit_index"],[88,147,71,48],[88,152,71,53],[88,156,71,57],[88,160,71,61,"index"],[88,165,71,66],[88,169,71,70],[88,173,71,74],[88,174,71,75,"_internal_segwit_index"],[88,196,71,98],[88,198,72,6],[89,10,73,6,"p2wpkh"],[89,16,73,12],[89,19,73,15],[89,23,73,19],[90,8,74,4],[91,8,76,4],[91,12,76,10,"address"],[91,19,76,17],[91,22,76,20],[91,26,76,24],[91,27,76,25,"_calcNodeAddressByIndex"],[91,50,76,48],[91,51,76,49,"node"],[91,55,76,53],[91,57,76,55,"index"],[91,62,76,60],[91,64,76,62,"p2wpkh"],[91,70,76,68],[91,71,76,69],[92,8,78,4],[92,12,78,8,"node"],[92,16,78,12],[92,21,78,17],[92,22,78,18],[92,24,78,20],[93,10,79,6],[93,17,79,14],[93,21,79,18],[93,22,79,19,"external_addresses_cache"],[93,46,79,43],[93,47,79,44,"index"],[93,52,79,49],[93,53,79,50],[93,56,79,53,"address"],[93,63,79,60],[94,8,80,4],[95,8,82,4],[95,12,82,8,"node"],[95,16,82,12],[95,21,82,17],[95,22,82,18],[95,24,82,20],[96,10,83,6],[96,17,83,14],[96,21,83,18],[96,22,83,19,"internal_addresses_cache"],[96,46,83,43],[96,47,83,44,"index"],[96,52,83,49],[96,53,83,50],[96,56,83,53,"address"],[96,63,83,60],[97,8,84,4],[98,8,86,4],[98,14,86,10],[98,18,86,14,"Error"],[98,23,86,19],[98,24,86,20],[98,54,86,50],[98,55,86,51],[99,6,87,2],[100,4,87,3],[101,6,87,3,"key"],[101,9,87,3],[102,6,87,3,"value"],[102,11,87,3],[103,8,87,3],[103,12,87,3,"_fetchBalance"],[103,25,87,3],[103,32,87,3,"_asyncToGenerator2"],[103,50,87,3],[103,51,87,3,"default"],[103,58,87,3],[103,60,89,2],[103,73,89,23],[104,10,90,4],[104,14,90,8],[105,12,91,6],[105,16,91,10],[105,20,91,14],[105,21,91,15,"next_free_change_address_index"],[105,51,91,45],[105,56,91,50],[105,57,91,51],[105,61,91,55],[105,65,91,59],[105,66,91,60,"next_free_address_index"],[105,89,91,83],[105,94,91,88],[105,95,91,89],[105,97,91,91],[106,14,92,8],[107,14,93,8],[107,18,93,8,"_yield$Promise$all"],[107,36,93,8],[107,45,93,71,"Promise"],[107,52,93,78],[107,53,93,79,"all"],[107,56,93,82],[107,57,93,83],[107,58,94,10],[107,62,94,14],[107,63,94,15,"_binarySearchIteration"],[107,85,94,37],[107,86,94,38],[107,87,94,39],[107,89,94,41],[107,93,94,45],[107,95,94,47],[107,96,94,48],[107,98,94,50],[107,103,94,55],[107,104,94,56],[107,106,95,10],[107,110,95,14],[107,111,95,15,"_binarySearchIteration"],[107,133,95,37],[107,134,95,38],[107,135,95,39],[107,137,95,41],[107,141,95,45],[107,143,95,47],[107,144,95,48],[107,146,95,50],[107,151,95,55],[107,152,95,56],[107,153,96,9],[107,154,96,10],[108,16,96,10,"_yield$Promise$all2"],[108,35,96,10],[108,42,96,10,"_slicedToArray2"],[108,57,96,10],[108,58,96,10,"default"],[108,65,96,10],[108,67,96,10,"_yield$Promise$all"],[108,85,96,10],[109,16,93,15,"nextFreeExternalLegacy"],[109,38,93,37],[109,41,93,37,"_yield$Promise$all2"],[109,60,93,37],[110,16,93,39,"nextFreeInternalLegacy"],[110,38,93,61],[110,41,93,61,"_yield$Promise$all2"],[110,60,93,61],[111,14,97,8],[111,18,97,8,"_yield$Promise$all3"],[111,37,97,8],[111,46,97,71,"Promise"],[111,53,97,78],[111,54,97,79,"all"],[111,57,97,82],[111,58,97,83],[111,59,98,10],[111,63,98,14],[111,64,98,15,"_binarySearchIteration"],[111,86,98,37],[111,87,98,38,"nextFreeExternalLegacy"],[111,109,98,60],[111,111,98,62,"nextFreeExternalLegacy"],[111,133,98,84],[111,136,98,87],[111,140,98,91],[111,142,98,93],[111,143,98,94],[111,145,98,96],[111,149,98,100],[111,150,98,101],[111,152,99,10],[111,156,99,14],[111,157,99,15,"_binarySearchIteration"],[111,179,99,37],[111,180,99,38,"nextFreeInternalLegacy"],[111,202,99,60],[111,204,99,62,"nextFreeInternalLegacy"],[111,226,99,84],[111,229,99,87],[111,233,99,91],[111,235,99,93],[111,236,99,94],[111,238,99,96],[111,242,99,100],[111,243,99,101],[111,244,100,9],[111,245,100,10],[112,16,100,10,"_yield$Promise$all4"],[112,35,100,10],[112,42,100,10,"_slicedToArray2"],[112,57,100,10],[112,58,100,10,"default"],[112,65,100,10],[112,67,100,10,"_yield$Promise$all3"],[112,86,100,10],[113,16,97,15,"nextFreeExternalBech32"],[113,38,97,37],[113,41,97,37,"_yield$Promise$all4"],[113,60,97,37],[114,16,97,39,"nextFreeInternalBech32"],[114,38,97,61],[114,41,97,61,"_yield$Promise$all4"],[114,60,97,61],[116,14,102,8],[117,14,103,8],[117,18,103,12,"nextFreeExternalLegacy"],[117,40,103,34],[117,43,103,37,"nextFreeExternalBech32"],[117,65,103,59],[117,67,103,61],[118,16,104,10],[118,20,104,14],[118,21,104,15,"_external_segwit_index"],[118,43,104,37],[118,46,104,40,"nextFreeExternalLegacy"],[118,68,104,62],[119,14,105,8],[120,14,106,8],[120,18,106,12],[120,19,106,13,"next_free_address_index"],[120,42,106,36],[120,45,106,39,"nextFreeExternalBech32"],[120,67,106,61],[121,14,108,8],[121,18,108,12],[121,19,108,13,"_internal_segwit_index"],[121,41,108,35],[121,44,108,38,"nextFreeInternalLegacy"],[121,66,108,60],[121,67,108,61],[121,68,108,62],[122,14,109,8],[122,18,109,12],[122,19,109,13,"next_free_change_address_index"],[122,49,109,43],[122,52,109,46,"nextFreeInternalBech32"],[122,74,109,68],[123,12,110,6],[123,13,110,7],[123,14,110,8],[125,12,112,6],[126,12,113,6],[126,18,113,12],[126,22,113,16],[126,23,113,17,"_fetchBalance"],[126,36,113,30],[126,37,113,31],[126,38,113,32],[127,10,114,4],[127,11,114,5],[127,12,114,6],[127,19,114,13,"err"],[127,22,114,16],[127,24,114,18],[128,12,115,6,"console"],[128,19,115,13],[128,20,115,14,"warn"],[128,24,115,18],[128,25,115,19,"err"],[128,28,115,22],[128,29,115,23],[129,10,116,4],[130,8,117,2],[130,9,117,3],[131,8,117,3],[131,17,89,8,"fetchBalance"],[131,29,89,20,"fetchBalance"],[131,30,89,20],[132,10,89,20],[132,17,89,20,"_fetchBalance"],[132,30,89,20],[132,31,89,20,"apply"],[132,36,89,20],[132,43,89,20,"arguments"],[132,52,89,20],[133,8,89,20],[134,8,89,20],[134,15,89,8,"fetchBalance"],[134,27,89,20],[135,6,89,20],[136,4,89,20],[137,6,89,20,"key"],[137,9,89,20],[138,6,89,20,"value"],[138,11,89,20],[139,8,89,20],[139,12,89,20,"_binarySearchIteration2"],[139,35,89,20],[139,42,89,20,"_asyncToGenerator2"],[139,60,89,20],[139,61,89,20,"default"],[139,68,89,20],[139,70,119,2],[139,81,119,31,"startIndex"],[139,91,119,49],[139,93,119,51,"endIndex"],[139,101,119,67],[139,103,119,112],[140,10,119,112],[140,14,119,112,"_this2"],[140,20,119,112],[141,10,119,112],[141,14,119,69,"node"],[141,18,119,81],[141,21,119,81,"arguments"],[141,30,119,81],[141,31,119,81,"length"],[141,37,119,81],[141,45,119,81,"arguments"],[141,54,119,81],[141,62,119,81,"undefined"],[141,71,119,81],[141,74,119,81,"arguments"],[141,83,119,81],[141,89,119,84],[141,90,119,85],[142,10,119,85],[142,14,119,87,"p2wpkh"],[142,20,119,102],[142,23,119,102,"arguments"],[142,32,119,102],[142,33,119,102,"length"],[142,39,119,102],[142,47,119,102,"arguments"],[142,56,119,102],[142,64,119,102,"undefined"],[142,73,119,102],[142,76,119,102,"arguments"],[142,85,119,102],[142,91,119,105],[142,96,119,110],[143,10,120,4],[143,14,120,10,"gerenateChunkAddresses"],[143,36,120,32],[143,39,120,35],[143,48,120,10,"gerenateChunkAddresses"],[143,70,120,32,"gerenateChunkAddresses"],[143,71,120,36,"chunkNum"],[143,79,120,52],[143,81,120,57],[144,12,121,6],[144,16,121,12,"ret"],[144,19,121,15],[144,22,121,18],[144,24,121,20],[145,12,122,6],[145,17,122,11],[145,21,122,15,"c"],[145,22,122,16],[145,25,122,19,"_this2"],[145,31,122,23],[145,32,122,24,"gap_limit"],[145,41,122,33],[145,44,122,36,"chunkNum"],[145,52,122,44],[145,54,122,46,"c"],[145,55,122,47],[145,58,122,50,"_this2"],[145,64,122,54],[145,65,122,55,"gap_limit"],[145,74,122,64],[145,78,122,68,"chunkNum"],[145,86,122,76],[145,89,122,79],[145,90,122,80],[145,91,122,81],[145,93,122,83,"c"],[145,94,122,84],[145,96,122,86],[145,98,122,88],[146,14,123,8,"ret"],[146,17,123,11],[146,18,123,12,"push"],[146,22,123,16],[146,23,123,17,"_this2"],[146,29,123,21],[146,30,123,22,"_calcNodeAddressByIndex"],[146,53,123,45],[146,54,123,46,"node"],[146,58,123,50],[146,60,123,52,"c"],[146,61,123,53],[146,63,123,55,"p2wpkh"],[146,69,123,61],[146,70,123,62],[146,71,123,63],[147,12,124,6],[148,12,125,6],[148,19,125,13,"ret"],[148,22,125,16],[149,10,126,4],[149,11,126,5],[150,10,128,4],[150,14,128,8,"lastChunkWithUsedAddressesNum"],[150,43,128,45],[151,10,129,4],[151,14,129,8,"lastHistoriesWithUsedAddresses"],[151,44,129,73],[152,10,130,4],[152,15,130,9],[152,19,130,13,"c"],[152,20,130,14],[152,23,130,17],[152,24,130,18],[152,26,130,20,"c"],[152,27,130,21],[152,30,130,24,"Math"],[152,34,130,28],[152,35,130,29,"round"],[152,40,130,34],[152,41,130,35,"endIndex"],[152,49,130,43],[152,52,130,46],[152,56,130,50],[152,57,130,51,"gap_limit"],[152,66,130,60],[152,67,130,61],[152,69,130,63,"c"],[152,70,130,64],[152,72,130,66],[152,74,130,68],[153,12,131,6],[153,16,131,12,"histories"],[153,25,131,21],[153,34,131,30,"BlueElectrum"],[153,46,131,42],[153,47,131,43,"multiGetHistoryByAddress"],[153,71,131,67],[153,72,131,68,"gerenateChunkAddresses"],[153,94,131,90],[153,95,131,91,"c"],[153,96,131,92],[153,97,131,93],[153,98,131,94],[154,12,132,6],[154,16,132,10,"AbstractHDElectrumWallet"],[154,47,132,10],[154,48,132,10,"AbstractHDElectrumWallet"],[154,105,132,34],[154,106,132,35,"_getTransactionsFromHistories"],[154,135,132,64],[154,136,132,65,"histories"],[154,145,132,74],[154,146,132,75],[154,147,132,76,"length"],[154,153,132,82],[154,156,132,85],[154,157,132,86],[154,159,132,88],[155,14,133,8],[156,14,134,8,"lastChunkWithUsedAddressesNum"],[156,43,134,37],[156,46,134,40,"c"],[156,47,134,41],[157,14,135,8,"lastHistoriesWithUsedAddresses"],[157,44,135,38],[157,47,135,41,"histories"],[157,56,135,50],[158,12,136,6],[158,13,136,7],[158,19,136,13],[159,14,137,8],[160,14,138,8],[161,12,139,6],[162,10,140,4],[163,10,142,4],[163,14,142,8,"lastUsedIndex"],[163,27,142,21],[163,30,142,24,"startIndex"],[163,40,142,34],[164,10,144,4],[164,14,144,8,"lastHistoriesWithUsedAddresses"],[164,44,144,38],[164,46,144,41],[165,12,145,6],[166,12,146,6],[166,17,147,8],[166,21,147,12,"c"],[166,23,147,13],[166,26,147,16,"lastChunkWithUsedAddressesNum"],[166,55,147,45],[166,58,147,49],[166,62,147,53],[166,63,147,54,"gap_limit"],[166,72,147,63],[166,74,148,8,"c"],[166,76,148,9],[166,79,148,12,"lastChunkWithUsedAddressesNum"],[166,108,148,41],[166,111,148,45],[166,115,148,49],[166,116,148,50,"gap_limit"],[166,125,148,59],[166,128,148,62],[166,132,148,66],[166,133,148,67,"gap_limit"],[166,142,148,76],[166,144,149,8,"c"],[166,146,149,9],[166,148,149,11],[166,150,150,8],[167,14,151,8],[167,18,151,14,"address"],[167,25,151,21],[167,28,151,24],[167,32,151,28],[167,33,151,29,"_calcNodeAddressByIndex"],[167,56,151,52],[167,57,151,53,"node"],[167,61,151,57],[167,63,151,59,"c"],[167,65,151,60],[167,67,151,62,"p2wpkh"],[167,73,151,68],[167,74,151,69],[168,14,152,8],[168,18,152,12,"lastHistoriesWithUsedAddresses"],[168,48,152,42],[168,49,152,43,"address"],[168,56,152,50],[168,57,152,51],[168,61,152,55,"lastHistoriesWithUsedAddresses"],[168,91,152,85],[168,92,152,86,"address"],[168,99,152,93],[168,100,152,94],[168,101,152,95,"length"],[168,107,152,101],[168,110,152,104],[168,111,152,105],[168,113,152,107],[169,16,153,10,"lastUsedIndex"],[169,29,153,23],[169,32,153,26,"Math"],[169,36,153,30],[169,37,153,31,"max"],[169,40,153,34],[169,41,153,35,"c"],[169,43,153,36],[169,45,153,38,"lastUsedIndex"],[169,58,153,51],[169,59,153,52],[169,62,153,55],[169,63,153,56],[169,64,153,57],[169,65,153,58],[170,14,154,8],[171,12,155,6],[172,10,156,4],[173,10,158,4],[173,17,158,11,"lastUsedIndex"],[173,30,158,24],[174,8,159,2],[174,9,159,3],[175,8,159,3],[175,17,119,8,"_binarySearchIteration"],[175,39,119,30,"_binarySearchIteration"],[175,40,119,30,"_x"],[175,42,119,30],[175,44,119,30,"_x2"],[175,47,119,30],[176,10,119,30],[176,17,119,30,"_binarySearchIteration2"],[176,40,119,30],[176,41,119,30,"apply"],[176,46,119,30],[176,53,119,30,"arguments"],[176,62,119,30],[177,8,119,30],[178,8,119,30],[178,15,119,8,"_binarySearchIteration"],[178,37,119,30],[179,6,119,30],[180,4,119,30],[181,6,119,30,"key"],[181,9,119,30],[182,6,119,30,"value"],[182,11,119,30],[182,13,161,2],[182,22,161,2,"_addPsbtInput"],[182,35,161,15,"_addPsbtInput"],[182,36,161,16,"psbt"],[182,40,161,26],[182,42,161,28,"input"],[182,47,161,56],[182,49,161,58,"sequence"],[182,57,161,74],[182,59,161,76,"masterFingerprintBuffer"],[182,82,161,107],[182,84,161,109],[183,8,161,109],[183,12,161,109,"_input$address"],[183,26,161,109],[184,8,162,4],[185,8,163,4],[186,8,164,4],[187,8,165,4],[187,12,165,10,"ProxyClass"],[187,22,165,20],[187,25,165,23,"input"],[187,30,165,28],[187,43,165,28,"_input$address"],[187,57,165,28],[187,60,165,23,"input"],[187,65,165,28],[187,66,165,30,"address"],[187,73,165,37],[187,86,165,23,"_input$address"],[187,100,165,23],[187,101,165,39,"startsWith"],[187,111,165,49],[187,112,165,50],[187,117,165,55],[187,118,165,56],[187,121,165,59,"AbstractHDElectrumWallet"],[187,152,165,59],[187,153,165,59,"AbstractHDElectrumWallet"],[187,210,165,83],[187,213,165,86,"HDLegacyP2PKHWallet"],[187,244,165,86],[187,245,165,86,"HDLegacyP2PKHWallet"],[187,292,165,105],[188,8,166,4],[188,12,166,10,"proxy"],[188,17,166,15],[188,20,166,18],[188,24,166,22,"ProxyClass"],[188,34,166,32],[188,35,166,33],[188,36,166,34],[189,8,167,4],[189,15,167,11,"proxy"],[189,20,167,16],[189,21,167,17,"_addPsbtInput"],[189,34,167,30],[189,35,167,31,"apply"],[189,40,167,36],[189,41,167,37],[189,45,167,41],[189,47,167,43],[189,48,167,44,"psbt"],[189,52,167,48],[189,54,167,50,"input"],[189,59,167,55],[189,61,167,57,"sequence"],[189,69,167,65],[189,71,167,67,"masterFingerprintBuffer"],[189,94,167,90],[189,95,167,91],[189,96,167,92],[190,6,168,2],[191,4,168,3],[192,2,168,3],[192,4,18,47,"HDLegacyP2PKHWallet"],[192,35,18,47],[192,36,18,47,"HDLegacyP2PKHWallet"],[192,83,18,66],[193,2,18,13,"HDLegacyBreadwalletWallet"],[193,27,18,38],[193,28,19,18,"type"],[193,32,19,22],[193,35,19,25],[193,56,19,46],[194,2,18,13,"HDLegacyBreadwalletWallet"],[194,27,18,38],[194,28,20,18,"typeReadable"],[194,40,20,30],[194,43,20,33],[194,74,20,64],[195,2,18,13,"HDLegacyBreadwalletWallet"],[195,27,18,38],[195,28,25,18,"derivationPath"],[195,42,25,32],[195,45,25,35],[195,51,25,41],[196,0,25,41],[196,3]],"functionMap":{"names":["<global>","HDLegacyBreadwalletWallet","HDLegacyBreadwalletWallet#_calcNodeAddressByIndex","HDLegacyBreadwalletWallet#_getNodeAddressByIndex","HDLegacyBreadwalletWallet#fetchBalance","HDLegacyBreadwalletWallet#_binarySearchIteration","gerenateChunkAddresses","HDLegacyBreadwalletWallet#_addPsbtInput"],"mappings":"AAA;OCiB;ECc;GDqB;EEK;GF6B;EGE;GH4B;EIE;mCCC;KDM;GJiC;EME;GNO;CDC"}},"type":"js/module"}]}