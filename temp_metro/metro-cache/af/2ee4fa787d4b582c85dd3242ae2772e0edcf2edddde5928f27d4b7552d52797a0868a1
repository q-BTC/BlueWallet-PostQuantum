{"dependencies":[{"name":"../tokenizer/const","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":11,"column":11,"index":436},"end":{"line":11,"column":25,"index":450}},{"start":{"line":12,"column":11,"index":463},"end":{"line":12,"column":25,"index":477}}],"key":"6b/ARb+ibumpbmC11sZY9D+4SmM="}},{"name":"../common/TokenStream","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":18,"index":132},"end":{"line":3,"column":50,"index":164}}],"key":"vGDH+tOFOSMdeulZRr3iYmyZGhY="}},{"name":"../common/OffsetToLocation","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":23,"index":23},"end":{"line":1,"column":60,"index":60}}],"key":"Q1GFKQ2/xqNvVsaI8FzjNMtslwA="}},{"name":"./sequence","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15,"index":375},"end":{"line":8,"column":36,"index":396}}],"key":"3H2SJZLziDyEYiO7CRcbBaXh6dw="}},{"name":"../common/List","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":11,"index":177},"end":{"line":4,"column":36,"index":202}},{"start":{"line":4,"column":11,"index":177},"end":{"line":4,"column":36,"index":202}}],"key":"O1BxckxP8xea+N4BLQHDv6IfpVU="}},{"name":"../tokenizer/utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":0,"index":291},"end":{"line":7,"column":68,"index":359}},{"start":{"line":7,"column":0,"index":291},"end":{"line":7,"column":68,"index":359}}],"key":"+XUJWYS23BK9kdI+fRlOnbCI6VE="}},{"name":"../common/SyntaxError","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":80},"end":{"line":2,"column":50,"index":112}}],"key":"03HcO7Mns/sjwZ1XYxc4CE6XNHE="}},{"name":"../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":15,"index":219},"end":{"line":5,"column":38,"index":242}}],"key":"CeLPNCNjt8y0xnwsIyTQzXoUUj0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var noop = function noop() {};\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.WhiteSpace;\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Comment;\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Ident;\n  var FUNCTION = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Function;\n  var URL = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Url;\n  var HASH = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Hash;\n  var PERCENTAGE = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Percentage;\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").TYPE.Number;\n  var NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\n  var NULL = 0;\n  function createParseContext(name) {\n    return function () {\n      return this[name]();\n    };\n  }\n  function processConfig(config) {\n    var parserConfig = {\n      context: {},\n      scope: {},\n      atrule: {},\n      pseudo: {}\n    };\n    if (config.parseContext) {\n      for (var name in config.parseContext) {\n        switch (typeof config.parseContext[name]) {\n          case 'function':\n            parserConfig.context[name] = config.parseContext[name];\n            break;\n          case 'string':\n            parserConfig.context[name] = createParseContext(config.parseContext[name]);\n            break;\n        }\n      }\n    }\n    if (config.scope) {\n      for (var name in config.scope) {\n        parserConfig.scope[name] = config.scope[name];\n      }\n    }\n    if (config.atrule) {\n      for (var name in config.atrule) {\n        var atrule = config.atrule[name];\n        if (atrule.parse) {\n          parserConfig.atrule[name] = atrule.parse;\n        }\n      }\n    }\n    if (config.pseudo) {\n      for (var name in config.pseudo) {\n        var pseudo = config.pseudo[name];\n        if (pseudo.parse) {\n          parserConfig.pseudo[name] = pseudo.parse;\n        }\n      }\n    }\n    if (config.node) {\n      for (var name in config.node) {\n        parserConfig[name] = config.node[name].parse;\n      }\n    }\n    return parserConfig;\n  }\n  module.exports = function createParser(config) {\n    var parser = {\n      scanner: new (_$$_REQUIRE(_dependencyMap[1], \"../common/TokenStream\"))(),\n      locationMap: new (_$$_REQUIRE(_dependencyMap[2], \"../common/OffsetToLocation\"))(),\n      filename: '<unknown>',\n      needPositions: false,\n      onParseError: noop,\n      onParseErrorThrow: false,\n      parseAtrulePrelude: true,\n      parseRulePrelude: true,\n      parseValue: true,\n      parseCustomProperty: false,\n      readSequence: _$$_REQUIRE(_dependencyMap[3], \"./sequence\"),\n      createList: function createList() {\n        return new (_$$_REQUIRE(_dependencyMap[4], \"../common/List\"))();\n      },\n      createSingleNodeList: function createSingleNodeList(node) {\n        return new (_$$_REQUIRE(_dependencyMap[4], \"../common/List\"))().appendData(node);\n      },\n      getFirstListNode: function getFirstListNode(list) {\n        return list && list.first();\n      },\n      getLastListNode: function getLastListNode(list) {\n        return list.last();\n      },\n      parseWithFallback: function parseWithFallback(consumer, fallback) {\n        var startToken = this.scanner.tokenIndex;\n        try {\n          return consumer.call(this);\n        } catch (e) {\n          if (this.onParseErrorThrow) {\n            throw e;\n          }\n          var fallbackNode = fallback.call(this, startToken);\n          this.onParseErrorThrow = true;\n          this.onParseError(e, fallbackNode);\n          this.onParseErrorThrow = false;\n          return fallbackNode;\n        }\n      },\n      lookupNonWSType: function lookupNonWSType(offset) {\n        do {\n          var type = this.scanner.lookupType(offset++);\n          if (type !== WHITESPACE) {\n            return type;\n          }\n        } while (type !== NULL);\n        return NULL;\n      },\n      eat: function eat(tokenType) {\n        if (this.scanner.tokenType !== tokenType) {\n          var offset = this.scanner.tokenStart;\n          var message = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer/const\").NAME[tokenType] + ' is expected';\n\n          // tweak message and offset\n          switch (tokenType) {\n            case IDENT:\n              // when identifier is expected but there is a function or url\n              if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\n                offset = this.scanner.tokenEnd - 1;\n                message = 'Identifier is expected but function found';\n              } else {\n                message = 'Identifier is expected';\n              }\n              break;\n            case HASH:\n              if (this.scanner.isDelim(NUMBERSIGN)) {\n                this.scanner.next();\n                offset++;\n                message = 'Name is expected';\n              }\n              break;\n            case PERCENTAGE:\n              if (this.scanner.tokenType === NUMBER) {\n                offset = this.scanner.tokenEnd;\n                message = 'Percent sign is expected';\n              }\n              break;\n            default:\n              // when test type is part of another token show error for current position + 1\n              // e.g. eat(HYPHENMINUS) will fail on \"-foo\", but pointing on \"-\" is odd\n              if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\n                offset = offset + 1;\n              }\n          }\n          this.error(message, offset);\n        }\n        this.scanner.next();\n      },\n      consume: function consume(tokenType) {\n        var value = this.scanner.getTokenValue();\n        this.eat(tokenType);\n        return value;\n      },\n      consumeFunctionName: function consumeFunctionName() {\n        var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\n        this.eat(FUNCTION);\n        return name;\n      },\n      getLocation: function getLocation(start, end) {\n        if (this.needPositions) {\n          return this.locationMap.getLocationRange(start, end, this.filename);\n        }\n        return null;\n      },\n      getLocationFromList: function getLocationFromList(list) {\n        if (this.needPositions) {\n          var head = this.getFirstListNode(list);\n          var tail = this.getLastListNode(list);\n          return this.locationMap.getLocationRange(head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart, tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart, this.filename);\n        }\n        return null;\n      },\n      error: function error(message, offset) {\n        var location = typeof offset !== 'undefined' && offset < this.scanner.source.length ? this.locationMap.getLocation(offset) : this.scanner.eof ? this.locationMap.getLocation(_$$_REQUIRE(_dependencyMap[5], \"../tokenizer/utils\").findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1)) : this.locationMap.getLocation(this.scanner.tokenStart);\n        throw new (_$$_REQUIRE(_dependencyMap[6], \"../common/SyntaxError\"))(message || 'Unexpected input', this.scanner.source, location.offset, location.line, location.column);\n      }\n    };\n    config = processConfig(config || {});\n    for (var key in config) {\n      parser[key] = config[key];\n    }\n    return function (source, options) {\n      options = options || {};\n      var context = options.context || 'default';\n      var onComment = options.onComment;\n      var ast;\n      _$$_REQUIRE(_dependencyMap[7], \"../tokenizer\")(source, parser.scanner);\n      parser.locationMap.setSource(source, options.offset, options.line, options.column);\n      parser.filename = options.filename || '<unknown>';\n      parser.needPositions = Boolean(options.positions);\n      parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\n      parser.onParseErrorThrow = false;\n      parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n      parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n      parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n      parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n      if (!parser.context.hasOwnProperty(context)) {\n        throw new Error('Unknown context `' + context + '`');\n      }\n      if (typeof onComment === 'function') {\n        parser.scanner.forEachToken(function (type, start, end) {\n          if (type === COMMENT) {\n            var loc = parser.getLocation(start, end);\n            var value = _$$_REQUIRE(_dependencyMap[5], \"../tokenizer/utils\").cmpStr(source, end - 2, end, '*/') ? source.slice(start + 2, end - 2) : source.slice(start + 2, end);\n            onComment(value, loc);\n          }\n        });\n      }\n      ast = parser.context[context].call(parser, options);\n      if (!parser.scanner.eof) {\n        parser.error();\n      }\n      return ast;\n    };\n  };\n});","lineCount":221,"map":[[2,2,9,0],[2,6,9,4,"noop"],[2,10,9,8],[2,13,9,11],[2,22,9,4,"noop"],[2,26,9,8,"noop"],[2,27,9,8],[2,29,9,22],[2,30,9,23],[2,31,9,24],[3,2,13,0],[3,6,13,4,"WHITESPACE"],[3,16,13,14],[3,19,13,17,"_$$_REQUIRE"],[3,30,13,17],[3,31,13,17,"_dependencyMap"],[3,45,13,17],[3,72,13,17,"TYPE"],[3,76,13,17],[3,77,13,22,"WhiteSpace"],[3,87,13,32],[4,2,14,0],[4,6,14,4,"COMMENT"],[4,13,14,11],[4,16,14,14,"_$$_REQUIRE"],[4,27,14,14],[4,28,14,14,"_dependencyMap"],[4,42,14,14],[4,69,14,14,"TYPE"],[4,73,14,14],[4,74,14,19,"Comment"],[4,81,14,26],[5,2,15,0],[5,6,15,4,"IDENT"],[5,11,15,9],[5,14,15,12,"_$$_REQUIRE"],[5,25,15,12],[5,26,15,12,"_dependencyMap"],[5,40,15,12],[5,67,15,12,"TYPE"],[5,71,15,12],[5,72,15,17,"Ident"],[5,77,15,22],[6,2,16,0],[6,6,16,4,"FUNCTION"],[6,14,16,12],[6,17,16,15,"_$$_REQUIRE"],[6,28,16,15],[6,29,16,15,"_dependencyMap"],[6,43,16,15],[6,70,16,15,"TYPE"],[6,74,16,15],[6,75,16,20,"Function"],[6,83,16,28],[7,2,17,0],[7,6,17,4,"URL"],[7,9,17,7],[7,12,17,10,"_$$_REQUIRE"],[7,23,17,10],[7,24,17,10,"_dependencyMap"],[7,38,17,10],[7,65,17,10,"TYPE"],[7,69,17,10],[7,70,17,15,"Url"],[7,73,17,18],[8,2,18,0],[8,6,18,4,"HASH"],[8,10,18,8],[8,13,18,11,"_$$_REQUIRE"],[8,24,18,11],[8,25,18,11,"_dependencyMap"],[8,39,18,11],[8,66,18,11,"TYPE"],[8,70,18,11],[8,71,18,16,"Hash"],[8,75,18,20],[9,2,19,0],[9,6,19,4,"PERCENTAGE"],[9,16,19,14],[9,19,19,17,"_$$_REQUIRE"],[9,30,19,17],[9,31,19,17,"_dependencyMap"],[9,45,19,17],[9,72,19,17,"TYPE"],[9,76,19,17],[9,77,19,22,"Percentage"],[9,87,19,32],[10,2,20,0],[10,6,20,4,"NUMBER"],[10,12,20,10],[10,15,20,13,"_$$_REQUIRE"],[10,26,20,13],[10,27,20,13,"_dependencyMap"],[10,41,20,13],[10,68,20,13,"TYPE"],[10,72,20,13],[10,73,20,18,"Number"],[10,79,20,24],[11,2,21,0],[11,6,21,4,"NUMBERSIGN"],[11,16,21,14],[11,19,21,17],[11,25,21,23],[11,26,21,24],[11,27,21,25],[12,2,22,0],[12,6,22,4,"NULL"],[12,10,22,8],[12,13,22,11],[12,14,22,12],[13,2,24,0],[13,11,24,9,"createParseContext"],[13,29,24,27,"createParseContext"],[13,30,24,28,"name"],[13,34,24,32],[13,36,24,34],[14,4,25,4],[14,11,25,11],[14,23,25,22],[15,6,26,8],[15,13,26,15],[15,17,26,19],[15,18,26,20,"name"],[15,22,26,24],[15,23,26,25],[15,24,26,26],[15,25,26,27],[16,4,27,4],[16,5,27,5],[17,2,28,0],[18,2,30,0],[18,11,30,9,"processConfig"],[18,24,30,22,"processConfig"],[18,25,30,23,"config"],[18,31,30,29],[18,33,30,31],[19,4,31,4],[19,8,31,8,"parserConfig"],[19,20,31,20],[19,23,31,23],[20,6,32,8,"context"],[20,13,32,15],[20,15,32,17],[20,16,32,18],[20,17,32,19],[21,6,33,8,"scope"],[21,11,33,13],[21,13,33,15],[21,14,33,16],[21,15,33,17],[22,6,34,8,"atrule"],[22,12,34,14],[22,14,34,16],[22,15,34,17],[22,16,34,18],[23,6,35,8,"pseudo"],[23,12,35,14],[23,14,35,16],[23,15,35,17],[24,4,36,4],[24,5,36,5],[25,4,38,4],[25,8,38,8,"config"],[25,14,38,14],[25,15,38,15,"parseContext"],[25,27,38,27],[25,29,38,29],[26,6,39,8],[26,11,39,13],[26,15,39,17,"name"],[26,19,39,21],[26,23,39,25,"config"],[26,29,39,31],[26,30,39,32,"parseContext"],[26,42,39,44],[26,44,39,46],[27,8,40,12],[27,16,40,20],[27,23,40,27,"config"],[27,29,40,33],[27,30,40,34,"parseContext"],[27,42,40,46],[27,43,40,47,"name"],[27,47,40,51],[27,48,40,52],[28,10,41,16],[28,15,41,21],[28,25,41,31],[29,12,42,20,"parserConfig"],[29,24,42,32],[29,25,42,33,"context"],[29,32,42,40],[29,33,42,41,"name"],[29,37,42,45],[29,38,42,46],[29,41,42,49,"config"],[29,47,42,55],[29,48,42,56,"parseContext"],[29,60,42,68],[29,61,42,69,"name"],[29,65,42,73],[29,66,42,74],[30,12,43,20],[31,10,45,16],[31,15,45,21],[31,23,45,29],[32,12,46,20,"parserConfig"],[32,24,46,32],[32,25,46,33,"context"],[32,32,46,40],[32,33,46,41,"name"],[32,37,46,45],[32,38,46,46],[32,41,46,49,"createParseContext"],[32,59,46,67],[32,60,46,68,"config"],[32,66,46,74],[32,67,46,75,"parseContext"],[32,79,46,87],[32,80,46,88,"name"],[32,84,46,92],[32,85,46,93],[32,86,46,94],[33,12,47,20],[34,8,48,12],[35,6,49,8],[36,4,50,4],[37,4,52,4],[37,8,52,8,"config"],[37,14,52,14],[37,15,52,15,"scope"],[37,20,52,20],[37,22,52,22],[38,6,53,8],[38,11,53,13],[38,15,53,17,"name"],[38,19,53,21],[38,23,53,25,"config"],[38,29,53,31],[38,30,53,32,"scope"],[38,35,53,37],[38,37,53,39],[39,8,54,12,"parserConfig"],[39,20,54,24],[39,21,54,25,"scope"],[39,26,54,30],[39,27,54,31,"name"],[39,31,54,35],[39,32,54,36],[39,35,54,39,"config"],[39,41,54,45],[39,42,54,46,"scope"],[39,47,54,51],[39,48,54,52,"name"],[39,52,54,56],[39,53,54,57],[40,6,55,8],[41,4,56,4],[42,4,58,4],[42,8,58,8,"config"],[42,14,58,14],[42,15,58,15,"atrule"],[42,21,58,21],[42,23,58,23],[43,6,59,8],[43,11,59,13],[43,15,59,17,"name"],[43,19,59,21],[43,23,59,25,"config"],[43,29,59,31],[43,30,59,32,"atrule"],[43,36,59,38],[43,38,59,40],[44,8,60,12],[44,12,60,16,"atrule"],[44,18,60,22],[44,21,60,25,"config"],[44,27,60,31],[44,28,60,32,"atrule"],[44,34,60,38],[44,35,60,39,"name"],[44,39,60,43],[44,40,60,44],[45,8,62,12],[45,12,62,16,"atrule"],[45,18,62,22],[45,19,62,23,"parse"],[45,24,62,28],[45,26,62,30],[46,10,63,16,"parserConfig"],[46,22,63,28],[46,23,63,29,"atrule"],[46,29,63,35],[46,30,63,36,"name"],[46,34,63,40],[46,35,63,41],[46,38,63,44,"atrule"],[46,44,63,50],[46,45,63,51,"parse"],[46,50,63,56],[47,8,64,12],[48,6,65,8],[49,4,66,4],[50,4,68,4],[50,8,68,8,"config"],[50,14,68,14],[50,15,68,15,"pseudo"],[50,21,68,21],[50,23,68,23],[51,6,69,8],[51,11,69,13],[51,15,69,17,"name"],[51,19,69,21],[51,23,69,25,"config"],[51,29,69,31],[51,30,69,32,"pseudo"],[51,36,69,38],[51,38,69,40],[52,8,70,12],[52,12,70,16,"pseudo"],[52,18,70,22],[52,21,70,25,"config"],[52,27,70,31],[52,28,70,32,"pseudo"],[52,34,70,38],[52,35,70,39,"name"],[52,39,70,43],[52,40,70,44],[53,8,72,12],[53,12,72,16,"pseudo"],[53,18,72,22],[53,19,72,23,"parse"],[53,24,72,28],[53,26,72,30],[54,10,73,16,"parserConfig"],[54,22,73,28],[54,23,73,29,"pseudo"],[54,29,73,35],[54,30,73,36,"name"],[54,34,73,40],[54,35,73,41],[54,38,73,44,"pseudo"],[54,44,73,50],[54,45,73,51,"parse"],[54,50,73,56],[55,8,74,12],[56,6,75,8],[57,4,76,4],[58,4,78,4],[58,8,78,8,"config"],[58,14,78,14],[58,15,78,15,"node"],[58,19,78,19],[58,21,78,21],[59,6,79,8],[59,11,79,13],[59,15,79,17,"name"],[59,19,79,21],[59,23,79,25,"config"],[59,29,79,31],[59,30,79,32,"node"],[59,34,79,36],[59,36,79,38],[60,8,80,12,"parserConfig"],[60,20,80,24],[60,21,80,25,"name"],[60,25,80,29],[60,26,80,30],[60,29,80,33,"config"],[60,35,80,39],[60,36,80,40,"node"],[60,40,80,44],[60,41,80,45,"name"],[60,45,80,49],[60,46,80,50],[60,47,80,51,"parse"],[60,52,80,56],[61,6,81,8],[62,4,82,4],[63,4,84,4],[63,11,84,11,"parserConfig"],[63,23,84,23],[64,2,85,0],[65,2,87,0,"module"],[65,8,87,6],[65,9,87,7,"exports"],[65,16,87,14],[65,19,87,17],[65,28,87,26,"createParser"],[65,40,87,38,"createParser"],[65,41,87,39,"config"],[65,47,87,45],[65,49,87,47],[66,4,88,4],[66,8,88,8,"parser"],[66,14,88,14],[66,17,88,17],[67,6,89,8,"scanner"],[67,13,89,15],[67,15,89,17],[67,20,89,17,"_$$_REQUIRE"],[67,31,89,17],[67,32,89,17,"_dependencyMap"],[67,46,89,17],[67,77,89,33],[67,78,89,34],[68,6,90,8,"locationMap"],[68,17,90,19],[68,19,90,21],[68,24,90,21,"_$$_REQUIRE"],[68,35,90,21],[68,36,90,21,"_dependencyMap"],[68,50,90,21],[68,86,90,42],[68,87,90,43],[69,6,92,8,"filename"],[69,14,92,16],[69,16,92,18],[69,27,92,29],[70,6,93,8,"needPositions"],[70,19,93,21],[70,21,93,23],[70,26,93,28],[71,6,94,8,"onParseError"],[71,18,94,20],[71,20,94,22,"noop"],[71,24,94,26],[72,6,95,8,"onParseErrorThrow"],[72,23,95,25],[72,25,95,27],[72,30,95,32],[73,6,96,8,"parseAtrulePrelude"],[73,24,96,26],[73,26,96,28],[73,30,96,32],[74,6,97,8,"parseRulePrelude"],[74,22,97,24],[74,24,97,26],[74,28,97,30],[75,6,98,8,"parseValue"],[75,16,98,18],[75,18,98,20],[75,22,98,24],[76,6,99,8,"parseCustomProperty"],[76,25,99,27],[76,27,99,29],[76,32,99,34],[77,6,101,8,"readSequence"],[77,18,101,20],[77,20,101,20,"_$$_REQUIRE"],[77,31,101,20],[77,32,101,20,"_dependencyMap"],[77,46,101,20],[77,64,101,30],[78,6,103,8,"createList"],[78,16,103,18],[78,18,103,20],[78,27,103,8,"createList"],[78,37,103,18,"createList"],[78,38,103,18],[78,40,103,31],[79,8,104,12],[79,15,104,19],[79,20,104,19,"_$$_REQUIRE"],[79,31,104,19],[79,32,104,19,"_dependencyMap"],[79,46,104,19],[79,70,104,28],[79,71,104,29],[80,6,105,8],[80,7,105,9],[81,6,106,8,"createSingleNodeList"],[81,26,106,28],[81,28,106,30],[81,37,106,8,"createSingleNodeList"],[81,57,106,28,"createSingleNodeList"],[81,58,106,39,"node"],[81,62,106,43],[81,64,106,45],[82,8,107,12],[82,15,107,19],[82,20,107,19,"_$$_REQUIRE"],[82,31,107,19],[82,32,107,19,"_dependencyMap"],[82,46,107,19],[82,70,107,28],[82,71,107,29],[82,72,107,30,"appendData"],[82,82,107,40],[82,83,107,41,"node"],[82,87,107,45],[82,88,107,46],[83,6,108,8],[83,7,108,9],[84,6,109,8,"getFirstListNode"],[84,22,109,24],[84,24,109,26],[84,33,109,8,"getFirstListNode"],[84,49,109,24,"getFirstListNode"],[84,50,109,35,"list"],[84,54,109,39],[84,56,109,41],[85,8,110,12],[85,15,110,19,"list"],[85,19,110,23],[85,23,110,27,"list"],[85,27,110,31],[85,28,110,32,"first"],[85,33,110,37],[85,34,110,38],[85,35,110,39],[86,6,111,8],[86,7,111,9],[87,6,112,8,"getLastListNode"],[87,21,112,23],[87,23,112,25],[87,32,112,8,"getLastListNode"],[87,47,112,23,"getLastListNode"],[87,48,112,34,"list"],[87,52,112,38],[87,54,112,40],[88,8,113,12],[88,15,113,19,"list"],[88,19,113,23],[88,20,113,24,"last"],[88,24,113,28],[88,25,113,29],[88,26,113,30],[89,6,114,8],[89,7,114,9],[90,6,116,8,"parseWithFallback"],[90,23,116,25],[90,25,116,27],[90,34,116,8,"parseWithFallback"],[90,51,116,25,"parseWithFallback"],[90,52,116,36,"consumer"],[90,60,116,44],[90,62,116,46,"fallback"],[90,70,116,54],[90,72,116,56],[91,8,117,12],[91,12,117,16,"startToken"],[91,22,117,26],[91,25,117,29],[91,29,117,33],[91,30,117,34,"scanner"],[91,37,117,41],[91,38,117,42,"tokenIndex"],[91,48,117,52],[92,8,119,12],[92,12,119,16],[93,10,120,16],[93,17,120,23,"consumer"],[93,25,120,31],[93,26,120,32,"call"],[93,30,120,36],[93,31,120,37],[93,35,120,41],[93,36,120,42],[94,8,121,12],[94,9,121,13],[94,10,121,14],[94,17,121,21,"e"],[94,18,121,22],[94,20,121,24],[95,10,122,16],[95,14,122,20],[95,18,122,24],[95,19,122,25,"onParseErrorThrow"],[95,36,122,42],[95,38,122,44],[96,12,123,20],[96,18,123,26,"e"],[96,19,123,27],[97,10,124,16],[98,10,126,16],[98,14,126,20,"fallbackNode"],[98,26,126,32],[98,29,126,35,"fallback"],[98,37,126,43],[98,38,126,44,"call"],[98,42,126,48],[98,43,126,49],[98,47,126,53],[98,49,126,55,"startToken"],[98,59,126,65],[98,60,126,66],[99,10,128,16],[99,14,128,20],[99,15,128,21,"onParseErrorThrow"],[99,32,128,38],[99,35,128,41],[99,39,128,45],[100,10,129,16],[100,14,129,20],[100,15,129,21,"onParseError"],[100,27,129,33],[100,28,129,34,"e"],[100,29,129,35],[100,31,129,37,"fallbackNode"],[100,43,129,49],[100,44,129,50],[101,10,130,16],[101,14,130,20],[101,15,130,21,"onParseErrorThrow"],[101,32,130,38],[101,35,130,41],[101,40,130,46],[102,10,132,16],[102,17,132,23,"fallbackNode"],[102,29,132,35],[103,8,133,12],[104,6,134,8],[104,7,134,9],[105,6,136,8,"lookupNonWSType"],[105,21,136,23],[105,23,136,25],[105,32,136,8,"lookupNonWSType"],[105,47,136,23,"lookupNonWSType"],[105,48,136,34,"offset"],[105,54,136,40],[105,56,136,42],[106,8,137,12],[106,11,137,15],[107,10,138,16],[107,14,138,20,"type"],[107,18,138,24],[107,21,138,27],[107,25,138,31],[107,26,138,32,"scanner"],[107,33,138,39],[107,34,138,40,"lookupType"],[107,44,138,50],[107,45,138,51,"offset"],[107,51,138,57],[107,53,138,59],[107,54,138,60],[108,10,139,16],[108,14,139,20,"type"],[108,18,139,24],[108,23,139,29,"WHITESPACE"],[108,33,139,39],[108,35,139,41],[109,12,140,20],[109,19,140,27,"type"],[109,23,140,31],[110,10,141,16],[111,8,142,12],[111,9,142,13],[111,17,142,21,"type"],[111,21,142,25],[111,26,142,30,"NULL"],[111,30,142,34],[112,8,144,12],[112,15,144,19,"NULL"],[112,19,144,23],[113,6,145,8],[113,7,145,9],[114,6,147,8,"eat"],[114,9,147,11],[114,11,147,13],[114,20,147,8,"eat"],[114,23,147,11,"eat"],[114,24,147,22,"tokenType"],[114,33,147,31],[114,35,147,33],[115,8,148,12],[115,12,148,16],[115,16,148,20],[115,17,148,21,"scanner"],[115,24,148,28],[115,25,148,29,"tokenType"],[115,34,148,38],[115,39,148,43,"tokenType"],[115,48,148,52],[115,50,148,54],[116,10,149,16],[116,14,149,20,"offset"],[116,20,149,26],[116,23,149,29],[116,27,149,33],[116,28,149,34,"scanner"],[116,35,149,41],[116,36,149,42,"tokenStart"],[116,46,149,52],[117,10,150,16],[117,14,150,20,"message"],[117,21,150,27],[117,24,150,30,"_$$_REQUIRE"],[117,35,150,30],[117,36,150,30,"_dependencyMap"],[117,50,150,30],[117,77,150,30,"NAME"],[117,81,150,30],[117,82,150,35,"tokenType"],[117,91,150,44],[117,92,150,45],[117,95,150,48],[117,109,150,62],[119,10,152,16],[120,10,153,16],[120,18,153,24,"tokenType"],[120,27,153,33],[121,12,154,20],[121,17,154,25,"IDENT"],[121,22,154,30],[122,14,155,24],[123,14,156,24],[123,18,156,28],[123,22,156,32],[123,23,156,33,"scanner"],[123,30,156,40],[123,31,156,41,"tokenType"],[123,40,156,50],[123,45,156,55,"FUNCTION"],[123,53,156,63],[123,57,156,67],[123,61,156,71],[123,62,156,72,"scanner"],[123,69,156,79],[123,70,156,80,"tokenType"],[123,79,156,89],[123,84,156,94,"URL"],[123,87,156,97],[123,89,156,99],[124,16,157,28,"offset"],[124,22,157,34],[124,25,157,37],[124,29,157,41],[124,30,157,42,"scanner"],[124,37,157,49],[124,38,157,50,"tokenEnd"],[124,46,157,58],[124,49,157,61],[124,50,157,62],[125,16,158,28,"message"],[125,23,158,35],[125,26,158,38],[125,69,158,81],[126,14,159,24],[126,15,159,25],[126,21,159,31],[127,16,160,28,"message"],[127,23,160,35],[127,26,160,38],[127,50,160,62],[128,14,161,24],[129,14,162,24],[130,12,164,20],[130,17,164,25,"HASH"],[130,21,164,29],[131,14,165,24],[131,18,165,28],[131,22,165,32],[131,23,165,33,"scanner"],[131,30,165,40],[131,31,165,41,"isDelim"],[131,38,165,48],[131,39,165,49,"NUMBERSIGN"],[131,49,165,59],[131,50,165,60],[131,52,165,62],[132,16,166,28],[132,20,166,32],[132,21,166,33,"scanner"],[132,28,166,40],[132,29,166,41,"next"],[132,33,166,45],[132,34,166,46],[132,35,166,47],[133,16,167,28,"offset"],[133,22,167,34],[133,24,167,36],[134,16,168,28,"message"],[134,23,168,35],[134,26,168,38],[134,44,168,56],[135,14,169,24],[136,14,170,24],[137,12,172,20],[137,17,172,25,"PERCENTAGE"],[137,27,172,35],[138,14,173,24],[138,18,173,28],[138,22,173,32],[138,23,173,33,"scanner"],[138,30,173,40],[138,31,173,41,"tokenType"],[138,40,173,50],[138,45,173,55,"NUMBER"],[138,51,173,61],[138,53,173,63],[139,16,174,28,"offset"],[139,22,174,34],[139,25,174,37],[139,29,174,41],[139,30,174,42,"scanner"],[139,37,174,49],[139,38,174,50,"tokenEnd"],[139,46,174,58],[140,16,175,28,"message"],[140,23,175,35],[140,26,175,38],[140,52,175,64],[141,14,176,24],[142,14,177,24],[143,12,179,20],[144,14,180,24],[145,14,181,24],[146,14,182,24],[146,18,182,28],[146,22,182,32],[146,23,182,33,"scanner"],[146,30,182,40],[146,31,182,41,"source"],[146,37,182,47],[146,38,182,48,"charCodeAt"],[146,48,182,58],[146,49,182,59],[146,53,182,63],[146,54,182,64,"scanner"],[146,61,182,71],[146,62,182,72,"tokenStart"],[146,72,182,82],[146,73,182,83],[146,78,182,88,"tokenType"],[146,87,182,97],[146,89,182,99],[147,16,183,28,"offset"],[147,22,183,34],[147,25,183,37,"offset"],[147,31,183,43],[147,34,183,46],[147,35,183,47],[148,14,184,24],[149,10,185,16],[150,10,187,16],[150,14,187,20],[150,15,187,21,"error"],[150,20,187,26],[150,21,187,27,"message"],[150,28,187,34],[150,30,187,36,"offset"],[150,36,187,42],[150,37,187,43],[151,8,188,12],[152,8,190,12],[152,12,190,16],[152,13,190,17,"scanner"],[152,20,190,24],[152,21,190,25,"next"],[152,25,190,29],[152,26,190,30],[152,27,190,31],[153,6,191,8],[153,7,191,9],[154,6,193,8,"consume"],[154,13,193,15],[154,15,193,17],[154,24,193,8,"consume"],[154,31,193,15,"consume"],[154,32,193,26,"tokenType"],[154,41,193,35],[154,43,193,37],[155,8,194,12],[155,12,194,16,"value"],[155,17,194,21],[155,20,194,24],[155,24,194,28],[155,25,194,29,"scanner"],[155,32,194,36],[155,33,194,37,"getTokenValue"],[155,46,194,50],[155,47,194,51],[155,48,194,52],[156,8,196,12],[156,12,196,16],[156,13,196,17,"eat"],[156,16,196,20],[156,17,196,21,"tokenType"],[156,26,196,30],[156,27,196,31],[157,8,198,12],[157,15,198,19,"value"],[157,20,198,24],[158,6,199,8],[158,7,199,9],[159,6,200,8,"consumeFunctionName"],[159,25,200,27],[159,27,200,29],[159,36,200,8,"consumeFunctionName"],[159,55,200,27,"consumeFunctionName"],[159,56,200,27],[159,58,200,40],[160,8,201,12],[160,12,201,16,"name"],[160,16,201,20],[160,19,201,23],[160,23,201,27],[160,24,201,28,"scanner"],[160,31,201,35],[160,32,201,36,"source"],[160,38,201,42],[160,39,201,43,"substring"],[160,48,201,52],[160,49,201,53],[160,53,201,57],[160,54,201,58,"scanner"],[160,61,201,65],[160,62,201,66,"tokenStart"],[160,72,201,76],[160,74,201,78],[160,78,201,82],[160,79,201,83,"scanner"],[160,86,201,90],[160,87,201,91,"tokenEnd"],[160,95,201,99],[160,98,201,102],[160,99,201,103],[160,100,201,104],[161,8,203,12],[161,12,203,16],[161,13,203,17,"eat"],[161,16,203,20],[161,17,203,21,"FUNCTION"],[161,25,203,29],[161,26,203,30],[162,8,205,12],[162,15,205,19,"name"],[162,19,205,23],[163,6,206,8],[163,7,206,9],[164,6,208,8,"getLocation"],[164,17,208,19],[164,19,208,21],[164,28,208,8,"getLocation"],[164,39,208,19,"getLocation"],[164,40,208,30,"start"],[164,45,208,35],[164,47,208,37,"end"],[164,50,208,40],[164,52,208,42],[165,8,209,12],[165,12,209,16],[165,16,209,20],[165,17,209,21,"needPositions"],[165,30,209,34],[165,32,209,36],[166,10,210,16],[166,17,210,23],[166,21,210,27],[166,22,210,28,"locationMap"],[166,33,210,39],[166,34,210,40,"getLocationRange"],[166,50,210,56],[166,51,211,20,"start"],[166,56,211,25],[166,58,212,20,"end"],[166,61,212,23],[166,63,213,20],[166,67,213,24],[166,68,213,25,"filename"],[166,76,214,16],[166,77,214,17],[167,8,215,12],[168,8,217,12],[168,15,217,19],[168,19,217,23],[169,6,218,8],[169,7,218,9],[170,6,219,8,"getLocationFromList"],[170,25,219,27],[170,27,219,29],[170,36,219,8,"getLocationFromList"],[170,55,219,27,"getLocationFromList"],[170,56,219,38,"list"],[170,60,219,42],[170,62,219,44],[171,8,220,12],[171,12,220,16],[171,16,220,20],[171,17,220,21,"needPositions"],[171,30,220,34],[171,32,220,36],[172,10,221,16],[172,14,221,20,"head"],[172,18,221,24],[172,21,221,27],[172,25,221,31],[172,26,221,32,"getFirstListNode"],[172,42,221,48],[172,43,221,49,"list"],[172,47,221,53],[172,48,221,54],[173,10,222,16],[173,14,222,20,"tail"],[173,18,222,24],[173,21,222,27],[173,25,222,31],[173,26,222,32,"getLastListNode"],[173,41,222,47],[173,42,222,48,"list"],[173,46,222,52],[173,47,222,53],[174,10,223,16],[174,17,223,23],[174,21,223,27],[174,22,223,28,"locationMap"],[174,33,223,39],[174,34,223,40,"getLocationRange"],[174,50,223,56],[174,51,224,20,"head"],[174,55,224,24],[174,60,224,29],[174,64,224,33],[174,67,224,36,"head"],[174,71,224,40],[174,72,224,41,"loc"],[174,75,224,44],[174,76,224,45,"start"],[174,81,224,50],[174,82,224,51,"offset"],[174,88,224,57],[174,91,224,60],[174,95,224,64],[174,96,224,65,"locationMap"],[174,107,224,76],[174,108,224,77,"startOffset"],[174,119,224,88],[174,122,224,91],[174,126,224,95],[174,127,224,96,"scanner"],[174,134,224,103],[174,135,224,104,"tokenStart"],[174,145,224,114],[174,147,225,20,"tail"],[174,151,225,24],[174,156,225,29],[174,160,225,33],[174,163,225,36,"tail"],[174,167,225,40],[174,168,225,41,"loc"],[174,171,225,44],[174,172,225,45,"end"],[174,175,225,48],[174,176,225,49,"offset"],[174,182,225,55],[174,185,225,58],[174,189,225,62],[174,190,225,63,"locationMap"],[174,201,225,74],[174,202,225,75,"startOffset"],[174,213,225,86],[174,216,225,89],[174,220,225,93],[174,221,225,94,"scanner"],[174,228,225,101],[174,229,225,102,"tokenStart"],[174,239,225,112],[174,241,226,20],[174,245,226,24],[174,246,226,25,"filename"],[174,254,227,16],[174,255,227,17],[175,8,228,12],[176,8,230,12],[176,15,230,19],[176,19,230,23],[177,6,231,8],[177,7,231,9],[178,6,233,8,"error"],[178,11,233,13],[178,13,233,15],[178,22,233,8,"error"],[178,27,233,13,"error"],[178,28,233,24,"message"],[178,35,233,31],[178,37,233,33,"offset"],[178,43,233,39],[178,45,233,41],[179,8,234,12],[179,12,234,16,"location"],[179,20,234,24],[179,23,234,27],[179,30,234,34,"offset"],[179,36,234,40],[179,41,234,45],[179,52,234,56],[179,56,234,60,"offset"],[179,62,234,66],[179,65,234,69],[179,69,234,73],[179,70,234,74,"scanner"],[179,77,234,81],[179,78,234,82,"source"],[179,84,234,88],[179,85,234,89,"length"],[179,91,234,95],[179,94,235,18],[179,98,235,22],[179,99,235,23,"locationMap"],[179,110,235,34],[179,111,235,35,"getLocation"],[179,122,235,46],[179,123,235,47,"offset"],[179,129,235,53],[179,130,235,54],[179,133,236,18],[179,137,236,22],[179,138,236,23,"scanner"],[179,145,236,30],[179,146,236,31,"eof"],[179,149,236,34],[179,152,237,22],[179,156,237,26],[179,157,237,27,"locationMap"],[179,168,237,38],[179,169,237,39,"getLocation"],[179,180,237,50],[179,181,237,51,"_$$_REQUIRE"],[179,192,237,51],[179,193,237,51,"_dependencyMap"],[179,207,237,51],[179,234,237,51,"findWhiteSpaceStart"],[179,253,237,51],[179,254,237,71],[179,258,237,75],[179,259,237,76,"scanner"],[179,266,237,83],[179,267,237,84,"source"],[179,273,237,90],[179,275,237,92],[179,279,237,96],[179,280,237,97,"scanner"],[179,287,237,104],[179,288,237,105,"source"],[179,294,237,111],[179,295,237,112,"length"],[179,301,237,118],[179,304,237,121],[179,305,237,122],[179,306,237,123],[179,307,237,124],[179,310,238,22],[179,314,238,26],[179,315,238,27,"locationMap"],[179,326,238,38],[179,327,238,39,"getLocation"],[179,338,238,50],[179,339,238,51],[179,343,238,55],[179,344,238,56,"scanner"],[179,351,238,63],[179,352,238,64,"tokenStart"],[179,362,238,74],[179,363,238,75],[180,8,240,12],[180,14,240,18],[180,19,240,18,"_$$_REQUIRE"],[180,30,240,18],[180,31,240,18,"_dependencyMap"],[180,45,240,18],[180,76,241,16,"message"],[180,83,241,23],[180,87,241,27],[180,105,241,45],[180,107,242,16],[180,111,242,20],[180,112,242,21,"scanner"],[180,119,242,28],[180,120,242,29,"source"],[180,126,242,35],[180,128,243,16,"location"],[180,136,243,24],[180,137,243,25,"offset"],[180,143,243,31],[180,145,244,16,"location"],[180,153,244,24],[180,154,244,25,"line"],[180,158,244,29],[180,160,245,16,"location"],[180,168,245,24],[180,169,245,25,"column"],[180,175,246,12],[180,176,246,13],[181,6,247,8],[182,4,248,4],[182,5,248,5],[183,4,250,4,"config"],[183,10,250,10],[183,13,250,13,"processConfig"],[183,26,250,26],[183,27,250,27,"config"],[183,33,250,33],[183,37,250,37],[183,38,250,38],[183,39,250,39],[183,40,250,40],[184,4,251,4],[184,9,251,9],[184,13,251,13,"key"],[184,16,251,16],[184,20,251,20,"config"],[184,26,251,26],[184,28,251,28],[185,6,252,8,"parser"],[185,12,252,14],[185,13,252,15,"key"],[185,16,252,18],[185,17,252,19],[185,20,252,22,"config"],[185,26,252,28],[185,27,252,29,"key"],[185,30,252,32],[185,31,252,33],[186,4,253,4],[187,4,255,4],[187,11,255,11],[187,21,255,20,"source"],[187,27,255,26],[187,29,255,28,"options"],[187,36,255,35],[187,38,255,37],[188,6,256,8,"options"],[188,13,256,15],[188,16,256,18,"options"],[188,23,256,25],[188,27,256,29],[188,28,256,30],[188,29,256,31],[189,6,258,8],[189,10,258,12,"context"],[189,17,258,19],[189,20,258,22,"options"],[189,27,258,29],[189,28,258,30,"context"],[189,35,258,37],[189,39,258,41],[189,48,258,50],[190,6,259,8],[190,10,259,12,"onComment"],[190,19,259,21],[190,22,259,24,"options"],[190,29,259,31],[190,30,259,32,"onComment"],[190,39,259,41],[191,6,260,8],[191,10,260,12,"ast"],[191,13,260,15],[192,6,262,8,"_$$_REQUIRE"],[192,17,262,8],[192,18,262,8,"_dependencyMap"],[192,32,262,8],[192,53,262,17,"source"],[192,59,262,23],[192,61,262,25,"parser"],[192,67,262,31],[192,68,262,32,"scanner"],[192,75,262,39],[192,76,262,40],[193,6,263,8,"parser"],[193,12,263,14],[193,13,263,15,"locationMap"],[193,24,263,26],[193,25,263,27,"setSource"],[193,34,263,36],[193,35,264,12,"source"],[193,41,264,18],[193,43,265,12,"options"],[193,50,265,19],[193,51,265,20,"offset"],[193,57,265,26],[193,59,266,12,"options"],[193,66,266,19],[193,67,266,20,"line"],[193,71,266,24],[193,73,267,12,"options"],[193,80,267,19],[193,81,267,20,"column"],[193,87,268,8],[193,88,268,9],[194,6,270,8,"parser"],[194,12,270,14],[194,13,270,15,"filename"],[194,21,270,23],[194,24,270,26,"options"],[194,31,270,33],[194,32,270,34,"filename"],[194,40,270,42],[194,44,270,46],[194,55,270,57],[195,6,271,8,"parser"],[195,12,271,14],[195,13,271,15,"needPositions"],[195,26,271,28],[195,29,271,31,"Boolean"],[195,36,271,38],[195,37,271,39,"options"],[195,44,271,46],[195,45,271,47,"positions"],[195,54,271,56],[195,55,271,57],[196,6,272,8,"parser"],[196,12,272,14],[196,13,272,15,"onParseError"],[196,25,272,27],[196,28,272,30],[196,35,272,37,"options"],[196,42,272,44],[196,43,272,45,"onParseError"],[196,55,272,57],[196,60,272,62],[196,70,272,72],[196,73,272,75,"options"],[196,80,272,82],[196,81,272,83,"onParseError"],[196,93,272,95],[196,96,272,98,"noop"],[196,100,272,102],[197,6,273,8,"parser"],[197,12,273,14],[197,13,273,15,"onParseErrorThrow"],[197,30,273,32],[197,33,273,35],[197,38,273,40],[198,6,274,8,"parser"],[198,12,274,14],[198,13,274,15,"parseAtrulePrelude"],[198,31,274,33],[198,34,274,36],[198,54,274,56],[198,58,274,60,"options"],[198,65,274,67],[198,68,274,70,"Boolean"],[198,75,274,77],[198,76,274,78,"options"],[198,83,274,85],[198,84,274,86,"parseAtrulePrelude"],[198,102,274,104],[198,103,274,105],[198,106,274,108],[198,110,274,112],[199,6,275,8,"parser"],[199,12,275,14],[199,13,275,15,"parseRulePrelude"],[199,29,275,31],[199,32,275,34],[199,50,275,52],[199,54,275,56,"options"],[199,61,275,63],[199,64,275,66,"Boolean"],[199,71,275,73],[199,72,275,74,"options"],[199,79,275,81],[199,80,275,82,"parseRulePrelude"],[199,96,275,98],[199,97,275,99],[199,100,275,102],[199,104,275,106],[200,6,276,8,"parser"],[200,12,276,14],[200,13,276,15,"parseValue"],[200,23,276,25],[200,26,276,28],[200,38,276,40],[200,42,276,44,"options"],[200,49,276,51],[200,52,276,54,"Boolean"],[200,59,276,61],[200,60,276,62,"options"],[200,67,276,69],[200,68,276,70,"parseValue"],[200,78,276,80],[200,79,276,81],[200,82,276,84],[200,86,276,88],[201,6,277,8,"parser"],[201,12,277,14],[201,13,277,15,"parseCustomProperty"],[201,32,277,34],[201,35,277,37],[201,56,277,58],[201,60,277,62,"options"],[201,67,277,69],[201,70,277,72,"Boolean"],[201,77,277,79],[201,78,277,80,"options"],[201,85,277,87],[201,86,277,88,"parseCustomProperty"],[201,105,277,107],[201,106,277,108],[201,109,277,111],[201,114,277,116],[202,6,279,8],[202,10,279,12],[202,11,279,13,"parser"],[202,17,279,19],[202,18,279,20,"context"],[202,25,279,27],[202,26,279,28,"hasOwnProperty"],[202,40,279,42],[202,41,279,43,"context"],[202,48,279,50],[202,49,279,51],[202,51,279,53],[203,8,280,12],[203,14,280,18],[203,18,280,22,"Error"],[203,23,280,27],[203,24,280,28],[203,43,280,47],[203,46,280,50,"context"],[203,53,280,57],[203,56,280,60],[203,59,280,63],[203,60,280,64],[204,6,281,8],[205,6,283,8],[205,10,283,12],[205,17,283,19,"onComment"],[205,26,283,28],[205,31,283,33],[205,41,283,43],[205,43,283,45],[206,8,284,12,"parser"],[206,14,284,18],[206,15,284,19,"scanner"],[206,22,284,26],[206,23,284,27,"forEachToken"],[206,35,284,39],[206,36,284,40],[206,46,284,41,"type"],[206,50,284,45],[206,52,284,47,"start"],[206,57,284,52],[206,59,284,54,"end"],[206,62,284,57],[206,64,284,62],[207,10,285,16],[207,14,285,20,"type"],[207,18,285,24],[207,23,285,29,"COMMENT"],[207,30,285,36],[207,32,285,38],[208,12,286,20],[208,16,286,26,"loc"],[208,19,286,29],[208,22,286,32,"parser"],[208,28,286,38],[208,29,286,39,"getLocation"],[208,40,286,50],[208,41,286,51,"start"],[208,46,286,56],[208,48,286,58,"end"],[208,51,286,61],[208,52,286,62],[209,12,287,20],[209,16,287,26,"value"],[209,21,287,31],[209,24,287,34,"_$$_REQUIRE"],[209,35,287,34],[209,36,287,34,"_dependencyMap"],[209,50,287,34],[209,77,287,34,"cmpStr"],[209,83,287,34],[209,84,287,41,"source"],[209,90,287,47],[209,92,287,49,"end"],[209,95,287,52],[209,98,287,55],[209,99,287,56],[209,101,287,58,"end"],[209,104,287,61],[209,106,287,63],[209,110,287,67],[209,111,287,68],[209,114,288,26,"source"],[209,120,288,32],[209,121,288,33,"slice"],[209,126,288,38],[209,127,288,39,"start"],[209,132,288,44],[209,135,288,47],[209,136,288,48],[209,138,288,50,"end"],[209,141,288,53],[209,144,288,56],[209,145,288,57],[209,146,288,58],[209,149,289,26,"source"],[209,155,289,32],[209,156,289,33,"slice"],[209,161,289,38],[209,162,289,39,"start"],[209,167,289,44],[209,170,289,47],[209,171,289,48],[209,173,289,50,"end"],[209,176,289,53],[209,177,289,54],[210,12,291,20,"onComment"],[210,21,291,29],[210,22,291,30,"value"],[210,27,291,35],[210,29,291,37,"loc"],[210,32,291,40],[210,33,291,41],[211,10,292,16],[212,8,293,12],[212,9,293,13],[212,10,293,14],[213,6,294,8],[214,6,296,8,"ast"],[214,9,296,11],[214,12,296,14,"parser"],[214,18,296,20],[214,19,296,21,"context"],[214,26,296,28],[214,27,296,29,"context"],[214,34,296,36],[214,35,296,37],[214,36,296,38,"call"],[214,40,296,42],[214,41,296,43,"parser"],[214,47,296,49],[214,49,296,51,"options"],[214,56,296,58],[214,57,296,59],[215,6,298,8],[215,10,298,12],[215,11,298,13,"parser"],[215,17,298,19],[215,18,298,20,"scanner"],[215,25,298,27],[215,26,298,28,"eof"],[215,29,298,31],[215,31,298,33],[216,8,299,12,"parser"],[216,14,299,18],[216,15,299,19,"error"],[216,20,299,24],[216,21,299,25],[216,22,299,26],[217,6,300,8],[218,6,302,8],[218,13,302,15,"ast"],[218,16,302,18],[219,4,303,4],[219,5,303,5],[220,2,304,0],[220,3,304,1],[221,0,304,2],[221,3]],"functionMap":{"names":["<global>","noop","createParseContext","<anonymous>","processConfig","createParser","parser.createList","parser.createSingleNodeList","parser.getFirstListNode","parser.getLastListNode","parser.parseWithFallback","parser.lookupNonWSType","parser.eat","parser.consume","parser.consumeFunctionName","parser.getLocation","parser.getLocationFromList","parser.error","parser.scanner.forEachToken$argument_0"],"mappings":"AAA;WCQ,aD;AEe;WCC;KDE;CFC;AIE;CJuD;iBKE;oBCgB;SDE;8BEC;SFE;0BGC;SHE;yBIC;SJE;2BKE;SLkB;yBME;SNS;aOE;SP4C;iBQE;SRM;6BSC;STM;qBUE;SVU;6BWC;SXY;eYE;SZc;WFQ;wCe6B;afS;KEU;CLC"}},"type":"js/module"}]}