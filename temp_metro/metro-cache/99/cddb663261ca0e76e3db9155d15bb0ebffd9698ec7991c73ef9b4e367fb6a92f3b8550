{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":65,"column":0,"index":2412}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"../converter/tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":134},"end":{"line":4,"column":45,"index":163}},{"start":{"line":4,"column":16,"index":134},"end":{"line":4,"column":45,"index":163}}],"key":"5pP7auj0+4eX4w/ZwZevJRIcSa4="}},{"name":"../converter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":39,"index":116}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":39,"index":116}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":39,"index":116}}],"key":"kKBPuYVZKHJRvN6QY6Tu9VkLxJM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function psbtToBuffer(_ref) {\n    var globalMap = _ref.globalMap,\n      inputs = _ref.inputs,\n      outputs = _ref.outputs;\n    var _psbtToKeyVals = psbtToKeyVals({\n        globalMap: globalMap,\n        inputs: inputs,\n        outputs: outputs\n      }),\n      globalKeyVals = _psbtToKeyVals.globalKeyVals,\n      inputKeyVals = _psbtToKeyVals.inputKeyVals,\n      outputKeyVals = _psbtToKeyVals.outputKeyVals;\n    var globalBuffer = _$$_REQUIRE(_dependencyMap[1], \"../converter/tools\").keyValsToBuffer(globalKeyVals);\n    var keyValsOrEmptyToBuffer = function keyValsOrEmptyToBuffer(keyVals) {\n      return keyVals.length === 0 ? [Buffer.from([0])] : keyVals.map(_$$_REQUIRE(_dependencyMap[1], \"../converter/tools\").keyValsToBuffer);\n    };\n    var inputBuffers = keyValsOrEmptyToBuffer(inputKeyVals);\n    var outputBuffers = keyValsOrEmptyToBuffer(outputKeyVals);\n    var header = Buffer.allocUnsafe(5);\n    header.writeUIntBE(0x70736274ff, 0, 5);\n    return Buffer.concat([header, globalBuffer].concat(inputBuffers, outputBuffers));\n  }\n  exports.psbtToBuffer = psbtToBuffer;\n  var sortKeyVals = function sortKeyVals(a, b) {\n    return a.key.compare(b.key);\n  };\n  function keyValsFromMap(keyValMap, converterFactory) {\n    var keyHexSet = new Set();\n    var keyVals = Object.entries(keyValMap).reduce(function (result, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        value = _ref3[1];\n      if (key === 'unknownKeyVals') return result;\n      // We are checking for undefined anyways. So ignore TS error\n      // @ts-ignore\n      var converter = converterFactory[key];\n      if (converter === undefined) return result;\n      var encodedKeyVals = (Array.isArray(value) ? value : [value]).map(converter.encode);\n      var keyHexes = encodedKeyVals.map(function (kv) {\n        return kv.key.toString('hex');\n      });\n      keyHexes.forEach(function (hex) {\n        if (keyHexSet.has(hex)) throw new Error('Serialize Error: Duplicate key: ' + hex);\n        keyHexSet.add(hex);\n      });\n      return result.concat(encodedKeyVals);\n    }, []);\n    // Get other keyVals that have not yet been gotten\n    var otherKeyVals = keyValMap.unknownKeyVals ? keyValMap.unknownKeyVals.filter(function (keyVal) {\n      return !keyHexSet.has(keyVal.key.toString('hex'));\n    }) : [];\n    return keyVals.concat(otherKeyVals).sort(sortKeyVals);\n  }\n  function psbtToKeyVals(_ref4) {\n    var globalMap = _ref4.globalMap,\n      inputs = _ref4.inputs,\n      outputs = _ref4.outputs;\n    // First parse the global keyVals\n    // Get any extra keyvals to pass along\n    return {\n      globalKeyVals: keyValsFromMap(globalMap, _$$_REQUIRE(_dependencyMap[2], \"../converter\").globals),\n      inputKeyVals: inputs.map(function (i) {\n        return keyValsFromMap(i, _$$_REQUIRE(_dependencyMap[2], \"../converter\").inputs);\n      }),\n      outputKeyVals: outputs.map(function (o) {\n        return keyValsFromMap(o, _$$_REQUIRE(_dependencyMap[2], \"../converter\").outputs);\n      })\n    };\n  }\n  exports.psbtToKeyVals = psbtToKeyVals;\n});","lineCount":78,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,5,0],[8,11,5,9,"psbtToBuffer"],[8,23,5,21,"psbtToBuffer"],[8,24,5,21,"_ref"],[8,28,5,21],[8,30,5,54],[9,4,5,54],[9,8,5,24,"globalMap"],[9,17,5,33],[9,20,5,33,"_ref"],[9,24,5,33],[9,25,5,24,"globalMap"],[9,34,5,33],[10,6,5,35,"inputs"],[10,12,5,41],[10,15,5,41,"_ref"],[10,19,5,41],[10,20,5,35,"inputs"],[10,26,5,41],[11,6,5,43,"outputs"],[11,13,5,50],[11,16,5,50,"_ref"],[11,20,5,50],[11,21,5,43,"outputs"],[11,28,5,50],[12,4,6,2],[12,8,6,2,"_psbtToKeyVals"],[12,22,6,2],[12,25,6,57,"psbtToKeyVals"],[12,38,6,70],[12,39,6,71],[13,8,7,4,"globalMap"],[13,17,7,13],[13,19,7,4,"globalMap"],[13,28,7,13],[14,8,8,4,"inputs"],[14,14,8,10],[14,16,8,4,"inputs"],[14,22,8,10],[15,8,9,4,"outputs"],[15,15,9,11],[15,17,9,4,"outputs"],[16,6,10,2],[16,7,10,3],[16,8,10,4],[17,6,6,10,"globalKeyVals"],[17,19,6,23],[17,22,6,23,"_psbtToKeyVals"],[17,36,6,23],[17,37,6,10,"globalKeyVals"],[17,50,6,23],[18,6,6,25,"inputKeyVals"],[18,18,6,37],[18,21,6,37,"_psbtToKeyVals"],[18,35,6,37],[18,36,6,25,"inputKeyVals"],[18,48,6,37],[19,6,6,39,"outputKeyVals"],[19,19,6,52],[19,22,6,52,"_psbtToKeyVals"],[19,36,6,52],[19,37,6,39,"outputKeyVals"],[19,50,6,52],[20,4,11,2],[20,8,11,8,"globalBuffer"],[20,20,11,20],[20,23,11,23,"_$$_REQUIRE"],[20,34,11,23],[20,35,11,23,"_dependencyMap"],[20,49,11,23],[20,76,11,31,"keyValsToBuffer"],[20,91,11,46],[20,92,11,47,"globalKeyVals"],[20,105,11,60],[20,106,11,61],[21,4,12,2],[21,8,12,8,"keyValsOrEmptyToBuffer"],[21,30,12,30],[21,33,12,33],[21,42,12,8,"keyValsOrEmptyToBuffer"],[21,64,12,30,"keyValsOrEmptyToBuffer"],[21,65,12,33,"keyVals"],[21,72,12,40],[22,6,12,40],[22,13,13,4,"keyVals"],[22,20,13,11],[22,21,13,12,"length"],[22,27,13,18],[22,32,13,23],[22,33,13,24],[22,36,14,8],[22,37,14,9,"Buffer"],[22,43,14,15],[22,44,14,16,"from"],[22,48,14,20],[22,49,14,21],[22,50,14,22],[22,51,14,23],[22,52,14,24],[22,53,14,25],[22,54,14,26],[22,57,15,8,"keyVals"],[22,64,15,15],[22,65,15,16,"map"],[22,68,15,19],[22,69,15,20,"_$$_REQUIRE"],[22,80,15,20],[22,81,15,20,"_dependencyMap"],[22,95,15,20],[22,122,15,28,"keyValsToBuffer"],[22,137,15,43],[22,138,15,44],[23,4,15,44],[24,4,16,2],[24,8,16,8,"inputBuffers"],[24,20,16,20],[24,23,16,23,"keyValsOrEmptyToBuffer"],[24,45,16,45],[24,46,16,46,"inputKeyVals"],[24,58,16,58],[24,59,16,59],[25,4,17,2],[25,8,17,8,"outputBuffers"],[25,21,17,21],[25,24,17,24,"keyValsOrEmptyToBuffer"],[25,46,17,46],[25,47,17,47,"outputKeyVals"],[25,60,17,60],[25,61,17,61],[26,4,18,2],[26,8,18,8,"header"],[26,14,18,14],[26,17,18,17,"Buffer"],[26,23,18,23],[26,24,18,24,"allocUnsafe"],[26,35,18,35],[26,36,18,36],[26,37,18,37],[26,38,18,38],[27,4,19,2,"header"],[27,10,19,8],[27,11,19,9,"writeUIntBE"],[27,22,19,20],[27,23,19,21],[27,35,19,33],[27,37,19,35],[27,38,19,36],[27,40,19,38],[27,41,19,39],[27,42,19,40],[28,4,20,2],[28,11,20,9,"Buffer"],[28,17,20,15],[28,18,20,16,"concat"],[28,24,20,22],[28,25,21,4],[28,26,21,5,"header"],[28,32,21,11],[28,34,21,13,"globalBuffer"],[28,46,21,25],[28,47,21,26],[28,48,21,27,"concat"],[28,54,21,33],[28,55,21,34,"inputBuffers"],[28,67,21,46],[28,69,21,48,"outputBuffers"],[28,82,21,61],[28,83,22,2],[28,84,22,3],[29,2,23,0],[30,2,24,0,"exports"],[30,9,24,7],[30,10,24,8,"psbtToBuffer"],[30,22,24,20],[30,25,24,23,"psbtToBuffer"],[30,37,24,35],[31,2,25,0],[31,6,25,6,"sortKeyVals"],[31,17,25,17],[31,20,25,20],[31,29,25,6,"sortKeyVals"],[31,40,25,17,"sortKeyVals"],[31,41,25,21,"a"],[31,42,25,22],[31,44,25,24,"b"],[31,45,25,25],[31,47,25,30],[32,4,26,2],[32,11,26,9,"a"],[32,12,26,10],[32,13,26,11,"key"],[32,16,26,14],[32,17,26,15,"compare"],[32,24,26,22],[32,25,26,23,"b"],[32,26,26,24],[32,27,26,25,"key"],[32,30,26,28],[32,31,26,29],[33,2,27,0],[33,3,27,1],[34,2,28,0],[34,11,28,9,"keyValsFromMap"],[34,25,28,23,"keyValsFromMap"],[34,26,28,24,"keyValMap"],[34,35,28,33],[34,37,28,35,"converterFactory"],[34,53,28,51],[34,55,28,53],[35,4,29,2],[35,8,29,8,"keyHexSet"],[35,17,29,17],[35,20,29,20],[35,24,29,24,"Set"],[35,27,29,27],[35,28,29,28],[35,29,29,29],[36,4,30,2],[36,8,30,8,"keyVals"],[36,15,30,15],[36,18,30,18,"Object"],[36,24,30,24],[36,25,30,25,"entries"],[36,32,30,32],[36,33,30,33,"keyValMap"],[36,42,30,42],[36,43,30,43],[36,44,30,44,"reduce"],[36,50,30,50],[36,51,30,51],[36,61,30,52,"result"],[36,67,30,58],[36,69,30,58,"_ref2"],[36,74,30,58],[36,76,30,77],[37,6,30,77],[37,10,30,77,"_ref3"],[37,15,30,77],[37,18,30,77,"_slicedToArray"],[37,32,30,77],[37,33,30,77,"_ref2"],[37,38,30,77],[38,8,30,61,"key"],[38,11,30,64],[38,14,30,64,"_ref3"],[38,19,30,64],[39,8,30,66,"value"],[39,13,30,71],[39,16,30,71,"_ref3"],[39,21,30,71],[40,6,31,4],[40,10,31,8,"key"],[40,13,31,11],[40,18,31,16],[40,34,31,32],[40,36,31,34],[40,43,31,41,"result"],[40,49,31,47],[41,6,32,4],[42,6,33,4],[43,6,34,4],[43,10,34,10,"converter"],[43,19,34,19],[43,22,34,22,"converterFactory"],[43,38,34,38],[43,39,34,39,"key"],[43,42,34,42],[43,43,34,43],[44,6,35,4],[44,10,35,8,"converter"],[44,19,35,17],[44,24,35,22,"undefined"],[44,33,35,31],[44,35,35,33],[44,42,35,40,"result"],[44,48,35,46],[45,6,36,4],[45,10,36,10,"encodedKeyVals"],[45,24,36,24],[45,27,36,27],[45,28,36,28,"Array"],[45,33,36,33],[45,34,36,34,"isArray"],[45,41,36,41],[45,42,36,42,"value"],[45,47,36,47],[45,48,36,48],[45,51,36,51,"value"],[45,56,36,56],[45,59,36,59],[45,60,36,60,"value"],[45,65,36,65],[45,66,36,66],[45,68,36,68,"map"],[45,71,36,71],[45,72,37,6,"converter"],[45,81,37,15],[45,82,37,16,"encode"],[45,88,38,4],[45,89,38,5],[46,6,39,4],[46,10,39,10,"keyHexes"],[46,18,39,18],[46,21,39,21,"encodedKeyVals"],[46,35,39,35],[46,36,39,36,"map"],[46,39,39,39],[46,40,39,40],[46,50,39,40,"kv"],[46,52,39,42],[47,8,39,42],[47,15,39,46,"kv"],[47,17,39,48],[47,18,39,49,"key"],[47,21,39,52],[47,22,39,53,"toString"],[47,30,39,61],[47,31,39,62],[47,36,39,67],[47,37,39,68],[48,6,39,68],[48,8,39,69],[49,6,40,4,"keyHexes"],[49,14,40,12],[49,15,40,13,"forEach"],[49,22,40,20],[49,23,40,21],[49,33,40,21,"hex"],[49,36,40,24],[49,38,40,28],[50,8,41,6],[50,12,41,10,"keyHexSet"],[50,21,41,19],[50,22,41,20,"has"],[50,25,41,23],[50,26,41,24,"hex"],[50,29,41,27],[50,30,41,28],[50,32,42,8],[50,38,42,14],[50,42,42,18,"Error"],[50,47,42,23],[50,48,42,24],[50,82,42,58],[50,85,42,61,"hex"],[50,88,42,64],[50,89,42,65],[51,8,43,6,"keyHexSet"],[51,17,43,15],[51,18,43,16,"add"],[51,21,43,19],[51,22,43,20,"hex"],[51,25,43,23],[51,26,43,24],[52,6,44,4],[52,7,44,5],[52,8,44,6],[53,6,45,4],[53,13,45,11,"result"],[53,19,45,17],[53,20,45,18,"concat"],[53,26,45,24],[53,27,45,25,"encodedKeyVals"],[53,41,45,39],[53,42,45,40],[54,4,46,2],[54,5,46,3],[54,7,46,5],[54,9,46,7],[54,10,46,8],[55,4,47,2],[56,4,48,2],[56,8,48,8,"otherKeyVals"],[56,20,48,20],[56,23,48,23,"keyValMap"],[56,32,48,32],[56,33,48,33,"unknownKeyVals"],[56,47,48,47],[56,50,49,6,"keyValMap"],[56,59,49,15],[56,60,49,16,"unknownKeyVals"],[56,74,49,30],[56,75,49,31,"filter"],[56,81,49,37],[56,82,49,38],[56,92,49,38,"keyVal"],[56,98,49,44],[56,100,49,48],[57,6,50,8],[57,13,50,15],[57,14,50,16,"keyHexSet"],[57,23,50,25],[57,24,50,26,"has"],[57,27,50,29],[57,28,50,30,"keyVal"],[57,34,50,36],[57,35,50,37,"key"],[57,38,50,40],[57,39,50,41,"toString"],[57,47,50,49],[57,48,50,50],[57,53,50,55],[57,54,50,56],[57,55,50,57],[58,4,51,6],[58,5,51,7],[58,6,51,8],[58,9,52,6],[58,11,52,8],[59,4,53,2],[59,11,53,9,"keyVals"],[59,18,53,16],[59,19,53,17,"concat"],[59,25,53,23],[59,26,53,24,"otherKeyVals"],[59,38,53,36],[59,39,53,37],[59,40,53,38,"sort"],[59,44,53,42],[59,45,53,43,"sortKeyVals"],[59,56,53,54],[59,57,53,55],[60,2,54,0],[61,2,55,0],[61,11,55,9,"psbtToKeyVals"],[61,24,55,22,"psbtToKeyVals"],[61,25,55,22,"_ref4"],[61,30,55,22],[61,32,55,55],[62,4,55,55],[62,8,55,25,"globalMap"],[62,17,55,34],[62,20,55,34,"_ref4"],[62,25,55,34],[62,26,55,25,"globalMap"],[62,35,55,34],[63,6,55,36,"inputs"],[63,12,55,42],[63,15,55,42,"_ref4"],[63,20,55,42],[63,21,55,36,"inputs"],[63,27,55,42],[64,6,55,44,"outputs"],[64,13,55,51],[64,16,55,51,"_ref4"],[64,21,55,51],[64,22,55,44,"outputs"],[64,29,55,51],[65,4,56,2],[66,4,57,2],[67,4,58,2],[67,11,58,9],[68,6,59,4,"globalKeyVals"],[68,19,59,17],[68,21,59,19,"keyValsFromMap"],[68,35,59,33],[68,36,59,34,"globalMap"],[68,45,59,43],[68,47,59,45,"_$$_REQUIRE"],[68,58,59,45],[68,59,59,45,"_dependencyMap"],[68,73,59,45],[68,94,59,53,"globals"],[68,101,59,60],[68,102,59,61],[69,6,60,4,"inputKeyVals"],[69,18,60,16],[69,20,60,18,"inputs"],[69,26,60,24],[69,27,60,25,"map"],[69,30,60,28],[69,31,60,29],[69,41,60,29,"i"],[69,42,60,30],[70,8,60,30],[70,15,60,34,"keyValsFromMap"],[70,29,60,48],[70,30,60,49,"i"],[70,31,60,50],[70,33,60,52,"_$$_REQUIRE"],[70,44,60,52],[70,45,60,52,"_dependencyMap"],[70,59,60,52],[70,80,60,60,"inputs"],[70,86,60,66],[70,87,60,67],[71,6,60,67],[71,8,60,68],[72,6,61,4,"outputKeyVals"],[72,19,61,17],[72,21,61,19,"outputs"],[72,28,61,26],[72,29,61,27,"map"],[72,32,61,30],[72,33,61,31],[72,43,61,31,"o"],[72,44,61,32],[73,8,61,32],[73,15,61,36,"keyValsFromMap"],[73,29,61,50],[73,30,61,51,"o"],[73,31,61,52],[73,33,61,54,"_$$_REQUIRE"],[73,44,61,54],[73,45,61,54,"_dependencyMap"],[73,59,61,54],[73,80,61,62,"outputs"],[73,87,61,69],[73,88,61,70],[74,6,61,70],[75,4,62,2],[75,5,62,3],[76,2,63,0],[77,2,64,0,"exports"],[77,9,64,7],[77,10,64,8,"psbtToKeyVals"],[77,23,64,21],[77,26,64,24,"psbtToKeyVals"],[77,39,64,37],[78,0,64,38],[78,3]],"functionMap":{"names":["<global>","psbtToBuffer","keyValsOrEmptyToBuffer","sortKeyVals","keyValsFromMap","Object.entries.reduce$argument_0","encodedKeyVals.map$argument_0","keyHexes.forEach$argument_0","keyValMap.unknownKeyVals.filter$argument_0","psbtToKeyVals","inputs.map$argument_0","outputs.map$argument_0"],"mappings":"AAA;ACI;iCCO;4CDG;CDQ;oBGE;CHE;AIC;mDCE;wCCS,4BD;qBEC;KFI;GDE;sCIG;OJE;CJG;ASC;6BCK,sCD;+BEC,uCF;CTE"}},"type":"js/module"}]}