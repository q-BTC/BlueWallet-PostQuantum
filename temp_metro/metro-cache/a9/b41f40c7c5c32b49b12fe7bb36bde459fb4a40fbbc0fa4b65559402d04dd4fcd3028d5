{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // split utxos between each output, ignores outputs with .value defined\n  module.exports = function split(utxos, outputs, feeRate) {\n    if (!isFinite(_$$_REQUIRE(_dependencyMap[0], \"./utils\").positiveNumOrNaN(feeRate))) return {};\n    var bytesAccum = _$$_REQUIRE(_dependencyMap[0], \"./utils\").transactionBytes(utxos, outputs);\n    var fee = feeRate * bytesAccum;\n    if (outputs.length === 0) return {\n      fee: fee\n    };\n    var inAccum = _$$_REQUIRE(_dependencyMap[0], \"./utils\").sumOrNaN(utxos);\n    var outAccum = _$$_REQUIRE(_dependencyMap[0], \"./utils\").sumForgiving(outputs);\n    var remaining = inAccum - outAccum - fee;\n    if (!isFinite(remaining) || remaining < 0) return {\n      fee: fee\n    };\n    var unspecified = outputs.reduce(function (a, x) {\n      return a + !isFinite(x.value);\n    }, 0);\n    if (remaining === 0 && unspecified === 0) return _$$_REQUIRE(_dependencyMap[0], \"./utils\").finalize(utxos, outputs, feeRate);\n    var splitOutputsCount = outputs.reduce(function (a, x) {\n      if (x.value !== undefined) return a;\n      return a + 1;\n    }, 0);\n    var splitValue = Math.floor(remaining / splitOutputsCount);\n\n    // ensure every output is either user defined, or over the threshold\n    if (!outputs.every(function (x) {\n      return x.value !== undefined || splitValue > _$$_REQUIRE(_dependencyMap[0], \"./utils\").dustThreshold(x, feeRate);\n    })) return {\n      fee: fee\n    };\n\n    // assign splitValue to outputs not user defined\n    outputs = outputs.map(function (x) {\n      if (x.value !== undefined) return x;\n\n      // not user defined, but still copy over any non-value fields\n      var y = {};\n      for (var k in x) y[k] = x[k];\n      y.value = splitValue;\n      return y;\n    });\n    return _$$_REQUIRE(_dependencyMap[0], \"./utils\").finalize(utxos, outputs, feeRate);\n  };\n});","lineCount":45,"map":[[2,2,3,0],[3,2,4,0,"module"],[3,8,4,6],[3,9,4,7,"exports"],[3,16,4,14],[3,19,4,17],[3,28,4,26,"split"],[3,33,4,31,"split"],[3,34,4,33,"utxos"],[3,39,4,38],[3,41,4,40,"outputs"],[3,48,4,47],[3,50,4,49,"feeRate"],[3,57,4,56],[3,59,4,58],[4,4,5,2],[4,8,5,6],[4,9,5,7,"isFinite"],[4,17,5,15],[4,18,5,16,"_$$_REQUIRE"],[4,29,5,16],[4,30,5,16,"_dependencyMap"],[4,44,5,16],[4,60,5,22,"positiveNumOrNaN"],[4,76,5,38],[4,77,5,39,"feeRate"],[4,84,5,46],[4,85,5,47],[4,86,5,48],[4,88,5,50],[4,95,5,57],[4,96,5,58],[4,97,5,59],[5,4,7,2],[5,8,7,6,"bytesAccum"],[5,18,7,16],[5,21,7,19,"_$$_REQUIRE"],[5,32,7,19],[5,33,7,19,"_dependencyMap"],[5,47,7,19],[5,63,7,25,"transactionBytes"],[5,79,7,41],[5,80,7,42,"utxos"],[5,85,7,47],[5,87,7,49,"outputs"],[5,94,7,56],[5,95,7,57],[6,4,8,2],[6,8,8,6,"fee"],[6,11,8,9],[6,14,8,12,"feeRate"],[6,21,8,19],[6,24,8,22,"bytesAccum"],[6,34,8,32],[7,4,9,2],[7,8,9,6,"outputs"],[7,15,9,13],[7,16,9,14,"length"],[7,22,9,20],[7,27,9,25],[7,28,9,26],[7,30,9,28],[7,37,9,35],[8,6,9,37,"fee"],[8,9,9,40],[8,11,9,42,"fee"],[9,4,9,46],[9,5,9,47],[10,4,11,2],[10,8,11,6,"inAccum"],[10,15,11,13],[10,18,11,16,"_$$_REQUIRE"],[10,29,11,16],[10,30,11,16,"_dependencyMap"],[10,44,11,16],[10,60,11,22,"sumOrNaN"],[10,68,11,30],[10,69,11,31,"utxos"],[10,74,11,36],[10,75,11,37],[11,4,12,2],[11,8,12,6,"outAccum"],[11,16,12,14],[11,19,12,17,"_$$_REQUIRE"],[11,30,12,17],[11,31,12,17,"_dependencyMap"],[11,45,12,17],[11,61,12,23,"sumForgiving"],[11,73,12,35],[11,74,12,36,"outputs"],[11,81,12,43],[11,82,12,44],[12,4,13,2],[12,8,13,6,"remaining"],[12,17,13,15],[12,20,13,18,"inAccum"],[12,27,13,25],[12,30,13,28,"outAccum"],[12,38,13,36],[12,41,13,39,"fee"],[12,44,13,42],[13,4,14,2],[13,8,14,6],[13,9,14,7,"isFinite"],[13,17,14,15],[13,18,14,16,"remaining"],[13,27,14,25],[13,28,14,26],[13,32,14,30,"remaining"],[13,41,14,39],[13,44,14,42],[13,45,14,43],[13,47,14,45],[13,54,14,52],[14,6,14,54,"fee"],[14,9,14,57],[14,11,14,59,"fee"],[15,4,14,63],[15,5,14,64],[16,4,16,2],[16,8,16,6,"unspecified"],[16,19,16,17],[16,22,16,20,"outputs"],[16,29,16,27],[16,30,16,28,"reduce"],[16,36,16,34],[16,37,16,35],[16,47,16,45,"a"],[16,48,16,46],[16,50,16,48,"x"],[16,51,16,49],[16,53,16,51],[17,6,17,4],[17,13,17,11,"a"],[17,14,17,12],[17,17,17,15],[17,18,17,16,"isFinite"],[17,26,17,24],[17,27,17,25,"x"],[17,28,17,26],[17,29,17,27,"value"],[17,34,17,32],[17,35,17,33],[18,4,18,2],[18,5,18,3],[18,7,18,5],[18,8,18,6],[18,9,18,7],[19,4,20,2],[19,8,20,6,"remaining"],[19,17,20,15],[19,22,20,20],[19,23,20,21],[19,27,20,25,"unspecified"],[19,38,20,36],[19,43,20,41],[19,44,20,42],[19,46,20,44],[19,53,20,51,"_$$_REQUIRE"],[19,64,20,51],[19,65,20,51,"_dependencyMap"],[19,79,20,51],[19,95,20,57,"finalize"],[19,103,20,65],[19,104,20,66,"utxos"],[19,109,20,71],[19,111,20,73,"outputs"],[19,118,20,80],[19,120,20,82,"feeRate"],[19,127,20,89],[19,128,20,90],[20,4,22,2],[20,8,22,6,"splitOutputsCount"],[20,25,22,23],[20,28,22,26,"outputs"],[20,35,22,33],[20,36,22,34,"reduce"],[20,42,22,40],[20,43,22,41],[20,53,22,51,"a"],[20,54,22,52],[20,56,22,54,"x"],[20,57,22,55],[20,59,22,57],[21,6,23,4],[21,10,23,8,"x"],[21,11,23,9],[21,12,23,10,"value"],[21,17,23,15],[21,22,23,20,"undefined"],[21,31,23,29],[21,33,23,31],[21,40,23,38,"a"],[21,41,23,39],[22,6,24,4],[22,13,24,11,"a"],[22,14,24,12],[22,17,24,15],[22,18,24,16],[23,4,25,2],[23,5,25,3],[23,7,25,5],[23,8,25,6],[23,9,25,7],[24,4,26,2],[24,8,26,6,"splitValue"],[24,18,26,16],[24,21,26,19,"Math"],[24,25,26,23],[24,26,26,24,"floor"],[24,31,26,29],[24,32,26,30,"remaining"],[24,41,26,39],[24,44,26,42,"splitOutputsCount"],[24,61,26,59],[24,62,26,60],[26,4,28,2],[27,4,29,2],[27,8,29,6],[27,9,29,7,"outputs"],[27,16,29,14],[27,17,29,15,"every"],[27,22,29,20],[27,23,29,21],[27,33,29,31,"x"],[27,34,29,32],[27,36,29,34],[28,6,30,4],[28,13,30,11,"x"],[28,14,30,12],[28,15,30,13,"value"],[28,20,30,18],[28,25,30,23,"undefined"],[28,34,30,32],[28,38,30,37,"splitValue"],[28,48,30,47],[28,51,30,50,"_$$_REQUIRE"],[28,62,30,50],[28,63,30,50,"_dependencyMap"],[28,77,30,50],[28,93,30,56,"dustThreshold"],[28,106,30,69],[28,107,30,70,"x"],[28,108,30,71],[28,110,30,73,"feeRate"],[28,117,30,80],[28,118,30,82],[29,4,31,2],[29,5,31,3],[29,6,31,4],[29,8,31,6],[29,15,31,13],[30,6,31,15,"fee"],[30,9,31,18],[30,11,31,20,"fee"],[31,4,31,24],[31,5,31,25],[33,4,33,2],[34,4,34,2,"outputs"],[34,11,34,9],[34,14,34,12,"outputs"],[34,21,34,19],[34,22,34,20,"map"],[34,25,34,23],[34,26,34,24],[34,36,34,34,"x"],[34,37,34,35],[34,39,34,37],[35,6,35,4],[35,10,35,8,"x"],[35,11,35,9],[35,12,35,10,"value"],[35,17,35,15],[35,22,35,20,"undefined"],[35,31,35,29],[35,33,35,31],[35,40,35,38,"x"],[35,41,35,39],[37,6,37,4],[38,6,38,4],[38,10,38,8,"y"],[38,11,38,9],[38,14,38,12],[38,15,38,13],[38,16,38,14],[39,6,39,4],[39,11,39,9],[39,15,39,13,"k"],[39,16,39,14],[39,20,39,18,"x"],[39,21,39,19],[39,23,39,21,"y"],[39,24,39,22],[39,25,39,23,"k"],[39,26,39,24],[39,27,39,25],[39,30,39,28,"x"],[39,31,39,29],[39,32,39,30,"k"],[39,33,39,31],[39,34,39,32],[40,6,40,4,"y"],[40,7,40,5],[40,8,40,6,"value"],[40,13,40,11],[40,16,40,14,"splitValue"],[40,26,40,24],[41,6,41,4],[41,13,41,11,"y"],[41,14,41,12],[42,4,42,2],[42,5,42,3],[42,6,42,4],[43,4,44,2],[43,11,44,9,"_$$_REQUIRE"],[43,22,44,9],[43,23,44,9,"_dependencyMap"],[43,37,44,9],[43,53,44,15,"finalize"],[43,61,44,23],[43,62,44,24,"utxos"],[43,67,44,29],[43,69,44,31,"outputs"],[43,76,44,38],[43,78,44,40,"feeRate"],[43,85,44,47],[43,86,44,48],[44,2,45,0],[44,3,45,1],[45,0,45,1],[45,3]],"functionMap":{"names":["<global>","split","outputs.reduce$argument_0","outputs.every$argument_0","outputs.map$argument_0"],"mappings":"AAA;iBCG;mCCY;GDE;yCCI;GDG;qBEI;GFE;wBGG;GHQ;CDG"}},"type":"js/module"}]}