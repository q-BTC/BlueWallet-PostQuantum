{"dependencies":[{"name":"./converter/index.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":31,"index":409},"end":{"line":14,"column":63,"index":441}}],"key":"VoGObTAHRQceWoWkrON20O1Eqws="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":27,"index":471},"end":{"line":15,"column":54,"index":498}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var converter = __importStar(_$$_REQUIRE(_dependencyMap[0], \"./converter/index.cjs\"));\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[1], \"uint8array-tools\"));\n  function checkForInput(inputs, inputIndex) {\n    var input = inputs[inputIndex];\n    if (input === undefined) throw new Error(`No input #${inputIndex}`);\n    return input;\n  }\n  exports.checkForInput = checkForInput;\n  function checkForOutput(outputs, outputIndex) {\n    var output = outputs[outputIndex];\n    if (output === undefined) throw new Error(`No output #${outputIndex}`);\n    return output;\n  }\n  exports.checkForOutput = checkForOutput;\n  function checkHasKey(checkKeyVal, keyVals, enumLength) {\n    if (checkKeyVal.key[0] < enumLength) {\n      throw new Error(`Use the method for your specific key instead of addUnknownKeyVal*`);\n    }\n    if (keyVals && keyVals.filter(function (kv) {\n      return tools.compare(kv.key, checkKeyVal.key) === 0;\n    }).length !== 0) {\n      throw new Error(`Duplicate Key: ${tools.toHex(checkKeyVal.key)}`);\n    }\n  }\n  exports.checkHasKey = checkHasKey;\n  function getEnumLength(myenum) {\n    var count = 0;\n    Object.keys(myenum).forEach(function (val) {\n      if (Number(isNaN(Number(val)))) {\n        count++;\n      }\n    });\n    return count;\n  }\n  exports.getEnumLength = getEnumLength;\n  function inputCheckUncleanFinalized(inputIndex, input) {\n    var result = false;\n    if (input.nonWitnessUtxo || input.witnessUtxo) {\n      var needScriptSig = !!input.redeemScript;\n      var needWitnessScript = !!input.witnessScript;\n      var scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n      var witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n      var hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n      result = scriptSigOK && witnessScriptOK && hasOneFinal;\n    }\n    if (result === false) {\n      throw new Error(`Input #${inputIndex} has too much or too little data to clean`);\n    }\n  }\n  exports.inputCheckUncleanFinalized = inputCheckUncleanFinalized;\n  function throwForUpdateMaker(typeName, name, expected, data) {\n    throw new Error(`Data for ${typeName} key ${name} is incorrect: Expected ` + `${expected} and got ${JSON.stringify(data)}`);\n  }\n  function updateMaker(typeName) {\n    return function (updateData, mainData) {\n      var _loop = function _loop() {\n        // @ts-ignore\n        var data = updateData[name];\n        // @ts-ignore\n        var _ref =\n          // @ts-ignore\n          converter[typeName + 's'][name] || {},\n          canAdd = _ref.canAdd,\n          canAddToArray = _ref.canAddToArray,\n          check = _ref.check,\n          expected = _ref.expected;\n        var isArray = !!canAddToArray;\n        // If unknown data. ignore and do not add\n        if (check) {\n          if (isArray) {\n            if (!Array.isArray(data) ||\n            // @ts-ignore\n            mainData[name] && !Array.isArray(mainData[name])) {\n              throw new Error(`Key type ${name} must be an array`);\n            }\n            if (!data.every(check)) {\n              throwForUpdateMaker(typeName, name, expected, data);\n            }\n            // @ts-ignore\n            var arr = mainData[name] || [];\n            var dupeCheckSet = new Set();\n            if (!data.every(function (v) {\n              return canAddToArray(arr, v, dupeCheckSet);\n            })) {\n              throw new Error('Can not add duplicate data to array');\n            }\n            // @ts-ignore\n            mainData[name] = arr.concat(data);\n          } else {\n            if (!check(data)) {\n              throwForUpdateMaker(typeName, name, expected, data);\n            }\n            if (!canAdd(mainData, data)) {\n              throw new Error(`Can not add duplicate data to ${typeName}`);\n            }\n            // @ts-ignore\n            mainData[name] = data;\n          }\n        }\n      };\n      // @ts-ignore\n      for (var name of Object.keys(updateData)) {\n        _loop();\n      }\n    };\n  }\n  exports.updateGlobal = updateMaker('global');\n  exports.updateInput = updateMaker('input');\n  exports.updateOutput = updateMaker('output');\n  function addInputAttributes(inputs, data) {\n    var index = inputs.length - 1;\n    var input = checkForInput(inputs, index);\n    exports.updateInput(data, input);\n  }\n  exports.addInputAttributes = addInputAttributes;\n  function addOutputAttributes(outputs, data) {\n    var index = outputs.length - 1;\n    var output = checkForOutput(outputs, index);\n    exports.updateOutput(data, output);\n  }\n  exports.addOutputAttributes = addOutputAttributes;\n  function defaultVersionSetter(version, txBuf) {\n    if (!(txBuf instanceof Uint8Array) || txBuf.length < 4) {\n      throw new Error('Set Version: Invalid Transaction');\n    }\n    tools.writeUInt32(txBuf, 0, version, 'LE');\n    return txBuf;\n  }\n  exports.defaultVersionSetter = defaultVersionSetter;\n  function defaultLocktimeSetter(locktime, txBuf) {\n    if (!(txBuf instanceof Uint8Array) || txBuf.length < 4) {\n      throw new Error('Set Locktime: Invalid Transaction');\n    }\n    tools.writeUInt32(txBuf, txBuf.length - 4, locktime, 'LE');\n    return txBuf;\n  }\n  exports.defaultLocktimeSetter = defaultLocktimeSetter;\n});","lineCount":151,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importStar"],[4,18,2,16],[4,21,3,3],[4,25,3,7],[4,29,3,11],[4,33,3,15],[4,34,3,16,"__importStar"],[4,46,3,28],[4,50,4,2],[4,60,4,11,"mod"],[4,63,4,14],[4,65,4,16],[5,4,5,4],[5,8,5,8,"mod"],[5,11,5,11],[5,15,5,15,"mod"],[5,18,5,18],[5,19,5,19,"__esModule"],[5,29,5,29],[5,31,5,31],[5,38,5,38,"mod"],[5,41,5,41],[6,4,6,4],[6,8,6,8,"result"],[6,14,6,14],[6,17,6,17],[6,18,6,18],[6,19,6,19],[7,4,7,4],[7,8,7,8,"mod"],[7,11,7,11],[7,15,7,15],[7,19,7,19],[7,21,8,6],[7,26,8,11],[7,30,8,15,"k"],[7,31,8,16],[7,35,8,20,"mod"],[7,38,8,23],[7,40,9,8],[7,44,9,12,"Object"],[7,50,9,18],[7,51,9,19,"hasOwnProperty"],[7,65,9,33],[7,66,9,34,"call"],[7,70,9,38],[7,71,9,39,"mod"],[7,74,9,42],[7,76,9,44,"k"],[7,77,9,45],[7,78,9,46],[7,80,9,48,"result"],[7,86,9,54],[7,87,9,55,"k"],[7,88,9,56],[7,89,9,57],[7,92,9,60,"mod"],[7,95,9,63],[7,96,9,64,"k"],[7,97,9,65],[7,98,9,66],[8,4,10,4,"result"],[8,10,10,10],[8,11,10,11],[8,20,10,20],[8,21,10,21],[8,24,10,24,"mod"],[8,27,10,27],[9,4,11,4],[9,11,11,11,"result"],[9,17,11,17],[10,2,12,2],[10,3,12,3],[11,2,13,0,"Object"],[11,8,13,6],[11,9,13,7,"defineProperty"],[11,23,13,21],[11,24,13,22,"exports"],[11,31,13,29],[11,33,13,31],[11,45,13,43],[11,47,13,45],[12,4,13,47,"value"],[12,9,13,52],[12,11,13,54],[13,2,13,59],[13,3,13,60],[13,4,13,61],[14,2,14,0],[14,6,14,6,"converter"],[14,15,14,15],[14,18,14,18,"__importStar"],[14,30,14,30],[14,31,14,31,"require"],[14,42,14,38],[14,43,14,38,"_dependencyMap"],[14,57,14,38],[14,85,14,62],[14,86,14,63],[14,87,14,64],[15,2,15,0],[15,6,15,6,"tools"],[15,11,15,11],[15,14,15,14,"__importStar"],[15,26,15,26],[15,27,15,27,"require"],[15,38,15,34],[15,39,15,34,"_dependencyMap"],[15,53,15,34],[15,76,15,53],[15,77,15,54],[15,78,15,55],[16,2,16,0],[16,11,16,9,"checkForInput"],[16,24,16,22,"checkForInput"],[16,25,16,23,"inputs"],[16,31,16,29],[16,33,16,31,"inputIndex"],[16,43,16,41],[16,45,16,43],[17,4,17,2],[17,8,17,8,"input"],[17,13,17,13],[17,16,17,16,"inputs"],[17,22,17,22],[17,23,17,23,"inputIndex"],[17,33,17,33],[17,34,17,34],[18,4,18,2],[18,8,18,6,"input"],[18,13,18,11],[18,18,18,16,"undefined"],[18,27,18,25],[18,29,18,27],[18,35,18,33],[18,39,18,37,"Error"],[18,44,18,42],[18,45,18,43],[18,58,18,56,"inputIndex"],[18,68,18,66],[18,70,18,68],[18,71,18,69],[19,4,19,2],[19,11,19,9,"input"],[19,16,19,14],[20,2,20,0],[21,2,21,0,"exports"],[21,9,21,7],[21,10,21,8,"checkForInput"],[21,23,21,21],[21,26,21,24,"checkForInput"],[21,39,21,37],[22,2,22,0],[22,11,22,9,"checkForOutput"],[22,25,22,23,"checkForOutput"],[22,26,22,24,"outputs"],[22,33,22,31],[22,35,22,33,"outputIndex"],[22,46,22,44],[22,48,22,46],[23,4,23,2],[23,8,23,8,"output"],[23,14,23,14],[23,17,23,17,"outputs"],[23,24,23,24],[23,25,23,25,"outputIndex"],[23,36,23,36],[23,37,23,37],[24,4,24,2],[24,8,24,6,"output"],[24,14,24,12],[24,19,24,17,"undefined"],[24,28,24,26],[24,30,24,28],[24,36,24,34],[24,40,24,38,"Error"],[24,45,24,43],[24,46,24,44],[24,60,24,58,"outputIndex"],[24,71,24,69],[24,73,24,71],[24,74,24,72],[25,4,25,2],[25,11,25,9,"output"],[25,17,25,15],[26,2,26,0],[27,2,27,0,"exports"],[27,9,27,7],[27,10,27,8,"checkForOutput"],[27,24,27,22],[27,27,27,25,"checkForOutput"],[27,41,27,39],[28,2,28,0],[28,11,28,9,"checkHasKey"],[28,22,28,20,"checkHasKey"],[28,23,28,21,"checkKeyVal"],[28,34,28,32],[28,36,28,34,"keyVals"],[28,43,28,41],[28,45,28,43,"enumLength"],[28,55,28,53],[28,57,28,55],[29,4,29,2],[29,8,29,6,"checkKeyVal"],[29,19,29,17],[29,20,29,18,"key"],[29,23,29,21],[29,24,29,22],[29,25,29,23],[29,26,29,24],[29,29,29,27,"enumLength"],[29,39,29,37],[29,41,29,39],[30,6,30,4],[30,12,30,10],[30,16,30,14,"Error"],[30,21,30,19],[30,22,31,6],[30,89,32,4],[30,90,32,5],[31,4,33,2],[32,4,34,2],[32,8,35,4,"keyVals"],[32,15,35,11],[32,19,36,4,"keyVals"],[32,26,36,11],[32,27,36,12,"filter"],[32,33,36,18],[32,34,36,19],[32,44,36,19,"kv"],[32,46,36,21],[33,6,36,21],[33,13,36,25,"tools"],[33,18,36,30],[33,19,36,31,"compare"],[33,26,36,38],[33,27,36,39,"kv"],[33,29,36,41],[33,30,36,42,"key"],[33,33,36,45],[33,35,36,47,"checkKeyVal"],[33,46,36,58],[33,47,36,59,"key"],[33,50,36,62],[33,51,36,63],[33,56,36,68],[33,57,36,69],[34,4,36,69],[34,6,36,70],[34,7,37,7,"length"],[34,13,37,13],[34,18,37,18],[34,19,37,19],[34,21,38,4],[35,6,39,4],[35,12,39,10],[35,16,39,14,"Error"],[35,21,39,19],[35,22,39,20],[35,40,39,38,"tools"],[35,45,39,43],[35,46,39,44,"toHex"],[35,51,39,49],[35,52,39,50,"checkKeyVal"],[35,63,39,61],[35,64,39,62,"key"],[35,67,39,65],[35,68,39,66],[35,70,39,68],[35,71,39,69],[36,4,40,2],[37,2,41,0],[38,2,42,0,"exports"],[38,9,42,7],[38,10,42,8,"checkHasKey"],[38,21,42,19],[38,24,42,22,"checkHasKey"],[38,35,42,33],[39,2,43,0],[39,11,43,9,"getEnumLength"],[39,24,43,22,"getEnumLength"],[39,25,43,23,"myenum"],[39,31,43,29],[39,33,43,31],[40,4,44,2],[40,8,44,6,"count"],[40,13,44,11],[40,16,44,14],[40,17,44,15],[41,4,45,2,"Object"],[41,10,45,8],[41,11,45,9,"keys"],[41,15,45,13],[41,16,45,14,"myenum"],[41,22,45,20],[41,23,45,21],[41,24,45,22,"forEach"],[41,31,45,29],[41,32,45,30],[41,42,45,30,"val"],[41,45,45,33],[41,47,45,37],[42,6,46,4],[42,10,46,8,"Number"],[42,16,46,14],[42,17,46,15,"isNaN"],[42,22,46,20],[42,23,46,21,"Number"],[42,29,46,27],[42,30,46,28,"val"],[42,33,46,31],[42,34,46,32],[42,35,46,33],[42,36,46,34],[42,38,46,36],[43,8,47,6,"count"],[43,13,47,11],[43,15,47,13],[44,6,48,4],[45,4,49,2],[45,5,49,3],[45,6,49,4],[46,4,50,2],[46,11,50,9,"count"],[46,16,50,14],[47,2,51,0],[48,2,52,0,"exports"],[48,9,52,7],[48,10,52,8,"getEnumLength"],[48,23,52,21],[48,26,52,24,"getEnumLength"],[48,39,52,37],[49,2,53,0],[49,11,53,9,"inputCheckUncleanFinalized"],[49,37,53,35,"inputCheckUncleanFinalized"],[49,38,53,36,"inputIndex"],[49,48,53,46],[49,50,53,48,"input"],[49,55,53,53],[49,57,53,55],[50,4,54,2],[50,8,54,6,"result"],[50,14,54,12],[50,17,54,15],[50,22,54,20],[51,4,55,2],[51,8,55,6,"input"],[51,13,55,11],[51,14,55,12,"nonWitnessUtxo"],[51,28,55,26],[51,32,55,30,"input"],[51,37,55,35],[51,38,55,36,"witnessUtxo"],[51,49,55,47],[51,51,55,49],[52,6,56,4],[52,10,56,10,"needScriptSig"],[52,23,56,23],[52,26,56,26],[52,27,56,27],[52,28,56,28,"input"],[52,33,56,33],[52,34,56,34,"redeemScript"],[52,46,56,46],[53,6,57,4],[53,10,57,10,"needWitnessScript"],[53,27,57,27],[53,30,57,30],[53,31,57,31],[53,32,57,32,"input"],[53,37,57,37],[53,38,57,38,"witnessScript"],[53,51,57,51],[54,6,58,4],[54,10,58,10,"scriptSigOK"],[54,21,58,21],[54,24,58,24],[54,25,58,25,"needScriptSig"],[54,38,58,38],[54,42,58,42],[54,43,58,43],[54,44,58,44,"input"],[54,49,58,49],[54,50,58,50,"finalScriptSig"],[54,64,58,64],[55,6,59,4],[55,10,59,10,"witnessScriptOK"],[55,25,59,25],[55,28,59,28],[55,29,59,29,"needWitnessScript"],[55,46,59,46],[55,50,59,50],[55,51,59,51],[55,52,59,52,"input"],[55,57,59,57],[55,58,59,58,"finalScriptWitness"],[55,76,59,76],[56,6,60,4],[56,10,60,10,"hasOneFinal"],[56,21,60,21],[56,24,60,24],[56,25,60,25],[56,26,60,26,"input"],[56,31,60,31],[56,32,60,32,"finalScriptSig"],[56,46,60,46],[56,50,60,50],[56,51,60,51],[56,52,60,52,"input"],[56,57,60,57],[56,58,60,58,"finalScriptWitness"],[56,76,60,76],[57,6,61,4,"result"],[57,12,61,10],[57,15,61,13,"scriptSigOK"],[57,26,61,24],[57,30,61,28,"witnessScriptOK"],[57,45,61,43],[57,49,61,47,"hasOneFinal"],[57,60,61,58],[58,4,62,2],[59,4,63,2],[59,8,63,6,"result"],[59,14,63,12],[59,19,63,17],[59,24,63,22],[59,26,63,24],[60,6,64,4],[60,12,64,10],[60,16,64,14,"Error"],[60,21,64,19],[60,22,65,6],[60,32,65,16,"inputIndex"],[60,42,65,26],[60,85,66,4],[60,86,66,5],[61,4,67,2],[62,2,68,0],[63,2,69,0,"exports"],[63,9,69,7],[63,10,69,8,"inputCheckUncleanFinalized"],[63,36,69,34],[63,39,69,37,"inputCheckUncleanFinalized"],[63,65,69,63],[64,2,70,0],[64,11,70,9,"throwForUpdateMaker"],[64,30,70,28,"throwForUpdateMaker"],[64,31,70,29,"typeName"],[64,39,70,37],[64,41,70,39,"name"],[64,45,70,43],[64,47,70,45,"expected"],[64,55,70,53],[64,57,70,55,"data"],[64,61,70,59],[64,63,70,61],[65,4,71,2],[65,10,71,8],[65,14,71,12,"Error"],[65,19,71,17],[65,20,72,4],[65,32,72,16,"typeName"],[65,40,72,24],[65,48,72,32,"name"],[65,52,72,36],[65,78,72,62],[65,81,73,6],[65,84,73,9,"expected"],[65,92,73,17],[65,104,73,29,"JSON"],[65,108,73,33],[65,109,73,34,"stringify"],[65,118,73,43],[65,119,73,44,"data"],[65,123,73,48],[65,124,73,49],[65,126,74,2],[65,127,74,3],[66,2,75,0],[67,2,76,0],[67,11,76,9,"updateMaker"],[67,22,76,20,"updateMaker"],[67,23,76,21,"typeName"],[67,31,76,29],[67,33,76,31],[68,4,77,2],[68,11,77,9],[68,21,77,10,"updateData"],[68,31,77,20],[68,33,77,22,"mainData"],[68,41,77,30],[68,43,77,35],[69,6,77,35],[69,10,77,35,"_loop"],[69,15,77,35],[69,27,77,35,"_loop"],[69,33,77,35],[69,35,79,48],[70,8,80,6],[71,8,81,6],[71,12,81,12,"data"],[71,16,81,16],[71,19,81,19,"updateData"],[71,29,81,29],[71,30,81,30,"name"],[71,34,81,34],[71,35,81,35],[72,8,82,6],[73,8,83,6],[73,12,83,6,"_ref"],[73,16,83,6],[74,10,84,8],[75,10,85,8,"converter"],[75,19,85,17],[75,20,85,18,"typeName"],[75,28,85,26],[75,31,85,29],[75,34,85,32],[75,35,85,33],[75,36,85,34,"name"],[75,40,85,38],[75,41,85,39],[75,45,85,43],[75,46,85,44],[75,47,85,45],[76,10,83,14,"canAdd"],[76,16,83,20],[76,19,83,20,"_ref"],[76,23,83,20],[76,24,83,14,"canAdd"],[76,30,83,20],[77,10,83,22,"canAddToArray"],[77,23,83,35],[77,26,83,35,"_ref"],[77,30,83,35],[77,31,83,22,"canAddToArray"],[77,44,83,35],[78,10,83,37,"check"],[78,15,83,42],[78,18,83,42,"_ref"],[78,22,83,42],[78,23,83,37,"check"],[78,28,83,42],[79,10,83,44,"expected"],[79,18,83,52],[79,21,83,52,"_ref"],[79,25,83,52],[79,26,83,44,"expected"],[79,34,83,52],[80,8,86,6],[80,12,86,12,"isArray"],[80,19,86,19],[80,22,86,22],[80,23,86,23],[80,24,86,24,"canAddToArray"],[80,37,86,37],[81,8,87,6],[82,8,88,6],[82,12,88,10,"check"],[82,17,88,15],[82,19,88,17],[83,10,89,8],[83,14,89,12,"isArray"],[83,21,89,19],[83,23,89,21],[84,12,90,10],[84,16,91,12],[84,17,91,13,"Array"],[84,22,91,18],[84,23,91,19,"isArray"],[84,30,91,26],[84,31,91,27,"data"],[84,35,91,31],[84,36,91,32],[85,12,92,12],[86,12,93,13,"mainData"],[86,20,93,21],[86,21,93,22,"name"],[86,25,93,26],[86,26,93,27],[86,30,93,31],[86,31,93,32,"Array"],[86,36,93,37],[86,37,93,38,"isArray"],[86,44,93,45],[86,45,93,46,"mainData"],[86,53,93,54],[86,54,93,55,"name"],[86,58,93,59],[86,59,93,60],[86,60,93,62],[86,62,94,12],[87,14,95,12],[87,20,95,18],[87,24,95,22,"Error"],[87,29,95,27],[87,30,95,28],[87,42,95,40,"name"],[87,46,95,44],[87,65,95,63],[87,66,95,64],[88,12,96,10],[89,12,97,10],[89,16,97,14],[89,17,97,15,"data"],[89,21,97,19],[89,22,97,20,"every"],[89,27,97,25],[89,28,97,26,"check"],[89,33,97,31],[89,34,97,32],[89,36,97,34],[90,14,98,12,"throwForUpdateMaker"],[90,33,98,31],[90,34,98,32,"typeName"],[90,42,98,40],[90,44,98,42,"name"],[90,48,98,46],[90,50,98,48,"expected"],[90,58,98,56],[90,60,98,58,"data"],[90,64,98,62],[90,65,98,63],[91,12,99,10],[92,12,100,10],[93,12,101,10],[93,16,101,16,"arr"],[93,19,101,19],[93,22,101,22,"mainData"],[93,30,101,30],[93,31,101,31,"name"],[93,35,101,35],[93,36,101,36],[93,40,101,40],[93,42,101,42],[94,12,102,10],[94,16,102,16,"dupeCheckSet"],[94,28,102,28],[94,31,102,31],[94,35,102,35,"Set"],[94,38,102,38],[94,39,102,39],[94,40,102,40],[95,12,103,10],[95,16,103,14],[95,17,103,15,"data"],[95,21,103,19],[95,22,103,20,"every"],[95,27,103,25],[95,28,103,26],[95,38,103,26,"v"],[95,39,103,27],[96,14,103,27],[96,21,103,31,"canAddToArray"],[96,34,103,44],[96,35,103,45,"arr"],[96,38,103,48],[96,40,103,50,"v"],[96,41,103,51],[96,43,103,53,"dupeCheckSet"],[96,55,103,65],[96,56,103,66],[97,12,103,66],[97,14,103,67],[97,16,103,69],[98,14,104,12],[98,20,104,18],[98,24,104,22,"Error"],[98,29,104,27],[98,30,104,28],[98,67,104,65],[98,68,104,66],[99,12,105,10],[100,12,106,10],[101,12,107,10,"mainData"],[101,20,107,18],[101,21,107,19,"name"],[101,25,107,23],[101,26,107,24],[101,29,107,27,"arr"],[101,32,107,30],[101,33,107,31,"concat"],[101,39,107,37],[101,40,107,38,"data"],[101,44,107,42],[101,45,107,43],[102,10,108,8],[102,11,108,9],[102,17,108,15],[103,12,109,10],[103,16,109,14],[103,17,109,15,"check"],[103,22,109,20],[103,23,109,21,"data"],[103,27,109,25],[103,28,109,26],[103,30,109,28],[104,14,110,12,"throwForUpdateMaker"],[104,33,110,31],[104,34,110,32,"typeName"],[104,42,110,40],[104,44,110,42,"name"],[104,48,110,46],[104,50,110,48,"expected"],[104,58,110,56],[104,60,110,58,"data"],[104,64,110,62],[104,65,110,63],[105,12,111,10],[106,12,112,10],[106,16,112,14],[106,17,112,15,"canAdd"],[106,23,112,21],[106,24,112,22,"mainData"],[106,32,112,30],[106,34,112,32,"data"],[106,38,112,36],[106,39,112,37],[106,41,112,39],[107,14,113,12],[107,20,113,18],[107,24,113,22,"Error"],[107,29,113,27],[107,30,113,28],[107,63,113,61,"typeName"],[107,71,113,69],[107,73,113,71],[107,74,113,72],[108,12,114,10],[109,12,115,10],[110,12,116,10,"mainData"],[110,20,116,18],[110,21,116,19,"name"],[110,25,116,23],[110,26,116,24],[110,29,116,27,"data"],[110,33,116,31],[111,10,117,8],[112,8,118,6],[113,6,119,4],[113,7,119,5],[114,6,78,4],[115,6,79,4],[115,11,79,9],[115,15,79,15,"name"],[115,19,79,19],[115,23,79,23,"Object"],[115,29,79,29],[115,30,79,30,"keys"],[115,34,79,34],[115,35,79,35,"updateData"],[115,45,79,45],[115,46,79,46],[116,8,79,46,"_loop"],[116,13,79,46],[117,6,79,46],[118,4,120,2],[118,5,120,3],[119,2,121,0],[120,2,122,0,"exports"],[120,9,122,7],[120,10,122,8,"updateGlobal"],[120,22,122,20],[120,25,122,23,"updateMaker"],[120,36,122,34],[120,37,122,35],[120,45,122,43],[120,46,122,44],[121,2,123,0,"exports"],[121,9,123,7],[121,10,123,8,"updateInput"],[121,21,123,19],[121,24,123,22,"updateMaker"],[121,35,123,33],[121,36,123,34],[121,43,123,41],[121,44,123,42],[122,2,124,0,"exports"],[122,9,124,7],[122,10,124,8,"updateOutput"],[122,22,124,20],[122,25,124,23,"updateMaker"],[122,36,124,34],[122,37,124,35],[122,45,124,43],[122,46,124,44],[123,2,125,0],[123,11,125,9,"addInputAttributes"],[123,29,125,27,"addInputAttributes"],[123,30,125,28,"inputs"],[123,36,125,34],[123,38,125,36,"data"],[123,42,125,40],[123,44,125,42],[124,4,126,2],[124,8,126,8,"index"],[124,13,126,13],[124,16,126,16,"inputs"],[124,22,126,22],[124,23,126,23,"length"],[124,29,126,29],[124,32,126,32],[124,33,126,33],[125,4,127,2],[125,8,127,8,"input"],[125,13,127,13],[125,16,127,16,"checkForInput"],[125,29,127,29],[125,30,127,30,"inputs"],[125,36,127,36],[125,38,127,38,"index"],[125,43,127,43],[125,44,127,44],[126,4,128,2,"exports"],[126,11,128,9],[126,12,128,10,"updateInput"],[126,23,128,21],[126,24,128,22,"data"],[126,28,128,26],[126,30,128,28,"input"],[126,35,128,33],[126,36,128,34],[127,2,129,0],[128,2,130,0,"exports"],[128,9,130,7],[128,10,130,8,"addInputAttributes"],[128,28,130,26],[128,31,130,29,"addInputAttributes"],[128,49,130,47],[129,2,131,0],[129,11,131,9,"addOutputAttributes"],[129,30,131,28,"addOutputAttributes"],[129,31,131,29,"outputs"],[129,38,131,36],[129,40,131,38,"data"],[129,44,131,42],[129,46,131,44],[130,4,132,2],[130,8,132,8,"index"],[130,13,132,13],[130,16,132,16,"outputs"],[130,23,132,23],[130,24,132,24,"length"],[130,30,132,30],[130,33,132,33],[130,34,132,34],[131,4,133,2],[131,8,133,8,"output"],[131,14,133,14],[131,17,133,17,"checkForOutput"],[131,31,133,31],[131,32,133,32,"outputs"],[131,39,133,39],[131,41,133,41,"index"],[131,46,133,46],[131,47,133,47],[132,4,134,2,"exports"],[132,11,134,9],[132,12,134,10,"updateOutput"],[132,24,134,22],[132,25,134,23,"data"],[132,29,134,27],[132,31,134,29,"output"],[132,37,134,35],[132,38,134,36],[133,2,135,0],[134,2,136,0,"exports"],[134,9,136,7],[134,10,136,8,"addOutputAttributes"],[134,29,136,27],[134,32,136,30,"addOutputAttributes"],[134,51,136,49],[135,2,137,0],[135,11,137,9,"defaultVersionSetter"],[135,31,137,29,"defaultVersionSetter"],[135,32,137,30,"version"],[135,39,137,37],[135,41,137,39,"txBuf"],[135,46,137,44],[135,48,137,46],[136,4,138,2],[136,8,138,6],[136,10,138,8,"txBuf"],[136,15,138,13],[136,27,138,25,"Uint8Array"],[136,37,138,35],[136,38,138,36],[136,42,138,40,"txBuf"],[136,47,138,45],[136,48,138,46,"length"],[136,54,138,52],[136,57,138,55],[136,58,138,56],[136,60,138,58],[137,6,139,4],[137,12,139,10],[137,16,139,14,"Error"],[137,21,139,19],[137,22,139,20],[137,56,139,54],[137,57,139,55],[138,4,140,2],[139,4,141,2,"tools"],[139,9,141,7],[139,10,141,8,"writeUInt32"],[139,21,141,19],[139,22,141,20,"txBuf"],[139,27,141,25],[139,29,141,27],[139,30,141,28],[139,32,141,30,"version"],[139,39,141,37],[139,41,141,39],[139,45,141,43],[139,46,141,44],[140,4,142,2],[140,11,142,9,"txBuf"],[140,16,142,14],[141,2,143,0],[142,2,144,0,"exports"],[142,9,144,7],[142,10,144,8,"defaultVersionSetter"],[142,30,144,28],[142,33,144,31,"defaultVersionSetter"],[142,53,144,51],[143,2,145,0],[143,11,145,9,"defaultLocktimeSetter"],[143,32,145,30,"defaultLocktimeSetter"],[143,33,145,31,"locktime"],[143,41,145,39],[143,43,145,41,"txBuf"],[143,48,145,46],[143,50,145,48],[144,4,146,2],[144,8,146,6],[144,10,146,8,"txBuf"],[144,15,146,13],[144,27,146,25,"Uint8Array"],[144,37,146,35],[144,38,146,36],[144,42,146,40,"txBuf"],[144,47,146,45],[144,48,146,46,"length"],[144,54,146,52],[144,57,146,55],[144,58,146,56],[144,60,146,58],[145,6,147,4],[145,12,147,10],[145,16,147,14,"Error"],[145,21,147,19],[145,22,147,20],[145,57,147,55],[145,58,147,56],[146,4,148,2],[147,4,149,2,"tools"],[147,9,149,7],[147,10,149,8,"writeUInt32"],[147,21,149,19],[147,22,149,20,"txBuf"],[147,27,149,25],[147,29,149,27,"txBuf"],[147,34,149,32],[147,35,149,33,"length"],[147,41,149,39],[147,44,149,42],[147,45,149,43],[147,47,149,45,"locktime"],[147,55,149,53],[147,57,149,55],[147,61,149,59],[147,62,149,60],[148,4,150,2],[148,11,150,9,"txBuf"],[148,16,150,14],[149,2,151,0],[150,2,152,0,"exports"],[150,9,152,7],[150,10,152,8,"defaultLocktimeSetter"],[150,31,152,29],[150,34,152,32,"defaultLocktimeSetter"],[150,55,152,53],[151,0,152,54],[151,3]],"functionMap":{"names":["<global>","<anonymous>","checkForInput","checkForOutput","checkHasKey","keyVals.filter$argument_0","getEnumLength","Object.keys.forEach$argument_0","inputCheckUncleanFinalized","throwForUpdateMaker","updateMaker","data.every$argument_0","addInputAttributes","addOutputAttributes","defaultVersionSetter","defaultLocktimeSetter"],"mappings":"AAA;ECG;GDQ;AEI;CFI;AGE;CHI;AIE;mBCQ,kDD;CJK;AME;8BCE;GDI;CNE;AQE;CRe;ASE;CTK;AUC;STC;0BU0B,wCV;GSiB;CVC;AYI;CZI;AaE;CbI;AcE;CdM;AeE;CfM"}},"type":"js/module"}]}