{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":338,"column":0,"index":10291}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bip39","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":40},"end":{"line":2,"column":31,"index":71}}],"key":"QQUIxv/Rmue50N7SMxVd96Ng/bc="}},{"name":"../../blue_modules/bip39","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":73},"end":{"line":4,"column":56,"index":129}}],"key":"85RQ53RLSJYbKPOHYAMQZMTO5GM="}},{"name":"../../blue_modules/BlueElectrum","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":130},"end":{"line":5,"column":64,"index":194}}],"key":"4YdrXI/cQIf9X1EFj5L/r0NpY3g="}},{"name":"./legacy-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":195},"end":{"line":6,"column":47,"index":242}}],"key":"wPb6aTWK4taaR1mov6qK3Iqdk1w="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.AbstractHDWallet = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var bip39 = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"bip39\"));\n  var bip39custom = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"../../blue_modules/bip39\"));\n  var BlueElectrum = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"../../blue_modules/BlueElectrum\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  /**\n   * @deprecated\n   */\n  var AbstractHDWallet = exports.AbstractHDWallet = /*#__PURE__*/function (_LegacyWallet) {\n    function AbstractHDWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, AbstractHDWallet);\n      _this = _callSuper(this, AbstractHDWallet);\n      // @ts-ignore: override\n      _this.type = AbstractHDWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = AbstractHDWallet.typeReadable;\n      var Constructor = _this.constructor;\n      _this.next_free_address_index = 0;\n      _this.next_free_change_address_index = 0;\n      _this.internal_addresses_cache = {}; // index => address\n      _this.external_addresses_cache = {}; // index => address\n      _this._xpub = ''; // cache\n      _this.usedAddresses = [];\n      _this._address_to_wif_cache = {};\n      _this.gap_limit = 20;\n      _this._derivationPath = Constructor.derivationPath;\n      return _this;\n    }\n    (0, _inherits2.default)(AbstractHDWallet, _LegacyWallet);\n    return (0, _createClass2.default)(AbstractHDWallet, [{\n      key: \"getNextFreeAddressIndex\",\n      value: function getNextFreeAddressIndex() {\n        return this.next_free_address_index;\n      }\n    }, {\n      key: \"getNextFreeChangeAddressIndex\",\n      value: function getNextFreeChangeAddressIndex() {\n        return this.next_free_change_address_index;\n      }\n    }, {\n      key: \"prepareForSerialization\",\n      value: function prepareForSerialization() {\n        // deleting structures that cant be serialized\n        delete this._node0;\n        delete this._node1;\n      }\n    }, {\n      key: \"generate\",\n      value: function generate() {\n        throw new Error('Not implemented');\n      }\n    }, {\n      key: \"allowSend\",\n      value: function allowSend() {\n        return false;\n      }\n    }, {\n      key: \"getTransactions\",\n      value: function getTransactions() {\n        throw new Error('Not implemented');\n      }\n\n      /**\n       * @return {Buffer} wallet seed\n       */\n    }, {\n      key: \"_getSeed\",\n      value: function _getSeed() {\n        var mnemonic = this.secret;\n        var passphrase = this.passphrase;\n        return bip39.mnemonicToSeedSync(mnemonic, passphrase);\n      }\n    }, {\n      key: \"setSecret\",\n      value: function setSecret(newSecret) {\n        // first, checking if it's a SeedQR:\n        try {\n          // compact seedQR should be between 32 - 64 chars long in hex format\n          if (newSecret.length === 64 || newSecret.length === 32) {\n            // not supported as mobile scanners dont recognize such QRs at all.\n            // nop\n          } else if (newSecret.length === 96 || newSecret.length === 48) {\n            // standard seedQR\n            var _wordlist = bip39.wordlists[bip39.getDefaultWordlist()];\n            var words = newSecret.match(/[\\d]{4}/g);\n            if (words) {\n              newSecret = words.map(function (num) {\n                return _wordlist[parseInt(num, 10)];\n              }).join(' ');\n            }\n          }\n        } catch (e) {}\n        // end SeedQR\n\n        this.secret = newSecret.trim().toLowerCase();\n        this.secret = this.secret.replace(/[^a-zA-Z0-9]/g, ' ').replace(/\\s+/g, ' ');\n\n        // Try to match words to the default bip39 wordlist and complete partial words\n        var wordlist = bip39.wordlists[bip39.getDefaultWordlist()];\n        var lookupMap = wordlist.reduce(function (map, word) {\n          var prefix3 = word.substr(0, 3);\n          var prefix4 = word.substr(0, 4);\n          map.set(prefix3, !map.has(prefix3) ? word : false);\n          map.set(prefix4, !map.has(prefix4) ? word : false);\n          return map;\n        }, new Map());\n        this.secret = this.secret.split(' ').map(function (word) {\n          return lookupMap.get(word) || word;\n        }).join(' ');\n        return this;\n      }\n    }, {\n      key: \"setPassphrase\",\n      value: function setPassphrase(passphrase) {\n        this.passphrase = passphrase;\n      }\n    }, {\n      key: \"getPassphrase\",\n      value: function getPassphrase() {\n        return this.passphrase;\n      }\n\n      /**\n       * @return {Boolean} is mnemonic in `this.secret` valid\n       */\n    }, {\n      key: \"validateMnemonic\",\n      value: function validateMnemonic() {\n        return bip39custom.validateMnemonic(this.secret);\n      }\n\n      /**\n       * Derives from hierarchy, returns next free address\n       * (the one that has no transactions). Looks for several,\n       * gives up if none found, and returns the used one\n       *\n       * @return {Promise.<string>}\n       */\n    }, {\n      key: \"getAddressAsync\",\n      value: (function () {\n        var _getAddressAsync = (0, _asyncToGenerator2.default)(function* () {\n          // looking for free external address\n          var freeAddress = '';\n          var c;\n          for (c = 0; c < this.gap_limit + 1; c++) {\n            if (this.next_free_address_index + c < 0) continue;\n            var address = this._getExternalAddressByIndex(this.next_free_address_index + c);\n            this.external_addresses_cache[this.next_free_address_index + c] = address; // updating cache just for any case\n            var txs = [];\n            try {\n              txs = yield BlueElectrum.getTransactionsByAddress(address);\n            } catch (Err) {\n              console.warn('BlueElectrum.getTransactionsByAddress()', Err.message);\n            }\n            if (txs.length === 0) {\n              // found free address\n              freeAddress = address;\n              this.next_free_address_index += c; // now points to _this one_\n              break;\n            }\n          }\n          if (!freeAddress) {\n            // could not find in cycle above, give up\n            freeAddress = this._getExternalAddressByIndex(this.next_free_address_index + c); // we didnt check this one, maybe its free\n            this.next_free_address_index += c; // now points to this one\n          }\n          this._address = freeAddress;\n          return freeAddress;\n        });\n        function getAddressAsync() {\n          return _getAddressAsync.apply(this, arguments);\n        }\n        return getAddressAsync;\n      }()\n      /**\n       * Derives from hierarchy, returns next free CHANGE address\n       * (the one that has no transactions). Looks for several,\n       * gives up if none found, and returns the used one\n       *\n       * @return {Promise.<string>}\n       */\n      )\n    }, {\n      key: \"getChangeAddressAsync\",\n      value: (function () {\n        var _getChangeAddressAsync = (0, _asyncToGenerator2.default)(function* () {\n          // looking for free internal address\n          var freeAddress = '';\n          var c;\n          for (c = 0; c < this.gap_limit + 1; c++) {\n            if (this.next_free_change_address_index + c < 0) continue;\n            var address = this._getInternalAddressByIndex(this.next_free_change_address_index + c);\n            this.internal_addresses_cache[this.next_free_change_address_index + c] = address; // updating cache just for any case\n            var txs = [];\n            try {\n              txs = yield BlueElectrum.getTransactionsByAddress(address);\n            } catch (Err) {\n              console.warn('BlueElectrum.getTransactionsByAddress()', Err.message);\n            }\n            if (txs.length === 0) {\n              // found free address\n              freeAddress = address;\n              this.next_free_change_address_index += c; // now points to _this one_\n              break;\n            }\n          }\n          if (!freeAddress) {\n            // could not find in cycle above, give up\n            freeAddress = this._getInternalAddressByIndex(this.next_free_change_address_index + c); // we didnt check this one, maybe its free\n            this.next_free_change_address_index += c; // now points to this one\n          }\n          this._address = freeAddress;\n          return freeAddress;\n        });\n        function getChangeAddressAsync() {\n          return _getChangeAddressAsync.apply(this, arguments);\n        }\n        return getChangeAddressAsync;\n      }()\n      /**\n       * Should not be used in HD wallets\n       *\n       * @deprecated\n       * @return {string}\n       */\n      )\n    }, {\n      key: \"getAddress\",\n      value: function getAddress() {\n        return this._address;\n      }\n    }, {\n      key: \"_getExternalWIFByIndex\",\n      value: function _getExternalWIFByIndex(index) {\n        throw new Error('Not implemented');\n      }\n    }, {\n      key: \"_getInternalWIFByIndex\",\n      value: function _getInternalWIFByIndex(index) {\n        throw new Error('Not implemented');\n      }\n    }, {\n      key: \"_getExternalAddressByIndex\",\n      value: function _getExternalAddressByIndex(index) {\n        throw new Error('Not implemented');\n      }\n    }, {\n      key: \"_getInternalAddressByIndex\",\n      value: function _getInternalAddressByIndex(index) {\n        throw new Error('Not implemented');\n      }\n    }, {\n      key: \"getXpub\",\n      value: function getXpub() {\n        throw new Error('Not implemented');\n      }\n\n      /**\n       * Async function to fetch all transactions. Use getter to get actual txs.\n       * Also, sets internals:\n       *  `this.internal_addresses_cache`\n       *  `this.external_addresses_cache`\n       *\n       * @returns {Promise<void>}\n       */\n    }, {\n      key: \"fetchTransactions\",\n      value: (function () {\n        var _fetchTransactions = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('not implemented');\n        });\n        function fetchTransactions() {\n          return _fetchTransactions.apply(this, arguments);\n        }\n        return fetchTransactions;\n      }()\n      /**\n       * Given that `address` is in our HD hierarchy, try to find\n       * corresponding WIF\n       *\n       * @param address {String} In our HD hierarchy\n       * @return {String} WIF if found\n       */\n      )\n    }, {\n      key: \"_getWifForAddress\",\n      value: function _getWifForAddress(address) {\n        if (this._address_to_wif_cache[address]) return this._address_to_wif_cache[address]; // cache hit\n\n        // fast approach, first lets iterate over all addressess we have in cache\n        for (var indexStr of Object.keys(this.internal_addresses_cache)) {\n          var index = parseInt(indexStr, 10);\n          if (this._getInternalAddressByIndex(index) === address) {\n            return this._address_to_wif_cache[address] = this._getInternalWIFByIndex(index);\n          }\n        }\n        for (var _indexStr of Object.keys(this.external_addresses_cache)) {\n          var _index = parseInt(_indexStr, 10);\n          if (this._getExternalAddressByIndex(_index) === address) {\n            return this._address_to_wif_cache[address] = this._getExternalWIFByIndex(_index);\n          }\n        }\n\n        // no luck - lets iterate over all addresses we have up to first unused address index\n        for (var c = 0; c <= this.next_free_change_address_index + this.gap_limit; c++) {\n          var possibleAddress = this._getInternalAddressByIndex(c);\n          if (possibleAddress === address) {\n            return this._address_to_wif_cache[address] = this._getInternalWIFByIndex(c);\n          }\n        }\n        for (var _c = 0; _c <= this.next_free_address_index + this.gap_limit; _c++) {\n          var _possibleAddress = this._getExternalAddressByIndex(_c);\n          if (_possibleAddress === address) {\n            return this._address_to_wif_cache[address] = this._getExternalWIFByIndex(_c);\n          }\n        }\n        throw new Error('Could not find WIF for ' + address);\n      }\n    }, {\n      key: \"fetchBalance\",\n      value: function () {\n        var _fetchBalance = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('Not implemented');\n        });\n        function fetchBalance() {\n          return _fetchBalance.apply(this, arguments);\n        }\n        return fetchBalance;\n      }()\n      /**\n       * @inheritDoc\n       */\n    }, {\n      key: \"fetchUtxo\",\n      value: (function () {\n        var _fetchUtxo = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('Not implemented');\n        });\n        function fetchUtxo() {\n          return _fetchUtxo.apply(this, arguments);\n        }\n        return fetchUtxo;\n      }())\n    }, {\n      key: \"_getDerivationPathByAddress\",\n      value: function _getDerivationPathByAddress(address) {\n        throw new Error('Not implemented');\n      }\n    }, {\n      key: \"_getNodePubkeyByIndex\",\n      value: function _getNodePubkeyByIndex(node, index) {\n        throw new Error('Not implemented');\n      }\n\n      /**\n       * @returns {string} Root derivation path for wallet if any\n       */\n    }, {\n      key: \"getDerivationPath\",\n      value: function getDerivationPath() {\n        return this._derivationPath;\n      }\n\n      /*\n       * Set derivation path for the wallet\n       *\n       * @param {String} path - path\n       */\n    }, {\n      key: \"setDerivationPath\",\n      value: function setDerivationPath(path) {\n        this._derivationPath = path;\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[10], \"./legacy-wallet\").LegacyWallet);\n  AbstractHDWallet.type = 'abstract';\n  AbstractHDWallet.typeReadable = 'abstract';\n});","lineCount":394,"map":[[13,2,2,0],[13,6,2,0,"bip39"],[13,11,2,0],[13,14,2,0,"_interopRequireWildcard"],[13,37,2,0],[13,38,2,0,"_$$_REQUIRE"],[13,49,2,0],[13,50,2,0,"_dependencyMap"],[13,64,2,0],[14,2,4,0],[14,6,4,0,"bip39custom"],[14,17,4,0],[14,20,4,0,"_interopRequireWildcard"],[14,43,4,0],[14,44,4,0,"_$$_REQUIRE"],[14,55,4,0],[14,56,4,0,"_dependencyMap"],[14,70,4,0],[15,2,5,0],[15,6,5,0,"BlueElectrum"],[15,18,5,0],[15,21,5,0,"_interopRequireWildcard"],[15,44,5,0],[15,45,5,0,"_$$_REQUIRE"],[15,56,5,0],[15,57,5,0,"_dependencyMap"],[15,71,5,0],[16,2,5,64],[16,11,5,64,"_getRequireWildcardCache"],[16,36,5,64,"e"],[16,37,5,64],[16,66,5,64,"WeakMap"],[16,73,5,64],[16,92,5,64,"r"],[16,93,5,64],[16,100,5,64,"WeakMap"],[16,107,5,64],[16,111,5,64,"t"],[16,112,5,64],[16,119,5,64,"WeakMap"],[16,126,5,64],[16,138,5,64,"_getRequireWildcardCache"],[16,162,5,64],[16,174,5,64,"_getRequireWildcardCache"],[16,199,5,64,"e"],[16,200,5,64],[16,211,5,64,"e"],[16,212,5,64],[16,215,5,64,"t"],[16,216,5,64],[16,219,5,64,"r"],[16,220,5,64],[16,225,5,64,"e"],[16,226,5,64],[17,2,5,64],[17,11,5,64,"_interopRequireWildcard"],[17,35,5,64,"e"],[17,36,5,64],[17,38,5,64,"r"],[17,39,5,64],[17,48,5,64,"r"],[17,49,5,64],[17,53,5,64,"e"],[17,54,5,64],[17,58,5,64,"e"],[17,59,5,64],[17,60,5,64,"__esModule"],[17,70,5,64],[17,79,5,64,"e"],[17,80,5,64],[17,95,5,64,"e"],[17,96,5,64],[17,119,5,64,"e"],[17,120,5,64],[17,145,5,64,"e"],[17,146,5,64],[17,157,5,64,"default"],[17,164,5,64],[17,166,5,64,"e"],[17,167,5,64],[17,175,5,64,"t"],[17,176,5,64],[17,179,5,64,"_getRequireWildcardCache"],[17,203,5,64],[17,204,5,64,"r"],[17,205,5,64],[17,212,5,64,"t"],[17,213,5,64],[17,217,5,64,"t"],[17,218,5,64],[17,219,5,64,"has"],[17,222,5,64],[17,223,5,64,"e"],[17,224,5,64],[17,234,5,64,"t"],[17,235,5,64],[17,236,5,64,"get"],[17,239,5,64],[17,240,5,64,"e"],[17,241,5,64],[17,248,5,64,"n"],[17,249,5,64],[17,254,5,64,"__proto__"],[17,263,5,64],[17,273,5,64,"a"],[17,274,5,64],[17,277,5,64,"Object"],[17,283,5,64],[17,284,5,64,"defineProperty"],[17,298,5,64],[17,302,5,64,"Object"],[17,308,5,64],[17,309,5,64,"getOwnPropertyDescriptor"],[17,333,5,64],[17,344,5,64,"u"],[17,345,5,64],[17,349,5,64,"e"],[17,350,5,64],[17,370,5,64,"u"],[17,371,5,64],[17,378,5,64,"hasOwnProperty"],[17,392,5,64],[17,393,5,64,"call"],[17,397,5,64],[17,398,5,64,"e"],[17,399,5,64],[17,401,5,64,"u"],[17,402,5,64],[17,411,5,64,"i"],[17,412,5,64],[17,415,5,64,"a"],[17,416,5,64],[17,419,5,64,"Object"],[17,425,5,64],[17,426,5,64,"getOwnPropertyDescriptor"],[17,450,5,64],[17,451,5,64,"e"],[17,452,5,64],[17,454,5,64,"u"],[17,455,5,64],[17,465,5,64,"i"],[17,466,5,64],[17,471,5,64,"i"],[17,472,5,64],[17,473,5,64,"get"],[17,476,5,64],[17,480,5,64,"i"],[17,481,5,64],[17,482,5,64,"set"],[17,485,5,64],[17,489,5,64,"Object"],[17,495,5,64],[17,496,5,64,"defineProperty"],[17,510,5,64],[17,511,5,64,"n"],[17,512,5,64],[17,514,5,64,"u"],[17,515,5,64],[17,517,5,64,"i"],[17,518,5,64],[17,522,5,64,"n"],[17,523,5,64],[17,524,5,64,"u"],[17,525,5,64],[17,529,5,64,"e"],[17,530,5,64],[17,531,5,64,"u"],[17,532,5,64],[17,544,5,64,"n"],[17,545,5,64],[17,546,5,64,"default"],[17,553,5,64],[17,556,5,64,"e"],[17,557,5,64],[17,559,5,64,"t"],[17,560,5,64],[17,564,5,64,"t"],[17,565,5,64],[17,566,5,64,"set"],[17,569,5,64],[17,570,5,64,"e"],[17,571,5,64],[17,573,5,64,"n"],[17,574,5,64],[17,577,5,64,"n"],[17,578,5,64],[18,2,5,64],[18,11,5,64,"_callSuper"],[18,22,5,64,"t"],[18,23,5,64],[18,25,5,64,"o"],[18,26,5,64],[18,28,5,64,"e"],[18,29,5,64],[18,40,5,64,"o"],[18,41,5,64],[18,48,5,64,"_getPrototypeOf2"],[18,64,5,64],[18,65,5,64,"default"],[18,72,5,64],[18,74,5,64,"o"],[18,75,5,64],[18,82,5,64,"_possibleConstructorReturn2"],[18,109,5,64],[18,110,5,64,"default"],[18,117,5,64],[18,119,5,64,"t"],[18,120,5,64],[18,122,5,64,"_isNativeReflectConstruct"],[18,147,5,64],[18,152,5,64,"Reflect"],[18,159,5,64],[18,160,5,64,"construct"],[18,169,5,64],[18,170,5,64,"o"],[18,171,5,64],[18,173,5,64,"e"],[18,174,5,64],[18,186,5,64,"_getPrototypeOf2"],[18,202,5,64],[18,203,5,64,"default"],[18,210,5,64],[18,212,5,64,"t"],[18,213,5,64],[18,215,5,64,"constructor"],[18,226,5,64],[18,230,5,64,"o"],[18,231,5,64],[18,232,5,64,"apply"],[18,237,5,64],[18,238,5,64,"t"],[18,239,5,64],[18,241,5,64,"e"],[18,242,5,64],[19,2,5,64],[19,11,5,64,"_isNativeReflectConstruct"],[19,37,5,64],[19,51,5,64,"t"],[19,52,5,64],[19,56,5,64,"Boolean"],[19,63,5,64],[19,64,5,64,"prototype"],[19,73,5,64],[19,74,5,64,"valueOf"],[19,81,5,64],[19,82,5,64,"call"],[19,86,5,64],[19,87,5,64,"Reflect"],[19,94,5,64],[19,95,5,64,"construct"],[19,104,5,64],[19,105,5,64,"Boolean"],[19,112,5,64],[19,145,5,64,"t"],[19,146,5,64],[19,159,5,64,"_isNativeReflectConstruct"],[19,184,5,64],[19,196,5,64,"_isNativeReflectConstruct"],[19,222,5,64],[19,235,5,64,"t"],[19,236,5,64],[20,2,13,0],[21,0,14,0],[22,0,15,0],[23,2,13,0],[23,6,16,13,"AbstractHDWallet"],[23,22,16,29],[23,25,16,29,"exports"],[23,32,16,29],[23,33,16,29,"AbstractHDWallet"],[23,49,16,29],[23,75,16,29,"_LegacyWallet"],[23,88,16,29],[24,4,36,2],[24,13,36,2,"AbstractHDWallet"],[24,30,36,2],[24,32,36,16],[25,6,36,16],[25,10,36,16,"_this"],[25,15,36,16],[26,6,36,16],[26,10,36,16,"_classCallCheck2"],[26,26,36,16],[26,27,36,16,"default"],[26,34,36,16],[26,42,36,16,"AbstractHDWallet"],[26,58,36,16],[27,6,37,4,"_this"],[27,11,37,4],[27,14,37,4,"_callSuper"],[27,24,37,4],[27,31,37,4,"AbstractHDWallet"],[27,47,37,4],[28,6,19,2],[29,6,19,2,"_this"],[29,11,19,2],[29,12,20,18,"type"],[29,16,20,22],[29,19,20,25,"AbstractHDWallet"],[29,35,20,41],[29,36,20,42,"type"],[29,40,20,46],[30,6,21,2],[31,6,21,2,"_this"],[31,11,21,2],[31,12,22,18,"typeReadable"],[31,24,22,30],[31,27,22,33,"AbstractHDWallet"],[31,43,22,49],[31,44,22,50,"typeReadable"],[31,56,22,62],[32,6,38,4],[32,10,38,10,"Constructor"],[32,21,38,21],[32,24,38,24,"_this"],[32,29,38,24],[32,30,38,29,"constructor"],[32,41,38,78],[33,6,39,4,"_this"],[33,11,39,4],[33,12,39,9,"next_free_address_index"],[33,35,39,32],[33,38,39,35],[33,39,39,36],[34,6,40,4,"_this"],[34,11,40,4],[34,12,40,9,"next_free_change_address_index"],[34,42,40,39],[34,45,40,42],[34,46,40,43],[35,6,41,4,"_this"],[35,11,41,4],[35,12,41,9,"internal_addresses_cache"],[35,36,41,33],[35,39,41,36],[35,40,41,37],[35,41,41,38],[35,42,41,39],[35,43,41,40],[36,6,42,4,"_this"],[36,11,42,4],[36,12,42,9,"external_addresses_cache"],[36,36,42,33],[36,39,42,36],[36,40,42,37],[36,41,42,38],[36,42,42,39],[36,43,42,40],[37,6,43,4,"_this"],[37,11,43,4],[37,12,43,9,"_xpub"],[37,17,43,14],[37,20,43,17],[37,22,43,19],[37,23,43,20],[37,24,43,21],[38,6,44,4,"_this"],[38,11,44,4],[38,12,44,9,"usedAddresses"],[38,25,44,22],[38,28,44,25],[38,30,44,27],[39,6,45,4,"_this"],[39,11,45,4],[39,12,45,9,"_address_to_wif_cache"],[39,33,45,30],[39,36,45,33],[39,37,45,34],[39,38,45,35],[40,6,46,4,"_this"],[40,11,46,4],[40,12,46,9,"gap_limit"],[40,21,46,18],[40,24,46,21],[40,26,46,23],[41,6,47,4,"_this"],[41,11,47,4],[41,12,47,9,"_derivationPath"],[41,27,47,24],[41,30,47,27,"Constructor"],[41,41,47,38],[41,42,47,39,"derivationPath"],[41,56,47,53],[42,6,47,54],[42,13,47,54,"_this"],[42,18,47,54],[43,4,48,2],[44,4,48,3],[44,8,48,3,"_inherits2"],[44,18,48,3],[44,19,48,3,"default"],[44,26,48,3],[44,28,48,3,"AbstractHDWallet"],[44,44,48,3],[44,46,48,3,"_LegacyWallet"],[44,59,48,3],[45,4,48,3],[45,15,48,3,"_createClass2"],[45,28,48,3],[45,29,48,3,"default"],[45,36,48,3],[45,38,48,3,"AbstractHDWallet"],[45,54,48,3],[46,6,48,3,"key"],[46,9,48,3],[47,6,48,3,"value"],[47,11,48,3],[47,13,50,2],[47,22,50,2,"getNextFreeAddressIndex"],[47,45,50,25,"getNextFreeAddressIndex"],[47,46,50,25],[47,48,50,36],[48,8,51,4],[48,15,51,11],[48,19,51,15],[48,20,51,16,"next_free_address_index"],[48,43,51,39],[49,6,52,2],[50,4,52,3],[51,6,52,3,"key"],[51,9,52,3],[52,6,52,3,"value"],[52,11,52,3],[52,13,54,2],[52,22,54,2,"getNextFreeChangeAddressIndex"],[52,51,54,31,"getNextFreeChangeAddressIndex"],[52,52,54,31],[52,54,54,42],[53,8,55,4],[53,15,55,11],[53,19,55,15],[53,20,55,16,"next_free_change_address_index"],[53,50,55,46],[54,6,56,2],[55,4,56,3],[56,6,56,3,"key"],[56,9,56,3],[57,6,56,3,"value"],[57,11,56,3],[57,13,58,2],[57,22,58,2,"prepareForSerialization"],[57,45,58,25,"prepareForSerialization"],[57,46,58,25],[57,48,58,34],[58,8,59,4],[59,8,60,4],[59,15,60,11],[59,19,60,15],[59,20,60,16,"_node0"],[59,26,60,22],[60,8,61,4],[60,15,61,11],[60,19,61,15],[60,20,61,16,"_node1"],[60,26,61,22],[61,6,62,2],[62,4,62,3],[63,6,62,3,"key"],[63,9,62,3],[64,6,62,3,"value"],[64,11,62,3],[64,13,64,2],[64,22,64,2,"generate"],[64,30,64,10,"generate"],[64,31,64,10],[64,33,64,28],[65,8,65,4],[65,14,65,10],[65,18,65,14,"Error"],[65,23,65,19],[65,24,65,20],[65,41,65,37],[65,42,65,38],[66,6,66,2],[67,4,66,3],[68,6,66,3,"key"],[68,9,66,3],[69,6,66,3,"value"],[69,11,66,3],[69,13,68,2],[69,22,68,2,"allowSend"],[69,31,68,11,"allowSend"],[69,32,68,11],[69,34,68,23],[70,8,69,4],[70,15,69,11],[70,20,69,16],[71,6,70,2],[72,4,70,3],[73,6,70,3,"key"],[73,9,70,3],[74,6,70,3,"value"],[74,11,70,3],[74,13,72,2],[74,22,72,2,"getTransactions"],[74,37,72,17,"getTransactions"],[74,38,72,17],[74,40,72,35],[75,8,73,4],[75,14,73,10],[75,18,73,14,"Error"],[75,23,73,19],[75,24,73,20],[75,41,73,37],[75,42,73,38],[76,6,74,2],[78,6,76,2],[79,0,77,0],[80,0,78,0],[81,4,76,2],[82,6,76,2,"key"],[82,9,76,2],[83,6,76,2,"value"],[83,11,76,2],[83,13,79,2],[83,22,79,2,"_getSeed"],[83,30,79,10,"_getSeed"],[83,31,79,10],[83,33,79,21],[84,8,80,4],[84,12,80,10,"mnemonic"],[84,20,80,18],[84,23,80,21],[84,27,80,25],[84,28,80,26,"secret"],[84,34,80,32],[85,8,81,4],[85,12,81,10,"passphrase"],[85,22,81,20],[85,25,81,23],[85,29,81,27],[85,30,81,28,"passphrase"],[85,40,81,38],[86,8,82,4],[86,15,82,11,"bip39"],[86,20,82,16],[86,21,82,17,"mnemonicToSeedSync"],[86,39,82,35],[86,40,82,36,"mnemonic"],[86,48,82,44],[86,50,82,46,"passphrase"],[86,60,82,56],[86,61,82,57],[87,6,83,2],[88,4,83,3],[89,6,83,3,"key"],[89,9,83,3],[90,6,83,3,"value"],[90,11,83,3],[90,13,85,2],[90,22,85,2,"setSecret"],[90,31,85,11,"setSecret"],[90,32,85,12,"newSecret"],[90,41,85,29],[90,43,85,37],[91,8,86,4],[92,8,87,4],[92,12,87,8],[93,10,88,6],[94,10,89,6],[94,14,89,10,"newSecret"],[94,23,89,19],[94,24,89,20,"length"],[94,30,89,26],[94,35,89,31],[94,37,89,33],[94,41,89,37,"newSecret"],[94,50,89,46],[94,51,89,47,"length"],[94,57,89,53],[94,62,89,58],[94,64,89,60],[94,66,89,62],[95,12,90,8],[96,12,91,8],[97,10,91,8],[97,11,92,7],[97,17,92,13],[97,21,92,17,"newSecret"],[97,30,92,26],[97,31,92,27,"length"],[97,37,92,33],[97,42,92,38],[97,44,92,40],[97,48,92,44,"newSecret"],[97,57,92,53],[97,58,92,54,"length"],[97,64,92,60],[97,69,92,65],[97,71,92,67],[97,73,92,69],[98,12,93,8],[99,12,94,8],[99,16,94,14,"wordlist"],[99,25,94,22],[99,28,94,25,"bip39"],[99,33,94,30],[99,34,94,31,"wordlists"],[99,43,94,40],[99,44,94,41,"bip39"],[99,49,94,46],[99,50,94,47,"getDefaultWordlist"],[99,68,94,65],[99,69,94,66],[99,70,94,67],[99,71,94,68],[100,12,95,8],[100,16,95,14,"words"],[100,21,95,19],[100,24,95,22,"newSecret"],[100,33,95,31],[100,34,95,32,"match"],[100,39,95,37],[100,40,95,38],[100,50,95,48],[100,51,95,49],[101,12,97,8],[101,16,97,12,"words"],[101,21,97,17],[101,23,97,19],[102,14,98,10,"newSecret"],[102,23,98,19],[102,26,98,22,"words"],[102,31,98,27],[102,32,98,28,"map"],[102,35,98,31],[102,36,98,32],[102,46,98,32,"num"],[102,49,98,35],[103,16,98,35],[103,23,98,39,"wordlist"],[103,32,98,47],[103,33,98,48,"parseInt"],[103,41,98,56],[103,42,98,57,"num"],[103,45,98,60],[103,47,98,62],[103,49,98,64],[103,50,98,65],[103,51,98,66],[104,14,98,66],[104,16,98,67],[104,17,98,68,"join"],[104,21,98,72],[104,22,98,73],[104,25,98,76],[104,26,98,77],[105,12,99,8],[106,10,100,6],[107,8,101,4],[107,9,101,5],[107,10,101,6],[107,17,101,13,"e"],[107,18,101,14],[107,20,101,16],[107,21,101,17],[108,8,102,4],[110,8,104,4],[110,12,104,8],[110,13,104,9,"secret"],[110,19,104,15],[110,22,104,18,"newSecret"],[110,31,104,27],[110,32,104,28,"trim"],[110,36,104,32],[110,37,104,33],[110,38,104,34],[110,39,104,35,"toLowerCase"],[110,50,104,46],[110,51,104,47],[110,52,104,48],[111,8,105,4],[111,12,105,8],[111,13,105,9,"secret"],[111,19,105,15],[111,22,105,18],[111,26,105,22],[111,27,105,23,"secret"],[111,33,105,29],[111,34,105,30,"replace"],[111,41,105,37],[111,42,105,38],[111,57,105,53],[111,59,105,55],[111,62,105,58],[111,63,105,59],[111,64,105,60,"replace"],[111,71,105,67],[111,72,105,68],[111,78,105,74],[111,80,105,76],[111,83,105,79],[111,84,105,80],[113,8,107,4],[114,8,108,4],[114,12,108,10,"wordlist"],[114,20,108,18],[114,23,108,21,"bip39"],[114,28,108,26],[114,29,108,27,"wordlists"],[114,38,108,36],[114,39,108,37,"bip39"],[114,44,108,42],[114,45,108,43,"getDefaultWordlist"],[114,63,108,61],[114,64,108,62],[114,65,108,63],[114,66,108,64],[115,8,109,4],[115,12,109,10,"lookupMap"],[115,21,109,19],[115,24,109,22,"wordlist"],[115,32,109,30],[115,33,109,31,"reduce"],[115,39,109,37],[115,40,109,38],[115,50,109,39,"map"],[115,53,109,42],[115,55,109,44,"word"],[115,59,109,48],[115,61,109,53],[116,10,110,6],[116,14,110,12,"prefix3"],[116,21,110,19],[116,24,110,22,"word"],[116,28,110,26],[116,29,110,27,"substr"],[116,35,110,33],[116,36,110,34],[116,37,110,35],[116,39,110,37],[116,40,110,38],[116,41,110,39],[117,10,111,6],[117,14,111,12,"prefix4"],[117,21,111,19],[117,24,111,22,"word"],[117,28,111,26],[117,29,111,27,"substr"],[117,35,111,33],[117,36,111,34],[117,37,111,35],[117,39,111,37],[117,40,111,38],[117,41,111,39],[118,10,113,6,"map"],[118,13,113,9],[118,14,113,10,"set"],[118,17,113,13],[118,18,113,14,"prefix3"],[118,25,113,21],[118,27,113,23],[118,28,113,24,"map"],[118,31,113,27],[118,32,113,28,"has"],[118,35,113,31],[118,36,113,32,"prefix3"],[118,43,113,39],[118,44,113,40],[118,47,113,43,"word"],[118,51,113,47],[118,54,113,50],[118,59,113,55],[118,60,113,56],[119,10,114,6,"map"],[119,13,114,9],[119,14,114,10,"set"],[119,17,114,13],[119,18,114,14,"prefix4"],[119,25,114,21],[119,27,114,23],[119,28,114,24,"map"],[119,31,114,27],[119,32,114,28,"has"],[119,35,114,31],[119,36,114,32,"prefix4"],[119,43,114,39],[119,44,114,40],[119,47,114,43,"word"],[119,51,114,47],[119,54,114,50],[119,59,114,55],[119,60,114,56],[120,10,116,6],[120,17,116,13,"map"],[120,20,116,16],[121,8,117,4],[121,9,117,5],[121,11,117,7],[121,15,117,11,"Map"],[121,18,117,14],[121,19,117,39],[121,20,117,40],[121,21,117,41],[122,8,119,4],[122,12,119,8],[122,13,119,9,"secret"],[122,19,119,15],[122,22,119,18],[122,26,119,22],[122,27,119,23,"secret"],[122,33,119,29],[122,34,120,7,"split"],[122,39,120,12],[122,40,120,13],[122,43,120,16],[122,44,120,17],[122,45,121,7,"map"],[122,48,121,10],[122,49,121,11],[122,59,121,11,"word"],[122,63,121,15],[123,10,121,15],[123,17,121,19,"lookupMap"],[123,26,121,28],[123,27,121,29,"get"],[123,30,121,32],[123,31,121,33,"word"],[123,35,121,37],[123,36,121,38],[123,40,121,42,"word"],[123,44,121,46],[124,8,121,46],[124,10,121,47],[124,11,122,7,"join"],[124,15,122,11],[124,16,122,12],[124,19,122,15],[124,20,122,16],[125,8,124,4],[125,15,124,11],[125,19,124,15],[126,6,125,2],[127,4,125,3],[128,6,125,3,"key"],[128,9,125,3],[129,6,125,3,"value"],[129,11,125,3],[129,13,127,2],[129,22,127,2,"setPassphrase"],[129,35,127,15,"setPassphrase"],[129,36,127,16,"passphrase"],[129,46,127,34],[129,48,127,42],[130,8,128,4],[130,12,128,8],[130,13,128,9,"passphrase"],[130,23,128,19],[130,26,128,22,"passphrase"],[130,36,128,32],[131,6,129,2],[132,4,129,3],[133,6,129,3,"key"],[133,9,129,3],[134,6,129,3,"value"],[134,11,129,3],[134,13,131,2],[134,22,131,2,"getPassphrase"],[134,35,131,15,"getPassphrase"],[134,36,131,15],[134,38,131,38],[135,8,132,4],[135,15,132,11],[135,19,132,15],[135,20,132,16,"passphrase"],[135,30,132,26],[136,6,133,2],[138,6,135,2],[139,0,136,0],[140,0,137,0],[141,4,135,2],[142,6,135,2,"key"],[142,9,135,2],[143,6,135,2,"value"],[143,11,135,2],[143,13,138,2],[143,22,138,2,"validateMnemonic"],[143,38,138,18,"validateMnemonic"],[143,39,138,18],[143,41,138,30],[144,8,139,4],[144,15,139,11,"bip39custom"],[144,26,139,22],[144,27,139,23,"validateMnemonic"],[144,43,139,39],[144,44,139,40],[144,48,139,44],[144,49,139,45,"secret"],[144,55,139,51],[144,56,139,52],[145,6,140,2],[147,6,142,2],[148,0,143,0],[149,0,144,0],[150,0,145,0],[151,0,146,0],[152,0,147,0],[153,0,148,0],[154,4,142,2],[155,6,142,2,"key"],[155,9,142,2],[156,6,142,2,"value"],[156,11,142,2],[157,8,142,2],[157,12,142,2,"_getAddressAsync"],[157,28,142,2],[157,35,142,2,"_asyncToGenerator2"],[157,53,142,2],[157,54,142,2,"default"],[157,61,142,2],[157,63,149,2],[157,76,149,43],[158,10,150,4],[159,10,151,4],[159,14,151,8,"freeAddress"],[159,25,151,19],[159,28,151,22],[159,30,151,24],[160,10,152,4],[160,14,152,8,"c"],[160,15,152,9],[161,10,153,4],[161,15,153,9,"c"],[161,16,153,10],[161,19,153,13],[161,20,153,14],[161,22,153,16,"c"],[161,23,153,17],[161,26,153,20],[161,30,153,24],[161,31,153,25,"gap_limit"],[161,40,153,34],[161,43,153,37],[161,44,153,38],[161,46,153,40,"c"],[161,47,153,41],[161,49,153,43],[161,51,153,45],[162,12,154,6],[162,16,154,10],[162,20,154,14],[162,21,154,15,"next_free_address_index"],[162,44,154,38],[162,47,154,41,"c"],[162,48,154,42],[162,51,154,45],[162,52,154,46],[162,54,154,48],[163,12,155,6],[163,16,155,12,"address"],[163,23,155,19],[163,26,155,22],[163,30,155,26],[163,31,155,27,"_getExternalAddressByIndex"],[163,57,155,53],[163,58,155,54],[163,62,155,58],[163,63,155,59,"next_free_address_index"],[163,86,155,82],[163,89,155,85,"c"],[163,90,155,86],[163,91,155,87],[164,12,156,6],[164,16,156,10],[164,17,156,11,"external_addresses_cache"],[164,41,156,35],[164,42,156,36],[164,46,156,40],[164,47,156,41,"next_free_address_index"],[164,70,156,64],[164,73,156,67,"c"],[164,74,156,68],[164,75,156,69],[164,78,156,72,"address"],[164,85,156,79],[164,86,156,80],[164,87,156,81],[165,12,157,6],[165,16,157,10,"txs"],[165,19,157,13],[165,22,157,16],[165,24,157,18],[166,12,158,6],[166,16,158,10],[167,14,159,8,"txs"],[167,17,159,11],[167,26,159,20,"BlueElectrum"],[167,38,159,32],[167,39,159,33,"getTransactionsByAddress"],[167,63,159,57],[167,64,159,58,"address"],[167,71,159,65],[167,72,159,66],[168,12,160,6],[168,13,160,7],[168,14,160,8],[168,21,160,15,"Err"],[168,24,160,23],[168,26,160,25],[169,14,161,8,"console"],[169,21,161,15],[169,22,161,16,"warn"],[169,26,161,20],[169,27,161,21],[169,68,161,62],[169,70,161,64,"Err"],[169,73,161,67],[169,74,161,68,"message"],[169,81,161,75],[169,82,161,76],[170,12,162,6],[171,12,163,6],[171,16,163,10,"txs"],[171,19,163,13],[171,20,163,14,"length"],[171,26,163,20],[171,31,163,25],[171,32,163,26],[171,34,163,28],[172,14,164,8],[173,14,165,8,"freeAddress"],[173,25,165,19],[173,28,165,22,"address"],[173,35,165,29],[174,14,166,8],[174,18,166,12],[174,19,166,13,"next_free_address_index"],[174,42,166,36],[174,46,166,40,"c"],[174,47,166,41],[174,48,166,42],[174,49,166,43],[175,14,167,8],[176,12,168,6],[177,10,169,4],[178,10,171,4],[178,14,171,8],[178,15,171,9,"freeAddress"],[178,26,171,20],[178,28,171,22],[179,12,172,6],[180,12,173,6,"freeAddress"],[180,23,173,17],[180,26,173,20],[180,30,173,24],[180,31,173,25,"_getExternalAddressByIndex"],[180,57,173,51],[180,58,173,52],[180,62,173,56],[180,63,173,57,"next_free_address_index"],[180,86,173,80],[180,89,173,83,"c"],[180,90,173,84],[180,91,173,85],[180,92,173,86],[180,93,173,87],[181,12,174,6],[181,16,174,10],[181,17,174,11,"next_free_address_index"],[181,40,174,34],[181,44,174,38,"c"],[181,45,174,39],[181,46,174,40],[181,47,174,41],[182,10,175,4],[183,10,176,4],[183,14,176,8],[183,15,176,9,"_address"],[183,23,176,17],[183,26,176,20,"freeAddress"],[183,37,176,31],[184,10,177,4],[184,17,177,11,"freeAddress"],[184,28,177,22],[185,8,178,2],[185,9,178,3],[186,8,178,3],[186,17,149,8,"getAddressAsync"],[186,32,149,23,"getAddressAsync"],[186,33,149,23],[187,10,149,23],[187,17,149,23,"_getAddressAsync"],[187,33,149,23],[187,34,149,23,"apply"],[187,39,149,23],[187,46,149,23,"arguments"],[187,55,149,23],[188,8,149,23],[189,8,149,23],[189,15,149,8,"getAddressAsync"],[189,30,149,23],[190,6,149,23],[191,6,180,2],[192,0,181,0],[193,0,182,0],[194,0,183,0],[195,0,184,0],[196,0,185,0],[197,0,186,0],[198,6,180,2],[199,4,180,2],[200,6,180,2,"key"],[200,9,180,2],[201,6,180,2,"value"],[201,11,180,2],[202,8,180,2],[202,12,180,2,"_getChangeAddressAsync"],[202,34,180,2],[202,41,180,2,"_asyncToGenerator2"],[202,59,180,2],[202,60,180,2,"default"],[202,67,180,2],[202,69,187,2],[202,82,187,49],[203,10,188,4],[204,10,189,4],[204,14,189,8,"freeAddress"],[204,25,189,19],[204,28,189,22],[204,30,189,24],[205,10,190,4],[205,14,190,8,"c"],[205,15,190,9],[206,10,191,4],[206,15,191,9,"c"],[206,16,191,10],[206,19,191,13],[206,20,191,14],[206,22,191,16,"c"],[206,23,191,17],[206,26,191,20],[206,30,191,24],[206,31,191,25,"gap_limit"],[206,40,191,34],[206,43,191,37],[206,44,191,38],[206,46,191,40,"c"],[206,47,191,41],[206,49,191,43],[206,51,191,45],[207,12,192,6],[207,16,192,10],[207,20,192,14],[207,21,192,15,"next_free_change_address_index"],[207,51,192,45],[207,54,192,48,"c"],[207,55,192,49],[207,58,192,52],[207,59,192,53],[207,61,192,55],[208,12,193,6],[208,16,193,12,"address"],[208,23,193,19],[208,26,193,22],[208,30,193,26],[208,31,193,27,"_getInternalAddressByIndex"],[208,57,193,53],[208,58,193,54],[208,62,193,58],[208,63,193,59,"next_free_change_address_index"],[208,93,193,89],[208,96,193,92,"c"],[208,97,193,93],[208,98,193,94],[209,12,194,6],[209,16,194,10],[209,17,194,11,"internal_addresses_cache"],[209,41,194,35],[209,42,194,36],[209,46,194,40],[209,47,194,41,"next_free_change_address_index"],[209,77,194,71],[209,80,194,74,"c"],[209,81,194,75],[209,82,194,76],[209,85,194,79,"address"],[209,92,194,86],[209,93,194,87],[209,94,194,88],[210,12,195,6],[210,16,195,10,"txs"],[210,19,195,13],[210,22,195,16],[210,24,195,18],[211,12,196,6],[211,16,196,10],[212,14,197,8,"txs"],[212,17,197,11],[212,26,197,20,"BlueElectrum"],[212,38,197,32],[212,39,197,33,"getTransactionsByAddress"],[212,63,197,57],[212,64,197,58,"address"],[212,71,197,65],[212,72,197,66],[213,12,198,6],[213,13,198,7],[213,14,198,8],[213,21,198,15,"Err"],[213,24,198,23],[213,26,198,25],[214,14,199,8,"console"],[214,21,199,15],[214,22,199,16,"warn"],[214,26,199,20],[214,27,199,21],[214,68,199,62],[214,70,199,64,"Err"],[214,73,199,67],[214,74,199,68,"message"],[214,81,199,75],[214,82,199,76],[215,12,200,6],[216,12,201,6],[216,16,201,10,"txs"],[216,19,201,13],[216,20,201,14,"length"],[216,26,201,20],[216,31,201,25],[216,32,201,26],[216,34,201,28],[217,14,202,8],[218,14,203,8,"freeAddress"],[218,25,203,19],[218,28,203,22,"address"],[218,35,203,29],[219,14,204,8],[219,18,204,12],[219,19,204,13,"next_free_change_address_index"],[219,49,204,43],[219,53,204,47,"c"],[219,54,204,48],[219,55,204,49],[219,56,204,50],[220,14,205,8],[221,12,206,6],[222,10,207,4],[223,10,209,4],[223,14,209,8],[223,15,209,9,"freeAddress"],[223,26,209,20],[223,28,209,22],[224,12,210,6],[225,12,211,6,"freeAddress"],[225,23,211,17],[225,26,211,20],[225,30,211,24],[225,31,211,25,"_getInternalAddressByIndex"],[225,57,211,51],[225,58,211,52],[225,62,211,56],[225,63,211,57,"next_free_change_address_index"],[225,93,211,87],[225,96,211,90,"c"],[225,97,211,91],[225,98,211,92],[225,99,211,93],[225,100,211,94],[226,12,212,6],[226,16,212,10],[226,17,212,11,"next_free_change_address_index"],[226,47,212,41],[226,51,212,45,"c"],[226,52,212,46],[226,53,212,47],[226,54,212,48],[227,10,213,4],[228,10,214,4],[228,14,214,8],[228,15,214,9,"_address"],[228,23,214,17],[228,26,214,20,"freeAddress"],[228,37,214,31],[229,10,215,4],[229,17,215,11,"freeAddress"],[229,28,215,22],[230,8,216,2],[230,9,216,3],[231,8,216,3],[231,17,187,8,"getChangeAddressAsync"],[231,38,187,29,"getChangeAddressAsync"],[231,39,187,29],[232,10,187,29],[232,17,187,29,"_getChangeAddressAsync"],[232,39,187,29],[232,40,187,29,"apply"],[232,45,187,29],[232,52,187,29,"arguments"],[232,61,187,29],[233,8,187,29],[234,8,187,29],[234,15,187,8,"getChangeAddressAsync"],[234,36,187,29],[235,6,187,29],[236,6,218,2],[237,0,219,0],[238,0,220,0],[239,0,221,0],[240,0,222,0],[241,0,223,0],[242,6,218,2],[243,4,218,2],[244,6,218,2,"key"],[244,9,218,2],[245,6,218,2,"value"],[245,11,218,2],[245,13,224,2],[245,22,224,2,"getAddress"],[245,32,224,12,"getAddress"],[245,33,224,12],[245,35,224,31],[246,8,225,4],[246,15,225,11],[246,19,225,15],[246,20,225,16,"_address"],[246,28,225,24],[247,6,226,2],[248,4,226,3],[249,6,226,3,"key"],[249,9,226,3],[250,6,226,3,"value"],[250,11,226,3],[250,13,228,2],[250,22,228,2,"_getExternalWIFByIndex"],[250,44,228,24,"_getExternalWIFByIndex"],[250,45,228,25,"index"],[250,50,228,38],[250,52,228,56],[251,8,229,4],[251,14,229,10],[251,18,229,14,"Error"],[251,23,229,19],[251,24,229,20],[251,41,229,37],[251,42,229,38],[252,6,230,2],[253,4,230,3],[254,6,230,3,"key"],[254,9,230,3],[255,6,230,3,"value"],[255,11,230,3],[255,13,232,2],[255,22,232,2,"_getInternalWIFByIndex"],[255,44,232,24,"_getInternalWIFByIndex"],[255,45,232,25,"index"],[255,50,232,38],[255,52,232,56],[256,8,233,4],[256,14,233,10],[256,18,233,14,"Error"],[256,23,233,19],[256,24,233,20],[256,41,233,37],[256,42,233,38],[257,6,234,2],[258,4,234,3],[259,6,234,3,"key"],[259,9,234,3],[260,6,234,3,"value"],[260,11,234,3],[260,13,236,2],[260,22,236,2,"_getExternalAddressByIndex"],[260,48,236,28,"_getExternalAddressByIndex"],[260,49,236,29,"index"],[260,54,236,42],[260,56,236,52],[261,8,237,4],[261,14,237,10],[261,18,237,14,"Error"],[261,23,237,19],[261,24,237,20],[261,41,237,37],[261,42,237,38],[262,6,238,2],[263,4,238,3],[264,6,238,3,"key"],[264,9,238,3],[265,6,238,3,"value"],[265,11,238,3],[265,13,240,2],[265,22,240,2,"_getInternalAddressByIndex"],[265,48,240,28,"_getInternalAddressByIndex"],[265,49,240,29,"index"],[265,54,240,42],[265,56,240,52],[266,8,241,4],[266,14,241,10],[266,18,241,14,"Error"],[266,23,241,19],[266,24,241,20],[266,41,241,37],[266,42,241,38],[267,6,242,2],[268,4,242,3],[269,6,242,3,"key"],[269,9,242,3],[270,6,242,3,"value"],[270,11,242,3],[270,13,244,2],[270,22,244,2,"getXpub"],[270,29,244,9,"getXpub"],[270,30,244,9],[270,32,244,20],[271,8,245,4],[271,14,245,10],[271,18,245,14,"Error"],[271,23,245,19],[271,24,245,20],[271,41,245,37],[271,42,245,38],[272,6,246,2],[274,6,248,2],[275,0,249,0],[276,0,250,0],[277,0,251,0],[278,0,252,0],[279,0,253,0],[280,0,254,0],[281,0,255,0],[282,4,248,2],[283,6,248,2,"key"],[283,9,248,2],[284,6,248,2,"value"],[284,11,248,2],[285,8,248,2],[285,12,248,2,"_fetchTransactions"],[285,30,248,2],[285,37,248,2,"_asyncToGenerator2"],[285,55,248,2],[285,56,248,2,"default"],[285,63,248,2],[285,65,256,2],[285,78,256,43],[286,10,257,4],[286,16,257,10],[286,20,257,14,"Error"],[286,25,257,19],[286,26,257,20],[286,43,257,37],[286,44,257,38],[287,8,258,2],[287,9,258,3],[288,8,258,3],[288,17,256,8,"fetchTransactions"],[288,34,256,25,"fetchTransactions"],[288,35,256,25],[289,10,256,25],[289,17,256,25,"_fetchTransactions"],[289,35,256,25],[289,36,256,25,"apply"],[289,41,256,25],[289,48,256,25,"arguments"],[289,57,256,25],[290,8,256,25],[291,8,256,25],[291,15,256,8,"fetchTransactions"],[291,32,256,25],[292,6,256,25],[293,6,260,2],[294,0,261,0],[295,0,262,0],[296,0,263,0],[297,0,264,0],[298,0,265,0],[299,0,266,0],[300,6,260,2],[301,4,260,2],[302,6,260,2,"key"],[302,9,260,2],[303,6,260,2,"value"],[303,11,260,2],[303,13,267,2],[303,22,267,2,"_getWifForAddress"],[303,39,267,19,"_getWifForAddress"],[303,40,267,20,"address"],[303,47,267,35],[303,49,267,45],[304,8,268,4],[304,12,268,8],[304,16,268,12],[304,17,268,13,"_address_to_wif_cache"],[304,38,268,34],[304,39,268,35,"address"],[304,46,268,42],[304,47,268,43],[304,49,268,45],[304,56,268,52],[304,60,268,56],[304,61,268,57,"_address_to_wif_cache"],[304,82,268,78],[304,83,268,79,"address"],[304,90,268,86],[304,91,268,87],[304,92,268,88],[304,93,268,89],[306,8,270,4],[307,8,271,4],[307,13,271,9],[307,17,271,15,"indexStr"],[307,25,271,23],[307,29,271,27,"Object"],[307,35,271,33],[307,36,271,34,"keys"],[307,40,271,38],[307,41,271,39],[307,45,271,43],[307,46,271,44,"internal_addresses_cache"],[307,70,271,68],[307,71,271,69],[307,73,271,71],[308,10,272,6],[308,14,272,12,"index"],[308,19,272,17],[308,22,272,20,"parseInt"],[308,30,272,28],[308,31,272,29,"indexStr"],[308,39,272,37],[308,41,272,39],[308,43,272,41],[308,44,272,42],[309,10,273,6],[309,14,273,10],[309,18,273,14],[309,19,273,15,"_getInternalAddressByIndex"],[309,45,273,41],[309,46,273,42,"index"],[309,51,273,47],[309,52,273,48],[309,57,273,53,"address"],[309,64,273,60],[309,66,273,62],[310,12,274,8],[310,19,274,16],[310,23,274,20],[310,24,274,21,"_address_to_wif_cache"],[310,45,274,42],[310,46,274,43,"address"],[310,53,274,50],[310,54,274,51],[310,57,274,62],[310,61,274,66],[310,62,274,67,"_getInternalWIFByIndex"],[310,84,274,89],[310,85,274,90,"index"],[310,90,274,95],[310,91,274,96],[311,10,275,6],[312,8,276,4],[313,8,278,4],[313,13,278,9],[313,17,278,15,"indexStr"],[313,26,278,23],[313,30,278,27,"Object"],[313,36,278,33],[313,37,278,34,"keys"],[313,41,278,38],[313,42,278,39],[313,46,278,43],[313,47,278,44,"external_addresses_cache"],[313,71,278,68],[313,72,278,69],[313,74,278,71],[314,10,279,6],[314,14,279,12,"index"],[314,20,279,17],[314,23,279,20,"parseInt"],[314,31,279,28],[314,32,279,29,"indexStr"],[314,41,279,37],[314,43,279,39],[314,45,279,41],[314,46,279,42],[315,10,280,6],[315,14,280,10],[315,18,280,14],[315,19,280,15,"_getExternalAddressByIndex"],[315,45,280,41],[315,46,280,42,"index"],[315,52,280,47],[315,53,280,48],[315,58,280,53,"address"],[315,65,280,60],[315,67,280,62],[316,12,281,8],[316,19,281,16],[316,23,281,20],[316,24,281,21,"_address_to_wif_cache"],[316,45,281,42],[316,46,281,43,"address"],[316,53,281,50],[316,54,281,51],[316,57,281,62],[316,61,281,66],[316,62,281,67,"_getExternalWIFByIndex"],[316,84,281,89],[316,85,281,90,"index"],[316,91,281,95],[316,92,281,96],[317,10,282,6],[318,8,283,4],[320,8,285,4],[321,8,286,4],[321,13,286,9],[321,17,286,13,"c"],[321,18,286,14],[321,21,286,17],[321,22,286,18],[321,24,286,20,"c"],[321,25,286,21],[321,29,286,25],[321,33,286,29],[321,34,286,30,"next_free_change_address_index"],[321,64,286,60],[321,67,286,63],[321,71,286,67],[321,72,286,68,"gap_limit"],[321,81,286,77],[321,83,286,79,"c"],[321,84,286,80],[321,86,286,82],[321,88,286,84],[322,10,287,6],[322,14,287,12,"possibleAddress"],[322,29,287,27],[322,32,287,30],[322,36,287,34],[322,37,287,35,"_getInternalAddressByIndex"],[322,63,287,61],[322,64,287,62,"c"],[322,65,287,63],[322,66,287,64],[323,10,288,6],[323,14,288,10,"possibleAddress"],[323,29,288,25],[323,34,288,30,"address"],[323,41,288,37],[323,43,288,39],[324,12,289,8],[324,19,289,16],[324,23,289,20],[324,24,289,21,"_address_to_wif_cache"],[324,45,289,42],[324,46,289,43,"address"],[324,53,289,50],[324,54,289,51],[324,57,289,62],[324,61,289,66],[324,62,289,67,"_getInternalWIFByIndex"],[324,84,289,89],[324,85,289,90,"c"],[324,86,289,91],[324,87,289,92],[325,10,290,6],[326,8,291,4],[327,8,293,4],[327,13,293,9],[327,17,293,13,"c"],[327,19,293,14],[327,22,293,17],[327,23,293,18],[327,25,293,20,"c"],[327,27,293,21],[327,31,293,25],[327,35,293,29],[327,36,293,30,"next_free_address_index"],[327,59,293,53],[327,62,293,56],[327,66,293,60],[327,67,293,61,"gap_limit"],[327,76,293,70],[327,78,293,72,"c"],[327,80,293,73],[327,82,293,75],[327,84,293,77],[328,10,294,6],[328,14,294,12,"possibleAddress"],[328,30,294,27],[328,33,294,30],[328,37,294,34],[328,38,294,35,"_getExternalAddressByIndex"],[328,64,294,61],[328,65,294,62,"c"],[328,67,294,63],[328,68,294,64],[329,10,295,6],[329,14,295,10,"possibleAddress"],[329,30,295,25],[329,35,295,30,"address"],[329,42,295,37],[329,44,295,39],[330,12,296,8],[330,19,296,16],[330,23,296,20],[330,24,296,21,"_address_to_wif_cache"],[330,45,296,42],[330,46,296,43,"address"],[330,53,296,50],[330,54,296,51],[330,57,296,62],[330,61,296,66],[330,62,296,67,"_getExternalWIFByIndex"],[330,84,296,89],[330,85,296,90,"c"],[330,87,296,91],[330,88,296,92],[331,10,297,6],[332,8,298,4],[333,8,300,4],[333,14,300,10],[333,18,300,14,"Error"],[333,23,300,19],[333,24,300,20],[333,49,300,45],[333,52,300,48,"address"],[333,59,300,55],[333,60,300,56],[334,6,301,2],[335,4,301,3],[336,6,301,3,"key"],[336,9,301,3],[337,6,301,3,"value"],[337,11,301,3],[338,8,301,3],[338,12,301,3,"_fetchBalance"],[338,25,301,3],[338,32,301,3,"_asyncToGenerator2"],[338,50,301,3],[338,51,301,3,"default"],[338,58,301,3],[338,60,303,2],[338,73,303,38],[339,10,304,4],[339,16,304,10],[339,20,304,14,"Error"],[339,25,304,19],[339,26,304,20],[339,43,304,37],[339,44,304,38],[340,8,305,2],[340,9,305,3],[341,8,305,3],[341,17,303,8,"fetchBalance"],[341,29,303,20,"fetchBalance"],[341,30,303,20],[342,10,303,20],[342,17,303,20,"_fetchBalance"],[342,30,303,20],[342,31,303,20,"apply"],[342,36,303,20],[342,43,303,20,"arguments"],[342,52,303,20],[343,8,303,20],[344,8,303,20],[344,15,303,8,"fetchBalance"],[344,27,303,20],[345,6,303,20],[346,6,307,2],[347,0,308,0],[348,0,309,0],[349,4,307,2],[350,6,307,2,"key"],[350,9,307,2],[351,6,307,2,"value"],[351,11,307,2],[352,8,307,2],[352,12,307,2,"_fetchUtxo"],[352,22,307,2],[352,29,307,2,"_asyncToGenerator2"],[352,47,307,2],[352,48,307,2,"default"],[352,55,307,2],[352,57,310,2],[352,70,310,35],[353,10,311,4],[353,16,311,10],[353,20,311,14,"Error"],[353,25,311,19],[353,26,311,20],[353,43,311,37],[353,44,311,38],[354,8,312,2],[354,9,312,3],[355,8,312,3],[355,17,310,8,"fetchUtxo"],[355,26,310,17,"fetchUtxo"],[355,27,310,17],[356,10,310,17],[356,17,310,17,"_fetchUtxo"],[356,27,310,17],[356,28,310,17,"apply"],[356,33,310,17],[356,40,310,17,"arguments"],[356,49,310,17],[357,8,310,17],[358,8,310,17],[358,15,310,8,"fetchUtxo"],[358,24,310,17],[359,6,310,17],[360,4,310,17],[361,6,310,17,"key"],[361,9,310,17],[362,6,310,17,"value"],[362,11,310,17],[362,13,314,2],[362,22,314,2,"_getDerivationPathByAddress"],[362,49,314,29,"_getDerivationPathByAddress"],[362,50,314,30,"address"],[362,57,314,45],[362,59,314,63],[363,8,315,4],[363,14,315,10],[363,18,315,14,"Error"],[363,23,315,19],[363,24,315,20],[363,41,315,37],[363,42,315,38],[364,6,316,2],[365,4,316,3],[366,6,316,3,"key"],[366,9,316,3],[367,6,316,3,"value"],[367,11,316,3],[367,13,318,2],[367,22,318,2,"_getNodePubkeyByIndex"],[367,43,318,23,"_getNodePubkeyByIndex"],[367,44,318,24,"node"],[367,48,318,36],[367,50,318,38,"index"],[367,55,318,51],[367,57,318,73],[368,8,319,4],[368,14,319,10],[368,18,319,14,"Error"],[368,23,319,19],[368,24,319,20],[368,41,319,37],[368,42,319,38],[369,6,320,2],[371,6,322,2],[372,0,323,0],[373,0,324,0],[374,4,322,2],[375,6,322,2,"key"],[375,9,322,2],[376,6,322,2,"value"],[376,11,322,2],[376,13,325,2],[376,22,325,2,"getDerivationPath"],[376,39,325,19,"getDerivationPath"],[376,40,325,19],[376,42,325,22],[377,8,326,4],[377,15,326,11],[377,19,326,15],[377,20,326,16,"_derivationPath"],[377,35,326,31],[378,6,327,2],[380,6,329,2],[381,0,330,0],[382,0,331,0],[383,0,332,0],[384,0,333,0],[385,4,329,2],[386,6,329,2,"key"],[386,9,329,2],[387,6,329,2,"value"],[387,11,329,2],[387,13,334,2],[387,22,334,2,"setDerivationPath"],[387,39,334,19,"setDerivationPath"],[387,40,334,20,"path"],[387,44,334,32],[387,46,334,34],[388,8,335,4],[388,12,335,8],[388,13,335,9,"_derivationPath"],[388,28,335,24],[388,31,335,27,"path"],[388,35,335,31],[389,6,336,2],[390,4,336,3],[391,2,336,3],[391,4,16,38,"LegacyWallet"],[391,35,16,38],[391,36,16,38,"LegacyWallet"],[391,67,16,50],[392,2,16,13,"AbstractHDWallet"],[392,18,16,29],[392,19,17,18,"type"],[392,23,17,22],[392,26,17,25],[392,36,17,35],[393,2,16,13,"AbstractHDWallet"],[393,18,16,29],[393,19,18,18,"typeReadable"],[393,31,18,30],[393,34,18,33],[393,44,18,43],[394,0,18,43],[394,3]],"functionMap":{"names":["<global>","AbstractHDWallet","AbstractHDWallet#constructor","AbstractHDWallet#getNextFreeAddressIndex","AbstractHDWallet#getNextFreeChangeAddressIndex","AbstractHDWallet#prepareForSerialization","AbstractHDWallet#generate","AbstractHDWallet#allowSend","AbstractHDWallet#getTransactions","AbstractHDWallet#_getSeed","AbstractHDWallet#setSecret","words.map$argument_0","wordlist.reduce$argument_0","secret.split.map$argument_0","AbstractHDWallet#setPassphrase","AbstractHDWallet#getPassphrase","AbstractHDWallet#validateMnemonic","AbstractHDWallet#getAddressAsync","AbstractHDWallet#getChangeAddressAsync","AbstractHDWallet#getAddress","AbstractHDWallet#_getExternalWIFByIndex","AbstractHDWallet#_getInternalWIFByIndex","AbstractHDWallet#_getExternalAddressByIndex","AbstractHDWallet#_getInternalAddressByIndex","AbstractHDWallet#getXpub","AbstractHDWallet#fetchTransactions","AbstractHDWallet#_getWifForAddress","AbstractHDWallet#fetchBalance","AbstractHDWallet#fetchUtxo","AbstractHDWallet#_getDerivationPathByAddress","AbstractHDWallet#_getNodePubkeyByIndex","AbstractHDWallet#getDerivationPath","AbstractHDWallet#setDerivationPath"],"mappings":"AAA;OCe;ECoB;GDY;EEE;GFE;EGE;GHE;EIE;GJI;EKE;GLE;EME;GNE;EOE;GPE;EQK;GRI;ESE;gCCa,kCD;sCEW;KFQ;WGI,mCH;GTI;EaE;GbE;EcE;GdE;EeK;GfE;EgBS;GhB6B;EiBS;GjB6B;EkBQ;GlBE;EmBE;GnBE;EoBE;GpBE;EqBE;GrBE;EsBE;GtBE;EuBE;GvBE;EwBU;GxBE;EyBS;GzBkC;E0BE;G1BE;E2BK;G3BE;E4BE;G5BE;E6BE;G7BE;E8BK;G9BE;E+BO;G/BE;CDC"}},"type":"js/module"}]}