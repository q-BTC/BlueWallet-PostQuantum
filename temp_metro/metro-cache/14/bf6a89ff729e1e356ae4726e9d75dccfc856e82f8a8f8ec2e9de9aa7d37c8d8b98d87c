{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":124,"column":38,"index":5629}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":124,"column":38,"index":5629}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":17,"index":1016},"end":{"line":23,"column":36,"index":1035}}],"key":"GlkDztMSsNRYmp31iO+V/Albin8="}},{"name":"./Listeners","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":20,"index":975},"end":{"line":22,"column":42,"index":997}}],"key":"Lyc5LnFOVXez1m1NeKX75hk2t24="}},{"name":"./assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":17,"index":1054},"end":{"line":24,"column":36,"index":1073}},{"start":{"line":24,"column":17,"index":1054},"end":{"line":24,"column":36,"index":1073}}],"key":"PRSWv9Op+8jXiipitv94+qE/Tqo="}},{"name":"./indirect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":19,"index":932},"end":{"line":21,"column":40,"index":953}}],"key":"cYlSegnhnQg7iiD9MQpYQJJgaGk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2022 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Collection = exports.COLLECTION_TYPE_HELPERS = exports.COLLECTION_ACCESSOR = void 0;\n  /**\n   * Collection accessor identifier.\n   * @internal\n   */\n  exports.COLLECTION_ACCESSOR = Symbol(\"Collection#accessor\");\n  /**\n   * Collection type helpers identifier.\n   * @internal\n   */\n  exports.COLLECTION_TYPE_HELPERS = Symbol(\"Collection#typeHelpers\");\n  /**\n   * Abstract base class containing methods shared by Realm {@link List}, {@link Dictionary}, {@link Results} and {@link RealmSet}.\n   *\n   * A {@link Collection} always reflect the current state of the Realm. The one exception to this is\n   * when using `for...in` or `for...of` enumeration, which will always enumerate over the\n   * objects which matched the query when the enumeration is begun, even if some of them are\n   * deleted or modified to be excluded by the filter during the enumeration.\n   * @since 0.11.0\n   */\n  var Collection = /*#__PURE__*/function () {\n    /**\n     * Accessor for getting and setting items in the binding collection.\n     * @internal\n     */\n\n    /**\n     * Helper for converting the values to and from their binding representations.\n     * @internal\n     */\n\n    /** @internal */\n\n    /** @internal */\n    function Collection(accessor, typeHelpers, addListener) {\n      _classCallCheck(this, Collection);\n      if (arguments.length === 0) {\n        throw new (_$$_REQUIRE(_dependencyMap[2], \"./errors\").IllegalConstructorError)(\"Collection\");\n      }\n      this.listeners = new (_$$_REQUIRE(_dependencyMap[3], \"./Listeners\").Listeners)({\n        add: addListener,\n        remove: function remove(token) {\n          token.unregister();\n        }\n      });\n      // Make the internal properties non-enumerable\n      Object.defineProperty(this, \"listeners\", {\n        enumerable: false,\n        configurable: false,\n        writable: false\n      });\n      this[exports.COLLECTION_ACCESSOR] = accessor;\n      this[exports.COLLECTION_TYPE_HELPERS] = typeHelpers;\n    }\n    /**\n     * Add a listener `callback` which will be called when a **live** collection instance changes.\n     * @param callback - A function to be called when changes occur.\n     * @param keyPaths - Indicates a lower bound on the changes relevant for the listener. This is a lower bound, since if multiple listeners are added (each with their own `keyPaths`) the union of these key-paths will determine the changes that are considered relevant for all listeners registered on the collection. In other words: A listener might fire more than the key-paths specify, if other listeners with different key-paths are present.\n     * @note `deletions` and `oldModifications` report the indices in the collection before the change happened,\n     * while `insertions` and `newModifications` report the indices into the new version of the collection.\n     * @throws A {@link TypeAssertionError} if `callback` is not a function.\n     * @note\n     * Adding the listener is an asynchronous operation, so the callback is invoked the first time to notify the caller when the listener has been added.\n     * Thus, when the callback is invoked the first time it will contain empty arrays for each property in the `changes` object.\n     * @example\n     * wines.addListener((collection, changes) => {\n     *  // collection === wines\n     *  console.log(`${changes.insertions.length} insertions`);\n     *  console.log(`${changes.oldModifications.length} oldModifications`);\n     *  console.log(`${changes.newModifications.length} newModifications`);\n     *  console.log(`${changes.deletions.length} deletions`);\n     *  console.log(`new size of collection: ${collection.length}`);\n     * });\n     * @example\n     * wines.addListener((collection, changes) => {\n     *  console.log(\"A wine's brand might have changed\");\n     * }, [\"brand\"]);\n     */\n    return _createClass(Collection, [{\n      key: \"addListener\",\n      value: function addListener(callback, keyPaths) {\n        _$$_REQUIRE(_dependencyMap[4], \"./assert\").assert.function(callback, \"callback\");\n        this.listeners.add(callback, typeof keyPaths === \"string\" ? [keyPaths] : keyPaths);\n      }\n      /**\n       * Remove the listener `callback` from the collection instance.\n       * @param callback - Callback function that was previously\n       *   added as a listener through the {@link Collection.addListener} method.\n       * @throws a {@link TypeAssertionError} If `callback` is not a function.\n       */\n    }, {\n      key: \"removeListener\",\n      value: function removeListener(callback) {\n        _$$_REQUIRE(_dependencyMap[4], \"./assert\").assert.function(callback, \"callback\");\n        this.listeners.remove(callback);\n      }\n      /**\n       * Remove all `callback` listeners from the collection instance.\n       */\n    }, {\n      key: \"removeAllListeners\",\n      value: function removeAllListeners() {\n        this.listeners.removeAll();\n      }\n    }]);\n  }();\n  exports.Collection = Collection;\n  (0, _$$_REQUIRE(_dependencyMap[5], \"./indirect\").injectIndirect)(\"Collection\", Collection);\n});","lineCount":134,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,18,0],[21,6,18,0,"_classCallCheck"],[21,21,18,0],[21,24,18,0,"_$$_REQUIRE"],[21,35,18,0],[21,36,18,0,"_dependencyMap"],[21,50,18,0],[22,2,18,0],[22,6,18,0,"_createClass"],[22,18,18,0],[22,21,18,0,"_$$_REQUIRE"],[22,32,18,0],[22,33,18,0,"_dependencyMap"],[22,47,18,0],[23,2,19,0,"Object"],[23,8,19,6],[23,9,19,7,"defineProperty"],[23,23,19,21],[23,24,19,22,"exports"],[23,31,19,29],[23,33,19,31],[23,45,19,43],[23,47,19,45],[24,4,19,47,"value"],[24,9,19,52],[24,11,19,54],[25,2,19,59],[25,3,19,60],[25,4,19,61],[26,2,20,0,"exports"],[26,9,20,7],[26,10,20,8,"Collection"],[26,20,20,18],[26,23,20,21,"exports"],[26,30,20,28],[26,31,20,29,"COLLECTION_TYPE_HELPERS"],[26,54,20,52],[26,57,20,55,"exports"],[26,64,20,62],[26,65,20,63,"COLLECTION_ACCESSOR"],[26,84,20,82],[26,87,20,85],[26,92,20,90],[26,93,20,91],[27,2,25,0],[28,0,26,0],[29,0,27,0],[30,0,28,0],[31,2,29,0,"exports"],[31,9,29,7],[31,10,29,8,"COLLECTION_ACCESSOR"],[31,29,29,27],[31,32,29,30,"Symbol"],[31,38,29,36],[31,39,29,37],[31,60,29,58],[31,61,29,59],[32,2,30,0],[33,0,31,0],[34,0,32,0],[35,0,33,0],[36,2,34,0,"exports"],[36,9,34,7],[36,10,34,8,"COLLECTION_TYPE_HELPERS"],[36,33,34,31],[36,36,34,34,"Symbol"],[36,42,34,40],[36,43,34,41],[36,67,34,65],[36,68,34,66],[37,2,35,0],[38,0,36,0],[39,0,37,0],[40,0,38,0],[41,0,39,0],[42,0,40,0],[43,0,41,0],[44,0,42,0],[45,0,43,0],[46,2,35,0],[46,6,44,6,"Collection"],[46,16,44,16],[47,4,45,4],[48,0,46,0],[49,0,47,0],[50,0,48,0],[52,4,50,4],[53,0,51,0],[54,0,52,0],[55,0,53,0],[57,4,55,4],[59,4,57,4],[60,4,58,4],[60,13,58,4,"Collection"],[60,24,58,16,"accessor"],[60,32,58,24],[60,34,58,26,"typeHelpers"],[60,45,58,37],[60,47,58,39,"addListener"],[60,58,58,50],[60,60,58,52],[61,6,58,52,"_classCallCheck"],[61,21,58,52],[61,28,58,52,"Collection"],[61,38,58,52],[62,6,59,8],[62,10,59,12,"arguments"],[62,19,59,21],[62,20,59,22,"length"],[62,26,59,28],[62,31,59,33],[62,32,59,34],[62,34,59,36],[63,8,60,12],[63,14,60,18],[63,19,60,22,"_$$_REQUIRE"],[63,30,60,22],[63,31,60,22,"_dependencyMap"],[63,45,60,22],[63,62,60,31,"IllegalConstructorError"],[63,85,60,54],[63,87,60,55],[63,99,60,67],[63,100,60,68],[64,6,61,8],[65,6,62,8],[65,10,62,12],[65,11,62,13,"listeners"],[65,20,62,22],[65,23,62,25],[65,28,62,29,"_$$_REQUIRE"],[65,39,62,29],[65,40,62,29,"_dependencyMap"],[65,54,62,29],[65,74,62,41,"Listeners"],[65,83,62,50],[65,85,62,51],[66,8,63,12,"add"],[66,11,63,15],[66,13,63,17,"addListener"],[66,24,63,28],[67,8,64,12,"remove"],[67,14,64,18],[67,25,64,12,"remove"],[67,31,64,18,"remove"],[67,32,64,19,"token"],[67,37,64,24],[67,39,64,26],[68,10,65,16,"token"],[68,15,65,21],[68,16,65,22,"unregister"],[68,26,65,32],[68,27,65,33],[68,28,65,34],[69,8,66,12],[70,6,67,8],[70,7,67,9],[70,8,67,10],[71,6,68,8],[72,6,69,8,"Object"],[72,12,69,14],[72,13,69,15,"defineProperty"],[72,27,69,29],[72,28,69,30],[72,32,69,34],[72,34,69,36],[72,45,69,47],[72,47,69,49],[73,8,70,12,"enumerable"],[73,18,70,22],[73,20,70,24],[73,25,70,29],[74,8,71,12,"configurable"],[74,20,71,24],[74,22,71,26],[74,27,71,31],[75,8,72,12,"writable"],[75,16,72,20],[75,18,72,22],[76,6,73,8],[76,7,73,9],[76,8,73,10],[77,6,74,8],[77,10,74,12],[77,11,74,13,"exports"],[77,18,74,20],[77,19,74,21,"COLLECTION_ACCESSOR"],[77,38,74,40],[77,39,74,41],[77,42,74,44,"accessor"],[77,50,74,52],[78,6,75,8],[78,10,75,12],[78,11,75,13,"exports"],[78,18,75,20],[78,19,75,21,"COLLECTION_TYPE_HELPERS"],[78,42,75,44],[78,43,75,45],[78,46,75,48,"typeHelpers"],[78,57,75,59],[79,4,76,4],[80,4,77,4],[81,0,78,0],[82,0,79,0],[83,0,80,0],[84,0,81,0],[85,0,82,0],[86,0,83,0],[87,0,84,0],[88,0,85,0],[89,0,86,0],[90,0,87,0],[91,0,88,0],[92,0,89,0],[93,0,90,0],[94,0,91,0],[95,0,92,0],[96,0,93,0],[97,0,94,0],[98,0,95,0],[99,0,96,0],[100,0,97,0],[101,0,98,0],[102,0,99,0],[103,0,100,0],[104,4,77,4],[104,11,77,4,"_createClass"],[104,23,77,4],[104,24,77,4,"Collection"],[104,34,77,4],[105,6,77,4,"key"],[105,9,77,4],[106,6,77,4,"value"],[106,11,77,4],[106,13,101,4],[106,22,101,4,"addListener"],[106,33,101,15,"addListener"],[106,34,101,16,"callback"],[106,42,101,24],[106,44,101,26,"keyPaths"],[106,52,101,34],[106,54,101,36],[107,8,102,8,"_$$_REQUIRE"],[107,19,102,8],[107,20,102,8,"_dependencyMap"],[107,34,102,8],[107,51,102,17,"assert"],[107,57,102,23],[107,58,102,24,"function"],[107,66,102,32],[107,67,102,33,"callback"],[107,75,102,41],[107,77,102,43],[107,87,102,53],[107,88,102,54],[108,8,103,8],[108,12,103,12],[108,13,103,13,"listeners"],[108,22,103,22],[108,23,103,23,"add"],[108,26,103,26],[108,27,103,27,"callback"],[108,35,103,35],[108,37,103,37],[108,44,103,44,"keyPaths"],[108,52,103,52],[108,57,103,57],[108,65,103,65],[108,68,103,68],[108,69,103,69,"keyPaths"],[108,77,103,77],[108,78,103,78],[108,81,103,81,"keyPaths"],[108,89,103,89],[108,90,103,90],[109,6,104,4],[110,6,105,4],[111,0,106,0],[112,0,107,0],[113,0,108,0],[114,0,109,0],[115,0,110,0],[116,4,105,4],[117,6,105,4,"key"],[117,9,105,4],[118,6,105,4,"value"],[118,11,105,4],[118,13,111,4],[118,22,111,4,"removeListener"],[118,36,111,18,"removeListener"],[118,37,111,19,"callback"],[118,45,111,27],[118,47,111,29],[119,8,112,8,"_$$_REQUIRE"],[119,19,112,8],[119,20,112,8,"_dependencyMap"],[119,34,112,8],[119,51,112,17,"assert"],[119,57,112,23],[119,58,112,24,"function"],[119,66,112,32],[119,67,112,33,"callback"],[119,75,112,41],[119,77,112,43],[119,87,112,53],[119,88,112,54],[120,8,113,8],[120,12,113,12],[120,13,113,13,"listeners"],[120,22,113,22],[120,23,113,23,"remove"],[120,29,113,29],[120,30,113,30,"callback"],[120,38,113,38],[120,39,113,39],[121,6,114,4],[122,6,115,4],[123,0,116,0],[124,0,117,0],[125,4,115,4],[126,6,115,4,"key"],[126,9,115,4],[127,6,115,4,"value"],[127,11,115,4],[127,13,118,4],[127,22,118,4,"removeAllListeners"],[127,40,118,22,"removeAllListeners"],[127,41,118,22],[127,43,118,25],[128,8,119,8],[128,12,119,12],[128,13,119,13,"listeners"],[128,22,119,22],[128,23,119,23,"removeAll"],[128,32,119,32],[128,33,119,33],[128,34,119,34],[129,6,120,4],[130,4,120,5],[131,2,120,5],[132,2,122,0,"exports"],[132,9,122,7],[132,10,122,8,"Collection"],[132,20,122,18],[132,23,122,21,"Collection"],[132,33,122,31],[133,2,123,0],[133,3,123,1],[133,4,123,2],[133,6,123,4,"_$$_REQUIRE"],[133,17,123,4],[133,18,123,4,"_dependencyMap"],[133,32,123,4],[133,51,123,15,"injectIndirect"],[133,65,123,29],[133,67,123,31],[133,79,123,43],[133,81,123,45,"Collection"],[133,91,123,55],[133,92,123,56],[134,0,123,57],[134,3]],"functionMap":{"names":["<global>","Collection","constructor","Listeners_1.Listeners$argument_0.remove","addListener","removeListener","removeAllListeners"],"mappings":"AAA;AC2C;ICc;YCM;aDE;KDU;IGyB;KHG;IIO;KJG;IKI;KLE;CDC"}},"type":"js/module"}]}