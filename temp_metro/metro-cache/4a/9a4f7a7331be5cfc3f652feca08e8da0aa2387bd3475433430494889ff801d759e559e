{"dependencies":[{"name":"brorand","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":14,"index":41},"end":{"line":2,"column":32,"index":59}}],"key":"S4gmoagXR7Xlhdx6vMizYk5L4Sc="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}},{"start":{"line":1,"column":9,"index":9},"end":{"line":1,"column":25,"index":25}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function MillerRabin(rand) {\n    this.rand = rand || new (_$$_REQUIRE(_dependencyMap[0], \"brorand\").Rand)();\n  }\n  module.exports = MillerRabin;\n  MillerRabin.create = function create(rand) {\n    return new MillerRabin(rand);\n  };\n  MillerRabin.prototype._randbelow = function _randbelow(n) {\n    var len = n.bitLength();\n    var min_bytes = Math.ceil(len / 8);\n\n    // Generage random bytes until a number less than n is found.\n    // This ensures that 0..n-1 have an equal probability of being selected.\n    do var a = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(this.rand.generate(min_bytes)); while (a.cmp(n) >= 0);\n    return a;\n  };\n  MillerRabin.prototype._randrange = function _randrange(start, stop) {\n    // Generate a random number greater than or equal to start and less than stop.\n    var size = stop.sub(start);\n    return start.add(this._randbelow(size));\n  };\n  MillerRabin.prototype.test = function test(n, k, cb) {\n    var len = n.bitLength();\n    var red = _$$_REQUIRE(_dependencyMap[1], \"bn.js\").mont(n);\n    var rone = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(1).toRed(red);\n    if (!k) k = Math.max(1, len / 48 | 0);\n\n    // Find d and s, (n - 1) = (2 ^ s) * d;\n    var n1 = n.subn(1);\n    for (var s = 0; !n1.testn(s); s++) {}\n    var d = n.shrn(s);\n    var rn1 = n1.toRed(red);\n    var prime = true;\n    for (; k > 0; k--) {\n      var a = this._randrange(new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(2), n1);\n      if (cb) cb(a);\n      var x = a.toRed(red).redPow(d);\n      if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;\n      for (var i = 1; i < s; i++) {\n        x = x.redSqr();\n        if (x.cmp(rone) === 0) return false;\n        if (x.cmp(rn1) === 0) break;\n      }\n      if (i === s) return false;\n    }\n    return prime;\n  };\n  MillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n    var len = n.bitLength();\n    var red = _$$_REQUIRE(_dependencyMap[1], \"bn.js\").mont(n);\n    var rone = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(1).toRed(red);\n    if (!k) k = Math.max(1, len / 48 | 0);\n\n    // Find d and s, (n - 1) = (2 ^ s) * d;\n    var n1 = n.subn(1);\n    for (var s = 0; !n1.testn(s); s++) {}\n    var d = n.shrn(s);\n    var rn1 = n1.toRed(red);\n    for (; k > 0; k--) {\n      var a = this._randrange(new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(2), n1);\n      var g = n.gcd(a);\n      if (g.cmpn(1) !== 0) return g;\n      var x = a.toRed(red).redPow(d);\n      if (x.cmp(rone) === 0 || x.cmp(rn1) === 0) continue;\n      for (var i = 1; i < s; i++) {\n        x = x.redSqr();\n        if (x.cmp(rone) === 0) return x.fromRed().subn(1).gcd(n);\n        if (x.cmp(rn1) === 0) break;\n      }\n      if (i === s) {\n        x = x.redSqr();\n        return x.fromRed().subn(1).gcd(n);\n      }\n    }\n    return false;\n  };\n});","lineCount":78,"map":[[2,2,4,0],[2,11,4,9,"MillerRabin"],[2,22,4,20,"MillerRabin"],[2,23,4,21,"rand"],[2,27,4,25],[2,29,4,27],[3,4,5,2],[3,8,5,6],[3,9,5,7,"rand"],[3,13,5,11],[3,16,5,14,"rand"],[3,20,5,18],[3,24,5,22],[3,29,5,26,"_$$_REQUIRE"],[3,40,5,26],[3,41,5,26,"_dependencyMap"],[3,55,5,26],[3,71,5,34,"Rand"],[3,75,5,38],[3,77,5,39],[3,78,5,40],[4,2,6,0],[5,2,7,0,"module"],[5,8,7,6],[5,9,7,7,"exports"],[5,16,7,14],[5,19,7,17,"MillerRabin"],[5,30,7,28],[6,2,9,0,"MillerRabin"],[6,13,9,11],[6,14,9,12,"create"],[6,20,9,18],[6,23,9,21],[6,32,9,30,"create"],[6,38,9,36,"create"],[6,39,9,37,"rand"],[6,43,9,41],[6,45,9,43],[7,4,10,2],[7,11,10,9],[7,15,10,13,"MillerRabin"],[7,26,10,24],[7,27,10,25,"rand"],[7,31,10,29],[7,32,10,30],[8,2,11,0],[8,3,11,1],[9,2,13,0,"MillerRabin"],[9,13,13,11],[9,14,13,12,"prototype"],[9,23,13,21],[9,24,13,22,"_randbelow"],[9,34,13,32],[9,37,13,35],[9,46,13,44,"_randbelow"],[9,56,13,54,"_randbelow"],[9,57,13,55,"n"],[9,58,13,56],[9,60,13,58],[10,4,14,2],[10,8,14,6,"len"],[10,11,14,9],[10,14,14,12,"n"],[10,15,14,13],[10,16,14,14,"bitLength"],[10,25,14,23],[10,26,14,24],[10,27,14,25],[11,4,15,2],[11,8,15,6,"min_bytes"],[11,17,15,15],[11,20,15,18,"Math"],[11,24,15,22],[11,25,15,23,"ceil"],[11,29,15,27],[11,30,15,28,"len"],[11,33,15,31],[11,36,15,34],[11,37,15,35],[11,38,15,36],[13,4,17,2],[14,4,18,2],[15,4,19,2],[15,7,20,4],[15,11,20,8,"a"],[15,12,20,9],[15,15,20,12],[15,20,20,12,"_$$_REQUIRE"],[15,31,20,12],[15,32,20,12,"_dependencyMap"],[15,46,20,12],[15,61,20,19],[15,65,20,23],[15,66,20,24,"rand"],[15,70,20,28],[15,71,20,29,"generate"],[15,79,20,37],[15,80,20,38,"min_bytes"],[15,89,20,47],[15,90,20,48],[15,91,20,49],[15,92,20,50],[15,100,21,9,"a"],[15,101,21,10],[15,102,21,11,"cmp"],[15,105,21,14],[15,106,21,15,"n"],[15,107,21,16],[15,108,21,17],[15,112,21,21],[15,113,21,22],[16,4,23,2],[16,11,23,9,"a"],[16,12,23,10],[17,2,24,0],[17,3,24,1],[18,2,26,0,"MillerRabin"],[18,13,26,11],[18,14,26,12,"prototype"],[18,23,26,21],[18,24,26,22,"_randrange"],[18,34,26,32],[18,37,26,35],[18,46,26,44,"_randrange"],[18,56,26,54,"_randrange"],[18,57,26,55,"start"],[18,62,26,60],[18,64,26,62,"stop"],[18,68,26,66],[18,70,26,68],[19,4,27,2],[20,4,28,2],[20,8,28,6,"size"],[20,12,28,10],[20,15,28,13,"stop"],[20,19,28,17],[20,20,28,18,"sub"],[20,23,28,21],[20,24,28,22,"start"],[20,29,28,27],[20,30,28,28],[21,4,29,2],[21,11,29,9,"start"],[21,16,29,14],[21,17,29,15,"add"],[21,20,29,18],[21,21,29,19],[21,25,29,23],[21,26,29,24,"_randbelow"],[21,36,29,34],[21,37,29,35,"size"],[21,41,29,39],[21,42,29,40],[21,43,29,41],[22,2,30,0],[22,3,30,1],[23,2,32,0,"MillerRabin"],[23,13,32,11],[23,14,32,12,"prototype"],[23,23,32,21],[23,24,32,22,"test"],[23,28,32,26],[23,31,32,29],[23,40,32,38,"test"],[23,44,32,42,"test"],[23,45,32,43,"n"],[23,46,32,44],[23,48,32,46,"k"],[23,49,32,47],[23,51,32,49,"cb"],[23,53,32,51],[23,55,32,53],[24,4,33,2],[24,8,33,6,"len"],[24,11,33,9],[24,14,33,12,"n"],[24,15,33,13],[24,16,33,14,"bitLength"],[24,25,33,23],[24,26,33,24],[24,27,33,25],[25,4,34,2],[25,8,34,6,"red"],[25,11,34,9],[25,14,34,12,"_$$_REQUIRE"],[25,25,34,12],[25,26,34,12,"_dependencyMap"],[25,40,34,12],[25,54,34,15,"mont"],[25,58,34,19],[25,59,34,20,"n"],[25,60,34,21],[25,61,34,22],[26,4,35,2],[26,8,35,6,"rone"],[26,12,35,10],[26,15,35,13],[26,20,35,13,"_$$_REQUIRE"],[26,31,35,13],[26,32,35,13,"_dependencyMap"],[26,46,35,13],[26,61,35,20],[26,62,35,21],[26,63,35,22],[26,64,35,23,"toRed"],[26,69,35,28],[26,70,35,29,"red"],[26,73,35,32],[26,74,35,33],[27,4,37,2],[27,8,37,6],[27,9,37,7,"k"],[27,10,37,8],[27,12,38,4,"k"],[27,13,38,5],[27,16,38,8,"Math"],[27,20,38,12],[27,21,38,13,"max"],[27,24,38,16],[27,25,38,17],[27,26,38,18],[27,28,38,21,"len"],[27,31,38,24],[27,34,38,27],[27,36,38,29],[27,39,38,33],[27,40,38,34],[27,41,38,35],[29,4,40,2],[30,4,41,2],[30,8,41,6,"n1"],[30,10,41,8],[30,13,41,11,"n"],[30,14,41,12],[30,15,41,13,"subn"],[30,19,41,17],[30,20,41,18],[30,21,41,19],[30,22,41,20],[31,4,42,2],[31,9,42,7],[31,13,42,11,"s"],[31,14,42,12],[31,17,42,15],[31,18,42,16],[31,20,42,18],[31,21,42,19,"n1"],[31,23,42,21],[31,24,42,22,"testn"],[31,29,42,27],[31,30,42,28,"s"],[31,31,42,29],[31,32,42,30],[31,34,42,32,"s"],[31,35,42,33],[31,37,42,35],[31,39,42,37],[31,40,42,38],[32,4,43,2],[32,8,43,6,"d"],[32,9,43,7],[32,12,43,10,"n"],[32,13,43,11],[32,14,43,12,"shrn"],[32,18,43,16],[32,19,43,17,"s"],[32,20,43,18],[32,21,43,19],[33,4,45,2],[33,8,45,6,"rn1"],[33,11,45,9],[33,14,45,12,"n1"],[33,16,45,14],[33,17,45,15,"toRed"],[33,22,45,20],[33,23,45,21,"red"],[33,26,45,24],[33,27,45,25],[34,4,47,2],[34,8,47,6,"prime"],[34,13,47,11],[34,16,47,14],[34,20,47,18],[35,4,48,2],[35,11,48,9,"k"],[35,12,48,10],[35,15,48,13],[35,16,48,14],[35,18,48,16,"k"],[35,19,48,17],[35,21,48,19],[35,23,48,21],[36,6,49,4],[36,10,49,8,"a"],[36,11,49,9],[36,14,49,12],[36,18,49,16],[36,19,49,17,"_randrange"],[36,29,49,27],[36,30,49,28],[36,35,49,28,"_$$_REQUIRE"],[36,46,49,28],[36,47,49,28,"_dependencyMap"],[36,61,49,28],[36,76,49,35],[36,77,49,36],[36,78,49,37],[36,80,49,39,"n1"],[36,82,49,41],[36,83,49,42],[37,6,50,4],[37,10,50,8,"cb"],[37,12,50,10],[37,14,51,6,"cb"],[37,16,51,8],[37,17,51,9,"a"],[37,18,51,10],[37,19,51,11],[38,6,53,4],[38,10,53,8,"x"],[38,11,53,9],[38,14,53,12,"a"],[38,15,53,13],[38,16,53,14,"toRed"],[38,21,53,19],[38,22,53,20,"red"],[38,25,53,23],[38,26,53,24],[38,27,53,25,"redPow"],[38,33,53,31],[38,34,53,32,"d"],[38,35,53,33],[38,36,53,34],[39,6,54,4],[39,10,54,8,"x"],[39,11,54,9],[39,12,54,10,"cmp"],[39,15,54,13],[39,16,54,14,"rone"],[39,20,54,18],[39,21,54,19],[39,26,54,24],[39,27,54,25],[39,31,54,29,"x"],[39,32,54,30],[39,33,54,31,"cmp"],[39,36,54,34],[39,37,54,35,"rn1"],[39,40,54,38],[39,41,54,39],[39,46,54,44],[39,47,54,45],[39,49,55,6],[40,6,57,4],[40,11,57,9],[40,15,57,13,"i"],[40,16,57,14],[40,19,57,17],[40,20,57,18],[40,22,57,20,"i"],[40,23,57,21],[40,26,57,24,"s"],[40,27,57,25],[40,29,57,27,"i"],[40,30,57,28],[40,32,57,30],[40,34,57,32],[41,8,58,6,"x"],[41,9,58,7],[41,12,58,10,"x"],[41,13,58,11],[41,14,58,12,"redSqr"],[41,20,58,18],[41,21,58,19],[41,22,58,20],[42,8,60,6],[42,12,60,10,"x"],[42,13,60,11],[42,14,60,12,"cmp"],[42,17,60,15],[42,18,60,16,"rone"],[42,22,60,20],[42,23,60,21],[42,28,60,26],[42,29,60,27],[42,31,61,8],[42,38,61,15],[42,43,61,20],[43,8,62,6],[43,12,62,10,"x"],[43,13,62,11],[43,14,62,12,"cmp"],[43,17,62,15],[43,18,62,16,"rn1"],[43,21,62,19],[43,22,62,20],[43,27,62,25],[43,28,62,26],[43,30,63,8],[44,6,64,4],[45,6,66,4],[45,10,66,8,"i"],[45,11,66,9],[45,16,66,14,"s"],[45,17,66,15],[45,19,67,6],[45,26,67,13],[45,31,67,18],[46,4,68,2],[47,4,70,2],[47,11,70,9,"prime"],[47,16,70,14],[48,2,71,0],[48,3,71,1],[49,2,73,0,"MillerRabin"],[49,13,73,11],[49,14,73,12,"prototype"],[49,23,73,21],[49,24,73,22,"getDivisor"],[49,34,73,32],[49,37,73,35],[49,46,73,44,"getDivisor"],[49,56,73,54,"getDivisor"],[49,57,73,55,"n"],[49,58,73,56],[49,60,73,58,"k"],[49,61,73,59],[49,63,73,61],[50,4,74,2],[50,8,74,6,"len"],[50,11,74,9],[50,14,74,12,"n"],[50,15,74,13],[50,16,74,14,"bitLength"],[50,25,74,23],[50,26,74,24],[50,27,74,25],[51,4,75,2],[51,8,75,6,"red"],[51,11,75,9],[51,14,75,12,"_$$_REQUIRE"],[51,25,75,12],[51,26,75,12,"_dependencyMap"],[51,40,75,12],[51,54,75,15,"mont"],[51,58,75,19],[51,59,75,20,"n"],[51,60,75,21],[51,61,75,22],[52,4,76,2],[52,8,76,6,"rone"],[52,12,76,10],[52,15,76,13],[52,20,76,13,"_$$_REQUIRE"],[52,31,76,13],[52,32,76,13,"_dependencyMap"],[52,46,76,13],[52,61,76,20],[52,62,76,21],[52,63,76,22],[52,64,76,23,"toRed"],[52,69,76,28],[52,70,76,29,"red"],[52,73,76,32],[52,74,76,33],[53,4,78,2],[53,8,78,6],[53,9,78,7,"k"],[53,10,78,8],[53,12,79,4,"k"],[53,13,79,5],[53,16,79,8,"Math"],[53,20,79,12],[53,21,79,13,"max"],[53,24,79,16],[53,25,79,17],[53,26,79,18],[53,28,79,21,"len"],[53,31,79,24],[53,34,79,27],[53,36,79,29],[53,39,79,33],[53,40,79,34],[53,41,79,35],[55,4,81,2],[56,4,82,2],[56,8,82,6,"n1"],[56,10,82,8],[56,13,82,11,"n"],[56,14,82,12],[56,15,82,13,"subn"],[56,19,82,17],[56,20,82,18],[56,21,82,19],[56,22,82,20],[57,4,83,2],[57,9,83,7],[57,13,83,11,"s"],[57,14,83,12],[57,17,83,15],[57,18,83,16],[57,20,83,18],[57,21,83,19,"n1"],[57,23,83,21],[57,24,83,22,"testn"],[57,29,83,27],[57,30,83,28,"s"],[57,31,83,29],[57,32,83,30],[57,34,83,32,"s"],[57,35,83,33],[57,37,83,35],[57,39,83,37],[57,40,83,38],[58,4,84,2],[58,8,84,6,"d"],[58,9,84,7],[58,12,84,10,"n"],[58,13,84,11],[58,14,84,12,"shrn"],[58,18,84,16],[58,19,84,17,"s"],[58,20,84,18],[58,21,84,19],[59,4,86,2],[59,8,86,6,"rn1"],[59,11,86,9],[59,14,86,12,"n1"],[59,16,86,14],[59,17,86,15,"toRed"],[59,22,86,20],[59,23,86,21,"red"],[59,26,86,24],[59,27,86,25],[60,4,88,2],[60,11,88,9,"k"],[60,12,88,10],[60,15,88,13],[60,16,88,14],[60,18,88,16,"k"],[60,19,88,17],[60,21,88,19],[60,23,88,21],[61,6,89,4],[61,10,89,8,"a"],[61,11,89,9],[61,14,89,12],[61,18,89,16],[61,19,89,17,"_randrange"],[61,29,89,27],[61,30,89,28],[61,35,89,28,"_$$_REQUIRE"],[61,46,89,28],[61,47,89,28,"_dependencyMap"],[61,61,89,28],[61,76,89,35],[61,77,89,36],[61,78,89,37],[61,80,89,39,"n1"],[61,82,89,41],[61,83,89,42],[62,6,91,4],[62,10,91,8,"g"],[62,11,91,9],[62,14,91,12,"n"],[62,15,91,13],[62,16,91,14,"gcd"],[62,19,91,17],[62,20,91,18,"a"],[62,21,91,19],[62,22,91,20],[63,6,92,4],[63,10,92,8,"g"],[63,11,92,9],[63,12,92,10,"cmpn"],[63,16,92,14],[63,17,92,15],[63,18,92,16],[63,19,92,17],[63,24,92,22],[63,25,92,23],[63,27,93,6],[63,34,93,13,"g"],[63,35,93,14],[64,6,95,4],[64,10,95,8,"x"],[64,11,95,9],[64,14,95,12,"a"],[64,15,95,13],[64,16,95,14,"toRed"],[64,21,95,19],[64,22,95,20,"red"],[64,25,95,23],[64,26,95,24],[64,27,95,25,"redPow"],[64,33,95,31],[64,34,95,32,"d"],[64,35,95,33],[64,36,95,34],[65,6,96,4],[65,10,96,8,"x"],[65,11,96,9],[65,12,96,10,"cmp"],[65,15,96,13],[65,16,96,14,"rone"],[65,20,96,18],[65,21,96,19],[65,26,96,24],[65,27,96,25],[65,31,96,29,"x"],[65,32,96,30],[65,33,96,31,"cmp"],[65,36,96,34],[65,37,96,35,"rn1"],[65,40,96,38],[65,41,96,39],[65,46,96,44],[65,47,96,45],[65,49,97,6],[66,6,99,4],[66,11,99,9],[66,15,99,13,"i"],[66,16,99,14],[66,19,99,17],[66,20,99,18],[66,22,99,20,"i"],[66,23,99,21],[66,26,99,24,"s"],[66,27,99,25],[66,29,99,27,"i"],[66,30,99,28],[66,32,99,30],[66,34,99,32],[67,8,100,6,"x"],[67,9,100,7],[67,12,100,10,"x"],[67,13,100,11],[67,14,100,12,"redSqr"],[67,20,100,18],[67,21,100,19],[67,22,100,20],[68,8,102,6],[68,12,102,10,"x"],[68,13,102,11],[68,14,102,12,"cmp"],[68,17,102,15],[68,18,102,16,"rone"],[68,22,102,20],[68,23,102,21],[68,28,102,26],[68,29,102,27],[68,31,103,8],[68,38,103,15,"x"],[68,39,103,16],[68,40,103,17,"fromRed"],[68,47,103,24],[68,48,103,25],[68,49,103,26],[68,50,103,27,"subn"],[68,54,103,31],[68,55,103,32],[68,56,103,33],[68,57,103,34],[68,58,103,35,"gcd"],[68,61,103,38],[68,62,103,39,"n"],[68,63,103,40],[68,64,103,41],[69,8,104,6],[69,12,104,10,"x"],[69,13,104,11],[69,14,104,12,"cmp"],[69,17,104,15],[69,18,104,16,"rn1"],[69,21,104,19],[69,22,104,20],[69,27,104,25],[69,28,104,26],[69,30,105,8],[70,6,106,4],[71,6,108,4],[71,10,108,8,"i"],[71,11,108,9],[71,16,108,14,"s"],[71,17,108,15],[71,19,108,17],[72,8,109,6,"x"],[72,9,109,7],[72,12,109,10,"x"],[72,13,109,11],[72,14,109,12,"redSqr"],[72,20,109,18],[72,21,109,19],[72,22,109,20],[73,8,110,6],[73,15,110,13,"x"],[73,16,110,14],[73,17,110,15,"fromRed"],[73,24,110,22],[73,25,110,23],[73,26,110,24],[73,27,110,25,"subn"],[73,31,110,29],[73,32,110,30],[73,33,110,31],[73,34,110,32],[73,35,110,33,"gcd"],[73,38,110,36],[73,39,110,37,"n"],[73,40,110,38],[73,41,110,39],[74,6,111,4],[75,4,112,2],[76,4,114,2],[76,11,114,9],[76,16,114,14],[77,2,115,0],[77,3,115,1],[78,0,115,2],[78,3]],"functionMap":{"names":["<global>","MillerRabin","create","_randbelow","_randrange","test","getDivisor"],"mappings":"AAA;ACG;CDE;qBEG;CFE;mCGE;CHW;mCIE;CJI;6BKE;CLuC;mCME;CN0C"}},"type":"js/module"}]}