{"dependencies":[{"name":"../../typeFields","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}},{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}}],"key":"JA6Y4U+9BJNyHBqSRMPAJW1YgVo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.TAP_LEAF_SCRIPT) {\n      throw new Error('Decode Error: could not decode tapLeafScript with key 0x' + keyVal.key.toString('hex'));\n    }\n    if ((keyVal.key.length - 2) % 32 !== 0) {\n      throw new Error('Decode Error: tapLeafScript has invalid control block in key 0x' + keyVal.key.toString('hex'));\n    }\n    var leafVersion = keyVal.value[keyVal.value.length - 1];\n    if ((keyVal.key[1] & 0xfe) !== leafVersion) {\n      throw new Error('Decode Error: tapLeafScript bad leaf version in key 0x' + keyVal.key.toString('hex'));\n    }\n    var script = keyVal.value.slice(0, -1);\n    var controlBlock = keyVal.key.slice(1);\n    return {\n      controlBlock: controlBlock,\n      script: script,\n      leafVersion: leafVersion\n    };\n  }\n  exports.decode = decode;\n  function encode(tScript) {\n    var head = Buffer.from([_$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.TAP_LEAF_SCRIPT]);\n    var verBuf = Buffer.from([tScript.leafVersion]);\n    return {\n      key: Buffer.concat([head, tScript.controlBlock]),\n      value: Buffer.concat([tScript.script, verBuf])\n    };\n  }\n  exports.encode = encode;\n  exports.expected = '{ controlBlock: Buffer; leafVersion: number, script: Buffer; }';\n  function check(data) {\n    return Buffer.isBuffer(data.controlBlock) && (data.controlBlock.length - 1) % 32 === 0 && (data.controlBlock[0] & 0xfe) === data.leafVersion && Buffer.isBuffer(data.script);\n  }\n  exports.check = check;\n  function canAddToArray(array, item, dupeSet) {\n    var dupeString = item.controlBlock.toString('hex');\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(function (v) {\n      return v.controlBlock.equals(item.controlBlock);\n    }).length === 0;\n  }\n  exports.canAddToArray = canAddToArray;\n});","lineCount":50,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,4,0],[7,11,4,9,"decode"],[7,17,4,15,"decode"],[7,18,4,16,"keyVal"],[7,24,4,22],[7,26,4,24],[8,4,5,2],[8,8,5,6,"keyVal"],[8,14,5,12],[8,15,5,13,"key"],[8,18,5,16],[8,19,5,17],[8,20,5,18],[8,21,5,19],[8,26,5,24,"_$$_REQUIRE"],[8,37,5,24],[8,38,5,24,"_dependencyMap"],[8,52,5,24],[8,77,5,37,"InputTypes"],[8,87,5,47],[8,88,5,48,"TAP_LEAF_SCRIPT"],[8,103,5,63],[8,105,5,65],[9,6,6,4],[9,12,6,10],[9,16,6,14,"Error"],[9,21,6,19],[9,22,7,6],[9,80,7,64],[9,83,8,8,"keyVal"],[9,89,8,14],[9,90,8,15,"key"],[9,93,8,18],[9,94,8,19,"toString"],[9,102,8,27],[9,103,8,28],[9,108,8,33],[9,109,9,4],[9,110,9,5],[10,4,10,2],[11,4,11,2],[11,8,11,6],[11,9,11,7,"keyVal"],[11,15,11,13],[11,16,11,14,"key"],[11,19,11,17],[11,20,11,18,"length"],[11,26,11,24],[11,29,11,27],[11,30,11,28],[11,34,11,32],[11,36,11,34],[11,41,11,39],[11,42,11,40],[11,44,11,42],[12,6,12,4],[12,12,12,10],[12,16,12,14,"Error"],[12,21,12,19],[12,22,13,6],[12,87,13,71],[12,90,14,8,"keyVal"],[12,96,14,14],[12,97,14,15,"key"],[12,100,14,18],[12,101,14,19,"toString"],[12,109,14,27],[12,110,14,28],[12,115,14,33],[12,116,15,4],[12,117,15,5],[13,4,16,2],[14,4,17,2],[14,8,17,8,"leafVersion"],[14,19,17,19],[14,22,17,22,"keyVal"],[14,28,17,28],[14,29,17,29,"value"],[14,34,17,34],[14,35,17,35,"keyVal"],[14,41,17,41],[14,42,17,42,"value"],[14,47,17,47],[14,48,17,48,"length"],[14,54,17,54],[14,57,17,57],[14,58,17,58],[14,59,17,59],[15,4,18,2],[15,8,18,6],[15,9,18,7,"keyVal"],[15,15,18,13],[15,16,18,14,"key"],[15,19,18,17],[15,20,18,18],[15,21,18,19],[15,22,18,20],[15,25,18,23],[15,29,18,27],[15,35,18,33,"leafVersion"],[15,46,18,44],[15,48,18,46],[16,6,19,4],[16,12,19,10],[16,16,19,14,"Error"],[16,21,19,19],[16,22,20,6],[16,78,20,62],[16,81,21,8,"keyVal"],[16,87,21,14],[16,88,21,15,"key"],[16,91,21,18],[16,92,21,19,"toString"],[16,100,21,27],[16,101,21,28],[16,106,21,33],[16,107,22,4],[16,108,22,5],[17,4,23,2],[18,4,24,2],[18,8,24,8,"script"],[18,14,24,14],[18,17,24,17,"keyVal"],[18,23,24,23],[18,24,24,24,"value"],[18,29,24,29],[18,30,24,30,"slice"],[18,35,24,35],[18,36,24,36],[18,37,24,37],[18,39,24,39],[18,40,24,40],[18,41,24,41],[18,42,24,42],[19,4,25,2],[19,8,25,8,"controlBlock"],[19,20,25,20],[19,23,25,23,"keyVal"],[19,29,25,29],[19,30,25,30,"key"],[19,33,25,33],[19,34,25,34,"slice"],[19,39,25,39],[19,40,25,40],[19,41,25,41],[19,42,25,42],[20,4,26,2],[20,11,26,9],[21,6,26,11,"controlBlock"],[21,18,26,23],[21,20,26,11,"controlBlock"],[21,32,26,23],[22,6,26,25,"script"],[22,12,26,31],[22,14,26,25,"script"],[22,20,26,31],[23,6,26,33,"leafVersion"],[23,17,26,44],[23,19,26,33,"leafVersion"],[24,4,26,45],[24,5,26,46],[25,2,27,0],[26,2,28,0,"exports"],[26,9,28,7],[26,10,28,8,"decode"],[26,16,28,14],[26,19,28,17,"decode"],[26,25,28,23],[27,2,29,0],[27,11,29,9,"encode"],[27,17,29,15,"encode"],[27,18,29,16,"tScript"],[27,25,29,23],[27,27,29,25],[28,4,30,2],[28,8,30,8,"head"],[28,12,30,12],[28,15,30,15,"Buffer"],[28,21,30,21],[28,22,30,22,"from"],[28,26,30,26],[28,27,30,27],[28,28,30,28,"_$$_REQUIRE"],[28,39,30,28],[28,40,30,28,"_dependencyMap"],[28,54,30,28],[28,79,30,41,"InputTypes"],[28,89,30,51],[28,90,30,52,"TAP_LEAF_SCRIPT"],[28,105,30,67],[28,106,30,68],[28,107,30,69],[29,4,31,2],[29,8,31,8,"verBuf"],[29,14,31,14],[29,17,31,17,"Buffer"],[29,23,31,23],[29,24,31,24,"from"],[29,28,31,28],[29,29,31,29],[29,30,31,30,"tScript"],[29,37,31,37],[29,38,31,38,"leafVersion"],[29,49,31,49],[29,50,31,50],[29,51,31,51],[30,4,32,2],[30,11,32,9],[31,6,33,4,"key"],[31,9,33,7],[31,11,33,9,"Buffer"],[31,17,33,15],[31,18,33,16,"concat"],[31,24,33,22],[31,25,33,23],[31,26,33,24,"head"],[31,30,33,28],[31,32,33,30,"tScript"],[31,39,33,37],[31,40,33,38,"controlBlock"],[31,52,33,50],[31,53,33,51],[31,54,33,52],[32,6,34,4,"value"],[32,11,34,9],[32,13,34,11,"Buffer"],[32,19,34,17],[32,20,34,18,"concat"],[32,26,34,24],[32,27,34,25],[32,28,34,26,"tScript"],[32,35,34,33],[32,36,34,34,"script"],[32,42,34,40],[32,44,34,42,"verBuf"],[32,50,34,48],[32,51,34,49],[33,4,35,2],[33,5,35,3],[34,2,36,0],[35,2,37,0,"exports"],[35,9,37,7],[35,10,37,8,"encode"],[35,16,37,14],[35,19,37,17,"encode"],[35,25,37,23],[36,2,38,0,"exports"],[36,9,38,7],[36,10,38,8,"expected"],[36,18,38,16],[36,21,39,2],[36,85,39,66],[37,2,40,0],[37,11,40,9,"check"],[37,16,40,14,"check"],[37,17,40,15,"data"],[37,21,40,19],[37,23,40,21],[38,4,41,2],[38,11,42,4,"Buffer"],[38,17,42,10],[38,18,42,11,"isBuffer"],[38,26,42,19],[38,27,42,20,"data"],[38,31,42,24],[38,32,42,25,"controlBlock"],[38,44,42,37],[38,45,42,38],[38,49,43,4],[38,50,43,5,"data"],[38,54,43,9],[38,55,43,10,"controlBlock"],[38,67,43,22],[38,68,43,23,"length"],[38,74,43,29],[38,77,43,32],[38,78,43,33],[38,82,43,37],[38,84,43,39],[38,89,43,44],[38,90,43,45],[38,94,44,4],[38,95,44,5,"data"],[38,99,44,9],[38,100,44,10,"controlBlock"],[38,112,44,22],[38,113,44,23],[38,114,44,24],[38,115,44,25],[38,118,44,28],[38,122,44,32],[38,128,44,38,"data"],[38,132,44,42],[38,133,44,43,"leafVersion"],[38,144,44,54],[38,148,45,4,"Buffer"],[38,154,45,10],[38,155,45,11,"isBuffer"],[38,163,45,19],[38,164,45,20,"data"],[38,168,45,24],[38,169,45,25,"script"],[38,175,45,31],[38,176,45,32],[39,2,47,0],[40,2,48,0,"exports"],[40,9,48,7],[40,10,48,8,"check"],[40,15,48,13],[40,18,48,16,"check"],[40,23,48,21],[41,2,49,0],[41,11,49,9,"canAddToArray"],[41,24,49,22,"canAddToArray"],[41,25,49,23,"array"],[41,30,49,28],[41,32,49,30,"item"],[41,36,49,34],[41,38,49,36,"dupeSet"],[41,45,49,43],[41,47,49,45],[42,4,50,2],[42,8,50,8,"dupeString"],[42,18,50,18],[42,21,50,21,"item"],[42,25,50,25],[42,26,50,26,"controlBlock"],[42,38,50,38],[42,39,50,39,"toString"],[42,47,50,47],[42,48,50,48],[42,53,50,53],[42,54,50,54],[43,4,51,2],[43,8,51,6,"dupeSet"],[43,15,51,13],[43,16,51,14,"has"],[43,19,51,17],[43,20,51,18,"dupeString"],[43,30,51,28],[43,31,51,29],[43,33,51,31],[43,40,51,38],[43,45,51,43],[44,4,52,2,"dupeSet"],[44,11,52,9],[44,12,52,10,"add"],[44,15,52,13],[44,16,52,14,"dupeString"],[44,26,52,24],[44,27,52,25],[45,4,53,2],[45,11,54,4,"array"],[45,16,54,9],[45,17,54,10,"filter"],[45,23,54,16],[45,24,54,17],[45,34,54,17,"v"],[45,35,54,18],[46,6,54,18],[46,13,54,22,"v"],[46,14,54,23],[46,15,54,24,"controlBlock"],[46,27,54,36],[46,28,54,37,"equals"],[46,34,54,43],[46,35,54,44,"item"],[46,39,54,48],[46,40,54,49,"controlBlock"],[46,52,54,61],[46,53,54,62],[47,4,54,62],[47,6,54,63],[47,7,54,64,"length"],[47,13,54,70],[47,18,54,75],[47,19,54,76],[48,2,56,0],[49,2,57,0,"exports"],[49,9,57,7],[49,10,57,8,"canAddToArray"],[49,23,57,21],[49,26,57,24,"canAddToArray"],[49,39,57,37],[50,0,57,38],[50,3]],"functionMap":{"names":["<global>","decode","encode","check","canAddToArray","array.filter$argument_0"],"mappings":"AAA;ACG;CDuB;AEE;CFO;AGI;CHO;AIE;iBCK,6CD;CJE"}},"type":"js/module"}]}