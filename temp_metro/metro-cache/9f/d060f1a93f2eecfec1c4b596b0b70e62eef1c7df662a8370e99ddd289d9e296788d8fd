{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":97,"column":0,"index":3016}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":27,"index":462},"end":{"line":15,"column":54,"index":489}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"../../typeFields.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":24,"index":402},"end":{"line":14,"column":55,"index":433}},{"start":{"line":14,"column":24,"index":402},"end":{"line":14,"column":55,"index":433}}],"key":"6VKrghDrlipK/Kkfa9oBo7LMnas="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[1], \"uint8array-tools\"));\n  var range = function range(n) {\n    return _toConsumableArray(Array(n).keys());\n  };\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[2], \"../../typeFields.cjs\").GlobalTypes.GLOBAL_XPUB) {\n      throw new Error('Decode Error: could not decode globalXpub with key 0x' + tools.toHex(keyVal.key));\n    }\n    if (keyVal.key.length !== 79 || ![2, 3].includes(keyVal.key[46])) {\n      throw new Error('Decode Error: globalXpub has invalid extended pubkey in key 0x' + tools.toHex(keyVal.key));\n    }\n    if (keyVal.value.length / 4 % 1 !== 0) {\n      throw new Error('Decode Error: Global GLOBAL_XPUB value length should be multiple of 4');\n    }\n    var extendedPubkey = keyVal.key.slice(1);\n    var data = {\n      masterFingerprint: keyVal.value.slice(0, 4),\n      extendedPubkey: extendedPubkey,\n      path: 'm'\n    };\n    for (var i of range(keyVal.value.length / 4 - 1)) {\n      var val = tools.readUInt32(keyVal.value, i * 4 + 4, 'LE');\n      var isHard = !!(val & 0x80000000);\n      var idx = val & 0x7fffffff;\n      data.path += '/' + idx.toString(10) + (isHard ? \"'\" : '');\n    }\n    return data;\n  }\n  exports.decode = decode;\n  function encode(data) {\n    var head = new Uint8Array([_$$_REQUIRE(_dependencyMap[2], \"../../typeFields.cjs\").GlobalTypes.GLOBAL_XPUB]);\n    var key = tools.concat([head, data.extendedPubkey]);\n    var splitPath = data.path.split('/');\n    var value = new Uint8Array(splitPath.length * 4);\n    value.set(data.masterFingerprint, 0);\n    var offset = 4;\n    splitPath.slice(1).forEach(function (level) {\n      var isHard = level.slice(-1) === \"'\";\n      var num = 0x7fffffff & parseInt(isHard ? level.slice(0, -1) : level, 10);\n      if (isHard) num += 0x80000000;\n      tools.writeUInt32(value, offset, num, 'LE');\n      offset += 4;\n    });\n    return {\n      key: key,\n      value: value\n    };\n  }\n  exports.encode = encode;\n  exports.expected = '{ masterFingerprint: Uint8Array; extendedPubkey: Uint8Array; path: string; }';\n  function check(data) {\n    var epk = data.extendedPubkey;\n    var mfp = data.masterFingerprint;\n    var p = data.path;\n    return epk instanceof Uint8Array && epk.length === 78 && [2, 3].indexOf(epk[45]) > -1 && mfp instanceof Uint8Array && mfp.length === 4 && typeof p === 'string' && !!p.match(/^m(\\/\\d+'?)*$/);\n  }\n  exports.check = check;\n  function canAddToArray(array, item, dupeSet) {\n    var dupeString = tools.toHex(item.extendedPubkey);\n    if (dupeSet.has(dupeString)) return false;\n    dupeSet.add(dupeString);\n    return array.filter(function (v) {\n      return tools.compare(v.extendedPubkey, item.extendedPubkey);\n    }).length === 0;\n  }\n  exports.canAddToArray = canAddToArray;\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0],[5,6,2,4,"__importStar"],[5,18,2,16],[5,21,3,3],[5,25,3,7],[5,29,3,11],[5,33,3,15],[5,34,3,16,"__importStar"],[5,46,3,28],[5,50,4,2],[5,60,4,11,"mod"],[5,63,4,14],[5,65,4,16],[6,4,5,4],[6,8,5,8,"mod"],[6,11,5,11],[6,15,5,15,"mod"],[6,18,5,18],[6,19,5,19,"__esModule"],[6,29,5,29],[6,31,5,31],[6,38,5,38,"mod"],[6,41,5,41],[7,4,6,4],[7,8,6,8,"result"],[7,14,6,14],[7,17,6,17],[7,18,6,18],[7,19,6,19],[8,4,7,4],[8,8,7,8,"mod"],[8,11,7,11],[8,15,7,15],[8,19,7,19],[8,21,8,6],[8,26,8,11],[8,30,8,15,"k"],[8,31,8,16],[8,35,8,20,"mod"],[8,38,8,23],[8,40,9,8],[8,44,9,12,"Object"],[8,50,9,18],[8,51,9,19,"hasOwnProperty"],[8,65,9,33],[8,66,9,34,"call"],[8,70,9,38],[8,71,9,39,"mod"],[8,74,9,42],[8,76,9,44,"k"],[8,77,9,45],[8,78,9,46],[8,80,9,48,"result"],[8,86,9,54],[8,87,9,55,"k"],[8,88,9,56],[8,89,9,57],[8,92,9,60,"mod"],[8,95,9,63],[8,96,9,64,"k"],[8,97,9,65],[8,98,9,66],[9,4,10,4,"result"],[9,10,10,10],[9,11,10,11],[9,20,10,20],[9,21,10,21],[9,24,10,24,"mod"],[9,27,10,27],[10,4,11,4],[10,11,11,11,"result"],[10,17,11,17],[11,2,12,2],[11,3,12,3],[12,2,13,0,"Object"],[12,8,13,6],[12,9,13,7,"defineProperty"],[12,23,13,21],[12,24,13,22,"exports"],[12,31,13,29],[12,33,13,31],[12,45,13,43],[12,47,13,45],[13,4,13,47,"value"],[13,9,13,52],[13,11,13,54],[14,2,13,59],[14,3,13,60],[14,4,13,61],[15,2,15,0],[15,6,15,6,"tools"],[15,11,15,11],[15,14,15,14,"__importStar"],[15,26,15,26],[15,27,15,27,"require"],[15,38,15,34],[15,39,15,34,"_dependencyMap"],[15,53,15,34],[15,76,15,53],[15,77,15,54],[15,78,15,55],[16,2,16,0],[16,6,16,6,"range"],[16,11,16,11],[16,14,16,14],[16,23,16,6,"range"],[16,28,16,11,"range"],[16,29,16,14,"n"],[16,30,16,15],[17,4,16,15],[17,11,16,15,"_toConsumableArray"],[17,29,16,15],[17,30,16,23,"Array"],[17,35,16,28],[17,36,16,29,"n"],[17,37,16,30],[17,38,16,31],[17,39,16,32,"keys"],[17,43,16,36],[17,44,16,37],[17,45,16,38],[18,2,16,38],[18,3,16,39],[19,2,17,0],[19,11,17,9,"decode"],[19,17,17,15,"decode"],[19,18,17,16,"keyVal"],[19,24,17,22],[19,26,17,24],[20,4,18,2],[20,8,18,6,"keyVal"],[20,14,18,12],[20,15,18,13,"key"],[20,18,18,16],[20,19,18,17],[20,20,18,18],[20,21,18,19],[20,26,18,24,"_$$_REQUIRE"],[20,37,18,24],[20,38,18,24,"_dependencyMap"],[20,52,18,24],[20,81,18,40,"GlobalTypes"],[20,92,18,51],[20,93,18,52,"GLOBAL_XPUB"],[20,104,18,63],[20,106,18,65],[21,6,19,4],[21,12,19,10],[21,16,19,14,"Error"],[21,21,19,19],[21,22,20,6],[21,77,20,61],[21,80,21,8,"tools"],[21,85,21,13],[21,86,21,14,"toHex"],[21,91,21,19],[21,92,21,20,"keyVal"],[21,98,21,26],[21,99,21,27,"key"],[21,102,21,30],[21,103,22,4],[21,104,22,5],[22,4,23,2],[23,4,24,2],[23,8,24,6,"keyVal"],[23,14,24,12],[23,15,24,13,"key"],[23,18,24,16],[23,19,24,17,"length"],[23,25,24,23],[23,30,24,28],[23,32,24,30],[23,36,24,34],[23,37,24,35],[23,38,24,36],[23,39,24,37],[23,41,24,39],[23,42,24,40],[23,43,24,41],[23,44,24,42,"includes"],[23,52,24,50],[23,53,24,51,"keyVal"],[23,59,24,57],[23,60,24,58,"key"],[23,63,24,61],[23,64,24,62],[23,66,24,64],[23,67,24,65],[23,68,24,66],[23,70,24,68],[24,6,25,4],[24,12,25,10],[24,16,25,14,"Error"],[24,21,25,19],[24,22,26,6],[24,86,26,70],[24,89,27,8,"tools"],[24,94,27,13],[24,95,27,14,"toHex"],[24,100,27,19],[24,101,27,20,"keyVal"],[24,107,27,26],[24,108,27,27,"key"],[24,111,27,30],[24,112,28,4],[24,113,28,5],[25,4,29,2],[26,4,30,2],[26,8,30,7,"keyVal"],[26,14,30,13],[26,15,30,14,"value"],[26,20,30,19],[26,21,30,20,"length"],[26,27,30,26],[26,30,30,29],[26,31,30,30],[26,34,30,34],[26,35,30,35],[26,40,30,40],[26,41,30,41],[26,43,30,43],[27,6,31,4],[27,12,31,10],[27,16,31,14,"Error"],[27,21,31,19],[27,22,32,6],[27,93,33,4],[27,94,33,5],[28,4,34,2],[29,4,35,2],[29,8,35,8,"extendedPubkey"],[29,22,35,22],[29,25,35,25,"keyVal"],[29,31,35,31],[29,32,35,32,"key"],[29,35,35,35],[29,36,35,36,"slice"],[29,41,35,41],[29,42,35,42],[29,43,35,43],[29,44,35,44],[30,4,36,2],[30,8,36,8,"data"],[30,12,36,12],[30,15,36,15],[31,6,37,4,"masterFingerprint"],[31,23,37,21],[31,25,37,23,"keyVal"],[31,31,37,29],[31,32,37,30,"value"],[31,37,37,35],[31,38,37,36,"slice"],[31,43,37,41],[31,44,37,42],[31,45,37,43],[31,47,37,45],[31,48,37,46],[31,49,37,47],[32,6,38,4,"extendedPubkey"],[32,20,38,18],[32,22,38,4,"extendedPubkey"],[32,36,38,18],[33,6,39,4,"path"],[33,10,39,8],[33,12,39,10],[34,4,40,2],[34,5,40,3],[35,4,41,2],[35,9,41,7],[35,13,41,13,"i"],[35,14,41,14],[35,18,41,18,"range"],[35,23,41,23],[35,24,41,24,"keyVal"],[35,30,41,30],[35,31,41,31,"value"],[35,36,41,36],[35,37,41,37,"length"],[35,43,41,43],[35,46,41,46],[35,47,41,47],[35,50,41,50],[35,51,41,51],[35,52,41,52],[35,54,41,54],[36,6,42,4],[36,10,42,10,"val"],[36,13,42,13],[36,16,42,16,"tools"],[36,21,42,21],[36,22,42,22,"readUInt32"],[36,32,42,32],[36,33,42,33,"keyVal"],[36,39,42,39],[36,40,42,40,"value"],[36,45,42,45],[36,47,42,47,"i"],[36,48,42,48],[36,51,42,51],[36,52,42,52],[36,55,42,55],[36,56,42,56],[36,58,42,58],[36,62,42,62],[36,63,42,63],[37,6,43,4],[37,10,43,10,"isHard"],[37,16,43,16],[37,19,43,19],[37,20,43,20],[37,22,43,22,"val"],[37,25,43,25],[37,28,43,28],[37,38,43,38],[37,39,43,39],[38,6,44,4],[38,10,44,10,"idx"],[38,13,44,13],[38,16,44,16,"val"],[38,19,44,19],[38,22,44,22],[38,32,44,32],[39,6,45,4,"data"],[39,10,45,8],[39,11,45,9,"path"],[39,15,45,13],[39,19,45,17],[39,22,45,20],[39,25,45,23,"idx"],[39,28,45,26],[39,29,45,27,"toString"],[39,37,45,35],[39,38,45,36],[39,40,45,38],[39,41,45,39],[39,45,45,43,"isHard"],[39,51,45,49],[39,54,45,52],[39,57,45,55],[39,60,45,58],[39,62,45,60],[39,63,45,61],[40,4,46,2],[41,4,47,2],[41,11,47,9,"data"],[41,15,47,13],[42,2,48,0],[43,2,49,0,"exports"],[43,9,49,7],[43,10,49,8,"decode"],[43,16,49,14],[43,19,49,17,"decode"],[43,25,49,23],[44,2,50,0],[44,11,50,9,"encode"],[44,17,50,15,"encode"],[44,18,50,16,"data"],[44,22,50,20],[44,24,50,22],[45,4,51,2],[45,8,51,8,"head"],[45,12,51,12],[45,15,51,15],[45,19,51,19,"Uint8Array"],[45,29,51,29],[45,30,51,30],[45,31,51,31,"_$$_REQUIRE"],[45,42,51,31],[45,43,51,31,"_dependencyMap"],[45,57,51,31],[45,86,51,47,"GlobalTypes"],[45,97,51,58],[45,98,51,59,"GLOBAL_XPUB"],[45,109,51,70],[45,110,51,71],[45,111,51,72],[46,4,52,2],[46,8,52,8,"key"],[46,11,52,11],[46,14,52,14,"tools"],[46,19,52,19],[46,20,52,20,"concat"],[46,26,52,26],[46,27,52,27],[46,28,52,28,"head"],[46,32,52,32],[46,34,52,34,"data"],[46,38,52,38],[46,39,52,39,"extendedPubkey"],[46,53,52,53],[46,54,52,54],[46,55,52,55],[47,4,53,2],[47,8,53,8,"splitPath"],[47,17,53,17],[47,20,53,20,"data"],[47,24,53,24],[47,25,53,25,"path"],[47,29,53,29],[47,30,53,30,"split"],[47,35,53,35],[47,36,53,36],[47,39,53,39],[47,40,53,40],[48,4,54,2],[48,8,54,8,"value"],[48,13,54,13],[48,16,54,16],[48,20,54,20,"Uint8Array"],[48,30,54,30],[48,31,54,31,"splitPath"],[48,40,54,40],[48,41,54,41,"length"],[48,47,54,47],[48,50,54,50],[48,51,54,51],[48,52,54,52],[49,4,55,2,"value"],[49,9,55,7],[49,10,55,8,"set"],[49,13,55,11],[49,14,55,12,"data"],[49,18,55,16],[49,19,55,17,"masterFingerprint"],[49,36,55,34],[49,38,55,36],[49,39,55,37],[49,40,55,38],[50,4,56,2],[50,8,56,6,"offset"],[50,14,56,12],[50,17,56,15],[50,18,56,16],[51,4,57,2,"splitPath"],[51,13,57,11],[51,14,57,12,"slice"],[51,19,57,17],[51,20,57,18],[51,21,57,19],[51,22,57,20],[51,23,57,21,"forEach"],[51,30,57,28],[51,31,57,29],[51,41,57,29,"level"],[51,46,57,34],[51,48,57,38],[52,6,58,4],[52,10,58,10,"isHard"],[52,16,58,16],[52,19,58,19,"level"],[52,24,58,24],[52,25,58,25,"slice"],[52,30,58,30],[52,31,58,31],[52,32,58,32],[52,33,58,33],[52,34,58,34],[52,39,58,39],[52,42,58,42],[53,6,59,4],[53,10,59,8,"num"],[53,13,59,11],[53,16,59,14],[53,26,59,24],[53,29,59,27,"parseInt"],[53,37,59,35],[53,38,59,36,"isHard"],[53,44,59,42],[53,47,59,45,"level"],[53,52,59,50],[53,53,59,51,"slice"],[53,58,59,56],[53,59,59,57],[53,60,59,58],[53,62,59,60],[53,63,59,61],[53,64,59,62],[53,65,59,63],[53,68,59,66,"level"],[53,73,59,71],[53,75,59,73],[53,77,59,75],[53,78,59,76],[54,6,60,4],[54,10,60,8,"isHard"],[54,16,60,14],[54,18,60,16,"num"],[54,21,60,19],[54,25,60,23],[54,35,60,33],[55,6,61,4,"tools"],[55,11,61,9],[55,12,61,10,"writeUInt32"],[55,23,61,21],[55,24,61,22,"value"],[55,29,61,27],[55,31,61,29,"offset"],[55,37,61,35],[55,39,61,37,"num"],[55,42,61,40],[55,44,61,42],[55,48,61,46],[55,49,61,47],[56,6,62,4,"offset"],[56,12,62,10],[56,16,62,14],[56,17,62,15],[57,4,63,2],[57,5,63,3],[57,6,63,4],[58,4,64,2],[58,11,64,9],[59,6,65,4,"key"],[59,9,65,7],[59,11,65,4,"key"],[59,14,65,7],[60,6,66,4,"value"],[60,11,66,9],[60,13,66,4,"value"],[61,4,67,2],[61,5,67,3],[62,2,68,0],[63,2,69,0,"exports"],[63,9,69,7],[63,10,69,8,"encode"],[63,16,69,14],[63,19,69,17,"encode"],[63,25,69,23],[64,2,70,0,"exports"],[64,9,70,7],[64,10,70,8,"expected"],[64,18,70,16],[64,21,71,2],[64,99,71,80],[65,2,72,0],[65,11,72,9,"check"],[65,16,72,14,"check"],[65,17,72,15,"data"],[65,21,72,19],[65,23,72,21],[66,4,73,2],[66,8,73,8,"epk"],[66,11,73,11],[66,14,73,14,"data"],[66,18,73,18],[66,19,73,19,"extendedPubkey"],[66,33,73,33],[67,4,74,2],[67,8,74,8,"mfp"],[67,11,74,11],[67,14,74,14,"data"],[67,18,74,18],[67,19,74,19,"masterFingerprint"],[67,36,74,36],[68,4,75,2],[68,8,75,8,"p"],[68,9,75,9],[68,12,75,12,"data"],[68,16,75,16],[68,17,75,17,"path"],[68,21,75,21],[69,4,76,2],[69,11,77,4,"epk"],[69,14,77,7],[69,26,77,19,"Uint8Array"],[69,36,77,29],[69,40,78,4,"epk"],[69,43,78,7],[69,44,78,8,"length"],[69,50,78,14],[69,55,78,19],[69,57,78,21],[69,61,79,4],[69,62,79,5],[69,63,79,6],[69,65,79,8],[69,66,79,9],[69,67,79,10],[69,68,79,11,"indexOf"],[69,75,79,18],[69,76,79,19,"epk"],[69,79,79,22],[69,80,79,23],[69,82,79,25],[69,83,79,26],[69,84,79,27],[69,87,79,30],[69,88,79,31],[69,89,79,32],[69,93,80,4,"mfp"],[69,96,80,7],[69,108,80,19,"Uint8Array"],[69,118,80,29],[69,122,81,4,"mfp"],[69,125,81,7],[69,126,81,8,"length"],[69,132,81,14],[69,137,81,19],[69,138,81,20],[69,142,82,4],[69,149,82,11,"p"],[69,150,82,12],[69,155,82,17],[69,163,82,25],[69,167,83,4],[69,168,83,5],[69,169,83,6,"p"],[69,170,83,7],[69,171,83,8,"match"],[69,176,83,13],[69,177,83,14],[69,192,83,29],[69,193,83,30],[70,2,85,0],[71,2,86,0,"exports"],[71,9,86,7],[71,10,86,8,"check"],[71,15,86,13],[71,18,86,16,"check"],[71,23,86,21],[72,2,87,0],[72,11,87,9,"canAddToArray"],[72,24,87,22,"canAddToArray"],[72,25,87,23,"array"],[72,30,87,28],[72,32,87,30,"item"],[72,36,87,34],[72,38,87,36,"dupeSet"],[72,45,87,43],[72,47,87,45],[73,4,88,2],[73,8,88,8,"dupeString"],[73,18,88,18],[73,21,88,21,"tools"],[73,26,88,26],[73,27,88,27,"toHex"],[73,32,88,32],[73,33,88,33,"item"],[73,37,88,37],[73,38,88,38,"extendedPubkey"],[73,52,88,52],[73,53,88,53],[74,4,89,2],[74,8,89,6,"dupeSet"],[74,15,89,13],[74,16,89,14,"has"],[74,19,89,17],[74,20,89,18,"dupeString"],[74,30,89,28],[74,31,89,29],[74,33,89,31],[74,40,89,38],[74,45,89,43],[75,4,90,2,"dupeSet"],[75,11,90,9],[75,12,90,10,"add"],[75,15,90,13],[75,16,90,14,"dupeString"],[75,26,90,24],[75,27,90,25],[76,4,91,2],[76,11,92,4,"array"],[76,16,92,9],[76,17,92,10,"filter"],[76,23,92,16],[76,24,92,17],[76,34,92,17,"v"],[76,35,92,18],[77,6,92,18],[77,13,92,22,"tools"],[77,18,92,27],[77,19,92,28,"compare"],[77,26,92,35],[77,27,92,36,"v"],[77,28,92,37],[77,29,92,38,"extendedPubkey"],[77,43,92,52],[77,45,92,54,"item"],[77,49,92,58],[77,50,92,59,"extendedPubkey"],[77,64,92,73],[77,65,92,74],[78,4,92,74],[78,6,92,75],[78,7,93,7,"length"],[78,13,93,13],[78,18,93,18],[78,19,93,19],[79,2,95,0],[80,2,96,0,"exports"],[80,9,96,7],[80,10,96,8,"canAddToArray"],[80,23,96,21],[80,26,96,24,"canAddToArray"],[80,39,96,37],[81,0,96,38],[81,3]],"functionMap":{"names":["<global>","<anonymous>","range","decode","encode","splitPath.slice.forEach$argument_0","check","canAddToArray","array.filter$argument_0"],"mappings":"AAA;ECG;GDQ;cEI,yBF;AGC;CH+B;AIE;6BCO;GDM;CJK;AMI;CNa;AOE;iBCK,yDD;CPG"}},"type":"js/module"}]}