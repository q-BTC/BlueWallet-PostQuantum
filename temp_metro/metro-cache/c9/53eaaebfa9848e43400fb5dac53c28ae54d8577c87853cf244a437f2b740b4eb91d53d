{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}},{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}},{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}},{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}},{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}},{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}},{"start":{"line":8,"column":13,"index":191},"end":{"line":8,"column":25,"index":203}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I="}},{"name":"../curves","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":13,"index":125},"end":{"line":6,"column":33,"index":145}},{"start":{"line":6,"column":13,"index":125},"end":{"line":6,"column":33,"index":145}},{"start":{"line":6,"column":13,"index":125},"end":{"line":6,"column":33,"index":145}}],"key":"THepG+iSmaA7+l1asK/DPPTMaH4="}},{"name":"./key","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":14,"index":220},"end":{"line":10,"column":30,"index":236}},{"start":{"line":10,"column":14,"index":220},"end":{"line":10,"column":30,"index":236}},{"start":{"line":10,"column":14,"index":220},"end":{"line":10,"column":30,"index":236}}],"key":"c2icHT5wjuk5iYUuCG2NMGWD6xE="}},{"name":"hmac-drbg","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":57},"end":{"line":4,"column":35,"index":77}},{"start":{"line":4,"column":15,"index":57},"end":{"line":4,"column":35,"index":77}}],"key":"vVJw4H0ndlJvfVa5QGvcK7uUXx4="}},{"name":"brorand","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":158},"end":{"line":7,"column":29,"index":176}}],"key":"S4gmoagXR7Xlhdx6vMizYk5L4Sc="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"./signature","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":16,"index":254},"end":{"line":11,"column":38,"index":276}},{"start":{"line":11,"column":16,"index":254},"end":{"line":11,"column":38,"index":276}},{"start":{"line":11,"column":16,"index":254},"end":{"line":11,"column":38,"index":276}},{"start":{"line":11,"column":16,"index":254},"end":{"line":11,"column":38,"index":276}}],"key":"MNBHEq71uolxlMEMq/nRow+dvKY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function EC(options) {\n    if (!(this instanceof EC)) return new EC(options);\n\n    // Shortcut `elliptic.ec(curve-name)`\n    if (typeof options === 'string') {\n      _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(Object.prototype.hasOwnProperty.call(_$$_REQUIRE(_dependencyMap[1], \"../curves\"), options), 'Unknown curve ' + options);\n      options = _$$_REQUIRE(_dependencyMap[1], \"../curves\")[options];\n    }\n\n    // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n    if (options instanceof _$$_REQUIRE(_dependencyMap[1], \"../curves\").PresetCurve) options = {\n      curve: options\n    };\n    this.curve = options.curve.curve;\n    this.n = this.curve.n;\n    this.nh = this.n.ushrn(1);\n    this.g = this.curve.g;\n\n    // Point on curve\n    this.g = options.curve.g;\n    this.g.precompute(options.curve.n.bitLength() + 1);\n\n    // Hash for function for DRBG\n    this.hash = options.hash || options.curve.hash;\n  }\n  module.exports = EC;\n  EC.prototype.keyPair = function keyPair(options) {\n    return new (_$$_REQUIRE(_dependencyMap[2], \"./key\"))(this, options);\n  };\n  EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n    return _$$_REQUIRE(_dependencyMap[2], \"./key\").fromPrivate(this, priv, enc);\n  };\n  EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n    return _$$_REQUIRE(_dependencyMap[2], \"./key\").fromPublic(this, pub, enc);\n  };\n  EC.prototype.genKeyPair = function genKeyPair(options) {\n    if (!options) options = {};\n\n    // Instantiate Hmac_DRBG\n    var drbg = new (_$$_REQUIRE(_dependencyMap[3], \"hmac-drbg\"))({\n      hash: this.hash,\n      pers: options.pers,\n      persEnc: options.persEnc || 'utf8',\n      entropy: options.entropy || _$$_REQUIRE(_dependencyMap[4], \"brorand\")(this.hash.hmacStrength),\n      entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n      nonce: this.n.toArray()\n    });\n    var bytes = this.n.byteLength();\n    var ns2 = this.n.sub(new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(2));\n    for (;;) {\n      var priv = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(drbg.generate(bytes));\n      if (priv.cmp(ns2) > 0) continue;\n      priv.iaddn(1);\n      return this.keyFromPrivate(priv);\n    }\n  };\n  EC.prototype._truncateToN = function _truncateToN(msg, truncOnly, bitLength) {\n    var byteLength;\n    if (_$$_REQUIRE(_dependencyMap[5], \"bn.js\").isBN(msg) || typeof msg === 'number') {\n      msg = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(msg, 16);\n      byteLength = msg.byteLength();\n    } else if (typeof msg === 'object') {\n      // BN assumes an array-like input and asserts length\n      byteLength = msg.length;\n      msg = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(msg, 16);\n    } else {\n      // BN converts the value to string\n      var str = msg.toString();\n      // HEX encoding\n      byteLength = str.length + 1 >>> 1;\n      msg = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(str, 16);\n    }\n    // Allow overriding\n    if (typeof bitLength !== 'number') {\n      bitLength = byteLength * 8;\n    }\n    var delta = bitLength - this.n.bitLength();\n    if (delta > 0) msg = msg.ushrn(delta);\n    if (!truncOnly && msg.cmp(this.n) >= 0) return msg.sub(this.n);else return msg;\n  };\n  EC.prototype.sign = function sign(msg, key, enc, options) {\n    if (typeof enc === 'object') {\n      options = enc;\n      enc = null;\n    }\n    if (!options) options = {};\n    if (typeof msg !== 'string' && typeof msg !== 'number' && !_$$_REQUIRE(_dependencyMap[5], \"bn.js\").isBN(msg)) {\n      _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(typeof msg === 'object' && msg && typeof msg.length === 'number', 'Expected message to be an array-like, a hex string, or a BN instance');\n      _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(msg.length >>> 0 === msg.length); // non-negative 32-bit integer\n      for (var i = 0; i < msg.length; i++) _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert((msg[i] & 255) === msg[i]);\n    }\n    key = this.keyFromPrivate(key, enc);\n    msg = this._truncateToN(msg, false, options.msgBitLength);\n\n    // Would fail further checks, but let's make the error message clear\n    _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(!msg.isNeg(), 'Can not sign a negative message');\n\n    // Zero-extend key to provide enough entropy\n    var bytes = this.n.byteLength();\n    var bkey = key.getPrivate().toArray('be', bytes);\n\n    // Zero-extend nonce to have the same byte size as N\n    var nonce = msg.toArray('be', bytes);\n\n    // Recheck nonce to be bijective to msg\n    _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(nonce).eq(msg), 'Can not sign message');\n\n    // Instantiate Hmac_DRBG\n    var drbg = new (_$$_REQUIRE(_dependencyMap[3], \"hmac-drbg\"))({\n      hash: this.hash,\n      entropy: bkey,\n      nonce: nonce,\n      pers: options.pers,\n      persEnc: options.persEnc || 'utf8'\n    });\n\n    // Number of bytes to generate\n    var ns1 = this.n.sub(new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(1));\n    for (var iter = 0;; iter++) {\n      var k = options.k ? options.k(iter) : new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(drbg.generate(this.n.byteLength()));\n      k = this._truncateToN(k, true);\n      if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0) continue;\n      var kp = this.g.mul(k);\n      if (kp.isInfinity()) continue;\n      var kpX = kp.getX();\n      var r = kpX.umod(this.n);\n      if (r.cmpn(0) === 0) continue;\n      var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n      s = s.umod(this.n);\n      if (s.cmpn(0) === 0) continue;\n      var recoveryParam = (kp.getY().isOdd() ? 1 : 0) | (kpX.cmp(r) !== 0 ? 2 : 0);\n\n      // Use complement of `s`, if it is > `n / 2`\n      if (options.canonical && s.cmp(this.nh) > 0) {\n        s = this.n.sub(s);\n        recoveryParam ^= 1;\n      }\n      return new (_$$_REQUIRE(_dependencyMap[6], \"./signature\"))({\n        r: r,\n        s: s,\n        recoveryParam: recoveryParam\n      });\n    }\n  };\n  EC.prototype.verify = function verify(msg, signature, key, enc, options) {\n    if (!options) options = {};\n    msg = this._truncateToN(msg, false, options.msgBitLength);\n    key = this.keyFromPublic(key, enc);\n    signature = new (_$$_REQUIRE(_dependencyMap[6], \"./signature\"))(signature, 'hex');\n\n    // Perform primitive values validation\n    var r = signature.r;\n    var s = signature.s;\n    if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0) return false;\n    if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0) return false;\n\n    // Validate signature\n    var sinv = s.invm(this.n);\n    var u1 = sinv.mul(msg).umod(this.n);\n    var u2 = sinv.mul(r).umod(this.n);\n    var p;\n    if (!this.curve._maxwellTrick) {\n      p = this.g.mulAdd(u1, key.getPublic(), u2);\n      if (p.isInfinity()) return false;\n      return p.getX().umod(this.n).cmp(r) === 0;\n    }\n\n    // NOTE: Greg Maxwell's trick, inspired by:\n    // https://git.io/vad3K\n\n    p = this.g.jmulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity()) return false;\n\n    // Compare `p.x` of Jacobian point with `r`,\n    // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n    // inverse of `p.z^2`\n    return p.eqXToP(r);\n  };\n  EC.prototype.recoverPubKey = function (msg, signature, j, enc) {\n    _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert((3 & j) === j, 'The recovery param is more than two bits');\n    signature = new (_$$_REQUIRE(_dependencyMap[6], \"./signature\"))(signature, enc);\n    var n = this.n;\n    var e = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(msg);\n    var r = signature.r;\n    var s = signature.s;\n\n    // A set LSB signifies that the y-coordinate is odd\n    var isYOdd = j & 1;\n    var isSecondKey = j >> 1;\n    if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey) throw new Error('Unable to find sencond key candinate');\n\n    // 1.1. Let x = r + jn.\n    if (isSecondKey) r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);else r = this.curve.pointFromX(r, isYOdd);\n    var rInv = signature.r.invm(n);\n    var s1 = n.sub(e).mul(rInv).umod(n);\n    var s2 = s.mul(rInv).umod(n);\n\n    // 1.6.1 Compute Q = r^-1 (sR -  eG)\n    //               Q = r^-1 (sR + -eG)\n    return this.g.mulAdd(s1, r, s2);\n  };\n  EC.prototype.getKeyRecoveryParam = function (e, signature, Q, enc) {\n    signature = new (_$$_REQUIRE(_dependencyMap[6], \"./signature\"))(signature, enc);\n    if (signature.recoveryParam !== null) return signature.recoveryParam;\n    for (var i = 0; i < 4; i++) {\n      var Qprime;\n      try {\n        Qprime = this.recoverPubKey(e, signature, i);\n      } catch (e) {\n        continue;\n      }\n      if (Qprime.eq(Q)) return i;\n    }\n    throw new Error('Unable to find valid recovery factor');\n  };\n});","lineCount":219,"map":[[2,2,1,0],[2,14,1,12],[4,2,13,0],[4,11,13,9,"EC"],[4,13,13,11,"EC"],[4,14,13,12,"options"],[4,21,13,19],[4,23,13,21],[5,4,14,2],[5,8,14,6],[5,10,14,8],[5,14,14,12],[5,26,14,24,"EC"],[5,28,14,26],[5,29,14,27],[5,31,15,4],[5,38,15,11],[5,42,15,15,"EC"],[5,44,15,17],[5,45,15,18,"options"],[5,52,15,25],[5,53,15,26],[7,4,17,2],[8,4,18,2],[8,8,18,6],[8,15,18,13,"options"],[8,22,18,20],[8,27,18,25],[8,35,18,33],[8,37,18,35],[9,6,19,4,"_$$_REQUIRE"],[9,17,19,4],[9,18,19,4,"_dependencyMap"],[9,32,19,4],[9,49,19,4,"assert"],[9,55,19,4],[9,56,19,11,"Object"],[9,62,19,17],[9,63,19,18,"prototype"],[9,72,19,27],[9,73,19,28,"hasOwnProperty"],[9,87,19,42],[9,88,19,43,"call"],[9,92,19,47],[9,93,19,47,"_$$_REQUIRE"],[9,104,19,47],[9,105,19,47,"_dependencyMap"],[9,119,19,47],[9,138,19,56,"options"],[9,145,19,63],[9,146,19,64],[9,148,20,6],[9,164,20,22],[9,167,20,25,"options"],[9,174,20,32],[9,175,20,33],[10,6,22,4,"options"],[10,13,22,11],[10,16,22,14,"_$$_REQUIRE"],[10,27,22,14],[10,28,22,14,"_dependencyMap"],[10,42,22,14],[10,60,22,21,"options"],[10,67,22,28],[10,68,22,29],[11,4,23,2],[13,4,25,2],[14,4,26,2],[14,8,26,6,"options"],[14,15,26,13],[14,27,26,25,"_$$_REQUIRE"],[14,38,26,25],[14,39,26,25,"_dependencyMap"],[14,53,26,25],[14,71,26,32,"PresetCurve"],[14,82,26,43],[14,84,27,4,"options"],[14,91,27,11],[14,94,27,14],[15,6,27,16,"curve"],[15,11,27,21],[15,13,27,23,"options"],[16,4,27,31],[16,5,27,32],[17,4,29,2],[17,8,29,6],[17,9,29,7,"curve"],[17,14,29,12],[17,17,29,15,"options"],[17,24,29,22],[17,25,29,23,"curve"],[17,30,29,28],[17,31,29,29,"curve"],[17,36,29,34],[18,4,30,2],[18,8,30,6],[18,9,30,7,"n"],[18,10,30,8],[18,13,30,11],[18,17,30,15],[18,18,30,16,"curve"],[18,23,30,21],[18,24,30,22,"n"],[18,25,30,23],[19,4,31,2],[19,8,31,6],[19,9,31,7,"nh"],[19,11,31,9],[19,14,31,12],[19,18,31,16],[19,19,31,17,"n"],[19,20,31,18],[19,21,31,19,"ushrn"],[19,26,31,24],[19,27,31,25],[19,28,31,26],[19,29,31,27],[20,4,32,2],[20,8,32,6],[20,9,32,7,"g"],[20,10,32,8],[20,13,32,11],[20,17,32,15],[20,18,32,16,"curve"],[20,23,32,21],[20,24,32,22,"g"],[20,25,32,23],[22,4,34,2],[23,4,35,2],[23,8,35,6],[23,9,35,7,"g"],[23,10,35,8],[23,13,35,11,"options"],[23,20,35,18],[23,21,35,19,"curve"],[23,26,35,24],[23,27,35,25,"g"],[23,28,35,26],[24,4,36,2],[24,8,36,6],[24,9,36,7,"g"],[24,10,36,8],[24,11,36,9,"precompute"],[24,21,36,19],[24,22,36,20,"options"],[24,29,36,27],[24,30,36,28,"curve"],[24,35,36,33],[24,36,36,34,"n"],[24,37,36,35],[24,38,36,36,"bitLength"],[24,47,36,45],[24,48,36,46],[24,49,36,47],[24,52,36,50],[24,53,36,51],[24,54,36,52],[26,4,38,2],[27,4,39,2],[27,8,39,6],[27,9,39,7,"hash"],[27,13,39,11],[27,16,39,14,"options"],[27,23,39,21],[27,24,39,22,"hash"],[27,28,39,26],[27,32,39,30,"options"],[27,39,39,37],[27,40,39,38,"curve"],[27,45,39,43],[27,46,39,44,"hash"],[27,50,39,48],[28,2,40,0],[29,2,41,0,"module"],[29,8,41,6],[29,9,41,7,"exports"],[29,16,41,14],[29,19,41,17,"EC"],[29,21,41,19],[30,2,43,0,"EC"],[30,4,43,2],[30,5,43,3,"prototype"],[30,14,43,12],[30,15,43,13,"keyPair"],[30,22,43,20],[30,25,43,23],[30,34,43,32,"keyPair"],[30,41,43,39,"keyPair"],[30,42,43,40,"options"],[30,49,43,47],[30,51,43,49],[31,4,44,2],[31,11,44,9],[31,16,44,9,"_$$_REQUIRE"],[31,27,44,9],[31,28,44,9,"_dependencyMap"],[31,42,44,9],[31,57,44,21],[31,61,44,25],[31,63,44,27,"options"],[31,70,44,34],[31,71,44,35],[32,2,45,0],[32,3,45,1],[33,2,47,0,"EC"],[33,4,47,2],[33,5,47,3,"prototype"],[33,14,47,12],[33,15,47,13,"keyFromPrivate"],[33,29,47,27],[33,32,47,30],[33,41,47,39,"keyFromPrivate"],[33,55,47,53,"keyFromPrivate"],[33,56,47,54,"priv"],[33,60,47,58],[33,62,47,60,"enc"],[33,65,47,63],[33,67,47,65],[34,4,48,2],[34,11,48,9,"_$$_REQUIRE"],[34,22,48,9],[34,23,48,9,"_dependencyMap"],[34,37,48,9],[34,51,48,17,"fromPrivate"],[34,62,48,28],[34,63,48,29],[34,67,48,33],[34,69,48,35,"priv"],[34,73,48,39],[34,75,48,41,"enc"],[34,78,48,44],[34,79,48,45],[35,2,49,0],[35,3,49,1],[36,2,51,0,"EC"],[36,4,51,2],[36,5,51,3,"prototype"],[36,14,51,12],[36,15,51,13,"keyFromPublic"],[36,28,51,26],[36,31,51,29],[36,40,51,38,"keyFromPublic"],[36,53,51,51,"keyFromPublic"],[36,54,51,52,"pub"],[36,57,51,55],[36,59,51,57,"enc"],[36,62,51,60],[36,64,51,62],[37,4,52,2],[37,11,52,9,"_$$_REQUIRE"],[37,22,52,9],[37,23,52,9,"_dependencyMap"],[37,37,52,9],[37,51,52,17,"fromPublic"],[37,61,52,27],[37,62,52,28],[37,66,52,32],[37,68,52,34,"pub"],[37,71,52,37],[37,73,52,39,"enc"],[37,76,52,42],[37,77,52,43],[38,2,53,0],[38,3,53,1],[39,2,55,0,"EC"],[39,4,55,2],[39,5,55,3,"prototype"],[39,14,55,12],[39,15,55,13,"genKeyPair"],[39,25,55,23],[39,28,55,26],[39,37,55,35,"genKeyPair"],[39,47,55,45,"genKeyPair"],[39,48,55,46,"options"],[39,55,55,53],[39,57,55,55],[40,4,56,2],[40,8,56,6],[40,9,56,7,"options"],[40,16,56,14],[40,18,57,4,"options"],[40,25,57,11],[40,28,57,14],[40,29,57,15],[40,30,57,16],[42,4,59,2],[43,4,60,2],[43,8,60,6,"drbg"],[43,12,60,10],[43,15,60,13],[43,20,60,13,"_$$_REQUIRE"],[43,31,60,13],[43,32,60,13,"_dependencyMap"],[43,46,60,13],[43,65,60,26],[44,6,61,4,"hash"],[44,10,61,8],[44,12,61,10],[44,16,61,14],[44,17,61,15,"hash"],[44,21,61,19],[45,6,62,4,"pers"],[45,10,62,8],[45,12,62,10,"options"],[45,19,62,17],[45,20,62,18,"pers"],[45,24,62,22],[46,6,63,4,"persEnc"],[46,13,63,11],[46,15,63,13,"options"],[46,22,63,20],[46,23,63,21,"persEnc"],[46,30,63,28],[46,34,63,32],[46,40,63,38],[47,6,64,4,"entropy"],[47,13,64,11],[47,15,64,13,"options"],[47,22,64,20],[47,23,64,21,"entropy"],[47,30,64,28],[47,34,64,32,"_$$_REQUIRE"],[47,45,64,32],[47,46,64,32,"_dependencyMap"],[47,60,64,32],[47,76,64,37],[47,80,64,41],[47,81,64,42,"hash"],[47,85,64,46],[47,86,64,47,"hmacStrength"],[47,98,64,59],[47,99,64,60],[48,6,65,4,"entropyEnc"],[48,16,65,14],[48,18,65,16,"options"],[48,25,65,23],[48,26,65,24,"entropy"],[48,33,65,31],[48,37,65,35,"options"],[48,44,65,42],[48,45,65,43,"entropyEnc"],[48,55,65,53],[48,59,65,57],[48,65,65,63],[49,6,66,4,"nonce"],[49,11,66,9],[49,13,66,11],[49,17,66,15],[49,18,66,16,"n"],[49,19,66,17],[49,20,66,18,"toArray"],[49,27,66,25],[49,28,66,26],[50,4,67,2],[50,5,67,3],[50,6,67,4],[51,4,69,2],[51,8,69,6,"bytes"],[51,13,69,11],[51,16,69,14],[51,20,69,18],[51,21,69,19,"n"],[51,22,69,20],[51,23,69,21,"byteLength"],[51,33,69,31],[51,34,69,32],[51,35,69,33],[52,4,70,2],[52,8,70,6,"ns2"],[52,11,70,9],[52,14,70,12],[52,18,70,16],[52,19,70,17,"n"],[52,20,70,18],[52,21,70,19,"sub"],[52,24,70,22],[52,25,70,23],[52,30,70,23,"_$$_REQUIRE"],[52,41,70,23],[52,42,70,23,"_dependencyMap"],[52,56,70,23],[52,71,70,30],[52,72,70,31],[52,73,70,32],[52,74,70,33],[53,4,71,2],[53,13,71,11],[54,6,72,4],[54,10,72,8,"priv"],[54,14,72,12],[54,17,72,15],[54,22,72,15,"_$$_REQUIRE"],[54,33,72,15],[54,34,72,15,"_dependencyMap"],[54,48,72,15],[54,63,72,22,"drbg"],[54,67,72,26],[54,68,72,27,"generate"],[54,76,72,35],[54,77,72,36,"bytes"],[54,82,72,41],[54,83,72,42],[54,84,72,43],[55,6,73,4],[55,10,73,8,"priv"],[55,14,73,12],[55,15,73,13,"cmp"],[55,18,73,16],[55,19,73,17,"ns2"],[55,22,73,20],[55,23,73,21],[55,26,73,24],[55,27,73,25],[55,29,74,6],[56,6,76,4,"priv"],[56,10,76,8],[56,11,76,9,"iaddn"],[56,16,76,14],[56,17,76,15],[56,18,76,16],[56,19,76,17],[57,6,77,4],[57,13,77,11],[57,17,77,15],[57,18,77,16,"keyFromPrivate"],[57,32,77,30],[57,33,77,31,"priv"],[57,37,77,35],[57,38,77,36],[58,4,78,2],[59,2,79,0],[59,3,79,1],[60,2,81,0,"EC"],[60,4,81,2],[60,5,81,3,"prototype"],[60,14,81,12],[60,15,81,13,"_truncateToN"],[60,27,81,25],[60,30,81,28],[60,39,81,37,"_truncateToN"],[60,51,81,49,"_truncateToN"],[60,52,81,50,"msg"],[60,55,81,53],[60,57,81,55,"truncOnly"],[60,66,81,64],[60,68,81,66,"bitLength"],[60,77,81,75],[60,79,81,77],[61,4,82,2],[61,8,82,6,"byteLength"],[61,18,82,16],[62,4,83,2],[62,8,83,6,"_$$_REQUIRE"],[62,19,83,6],[62,20,83,6,"_dependencyMap"],[62,34,83,6],[62,48,83,9,"isBN"],[62,52,83,13],[62,53,83,14,"msg"],[62,56,83,17],[62,57,83,18],[62,61,83,22],[62,68,83,29,"msg"],[62,71,83,32],[62,76,83,37],[62,84,83,45],[62,86,83,47],[63,6,84,4,"msg"],[63,9,84,7],[63,12,84,10],[63,17,84,10,"_$$_REQUIRE"],[63,28,84,10],[63,29,84,10,"_dependencyMap"],[63,43,84,10],[63,58,84,17,"msg"],[63,61,84,20],[63,63,84,22],[63,65,84,24],[63,66,84,25],[64,6,85,4,"byteLength"],[64,16,85,14],[64,19,85,17,"msg"],[64,22,85,20],[64,23,85,21,"byteLength"],[64,33,85,31],[64,34,85,32],[64,35,85,33],[65,4,86,2],[65,5,86,3],[65,11,86,9],[65,15,86,13],[65,22,86,20,"msg"],[65,25,86,23],[65,30,86,28],[65,38,86,36],[65,40,86,38],[66,6,87,4],[67,6,88,4,"byteLength"],[67,16,88,14],[67,19,88,17,"msg"],[67,22,88,20],[67,23,88,21,"length"],[67,29,88,27],[68,6,89,4,"msg"],[68,9,89,7],[68,12,89,10],[68,17,89,10,"_$$_REQUIRE"],[68,28,89,10],[68,29,89,10,"_dependencyMap"],[68,43,89,10],[68,58,89,17,"msg"],[68,61,89,20],[68,63,89,22],[68,65,89,24],[68,66,89,25],[69,4,90,2],[69,5,90,3],[69,11,90,9],[70,6,91,4],[71,6,92,4],[71,10,92,8,"str"],[71,13,92,11],[71,16,92,14,"msg"],[71,19,92,17],[71,20,92,18,"toString"],[71,28,92,26],[71,29,92,27],[71,30,92,28],[72,6,93,4],[73,6,94,4,"byteLength"],[73,16,94,14],[73,19,94,18,"str"],[73,22,94,21],[73,23,94,22,"length"],[73,29,94,28],[73,32,94,31],[73,33,94,32],[73,38,94,38],[73,39,94,39],[74,6,95,4,"msg"],[74,9,95,7],[74,12,95,10],[74,17,95,10,"_$$_REQUIRE"],[74,28,95,10],[74,29,95,10,"_dependencyMap"],[74,43,95,10],[74,58,95,17,"str"],[74,61,95,20],[74,63,95,22],[74,65,95,24],[74,66,95,25],[75,4,96,2],[76,4,97,2],[77,4,98,2],[77,8,98,6],[77,15,98,13,"bitLength"],[77,24,98,22],[77,29,98,27],[77,37,98,35],[77,39,98,37],[78,6,99,4,"bitLength"],[78,15,99,13],[78,18,99,16,"byteLength"],[78,28,99,26],[78,31,99,29],[78,32,99,30],[79,4,100,2],[80,4,101,2],[80,8,101,6,"delta"],[80,13,101,11],[80,16,101,14,"bitLength"],[80,25,101,23],[80,28,101,26],[80,32,101,30],[80,33,101,31,"n"],[80,34,101,32],[80,35,101,33,"bitLength"],[80,44,101,42],[80,45,101,43],[80,46,101,44],[81,4,102,2],[81,8,102,6,"delta"],[81,13,102,11],[81,16,102,14],[81,17,102,15],[81,19,103,4,"msg"],[81,22,103,7],[81,25,103,10,"msg"],[81,28,103,13],[81,29,103,14,"ushrn"],[81,34,103,19],[81,35,103,20,"delta"],[81,40,103,25],[81,41,103,26],[82,4,104,2],[82,8,104,6],[82,9,104,7,"truncOnly"],[82,18,104,16],[82,22,104,20,"msg"],[82,25,104,23],[82,26,104,24,"cmp"],[82,29,104,27],[82,30,104,28],[82,34,104,32],[82,35,104,33,"n"],[82,36,104,34],[82,37,104,35],[82,41,104,39],[82,42,104,40],[82,44,105,4],[82,51,105,11,"msg"],[82,54,105,14],[82,55,105,15,"sub"],[82,58,105,18],[82,59,105,19],[82,63,105,23],[82,64,105,24,"n"],[82,65,105,25],[82,66,105,26],[82,67,105,27],[82,72,107,4],[82,79,107,11,"msg"],[82,82,107,14],[83,2,108,0],[83,3,108,1],[84,2,110,0,"EC"],[84,4,110,2],[84,5,110,3,"prototype"],[84,14,110,12],[84,15,110,13,"sign"],[84,19,110,17],[84,22,110,20],[84,31,110,29,"sign"],[84,35,110,33,"sign"],[84,36,110,34,"msg"],[84,39,110,37],[84,41,110,39,"key"],[84,44,110,42],[84,46,110,44,"enc"],[84,49,110,47],[84,51,110,49,"options"],[84,58,110,56],[84,60,110,58],[85,4,111,2],[85,8,111,6],[85,15,111,13,"enc"],[85,18,111,16],[85,23,111,21],[85,31,111,29],[85,33,111,31],[86,6,112,4,"options"],[86,13,112,11],[86,16,112,14,"enc"],[86,19,112,17],[87,6,113,4,"enc"],[87,9,113,7],[87,12,113,10],[87,16,113,14],[88,4,114,2],[89,4,115,2],[89,8,115,6],[89,9,115,7,"options"],[89,16,115,14],[89,18,116,4,"options"],[89,25,116,11],[89,28,116,14],[89,29,116,15],[89,30,116,16],[90,4,118,2],[90,8,118,6],[90,15,118,13,"msg"],[90,18,118,16],[90,23,118,21],[90,31,118,29],[90,35,118,33],[90,42,118,40,"msg"],[90,45,118,43],[90,50,118,48],[90,58,118,56],[90,62,118,60],[90,63,118,61,"_$$_REQUIRE"],[90,74,118,61],[90,75,118,61,"_dependencyMap"],[90,89,118,61],[90,103,118,64,"isBN"],[90,107,118,68],[90,108,118,69,"msg"],[90,111,118,72],[90,112,118,73],[90,114,118,75],[91,6,119,4,"_$$_REQUIRE"],[91,17,119,4],[91,18,119,4,"_dependencyMap"],[91,32,119,4],[91,49,119,4,"assert"],[91,55,119,4],[91,56,119,11],[91,63,119,18,"msg"],[91,66,119,21],[91,71,119,26],[91,79,119,34],[91,83,119,38,"msg"],[91,86,119,41],[91,90,119,45],[91,97,119,52,"msg"],[91,100,119,55],[91,101,119,56,"length"],[91,107,119,62],[91,112,119,67],[91,120,119,75],[91,122,120,6],[91,192,120,76],[91,193,120,77],[92,6,121,4,"_$$_REQUIRE"],[92,17,121,4],[92,18,121,4,"_dependencyMap"],[92,32,121,4],[92,49,121,4,"assert"],[92,55,121,4],[92,56,121,12,"msg"],[92,59,121,15],[92,60,121,16,"length"],[92,66,121,22],[92,71,121,27],[92,72,121,28],[92,77,121,34,"msg"],[92,80,121,37],[92,81,121,38,"length"],[92,87,121,44],[92,88,121,45],[92,89,121,46],[92,90,121,47],[93,6,122,4],[93,11,122,9],[93,15,122,13,"i"],[93,16,122,14],[93,19,122,17],[93,20,122,18],[93,22,122,20,"i"],[93,23,122,21],[93,26,122,24,"msg"],[93,29,122,27],[93,30,122,28,"length"],[93,36,122,34],[93,38,122,36,"i"],[93,39,122,37],[93,41,122,39],[93,43,122,41,"_$$_REQUIRE"],[93,54,122,41],[93,55,122,41,"_dependencyMap"],[93,69,122,41],[93,86,122,41,"assert"],[93,92,122,41],[93,93,122,48],[93,94,122,49,"msg"],[93,97,122,52],[93,98,122,53,"i"],[93,99,122,54],[93,100,122,55],[93,103,122,58],[93,106,122,61],[93,112,122,67,"msg"],[93,115,122,70],[93,116,122,71,"i"],[93,117,122,72],[93,118,122,73],[93,119,122,74],[94,4,123,2],[95,4,125,2,"key"],[95,7,125,5],[95,10,125,8],[95,14,125,12],[95,15,125,13,"keyFromPrivate"],[95,29,125,27],[95,30,125,28,"key"],[95,33,125,31],[95,35,125,33,"enc"],[95,38,125,36],[95,39,125,37],[96,4,126,2,"msg"],[96,7,126,5],[96,10,126,8],[96,14,126,12],[96,15,126,13,"_truncateToN"],[96,27,126,25],[96,28,126,26,"msg"],[96,31,126,29],[96,33,126,31],[96,38,126,36],[96,40,126,38,"options"],[96,47,126,45],[96,48,126,46,"msgBitLength"],[96,60,126,58],[96,61,126,59],[98,4,128,2],[99,4,129,2,"_$$_REQUIRE"],[99,15,129,2],[99,16,129,2,"_dependencyMap"],[99,30,129,2],[99,47,129,2,"assert"],[99,53,129,2],[99,54,129,9],[99,55,129,10,"msg"],[99,58,129,13],[99,59,129,14,"isNeg"],[99,64,129,19],[99,65,129,20],[99,66,129,21],[99,68,129,23],[99,101,129,56],[99,102,129,57],[101,4,131,2],[102,4,132,2],[102,8,132,6,"bytes"],[102,13,132,11],[102,16,132,14],[102,20,132,18],[102,21,132,19,"n"],[102,22,132,20],[102,23,132,21,"byteLength"],[102,33,132,31],[102,34,132,32],[102,35,132,33],[103,4,133,2],[103,8,133,6,"bkey"],[103,12,133,10],[103,15,133,13,"key"],[103,18,133,16],[103,19,133,17,"getPrivate"],[103,29,133,27],[103,30,133,28],[103,31,133,29],[103,32,133,30,"toArray"],[103,39,133,37],[103,40,133,38],[103,44,133,42],[103,46,133,44,"bytes"],[103,51,133,49],[103,52,133,50],[105,4,135,2],[106,4,136,2],[106,8,136,6,"nonce"],[106,13,136,11],[106,16,136,14,"msg"],[106,19,136,17],[106,20,136,18,"toArray"],[106,27,136,25],[106,28,136,26],[106,32,136,30],[106,34,136,32,"bytes"],[106,39,136,37],[106,40,136,38],[108,4,138,2],[109,4,139,2,"_$$_REQUIRE"],[109,15,139,2],[109,16,139,2,"_dependencyMap"],[109,30,139,2],[109,47,139,2,"assert"],[109,53,139,2],[109,54,139,10],[109,59,139,10,"_$$_REQUIRE"],[109,70,139,10],[109,71,139,10,"_dependencyMap"],[109,85,139,10],[109,100,139,17,"nonce"],[109,105,139,22],[109,106,139,23],[109,107,139,25,"eq"],[109,109,139,27],[109,110,139,28,"msg"],[109,113,139,31],[109,114,139,32],[109,116,139,34],[109,138,139,56],[109,139,139,57],[111,4,141,2],[112,4,142,2],[112,8,142,6,"drbg"],[112,12,142,10],[112,15,142,13],[112,20,142,13,"_$$_REQUIRE"],[112,31,142,13],[112,32,142,13,"_dependencyMap"],[112,46,142,13],[112,65,142,26],[113,6,143,4,"hash"],[113,10,143,8],[113,12,143,10],[113,16,143,14],[113,17,143,15,"hash"],[113,21,143,19],[114,6,144,4,"entropy"],[114,13,144,11],[114,15,144,13,"bkey"],[114,19,144,17],[115,6,145,4,"nonce"],[115,11,145,9],[115,13,145,11,"nonce"],[115,18,145,16],[116,6,146,4,"pers"],[116,10,146,8],[116,12,146,10,"options"],[116,19,146,17],[116,20,146,18,"pers"],[116,24,146,22],[117,6,147,4,"persEnc"],[117,13,147,11],[117,15,147,13,"options"],[117,22,147,20],[117,23,147,21,"persEnc"],[117,30,147,28],[117,34,147,32],[118,4,148,2],[118,5,148,3],[118,6,148,4],[120,4,150,2],[121,4,151,2],[121,8,151,6,"ns1"],[121,11,151,9],[121,14,151,12],[121,18,151,16],[121,19,151,17,"n"],[121,20,151,18],[121,21,151,19,"sub"],[121,24,151,22],[121,25,151,23],[121,30,151,23,"_$$_REQUIRE"],[121,41,151,23],[121,42,151,23,"_dependencyMap"],[121,56,151,23],[121,71,151,30],[121,72,151,31],[121,73,151,32],[121,74,151,33],[122,4,153,2],[122,9,153,7],[122,13,153,11,"iter"],[122,17,153,15],[122,20,153,18],[122,21,153,19],[122,24,153,23,"iter"],[122,28,153,27],[122,30,153,29],[122,32,153,31],[123,6,154,4],[123,10,154,8,"k"],[123,11,154,9],[123,14,154,12,"options"],[123,21,154,19],[123,22,154,20,"k"],[123,23,154,21],[123,26,155,6,"options"],[123,33,155,13],[123,34,155,14,"k"],[123,35,155,15],[123,36,155,16,"iter"],[123,40,155,20],[123,41,155,21],[123,44,156,6],[123,49,156,6,"_$$_REQUIRE"],[123,60,156,6],[123,61,156,6,"_dependencyMap"],[123,75,156,6],[123,90,156,13,"drbg"],[123,94,156,17],[123,95,156,18,"generate"],[123,103,156,26],[123,104,156,27],[123,108,156,31],[123,109,156,32,"n"],[123,110,156,33],[123,111,156,34,"byteLength"],[123,121,156,44],[123,122,156,45],[123,123,156,46],[123,124,156,47],[123,125,156,48],[124,6,157,4,"k"],[124,7,157,5],[124,10,157,8],[124,14,157,12],[124,15,157,13,"_truncateToN"],[124,27,157,25],[124,28,157,26,"k"],[124,29,157,27],[124,31,157,29],[124,35,157,33],[124,36,157,34],[125,6,158,4],[125,10,158,8,"k"],[125,11,158,9],[125,12,158,10,"cmpn"],[125,16,158,14],[125,17,158,15],[125,18,158,16],[125,19,158,17],[125,23,158,21],[125,24,158,22],[125,28,158,26,"k"],[125,29,158,27],[125,30,158,28,"cmp"],[125,33,158,31],[125,34,158,32,"ns1"],[125,37,158,35],[125,38,158,36],[125,42,158,40],[125,43,158,41],[125,45,159,6],[126,6,161,4],[126,10,161,8,"kp"],[126,12,161,10],[126,15,161,13],[126,19,161,17],[126,20,161,18,"g"],[126,21,161,19],[126,22,161,20,"mul"],[126,25,161,23],[126,26,161,24,"k"],[126,27,161,25],[126,28,161,26],[127,6,162,4],[127,10,162,8,"kp"],[127,12,162,10],[127,13,162,11,"isInfinity"],[127,23,162,21],[127,24,162,22],[127,25,162,23],[127,27,163,6],[128,6,165,4],[128,10,165,8,"kpX"],[128,13,165,11],[128,16,165,14,"kp"],[128,18,165,16],[128,19,165,17,"getX"],[128,23,165,21],[128,24,165,22],[128,25,165,23],[129,6,166,4],[129,10,166,8,"r"],[129,11,166,9],[129,14,166,12,"kpX"],[129,17,166,15],[129,18,166,16,"umod"],[129,22,166,20],[129,23,166,21],[129,27,166,25],[129,28,166,26,"n"],[129,29,166,27],[129,30,166,28],[130,6,167,4],[130,10,167,8,"r"],[130,11,167,9],[130,12,167,10,"cmpn"],[130,16,167,14],[130,17,167,15],[130,18,167,16],[130,19,167,17],[130,24,167,22],[130,25,167,23],[130,27,168,6],[131,6,170,4],[131,10,170,8,"s"],[131,11,170,9],[131,14,170,12,"k"],[131,15,170,13],[131,16,170,14,"invm"],[131,20,170,18],[131,21,170,19],[131,25,170,23],[131,26,170,24,"n"],[131,27,170,25],[131,28,170,26],[131,29,170,27,"mul"],[131,32,170,30],[131,33,170,31,"r"],[131,34,170,32],[131,35,170,33,"mul"],[131,38,170,36],[131,39,170,37,"key"],[131,42,170,40],[131,43,170,41,"getPrivate"],[131,53,170,51],[131,54,170,52],[131,55,170,53],[131,56,170,54],[131,57,170,55,"iadd"],[131,61,170,59],[131,62,170,60,"msg"],[131,65,170,63],[131,66,170,64],[131,67,170,65],[132,6,171,4,"s"],[132,7,171,5],[132,10,171,8,"s"],[132,11,171,9],[132,12,171,10,"umod"],[132,16,171,14],[132,17,171,15],[132,21,171,19],[132,22,171,20,"n"],[132,23,171,21],[132,24,171,22],[133,6,172,4],[133,10,172,8,"s"],[133,11,172,9],[133,12,172,10,"cmpn"],[133,16,172,14],[133,17,172,15],[133,18,172,16],[133,19,172,17],[133,24,172,22],[133,25,172,23],[133,27,173,6],[134,6,175,4],[134,10,175,8,"recoveryParam"],[134,23,175,21],[134,26,175,24],[134,27,175,25,"kp"],[134,29,175,27],[134,30,175,28,"getY"],[134,34,175,32],[134,35,175,33],[134,36,175,34],[134,37,175,35,"isOdd"],[134,42,175,40],[134,43,175,41],[134,44,175,42],[134,47,175,45],[134,48,175,46],[134,51,175,49],[134,52,175,50],[134,57,176,25,"kpX"],[134,60,176,28],[134,61,176,29,"cmp"],[134,64,176,32],[134,65,176,33,"r"],[134,66,176,34],[134,67,176,35],[134,72,176,40],[134,73,176,41],[134,76,176,44],[134,77,176,45],[134,80,176,48],[134,81,176,49],[134,82,176,50],[136,6,178,4],[137,6,179,4],[137,10,179,8,"options"],[137,17,179,15],[137,18,179,16,"canonical"],[137,27,179,25],[137,31,179,29,"s"],[137,32,179,30],[137,33,179,31,"cmp"],[137,36,179,34],[137,37,179,35],[137,41,179,39],[137,42,179,40,"nh"],[137,44,179,42],[137,45,179,43],[137,48,179,46],[137,49,179,47],[137,51,179,49],[138,8,180,6,"s"],[138,9,180,7],[138,12,180,10],[138,16,180,14],[138,17,180,15,"n"],[138,18,180,16],[138,19,180,17,"sub"],[138,22,180,20],[138,23,180,21,"s"],[138,24,180,22],[138,25,180,23],[139,8,181,6,"recoveryParam"],[139,21,181,19],[139,25,181,23],[139,26,181,24],[140,6,182,4],[141,6,184,4],[141,13,184,11],[141,18,184,11,"_$$_REQUIRE"],[141,29,184,11],[141,30,184,11,"_dependencyMap"],[141,44,184,11],[141,65,184,25],[142,8,184,27,"r"],[142,9,184,28],[142,11,184,30,"r"],[142,12,184,31],[143,8,184,33,"s"],[143,9,184,34],[143,11,184,36,"s"],[143,12,184,37],[144,8,184,39,"recoveryParam"],[144,21,184,52],[144,23,184,54,"recoveryParam"],[145,6,184,68],[145,7,184,69],[145,8,184,70],[146,4,185,2],[147,2,186,0],[147,3,186,1],[148,2,188,0,"EC"],[148,4,188,2],[148,5,188,3,"prototype"],[148,14,188,12],[148,15,188,13,"verify"],[148,21,188,19],[148,24,188,22],[148,33,188,31,"verify"],[148,39,188,37,"verify"],[148,40,188,38,"msg"],[148,43,188,41],[148,45,188,43,"signature"],[148,54,188,52],[148,56,188,54,"key"],[148,59,188,57],[148,61,188,59,"enc"],[148,64,188,62],[148,66,188,64,"options"],[148,73,188,71],[148,75,188,73],[149,4,189,2],[149,8,189,6],[149,9,189,7,"options"],[149,16,189,14],[149,18,190,4,"options"],[149,25,190,11],[149,28,190,14],[149,29,190,15],[149,30,190,16],[150,4,192,2,"msg"],[150,7,192,5],[150,10,192,8],[150,14,192,12],[150,15,192,13,"_truncateToN"],[150,27,192,25],[150,28,192,26,"msg"],[150,31,192,29],[150,33,192,31],[150,38,192,36],[150,40,192,38,"options"],[150,47,192,45],[150,48,192,46,"msgBitLength"],[150,60,192,58],[150,61,192,59],[151,4,193,2,"key"],[151,7,193,5],[151,10,193,8],[151,14,193,12],[151,15,193,13,"keyFromPublic"],[151,28,193,26],[151,29,193,27,"key"],[151,32,193,30],[151,34,193,32,"enc"],[151,37,193,35],[151,38,193,36],[152,4,194,2,"signature"],[152,13,194,11],[152,16,194,14],[152,21,194,14,"_$$_REQUIRE"],[152,32,194,14],[152,33,194,14,"_dependencyMap"],[152,47,194,14],[152,68,194,28,"signature"],[152,77,194,37],[152,79,194,39],[152,84,194,44],[152,85,194,45],[154,4,196,2],[155,4,197,2],[155,8,197,6,"r"],[155,9,197,7],[155,12,197,10,"signature"],[155,21,197,19],[155,22,197,20,"r"],[155,23,197,21],[156,4,198,2],[156,8,198,6,"s"],[156,9,198,7],[156,12,198,10,"signature"],[156,21,198,19],[156,22,198,20,"s"],[156,23,198,21],[157,4,199,2],[157,8,199,6,"r"],[157,9,199,7],[157,10,199,8,"cmpn"],[157,14,199,12],[157,15,199,13],[157,16,199,14],[157,17,199,15],[157,20,199,18],[157,21,199,19],[157,25,199,23,"r"],[157,26,199,24],[157,27,199,25,"cmp"],[157,30,199,28],[157,31,199,29],[157,35,199,33],[157,36,199,34,"n"],[157,37,199,35],[157,38,199,36],[157,42,199,40],[157,43,199,41],[157,45,200,4],[157,52,200,11],[157,57,200,16],[158,4,201,2],[158,8,201,6,"s"],[158,9,201,7],[158,10,201,8,"cmpn"],[158,14,201,12],[158,15,201,13],[158,16,201,14],[158,17,201,15],[158,20,201,18],[158,21,201,19],[158,25,201,23,"s"],[158,26,201,24],[158,27,201,25,"cmp"],[158,30,201,28],[158,31,201,29],[158,35,201,33],[158,36,201,34,"n"],[158,37,201,35],[158,38,201,36],[158,42,201,40],[158,43,201,41],[158,45,202,4],[158,52,202,11],[158,57,202,16],[160,4,204,2],[161,4,205,2],[161,8,205,6,"sinv"],[161,12,205,10],[161,15,205,13,"s"],[161,16,205,14],[161,17,205,15,"invm"],[161,21,205,19],[161,22,205,20],[161,26,205,24],[161,27,205,25,"n"],[161,28,205,26],[161,29,205,27],[162,4,206,2],[162,8,206,6,"u1"],[162,10,206,8],[162,13,206,11,"sinv"],[162,17,206,15],[162,18,206,16,"mul"],[162,21,206,19],[162,22,206,20,"msg"],[162,25,206,23],[162,26,206,24],[162,27,206,25,"umod"],[162,31,206,29],[162,32,206,30],[162,36,206,34],[162,37,206,35,"n"],[162,38,206,36],[162,39,206,37],[163,4,207,2],[163,8,207,6,"u2"],[163,10,207,8],[163,13,207,11,"sinv"],[163,17,207,15],[163,18,207,16,"mul"],[163,21,207,19],[163,22,207,20,"r"],[163,23,207,21],[163,24,207,22],[163,25,207,23,"umod"],[163,29,207,27],[163,30,207,28],[163,34,207,32],[163,35,207,33,"n"],[163,36,207,34],[163,37,207,35],[164,4,208,2],[164,8,208,6,"p"],[164,9,208,7],[165,4,210,2],[165,8,210,6],[165,9,210,7],[165,13,210,11],[165,14,210,12,"curve"],[165,19,210,17],[165,20,210,18,"_maxwellTrick"],[165,33,210,31],[165,35,210,33],[166,6,211,4,"p"],[166,7,211,5],[166,10,211,8],[166,14,211,12],[166,15,211,13,"g"],[166,16,211,14],[166,17,211,15,"mulAdd"],[166,23,211,21],[166,24,211,22,"u1"],[166,26,211,24],[166,28,211,26,"key"],[166,31,211,29],[166,32,211,30,"getPublic"],[166,41,211,39],[166,42,211,40],[166,43,211,41],[166,45,211,43,"u2"],[166,47,211,45],[166,48,211,46],[167,6,212,4],[167,10,212,8,"p"],[167,11,212,9],[167,12,212,10,"isInfinity"],[167,22,212,20],[167,23,212,21],[167,24,212,22],[167,26,213,6],[167,33,213,13],[167,38,213,18],[168,6,215,4],[168,13,215,11,"p"],[168,14,215,12],[168,15,215,13,"getX"],[168,19,215,17],[168,20,215,18],[168,21,215,19],[168,22,215,20,"umod"],[168,26,215,24],[168,27,215,25],[168,31,215,29],[168,32,215,30,"n"],[168,33,215,31],[168,34,215,32],[168,35,215,33,"cmp"],[168,38,215,36],[168,39,215,37,"r"],[168,40,215,38],[168,41,215,39],[168,46,215,44],[168,47,215,45],[169,4,216,2],[171,4,218,2],[172,4,219,2],[174,4,221,2,"p"],[174,5,221,3],[174,8,221,6],[174,12,221,10],[174,13,221,11,"g"],[174,14,221,12],[174,15,221,13,"jmulAdd"],[174,22,221,20],[174,23,221,21,"u1"],[174,25,221,23],[174,27,221,25,"key"],[174,30,221,28],[174,31,221,29,"getPublic"],[174,40,221,38],[174,41,221,39],[174,42,221,40],[174,44,221,42,"u2"],[174,46,221,44],[174,47,221,45],[175,4,222,2],[175,8,222,6,"p"],[175,9,222,7],[175,10,222,8,"isInfinity"],[175,20,222,18],[175,21,222,19],[175,22,222,20],[175,24,223,4],[175,31,223,11],[175,36,223,16],[177,4,225,2],[178,4,226,2],[179,4,227,2],[180,4,228,2],[180,11,228,9,"p"],[180,12,228,10],[180,13,228,11,"eqXToP"],[180,19,228,17],[180,20,228,18,"r"],[180,21,228,19],[180,22,228,20],[181,2,229,0],[181,3,229,1],[182,2,231,0,"EC"],[182,4,231,2],[182,5,231,3,"prototype"],[182,14,231,12],[182,15,231,13,"recoverPubKey"],[182,28,231,26],[182,31,231,29],[182,41,231,38,"msg"],[182,44,231,41],[182,46,231,43,"signature"],[182,55,231,52],[182,57,231,54,"j"],[182,58,231,55],[182,60,231,57,"enc"],[182,63,231,60],[182,65,231,62],[183,4,232,2,"_$$_REQUIRE"],[183,15,232,2],[183,16,232,2,"_dependencyMap"],[183,30,232,2],[183,47,232,2,"assert"],[183,53,232,2],[183,54,232,9],[183,55,232,10],[183,56,232,11],[183,59,232,14,"j"],[183,60,232,15],[183,66,232,21,"j"],[183,67,232,22],[183,69,232,24],[183,111,232,66],[183,112,232,67],[184,4,233,2,"signature"],[184,13,233,11],[184,16,233,14],[184,21,233,14,"_$$_REQUIRE"],[184,32,233,14],[184,33,233,14,"_dependencyMap"],[184,47,233,14],[184,68,233,28,"signature"],[184,77,233,37],[184,79,233,39,"enc"],[184,82,233,42],[184,83,233,43],[185,4,235,2],[185,8,235,6,"n"],[185,9,235,7],[185,12,235,10],[185,16,235,14],[185,17,235,15,"n"],[185,18,235,16],[186,4,236,2],[186,8,236,6,"e"],[186,9,236,7],[186,12,236,10],[186,17,236,10,"_$$_REQUIRE"],[186,28,236,10],[186,29,236,10,"_dependencyMap"],[186,43,236,10],[186,58,236,17,"msg"],[186,61,236,20],[186,62,236,21],[187,4,237,2],[187,8,237,6,"r"],[187,9,237,7],[187,12,237,10,"signature"],[187,21,237,19],[187,22,237,20,"r"],[187,23,237,21],[188,4,238,2],[188,8,238,6,"s"],[188,9,238,7],[188,12,238,10,"signature"],[188,21,238,19],[188,22,238,20,"s"],[188,23,238,21],[190,4,240,2],[191,4,241,2],[191,8,241,6,"isYOdd"],[191,14,241,12],[191,17,241,15,"j"],[191,18,241,16],[191,21,241,19],[191,22,241,20],[192,4,242,2],[192,8,242,6,"isSecondKey"],[192,19,242,17],[192,22,242,20,"j"],[192,23,242,21],[192,27,242,25],[192,28,242,26],[193,4,243,2],[193,8,243,6,"r"],[193,9,243,7],[193,10,243,8,"cmp"],[193,13,243,11],[193,14,243,12],[193,18,243,16],[193,19,243,17,"curve"],[193,24,243,22],[193,25,243,23,"p"],[193,26,243,24],[193,27,243,25,"umod"],[193,31,243,29],[193,32,243,30],[193,36,243,34],[193,37,243,35,"curve"],[193,42,243,40],[193,43,243,41,"n"],[193,44,243,42],[193,45,243,43],[193,46,243,44],[193,50,243,48],[193,51,243,49],[193,55,243,53,"isSecondKey"],[193,66,243,64],[193,68,244,4],[193,74,244,10],[193,78,244,14,"Error"],[193,83,244,19],[193,84,244,20],[193,122,244,58],[193,123,244,59],[195,4,246,2],[196,4,247,2],[196,8,247,6,"isSecondKey"],[196,19,247,17],[196,21,248,4,"r"],[196,22,248,5],[196,25,248,8],[196,29,248,12],[196,30,248,13,"curve"],[196,35,248,18],[196,36,248,19,"pointFromX"],[196,46,248,29],[196,47,248,30,"r"],[196,48,248,31],[196,49,248,32,"add"],[196,52,248,35],[196,53,248,36],[196,57,248,40],[196,58,248,41,"curve"],[196,63,248,46],[196,64,248,47,"n"],[196,65,248,48],[196,66,248,49],[196,68,248,51,"isYOdd"],[196,74,248,57],[196,75,248,58],[196,76,248,59],[196,81,250,4,"r"],[196,82,250,5],[196,85,250,8],[196,89,250,12],[196,90,250,13,"curve"],[196,95,250,18],[196,96,250,19,"pointFromX"],[196,106,250,29],[196,107,250,30,"r"],[196,108,250,31],[196,110,250,33,"isYOdd"],[196,116,250,39],[196,117,250,40],[197,4,252,2],[197,8,252,6,"rInv"],[197,12,252,10],[197,15,252,13,"signature"],[197,24,252,22],[197,25,252,23,"r"],[197,26,252,24],[197,27,252,25,"invm"],[197,31,252,29],[197,32,252,30,"n"],[197,33,252,31],[197,34,252,32],[198,4,253,2],[198,8,253,6,"s1"],[198,10,253,8],[198,13,253,11,"n"],[198,14,253,12],[198,15,253,13,"sub"],[198,18,253,16],[198,19,253,17,"e"],[198,20,253,18],[198,21,253,19],[198,22,253,20,"mul"],[198,25,253,23],[198,26,253,24,"rInv"],[198,30,253,28],[198,31,253,29],[198,32,253,30,"umod"],[198,36,253,34],[198,37,253,35,"n"],[198,38,253,36],[198,39,253,37],[199,4,254,2],[199,8,254,6,"s2"],[199,10,254,8],[199,13,254,11,"s"],[199,14,254,12],[199,15,254,13,"mul"],[199,18,254,16],[199,19,254,17,"rInv"],[199,23,254,21],[199,24,254,22],[199,25,254,23,"umod"],[199,29,254,27],[199,30,254,28,"n"],[199,31,254,29],[199,32,254,30],[201,4,256,2],[202,4,257,2],[203,4,258,2],[203,11,258,9],[203,15,258,13],[203,16,258,14,"g"],[203,17,258,15],[203,18,258,16,"mulAdd"],[203,24,258,22],[203,25,258,23,"s1"],[203,27,258,25],[203,29,258,27,"r"],[203,30,258,28],[203,32,258,30,"s2"],[203,34,258,32],[203,35,258,33],[204,2,259,0],[204,3,259,1],[205,2,261,0,"EC"],[205,4,261,2],[205,5,261,3,"prototype"],[205,14,261,12],[205,15,261,13,"getKeyRecoveryParam"],[205,34,261,32],[205,37,261,35],[205,47,261,44,"e"],[205,48,261,45],[205,50,261,47,"signature"],[205,59,261,56],[205,61,261,58,"Q"],[205,62,261,59],[205,64,261,61,"enc"],[205,67,261,64],[205,69,261,66],[206,4,262,2,"signature"],[206,13,262,11],[206,16,262,14],[206,21,262,14,"_$$_REQUIRE"],[206,32,262,14],[206,33,262,14,"_dependencyMap"],[206,47,262,14],[206,68,262,28,"signature"],[206,77,262,37],[206,79,262,39,"enc"],[206,82,262,42],[206,83,262,43],[207,4,263,2],[207,8,263,6,"signature"],[207,17,263,15],[207,18,263,16,"recoveryParam"],[207,31,263,29],[207,36,263,34],[207,40,263,38],[207,42,264,4],[207,49,264,11,"signature"],[207,58,264,20],[207,59,264,21,"recoveryParam"],[207,72,264,34],[208,4,266,2],[208,9,266,7],[208,13,266,11,"i"],[208,14,266,12],[208,17,266,15],[208,18,266,16],[208,20,266,18,"i"],[208,21,266,19],[208,24,266,22],[208,25,266,23],[208,27,266,25,"i"],[208,28,266,26],[208,30,266,28],[208,32,266,30],[209,6,267,4],[209,10,267,8,"Qprime"],[209,16,267,14],[210,6,268,4],[210,10,268,8],[211,8,269,6,"Qprime"],[211,14,269,12],[211,17,269,15],[211,21,269,19],[211,22,269,20,"recoverPubKey"],[211,35,269,33],[211,36,269,34,"e"],[211,37,269,35],[211,39,269,37,"signature"],[211,48,269,46],[211,50,269,48,"i"],[211,51,269,49],[211,52,269,50],[212,6,270,4],[212,7,270,5],[212,8,270,6],[212,15,270,13,"e"],[212,16,270,14],[212,18,270,16],[213,8,271,6],[214,6,272,4],[215,6,274,4],[215,10,274,8,"Qprime"],[215,16,274,14],[215,17,274,15,"eq"],[215,19,274,17],[215,20,274,18,"Q"],[215,21,274,19],[215,22,274,20],[215,24,275,6],[215,31,275,13,"i"],[215,32,275,14],[216,4,276,2],[217,4,277,2],[217,10,277,8],[217,14,277,12,"Error"],[217,19,277,17],[217,20,277,18],[217,58,277,56],[217,59,277,57],[218,2,278,0],[218,3,278,1],[219,0,278,2],[219,3]],"functionMap":{"names":["<global>","EC","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","_truncateToN","sign","verify","EC.prototype.recoverPubKey","EC.prototype.getKeyRecoveryParam"],"mappings":"AAA;ACY;CD2B;uBEG;CFE;8BGE;CHE;6BIE;CJE;0BKE;CLwB;4BME;CN2B;oBOE;CP4E;sBQE;CRyC;6BSE;CT4B;mCUE;CViB"}},"type":"js/module"}]}