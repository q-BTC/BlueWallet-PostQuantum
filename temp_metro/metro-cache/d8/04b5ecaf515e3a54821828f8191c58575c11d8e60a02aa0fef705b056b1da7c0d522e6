{"dependencies":[{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":28},"end":{"line":3,"column":43,"index":58}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM="}},{"name":"./des","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}},{"start":{"line":7,"column":10,"index":141},"end":{"line":7,"column":26,"index":157}}],"key":"ide9sU4UvsyuDeYxCU0ZsA5/m1Y="}},{"name":"./cipher","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":13,"index":110},"end":{"line":6,"column":32,"index":129}},{"start":{"line":6,"column":13,"index":110},"end":{"line":6,"column":32,"index":129}}],"key":"sNtDd7vaPczwvxeNcTDCg/XWaXM="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":75},"end":{"line":4,"column":34,"index":94}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function EDEState(type, key) {\n    _$$_REQUIRE(_dependencyMap[0], \"minimalistic-assert\").equal(key.length, 24, 'Invalid key length');\n    var k1 = key.slice(0, 8);\n    var k2 = key.slice(8, 16);\n    var k3 = key.slice(16, 24);\n    if (type === 'encrypt') {\n      this.ciphers = [_$$_REQUIRE(_dependencyMap[1], \"./des\").create({\n        type: 'encrypt',\n        key: k1\n      }), _$$_REQUIRE(_dependencyMap[1], \"./des\").create({\n        type: 'decrypt',\n        key: k2\n      }), _$$_REQUIRE(_dependencyMap[1], \"./des\").create({\n        type: 'encrypt',\n        key: k3\n      })];\n    } else {\n      this.ciphers = [_$$_REQUIRE(_dependencyMap[1], \"./des\").create({\n        type: 'decrypt',\n        key: k3\n      }), _$$_REQUIRE(_dependencyMap[1], \"./des\").create({\n        type: 'encrypt',\n        key: k2\n      }), _$$_REQUIRE(_dependencyMap[1], \"./des\").create({\n        type: 'decrypt',\n        key: k1\n      })];\n    }\n  }\n  function EDE(options) {\n    _$$_REQUIRE(_dependencyMap[2], \"./cipher\").call(this, options);\n    var state = new EDEState(this.type, this.options.key);\n    this._edeState = state;\n  }\n  _$$_REQUIRE(_dependencyMap[3], \"inherits\")(EDE, _$$_REQUIRE(_dependencyMap[2], \"./cipher\"));\n  module.exports = EDE;\n  EDE.create = function create(options) {\n    return new EDE(options);\n  };\n  EDE.prototype._update = function _update(inp, inOff, out, outOff) {\n    var state = this._edeState;\n    state.ciphers[0]._update(inp, inOff, out, outOff);\n    state.ciphers[1]._update(out, outOff, out, outOff);\n    state.ciphers[2]._update(out, outOff, out, outOff);\n  };\n  EDE.prototype._pad = _$$_REQUIRE(_dependencyMap[1], \"./des\").prototype._pad;\n  EDE.prototype._unpad = _$$_REQUIRE(_dependencyMap[1], \"./des\").prototype._unpad;\n});","lineCount":51,"map":[[2,2,1,0],[2,14,1,12],[4,2,9,0],[4,11,9,9,"EDEState"],[4,19,9,17,"EDEState"],[4,20,9,18,"type"],[4,24,9,22],[4,26,9,24,"key"],[4,29,9,27],[4,31,9,29],[5,4,10,2,"_$$_REQUIRE"],[5,15,10,2],[5,16,10,2,"_dependencyMap"],[5,30,10,2],[5,58,10,9,"equal"],[5,63,10,14],[5,64,10,15,"key"],[5,67,10,18],[5,68,10,19,"length"],[5,74,10,25],[5,76,10,27],[5,78,10,29],[5,80,10,31],[5,100,10,51],[5,101,10,52],[6,4,12,2],[6,8,12,6,"k1"],[6,10,12,8],[6,13,12,11,"key"],[6,16,12,14],[6,17,12,15,"slice"],[6,22,12,20],[6,23,12,21],[6,24,12,22],[6,26,12,24],[6,27,12,25],[6,28,12,26],[7,4,13,2],[7,8,13,6,"k2"],[7,10,13,8],[7,13,13,11,"key"],[7,16,13,14],[7,17,13,15,"slice"],[7,22,13,20],[7,23,13,21],[7,24,13,22],[7,26,13,24],[7,28,13,26],[7,29,13,27],[8,4,14,2],[8,8,14,6,"k3"],[8,10,14,8],[8,13,14,11,"key"],[8,16,14,14],[8,17,14,15,"slice"],[8,22,14,20],[8,23,14,21],[8,25,14,23],[8,27,14,25],[8,29,14,27],[8,30,14,28],[9,4,16,2],[9,8,16,6,"type"],[9,12,16,10],[9,17,16,15],[9,26,16,24],[9,28,16,26],[10,6,17,4],[10,10,17,8],[10,11,17,9,"ciphers"],[10,18,17,16],[10,21,17,19],[10,22,18,6,"_$$_REQUIRE"],[10,33,18,6],[10,34,18,6,"_dependencyMap"],[10,48,18,6],[10,62,18,10,"create"],[10,68,18,16],[10,69,18,17],[11,8,18,19,"type"],[11,12,18,23],[11,14,18,25],[11,23,18,34],[12,8,18,36,"key"],[12,11,18,39],[12,13,18,41,"k1"],[13,6,18,44],[13,7,18,45],[13,8,18,46],[13,10,19,6,"_$$_REQUIRE"],[13,21,19,6],[13,22,19,6,"_dependencyMap"],[13,36,19,6],[13,50,19,10,"create"],[13,56,19,16],[13,57,19,17],[14,8,19,19,"type"],[14,12,19,23],[14,14,19,25],[14,23,19,34],[15,8,19,36,"key"],[15,11,19,39],[15,13,19,41,"k2"],[16,6,19,44],[16,7,19,45],[16,8,19,46],[16,10,20,6,"_$$_REQUIRE"],[16,21,20,6],[16,22,20,6,"_dependencyMap"],[16,36,20,6],[16,50,20,10,"create"],[16,56,20,16],[16,57,20,17],[17,8,20,19,"type"],[17,12,20,23],[17,14,20,25],[17,23,20,34],[18,8,20,36,"key"],[18,11,20,39],[18,13,20,41,"k3"],[19,6,20,44],[19,7,20,45],[19,8,20,46],[19,9,21,5],[20,4,22,2],[20,5,22,3],[20,11,22,9],[21,6,23,4],[21,10,23,8],[21,11,23,9,"ciphers"],[21,18,23,16],[21,21,23,19],[21,22,24,6,"_$$_REQUIRE"],[21,33,24,6],[21,34,24,6,"_dependencyMap"],[21,48,24,6],[21,62,24,10,"create"],[21,68,24,16],[21,69,24,17],[22,8,24,19,"type"],[22,12,24,23],[22,14,24,25],[22,23,24,34],[23,8,24,36,"key"],[23,11,24,39],[23,13,24,41,"k3"],[24,6,24,44],[24,7,24,45],[24,8,24,46],[24,10,25,6,"_$$_REQUIRE"],[24,21,25,6],[24,22,25,6,"_dependencyMap"],[24,36,25,6],[24,50,25,10,"create"],[24,56,25,16],[24,57,25,17],[25,8,25,19,"type"],[25,12,25,23],[25,14,25,25],[25,23,25,34],[26,8,25,36,"key"],[26,11,25,39],[26,13,25,41,"k2"],[27,6,25,44],[27,7,25,45],[27,8,25,46],[27,10,26,6,"_$$_REQUIRE"],[27,21,26,6],[27,22,26,6,"_dependencyMap"],[27,36,26,6],[27,50,26,10,"create"],[27,56,26,16],[27,57,26,17],[28,8,26,19,"type"],[28,12,26,23],[28,14,26,25],[28,23,26,34],[29,8,26,36,"key"],[29,11,26,39],[29,13,26,41,"k1"],[30,6,26,44],[30,7,26,45],[30,8,26,46],[30,9,27,5],[31,4,28,2],[32,2,29,0],[33,2,31,0],[33,11,31,9,"EDE"],[33,14,31,12,"EDE"],[33,15,31,13,"options"],[33,22,31,20],[33,24,31,22],[34,4,32,2,"_$$_REQUIRE"],[34,15,32,2],[34,16,32,2,"_dependencyMap"],[34,30,32,2],[34,47,32,9,"call"],[34,51,32,13],[34,52,32,14],[34,56,32,18],[34,58,32,20,"options"],[34,65,32,27],[34,66,32,28],[35,4,34,2],[35,8,34,6,"state"],[35,13,34,11],[35,16,34,14],[35,20,34,18,"EDEState"],[35,28,34,26],[35,29,34,27],[35,33,34,31],[35,34,34,32,"type"],[35,38,34,36],[35,40,34,38],[35,44,34,42],[35,45,34,43,"options"],[35,52,34,50],[35,53,34,51,"key"],[35,56,34,54],[35,57,34,55],[36,4,35,2],[36,8,35,6],[36,9,35,7,"_edeState"],[36,18,35,16],[36,21,35,19,"state"],[36,26,35,24],[37,2,36,0],[38,2,37,0,"_$$_REQUIRE"],[38,13,37,0],[38,14,37,0,"_dependencyMap"],[38,28,37,0],[38,45,37,9,"EDE"],[38,48,37,12],[38,50,37,12,"_$$_REQUIRE"],[38,61,37,12],[38,62,37,12,"_dependencyMap"],[38,76,37,12],[38,92,37,20],[38,93,37,21],[39,2,39,0,"module"],[39,8,39,6],[39,9,39,7,"exports"],[39,16,39,14],[39,19,39,17,"EDE"],[39,22,39,20],[40,2,41,0,"EDE"],[40,5,41,3],[40,6,41,4,"create"],[40,12,41,10],[40,15,41,13],[40,24,41,22,"create"],[40,30,41,28,"create"],[40,31,41,29,"options"],[40,38,41,36],[40,40,41,38],[41,4,42,2],[41,11,42,9],[41,15,42,13,"EDE"],[41,18,42,16],[41,19,42,17,"options"],[41,26,42,24],[41,27,42,25],[42,2,43,0],[42,3,43,1],[43,2,45,0,"EDE"],[43,5,45,3],[43,6,45,4,"prototype"],[43,15,45,13],[43,16,45,14,"_update"],[43,23,45,21],[43,26,45,24],[43,35,45,33,"_update"],[43,42,45,40,"_update"],[43,43,45,41,"inp"],[43,46,45,44],[43,48,45,46,"inOff"],[43,53,45,51],[43,55,45,53,"out"],[43,58,45,56],[43,60,45,58,"outOff"],[43,66,45,64],[43,68,45,66],[44,4,46,2],[44,8,46,6,"state"],[44,13,46,11],[44,16,46,14],[44,20,46,18],[44,21,46,19,"_edeState"],[44,30,46,28],[45,4,48,2,"state"],[45,9,48,7],[45,10,48,8,"ciphers"],[45,17,48,15],[45,18,48,16],[45,19,48,17],[45,20,48,18],[45,21,48,19,"_update"],[45,28,48,26],[45,29,48,27,"inp"],[45,32,48,30],[45,34,48,32,"inOff"],[45,39,48,37],[45,41,48,39,"out"],[45,44,48,42],[45,46,48,44,"outOff"],[45,52,48,50],[45,53,48,51],[46,4,49,2,"state"],[46,9,49,7],[46,10,49,8,"ciphers"],[46,17,49,15],[46,18,49,16],[46,19,49,17],[46,20,49,18],[46,21,49,19,"_update"],[46,28,49,26],[46,29,49,27,"out"],[46,32,49,30],[46,34,49,32,"outOff"],[46,40,49,38],[46,42,49,40,"out"],[46,45,49,43],[46,47,49,45,"outOff"],[46,53,49,51],[46,54,49,52],[47,4,50,2,"state"],[47,9,50,7],[47,10,50,8,"ciphers"],[47,17,50,15],[47,18,50,16],[47,19,50,17],[47,20,50,18],[47,21,50,19,"_update"],[47,28,50,26],[47,29,50,27,"out"],[47,32,50,30],[47,34,50,32,"outOff"],[47,40,50,38],[47,42,50,40,"out"],[47,45,50,43],[47,47,50,45,"outOff"],[47,53,50,51],[47,54,50,52],[48,2,51,0],[48,3,51,1],[49,2,53,0,"EDE"],[49,5,53,3],[49,6,53,4,"prototype"],[49,15,53,13],[49,16,53,14,"_pad"],[49,20,53,18],[49,23,53,21,"_$$_REQUIRE"],[49,34,53,21],[49,35,53,21,"_dependencyMap"],[49,49,53,21],[49,63,53,25,"prototype"],[49,72,53,34],[49,73,53,35,"_pad"],[49,77,53,39],[50,2,54,0,"EDE"],[50,5,54,3],[50,6,54,4,"prototype"],[50,15,54,13],[50,16,54,14,"_unpad"],[50,22,54,20],[50,25,54,23,"_$$_REQUIRE"],[50,36,54,23],[50,37,54,23,"_dependencyMap"],[50,51,54,23],[50,65,54,27,"prototype"],[50,74,54,36],[50,75,54,37,"_unpad"],[50,81,54,43],[51,0,54,44],[51,3]],"functionMap":{"names":["<global>","EDEState","EDE","create","_update"],"mappings":"AAA;ACQ;CDoB;AEE;CFK;aGK;CHE;wBIE;CJM"}},"type":"js/module"}]}