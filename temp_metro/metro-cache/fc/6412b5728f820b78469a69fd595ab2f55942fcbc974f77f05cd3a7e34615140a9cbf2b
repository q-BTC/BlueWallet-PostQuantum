{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":208,"column":0,"index":7041}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":208,"column":0,"index":7041}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":208,"column":0,"index":7041}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":208,"column":0,"index":7041}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"crypto","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"6Athyt5cKjlNulGJomFjL8BysnY="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":108},"end":{"line":4,"column":41,"index":149}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"./noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":150},"end":{"line":5,"column":30,"index":180}}],"key":"P2i+0zcTrVj38bzOPRKRbqJ52aI="}},{"name":"ecpair","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":39,"index":73}}],"key":"u6yWeivdFv15Am3FmwSfeX38wPs="}},{"name":"bech32","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":74},"end":{"line":3,"column":33,"index":107}},{"start":{"line":3,"column":0,"index":74},"end":{"line":3,"column":33,"index":107}},{"start":{"line":3,"column":0,"index":74},"end":{"line":3,"column":33,"index":107}}],"key":"KBm2VVHsEwphrM2nef929wSWtCA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SilentPayment = void 0;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var crypto = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[4], \"crypto\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[5], \"bitcoinjs-lib\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var ECPair = (0, _$$_REQUIRE(_dependencyMap[7], \"ecpair\").ECPairFactory)(_noble_ecc.default);\n  bitcoin.initEccLib(_noble_ecc.default);\n  function taggedHash(tag, data) {\n    var hash = crypto.createHash(\"sha256\");\n    var tagHash = hash.update(tag, \"utf-8\").digest();\n    var ss = Buffer.concat([tagHash, tagHash, data]);\n    return crypto.createHash(\"sha256\").update(ss).digest();\n  }\n  var G = Buffer.from(\"0279be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\", \"hex\");\n  var SilentPayment = exports.SilentPayment = /*#__PURE__*/function () {\n    function SilentPayment() {\n      (0, _classCallCheck2.default)(this, SilentPayment);\n    }\n    return (0, _createClass2.default)(SilentPayment, [{\n      key: \"createTransaction\",\n      value:\n      /**\n       * Takes the UTXO that the sender is going to spend in a transaction,\n       * and an array of Targets which may or may not have\n       * SilentPayment identifiers (destinations), and returns an array of\n       * Targets which have SilentPayment identifiers unwrapped into taproot addresses.\n       * If target initially already had onchain address its skipped.\n       * Numeric values (if present) for targets are passed through.\n       */\n      function createTransaction(utxos, targets) {\n        var ret = new Array(targets.length);\n        var silentPaymentGroups = [];\n        var _loop = function _loop() {\n          var _target$address;\n          var target = targets[i];\n          if (!((_target$address = target.address) != null && _target$address.startsWith(\"sp1\"))) {\n            ret[i] = target; // passthrough\n            return 1; // continue\n          }\n          var result = _$$_REQUIRE(_dependencyMap[8], \"bech32\").bech32m.decode(target.address, 118);\n          var version = result.words.shift();\n          if (version !== 0) {\n            throw new Error(\"Unexpected version of silent payment code\");\n          }\n          var data = _$$_REQUIRE(_dependencyMap[8], \"bech32\").bech32m.fromWords(result.words);\n          var Bscan = Buffer.from(data.slice(0, 33));\n          var Bm = Buffer.from(data.slice(33));\n\n          // Addresses with the same Bscan key all belong to the same recipient\n          var recipient = silentPaymentGroups.find(function (group) {\n            return Buffer.compare(group.Bscan, Bscan) === 0;\n          });\n          if (recipient) {\n            recipient.BmValues.push([Bm, target.value, i]);\n          } else {\n            silentPaymentGroups.push({\n              Bscan: Bscan,\n              BmValues: [[Bm, target.value, i]]\n            });\n          }\n        };\n        for (var i = 0; i < targets.length; i++) {\n          if (_loop()) continue;\n        }\n        if (silentPaymentGroups.length === 0) return ret; // passthrough\n\n        var a = SilentPayment._sumPrivkeys(utxos);\n        var A = Buffer.from(_noble_ecc.default.pointFromScalar(a));\n        var outpoint_hash = SilentPayment._outpointsHash(utxos, A);\n\n        // Generating Pmk for each Bm in the group\n        for (var group of silentPaymentGroups) {\n          // Bscan * a * outpoint_hash\n          var ecdh_shared_secret_step1 = Buffer.from(_noble_ecc.default.privateMultiply(outpoint_hash, a));\n          var ecdh_shared_secret = Buffer.from(_noble_ecc.default.getSharedSecret(ecdh_shared_secret_step1, group.Bscan));\n          var k = 0;\n          for (var _ref of group.BmValues) {\n            var _ref2 = (0, _slicedToArray2.default)(_ref, 3);\n            var Bm = _ref2[0];\n            var amount = _ref2[1];\n            var _i = _ref2[2];\n            var tk = taggedHash(\"BIP0352/SharedSecret\", Buffer.concat([ecdh_shared_secret, SilentPayment._ser32(k)]));\n\n            // Let Pmk = tkÂ·G + Bm\n            var Pmk = Buffer.from(_noble_ecc.default.pointAdd(_noble_ecc.default.pointMultiply(G, tk), Bm));\n\n            // Encode Pmk as a BIP341 taproot output\n            var address = SilentPayment.pubkeyToAddress(Pmk.slice(1).toString(\"hex\"));\n            var newTarget = {\n              address: address\n            };\n            newTarget.value = amount;\n            ret[_i] = newTarget;\n            k += 1;\n          }\n        }\n        return ret;\n      }\n    }], [{\n      key: \"_outpointsHash\",\n      value: function _outpointsHash(parameters, A) {\n        var bufferConcat = Buffer.alloc(0);\n        var outpoints = [];\n        for (var parameter of parameters) {\n          outpoints.push(Buffer.concat([Buffer.from(parameter.txid, \"hex\").reverse(), SilentPayment._ser32(parameter.vout).reverse()]));\n        }\n        outpoints.sort(Buffer.compare);\n        var smallest_outpoint = outpoints[0];\n        return taggedHash(\"BIP0352/Inputs\", Buffer.concat([Buffer.from(smallest_outpoint), Buffer.from(A)]));\n      }\n\n      /**\n       * Serializes a 32-bit unsigned integer i as a 4-byte big-endian\n       * @param i {number} The number to serialize\n       * @returns {Buffer} The serialized number\n       * @private\n       * */\n    }, {\n      key: \"_ser32\",\n      value: function _ser32(i) {\n        var returnValue = Buffer.allocUnsafe(4);\n        returnValue.writeUInt32BE(i);\n        return returnValue;\n      }\n\n      /**\n       * Sums the private keys of the UTXOs\n       * @param utxos {UTXO[]}\n       * @returns {Buffer} The sum of the private keys\n       * @private\n       **/\n    }, {\n      key: \"_sumPrivkeys\",\n      value: function _sumPrivkeys(utxos) {\n        if (utxos.length === 0) {\n          throw new Error(\"No UTXOs provided\");\n        }\n        var keys = [];\n        for (var utxo of utxos) {\n          var key = ECPair.fromWIF(utxo.wif).privateKey;\n          switch (utxo.utxoType) {\n            case \"non-eligible\":\n              // Non-eligible UTXOs can be spent in the transaction, but are not used for the\n              // shared secret derivation. Note: we don't check that the private key is valid\n              // for non-eligible utxos because its possible the sender is following a different\n              // signing protocol for these utxos. For silent payments eligible utxos, we require\n              // access to the private key.\n              break;\n            case \"p2tr\":\n              if (key === undefined) {\n                throw new Error(\"No private key found for eligible UTXO\");\n              }\n\n              // For taproot, check if the seckey results in an odd y-value and negate if so\n              if (_noble_ecc.default.pointFromScalar(key)[0] === 0x03) {\n                key = Buffer.from(_noble_ecc.default.privateNegate(key));\n              }\n            case \"p2wpkh\":\n            case \"p2sh-p2wpkh\":\n            case \"p2pkh\":\n              if (key === undefined) {\n                throw new Error(\"No private key found for eligible UTXO\");\n              }\n              keys.push(key);\n              break;\n          }\n        }\n        if (keys.length === 0) {\n          throw new Error(\"No eligible UTXOs with private keys found\");\n        }\n\n        // summary of every item in array\n        var ret = keys.reduce(function (acc, key) {\n          return Buffer.from(_noble_ecc.default.privateAdd(acc, key));\n        });\n        return ret;\n      }\n    }, {\n      key: \"isPaymentCodeValid\",\n      value: function isPaymentCodeValid(pc) {\n        try {\n          var result = _$$_REQUIRE(_dependencyMap[8], \"bech32\").bech32m.decode(pc, 118);\n          var version = result.words.shift();\n          if (version !== 0) {\n            return false;\n          }\n        } catch (_) {\n          return false;\n        }\n        return true;\n      }\n    }, {\n      key: \"pubkeyToAddress\",\n      value: function pubkeyToAddress(hex) {\n        var publicKey = Buffer.from(\"5120\" + hex, \"hex\");\n        return bitcoin.address.fromOutputScript(publicKey, bitcoin.networks.bitcoin);\n      }\n    }, {\n      key: \"addressToPubkey\",\n      value: function addressToPubkey(address) {\n        return bitcoin.address.toOutputScript(address).subarray(2).toString(\"hex\");\n      }\n    }]);\n  }();\n});","lineCount":214,"map":[[10,2,1,0],[10,6,1,0,"crypto"],[10,12,1,0],[10,15,1,0,"_interopRequireWildcard"],[10,38,1,0],[10,39,1,0,"_$$_REQUIRE"],[10,50,1,0],[10,51,1,0,"_dependencyMap"],[10,65,1,0],[11,2,4,0],[11,6,4,0,"bitcoin"],[11,13,4,0],[11,16,4,0,"_interopRequireWildcard"],[11,39,4,0],[11,40,4,0,"_$$_REQUIRE"],[11,51,4,0],[11,52,4,0,"_dependencyMap"],[11,66,4,0],[12,2,5,0],[12,6,5,0,"_noble_ecc"],[12,16,5,0],[12,19,5,0,"_interopRequireDefault"],[12,41,5,0],[12,42,5,0,"_$$_REQUIRE"],[12,53,5,0],[12,54,5,0,"_dependencyMap"],[12,68,5,0],[13,2,5,30],[13,11,5,30,"_getRequireWildcardCache"],[13,36,5,30,"e"],[13,37,5,30],[13,66,5,30,"WeakMap"],[13,73,5,30],[13,92,5,30,"r"],[13,93,5,30],[13,100,5,30,"WeakMap"],[13,107,5,30],[13,111,5,30,"t"],[13,112,5,30],[13,119,5,30,"WeakMap"],[13,126,5,30],[13,138,5,30,"_getRequireWildcardCache"],[13,162,5,30],[13,174,5,30,"_getRequireWildcardCache"],[13,199,5,30,"e"],[13,200,5,30],[13,211,5,30,"e"],[13,212,5,30],[13,215,5,30,"t"],[13,216,5,30],[13,219,5,30,"r"],[13,220,5,30],[13,225,5,30,"e"],[13,226,5,30],[14,2,5,30],[14,11,5,30,"_interopRequireWildcard"],[14,35,5,30,"e"],[14,36,5,30],[14,38,5,30,"r"],[14,39,5,30],[14,48,5,30,"r"],[14,49,5,30],[14,53,5,30,"e"],[14,54,5,30],[14,58,5,30,"e"],[14,59,5,30],[14,60,5,30,"__esModule"],[14,70,5,30],[14,79,5,30,"e"],[14,80,5,30],[14,95,5,30,"e"],[14,96,5,30],[14,119,5,30,"e"],[14,120,5,30],[14,145,5,30,"e"],[14,146,5,30],[14,157,5,30,"default"],[14,164,5,30],[14,166,5,30,"e"],[14,167,5,30],[14,175,5,30,"t"],[14,176,5,30],[14,179,5,30,"_getRequireWildcardCache"],[14,203,5,30],[14,204,5,30,"r"],[14,205,5,30],[14,212,5,30,"t"],[14,213,5,30],[14,217,5,30,"t"],[14,218,5,30],[14,219,5,30,"has"],[14,222,5,30],[14,223,5,30,"e"],[14,224,5,30],[14,234,5,30,"t"],[14,235,5,30],[14,236,5,30,"get"],[14,239,5,30],[14,240,5,30,"e"],[14,241,5,30],[14,248,5,30,"n"],[14,249,5,30],[14,254,5,30,"__proto__"],[14,263,5,30],[14,273,5,30,"a"],[14,274,5,30],[14,277,5,30,"Object"],[14,283,5,30],[14,284,5,30,"defineProperty"],[14,298,5,30],[14,302,5,30,"Object"],[14,308,5,30],[14,309,5,30,"getOwnPropertyDescriptor"],[14,333,5,30],[14,344,5,30,"u"],[14,345,5,30],[14,349,5,30,"e"],[14,350,5,30],[14,370,5,30,"u"],[14,371,5,30],[14,378,5,30,"hasOwnProperty"],[14,392,5,30],[14,393,5,30,"call"],[14,397,5,30],[14,398,5,30,"e"],[14,399,5,30],[14,401,5,30,"u"],[14,402,5,30],[14,411,5,30,"i"],[14,412,5,30],[14,415,5,30,"a"],[14,416,5,30],[14,419,5,30,"Object"],[14,425,5,30],[14,426,5,30,"getOwnPropertyDescriptor"],[14,450,5,30],[14,451,5,30,"e"],[14,452,5,30],[14,454,5,30,"u"],[14,455,5,30],[14,465,5,30,"i"],[14,466,5,30],[14,471,5,30,"i"],[14,472,5,30],[14,473,5,30,"get"],[14,476,5,30],[14,480,5,30,"i"],[14,481,5,30],[14,482,5,30,"set"],[14,485,5,30],[14,489,5,30,"Object"],[14,495,5,30],[14,496,5,30,"defineProperty"],[14,510,5,30],[14,511,5,30,"n"],[14,512,5,30],[14,514,5,30,"u"],[14,515,5,30],[14,517,5,30,"i"],[14,518,5,30],[14,522,5,30,"n"],[14,523,5,30],[14,524,5,30,"u"],[14,525,5,30],[14,529,5,30,"e"],[14,530,5,30],[14,531,5,30,"u"],[14,532,5,30],[14,544,5,30,"n"],[14,545,5,30],[14,546,5,30,"default"],[14,553,5,30],[14,556,5,30,"e"],[14,557,5,30],[14,559,5,30,"t"],[14,560,5,30],[14,564,5,30,"t"],[14,565,5,30],[14,566,5,30,"set"],[14,569,5,30],[14,570,5,30,"e"],[14,571,5,30],[14,573,5,30,"n"],[14,574,5,30],[14,577,5,30,"n"],[14,578,5,30],[15,2,7,0],[15,6,7,6,"ECPair"],[15,12,7,12],[15,15,7,15],[15,19,7,15,"ECPairFactory"],[15,49,7,15],[15,50,7,15,"ECPairFactory"],[15,73,7,28],[15,75,7,29,"ecc"],[15,93,7,32],[15,94,7,33],[16,2,8,0,"bitcoin"],[16,9,8,7],[16,10,8,8,"initEccLib"],[16,20,8,18],[16,21,8,19,"ecc"],[16,39,8,22],[16,40,8,23],[17,2,29,0],[17,11,29,9,"taggedHash"],[17,21,29,19,"taggedHash"],[17,22,29,20,"tag"],[17,25,29,31],[17,27,29,33,"data"],[17,31,29,45],[17,33,29,55],[18,4,30,2],[18,8,30,8,"hash"],[18,12,30,12],[18,15,30,15,"crypto"],[18,21,30,21],[18,22,30,22,"createHash"],[18,32,30,32],[18,33,30,33],[18,41,30,41],[18,42,30,42],[19,4,31,2],[19,8,31,8,"tagHash"],[19,15,31,15],[19,18,31,18,"hash"],[19,22,31,22],[19,23,31,23,"update"],[19,29,31,29],[19,30,31,30,"tag"],[19,33,31,33],[19,35,31,35],[19,42,31,42],[19,43,31,43],[19,44,31,44,"digest"],[19,50,31,50],[19,51,31,51],[19,52,31,52],[20,4,32,2],[20,8,32,8,"ss"],[20,10,32,10],[20,13,32,13,"Buffer"],[20,19,32,19],[20,20,32,20,"concat"],[20,26,32,26],[20,27,32,27],[20,28,32,28,"tagHash"],[20,35,32,35],[20,37,32,37,"tagHash"],[20,44,32,44],[20,46,32,46,"data"],[20,50,32,50],[20,51,32,51],[20,52,32,52],[21,4,33,2],[21,11,33,9,"crypto"],[21,17,33,15],[21,18,33,16,"createHash"],[21,28,33,26],[21,29,33,27],[21,37,33,35],[21,38,33,36],[21,39,33,37,"update"],[21,45,33,43],[21,46,33,44,"ss"],[21,48,33,46],[21,49,33,47],[21,50,33,48,"digest"],[21,56,33,54],[21,57,33,55],[21,58,33,56],[22,2,34,0],[23,2,36,0],[23,6,36,6,"G"],[23,7,36,7],[23,10,36,10,"Buffer"],[23,16,36,16],[23,17,36,17,"from"],[23,21,36,21],[23,22,36,22],[23,90,36,90],[23,92,36,92],[23,97,36,97],[23,98,36,98],[24,2,36,99],[24,6,38,13,"SilentPayment"],[24,19,38,26],[24,22,38,26,"exports"],[24,29,38,26],[24,30,38,26,"SilentPayment"],[24,43,38,26],[25,4,38,26],[25,13,38,26,"SilentPayment"],[25,27,38,26],[26,6,38,26],[26,10,38,26,"_classCallCheck2"],[26,26,38,26],[26,27,38,26,"default"],[26,34,38,26],[26,42,38,26,"SilentPayment"],[26,55,38,26],[27,4,38,26],[28,4,38,26],[28,15,38,26,"_createClass2"],[28,28,38,26],[28,29,38,26,"default"],[28,36,38,26],[28,38,38,26,"SilentPayment"],[28,51,38,26],[29,6,38,26,"key"],[29,9,38,26],[30,6,38,26,"value"],[30,11,38,26],[31,6,39,2],[32,0,40,0],[33,0,41,0],[34,0,42,0],[35,0,43,0],[36,0,44,0],[37,0,45,0],[38,0,46,0],[39,6,47,2],[39,15,47,2,"createTransaction"],[39,32,47,19,"createTransaction"],[39,33,47,20,"utxos"],[39,38,47,33],[39,40,47,35,"targets"],[39,47,47,52],[39,49,47,64],[40,8,48,4],[40,12,48,10,"ret"],[40,15,48,23],[40,18,48,26],[40,22,48,30,"Array"],[40,27,48,35],[40,28,48,36,"targets"],[40,35,48,43],[40,36,48,44,"length"],[40,42,48,50],[40,43,48,51],[41,8,50,4],[41,12,50,10,"silentPaymentGroups"],[41,31,50,56],[41,34,50,59],[41,36,50,61],[42,8,50,62],[42,12,50,62,"_loop"],[42,17,50,62],[42,29,50,62,"_loop"],[42,35,50,62],[42,37,51,45],[43,10,51,45],[43,14,51,45,"_target$address"],[43,29,51,45],[44,10,52,6],[44,14,52,12,"target"],[44,20,52,18],[44,23,52,21,"targets"],[44,30,52,28],[44,31,52,29,"i"],[44,32,52,30],[44,33,52,31],[45,10,53,6],[45,14,53,10],[45,17,53,10,"_target$address"],[45,32,53,10],[45,35,53,11,"target"],[45,41,53,17],[45,42,53,18,"address"],[45,49,53,25],[45,62,53,11,"_target$address"],[45,77,53,11],[45,78,53,27,"startsWith"],[45,88,53,37],[45,89,53,38],[45,94,53,43],[45,95,53,44],[45,98,53,46],[46,12,54,8,"ret"],[46,15,54,11],[46,16,54,12,"i"],[46,17,54,13],[46,18,54,14],[46,21,54,17,"target"],[46,27,54,23],[46,28,54,24],[46,29,54,25],[47,12,54,25],[48,10,56,6],[49,10,58,6],[49,14,58,12,"result"],[49,20,58,18],[49,23,58,21,"bech32m"],[49,53,58,21],[49,54,58,21,"bech32m"],[49,71,58,28],[49,72,58,29,"decode"],[49,78,58,35],[49,79,58,36,"target"],[49,85,58,42],[49,86,58,43,"address"],[49,93,58,50],[49,95,58,52],[49,98,58,55],[49,99,58,56],[50,10,59,6],[50,14,59,12,"version"],[50,21,59,19],[50,24,59,22,"result"],[50,30,59,28],[50,31,59,29,"words"],[50,36,59,34],[50,37,59,35,"shift"],[50,42,59,40],[50,43,59,41],[50,44,59,42],[51,10,60,6],[51,14,60,10,"version"],[51,21,60,17],[51,26,60,22],[51,27,60,23],[51,29,60,25],[52,12,61,8],[52,18,61,14],[52,22,61,18,"Error"],[52,27,61,23],[52,28,61,24],[52,71,61,67],[52,72,61,68],[53,10,62,6],[54,10,63,6],[54,14,63,12,"data"],[54,18,63,16],[54,21,63,19,"bech32m"],[54,51,63,19],[54,52,63,19,"bech32m"],[54,69,63,26],[54,70,63,27,"fromWords"],[54,79,63,36],[54,80,63,37,"result"],[54,86,63,43],[54,87,63,44,"words"],[54,92,63,49],[54,93,63,50],[55,10,64,6],[55,14,64,12,"Bscan"],[55,19,64,17],[55,22,64,20,"Buffer"],[55,28,64,26],[55,29,64,27,"from"],[55,33,64,31],[55,34,64,32,"data"],[55,38,64,36],[55,39,64,37,"slice"],[55,44,64,42],[55,45,64,43],[55,46,64,44],[55,48,64,46],[55,50,64,48],[55,51,64,49],[55,52,64,50],[56,10,65,6],[56,14,65,12,"Bm"],[56,16,65,14],[56,19,65,17,"Buffer"],[56,25,65,23],[56,26,65,24,"from"],[56,30,65,28],[56,31,65,29,"data"],[56,35,65,33],[56,36,65,34,"slice"],[56,41,65,39],[56,42,65,40],[56,44,65,42],[56,45,65,43],[56,46,65,44],[58,10,67,6],[59,10,68,6],[59,14,68,12,"recipient"],[59,23,68,21],[59,26,68,24,"silentPaymentGroups"],[59,45,68,43],[59,46,68,44,"find"],[59,50,68,48],[59,51,68,49],[59,61,68,50,"group"],[59,66,68,55],[60,12,68,55],[60,19,68,60,"Buffer"],[60,25,68,66],[60,26,68,67,"compare"],[60,33,68,74],[60,34,68,75,"group"],[60,39,68,80],[60,40,68,81,"Bscan"],[60,45,68,86],[60,47,68,88,"Bscan"],[60,52,68,93],[60,53,68,94],[60,58,68,99],[60,59,68,100],[61,10,68,100],[61,12,68,101],[62,10,69,6],[62,14,69,10,"recipient"],[62,23,69,19],[62,25,69,21],[63,12,70,8,"recipient"],[63,21,70,17],[63,22,70,18,"BmValues"],[63,30,70,26],[63,31,70,27,"push"],[63,35,70,31],[63,36,70,32],[63,37,70,33,"Bm"],[63,39,70,35],[63,41,70,37,"target"],[63,47,70,43],[63,48,70,44,"value"],[63,53,70,49],[63,55,70,51,"i"],[63,56,70,52],[63,57,70,53],[63,58,70,54],[64,10,71,6],[64,11,71,7],[64,17,71,13],[65,12,72,8,"silentPaymentGroups"],[65,31,72,27],[65,32,72,28,"push"],[65,36,72,32],[65,37,72,33],[66,14,73,10,"Bscan"],[66,19,73,15],[66,21,73,17,"Bscan"],[66,26,73,22],[67,14,74,10,"BmValues"],[67,22,74,18],[67,24,74,20],[67,25,74,21],[67,26,74,22,"Bm"],[67,28,74,24],[67,30,74,26,"target"],[67,36,74,32],[67,37,74,33,"value"],[67,42,74,38],[67,44,74,40,"i"],[67,45,74,41],[67,46,74,42],[68,12,75,8],[68,13,75,9],[68,14,75,10],[69,10,76,6],[70,8,77,4],[70,9,77,5],[71,8,51,4],[71,13,51,9],[71,17,51,13,"i"],[71,18,51,14],[71,21,51,17],[71,22,51,18],[71,24,51,20,"i"],[71,25,51,21],[71,28,51,24,"targets"],[71,35,51,31],[71,36,51,32,"length"],[71,42,51,38],[71,44,51,40,"i"],[71,45,51,41],[71,47,51,43],[72,10,51,43],[72,14,51,43,"_loop"],[72,19,51,43],[72,23,55,8],[73,8,55,17],[74,8,78,4],[74,12,78,8,"silentPaymentGroups"],[74,31,78,27],[74,32,78,28,"length"],[74,38,78,34],[74,43,78,39],[74,44,78,40],[74,46,78,42],[74,53,78,49,"ret"],[74,56,78,52],[74,57,78,53],[74,58,78,54],[76,8,80,4],[76,12,80,10,"a"],[76,13,80,11],[76,16,80,14,"SilentPayment"],[76,29,80,27],[76,30,80,28,"_sumPrivkeys"],[76,42,80,40],[76,43,80,41,"utxos"],[76,48,80,46],[76,49,80,47],[77,8,81,4],[77,12,81,10,"A"],[77,13,81,11],[77,16,81,14,"Buffer"],[77,22,81,20],[77,23,81,21,"from"],[77,27,81,25],[77,28,81,26,"ecc"],[77,46,81,29],[77,47,81,30,"pointFromScalar"],[77,62,81,45],[77,63,81,46,"a"],[77,64,81,47],[77,65,81,62],[77,66,81,63],[78,8,82,4],[78,12,82,10,"outpoint_hash"],[78,25,82,23],[78,28,82,26,"SilentPayment"],[78,41,82,39],[78,42,82,40,"_outpointsHash"],[78,56,82,54],[78,57,82,55,"utxos"],[78,62,82,60],[78,64,82,62,"A"],[78,65,82,63],[78,66,82,64],[80,8,84,4],[81,8,85,4],[81,13,85,9],[81,17,85,15,"group"],[81,22,85,20],[81,26,85,24,"silentPaymentGroups"],[81,45,85,43],[81,47,85,45],[82,10,86,6],[83,10,87,6],[83,14,87,12,"ecdh_shared_secret_step1"],[83,38,87,36],[83,41,87,39,"Buffer"],[83,47,87,45],[83,48,87,46,"from"],[83,52,87,50],[83,53,87,51,"ecc"],[83,71,87,54],[83,72,87,55,"privateMultiply"],[83,87,87,70],[83,88,87,71,"outpoint_hash"],[83,101,87,84],[83,103,87,86,"a"],[83,104,87,87],[83,105,87,102],[83,106,87,103],[84,10,88,6],[84,14,88,12,"ecdh_shared_secret"],[84,32,88,30],[84,35,88,33,"Buffer"],[84,41,88,39],[84,42,88,40,"from"],[84,46,88,44],[84,47,88,45,"ecc"],[84,65,88,48],[84,66,88,49,"getSharedSecret"],[84,81,88,64],[84,82,88,65,"ecdh_shared_secret_step1"],[84,106,88,89],[84,108,88,91,"group"],[84,113,88,96],[84,114,88,97,"Bscan"],[84,119,88,102],[84,120,88,117],[84,121,88,118],[85,10,90,6],[85,14,90,10,"k"],[85,15,90,11],[85,18,90,14],[85,19,90,15],[86,10,91,6],[86,19,91,6,"_ref"],[86,23,91,6],[86,27,91,36,"group"],[86,32,91,41],[86,33,91,42,"BmValues"],[86,41,91,50],[86,43,91,52],[87,12,91,52],[87,16,91,52,"_ref2"],[87,21,91,52],[87,28,91,52,"_slicedToArray2"],[87,43,91,52],[87,44,91,52,"default"],[87,51,91,52],[87,53,91,52,"_ref"],[87,57,91,52],[88,12,91,52],[88,16,91,18,"Bm"],[88,18,91,20],[88,21,91,20,"_ref2"],[88,26,91,20],[89,12,91,20],[89,16,91,22,"amount"],[89,22,91,28],[89,25,91,28,"_ref2"],[89,30,91,28],[90,12,91,28],[90,16,91,30,"i"],[90,18,91,31],[90,21,91,31,"_ref2"],[90,26,91,31],[91,12,92,8],[91,16,92,14,"tk"],[91,18,92,16],[91,21,92,19,"taggedHash"],[91,31,92,29],[91,32,92,30],[91,54,92,52],[91,56,92,54,"Buffer"],[91,62,92,60],[91,63,92,61,"concat"],[91,69,92,67],[91,70,92,68],[91,71,92,69,"ecdh_shared_secret"],[91,89,92,87],[91,91,92,90,"SilentPayment"],[91,104,92,103],[91,105,92,104,"_ser32"],[91,111,92,110],[91,112,92,111,"k"],[91,113,92,112],[91,114,92,113],[91,115,92,114],[91,116,92,115],[91,117,92,116],[93,12,94,8],[94,12,95,8],[94,16,95,14,"Pmk"],[94,19,95,17],[94,22,95,20,"Buffer"],[94,28,95,26],[94,29,95,27,"from"],[94,33,95,31],[94,34,95,32,"ecc"],[94,52,95,35],[94,53,95,36,"pointAdd"],[94,61,95,44],[94,62,95,45,"ecc"],[94,80,95,48],[94,81,95,49,"pointMultiply"],[94,94,95,62],[94,95,95,63,"G"],[94,96,95,64],[94,98,95,66,"tk"],[94,100,95,68],[94,101,95,69],[94,103,95,85,"Bm"],[94,105,95,87],[94,106,95,102],[94,107,95,103],[96,12,97,8],[97,12,98,8],[97,16,98,14,"address"],[97,23,98,21],[97,26,98,24,"SilentPayment"],[97,39,98,37],[97,40,98,38,"pubkeyToAddress"],[97,55,98,53],[97,56,98,54,"Pmk"],[97,59,98,57],[97,60,98,58,"slice"],[97,65,98,63],[97,66,98,64],[97,67,98,65],[97,68,98,66],[97,69,98,67,"toString"],[97,77,98,75],[97,78,98,76],[97,83,98,81],[97,84,98,82],[97,85,98,83],[98,12,99,8],[98,16,99,14,"newTarget"],[98,25,99,31],[98,28,99,34],[99,14,99,36,"address"],[99,21,99,43],[99,23,99,36,"address"],[100,12,99,44],[100,13,99,45],[101,12,100,8,"newTarget"],[101,21,100,17],[101,22,100,18,"value"],[101,27,100,23],[101,30,100,26,"amount"],[101,36,100,32],[102,12,101,8,"ret"],[102,15,101,11],[102,16,101,12,"i"],[102,18,101,13],[102,19,101,14],[102,22,101,17,"newTarget"],[102,31,101,26],[103,12,102,8,"k"],[103,13,102,9],[103,17,102,13],[103,18,102,14],[104,10,103,6],[105,8,104,4],[106,8,105,4],[106,15,105,11,"ret"],[106,18,105,14],[107,6,106,2],[108,4,106,3],[109,6,106,3,"key"],[109,9,106,3],[110,6,106,3,"value"],[110,11,106,3],[110,13,108,2],[110,22,108,9,"_outpointsHash"],[110,36,108,23,"_outpointsHash"],[110,37,108,24,"parameters"],[110,47,108,42],[110,49,108,44,"A"],[110,50,108,53],[110,52,108,63],[111,8,109,4],[111,12,109,8,"bufferConcat"],[111,24,109,20],[111,27,109,23,"Buffer"],[111,33,109,29],[111,34,109,30,"alloc"],[111,39,109,35],[111,40,109,36],[111,41,109,37],[111,42,109,38],[112,8,110,4],[112,12,110,10,"outpoints"],[112,21,110,34],[112,24,110,37],[112,26,110,39],[113,8,111,4],[113,13,111,9],[113,17,111,15,"parameter"],[113,26,111,24],[113,30,111,28,"parameters"],[113,40,111,38],[113,42,111,40],[114,10,112,6,"outpoints"],[114,19,112,15],[114,20,112,16,"push"],[114,24,112,20],[114,25,112,21,"Buffer"],[114,31,112,27],[114,32,112,28,"concat"],[114,38,112,34],[114,39,112,35],[114,40,112,36,"Buffer"],[114,46,112,42],[114,47,112,43,"from"],[114,51,112,47],[114,52,112,48,"parameter"],[114,61,112,57],[114,62,112,58,"txid"],[114,66,112,62],[114,68,112,64],[114,73,112,69],[114,74,112,70],[114,75,112,71,"reverse"],[114,82,112,78],[114,83,112,79],[114,84,112,80],[114,86,112,82,"SilentPayment"],[114,99,112,95],[114,100,112,96,"_ser32"],[114,106,112,102],[114,107,112,103,"parameter"],[114,116,112,112],[114,117,112,113,"vout"],[114,121,112,117],[114,122,112,118],[114,123,112,119,"reverse"],[114,130,112,126],[114,131,112,127],[114,132,112,128],[114,133,112,129],[114,134,112,130],[114,135,112,131],[115,8,113,4],[116,8,114,4,"outpoints"],[116,17,114,13],[116,18,114,14,"sort"],[116,22,114,18],[116,23,114,19,"Buffer"],[116,29,114,25],[116,30,114,26,"compare"],[116,37,114,33],[116,38,114,34],[117,8,115,4],[117,12,115,10,"smallest_outpoint"],[117,29,115,27],[117,32,115,30,"outpoints"],[117,41,115,39],[117,42,115,40],[117,43,115,41],[117,44,115,42],[118,8,116,4],[118,15,116,11,"taggedHash"],[118,25,116,21],[118,26,116,22],[118,42,116,38],[118,44,116,40,"Buffer"],[118,50,116,46],[118,51,116,47,"concat"],[118,57,116,53],[118,58,116,54],[118,59,116,55,"Buffer"],[118,65,116,61],[118,66,116,62,"from"],[118,70,116,66],[118,71,116,67,"smallest_outpoint"],[118,88,116,84],[118,89,116,85],[118,91,116,87,"Buffer"],[118,97,116,93],[118,98,116,94,"from"],[118,102,116,98],[118,103,116,99,"A"],[118,104,116,100],[118,105,116,101],[118,106,116,102],[118,107,116,103],[118,108,116,104],[119,6,117,2],[121,6,119,2],[122,0,120,0],[123,0,121,0],[124,0,122,0],[125,0,123,0],[126,0,124,0],[127,4,119,2],[128,6,119,2,"key"],[128,9,119,2],[129,6,119,2,"value"],[129,11,119,2],[129,13,125,2],[129,22,125,9,"_ser32"],[129,28,125,15,"_ser32"],[129,29,125,16,"i"],[129,30,125,25],[129,32,125,35],[130,8,126,4],[130,12,126,10,"returnValue"],[130,23,126,21],[130,26,126,24,"Buffer"],[130,32,126,30],[130,33,126,31,"allocUnsafe"],[130,44,126,42],[130,45,126,43],[130,46,126,44],[130,47,126,45],[131,8,127,4,"returnValue"],[131,19,127,15],[131,20,127,16,"writeUInt32BE"],[131,33,127,29],[131,34,127,30,"i"],[131,35,127,31],[131,36,127,32],[132,8,128,4],[132,15,128,11,"returnValue"],[132,26,128,22],[133,6,129,2],[135,6,131,2],[136,0,132,0],[137,0,133,0],[138,0,134,0],[139,0,135,0],[140,0,136,0],[141,4,131,2],[142,6,131,2,"key"],[142,9,131,2],[143,6,131,2,"value"],[143,11,131,2],[143,13,137,2],[143,22,137,17,"_sumPrivkeys"],[143,34,137,29,"_sumPrivkeys"],[143,35,137,30,"utxos"],[143,40,137,43],[143,42,137,53],[144,8,138,4],[144,12,138,8,"utxos"],[144,17,138,13],[144,18,138,14,"length"],[144,24,138,20],[144,29,138,25],[144,30,138,26],[144,32,138,28],[145,10,139,6],[145,16,139,12],[145,20,139,16,"Error"],[145,25,139,21],[145,26,139,22],[145,45,139,41],[145,46,139,42],[146,8,140,4],[147,8,142,4],[147,12,142,10,"keys"],[147,16,142,29],[147,19,142,32],[147,21,142,34],[148,8,143,4],[148,13,143,9],[148,17,143,15,"utxo"],[148,21,143,19],[148,25,143,23,"utxos"],[148,30,143,28],[148,32,143,30],[149,10,144,6],[149,14,144,10,"key"],[149,17,144,13],[149,20,144,16,"ECPair"],[149,26,144,22],[149,27,144,23,"fromWIF"],[149,34,144,30],[149,35,144,31,"utxo"],[149,39,144,35],[149,40,144,36,"wif"],[149,43,144,39],[149,44,144,40],[149,45,144,41,"privateKey"],[149,55,144,51],[150,10,145,6],[150,18,145,14,"utxo"],[150,22,145,18],[150,23,145,19,"utxoType"],[150,31,145,27],[151,12,146,8],[151,17,146,13],[151,31,146,27],[152,14,147,10],[153,14,148,10],[154,14,149,10],[155,14,150,10],[156,14,151,10],[157,14,152,10],[158,12,153,8],[158,17,153,13],[158,23,153,19],[159,14,154,10],[159,18,154,14,"key"],[159,21,154,17],[159,26,154,22,"undefined"],[159,35,154,31],[159,37,154,33],[160,16,155,12],[160,22,155,18],[160,26,155,22,"Error"],[160,31,155,27],[160,32,155,28],[160,72,155,68],[160,73,155,69],[161,14,156,10],[163,14,158,10],[164,14,159,10],[164,18,159,14,"ecc"],[164,36,159,17],[164,37,159,18,"pointFromScalar"],[164,52,159,33],[164,53,159,34,"key"],[164,56,159,37],[164,57,159,38],[164,58,159,40],[164,59,159,41],[164,60,159,42],[164,65,159,47],[164,69,159,51],[164,71,159,53],[165,16,160,12,"key"],[165,19,160,15],[165,22,160,18,"Buffer"],[165,28,160,24],[165,29,160,25,"from"],[165,33,160,29],[165,34,160,30,"ecc"],[165,52,160,33],[165,53,160,34,"privateNegate"],[165,66,160,47],[165,67,160,48,"key"],[165,70,160,51],[165,71,160,52],[165,72,160,53],[166,14,161,10],[167,12,162,8],[167,17,162,13],[167,25,162,21],[168,12,163,8],[168,17,163,13],[168,30,163,26],[169,12,164,8],[169,17,164,13],[169,24,164,20],[170,14,165,10],[170,18,165,14,"key"],[170,21,165,17],[170,26,165,22,"undefined"],[170,35,165,31],[170,37,165,33],[171,16,166,12],[171,22,166,18],[171,26,166,22,"Error"],[171,31,166,27],[171,32,166,28],[171,72,166,68],[171,73,166,69],[172,14,167,10],[173,14,168,10,"keys"],[173,18,168,14],[173,19,168,15,"push"],[173,23,168,19],[173,24,168,20,"key"],[173,27,168,23],[173,28,168,24],[174,14,169,10],[175,10,170,6],[176,8,171,4],[177,8,173,4],[177,12,173,8,"keys"],[177,16,173,12],[177,17,173,13,"length"],[177,23,173,19],[177,28,173,24],[177,29,173,25],[177,31,173,27],[178,10,174,6],[178,16,174,12],[178,20,174,16,"Error"],[178,25,174,21],[178,26,174,22],[178,69,174,65],[178,70,174,66],[179,8,175,4],[181,8,177,4],[182,8,178,4],[182,12,178,10,"ret"],[182,15,178,13],[182,18,178,16,"keys"],[182,22,178,20],[182,23,178,21,"reduce"],[182,29,178,27],[182,30,178,28],[182,40,178,29,"acc"],[182,43,178,32],[182,45,178,34,"key"],[182,48,178,37],[182,50,178,42],[183,10,179,6],[183,17,179,13,"Buffer"],[183,23,179,19],[183,24,179,20,"from"],[183,28,179,24],[183,29,179,25,"ecc"],[183,47,179,28],[183,48,179,29,"privateAdd"],[183,58,179,39],[183,59,179,40,"acc"],[183,62,179,43],[183,64,179,45,"key"],[183,67,179,48],[183,68,179,63],[183,69,179,64],[184,8,180,4],[184,9,180,5],[184,10,180,6],[185,8,182,4],[185,15,182,11,"ret"],[185,18,182,14],[186,6,183,2],[187,4,183,3],[188,6,183,3,"key"],[188,9,183,3],[189,6,183,3,"value"],[189,11,183,3],[189,13,185,2],[189,22,185,9,"isPaymentCodeValid"],[189,40,185,27,"isPaymentCodeValid"],[189,41,185,28,"pc"],[189,43,185,38],[189,45,185,40],[190,8,186,4],[190,12,186,8],[191,10,187,6],[191,14,187,12,"result"],[191,20,187,18],[191,23,187,21,"bech32m"],[191,53,187,21],[191,54,187,21,"bech32m"],[191,71,187,28],[191,72,187,29,"decode"],[191,78,187,35],[191,79,187,36,"pc"],[191,81,187,38],[191,83,187,40],[191,86,187,43],[191,87,187,44],[192,10,188,6],[192,14,188,12,"version"],[192,21,188,19],[192,24,188,22,"result"],[192,30,188,28],[192,31,188,29,"words"],[192,36,188,34],[192,37,188,35,"shift"],[192,42,188,40],[192,43,188,41],[192,44,188,42],[193,10,189,6],[193,14,189,10,"version"],[193,21,189,17],[193,26,189,22],[193,27,189,23],[193,29,189,25],[194,12,190,8],[194,19,190,15],[194,24,190,20],[195,10,191,6],[196,8,192,4],[196,9,192,5],[196,10,192,6],[196,17,192,13,"_"],[196,18,192,14],[196,20,192,16],[197,10,193,6],[197,17,193,13],[197,22,193,18],[198,8,194,4],[199,8,196,4],[199,15,196,11],[199,19,196,15],[200,6,197,2],[201,4,197,3],[202,6,197,3,"key"],[202,9,197,3],[203,6,197,3,"value"],[203,11,197,3],[203,13,199,2],[203,22,199,9,"pubkeyToAddress"],[203,37,199,24,"pubkeyToAddress"],[203,38,199,25,"hex"],[203,41,199,36],[203,43,199,46],[204,8,200,4],[204,12,200,10,"publicKey"],[204,21,200,19],[204,24,200,22,"Buffer"],[204,30,200,28],[204,31,200,29,"from"],[204,35,200,33],[204,36,200,34],[204,42,200,40],[204,45,200,43,"hex"],[204,48,200,46],[204,50,200,48],[204,55,200,53],[204,56,200,54],[205,8,201,4],[205,15,201,11,"bitcoin"],[205,22,201,18],[205,23,201,19,"address"],[205,30,201,26],[205,31,201,27,"fromOutputScript"],[205,47,201,43],[205,48,201,44,"publicKey"],[205,57,201,53],[205,59,201,55,"bitcoin"],[205,66,201,62],[205,67,201,63,"networks"],[205,75,201,71],[205,76,201,72,"bitcoin"],[205,83,201,79],[205,84,201,80],[206,6,202,2],[207,4,202,3],[208,6,202,3,"key"],[208,9,202,3],[209,6,202,3,"value"],[209,11,202,3],[209,13,204,2],[209,22,204,9,"addressToPubkey"],[209,37,204,24,"addressToPubkey"],[209,38,204,25,"address"],[209,45,204,40],[209,47,204,50],[210,8,205,4],[210,15,205,11,"bitcoin"],[210,22,205,18],[210,23,205,19,"address"],[210,30,205,26],[210,31,205,27,"toOutputScript"],[210,45,205,41],[210,46,205,42,"address"],[210,53,205,49],[210,54,205,50],[210,55,205,51,"subarray"],[210,63,205,59],[210,64,205,60],[210,65,205,61],[210,66,205,62],[210,67,205,63,"toString"],[210,75,205,71],[210,76,205,72],[210,81,205,77],[210,82,205,78],[211,6,206,2],[212,4,206,3],[213,2,206,3],[214,0,206,3],[214,3]],"functionMap":{"names":["<global>","taggedHash","SilentPayment","SilentPayment#createTransaction","silentPaymentGroups.find$argument_0","SilentPayment._outpointsHash","SilentPayment._ser32","SilentPayment._sumPrivkeys","keys.reduce$argument_0","SilentPayment.isPaymentCodeValid","SilentPayment.pubkeyToAddress","SilentPayment.addressToPubkey"],"mappings":"AAA;AC4B;CDK;OEI;ECS;iDCqB,mDD;GDsC;EGE;GHS;EIQ;GJI;EKQ;4BCyC;KDE;GLG;EOE;GPY;EQE;GRG;ESE;GTE;CFC"}},"type":"js/module"}]}