{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":551,"column":0,"index":18753}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":551,"column":0,"index":18753}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./bufferutils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}},{"start":{"line":4,"column":22,"index":129},"end":{"line":4,"column":46,"index":153}}],"key":"8h+4nPdiw4lgWqmpJE4tN3Ks+fM="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}},{"start":{"line":9,"column":0,"index":301},"end":{"line":9,"column":28,"index":329}},{"start":{"line":8,"column":14,"index":281},"end":{"line":8,"column":32,"index":299}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":16,"index":208},"end":{"line":6,"column":35,"index":227}},{"start":{"line":6,"column":16,"index":208},"end":{"line":6,"column":35,"index":227}},{"start":{"line":7,"column":17,"index":246},"end":{"line":7,"column":36,"index":265}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}},{"start":{"line":5,"column":16,"index":171},"end":{"line":5,"column":35,"index":190}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.Transaction = void 0;\n  function varSliceSize(someScript) {\n    var length = someScript.length;\n    return _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encodingLength(length) + length;\n  }\n  function vectorSize(someVector) {\n    var length = someVector.length;\n    return _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encodingLength(length) + someVector.reduce(function (sum, witness) {\n      return sum + varSliceSize(witness);\n    }, 0);\n  }\n  var EMPTY_BUFFER = Buffer.allocUnsafe(0);\n  var EMPTY_WITNESS = [];\n  var ZERO = Buffer.from('0000000000000000000000000000000000000000000000000000000000000000', 'hex');\n  var ONE = Buffer.from('0000000000000000000000000000000000000000000000000000000000000001', 'hex');\n  var VALUE_UINT64_MAX = Buffer.from('ffffffffffffffff', 'hex');\n  var BLANK_OUTPUT = {\n    script: EMPTY_BUFFER,\n    valueBuffer: VALUE_UINT64_MAX\n  };\n  function isOutput(out) {\n    return out.value !== undefined;\n  }\n  /**\n   * Represents a Bitcoin transaction.\n   */\n  var Transaction = /*#__PURE__*/function () {\n    function Transaction() {\n      _classCallCheck(this, Transaction);\n      this.version = 1;\n      this.locktime = 0;\n      this.ins = [];\n      this.outs = [];\n    }\n    return _createClass(Transaction, [{\n      key: \"isCoinbase\",\n      value: function isCoinbase() {\n        return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash);\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(hash, index, sequence, scriptSig) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").Hash256bit, _$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[3], \"./types\").maybe(_$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32), _$$_REQUIRE(_dependencyMap[3], \"./types\").maybe(_$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer)), arguments);\n        if (_$$_REQUIRE(_dependencyMap[3], \"./types\").Null(sequence)) {\n          sequence = Transaction.DEFAULT_SEQUENCE;\n        }\n        // Add the input and return the input's index\n        return this.ins.push({\n          hash: hash,\n          index: index,\n          script: scriptSig || EMPTY_BUFFER,\n          sequence: sequence,\n          witness: EMPTY_WITNESS\n        }) - 1;\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(scriptPubKey, value) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer, _$$_REQUIRE(_dependencyMap[3], \"./types\").Satoshi), arguments);\n        // Add the output and return the output's index\n        return this.outs.push({\n          script: scriptPubKey,\n          value: value\n        }) - 1;\n      }\n    }, {\n      key: \"hasWitnesses\",\n      value: function hasWitnesses() {\n        return this.ins.some(function (x) {\n          return x.witness.length !== 0;\n        });\n      }\n    }, {\n      key: \"stripWitnesses\",\n      value: function stripWitnesses() {\n        this.ins.forEach(function (input) {\n          input.witness = EMPTY_WITNESS; // Set witness data to an empty array\n        });\n      }\n    }, {\n      key: \"weight\",\n      value: function weight() {\n        var base = this.byteLength(false);\n        var total = this.byteLength(true);\n        return base * 3 + total;\n      }\n    }, {\n      key: \"virtualSize\",\n      value: function virtualSize() {\n        return Math.ceil(this.weight() / 4);\n      }\n    }, {\n      key: \"byteLength\",\n      value: function byteLength() {\n        var _ALLOW_WITNESS = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n        return (hasWitnesses ? 10 : 8) + _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encodingLength(this.ins.length) + _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encodingLength(this.outs.length) + this.ins.reduce(function (sum, input) {\n          return sum + 40 + varSliceSize(input.script);\n        }, 0) + this.outs.reduce(function (sum, output) {\n          return sum + 8 + varSliceSize(output.script);\n        }, 0) + (hasWitnesses ? this.ins.reduce(function (sum, input) {\n          return sum + vectorSize(input.witness);\n        }, 0) : 0);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var newTx = new Transaction();\n        newTx.version = this.version;\n        newTx.locktime = this.locktime;\n        newTx.ins = this.ins.map(function (txIn) {\n          return {\n            hash: txIn.hash,\n            index: txIn.index,\n            script: txIn.script,\n            sequence: txIn.sequence,\n            witness: txIn.witness\n          };\n        });\n        newTx.outs = this.outs.map(function (txOut) {\n          return {\n            script: txOut.script,\n            value: txOut.value\n          };\n        });\n        return newTx;\n      }\n      /**\n       * Hash transaction for signing a specific input.\n       *\n       * Bitcoin uses a different hash for each signed transaction input.\n       * This method copies the transaction, makes the necessary changes based on the\n       * hashType, and then hashes the result.\n       * This hash can then be used to sign the provided transaction input.\n       */\n    }, {\n      key: \"hashForSignature\",\n      value: function hashForSignature(inIndex, prevOutScript, hashType) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer, /* types.UInt8 */_$$_REQUIRE(_dependencyMap[3], \"./types\").Number), arguments);\n        // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n        if (inIndex >= this.ins.length) return ONE;\n        // ignore OP_CODESEPARATOR\n        var ourScript = _$$_REQUIRE(_dependencyMap[4], \"./script\").compile(_$$_REQUIRE(_dependencyMap[4], \"./script\").decompile(prevOutScript).filter(function (x) {\n          return x !== _$$_REQUIRE(_dependencyMap[4], \"./script\").OPS.OP_CODESEPARATOR;\n        }));\n        var txTmp = this.clone();\n        // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n        if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n          txTmp.outs = [];\n          // ignore sequence numbers (except at inIndex)\n          txTmp.ins.forEach(function (input, i) {\n            if (i === inIndex) return;\n            input.sequence = 0;\n          });\n          // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n        } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n          // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n          if (inIndex >= this.outs.length) return ONE;\n          // truncate outputs after\n          txTmp.outs.length = inIndex + 1;\n          // \"blank\" outputs before\n          for (var i = 0; i < inIndex; i++) {\n            txTmp.outs[i] = BLANK_OUTPUT;\n          }\n          // ignore sequence numbers (except at inIndex)\n          txTmp.ins.forEach(function (input, y) {\n            if (y === inIndex) return;\n            input.sequence = 0;\n          });\n        }\n        // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n        if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n          txTmp.ins = [txTmp.ins[inIndex]];\n          txTmp.ins[0].script = ourScript;\n          // SIGHASH_ALL: only ignore input scripts\n        } else {\n          // \"blank\" others input scripts\n          txTmp.ins.forEach(function (input) {\n            input.script = EMPTY_BUFFER;\n          });\n          txTmp.ins[inIndex].script = ourScript;\n        }\n        // serialize and hash\n        var buffer = Buffer.allocUnsafe(txTmp.byteLength(false) + 4);\n        buffer.writeInt32LE(hashType, buffer.length - 4);\n        txTmp.__toBuffer(buffer, 0, false);\n        return _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(buffer);\n      }\n    }, {\n      key: \"hashForWitnessV1\",\n      value: function hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n        // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce.arrayOf(_$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer), _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce.arrayOf(_$$_REQUIRE(_dependencyMap[3], \"./types\").Satoshi), _$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32), arguments);\n        if (values.length !== this.ins.length || prevOutScripts.length !== this.ins.length) {\n          throw new Error('Must supply prevout script and value for all inputs');\n        }\n        var outputType = hashType === Transaction.SIGHASH_DEFAULT ? Transaction.SIGHASH_ALL : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n        var inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n        var isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n        var isNone = outputType === Transaction.SIGHASH_NONE;\n        var isSingle = outputType === Transaction.SIGHASH_SINGLE;\n        var hashPrevouts = EMPTY_BUFFER;\n        var hashAmounts = EMPTY_BUFFER;\n        var hashScriptPubKeys = EMPTY_BUFFER;\n        var hashSequences = EMPTY_BUFFER;\n        var hashOutputs = EMPTY_BUFFER;\n        if (!isAnyoneCanPay) {\n          var bufferWriter = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(36 * this.ins.length);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeSlice(txIn.hash);\n            bufferWriter.writeUInt32(txIn.index);\n          });\n          hashPrevouts = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(bufferWriter.end());\n          bufferWriter = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(8 * this.ins.length);\n          values.forEach(function (value) {\n            return bufferWriter.writeUInt64(value);\n          });\n          hashAmounts = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(bufferWriter.end());\n          bufferWriter = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(prevOutScripts.map(varSliceSize).reduce(function (a, b) {\n            return a + b;\n          }));\n          prevOutScripts.forEach(function (prevOutScript) {\n            return bufferWriter.writeVarSlice(prevOutScript);\n          });\n          hashScriptPubKeys = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(bufferWriter.end());\n          bufferWriter = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(4 * this.ins.length);\n          this.ins.forEach(function (txIn) {\n            return bufferWriter.writeUInt32(txIn.sequence);\n          });\n          hashSequences = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(bufferWriter.end());\n        }\n        if (!(isNone || isSingle)) {\n          var txOutsSize = this.outs.map(function (output) {\n            return 8 + varSliceSize(output.script);\n          }).reduce(function (a, b) {\n            return a + b;\n          });\n          var _bufferWriter = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(txOutsSize);\n          this.outs.forEach(function (out) {\n            _bufferWriter.writeUInt64(out.value);\n            _bufferWriter.writeVarSlice(out.script);\n          });\n          hashOutputs = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(_bufferWriter.end());\n        } else if (isSingle && inIndex < this.outs.length) {\n          var output = this.outs[inIndex];\n          var _bufferWriter2 = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(8 + varSliceSize(output.script));\n          _bufferWriter2.writeUInt64(output.value);\n          _bufferWriter2.writeVarSlice(output.script);\n          hashOutputs = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(_bufferWriter2.end());\n        }\n        var spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n        // Length calculation from:\n        // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n        // With extension from:\n        // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n        var sigMsgSize = 174 - (isAnyoneCanPay ? 49 : 0) - (isNone ? 32 : 0) + (annex ? 32 : 0) + (leafHash ? 37 : 0);\n        var sigMsgWriter = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(sigMsgSize);\n        sigMsgWriter.writeUInt8(hashType);\n        // Transaction\n        sigMsgWriter.writeInt32(this.version);\n        sigMsgWriter.writeUInt32(this.locktime);\n        sigMsgWriter.writeSlice(hashPrevouts);\n        sigMsgWriter.writeSlice(hashAmounts);\n        sigMsgWriter.writeSlice(hashScriptPubKeys);\n        sigMsgWriter.writeSlice(hashSequences);\n        if (!(isNone || isSingle)) {\n          sigMsgWriter.writeSlice(hashOutputs);\n        }\n        // Input\n        sigMsgWriter.writeUInt8(spendType);\n        if (isAnyoneCanPay) {\n          var input = this.ins[inIndex];\n          sigMsgWriter.writeSlice(input.hash);\n          sigMsgWriter.writeUInt32(input.index);\n          sigMsgWriter.writeUInt64(values[inIndex]);\n          sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n          sigMsgWriter.writeUInt32(input.sequence);\n        } else {\n          sigMsgWriter.writeUInt32(inIndex);\n        }\n        if (annex) {\n          var _bufferWriter3 = _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter.withCapacity(varSliceSize(annex));\n          _bufferWriter3.writeVarSlice(annex);\n          sigMsgWriter.writeSlice(_$$_REQUIRE(_dependencyMap[5], \"./crypto\").sha256(_bufferWriter3.end()));\n        }\n        // Output\n        if (isSingle) {\n          sigMsgWriter.writeSlice(hashOutputs);\n        }\n        // BIP342 extension\n        if (leafHash) {\n          sigMsgWriter.writeSlice(leafHash);\n          sigMsgWriter.writeUInt8(0);\n          sigMsgWriter.writeUInt32(0xffffffff);\n        }\n        // Extra zero byte because:\n        // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n        return _$$_REQUIRE(_dependencyMap[5], \"./crypto\").taggedHash('TapSighash', Buffer.concat([Buffer.from([0x00]), sigMsgWriter.end()]));\n      }\n    }, {\n      key: \"hashForWitnessV0\",\n      value: function hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32, _$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer, _$$_REQUIRE(_dependencyMap[3], \"./types\").Satoshi, _$$_REQUIRE(_dependencyMap[3], \"./types\").UInt32), arguments);\n        var tbuffer = Buffer.from([]);\n        var bufferWriter;\n        var hashOutputs = ZERO;\n        var hashPrevouts = ZERO;\n        var hashSequence = ZERO;\n        if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n          tbuffer = Buffer.allocUnsafe(36 * this.ins.length);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeSlice(txIn.hash);\n            bufferWriter.writeUInt32(txIn.index);\n          });\n          hashPrevouts = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(tbuffer);\n        }\n        if (!(hashType & Transaction.SIGHASH_ANYONECANPAY) && (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n          tbuffer = Buffer.allocUnsafe(4 * this.ins.length);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeUInt32(txIn.sequence);\n          });\n          hashSequence = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(tbuffer);\n        }\n        if ((hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n          var txOutsSize = this.outs.reduce(function (sum, output) {\n            return sum + 8 + varSliceSize(output.script);\n          }, 0);\n          tbuffer = Buffer.allocUnsafe(txOutsSize);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          this.outs.forEach(function (out) {\n            bufferWriter.writeUInt64(out.value);\n            bufferWriter.writeVarSlice(out.script);\n          });\n          hashOutputs = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(tbuffer);\n        } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE && inIndex < this.outs.length) {\n          var output = this.outs[inIndex];\n          tbuffer = Buffer.allocUnsafe(8 + varSliceSize(output.script));\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n          bufferWriter.writeUInt64(output.value);\n          bufferWriter.writeVarSlice(output.script);\n          hashOutputs = _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(tbuffer);\n        }\n        tbuffer = Buffer.allocUnsafe(156 + varSliceSize(prevOutScript));\n        bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(tbuffer, 0);\n        var input = this.ins[inIndex];\n        bufferWriter.writeInt32(this.version);\n        bufferWriter.writeSlice(hashPrevouts);\n        bufferWriter.writeSlice(hashSequence);\n        bufferWriter.writeSlice(input.hash);\n        bufferWriter.writeUInt32(input.index);\n        bufferWriter.writeVarSlice(prevOutScript);\n        bufferWriter.writeUInt64(value);\n        bufferWriter.writeUInt32(input.sequence);\n        bufferWriter.writeSlice(hashOutputs);\n        bufferWriter.writeUInt32(this.locktime);\n        bufferWriter.writeUInt32(hashType);\n        return _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(tbuffer);\n      }\n    }, {\n      key: \"getHash\",\n      value: function getHash(forWitness) {\n        // wtxid for coinbase is always 32 bytes of 0x00\n        if (forWitness && this.isCoinbase()) return Buffer.alloc(32, 0);\n        return _$$_REQUIRE(_dependencyMap[5], \"./crypto\").hash256(this.__toBuffer(undefined, undefined, forWitness));\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        // transaction hash's are displayed in reverse order\n        return (0, _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").reverseBuffer)(this.getHash(false)).toString('hex');\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer(buffer, initialOffset) {\n        return this.__toBuffer(buffer, initialOffset, true);\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex() {\n        return this.toBuffer(undefined, undefined).toString('hex');\n      }\n    }, {\n      key: \"setInputScript\",\n      value: function setInputScript(index, scriptSig) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").Number, _$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer), arguments);\n        this.ins[index].script = scriptSig;\n      }\n    }, {\n      key: \"setWitness\",\n      value: function setWitness(index, witness) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").Number, [_$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer]), arguments);\n        this.ins[index].witness = witness;\n      }\n    }, {\n      key: \"__toBuffer\",\n      value: function __toBuffer(buffer, initialOffset) {\n        var _ALLOW_WITNESS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (!buffer) buffer = Buffer.allocUnsafe(this.byteLength(_ALLOW_WITNESS));\n        var bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(buffer, initialOffset || 0);\n        bufferWriter.writeInt32(this.version);\n        var hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n        if (hasWitnesses) {\n          bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n          bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n        }\n        bufferWriter.writeVarInt(this.ins.length);\n        this.ins.forEach(function (txIn) {\n          bufferWriter.writeSlice(txIn.hash);\n          bufferWriter.writeUInt32(txIn.index);\n          bufferWriter.writeVarSlice(txIn.script);\n          bufferWriter.writeUInt32(txIn.sequence);\n        });\n        bufferWriter.writeVarInt(this.outs.length);\n        this.outs.forEach(function (txOut) {\n          if (isOutput(txOut)) {\n            bufferWriter.writeUInt64(txOut.value);\n          } else {\n            bufferWriter.writeSlice(txOut.valueBuffer);\n          }\n          bufferWriter.writeVarSlice(txOut.script);\n        });\n        if (hasWitnesses) {\n          this.ins.forEach(function (input) {\n            bufferWriter.writeVector(input.witness);\n          });\n        }\n        bufferWriter.writeUInt32(this.locktime);\n        // avoid slicing unless necessary\n        if (initialOffset !== undefined) return buffer.slice(initialOffset, bufferWriter.offset);\n        return buffer;\n      }\n    }], [{\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer, _NO_STRICT) {\n        var bufferReader = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferReader)(buffer);\n        var tx = new Transaction();\n        tx.version = bufferReader.readInt32();\n        var marker = bufferReader.readUInt8();\n        var flag = bufferReader.readUInt8();\n        var hasWitnesses = false;\n        if (marker === Transaction.ADVANCED_TRANSACTION_MARKER && flag === Transaction.ADVANCED_TRANSACTION_FLAG) {\n          hasWitnesses = true;\n        } else {\n          bufferReader.offset -= 2;\n        }\n        var vinLen = bufferReader.readVarInt();\n        for (var i = 0; i < vinLen; ++i) {\n          tx.ins.push({\n            hash: bufferReader.readSlice(32),\n            index: bufferReader.readUInt32(),\n            script: bufferReader.readVarSlice(),\n            sequence: bufferReader.readUInt32(),\n            witness: EMPTY_WITNESS\n          });\n        }\n        var voutLen = bufferReader.readVarInt();\n        for (var _i = 0; _i < voutLen; ++_i) {\n          tx.outs.push({\n            value: bufferReader.readUInt64(),\n            script: bufferReader.readVarSlice()\n          });\n        }\n        if (hasWitnesses) {\n          for (var _i2 = 0; _i2 < vinLen; ++_i2) {\n            tx.ins[_i2].witness = bufferReader.readVector();\n          }\n          // was this pointless?\n          if (!tx.hasWitnesses()) throw new Error('Transaction has superfluous witness data');\n        }\n        tx.locktime = bufferReader.readUInt32();\n        if (_NO_STRICT) return tx;\n        if (bufferReader.offset !== buffer.length) throw new Error('Transaction has unexpected data');\n        return tx;\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(hex) {\n        return Transaction.fromBuffer(Buffer.from(hex, 'hex'), false);\n      }\n    }, {\n      key: \"isCoinbaseHash\",\n      value: function isCoinbaseHash(buffer) {\n        _$$_REQUIRE(_dependencyMap[3], \"./types\").typeforce(_$$_REQUIRE(_dependencyMap[3], \"./types\").Hash256bit, buffer);\n        for (var i = 0; i < 32; ++i) {\n          if (buffer[i] !== 0) return false;\n        }\n        return true;\n      }\n    }]);\n  }();\n  exports.Transaction = Transaction;\n  Transaction.DEFAULT_SEQUENCE = 0xffffffff;\n  Transaction.SIGHASH_DEFAULT = 0x00;\n  Transaction.SIGHASH_ALL = 0x01;\n  Transaction.SIGHASH_NONE = 0x02;\n  Transaction.SIGHASH_SINGLE = 0x03;\n  Transaction.SIGHASH_ANYONECANPAY = 0x80;\n  Transaction.SIGHASH_OUTPUT_MASK = 0x03;\n  Transaction.SIGHASH_INPUT_MASK = 0x80;\n  Transaction.ADVANCED_TRANSACTION_MARKER = 0x00;\n  Transaction.ADVANCED_TRANSACTION_FLAG = 0x01;\n});","lineCount":512,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0,"exports"],[9,9,3,7],[9,10,3,8,"Transaction"],[9,21,3,19],[9,24,3,22],[9,29,3,27],[9,30,3,28],[10,2,10,0],[10,11,10,9,"varSliceSize"],[10,23,10,21,"varSliceSize"],[10,24,10,22,"someScript"],[10,34,10,32],[10,36,10,34],[11,4,11,2],[11,8,11,8,"length"],[11,14,11,14],[11,17,11,17,"someScript"],[11,27,11,27],[11,28,11,28,"length"],[11,34,11,34],[12,4,12,2],[12,11,12,9,"_$$_REQUIRE"],[12,22,12,9],[12,23,12,9,"_dependencyMap"],[12,37,12,9],[12,59,12,23,"varuint"],[12,66,12,30],[12,67,12,31,"encodingLength"],[12,81,12,45],[12,82,12,46,"length"],[12,88,12,52],[12,89,12,53],[12,92,12,56,"length"],[12,98,12,62],[13,2,13,0],[14,2,14,0],[14,11,14,9,"vectorSize"],[14,21,14,19,"vectorSize"],[14,22,14,20,"someVector"],[14,32,14,30],[14,34,14,32],[15,4,15,2],[15,8,15,8,"length"],[15,14,15,14],[15,17,15,17,"someVector"],[15,27,15,27],[15,28,15,28,"length"],[15,34,15,34],[16,4,16,2],[16,11,17,4,"_$$_REQUIRE"],[16,22,17,4],[16,23,17,4,"_dependencyMap"],[16,37,17,4],[16,59,17,18,"varuint"],[16,66,17,25],[16,67,17,26,"encodingLength"],[16,81,17,40],[16,82,17,41,"length"],[16,88,17,47],[16,89,17,48],[16,92,18,4,"someVector"],[16,102,18,14],[16,103,18,15,"reduce"],[16,109,18,21],[16,110,18,22],[16,120,18,23,"sum"],[16,123,18,26],[16,125,18,28,"witness"],[16,132,18,35],[16,134,18,40],[17,6,19,6],[17,13,19,13,"sum"],[17,16,19,16],[17,19,19,19,"varSliceSize"],[17,31,19,31],[17,32,19,32,"witness"],[17,39,19,39],[17,40,19,40],[18,4,20,4],[18,5,20,5],[18,7,20,7],[18,8,20,8],[18,9,20,9],[19,2,22,0],[20,2,23,0],[20,6,23,6,"EMPTY_BUFFER"],[20,18,23,18],[20,21,23,21,"Buffer"],[20,27,23,27],[20,28,23,28,"allocUnsafe"],[20,39,23,39],[20,40,23,40],[20,41,23,41],[20,42,23,42],[21,2,24,0],[21,6,24,6,"EMPTY_WITNESS"],[21,19,24,19],[21,22,24,22],[21,24,24,24],[22,2,25,0],[22,6,25,6,"ZERO"],[22,10,25,10],[22,13,25,13,"Buffer"],[22,19,25,19],[22,20,25,20,"from"],[22,24,25,24],[22,25,26,2],[22,91,26,68],[22,93,27,2],[22,98,28,0],[22,99,28,1],[23,2,29,0],[23,6,29,6,"ONE"],[23,9,29,9],[23,12,29,12,"Buffer"],[23,18,29,18],[23,19,29,19,"from"],[23,23,29,23],[23,24,30,2],[23,90,30,68],[23,92,31,2],[23,97,32,0],[23,98,32,1],[24,2,33,0],[24,6,33,6,"VALUE_UINT64_MAX"],[24,22,33,22],[24,25,33,25,"Buffer"],[24,31,33,31],[24,32,33,32,"from"],[24,36,33,36],[24,37,33,37],[24,55,33,55],[24,57,33,57],[24,62,33,62],[24,63,33,63],[25,2,34,0],[25,6,34,6,"BLANK_OUTPUT"],[25,18,34,18],[25,21,34,21],[26,4,35,2,"script"],[26,10,35,8],[26,12,35,10,"EMPTY_BUFFER"],[26,24,35,22],[27,4,36,2,"valueBuffer"],[27,15,36,13],[27,17,36,15,"VALUE_UINT64_MAX"],[28,2,37,0],[28,3,37,1],[29,2,38,0],[29,11,38,9,"isOutput"],[29,19,38,17,"isOutput"],[29,20,38,18,"out"],[29,23,38,21],[29,25,38,23],[30,4,39,2],[30,11,39,9,"out"],[30,14,39,12],[30,15,39,13,"value"],[30,20,39,18],[30,25,39,23,"undefined"],[30,34,39,32],[31,2,40,0],[32,2,41,0],[33,0,42,0],[34,0,43,0],[35,2,41,0],[35,6,44,6,"Transaction"],[35,17,44,17],[36,4,45,2],[36,13,45,2,"Transaction"],[36,25,45,2],[36,27,45,16],[37,6,45,16,"_classCallCheck"],[37,21,45,16],[37,28,45,16,"Transaction"],[37,39,45,16],[38,6,46,4],[38,10,46,8],[38,11,46,9,"version"],[38,18,46,16],[38,21,46,19],[38,22,46,20],[39,6,47,4],[39,10,47,8],[39,11,47,9,"locktime"],[39,19,47,17],[39,22,47,20],[39,23,47,21],[40,6,48,4],[40,10,48,8],[40,11,48,9,"ins"],[40,14,48,12],[40,17,48,15],[40,19,48,17],[41,6,49,4],[41,10,49,8],[41,11,49,9,"outs"],[41,15,49,13],[41,18,49,16],[41,20,49,18],[42,4,50,2],[43,4,50,3],[43,11,50,3,"_createClass"],[43,23,50,3],[43,24,50,3,"Transaction"],[43,35,50,3],[44,6,50,3,"key"],[44,9,50,3],[45,6,50,3,"value"],[45,11,50,3],[45,13,107,2],[45,22,107,2,"isCoinbase"],[45,32,107,12,"isCoinbase"],[45,33,107,12],[45,35,107,15],[46,8,108,4],[46,15,109,6],[46,19,109,10],[46,20,109,11,"ins"],[46,23,109,14],[46,24,109,15,"length"],[46,30,109,21],[46,35,109,26],[46,36,109,27],[46,40,109,31,"Transaction"],[46,51,109,42],[46,52,109,43,"isCoinbaseHash"],[46,66,109,57],[46,67,109,58],[46,71,109,62],[46,72,109,63,"ins"],[46,75,109,66],[46,76,109,67],[46,77,109,68],[46,78,109,69],[46,79,109,70,"hash"],[46,83,109,74],[46,84,109,75],[47,6,111,2],[48,4,111,3],[49,6,111,3,"key"],[49,9,111,3],[50,6,111,3,"value"],[50,11,111,3],[50,13,112,2],[50,22,112,2,"addInput"],[50,30,112,10,"addInput"],[50,31,112,11,"hash"],[50,35,112,15],[50,37,112,17,"index"],[50,42,112,22],[50,44,112,24,"sequence"],[50,52,112,32],[50,54,112,34,"scriptSig"],[50,63,112,43],[50,65,112,45],[51,8,113,4,"_$$_REQUIRE"],[51,19,113,4],[51,20,113,4,"_dependencyMap"],[51,34,113,4],[51,50,113,4,"typeforce"],[51,59,113,4],[51,60,114,6,"_$$_REQUIRE"],[51,71,114,6],[51,72,114,6,"_dependencyMap"],[51,86,114,6],[51,102,114,12,"tuple"],[51,107,114,17],[51,108,115,8,"_$$_REQUIRE"],[51,119,115,8],[51,120,115,8,"_dependencyMap"],[51,134,115,8],[51,150,115,14,"Hash256bit"],[51,160,115,24],[51,162,116,8,"_$$_REQUIRE"],[51,173,116,8],[51,174,116,8,"_dependencyMap"],[51,188,116,8],[51,204,116,14,"UInt32"],[51,210,116,20],[51,212,117,8,"_$$_REQUIRE"],[51,223,117,8],[51,224,117,8,"_dependencyMap"],[51,238,117,8],[51,254,117,14,"maybe"],[51,259,117,19],[51,260,117,20,"_$$_REQUIRE"],[51,271,117,20],[51,272,117,20,"_dependencyMap"],[51,286,117,20],[51,302,117,26,"UInt32"],[51,308,117,32],[51,309,117,33],[51,311,118,8,"_$$_REQUIRE"],[51,322,118,8],[51,323,118,8,"_dependencyMap"],[51,337,118,8],[51,353,118,14,"maybe"],[51,358,118,19],[51,359,118,20,"_$$_REQUIRE"],[51,370,118,20],[51,371,118,20,"_dependencyMap"],[51,385,118,20],[51,401,118,26,"Buffer"],[51,407,118,32],[51,408,119,6],[51,409,119,7],[51,411,120,6,"arguments"],[51,420,121,4],[51,421,121,5],[52,8,122,4],[52,12,122,8,"_$$_REQUIRE"],[52,23,122,8],[52,24,122,8,"_dependencyMap"],[52,38,122,8],[52,54,122,14,"Null"],[52,58,122,18],[52,59,122,19,"sequence"],[52,67,122,27],[52,68,122,28],[52,70,122,30],[53,10,123,6,"sequence"],[53,18,123,14],[53,21,123,17,"Transaction"],[53,32,123,28],[53,33,123,29,"DEFAULT_SEQUENCE"],[53,49,123,45],[54,8,124,4],[55,8,125,4],[56,8,126,4],[56,15,127,6],[56,19,127,10],[56,20,127,11,"ins"],[56,23,127,14],[56,24,127,15,"push"],[56,28,127,19],[56,29,127,20],[57,10,128,8,"hash"],[57,14,128,12],[57,16,128,8,"hash"],[57,20,128,12],[58,10,129,8,"index"],[58,15,129,13],[58,17,129,8,"index"],[58,22,129,13],[59,10,130,8,"script"],[59,16,130,14],[59,18,130,16,"scriptSig"],[59,27,130,25],[59,31,130,29,"EMPTY_BUFFER"],[59,43,130,41],[60,10,131,8,"sequence"],[60,18,131,16],[60,20,131,18,"sequence"],[60,28,131,26],[61,10,132,8,"witness"],[61,17,132,15],[61,19,132,17,"EMPTY_WITNESS"],[62,8,133,6],[62,9,133,7],[62,10,133,8],[62,13,133,11],[62,14,133,12],[63,6,135,2],[64,4,135,3],[65,6,135,3,"key"],[65,9,135,3],[66,6,135,3,"value"],[66,11,135,3],[66,13,136,2],[66,22,136,2,"addOutput"],[66,31,136,11,"addOutput"],[66,32,136,12,"scriptPubKey"],[66,44,136,24],[66,46,136,26,"value"],[66,51,136,31],[66,53,136,33],[67,8,137,4,"_$$_REQUIRE"],[67,19,137,4],[67,20,137,4,"_dependencyMap"],[67,34,137,4],[67,50,137,4,"typeforce"],[67,59,137,4],[67,60,137,14,"_$$_REQUIRE"],[67,71,137,14],[67,72,137,14,"_dependencyMap"],[67,86,137,14],[67,102,137,20,"tuple"],[67,107,137,25],[67,108,137,26,"_$$_REQUIRE"],[67,119,137,26],[67,120,137,26,"_dependencyMap"],[67,134,137,26],[67,150,137,32,"Buffer"],[67,156,137,38],[67,158,137,40,"_$$_REQUIRE"],[67,169,137,40],[67,170,137,40,"_dependencyMap"],[67,184,137,40],[67,200,137,46,"Satoshi"],[67,207,137,53],[67,208,137,54],[67,210,137,56,"arguments"],[67,219,137,65],[67,220,137,66],[68,8,138,4],[69,8,139,4],[69,15,140,6],[69,19,140,10],[69,20,140,11,"outs"],[69,24,140,15],[69,25,140,16,"push"],[69,29,140,20],[69,30,140,21],[70,10,141,8,"script"],[70,16,141,14],[70,18,141,16,"scriptPubKey"],[70,30,141,28],[71,10,142,8,"value"],[71,15,142,13],[71,17,142,8,"value"],[72,8,143,6],[72,9,143,7],[72,10,143,8],[72,13,143,11],[72,14,143,12],[73,6,145,2],[74,4,145,3],[75,6,145,3,"key"],[75,9,145,3],[76,6,145,3,"value"],[76,11,145,3],[76,13,146,2],[76,22,146,2,"hasWitnesses"],[76,34,146,14,"hasWitnesses"],[76,35,146,14],[76,37,146,17],[77,8,147,4],[77,15,147,11],[77,19,147,15],[77,20,147,16,"ins"],[77,23,147,19],[77,24,147,20,"some"],[77,28,147,24],[77,29,147,25],[77,39,147,25,"x"],[77,40,147,26],[77,42,147,30],[78,10,148,6],[78,17,148,13,"x"],[78,18,148,14],[78,19,148,15,"witness"],[78,26,148,22],[78,27,148,23,"length"],[78,33,148,29],[78,38,148,34],[78,39,148,35],[79,8,149,4],[79,9,149,5],[79,10,149,6],[80,6,150,2],[81,4,150,3],[82,6,150,3,"key"],[82,9,150,3],[83,6,150,3,"value"],[83,11,150,3],[83,13,151,2],[83,22,151,2,"stripWitnesses"],[83,36,151,16,"stripWitnesses"],[83,37,151,16],[83,39,151,19],[84,8,152,4],[84,12,152,8],[84,13,152,9,"ins"],[84,16,152,12],[84,17,152,13,"forEach"],[84,24,152,20],[84,25,152,21],[84,35,152,21,"input"],[84,40,152,26],[84,42,152,30],[85,10,153,6,"input"],[85,15,153,11],[85,16,153,12,"witness"],[85,23,153,19],[85,26,153,22,"EMPTY_WITNESS"],[85,39,153,35],[85,40,153,36],[85,41,153,37],[86,8,154,4],[86,9,154,5],[86,10,154,6],[87,6,155,2],[88,4,155,3],[89,6,155,3,"key"],[89,9,155,3],[90,6,155,3,"value"],[90,11,155,3],[90,13,156,2],[90,22,156,2,"weight"],[90,28,156,8,"weight"],[90,29,156,8],[90,31,156,11],[91,8,157,4],[91,12,157,10,"base"],[91,16,157,14],[91,19,157,17],[91,23,157,21],[91,24,157,22,"byteLength"],[91,34,157,32],[91,35,157,33],[91,40,157,38],[91,41,157,39],[92,8,158,4],[92,12,158,10,"total"],[92,17,158,15],[92,20,158,18],[92,24,158,22],[92,25,158,23,"byteLength"],[92,35,158,33],[92,36,158,34],[92,40,158,38],[92,41,158,39],[93,8,159,4],[93,15,159,11,"base"],[93,19,159,15],[93,22,159,18],[93,23,159,19],[93,26,159,22,"total"],[93,31,159,27],[94,6,160,2],[95,4,160,3],[96,6,160,3,"key"],[96,9,160,3],[97,6,160,3,"value"],[97,11,160,3],[97,13,161,2],[97,22,161,2,"virtualSize"],[97,33,161,13,"virtualSize"],[97,34,161,13],[97,36,161,16],[98,8,162,4],[98,15,162,11,"Math"],[98,19,162,15],[98,20,162,16,"ceil"],[98,24,162,20],[98,25,162,21],[98,29,162,25],[98,30,162,26,"weight"],[98,36,162,32],[98,37,162,33],[98,38,162,34],[98,41,162,37],[98,42,162,38],[98,43,162,39],[99,6,163,2],[100,4,163,3],[101,6,163,3,"key"],[101,9,163,3],[102,6,163,3,"value"],[102,11,163,3],[102,13,164,2],[102,22,164,2,"byteLength"],[102,32,164,12,"byteLength"],[102,33,164,12],[102,35,164,36],[103,8,164,36],[103,12,164,13,"_ALLOW_WITNESS"],[103,26,164,27],[103,29,164,27,"arguments"],[103,38,164,27],[103,39,164,27,"length"],[103,45,164,27],[103,53,164,27,"arguments"],[103,62,164,27],[103,70,164,27,"undefined"],[103,79,164,27],[103,82,164,27,"arguments"],[103,91,164,27],[103,97,164,30],[103,101,164,34],[104,8,165,4],[104,12,165,10,"hasWitnesses"],[104,24,165,22],[104,27,165,25,"_ALLOW_WITNESS"],[104,41,165,39],[104,45,165,43],[104,49,165,47],[104,50,165,48,"hasWitnesses"],[104,62,165,60],[104,63,165,61],[104,64,165,62],[105,8,166,4],[105,15,167,6],[105,16,167,7,"hasWitnesses"],[105,28,167,19],[105,31,167,22],[105,33,167,24],[105,36,167,27],[105,37,167,28],[105,41,168,6,"_$$_REQUIRE"],[105,52,168,6],[105,53,168,6,"_dependencyMap"],[105,67,168,6],[105,89,168,20,"varuint"],[105,96,168,27],[105,97,168,28,"encodingLength"],[105,111,168,42],[105,112,168,43],[105,116,168,47],[105,117,168,48,"ins"],[105,120,168,51],[105,121,168,52,"length"],[105,127,168,58],[105,128,168,59],[105,131,169,6,"_$$_REQUIRE"],[105,142,169,6],[105,143,169,6,"_dependencyMap"],[105,157,169,6],[105,179,169,20,"varuint"],[105,186,169,27],[105,187,169,28,"encodingLength"],[105,201,169,42],[105,202,169,43],[105,206,169,47],[105,207,169,48,"outs"],[105,211,169,52],[105,212,169,53,"length"],[105,218,169,59],[105,219,169,60],[105,222,170,6],[105,226,170,10],[105,227,170,11,"ins"],[105,230,170,14],[105,231,170,15,"reduce"],[105,237,170,21],[105,238,170,22],[105,248,170,23,"sum"],[105,251,170,26],[105,253,170,28,"input"],[105,258,170,33],[105,260,170,38],[106,10,171,8],[106,17,171,15,"sum"],[106,20,171,18],[106,23,171,21],[106,25,171,23],[106,28,171,26,"varSliceSize"],[106,40,171,38],[106,41,171,39,"input"],[106,46,171,44],[106,47,171,45,"script"],[106,53,171,51],[106,54,171,52],[107,8,172,6],[107,9,172,7],[107,11,172,9],[107,12,172,10],[107,13,172,11],[107,16,173,6],[107,20,173,10],[107,21,173,11,"outs"],[107,25,173,15],[107,26,173,16,"reduce"],[107,32,173,22],[107,33,173,23],[107,43,173,24,"sum"],[107,46,173,27],[107,48,173,29,"output"],[107,54,173,35],[107,56,173,40],[108,10,174,8],[108,17,174,15,"sum"],[108,20,174,18],[108,23,174,21],[108,24,174,22],[108,27,174,25,"varSliceSize"],[108,39,174,37],[108,40,174,38,"output"],[108,46,174,44],[108,47,174,45,"script"],[108,53,174,51],[108,54,174,52],[109,8,175,6],[109,9,175,7],[109,11,175,9],[109,12,175,10],[109,13,175,11],[109,17,176,7,"hasWitnesses"],[109,29,176,19],[109,32,177,10],[109,36,177,14],[109,37,177,15,"ins"],[109,40,177,18],[109,41,177,19,"reduce"],[109,47,177,25],[109,48,177,26],[109,58,177,27,"sum"],[109,61,177,30],[109,63,177,32,"input"],[109,68,177,37],[109,70,177,42],[110,10,178,12],[110,17,178,19,"sum"],[110,20,178,22],[110,23,178,25,"vectorSize"],[110,33,178,35],[110,34,178,36,"input"],[110,39,178,41],[110,40,178,42,"witness"],[110,47,178,49],[110,48,178,50],[111,8,179,10],[111,9,179,11],[111,11,179,13],[111,12,179,14],[111,13,179,15],[111,16,180,10],[111,17,180,11],[111,18,180,12],[112,6,182,2],[113,4,182,3],[114,6,182,3,"key"],[114,9,182,3],[115,6,182,3,"value"],[115,11,182,3],[115,13,183,2],[115,22,183,2,"clone"],[115,27,183,7,"clone"],[115,28,183,7],[115,30,183,10],[116,8,184,4],[116,12,184,10,"newTx"],[116,17,184,15],[116,20,184,18],[116,24,184,22,"Transaction"],[116,35,184,33],[116,36,184,34],[116,37,184,35],[117,8,185,4,"newTx"],[117,13,185,9],[117,14,185,10,"version"],[117,21,185,17],[117,24,185,20],[117,28,185,24],[117,29,185,25,"version"],[117,36,185,32],[118,8,186,4,"newTx"],[118,13,186,9],[118,14,186,10,"locktime"],[118,22,186,18],[118,25,186,21],[118,29,186,25],[118,30,186,26,"locktime"],[118,38,186,34],[119,8,187,4,"newTx"],[119,13,187,9],[119,14,187,10,"ins"],[119,17,187,13],[119,20,187,16],[119,24,187,20],[119,25,187,21,"ins"],[119,28,187,24],[119,29,187,25,"map"],[119,32,187,28],[119,33,187,29],[119,43,187,29,"txIn"],[119,47,187,33],[119,49,187,37],[120,10,188,6],[120,17,188,13],[121,12,189,8,"hash"],[121,16,189,12],[121,18,189,14,"txIn"],[121,22,189,18],[121,23,189,19,"hash"],[121,27,189,23],[122,12,190,8,"index"],[122,17,190,13],[122,19,190,15,"txIn"],[122,23,190,19],[122,24,190,20,"index"],[122,29,190,25],[123,12,191,8,"script"],[123,18,191,14],[123,20,191,16,"txIn"],[123,24,191,20],[123,25,191,21,"script"],[123,31,191,27],[124,12,192,8,"sequence"],[124,20,192,16],[124,22,192,18,"txIn"],[124,26,192,22],[124,27,192,23,"sequence"],[124,35,192,31],[125,12,193,8,"witness"],[125,19,193,15],[125,21,193,17,"txIn"],[125,25,193,21],[125,26,193,22,"witness"],[126,10,194,6],[126,11,194,7],[127,8,195,4],[127,9,195,5],[127,10,195,6],[128,8,196,4,"newTx"],[128,13,196,9],[128,14,196,10,"outs"],[128,18,196,14],[128,21,196,17],[128,25,196,21],[128,26,196,22,"outs"],[128,30,196,26],[128,31,196,27,"map"],[128,34,196,30],[128,35,196,31],[128,45,196,31,"txOut"],[128,50,196,36],[128,52,196,40],[129,10,197,6],[129,17,197,13],[130,12,198,8,"script"],[130,18,198,14],[130,20,198,16,"txOut"],[130,25,198,21],[130,26,198,22,"script"],[130,32,198,28],[131,12,199,8,"value"],[131,17,199,13],[131,19,199,15,"txOut"],[131,24,199,20],[131,25,199,21,"value"],[132,10,200,6],[132,11,200,7],[133,8,201,4],[133,9,201,5],[133,10,201,6],[134,8,202,4],[134,15,202,11,"newTx"],[134,20,202,16],[135,6,203,2],[136,6,204,2],[137,0,205,0],[138,0,206,0],[139,0,207,0],[140,0,208,0],[141,0,209,0],[142,0,210,0],[143,0,211,0],[144,4,204,2],[145,6,204,2,"key"],[145,9,204,2],[146,6,204,2,"value"],[146,11,204,2],[146,13,212,2],[146,22,212,2,"hashForSignature"],[146,38,212,18,"hashForSignature"],[146,39,212,19,"inIndex"],[146,46,212,26],[146,48,212,28,"prevOutScript"],[146,61,212,41],[146,63,212,43,"hashType"],[146,71,212,51],[146,73,212,53],[147,8,213,4,"_$$_REQUIRE"],[147,19,213,4],[147,20,213,4,"_dependencyMap"],[147,34,213,4],[147,50,213,4,"typeforce"],[147,59,213,4],[147,60,214,6,"_$$_REQUIRE"],[147,71,214,6],[147,72,214,6,"_dependencyMap"],[147,86,214,6],[147,102,214,12,"tuple"],[147,107,214,17],[147,108,214,18,"_$$_REQUIRE"],[147,119,214,18],[147,120,214,18,"_dependencyMap"],[147,134,214,18],[147,150,214,24,"UInt32"],[147,156,214,30],[147,158,214,32,"_$$_REQUIRE"],[147,169,214,32],[147,170,214,32,"_dependencyMap"],[147,184,214,32],[147,200,214,38,"Buffer"],[147,206,214,44],[147,208,214,46],[147,225,214,64,"_$$_REQUIRE"],[147,236,214,64],[147,237,214,64,"_dependencyMap"],[147,251,214,64],[147,267,214,70,"Number"],[147,273,214,76],[147,274,214,77],[147,276,215,6,"arguments"],[147,285,216,4],[147,286,216,5],[148,8,217,4],[149,8,218,4],[149,12,218,8,"inIndex"],[149,19,218,15],[149,23,218,19],[149,27,218,23],[149,28,218,24,"ins"],[149,31,218,27],[149,32,218,28,"length"],[149,38,218,34],[149,40,218,36],[149,47,218,43,"ONE"],[149,50,218,46],[150,8,219,4],[151,8,220,4],[151,12,220,10,"ourScript"],[151,21,220,19],[151,24,220,22,"_$$_REQUIRE"],[151,35,220,22],[151,36,220,22,"_dependencyMap"],[151,50,220,22],[151,67,220,30,"compile"],[151,74,220,37],[151,75,221,6,"_$$_REQUIRE"],[151,86,221,6],[151,87,221,6,"_dependencyMap"],[151,101,221,6],[151,118,221,14,"decompile"],[151,127,221,23],[151,128,221,24,"prevOutScript"],[151,141,221,37],[151,142,221,38],[151,143,221,39,"filter"],[151,149,221,45],[151,150,221,46],[151,160,221,46,"x"],[151,161,221,47],[151,163,221,51],[152,10,222,8],[152,17,222,15,"x"],[152,18,222,16],[152,23,222,21,"_$$_REQUIRE"],[152,34,222,21],[152,35,222,21,"_dependencyMap"],[152,49,222,21],[152,66,222,30,"OPS"],[152,69,222,33],[152,70,222,34,"OP_CODESEPARATOR"],[152,86,222,50],[153,8,223,6],[153,9,223,7],[153,10,224,4],[153,11,224,5],[154,8,225,4],[154,12,225,10,"txTmp"],[154,17,225,15],[154,20,225,18],[154,24,225,22],[154,25,225,23,"clone"],[154,30,225,28],[154,31,225,29],[154,32,225,30],[155,8,226,4],[156,8,227,4],[156,12,227,8],[156,13,227,9,"hashType"],[156,21,227,17],[156,24,227,20],[156,28,227,24],[156,34,227,30,"Transaction"],[156,45,227,41],[156,46,227,42,"SIGHASH_NONE"],[156,58,227,54],[156,60,227,56],[157,10,228,6,"txTmp"],[157,15,228,11],[157,16,228,12,"outs"],[157,20,228,16],[157,23,228,19],[157,25,228,21],[158,10,229,6],[159,10,230,6,"txTmp"],[159,15,230,11],[159,16,230,12,"ins"],[159,19,230,15],[159,20,230,16,"forEach"],[159,27,230,23],[159,28,230,24],[159,38,230,25,"input"],[159,43,230,30],[159,45,230,32,"i"],[159,46,230,33],[159,48,230,38],[160,12,231,8],[160,16,231,12,"i"],[160,17,231,13],[160,22,231,18,"inIndex"],[160,29,231,25],[160,31,231,27],[161,12,232,8,"input"],[161,17,232,13],[161,18,232,14,"sequence"],[161,26,232,22],[161,29,232,25],[161,30,232,26],[162,10,233,6],[162,11,233,7],[162,12,233,8],[163,10,234,6],[164,8,235,4],[164,9,235,5],[164,15,235,11],[164,19,235,15],[164,20,235,16,"hashType"],[164,28,235,24],[164,31,235,27],[164,35,235,31],[164,41,235,37,"Transaction"],[164,52,235,48],[164,53,235,49,"SIGHASH_SINGLE"],[164,67,235,63],[164,69,235,65],[165,10,236,6],[166,10,237,6],[166,14,237,10,"inIndex"],[166,21,237,17],[166,25,237,21],[166,29,237,25],[166,30,237,26,"outs"],[166,34,237,30],[166,35,237,31,"length"],[166,41,237,37],[166,43,237,39],[166,50,237,46,"ONE"],[166,53,237,49],[167,10,238,6],[168,10,239,6,"txTmp"],[168,15,239,11],[168,16,239,12,"outs"],[168,20,239,16],[168,21,239,17,"length"],[168,27,239,23],[168,30,239,26,"inIndex"],[168,37,239,33],[168,40,239,36],[168,41,239,37],[169,10,240,6],[170,10,241,6],[170,15,241,11],[170,19,241,15,"i"],[170,20,241,16],[170,23,241,19],[170,24,241,20],[170,26,241,22,"i"],[170,27,241,23],[170,30,241,26,"inIndex"],[170,37,241,33],[170,39,241,35,"i"],[170,40,241,36],[170,42,241,38],[170,44,241,40],[171,12,242,8,"txTmp"],[171,17,242,13],[171,18,242,14,"outs"],[171,22,242,18],[171,23,242,19,"i"],[171,24,242,20],[171,25,242,21],[171,28,242,24,"BLANK_OUTPUT"],[171,40,242,36],[172,10,243,6],[173,10,244,6],[174,10,245,6,"txTmp"],[174,15,245,11],[174,16,245,12,"ins"],[174,19,245,15],[174,20,245,16,"forEach"],[174,27,245,23],[174,28,245,24],[174,38,245,25,"input"],[174,43,245,30],[174,45,245,32,"y"],[174,46,245,33],[174,48,245,38],[175,12,246,8],[175,16,246,12,"y"],[175,17,246,13],[175,22,246,18,"inIndex"],[175,29,246,25],[175,31,246,27],[176,12,247,8,"input"],[176,17,247,13],[176,18,247,14,"sequence"],[176,26,247,22],[176,29,247,25],[176,30,247,26],[177,10,248,6],[177,11,248,7],[177,12,248,8],[178,8,249,4],[179,8,250,4],[180,8,251,4],[180,12,251,8,"hashType"],[180,20,251,16],[180,23,251,19,"Transaction"],[180,34,251,30],[180,35,251,31,"SIGHASH_ANYONECANPAY"],[180,55,251,51],[180,57,251,53],[181,10,252,6,"txTmp"],[181,15,252,11],[181,16,252,12,"ins"],[181,19,252,15],[181,22,252,18],[181,23,252,19,"txTmp"],[181,28,252,24],[181,29,252,25,"ins"],[181,32,252,28],[181,33,252,29,"inIndex"],[181,40,252,36],[181,41,252,37],[181,42,252,38],[182,10,253,6,"txTmp"],[182,15,253,11],[182,16,253,12,"ins"],[182,19,253,15],[182,20,253,16],[182,21,253,17],[182,22,253,18],[182,23,253,19,"script"],[182,29,253,25],[182,32,253,28,"ourScript"],[182,41,253,37],[183,10,254,6],[184,8,255,4],[184,9,255,5],[184,15,255,11],[185,10,256,6],[186,10,257,6,"txTmp"],[186,15,257,11],[186,16,257,12,"ins"],[186,19,257,15],[186,20,257,16,"forEach"],[186,27,257,23],[186,28,257,24],[186,38,257,24,"input"],[186,43,257,29],[186,45,257,33],[187,12,258,8,"input"],[187,17,258,13],[187,18,258,14,"script"],[187,24,258,20],[187,27,258,23,"EMPTY_BUFFER"],[187,39,258,35],[188,10,259,6],[188,11,259,7],[188,12,259,8],[189,10,260,6,"txTmp"],[189,15,260,11],[189,16,260,12,"ins"],[189,19,260,15],[189,20,260,16,"inIndex"],[189,27,260,23],[189,28,260,24],[189,29,260,25,"script"],[189,35,260,31],[189,38,260,34,"ourScript"],[189,47,260,43],[190,8,261,4],[191,8,262,4],[192,8,263,4],[192,12,263,10,"buffer"],[192,18,263,16],[192,21,263,19,"Buffer"],[192,27,263,25],[192,28,263,26,"allocUnsafe"],[192,39,263,37],[192,40,263,38,"txTmp"],[192,45,263,43],[192,46,263,44,"byteLength"],[192,56,263,54],[192,57,263,55],[192,62,263,60],[192,63,263,61],[192,66,263,64],[192,67,263,65],[192,68,263,66],[193,8,264,4,"buffer"],[193,14,264,10],[193,15,264,11,"writeInt32LE"],[193,27,264,23],[193,28,264,24,"hashType"],[193,36,264,32],[193,38,264,34,"buffer"],[193,44,264,40],[193,45,264,41,"length"],[193,51,264,47],[193,54,264,50],[193,55,264,51],[193,56,264,52],[194,8,265,4,"txTmp"],[194,13,265,9],[194,14,265,10,"__toBuffer"],[194,24,265,20],[194,25,265,21,"buffer"],[194,31,265,27],[194,33,265,29],[194,34,265,30],[194,36,265,32],[194,41,265,37],[194,42,265,38],[195,8,266,4],[195,15,266,11,"_$$_REQUIRE"],[195,26,266,11],[195,27,266,11,"_dependencyMap"],[195,41,266,11],[195,58,266,19,"hash256"],[195,65,266,26],[195,66,266,27,"buffer"],[195,72,266,33],[195,73,266,34],[196,6,267,2],[197,4,267,3],[198,6,267,3,"key"],[198,9,267,3],[199,6,267,3,"value"],[199,11,267,3],[199,13,268,2],[199,22,268,2,"hashForWitnessV1"],[199,38,268,18,"hashForWitnessV1"],[199,39,268,19,"inIndex"],[199,46,268,26],[199,48,268,28,"prevOutScripts"],[199,62,268,42],[199,64,268,44,"values"],[199,70,268,50],[199,72,268,52,"hashType"],[199,80,268,60],[199,82,268,62,"leafHash"],[199,90,268,70],[199,92,268,72,"annex"],[199,97,268,77],[199,99,268,79],[200,8,269,4],[201,8,270,4,"_$$_REQUIRE"],[201,19,270,4],[201,20,270,4,"_dependencyMap"],[201,34,270,4],[201,50,270,4,"typeforce"],[201,59,270,4],[201,60,271,6,"_$$_REQUIRE"],[201,71,271,6],[201,72,271,6,"_dependencyMap"],[201,86,271,6],[201,102,271,12,"tuple"],[201,107,271,17],[201,108,272,8,"_$$_REQUIRE"],[201,119,272,8],[201,120,272,8,"_dependencyMap"],[201,134,272,8],[201,150,272,14,"UInt32"],[201,156,272,20],[201,158,273,8,"_$$_REQUIRE"],[201,169,273,8],[201,170,273,8,"_dependencyMap"],[201,184,273,8],[201,200,273,8,"typeforce"],[201,209,273,8],[201,210,273,18,"arrayOf"],[201,217,273,25],[201,218,273,26,"_$$_REQUIRE"],[201,229,273,26],[201,230,273,26,"_dependencyMap"],[201,244,273,26],[201,260,273,32,"Buffer"],[201,266,273,38],[201,267,273,39],[201,269,274,8,"_$$_REQUIRE"],[201,280,274,8],[201,281,274,8,"_dependencyMap"],[201,295,274,8],[201,311,274,8,"typeforce"],[201,320,274,8],[201,321,274,18,"arrayOf"],[201,328,274,25],[201,329,274,26,"_$$_REQUIRE"],[201,340,274,26],[201,341,274,26,"_dependencyMap"],[201,355,274,26],[201,371,274,32,"Satoshi"],[201,378,274,39],[201,379,274,40],[201,381,275,8,"_$$_REQUIRE"],[201,392,275,8],[201,393,275,8,"_dependencyMap"],[201,407,275,8],[201,423,275,14,"UInt32"],[201,429,276,6],[201,430,276,7],[201,432,277,6,"arguments"],[201,441,278,4],[201,442,278,5],[202,8,279,4],[202,12,280,6,"values"],[202,18,280,12],[202,19,280,13,"length"],[202,25,280,19],[202,30,280,24],[202,34,280,28],[202,35,280,29,"ins"],[202,38,280,32],[202,39,280,33,"length"],[202,45,280,39],[202,49,281,6,"prevOutScripts"],[202,63,281,20],[202,64,281,21,"length"],[202,70,281,27],[202,75,281,32],[202,79,281,36],[202,80,281,37,"ins"],[202,83,281,40],[202,84,281,41,"length"],[202,90,281,47],[202,92,282,6],[203,10,283,6],[203,16,283,12],[203,20,283,16,"Error"],[203,25,283,21],[203,26,283,22],[203,79,283,75],[203,80,283,76],[204,8,284,4],[205,8,285,4],[205,12,285,10,"outputType"],[205,22,285,20],[205,25,286,6,"hashType"],[205,33,286,14],[205,38,286,19,"Transaction"],[205,49,286,30],[205,50,286,31,"SIGHASH_DEFAULT"],[205,65,286,46],[205,68,287,10,"Transaction"],[205,79,287,21],[205,80,287,22,"SIGHASH_ALL"],[205,91,287,33],[205,94,288,10,"hashType"],[205,102,288,18],[205,105,288,21,"Transaction"],[205,116,288,32],[205,117,288,33,"SIGHASH_OUTPUT_MASK"],[205,136,288,52],[206,8,289,4],[206,12,289,10,"inputType"],[206,21,289,19],[206,24,289,22,"hashType"],[206,32,289,30],[206,35,289,33,"Transaction"],[206,46,289,44],[206,47,289,45,"SIGHASH_INPUT_MASK"],[206,65,289,63],[207,8,290,4],[207,12,290,10,"isAnyoneCanPay"],[207,26,290,24],[207,29,290,27,"inputType"],[207,38,290,36],[207,43,290,41,"Transaction"],[207,54,290,52],[207,55,290,53,"SIGHASH_ANYONECANPAY"],[207,75,290,73],[208,8,291,4],[208,12,291,10,"isNone"],[208,18,291,16],[208,21,291,19,"outputType"],[208,31,291,29],[208,36,291,34,"Transaction"],[208,47,291,45],[208,48,291,46,"SIGHASH_NONE"],[208,60,291,58],[209,8,292,4],[209,12,292,10,"isSingle"],[209,20,292,18],[209,23,292,21,"outputType"],[209,33,292,31],[209,38,292,36,"Transaction"],[209,49,292,47],[209,50,292,48,"SIGHASH_SINGLE"],[209,64,292,62],[210,8,293,4],[210,12,293,8,"hashPrevouts"],[210,24,293,20],[210,27,293,23,"EMPTY_BUFFER"],[210,39,293,35],[211,8,294,4],[211,12,294,8,"hashAmounts"],[211,23,294,19],[211,26,294,22,"EMPTY_BUFFER"],[211,38,294,34],[212,8,295,4],[212,12,295,8,"hashScriptPubKeys"],[212,29,295,25],[212,32,295,28,"EMPTY_BUFFER"],[212,44,295,40],[213,8,296,4],[213,12,296,8,"hashSequences"],[213,25,296,21],[213,28,296,24,"EMPTY_BUFFER"],[213,40,296,36],[214,8,297,4],[214,12,297,8,"hashOutputs"],[214,23,297,19],[214,26,297,22,"EMPTY_BUFFER"],[214,38,297,34],[215,8,298,4],[215,12,298,8],[215,13,298,9,"isAnyoneCanPay"],[215,27,298,23],[215,29,298,25],[216,10,299,6],[216,14,299,10,"bufferWriter"],[216,26,299,22],[216,29,299,25,"_$$_REQUIRE"],[216,40,299,25],[216,41,299,25,"_dependencyMap"],[216,55,299,25],[216,77,299,39,"BufferWriter"],[216,89,299,51],[216,90,299,52,"withCapacity"],[216,102,299,64],[216,103,300,8],[216,105,300,10],[216,108,300,13],[216,112,300,17],[216,113,300,18,"ins"],[216,116,300,21],[216,117,300,22,"length"],[216,123,301,6],[216,124,301,7],[217,10,302,6],[217,14,302,10],[217,15,302,11,"ins"],[217,18,302,14],[217,19,302,15,"forEach"],[217,26,302,22],[217,27,302,23],[217,37,302,23,"txIn"],[217,41,302,27],[217,43,302,31],[218,12,303,8,"bufferWriter"],[218,24,303,20],[218,25,303,21,"writeSlice"],[218,35,303,31],[218,36,303,32,"txIn"],[218,40,303,36],[218,41,303,37,"hash"],[218,45,303,41],[218,46,303,42],[219,12,304,8,"bufferWriter"],[219,24,304,20],[219,25,304,21,"writeUInt32"],[219,36,304,32],[219,37,304,33,"txIn"],[219,41,304,37],[219,42,304,38,"index"],[219,47,304,43],[219,48,304,44],[220,10,305,6],[220,11,305,7],[220,12,305,8],[221,10,306,6,"hashPrevouts"],[221,22,306,18],[221,25,306,21,"_$$_REQUIRE"],[221,36,306,21],[221,37,306,21,"_dependencyMap"],[221,51,306,21],[221,68,306,29,"sha256"],[221,74,306,35],[221,75,306,36,"bufferWriter"],[221,87,306,48],[221,88,306,49,"end"],[221,91,306,52],[221,92,306,53],[221,93,306,54],[221,94,306,55],[222,10,307,6,"bufferWriter"],[222,22,307,18],[222,25,307,21,"_$$_REQUIRE"],[222,36,307,21],[222,37,307,21,"_dependencyMap"],[222,51,307,21],[222,73,307,35,"BufferWriter"],[222,85,307,47],[222,86,307,48,"withCapacity"],[222,98,307,60],[222,99,308,8],[222,100,308,9],[222,103,308,12],[222,107,308,16],[222,108,308,17,"ins"],[222,111,308,20],[222,112,308,21,"length"],[222,118,309,6],[222,119,309,7],[223,10,310,6,"values"],[223,16,310,12],[223,17,310,13,"forEach"],[223,24,310,20],[223,25,310,21],[223,35,310,21,"value"],[223,40,310,26],[224,12,310,26],[224,19,310,30,"bufferWriter"],[224,31,310,42],[224,32,310,43,"writeUInt64"],[224,43,310,54],[224,44,310,55,"value"],[224,49,310,60],[224,50,310,61],[225,10,310,61],[225,12,310,62],[226,10,311,6,"hashAmounts"],[226,21,311,17],[226,24,311,20,"_$$_REQUIRE"],[226,35,311,20],[226,36,311,20,"_dependencyMap"],[226,50,311,20],[226,67,311,28,"sha256"],[226,73,311,34],[226,74,311,35,"bufferWriter"],[226,86,311,47],[226,87,311,48,"end"],[226,90,311,51],[226,91,311,52],[226,92,311,53],[226,93,311,54],[227,10,312,6,"bufferWriter"],[227,22,312,18],[227,25,312,21,"_$$_REQUIRE"],[227,36,312,21],[227,37,312,21,"_dependencyMap"],[227,51,312,21],[227,73,312,35,"BufferWriter"],[227,85,312,47],[227,86,312,48,"withCapacity"],[227,98,312,60],[227,99,313,8,"prevOutScripts"],[227,113,313,22],[227,114,313,23,"map"],[227,117,313,26],[227,118,313,27,"varSliceSize"],[227,130,313,39],[227,131,313,40],[227,132,313,41,"reduce"],[227,138,313,47],[227,139,313,48],[227,149,313,49,"a"],[227,150,313,50],[227,152,313,52,"b"],[227,153,313,53],[228,12,313,53],[228,19,313,58,"a"],[228,20,313,59],[228,23,313,62,"b"],[228,24,313,63],[229,10,313,63],[229,12,314,6],[229,13,314,7],[230,10,315,6,"prevOutScripts"],[230,24,315,20],[230,25,315,21,"forEach"],[230,32,315,28],[230,33,315,29],[230,43,315,29,"prevOutScript"],[230,56,315,42],[231,12,315,42],[231,19,316,8,"bufferWriter"],[231,31,316,20],[231,32,316,21,"writeVarSlice"],[231,45,316,34],[231,46,316,35,"prevOutScript"],[231,59,316,48],[231,60,316,49],[232,10,316,49],[232,11,317,6],[232,12,317,7],[233,10,318,6,"hashScriptPubKeys"],[233,27,318,23],[233,30,318,26,"_$$_REQUIRE"],[233,41,318,26],[233,42,318,26,"_dependencyMap"],[233,56,318,26],[233,73,318,34,"sha256"],[233,79,318,40],[233,80,318,41,"bufferWriter"],[233,92,318,53],[233,93,318,54,"end"],[233,96,318,57],[233,97,318,58],[233,98,318,59],[233,99,318,60],[234,10,319,6,"bufferWriter"],[234,22,319,18],[234,25,319,21,"_$$_REQUIRE"],[234,36,319,21],[234,37,319,21,"_dependencyMap"],[234,51,319,21],[234,73,319,35,"BufferWriter"],[234,85,319,47],[234,86,319,48,"withCapacity"],[234,98,319,60],[234,99,320,8],[234,100,320,9],[234,103,320,12],[234,107,320,16],[234,108,320,17,"ins"],[234,111,320,20],[234,112,320,21,"length"],[234,118,321,6],[234,119,321,7],[235,10,322,6],[235,14,322,10],[235,15,322,11,"ins"],[235,18,322,14],[235,19,322,15,"forEach"],[235,26,322,22],[235,27,322,23],[235,37,322,23,"txIn"],[235,41,322,27],[236,12,322,27],[236,19,322,31,"bufferWriter"],[236,31,322,43],[236,32,322,44,"writeUInt32"],[236,43,322,55],[236,44,322,56,"txIn"],[236,48,322,60],[236,49,322,61,"sequence"],[236,57,322,69],[236,58,322,70],[237,10,322,70],[237,12,322,71],[238,10,323,6,"hashSequences"],[238,23,323,19],[238,26,323,22,"_$$_REQUIRE"],[238,37,323,22],[238,38,323,22,"_dependencyMap"],[238,52,323,22],[238,69,323,30,"sha256"],[238,75,323,36],[238,76,323,37,"bufferWriter"],[238,88,323,49],[238,89,323,50,"end"],[238,92,323,53],[238,93,323,54],[238,94,323,55],[238,95,323,56],[239,8,324,4],[240,8,325,4],[240,12,325,8],[240,14,325,10,"isNone"],[240,20,325,16],[240,24,325,20,"isSingle"],[240,32,325,28],[240,33,325,29],[240,35,325,31],[241,10,326,6],[241,14,326,12,"txOutsSize"],[241,24,326,22],[241,27,326,25],[241,31,326,29],[241,32,326,30,"outs"],[241,36,326,34],[241,37,327,9,"map"],[241,40,327,12],[241,41,327,13],[241,51,327,13,"output"],[241,57,327,19],[242,12,327,19],[242,19,327,23],[242,20,327,24],[242,23,327,27,"varSliceSize"],[242,35,327,39],[242,36,327,40,"output"],[242,42,327,46],[242,43,327,47,"script"],[242,49,327,53],[242,50,327,54],[243,10,327,54],[243,12,327,55],[243,13,328,9,"reduce"],[243,19,328,15],[243,20,328,16],[243,30,328,17,"a"],[243,31,328,18],[243,33,328,20,"b"],[243,34,328,21],[244,12,328,21],[244,19,328,26,"a"],[244,20,328,27],[244,23,328,30,"b"],[244,24,328,31],[245,10,328,31],[245,12,328,32],[246,10,329,6],[246,14,329,12,"bufferWriter"],[246,27,329,24],[246,30,329,27,"_$$_REQUIRE"],[246,41,329,27],[246,42,329,27,"_dependencyMap"],[246,56,329,27],[246,78,329,41,"BufferWriter"],[246,90,329,53],[246,91,329,54,"withCapacity"],[246,103,329,66],[246,104,329,67,"txOutsSize"],[246,114,329,77],[246,115,329,78],[247,10,330,6],[247,14,330,10],[247,15,330,11,"outs"],[247,19,330,15],[247,20,330,16,"forEach"],[247,27,330,23],[247,28,330,24],[247,38,330,24,"out"],[247,41,330,27],[247,43,330,31],[248,12,331,8,"bufferWriter"],[248,25,331,20],[248,26,331,21,"writeUInt64"],[248,37,331,32],[248,38,331,33,"out"],[248,41,331,36],[248,42,331,37,"value"],[248,47,331,42],[248,48,331,43],[249,12,332,8,"bufferWriter"],[249,25,332,20],[249,26,332,21,"writeVarSlice"],[249,39,332,34],[249,40,332,35,"out"],[249,43,332,38],[249,44,332,39,"script"],[249,50,332,45],[249,51,332,46],[250,10,333,6],[250,11,333,7],[250,12,333,8],[251,10,334,6,"hashOutputs"],[251,21,334,17],[251,24,334,20,"_$$_REQUIRE"],[251,35,334,20],[251,36,334,20,"_dependencyMap"],[251,50,334,20],[251,67,334,28,"sha256"],[251,73,334,34],[251,74,334,35,"bufferWriter"],[251,87,334,47],[251,88,334,48,"end"],[251,91,334,51],[251,92,334,52],[251,93,334,53],[251,94,334,54],[252,8,335,4],[252,9,335,5],[252,15,335,11],[252,19,335,15,"isSingle"],[252,27,335,23],[252,31,335,27,"inIndex"],[252,38,335,34],[252,41,335,37],[252,45,335,41],[252,46,335,42,"outs"],[252,50,335,46],[252,51,335,47,"length"],[252,57,335,53],[252,59,335,55],[253,10,336,6],[253,14,336,12,"output"],[253,20,336,18],[253,23,336,21],[253,27,336,25],[253,28,336,26,"outs"],[253,32,336,30],[253,33,336,31,"inIndex"],[253,40,336,38],[253,41,336,39],[254,10,337,6],[254,14,337,12,"bufferWriter"],[254,28,337,24],[254,31,337,27,"_$$_REQUIRE"],[254,42,337,27],[254,43,337,27,"_dependencyMap"],[254,57,337,27],[254,79,337,41,"BufferWriter"],[254,91,337,53],[254,92,337,54,"withCapacity"],[254,104,337,66],[254,105,338,8],[254,106,338,9],[254,109,338,12,"varSliceSize"],[254,121,338,24],[254,122,338,25,"output"],[254,128,338,31],[254,129,338,32,"script"],[254,135,338,38],[254,136,339,6],[254,137,339,7],[255,10,340,6,"bufferWriter"],[255,24,340,18],[255,25,340,19,"writeUInt64"],[255,36,340,30],[255,37,340,31,"output"],[255,43,340,37],[255,44,340,38,"value"],[255,49,340,43],[255,50,340,44],[256,10,341,6,"bufferWriter"],[256,24,341,18],[256,25,341,19,"writeVarSlice"],[256,38,341,32],[256,39,341,33,"output"],[256,45,341,39],[256,46,341,40,"script"],[256,52,341,46],[256,53,341,47],[257,10,342,6,"hashOutputs"],[257,21,342,17],[257,24,342,20,"_$$_REQUIRE"],[257,35,342,20],[257,36,342,20,"_dependencyMap"],[257,50,342,20],[257,67,342,28,"sha256"],[257,73,342,34],[257,74,342,35,"bufferWriter"],[257,88,342,47],[257,89,342,48,"end"],[257,92,342,51],[257,93,342,52],[257,94,342,53],[257,95,342,54],[258,8,343,4],[259,8,344,4],[259,12,344,10,"spendType"],[259,21,344,19],[259,24,344,22],[259,25,344,23,"leafHash"],[259,33,344,31],[259,36,344,34],[259,37,344,35],[259,40,344,38],[259,41,344,39],[259,46,344,44,"annex"],[259,51,344,49],[259,54,344,52],[259,55,344,53],[259,58,344,56],[259,59,344,57],[259,60,344,58],[260,8,345,4],[261,8,346,4],[262,8,347,4],[263,8,348,4],[264,8,349,4],[264,12,349,10,"sigMsgSize"],[264,22,349,20],[264,25,350,6],[264,28,350,9],[264,32,351,7,"isAnyoneCanPay"],[264,46,351,21],[264,49,351,24],[264,51,351,26],[264,54,351,29],[264,55,351,30],[264,56,351,31],[264,60,352,7,"isNone"],[264,66,352,13],[264,69,352,16],[264,71,352,18],[264,74,352,21],[264,75,352,22],[264,76,352,23],[264,80,353,7,"annex"],[264,85,353,12],[264,88,353,15],[264,90,353,17],[264,93,353,20],[264,94,353,21],[264,95,353,22],[264,99,354,7,"leafHash"],[264,107,354,15],[264,110,354,18],[264,112,354,20],[264,115,354,23],[264,116,354,24],[264,117,354,25],[265,8,355,4],[265,12,355,10,"sigMsgWriter"],[265,24,355,22],[265,27,355,25,"_$$_REQUIRE"],[265,38,355,25],[265,39,355,25,"_dependencyMap"],[265,53,355,25],[265,75,355,39,"BufferWriter"],[265,87,355,51],[265,88,355,52,"withCapacity"],[265,100,355,64],[265,101,355,65,"sigMsgSize"],[265,111,355,75],[265,112,355,76],[266,8,356,4,"sigMsgWriter"],[266,20,356,16],[266,21,356,17,"writeUInt8"],[266,31,356,27],[266,32,356,28,"hashType"],[266,40,356,36],[266,41,356,37],[267,8,357,4],[268,8,358,4,"sigMsgWriter"],[268,20,358,16],[268,21,358,17,"writeInt32"],[268,31,358,27],[268,32,358,28],[268,36,358,32],[268,37,358,33,"version"],[268,44,358,40],[268,45,358,41],[269,8,359,4,"sigMsgWriter"],[269,20,359,16],[269,21,359,17,"writeUInt32"],[269,32,359,28],[269,33,359,29],[269,37,359,33],[269,38,359,34,"locktime"],[269,46,359,42],[269,47,359,43],[270,8,360,4,"sigMsgWriter"],[270,20,360,16],[270,21,360,17,"writeSlice"],[270,31,360,27],[270,32,360,28,"hashPrevouts"],[270,44,360,40],[270,45,360,41],[271,8,361,4,"sigMsgWriter"],[271,20,361,16],[271,21,361,17,"writeSlice"],[271,31,361,27],[271,32,361,28,"hashAmounts"],[271,43,361,39],[271,44,361,40],[272,8,362,4,"sigMsgWriter"],[272,20,362,16],[272,21,362,17,"writeSlice"],[272,31,362,27],[272,32,362,28,"hashScriptPubKeys"],[272,49,362,45],[272,50,362,46],[273,8,363,4,"sigMsgWriter"],[273,20,363,16],[273,21,363,17,"writeSlice"],[273,31,363,27],[273,32,363,28,"hashSequences"],[273,45,363,41],[273,46,363,42],[274,8,364,4],[274,12,364,8],[274,14,364,10,"isNone"],[274,20,364,16],[274,24,364,20,"isSingle"],[274,32,364,28],[274,33,364,29],[274,35,364,31],[275,10,365,6,"sigMsgWriter"],[275,22,365,18],[275,23,365,19,"writeSlice"],[275,33,365,29],[275,34,365,30,"hashOutputs"],[275,45,365,41],[275,46,365,42],[276,8,366,4],[277,8,367,4],[278,8,368,4,"sigMsgWriter"],[278,20,368,16],[278,21,368,17,"writeUInt8"],[278,31,368,27],[278,32,368,28,"spendType"],[278,41,368,37],[278,42,368,38],[279,8,369,4],[279,12,369,8,"isAnyoneCanPay"],[279,26,369,22],[279,28,369,24],[280,10,370,6],[280,14,370,12,"input"],[280,19,370,17],[280,22,370,20],[280,26,370,24],[280,27,370,25,"ins"],[280,30,370,28],[280,31,370,29,"inIndex"],[280,38,370,36],[280,39,370,37],[281,10,371,6,"sigMsgWriter"],[281,22,371,18],[281,23,371,19,"writeSlice"],[281,33,371,29],[281,34,371,30,"input"],[281,39,371,35],[281,40,371,36,"hash"],[281,44,371,40],[281,45,371,41],[282,10,372,6,"sigMsgWriter"],[282,22,372,18],[282,23,372,19,"writeUInt32"],[282,34,372,30],[282,35,372,31,"input"],[282,40,372,36],[282,41,372,37,"index"],[282,46,372,42],[282,47,372,43],[283,10,373,6,"sigMsgWriter"],[283,22,373,18],[283,23,373,19,"writeUInt64"],[283,34,373,30],[283,35,373,31,"values"],[283,41,373,37],[283,42,373,38,"inIndex"],[283,49,373,45],[283,50,373,46],[283,51,373,47],[284,10,374,6,"sigMsgWriter"],[284,22,374,18],[284,23,374,19,"writeVarSlice"],[284,36,374,32],[284,37,374,33,"prevOutScripts"],[284,51,374,47],[284,52,374,48,"inIndex"],[284,59,374,55],[284,60,374,56],[284,61,374,57],[285,10,375,6,"sigMsgWriter"],[285,22,375,18],[285,23,375,19,"writeUInt32"],[285,34,375,30],[285,35,375,31,"input"],[285,40,375,36],[285,41,375,37,"sequence"],[285,49,375,45],[285,50,375,46],[286,8,376,4],[286,9,376,5],[286,15,376,11],[287,10,377,6,"sigMsgWriter"],[287,22,377,18],[287,23,377,19,"writeUInt32"],[287,34,377,30],[287,35,377,31,"inIndex"],[287,42,377,38],[287,43,377,39],[288,8,378,4],[289,8,379,4],[289,12,379,8,"annex"],[289,17,379,13],[289,19,379,15],[290,10,380,6],[290,14,380,12,"bufferWriter"],[290,28,380,24],[290,31,380,27,"_$$_REQUIRE"],[290,42,380,27],[290,43,380,27,"_dependencyMap"],[290,57,380,27],[290,79,380,41,"BufferWriter"],[290,91,380,53],[290,92,380,54,"withCapacity"],[290,104,380,66],[290,105,381,8,"varSliceSize"],[290,117,381,20],[290,118,381,21,"annex"],[290,123,381,26],[290,124,382,6],[290,125,382,7],[291,10,383,6,"bufferWriter"],[291,24,383,18],[291,25,383,19,"writeVarSlice"],[291,38,383,32],[291,39,383,33,"annex"],[291,44,383,38],[291,45,383,39],[292,10,384,6,"sigMsgWriter"],[292,22,384,18],[292,23,384,19,"writeSlice"],[292,33,384,29],[292,34,384,30,"_$$_REQUIRE"],[292,45,384,30],[292,46,384,30,"_dependencyMap"],[292,60,384,30],[292,77,384,38,"sha256"],[292,83,384,44],[292,84,384,45,"bufferWriter"],[292,98,384,57],[292,99,384,58,"end"],[292,102,384,61],[292,103,384,62],[292,104,384,63],[292,105,384,64],[292,106,384,65],[293,8,385,4],[294,8,386,4],[295,8,387,4],[295,12,387,8,"isSingle"],[295,20,387,16],[295,22,387,18],[296,10,388,6,"sigMsgWriter"],[296,22,388,18],[296,23,388,19,"writeSlice"],[296,33,388,29],[296,34,388,30,"hashOutputs"],[296,45,388,41],[296,46,388,42],[297,8,389,4],[298,8,390,4],[299,8,391,4],[299,12,391,8,"leafHash"],[299,20,391,16],[299,22,391,18],[300,10,392,6,"sigMsgWriter"],[300,22,392,18],[300,23,392,19,"writeSlice"],[300,33,392,29],[300,34,392,30,"leafHash"],[300,42,392,38],[300,43,392,39],[301,10,393,6,"sigMsgWriter"],[301,22,393,18],[301,23,393,19,"writeUInt8"],[301,33,393,29],[301,34,393,30],[301,35,393,31],[301,36,393,32],[302,10,394,6,"sigMsgWriter"],[302,22,394,18],[302,23,394,19,"writeUInt32"],[302,34,394,30],[302,35,394,31],[302,45,394,41],[302,46,394,42],[303,8,395,4],[304,8,396,4],[305,8,397,4],[306,8,398,4],[306,15,398,11,"_$$_REQUIRE"],[306,26,398,11],[306,27,398,11,"_dependencyMap"],[306,41,398,11],[306,58,398,19,"taggedHash"],[306,68,398,29],[306,69,399,6],[306,81,399,18],[306,83,400,6,"Buffer"],[306,89,400,12],[306,90,400,13,"concat"],[306,96,400,19],[306,97,400,20],[306,98,400,21,"Buffer"],[306,104,400,27],[306,105,400,28,"from"],[306,109,400,32],[306,110,400,33],[306,111,400,34],[306,115,400,38],[306,116,400,39],[306,117,400,40],[306,119,400,42,"sigMsgWriter"],[306,131,400,54],[306,132,400,55,"end"],[306,135,400,58],[306,136,400,59],[306,137,400,60],[306,138,400,61],[306,139,401,4],[306,140,401,5],[307,6,402,2],[308,4,402,3],[309,6,402,3,"key"],[309,9,402,3],[310,6,402,3,"value"],[310,11,402,3],[310,13,403,2],[310,22,403,2,"hashForWitnessV0"],[310,38,403,18,"hashForWitnessV0"],[310,39,403,19,"inIndex"],[310,46,403,26],[310,48,403,28,"prevOutScript"],[310,61,403,41],[310,63,403,43,"value"],[310,68,403,48],[310,70,403,50,"hashType"],[310,78,403,58],[310,80,403,60],[311,8,404,4,"_$$_REQUIRE"],[311,19,404,4],[311,20,404,4,"_dependencyMap"],[311,34,404,4],[311,50,404,4,"typeforce"],[311,59,404,4],[311,60,405,6,"_$$_REQUIRE"],[311,71,405,6],[311,72,405,6,"_dependencyMap"],[311,86,405,6],[311,102,405,12,"tuple"],[311,107,405,17],[311,108,405,18,"_$$_REQUIRE"],[311,119,405,18],[311,120,405,18,"_dependencyMap"],[311,134,405,18],[311,150,405,24,"UInt32"],[311,156,405,30],[311,158,405,32,"_$$_REQUIRE"],[311,169,405,32],[311,170,405,32,"_dependencyMap"],[311,184,405,32],[311,200,405,38,"Buffer"],[311,206,405,44],[311,208,405,46,"_$$_REQUIRE"],[311,219,405,46],[311,220,405,46,"_dependencyMap"],[311,234,405,46],[311,250,405,52,"Satoshi"],[311,257,405,59],[311,259,405,61,"_$$_REQUIRE"],[311,270,405,61],[311,271,405,61,"_dependencyMap"],[311,285,405,61],[311,301,405,67,"UInt32"],[311,307,405,73],[311,308,405,74],[311,310,406,6,"arguments"],[311,319,407,4],[311,320,407,5],[312,8,408,4],[312,12,408,8,"tbuffer"],[312,19,408,15],[312,22,408,18,"Buffer"],[312,28,408,24],[312,29,408,25,"from"],[312,33,408,29],[312,34,408,30],[312,36,408,32],[312,37,408,33],[313,8,409,4],[313,12,409,8,"bufferWriter"],[313,24,409,20],[314,8,410,4],[314,12,410,8,"hashOutputs"],[314,23,410,19],[314,26,410,22,"ZERO"],[314,30,410,26],[315,8,411,4],[315,12,411,8,"hashPrevouts"],[315,24,411,20],[315,27,411,23,"ZERO"],[315,31,411,27],[316,8,412,4],[316,12,412,8,"hashSequence"],[316,24,412,20],[316,27,412,23,"ZERO"],[316,31,412,27],[317,8,413,4],[317,12,413,8],[317,14,413,10,"hashType"],[317,22,413,18],[317,25,413,21,"Transaction"],[317,36,413,32],[317,37,413,33,"SIGHASH_ANYONECANPAY"],[317,57,413,53],[317,58,413,54],[317,60,413,56],[318,10,414,6,"tbuffer"],[318,17,414,13],[318,20,414,16,"Buffer"],[318,26,414,22],[318,27,414,23,"allocUnsafe"],[318,38,414,34],[318,39,414,35],[318,41,414,37],[318,44,414,40],[318,48,414,44],[318,49,414,45,"ins"],[318,52,414,48],[318,53,414,49,"length"],[318,59,414,55],[318,60,414,56],[319,10,415,6,"bufferWriter"],[319,22,415,18],[319,25,415,21],[319,30,415,25,"_$$_REQUIRE"],[319,41,415,25],[319,42,415,25,"_dependencyMap"],[319,56,415,25],[319,78,415,39,"BufferWriter"],[319,90,415,51],[319,92,415,52,"tbuffer"],[319,99,415,59],[319,101,415,61],[319,102,415,62],[319,103,415,63],[320,10,416,6],[320,14,416,10],[320,15,416,11,"ins"],[320,18,416,14],[320,19,416,15,"forEach"],[320,26,416,22],[320,27,416,23],[320,37,416,23,"txIn"],[320,41,416,27],[320,43,416,31],[321,12,417,8,"bufferWriter"],[321,24,417,20],[321,25,417,21,"writeSlice"],[321,35,417,31],[321,36,417,32,"txIn"],[321,40,417,36],[321,41,417,37,"hash"],[321,45,417,41],[321,46,417,42],[322,12,418,8,"bufferWriter"],[322,24,418,20],[322,25,418,21,"writeUInt32"],[322,36,418,32],[322,37,418,33,"txIn"],[322,41,418,37],[322,42,418,38,"index"],[322,47,418,43],[322,48,418,44],[323,10,419,6],[323,11,419,7],[323,12,419,8],[324,10,420,6,"hashPrevouts"],[324,22,420,18],[324,25,420,21,"_$$_REQUIRE"],[324,36,420,21],[324,37,420,21,"_dependencyMap"],[324,51,420,21],[324,68,420,29,"hash256"],[324,75,420,36],[324,76,420,37,"tbuffer"],[324,83,420,44],[324,84,420,45],[325,8,421,4],[326,8,422,4],[326,12,423,6],[326,14,423,8,"hashType"],[326,22,423,16],[326,25,423,19,"Transaction"],[326,36,423,30],[326,37,423,31,"SIGHASH_ANYONECANPAY"],[326,57,423,51],[326,58,423,52],[326,62,424,6],[326,63,424,7,"hashType"],[326,71,424,15],[326,74,424,18],[326,78,424,22],[326,84,424,28,"Transaction"],[326,95,424,39],[326,96,424,40,"SIGHASH_SINGLE"],[326,110,424,54],[326,114,425,6],[326,115,425,7,"hashType"],[326,123,425,15],[326,126,425,18],[326,130,425,22],[326,136,425,28,"Transaction"],[326,147,425,39],[326,148,425,40,"SIGHASH_NONE"],[326,160,425,52],[326,162,426,6],[327,10,427,6,"tbuffer"],[327,17,427,13],[327,20,427,16,"Buffer"],[327,26,427,22],[327,27,427,23,"allocUnsafe"],[327,38,427,34],[327,39,427,35],[327,40,427,36],[327,43,427,39],[327,47,427,43],[327,48,427,44,"ins"],[327,51,427,47],[327,52,427,48,"length"],[327,58,427,54],[327,59,427,55],[328,10,428,6,"bufferWriter"],[328,22,428,18],[328,25,428,21],[328,30,428,25,"_$$_REQUIRE"],[328,41,428,25],[328,42,428,25,"_dependencyMap"],[328,56,428,25],[328,78,428,39,"BufferWriter"],[328,90,428,51],[328,92,428,52,"tbuffer"],[328,99,428,59],[328,101,428,61],[328,102,428,62],[328,103,428,63],[329,10,429,6],[329,14,429,10],[329,15,429,11,"ins"],[329,18,429,14],[329,19,429,15,"forEach"],[329,26,429,22],[329,27,429,23],[329,37,429,23,"txIn"],[329,41,429,27],[329,43,429,31],[330,12,430,8,"bufferWriter"],[330,24,430,20],[330,25,430,21,"writeUInt32"],[330,36,430,32],[330,37,430,33,"txIn"],[330,41,430,37],[330,42,430,38,"sequence"],[330,50,430,46],[330,51,430,47],[331,10,431,6],[331,11,431,7],[331,12,431,8],[332,10,432,6,"hashSequence"],[332,22,432,18],[332,25,432,21,"_$$_REQUIRE"],[332,36,432,21],[332,37,432,21,"_dependencyMap"],[332,51,432,21],[332,68,432,29,"hash256"],[332,75,432,36],[332,76,432,37,"tbuffer"],[332,83,432,44],[332,84,432,45],[333,8,433,4],[334,8,434,4],[334,12,435,6],[334,13,435,7,"hashType"],[334,21,435,15],[334,24,435,18],[334,28,435,22],[334,34,435,28,"Transaction"],[334,45,435,39],[334,46,435,40,"SIGHASH_SINGLE"],[334,60,435,54],[334,64,436,6],[334,65,436,7,"hashType"],[334,73,436,15],[334,76,436,18],[334,80,436,22],[334,86,436,28,"Transaction"],[334,97,436,39],[334,98,436,40,"SIGHASH_NONE"],[334,110,436,52],[334,112,437,6],[335,10,438,6],[335,14,438,12,"txOutsSize"],[335,24,438,22],[335,27,438,25],[335,31,438,29],[335,32,438,30,"outs"],[335,36,438,34],[335,37,438,35,"reduce"],[335,43,438,41],[335,44,438,42],[335,54,438,43,"sum"],[335,57,438,46],[335,59,438,48,"output"],[335,65,438,54],[335,67,438,59],[336,12,439,8],[336,19,439,15,"sum"],[336,22,439,18],[336,25,439,21],[336,26,439,22],[336,29,439,25,"varSliceSize"],[336,41,439,37],[336,42,439,38,"output"],[336,48,439,44],[336,49,439,45,"script"],[336,55,439,51],[336,56,439,52],[337,10,440,6],[337,11,440,7],[337,13,440,9],[337,14,440,10],[337,15,440,11],[338,10,441,6,"tbuffer"],[338,17,441,13],[338,20,441,16,"Buffer"],[338,26,441,22],[338,27,441,23,"allocUnsafe"],[338,38,441,34],[338,39,441,35,"txOutsSize"],[338,49,441,45],[338,50,441,46],[339,10,442,6,"bufferWriter"],[339,22,442,18],[339,25,442,21],[339,30,442,25,"_$$_REQUIRE"],[339,41,442,25],[339,42,442,25,"_dependencyMap"],[339,56,442,25],[339,78,442,39,"BufferWriter"],[339,90,442,51],[339,92,442,52,"tbuffer"],[339,99,442,59],[339,101,442,61],[339,102,442,62],[339,103,442,63],[340,10,443,6],[340,14,443,10],[340,15,443,11,"outs"],[340,19,443,15],[340,20,443,16,"forEach"],[340,27,443,23],[340,28,443,24],[340,38,443,24,"out"],[340,41,443,27],[340,43,443,31],[341,12,444,8,"bufferWriter"],[341,24,444,20],[341,25,444,21,"writeUInt64"],[341,36,444,32],[341,37,444,33,"out"],[341,40,444,36],[341,41,444,37,"value"],[341,46,444,42],[341,47,444,43],[342,12,445,8,"bufferWriter"],[342,24,445,20],[342,25,445,21,"writeVarSlice"],[342,38,445,34],[342,39,445,35,"out"],[342,42,445,38],[342,43,445,39,"script"],[342,49,445,45],[342,50,445,46],[343,10,446,6],[343,11,446,7],[343,12,446,8],[344,10,447,6,"hashOutputs"],[344,21,447,17],[344,24,447,20,"_$$_REQUIRE"],[344,35,447,20],[344,36,447,20,"_dependencyMap"],[344,50,447,20],[344,67,447,28,"hash256"],[344,74,447,35],[344,75,447,36,"tbuffer"],[344,82,447,43],[344,83,447,44],[345,8,448,4],[345,9,448,5],[345,15,448,11],[345,19,449,6],[345,20,449,7,"hashType"],[345,28,449,15],[345,31,449,18],[345,35,449,22],[345,41,449,28,"Transaction"],[345,52,449,39],[345,53,449,40,"SIGHASH_SINGLE"],[345,67,449,54],[345,71,450,6,"inIndex"],[345,78,450,13],[345,81,450,16],[345,85,450,20],[345,86,450,21,"outs"],[345,90,450,25],[345,91,450,26,"length"],[345,97,450,32],[345,99,451,6],[346,10,452,6],[346,14,452,12,"output"],[346,20,452,18],[346,23,452,21],[346,27,452,25],[346,28,452,26,"outs"],[346,32,452,30],[346,33,452,31,"inIndex"],[346,40,452,38],[346,41,452,39],[347,10,453,6,"tbuffer"],[347,17,453,13],[347,20,453,16,"Buffer"],[347,26,453,22],[347,27,453,23,"allocUnsafe"],[347,38,453,34],[347,39,453,35],[347,40,453,36],[347,43,453,39,"varSliceSize"],[347,55,453,51],[347,56,453,52,"output"],[347,62,453,58],[347,63,453,59,"script"],[347,69,453,65],[347,70,453,66],[347,71,453,67],[348,10,454,6,"bufferWriter"],[348,22,454,18],[348,25,454,21],[348,30,454,25,"_$$_REQUIRE"],[348,41,454,25],[348,42,454,25,"_dependencyMap"],[348,56,454,25],[348,78,454,39,"BufferWriter"],[348,90,454,51],[348,92,454,52,"tbuffer"],[348,99,454,59],[348,101,454,61],[348,102,454,62],[348,103,454,63],[349,10,455,6,"bufferWriter"],[349,22,455,18],[349,23,455,19,"writeUInt64"],[349,34,455,30],[349,35,455,31,"output"],[349,41,455,37],[349,42,455,38,"value"],[349,47,455,43],[349,48,455,44],[350,10,456,6,"bufferWriter"],[350,22,456,18],[350,23,456,19,"writeVarSlice"],[350,36,456,32],[350,37,456,33,"output"],[350,43,456,39],[350,44,456,40,"script"],[350,50,456,46],[350,51,456,47],[351,10,457,6,"hashOutputs"],[351,21,457,17],[351,24,457,20,"_$$_REQUIRE"],[351,35,457,20],[351,36,457,20,"_dependencyMap"],[351,50,457,20],[351,67,457,28,"hash256"],[351,74,457,35],[351,75,457,36,"tbuffer"],[351,82,457,43],[351,83,457,44],[352,8,458,4],[353,8,459,4,"tbuffer"],[353,15,459,11],[353,18,459,14,"Buffer"],[353,24,459,20],[353,25,459,21,"allocUnsafe"],[353,36,459,32],[353,37,459,33],[353,40,459,36],[353,43,459,39,"varSliceSize"],[353,55,459,51],[353,56,459,52,"prevOutScript"],[353,69,459,65],[353,70,459,66],[353,71,459,67],[354,8,460,4,"bufferWriter"],[354,20,460,16],[354,23,460,19],[354,28,460,23,"_$$_REQUIRE"],[354,39,460,23],[354,40,460,23,"_dependencyMap"],[354,54,460,23],[354,76,460,37,"BufferWriter"],[354,88,460,49],[354,90,460,50,"tbuffer"],[354,97,460,57],[354,99,460,59],[354,100,460,60],[354,101,460,61],[355,8,461,4],[355,12,461,10,"input"],[355,17,461,15],[355,20,461,18],[355,24,461,22],[355,25,461,23,"ins"],[355,28,461,26],[355,29,461,27,"inIndex"],[355,36,461,34],[355,37,461,35],[356,8,462,4,"bufferWriter"],[356,20,462,16],[356,21,462,17,"writeInt32"],[356,31,462,27],[356,32,462,28],[356,36,462,32],[356,37,462,33,"version"],[356,44,462,40],[356,45,462,41],[357,8,463,4,"bufferWriter"],[357,20,463,16],[357,21,463,17,"writeSlice"],[357,31,463,27],[357,32,463,28,"hashPrevouts"],[357,44,463,40],[357,45,463,41],[358,8,464,4,"bufferWriter"],[358,20,464,16],[358,21,464,17,"writeSlice"],[358,31,464,27],[358,32,464,28,"hashSequence"],[358,44,464,40],[358,45,464,41],[359,8,465,4,"bufferWriter"],[359,20,465,16],[359,21,465,17,"writeSlice"],[359,31,465,27],[359,32,465,28,"input"],[359,37,465,33],[359,38,465,34,"hash"],[359,42,465,38],[359,43,465,39],[360,8,466,4,"bufferWriter"],[360,20,466,16],[360,21,466,17,"writeUInt32"],[360,32,466,28],[360,33,466,29,"input"],[360,38,466,34],[360,39,466,35,"index"],[360,44,466,40],[360,45,466,41],[361,8,467,4,"bufferWriter"],[361,20,467,16],[361,21,467,17,"writeVarSlice"],[361,34,467,30],[361,35,467,31,"prevOutScript"],[361,48,467,44],[361,49,467,45],[362,8,468,4,"bufferWriter"],[362,20,468,16],[362,21,468,17,"writeUInt64"],[362,32,468,28],[362,33,468,29,"value"],[362,38,468,34],[362,39,468,35],[363,8,469,4,"bufferWriter"],[363,20,469,16],[363,21,469,17,"writeUInt32"],[363,32,469,28],[363,33,469,29,"input"],[363,38,469,34],[363,39,469,35,"sequence"],[363,47,469,43],[363,48,469,44],[364,8,470,4,"bufferWriter"],[364,20,470,16],[364,21,470,17,"writeSlice"],[364,31,470,27],[364,32,470,28,"hashOutputs"],[364,43,470,39],[364,44,470,40],[365,8,471,4,"bufferWriter"],[365,20,471,16],[365,21,471,17,"writeUInt32"],[365,32,471,28],[365,33,471,29],[365,37,471,33],[365,38,471,34,"locktime"],[365,46,471,42],[365,47,471,43],[366,8,472,4,"bufferWriter"],[366,20,472,16],[366,21,472,17,"writeUInt32"],[366,32,472,28],[366,33,472,29,"hashType"],[366,41,472,37],[366,42,472,38],[367,8,473,4],[367,15,473,11,"_$$_REQUIRE"],[367,26,473,11],[367,27,473,11,"_dependencyMap"],[367,41,473,11],[367,58,473,19,"hash256"],[367,65,473,26],[367,66,473,27,"tbuffer"],[367,73,473,34],[367,74,473,35],[368,6,474,2],[369,4,474,3],[370,6,474,3,"key"],[370,9,474,3],[371,6,474,3,"value"],[371,11,474,3],[371,13,475,2],[371,22,475,2,"getHash"],[371,29,475,9,"getHash"],[371,30,475,10,"forWitness"],[371,40,475,20],[371,42,475,22],[372,8,476,4],[373,8,477,4],[373,12,477,8,"forWitness"],[373,22,477,18],[373,26,477,22],[373,30,477,26],[373,31,477,27,"isCoinbase"],[373,41,477,37],[373,42,477,38],[373,43,477,39],[373,45,477,41],[373,52,477,48,"Buffer"],[373,58,477,54],[373,59,477,55,"alloc"],[373,64,477,60],[373,65,477,61],[373,67,477,63],[373,69,477,65],[373,70,477,66],[373,71,477,67],[374,8,478,4],[374,15,478,11,"_$$_REQUIRE"],[374,26,478,11],[374,27,478,11,"_dependencyMap"],[374,41,478,11],[374,58,478,19,"hash256"],[374,65,478,26],[374,66,478,27],[374,70,478,31],[374,71,478,32,"__toBuffer"],[374,81,478,42],[374,82,478,43,"undefined"],[374,91,478,52],[374,93,478,54,"undefined"],[374,102,478,63],[374,104,478,65,"forWitness"],[374,114,478,75],[374,115,478,76],[374,116,478,77],[375,6,479,2],[376,4,479,3],[377,6,479,3,"key"],[377,9,479,3],[378,6,479,3,"value"],[378,11,479,3],[378,13,480,2],[378,22,480,2,"getId"],[378,27,480,7,"getId"],[378,28,480,7],[378,30,480,10],[379,8,481,4],[380,8,482,4],[380,15,482,11],[380,16,482,12],[380,17,482,13],[380,19,482,15,"_$$_REQUIRE"],[380,30,482,15],[380,31,482,15,"_dependencyMap"],[380,45,482,15],[380,67,482,29,"reverseBuffer"],[380,80,482,42],[380,82,482,44],[380,86,482,48],[380,87,482,49,"getHash"],[380,94,482,56],[380,95,482,57],[380,100,482,62],[380,101,482,63],[380,102,482,64],[380,103,482,65,"toString"],[380,111,482,73],[380,112,483,6],[380,117,484,4],[380,118,484,5],[381,6,485,2],[382,4,485,3],[383,6,485,3,"key"],[383,9,485,3],[384,6,485,3,"value"],[384,11,485,3],[384,13,486,2],[384,22,486,2,"toBuffer"],[384,30,486,10,"toBuffer"],[384,31,486,11,"buffer"],[384,37,486,17],[384,39,486,19,"initialOffset"],[384,52,486,32],[384,54,486,34],[385,8,487,4],[385,15,487,11],[385,19,487,15],[385,20,487,16,"__toBuffer"],[385,30,487,26],[385,31,487,27,"buffer"],[385,37,487,33],[385,39,487,35,"initialOffset"],[385,52,487,48],[385,54,487,50],[385,58,487,54],[385,59,487,55],[386,6,488,2],[387,4,488,3],[388,6,488,3,"key"],[388,9,488,3],[389,6,488,3,"value"],[389,11,488,3],[389,13,489,2],[389,22,489,2,"toHex"],[389,27,489,7,"toHex"],[389,28,489,7],[389,30,489,10],[390,8,490,4],[390,15,490,11],[390,19,490,15],[390,20,490,16,"toBuffer"],[390,28,490,24],[390,29,490,25,"undefined"],[390,38,490,34],[390,40,490,36,"undefined"],[390,49,490,45],[390,50,490,46],[390,51,490,47,"toString"],[390,59,490,55],[390,60,490,56],[390,65,490,61],[390,66,490,62],[391,6,491,2],[392,4,491,3],[393,6,491,3,"key"],[393,9,491,3],[394,6,491,3,"value"],[394,11,491,3],[394,13,492,2],[394,22,492,2,"setInputScript"],[394,36,492,16,"setInputScript"],[394,37,492,17,"index"],[394,42,492,22],[394,44,492,24,"scriptSig"],[394,53,492,33],[394,55,492,35],[395,8,493,4,"_$$_REQUIRE"],[395,19,493,4],[395,20,493,4,"_dependencyMap"],[395,34,493,4],[395,50,493,4,"typeforce"],[395,59,493,4],[395,60,493,14,"_$$_REQUIRE"],[395,71,493,14],[395,72,493,14,"_dependencyMap"],[395,86,493,14],[395,102,493,20,"tuple"],[395,107,493,25],[395,108,493,26,"_$$_REQUIRE"],[395,119,493,26],[395,120,493,26,"_dependencyMap"],[395,134,493,26],[395,150,493,32,"Number"],[395,156,493,38],[395,158,493,40,"_$$_REQUIRE"],[395,169,493,40],[395,170,493,40,"_dependencyMap"],[395,184,493,40],[395,200,493,46,"Buffer"],[395,206,493,52],[395,207,493,53],[395,209,493,55,"arguments"],[395,218,493,64],[395,219,493,65],[396,8,494,4],[396,12,494,8],[396,13,494,9,"ins"],[396,16,494,12],[396,17,494,13,"index"],[396,22,494,18],[396,23,494,19],[396,24,494,20,"script"],[396,30,494,26],[396,33,494,29,"scriptSig"],[396,42,494,38],[397,6,495,2],[398,4,495,3],[399,6,495,3,"key"],[399,9,495,3],[400,6,495,3,"value"],[400,11,495,3],[400,13,496,2],[400,22,496,2,"setWitness"],[400,32,496,12,"setWitness"],[400,33,496,13,"index"],[400,38,496,18],[400,40,496,20,"witness"],[400,47,496,27],[400,49,496,29],[401,8,497,4,"_$$_REQUIRE"],[401,19,497,4],[401,20,497,4,"_dependencyMap"],[401,34,497,4],[401,50,497,4,"typeforce"],[401,59,497,4],[401,60,497,14,"_$$_REQUIRE"],[401,71,497,14],[401,72,497,14,"_dependencyMap"],[401,86,497,14],[401,102,497,20,"tuple"],[401,107,497,25],[401,108,497,26,"_$$_REQUIRE"],[401,119,497,26],[401,120,497,26,"_dependencyMap"],[401,134,497,26],[401,150,497,32,"Number"],[401,156,497,38],[401,158,497,40],[401,159,497,41,"_$$_REQUIRE"],[401,170,497,41],[401,171,497,41,"_dependencyMap"],[401,185,497,41],[401,201,497,47,"Buffer"],[401,207,497,53],[401,208,497,54],[401,209,497,55],[401,211,497,57,"arguments"],[401,220,497,66],[401,221,497,67],[402,8,498,4],[402,12,498,8],[402,13,498,9,"ins"],[402,16,498,12],[402,17,498,13,"index"],[402,22,498,18],[402,23,498,19],[402,24,498,20,"witness"],[402,31,498,27],[402,34,498,30,"witness"],[402,41,498,37],[403,6,499,2],[404,4,499,3],[405,6,499,3,"key"],[405,9,499,3],[406,6,499,3,"value"],[406,11,499,3],[406,13,500,2],[406,22,500,2,"__toBuffer"],[406,32,500,12,"__toBuffer"],[406,33,500,13,"buffer"],[406,39,500,19],[406,41,500,21,"initialOffset"],[406,54,500,34],[406,56,500,60],[407,8,500,60],[407,12,500,36,"_ALLOW_WITNESS"],[407,26,500,50],[407,29,500,50,"arguments"],[407,38,500,50],[407,39,500,50,"length"],[407,45,500,50],[407,53,500,50,"arguments"],[407,62,500,50],[407,70,500,50,"undefined"],[407,79,500,50],[407,82,500,50,"arguments"],[407,91,500,50],[407,97,500,53],[407,102,500,58],[408,8,501,4],[408,12,501,8],[408,13,501,9,"buffer"],[408,19,501,15],[408,21,501,17,"buffer"],[408,27,501,23],[408,30,501,26,"Buffer"],[408,36,501,32],[408,37,501,33,"allocUnsafe"],[408,48,501,44],[408,49,501,45],[408,53,501,49],[408,54,501,50,"byteLength"],[408,64,501,60],[408,65,501,61,"_ALLOW_WITNESS"],[408,79,501,75],[408,80,501,76],[408,81,501,77],[409,8,502,4],[409,12,502,10,"bufferWriter"],[409,24,502,22],[409,27,502,25],[409,32,502,29,"_$$_REQUIRE"],[409,43,502,29],[409,44,502,29,"_dependencyMap"],[409,58,502,29],[409,80,502,43,"BufferWriter"],[409,92,502,55],[409,94,503,6,"buffer"],[409,100,503,12],[409,102,504,6,"initialOffset"],[409,115,504,19],[409,119,504,23],[409,120,505,4],[409,121,505,5],[410,8,506,4,"bufferWriter"],[410,20,506,16],[410,21,506,17,"writeInt32"],[410,31,506,27],[410,32,506,28],[410,36,506,32],[410,37,506,33,"version"],[410,44,506,40],[410,45,506,41],[411,8,507,4],[411,12,507,10,"hasWitnesses"],[411,24,507,22],[411,27,507,25,"_ALLOW_WITNESS"],[411,41,507,39],[411,45,507,43],[411,49,507,47],[411,50,507,48,"hasWitnesses"],[411,62,507,60],[411,63,507,61],[411,64,507,62],[412,8,508,4],[412,12,508,8,"hasWitnesses"],[412,24,508,20],[412,26,508,22],[413,10,509,6,"bufferWriter"],[413,22,509,18],[413,23,509,19,"writeUInt8"],[413,33,509,29],[413,34,509,30,"Transaction"],[413,45,509,41],[413,46,509,42,"ADVANCED_TRANSACTION_MARKER"],[413,73,509,69],[413,74,509,70],[414,10,510,6,"bufferWriter"],[414,22,510,18],[414,23,510,19,"writeUInt8"],[414,33,510,29],[414,34,510,30,"Transaction"],[414,45,510,41],[414,46,510,42,"ADVANCED_TRANSACTION_FLAG"],[414,71,510,67],[414,72,510,68],[415,8,511,4],[416,8,512,4,"bufferWriter"],[416,20,512,16],[416,21,512,17,"writeVarInt"],[416,32,512,28],[416,33,512,29],[416,37,512,33],[416,38,512,34,"ins"],[416,41,512,37],[416,42,512,38,"length"],[416,48,512,44],[416,49,512,45],[417,8,513,4],[417,12,513,8],[417,13,513,9,"ins"],[417,16,513,12],[417,17,513,13,"forEach"],[417,24,513,20],[417,25,513,21],[417,35,513,21,"txIn"],[417,39,513,25],[417,41,513,29],[418,10,514,6,"bufferWriter"],[418,22,514,18],[418,23,514,19,"writeSlice"],[418,33,514,29],[418,34,514,30,"txIn"],[418,38,514,34],[418,39,514,35,"hash"],[418,43,514,39],[418,44,514,40],[419,10,515,6,"bufferWriter"],[419,22,515,18],[419,23,515,19,"writeUInt32"],[419,34,515,30],[419,35,515,31,"txIn"],[419,39,515,35],[419,40,515,36,"index"],[419,45,515,41],[419,46,515,42],[420,10,516,6,"bufferWriter"],[420,22,516,18],[420,23,516,19,"writeVarSlice"],[420,36,516,32],[420,37,516,33,"txIn"],[420,41,516,37],[420,42,516,38,"script"],[420,48,516,44],[420,49,516,45],[421,10,517,6,"bufferWriter"],[421,22,517,18],[421,23,517,19,"writeUInt32"],[421,34,517,30],[421,35,517,31,"txIn"],[421,39,517,35],[421,40,517,36,"sequence"],[421,48,517,44],[421,49,517,45],[422,8,518,4],[422,9,518,5],[422,10,518,6],[423,8,519,4,"bufferWriter"],[423,20,519,16],[423,21,519,17,"writeVarInt"],[423,32,519,28],[423,33,519,29],[423,37,519,33],[423,38,519,34,"outs"],[423,42,519,38],[423,43,519,39,"length"],[423,49,519,45],[423,50,519,46],[424,8,520,4],[424,12,520,8],[424,13,520,9,"outs"],[424,17,520,13],[424,18,520,14,"forEach"],[424,25,520,21],[424,26,520,22],[424,36,520,22,"txOut"],[424,41,520,27],[424,43,520,31],[425,10,521,6],[425,14,521,10,"isOutput"],[425,22,521,18],[425,23,521,19,"txOut"],[425,28,521,24],[425,29,521,25],[425,31,521,27],[426,12,522,8,"bufferWriter"],[426,24,522,20],[426,25,522,21,"writeUInt64"],[426,36,522,32],[426,37,522,33,"txOut"],[426,42,522,38],[426,43,522,39,"value"],[426,48,522,44],[426,49,522,45],[427,10,523,6],[427,11,523,7],[427,17,523,13],[428,12,524,8,"bufferWriter"],[428,24,524,20],[428,25,524,21,"writeSlice"],[428,35,524,31],[428,36,524,32,"txOut"],[428,41,524,37],[428,42,524,38,"valueBuffer"],[428,53,524,49],[428,54,524,50],[429,10,525,6],[430,10,526,6,"bufferWriter"],[430,22,526,18],[430,23,526,19,"writeVarSlice"],[430,36,526,32],[430,37,526,33,"txOut"],[430,42,526,38],[430,43,526,39,"script"],[430,49,526,45],[430,50,526,46],[431,8,527,4],[431,9,527,5],[431,10,527,6],[432,8,528,4],[432,12,528,8,"hasWitnesses"],[432,24,528,20],[432,26,528,22],[433,10,529,6],[433,14,529,10],[433,15,529,11,"ins"],[433,18,529,14],[433,19,529,15,"forEach"],[433,26,529,22],[433,27,529,23],[433,37,529,23,"input"],[433,42,529,28],[433,44,529,32],[434,12,530,8,"bufferWriter"],[434,24,530,20],[434,25,530,21,"writeVector"],[434,36,530,32],[434,37,530,33,"input"],[434,42,530,38],[434,43,530,39,"witness"],[434,50,530,46],[434,51,530,47],[435,10,531,6],[435,11,531,7],[435,12,531,8],[436,8,532,4],[437,8,533,4,"bufferWriter"],[437,20,533,16],[437,21,533,17,"writeUInt32"],[437,32,533,28],[437,33,533,29],[437,37,533,33],[437,38,533,34,"locktime"],[437,46,533,42],[437,47,533,43],[438,8,534,4],[439,8,535,4],[439,12,535,8,"initialOffset"],[439,25,535,21],[439,30,535,26,"undefined"],[439,39,535,35],[439,41,536,6],[439,48,536,13,"buffer"],[439,54,536,19],[439,55,536,20,"slice"],[439,60,536,25],[439,61,536,26,"initialOffset"],[439,74,536,39],[439,76,536,41,"bufferWriter"],[439,88,536,53],[439,89,536,54,"offset"],[439,95,536,60],[439,96,536,61],[440,8,537,4],[440,15,537,11,"buffer"],[440,21,537,17],[441,6,538,2],[442,4,538,3],[443,6,538,3,"key"],[443,9,538,3],[444,6,538,3,"value"],[444,11,538,3],[444,13,51,2],[444,22,51,9,"fromBuffer"],[444,32,51,19,"fromBuffer"],[444,33,51,20,"buffer"],[444,39,51,26],[444,41,51,28,"_NO_STRICT"],[444,51,51,38],[444,53,51,40],[445,8,52,4],[445,12,52,10,"bufferReader"],[445,24,52,22],[445,27,52,25],[445,32,52,29,"_$$_REQUIRE"],[445,43,52,29],[445,44,52,29,"_dependencyMap"],[445,58,52,29],[445,80,52,43,"BufferReader"],[445,92,52,55],[445,94,52,56,"buffer"],[445,100,52,62],[445,101,52,63],[446,8,53,4],[446,12,53,10,"tx"],[446,14,53,12],[446,17,53,15],[446,21,53,19,"Transaction"],[446,32,53,30],[446,33,53,31],[446,34,53,32],[447,8,54,4,"tx"],[447,10,54,6],[447,11,54,7,"version"],[447,18,54,14],[447,21,54,17,"bufferReader"],[447,33,54,29],[447,34,54,30,"readInt32"],[447,43,54,39],[447,44,54,40],[447,45,54,41],[448,8,55,4],[448,12,55,10,"marker"],[448,18,55,16],[448,21,55,19,"bufferReader"],[448,33,55,31],[448,34,55,32,"readUInt8"],[448,43,55,41],[448,44,55,42],[448,45,55,43],[449,8,56,4],[449,12,56,10,"flag"],[449,16,56,14],[449,19,56,17,"bufferReader"],[449,31,56,29],[449,32,56,30,"readUInt8"],[449,41,56,39],[449,42,56,40],[449,43,56,41],[450,8,57,4],[450,12,57,8,"hasWitnesses"],[450,24,57,20],[450,27,57,23],[450,32,57,28],[451,8,58,4],[451,12,59,6,"marker"],[451,18,59,12],[451,23,59,17,"Transaction"],[451,34,59,28],[451,35,59,29,"ADVANCED_TRANSACTION_MARKER"],[451,62,59,56],[451,66,60,6,"flag"],[451,70,60,10],[451,75,60,15,"Transaction"],[451,86,60,26],[451,87,60,27,"ADVANCED_TRANSACTION_FLAG"],[451,112,60,52],[451,114,61,6],[452,10,62,6,"hasWitnesses"],[452,22,62,18],[452,25,62,21],[452,29,62,25],[453,8,63,4],[453,9,63,5],[453,15,63,11],[454,10,64,6,"bufferReader"],[454,22,64,18],[454,23,64,19,"offset"],[454,29,64,25],[454,33,64,29],[454,34,64,30],[455,8,65,4],[456,8,66,4],[456,12,66,10,"vinLen"],[456,18,66,16],[456,21,66,19,"bufferReader"],[456,33,66,31],[456,34,66,32,"readVarInt"],[456,44,66,42],[456,45,66,43],[456,46,66,44],[457,8,67,4],[457,13,67,9],[457,17,67,13,"i"],[457,18,67,14],[457,21,67,17],[457,22,67,18],[457,24,67,20,"i"],[457,25,67,21],[457,28,67,24,"vinLen"],[457,34,67,30],[457,36,67,32],[457,38,67,34,"i"],[457,39,67,35],[457,41,67,37],[458,10,68,6,"tx"],[458,12,68,8],[458,13,68,9,"ins"],[458,16,68,12],[458,17,68,13,"push"],[458,21,68,17],[458,22,68,18],[459,12,69,8,"hash"],[459,16,69,12],[459,18,69,14,"bufferReader"],[459,30,69,26],[459,31,69,27,"readSlice"],[459,40,69,36],[459,41,69,37],[459,43,69,39],[459,44,69,40],[460,12,70,8,"index"],[460,17,70,13],[460,19,70,15,"bufferReader"],[460,31,70,27],[460,32,70,28,"readUInt32"],[460,42,70,38],[460,43,70,39],[460,44,70,40],[461,12,71,8,"script"],[461,18,71,14],[461,20,71,16,"bufferReader"],[461,32,71,28],[461,33,71,29,"readVarSlice"],[461,45,71,41],[461,46,71,42],[461,47,71,43],[462,12,72,8,"sequence"],[462,20,72,16],[462,22,72,18,"bufferReader"],[462,34,72,30],[462,35,72,31,"readUInt32"],[462,45,72,41],[462,46,72,42],[462,47,72,43],[463,12,73,8,"witness"],[463,19,73,15],[463,21,73,17,"EMPTY_WITNESS"],[464,10,74,6],[464,11,74,7],[464,12,74,8],[465,8,75,4],[466,8,76,4],[466,12,76,10,"voutLen"],[466,19,76,17],[466,22,76,20,"bufferReader"],[466,34,76,32],[466,35,76,33,"readVarInt"],[466,45,76,43],[466,46,76,44],[466,47,76,45],[467,8,77,4],[467,13,77,9],[467,17,77,13,"i"],[467,19,77,14],[467,22,77,17],[467,23,77,18],[467,25,77,20,"i"],[467,27,77,21],[467,30,77,24,"voutLen"],[467,37,77,31],[467,39,77,33],[467,41,77,35,"i"],[467,43,77,36],[467,45,77,38],[468,10,78,6,"tx"],[468,12,78,8],[468,13,78,9,"outs"],[468,17,78,13],[468,18,78,14,"push"],[468,22,78,18],[468,23,78,19],[469,12,79,8,"value"],[469,17,79,13],[469,19,79,15,"bufferReader"],[469,31,79,27],[469,32,79,28,"readUInt64"],[469,42,79,38],[469,43,79,39],[469,44,79,40],[470,12,80,8,"script"],[470,18,80,14],[470,20,80,16,"bufferReader"],[470,32,80,28],[470,33,80,29,"readVarSlice"],[470,45,80,41],[470,46,80,42],[471,10,81,6],[471,11,81,7],[471,12,81,8],[472,8,82,4],[473,8,83,4],[473,12,83,8,"hasWitnesses"],[473,24,83,20],[473,26,83,22],[474,10,84,6],[474,15,84,11],[474,19,84,15,"i"],[474,22,84,16],[474,25,84,19],[474,26,84,20],[474,28,84,22,"i"],[474,31,84,23],[474,34,84,26,"vinLen"],[474,40,84,32],[474,42,84,34],[474,44,84,36,"i"],[474,47,84,37],[474,49,84,39],[475,12,85,8,"tx"],[475,14,85,10],[475,15,85,11,"ins"],[475,18,85,14],[475,19,85,15,"i"],[475,22,85,16],[475,23,85,17],[475,24,85,18,"witness"],[475,31,85,25],[475,34,85,28,"bufferReader"],[475,46,85,40],[475,47,85,41,"readVector"],[475,57,85,51],[475,58,85,52],[475,59,85,53],[476,10,86,6],[477,10,87,6],[478,10,88,6],[478,14,88,10],[478,15,88,11,"tx"],[478,17,88,13],[478,18,88,14,"hasWitnesses"],[478,30,88,26],[478,31,88,27],[478,32,88,28],[478,34,89,8],[478,40,89,14],[478,44,89,18,"Error"],[478,49,89,23],[478,50,89,24],[478,92,89,66],[478,93,89,67],[479,8,90,4],[480,8,91,4,"tx"],[480,10,91,6],[480,11,91,7,"locktime"],[480,19,91,15],[480,22,91,18,"bufferReader"],[480,34,91,30],[480,35,91,31,"readUInt32"],[480,45,91,41],[480,46,91,42],[480,47,91,43],[481,8,92,4],[481,12,92,8,"_NO_STRICT"],[481,22,92,18],[481,24,92,20],[481,31,92,27,"tx"],[481,33,92,29],[482,8,93,4],[482,12,93,8,"bufferReader"],[482,24,93,20],[482,25,93,21,"offset"],[482,31,93,27],[482,36,93,32,"buffer"],[482,42,93,38],[482,43,93,39,"length"],[482,49,93,45],[482,51,94,6],[482,57,94,12],[482,61,94,16,"Error"],[482,66,94,21],[482,67,94,22],[482,100,94,55],[482,101,94,56],[483,8,95,4],[483,15,95,11,"tx"],[483,17,95,13],[484,6,96,2],[485,4,96,3],[486,6,96,3,"key"],[486,9,96,3],[487,6,96,3,"value"],[487,11,96,3],[487,13,97,2],[487,22,97,9,"fromHex"],[487,29,97,16,"fromHex"],[487,30,97,17,"hex"],[487,33,97,20],[487,35,97,22],[488,8,98,4],[488,15,98,11,"Transaction"],[488,26,98,22],[488,27,98,23,"fromBuffer"],[488,37,98,33],[488,38,98,34,"Buffer"],[488,44,98,40],[488,45,98,41,"from"],[488,49,98,45],[488,50,98,46,"hex"],[488,53,98,49],[488,55,98,51],[488,60,98,56],[488,61,98,57],[488,63,98,59],[488,68,98,64],[488,69,98,65],[489,6,99,2],[490,4,99,3],[491,6,99,3,"key"],[491,9,99,3],[492,6,99,3,"value"],[492,11,99,3],[492,13,100,2],[492,22,100,9,"isCoinbaseHash"],[492,36,100,23,"isCoinbaseHash"],[492,37,100,24,"buffer"],[492,43,100,30],[492,45,100,32],[493,8,101,4,"_$$_REQUIRE"],[493,19,101,4],[493,20,101,4,"_dependencyMap"],[493,34,101,4],[493,50,101,4,"typeforce"],[493,59,101,4],[493,60,101,14,"_$$_REQUIRE"],[493,71,101,14],[493,72,101,14,"_dependencyMap"],[493,86,101,14],[493,102,101,20,"Hash256bit"],[493,112,101,30],[493,114,101,32,"buffer"],[493,120,101,38],[493,121,101,39],[494,8,102,4],[494,13,102,9],[494,17,102,13,"i"],[494,18,102,14],[494,21,102,17],[494,22,102,18],[494,24,102,20,"i"],[494,25,102,21],[494,28,102,24],[494,30,102,26],[494,32,102,28],[494,34,102,30,"i"],[494,35,102,31],[494,37,102,33],[495,10,103,6],[495,14,103,10,"buffer"],[495,20,103,16],[495,21,103,17,"i"],[495,22,103,18],[495,23,103,19],[495,28,103,24],[495,29,103,25],[495,31,103,27],[495,38,103,34],[495,43,103,39],[496,8,104,4],[497,8,105,4],[497,15,105,11],[497,19,105,15],[498,6,106,2],[499,4,106,3],[500,2,106,3],[501,2,540,0,"exports"],[501,9,540,7],[501,10,540,8,"Transaction"],[501,21,540,19],[501,24,540,22,"Transaction"],[501,35,540,33],[502,2,541,0,"Transaction"],[502,13,541,11],[502,14,541,12,"DEFAULT_SEQUENCE"],[502,30,541,28],[502,33,541,31],[502,43,541,41],[503,2,542,0,"Transaction"],[503,13,542,11],[503,14,542,12,"SIGHASH_DEFAULT"],[503,29,542,27],[503,32,542,30],[503,36,542,34],[504,2,543,0,"Transaction"],[504,13,543,11],[504,14,543,12,"SIGHASH_ALL"],[504,25,543,23],[504,28,543,26],[504,32,543,30],[505,2,544,0,"Transaction"],[505,13,544,11],[505,14,544,12,"SIGHASH_NONE"],[505,26,544,24],[505,29,544,27],[505,33,544,31],[506,2,545,0,"Transaction"],[506,13,545,11],[506,14,545,12,"SIGHASH_SINGLE"],[506,28,545,26],[506,31,545,29],[506,35,545,33],[507,2,546,0,"Transaction"],[507,13,546,11],[507,14,546,12,"SIGHASH_ANYONECANPAY"],[507,34,546,32],[507,37,546,35],[507,41,546,39],[508,2,547,0,"Transaction"],[508,13,547,11],[508,14,547,12,"SIGHASH_OUTPUT_MASK"],[508,33,547,31],[508,36,547,34],[508,40,547,38],[509,2,548,0,"Transaction"],[509,13,548,11],[509,14,548,12,"SIGHASH_INPUT_MASK"],[509,32,548,30],[509,35,548,33],[509,39,548,37],[510,2,549,0,"Transaction"],[510,13,549,11],[510,14,549,12,"ADVANCED_TRANSACTION_MARKER"],[510,41,549,39],[510,44,549,42],[510,48,549,46],[511,2,550,0,"Transaction"],[511,13,550,11],[511,14,550,12,"ADVANCED_TRANSACTION_FLAG"],[511,39,550,37],[511,42,550,40],[511,46,550,44],[512,0,550,45],[512,3]],"functionMap":{"names":["<global>","varSliceSize","vectorSize","someVector.reduce$argument_0","isOutput","Transaction","Transaction#constructor","Transaction.fromBuffer","Transaction.fromHex","Transaction.isCoinbaseHash","Transaction#isCoinbase","Transaction#addInput","Transaction#addOutput","Transaction#hasWitnesses","ins.some$argument_0","Transaction#stripWitnesses","ins.forEach$argument_0","Transaction#weight","Transaction#virtualSize","Transaction#byteLength","ins.reduce$argument_0","outs.reduce$argument_0","Transaction#clone","ins.map$argument_0","outs.map$argument_0","Transaction#hashForSignature","bscript.decompile.filter$argument_0","txTmp.ins.forEach$argument_0","Transaction#hashForWitnessV1","values.forEach$argument_0","prevOutScripts.map.reduce$argument_0","prevOutScripts.forEach$argument_0","outs.map.reduce$argument_0","outs.forEach$argument_0","Transaction#hashForWitnessV0","Transaction#getHash","Transaction#getId","Transaction#toBuffer","Transaction#toHex","Transaction#setInputScript","Transaction#setWitness","Transaction#__toBuffer"],"mappings":"AAA;ACS;CDG;AEC;sBCI;KDE;CFE;AIgB;CJE;AKI;ECC;GDK;EEC;GF6C;EGC;GHE;EIC;GJM;EKC;GLI;EMC;GNuB;EOC;GPS;EQC;yBCC;KDE;GRC;EUC;qBCC;KDE;GVC;EYC;GZI;EaC;GbE;EcC;sBCM;ODE;uBEC;OFE;0BCE;WDE;GdG;EiBC;6BCI;KDQ;+BEC;KFK;GjBE;EoBS;8CCS;ODE;wBEO;OFG;wBEY;OFG;wBES;OFE;GpBQ;EuBC;uBZkC;OYG;qBCK,wCD;gDEG,eF;6BGE;iDHC;uBZM,+CY;aJK,yCI;gBIC,eJ;wBKE;OLG;GvBqE;E6BC;uBlBa;OkBG;uBlBU;OkBE;0CbO;OaE;wBDG;OCG;G7B4B;E8BC;G9BI;E+BC;G/BK;EgCC;GhCE;EiCC;GjCE;EkCC;GlCG;EmCC;GnCG;EoCC;qBzBa;KyBK;sBRE;KQO;uBzBE;OyBE;GpCO;CLC"}},"type":"js/module"}]}