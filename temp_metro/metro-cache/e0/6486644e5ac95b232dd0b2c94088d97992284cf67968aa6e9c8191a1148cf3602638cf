{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n  var STRING = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.String;\n  var COLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Colon;\n  var LEFTSQUAREBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftSquareBracket;\n  var RIGHTSQUAREBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightSquareBracket;\n  var DOLLARSIGN = 0x0024; // U+0024 DOLLAR SIGN ($)\n  var ASTERISK = 0x002A; // U+002A ASTERISK (*)\n  var EQUALSSIGN = 0x003D; // U+003D EQUALS SIGN (=)\n  var CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\n  var VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n  var TILDE = 0x007E; // U+007E TILDE (~)\n\n  function getAttributeName() {\n    if (this.scanner.eof) {\n      this.error('Unexpected end of input');\n    }\n    var start = this.scanner.tokenStart;\n    var expectIdent = false;\n    var checkColon = true;\n    if (this.scanner.isDelim(ASTERISK)) {\n      expectIdent = true;\n      checkColon = false;\n      this.scanner.next();\n    } else if (!this.scanner.isDelim(VERTICALLINE)) {\n      this.eat(IDENT);\n    }\n    if (this.scanner.isDelim(VERTICALLINE)) {\n      if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 1) !== EQUALSSIGN) {\n        this.scanner.next();\n        this.eat(IDENT);\n      } else if (expectIdent) {\n        this.error('Identifier is expected', this.scanner.tokenEnd);\n      }\n    } else if (expectIdent) {\n      this.error('Vertical line is expected');\n    }\n    if (checkColon && this.scanner.tokenType === COLON) {\n      this.scanner.next();\n      this.eat(IDENT);\n    }\n    return {\n      type: 'Identifier',\n      loc: this.getLocation(start, this.scanner.tokenStart),\n      name: this.scanner.substrToCursor(start)\n    };\n  }\n  function getOperator() {\n    var start = this.scanner.tokenStart;\n    var code = this.scanner.source.charCodeAt(start);\n    if (code !== EQUALSSIGN &&\n    // =\n    code !== TILDE &&\n    // ~=\n    code !== CIRCUMFLEXACCENT &&\n    // ^=\n    code !== DOLLARSIGN &&\n    // $=\n    code !== ASTERISK &&\n    // *=\n    code !== VERTICALLINE // |=\n    ) {\n      this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n    this.scanner.next();\n    if (code !== EQUALSSIGN) {\n      if (!this.scanner.isDelim(EQUALSSIGN)) {\n        this.error('Equal sign is expected');\n      }\n      this.scanner.next();\n    }\n    return this.scanner.substrToCursor(start);\n  }\n\n  // '[' <wq-name> ']'\n  // '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\n  module.exports = {\n    name: 'AttributeSelector',\n    structure: {\n      name: 'Identifier',\n      matcher: [String, null],\n      value: ['String', 'Identifier', null],\n      flags: [String, null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var name;\n      var matcher = null;\n      var value = null;\n      var flags = null;\n      this.eat(LEFTSQUAREBRACKET);\n      this.scanner.skipSC();\n      name = getAttributeName.call(this);\n      this.scanner.skipSC();\n      if (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {\n        // avoid case `[name i]`\n        if (this.scanner.tokenType !== IDENT) {\n          matcher = getOperator.call(this);\n          this.scanner.skipSC();\n          value = this.scanner.tokenType === STRING ? this.String() : this.Identifier();\n          this.scanner.skipSC();\n        }\n\n        // attribute flags\n        if (this.scanner.tokenType === IDENT) {\n          flags = this.scanner.getTokenValue();\n          this.scanner.next();\n          this.scanner.skipSC();\n        }\n      }\n      this.eat(RIGHTSQUAREBRACKET);\n      return {\n        type: 'AttributeSelector',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        matcher: matcher,\n        value: value,\n        flags: flags\n      };\n    },\n    generate: function generate(node) {\n      var flagsPrefix = ' ';\n      this.chunk('[');\n      this.node(node.name);\n      if (node.matcher !== null) {\n        this.chunk(node.matcher);\n        if (node.value !== null) {\n          this.node(node.value);\n\n          // space between string and flags is not required\n          if (node.value.type === 'String') {\n            flagsPrefix = '';\n          }\n        }\n      }\n      if (node.flags !== null) {\n        this.chunk(flagsPrefix);\n        this.chunk(node.flags);\n      }\n      this.chunk(']');\n    }\n  };\n});","lineCount":143,"map":[[2,2,3,0],[2,6,3,4,"IDENT"],[2,11,3,9],[2,14,3,12,"_$$_REQUIRE"],[2,25,3,12],[2,26,3,12,"_dependencyMap"],[2,40,3,12],[2,64,3,12,"TYPE"],[2,68,3,12],[2,69,3,17,"Ident"],[2,74,3,22],[3,2,4,0],[3,6,4,4,"STRING"],[3,12,4,10],[3,15,4,13,"_$$_REQUIRE"],[3,26,4,13],[3,27,4,13,"_dependencyMap"],[3,41,4,13],[3,65,4,13,"TYPE"],[3,69,4,13],[3,70,4,18,"String"],[3,76,4,24],[4,2,5,0],[4,6,5,4,"COLON"],[4,11,5,9],[4,14,5,12,"_$$_REQUIRE"],[4,25,5,12],[4,26,5,12,"_dependencyMap"],[4,40,5,12],[4,64,5,12,"TYPE"],[4,68,5,12],[4,69,5,17,"Colon"],[4,74,5,22],[5,2,6,0],[5,6,6,4,"LEFTSQUAREBRACKET"],[5,23,6,21],[5,26,6,24,"_$$_REQUIRE"],[5,37,6,24],[5,38,6,24,"_dependencyMap"],[5,52,6,24],[5,76,6,24,"TYPE"],[5,80,6,24],[5,81,6,29,"LeftSquareBracket"],[5,98,6,46],[6,2,7,0],[6,6,7,4,"RIGHTSQUAREBRACKET"],[6,24,7,22],[6,27,7,25,"_$$_REQUIRE"],[6,38,7,25],[6,39,7,25,"_dependencyMap"],[6,53,7,25],[6,77,7,25,"TYPE"],[6,81,7,25],[6,82,7,30,"RightSquareBracket"],[6,100,7,48],[7,2,8,0],[7,6,8,4,"DOLLARSIGN"],[7,16,8,14],[7,19,8,17],[7,25,8,23],[7,26,8,24],[7,27,8,31],[8,2,9,0],[8,6,9,4,"ASTERISK"],[8,14,9,12],[8,17,9,15],[8,23,9,21],[8,24,9,22],[8,25,9,31],[9,2,10,0],[9,6,10,4,"EQUALSSIGN"],[9,16,10,14],[9,19,10,17],[9,25,10,23],[9,26,10,24],[9,27,10,31],[10,2,11,0],[10,6,11,4,"CIRCUMFLEXACCENT"],[10,22,11,20],[10,25,11,23],[10,31,11,29],[10,32,11,30],[10,33,11,31],[11,2,12,0],[11,6,12,4,"VERTICALLINE"],[11,18,12,16],[11,21,12,19],[11,27,12,25],[11,28,12,26],[11,29,12,31],[12,2,13,0],[12,6,13,4,"TILDE"],[12,11,13,9],[12,14,13,12],[12,20,13,18],[12,21,13,19],[12,22,13,31],[14,2,15,0],[14,11,15,9,"getAttributeName"],[14,27,15,25,"getAttributeName"],[14,28,15,25],[14,30,15,28],[15,4,16,4],[15,8,16,8],[15,12,16,12],[15,13,16,13,"scanner"],[15,20,16,20],[15,21,16,21,"eof"],[15,24,16,24],[15,26,16,26],[16,6,17,8],[16,10,17,12],[16,11,17,13,"error"],[16,16,17,18],[16,17,17,19],[16,42,17,44],[16,43,17,45],[17,4,18,4],[18,4,20,4],[18,8,20,8,"start"],[18,13,20,13],[18,16,20,16],[18,20,20,20],[18,21,20,21,"scanner"],[18,28,20,28],[18,29,20,29,"tokenStart"],[18,39,20,39],[19,4,21,4],[19,8,21,8,"expectIdent"],[19,19,21,19],[19,22,21,22],[19,27,21,27],[20,4,22,4],[20,8,22,8,"checkColon"],[20,18,22,18],[20,21,22,21],[20,25,22,25],[21,4,24,4],[21,8,24,8],[21,12,24,12],[21,13,24,13,"scanner"],[21,20,24,20],[21,21,24,21,"isDelim"],[21,28,24,28],[21,29,24,29,"ASTERISK"],[21,37,24,37],[21,38,24,38],[21,40,24,40],[22,6,25,8,"expectIdent"],[22,17,25,19],[22,20,25,22],[22,24,25,26],[23,6,26,8,"checkColon"],[23,16,26,18],[23,19,26,21],[23,24,26,26],[24,6,27,8],[24,10,27,12],[24,11,27,13,"scanner"],[24,18,27,20],[24,19,27,21,"next"],[24,23,27,25],[24,24,27,26],[24,25,27,27],[25,4,28,4],[25,5,28,5],[25,11,28,11],[25,15,28,15],[25,16,28,16],[25,20,28,20],[25,21,28,21,"scanner"],[25,28,28,28],[25,29,28,29,"isDelim"],[25,36,28,36],[25,37,28,37,"VERTICALLINE"],[25,49,28,49],[25,50,28,50],[25,52,28,52],[26,6,29,8],[26,10,29,12],[26,11,29,13,"eat"],[26,14,29,16],[26,15,29,17,"IDENT"],[26,20,29,22],[26,21,29,23],[27,4,30,4],[28,4,32,4],[28,8,32,8],[28,12,32,12],[28,13,32,13,"scanner"],[28,20,32,20],[28,21,32,21,"isDelim"],[28,28,32,28],[28,29,32,29,"VERTICALLINE"],[28,41,32,41],[28,42,32,42],[28,44,32,44],[29,6,33,8],[29,10,33,12],[29,14,33,16],[29,15,33,17,"scanner"],[29,22,33,24],[29,23,33,25,"source"],[29,29,33,31],[29,30,33,32,"charCodeAt"],[29,40,33,42],[29,41,33,43],[29,45,33,47],[29,46,33,48,"scanner"],[29,53,33,55],[29,54,33,56,"tokenStart"],[29,64,33,66],[29,67,33,69],[29,68,33,70],[29,69,33,71],[29,74,33,76,"EQUALSSIGN"],[29,84,33,86],[29,86,33,88],[30,8,34,12],[30,12,34,16],[30,13,34,17,"scanner"],[30,20,34,24],[30,21,34,25,"next"],[30,25,34,29],[30,26,34,30],[30,27,34,31],[31,8,35,12],[31,12,35,16],[31,13,35,17,"eat"],[31,16,35,20],[31,17,35,21,"IDENT"],[31,22,35,26],[31,23,35,27],[32,6,36,8],[32,7,36,9],[32,13,36,15],[32,17,36,19,"expectIdent"],[32,28,36,30],[32,30,36,32],[33,8,37,12],[33,12,37,16],[33,13,37,17,"error"],[33,18,37,22],[33,19,37,23],[33,43,37,47],[33,45,37,49],[33,49,37,53],[33,50,37,54,"scanner"],[33,57,37,61],[33,58,37,62,"tokenEnd"],[33,66,37,70],[33,67,37,71],[34,6,38,8],[35,4,39,4],[35,5,39,5],[35,11,39,11],[35,15,39,15,"expectIdent"],[35,26,39,26],[35,28,39,28],[36,6,40,8],[36,10,40,12],[36,11,40,13,"error"],[36,16,40,18],[36,17,40,19],[36,44,40,46],[36,45,40,47],[37,4,41,4],[38,4,43,4],[38,8,43,8,"checkColon"],[38,18,43,18],[38,22,43,22],[38,26,43,26],[38,27,43,27,"scanner"],[38,34,43,34],[38,35,43,35,"tokenType"],[38,44,43,44],[38,49,43,49,"COLON"],[38,54,43,54],[38,56,43,56],[39,6,44,8],[39,10,44,12],[39,11,44,13,"scanner"],[39,18,44,20],[39,19,44,21,"next"],[39,23,44,25],[39,24,44,26],[39,25,44,27],[40,6,45,8],[40,10,45,12],[40,11,45,13,"eat"],[40,14,45,16],[40,15,45,17,"IDENT"],[40,20,45,22],[40,21,45,23],[41,4,46,4],[42,4,48,4],[42,11,48,11],[43,6,49,8,"type"],[43,10,49,12],[43,12,49,14],[43,24,49,26],[44,6,50,8,"loc"],[44,9,50,11],[44,11,50,13],[44,15,50,17],[44,16,50,18,"getLocation"],[44,27,50,29],[44,28,50,30,"start"],[44,33,50,35],[44,35,50,37],[44,39,50,41],[44,40,50,42,"scanner"],[44,47,50,49],[44,48,50,50,"tokenStart"],[44,58,50,60],[44,59,50,61],[45,6,51,8,"name"],[45,10,51,12],[45,12,51,14],[45,16,51,18],[45,17,51,19,"scanner"],[45,24,51,26],[45,25,51,27,"substrToCursor"],[45,39,51,41],[45,40,51,42,"start"],[45,45,51,47],[46,4,52,4],[46,5,52,5],[47,2,53,0],[48,2,55,0],[48,11,55,9,"getOperator"],[48,22,55,20,"getOperator"],[48,23,55,20],[48,25,55,23],[49,4,56,4],[49,8,56,8,"start"],[49,13,56,13],[49,16,56,16],[49,20,56,20],[49,21,56,21,"scanner"],[49,28,56,28],[49,29,56,29,"tokenStart"],[49,39,56,39],[50,4,57,4],[50,8,57,8,"code"],[50,12,57,12],[50,15,57,15],[50,19,57,19],[50,20,57,20,"scanner"],[50,27,57,27],[50,28,57,28,"source"],[50,34,57,34],[50,35,57,35,"charCodeAt"],[50,45,57,45],[50,46,57,46,"start"],[50,51,57,51],[50,52,57,52],[51,4,59,4],[51,8,59,8,"code"],[51,12,59,12],[51,17,59,17,"EQUALSSIGN"],[51,27,59,27],[52,4,59,38],[53,4,60,8,"code"],[53,8,60,12],[53,13,60,17,"TILDE"],[53,18,60,22],[54,4,60,38],[55,4,61,8,"code"],[55,8,61,12],[55,13,61,17,"CIRCUMFLEXACCENT"],[55,29,61,33],[56,4,61,38],[57,4,62,8,"code"],[57,8,62,12],[57,13,62,17,"DOLLARSIGN"],[57,23,62,27],[58,4,62,38],[59,4,63,8,"code"],[59,8,63,12],[59,13,63,17,"ASTERISK"],[59,21,63,25],[60,4,63,38],[61,4,64,8,"code"],[61,8,64,12],[61,13,64,17,"VERTICALLINE"],[61,25,64,29],[61,26,64,38],[62,4,64,38],[62,6,65,6],[63,6,66,8],[63,10,66,12],[63,11,66,13,"error"],[63,16,66,18],[63,17,66,19],[63,73,66,75],[63,74,66,76],[64,4,67,4],[65,4,69,4],[65,8,69,8],[65,9,69,9,"scanner"],[65,16,69,16],[65,17,69,17,"next"],[65,21,69,21],[65,22,69,22],[65,23,69,23],[66,4,71,4],[66,8,71,8,"code"],[66,12,71,12],[66,17,71,17,"EQUALSSIGN"],[66,27,71,27],[66,29,71,29],[67,6,72,8],[67,10,72,12],[67,11,72,13],[67,15,72,17],[67,16,72,18,"scanner"],[67,23,72,25],[67,24,72,26,"isDelim"],[67,31,72,33],[67,32,72,34,"EQUALSSIGN"],[67,42,72,44],[67,43,72,45],[67,45,72,47],[68,8,73,12],[68,12,73,16],[68,13,73,17,"error"],[68,18,73,22],[68,19,73,23],[68,43,73,47],[68,44,73,48],[69,6,74,8],[70,6,76,8],[70,10,76,12],[70,11,76,13,"scanner"],[70,18,76,20],[70,19,76,21,"next"],[70,23,76,25],[70,24,76,26],[70,25,76,27],[71,4,77,4],[72,4,79,4],[72,11,79,11],[72,15,79,15],[72,16,79,16,"scanner"],[72,23,79,23],[72,24,79,24,"substrToCursor"],[72,38,79,38],[72,39,79,39,"start"],[72,44,79,44],[72,45,79,45],[73,2,80,0],[75,2,82,0],[76,2,83,0],[77,2,84,0,"module"],[77,8,84,6],[77,9,84,7,"exports"],[77,16,84,14],[77,19,84,17],[78,4,85,4,"name"],[78,8,85,8],[78,10,85,10],[78,29,85,29],[79,4,86,4,"structure"],[79,13,86,13],[79,15,86,15],[80,6,87,8,"name"],[80,10,87,12],[80,12,87,14],[80,24,87,26],[81,6,88,8,"matcher"],[81,13,88,15],[81,15,88,17],[81,16,88,18,"String"],[81,22,88,24],[81,24,88,26],[81,28,88,30],[81,29,88,31],[82,6,89,8,"value"],[82,11,89,13],[82,13,89,15],[82,14,89,16],[82,22,89,24],[82,24,89,26],[82,36,89,38],[82,38,89,40],[82,42,89,44],[82,43,89,45],[83,6,90,8,"flags"],[83,11,90,13],[83,13,90,15],[83,14,90,16,"String"],[83,20,90,22],[83,22,90,24],[83,26,90,28],[84,4,91,4],[84,5,91,5],[85,4,92,4,"parse"],[85,9,92,9],[85,11,92,11],[85,20,92,4,"parse"],[85,25,92,9,"parse"],[85,26,92,9],[85,28,92,22],[86,6,93,8],[86,10,93,12,"start"],[86,15,93,17],[86,18,93,20],[86,22,93,24],[86,23,93,25,"scanner"],[86,30,93,32],[86,31,93,33,"tokenStart"],[86,41,93,43],[87,6,94,8],[87,10,94,12,"name"],[87,14,94,16],[88,6,95,8],[88,10,95,12,"matcher"],[88,17,95,19],[88,20,95,22],[88,24,95,26],[89,6,96,8],[89,10,96,12,"value"],[89,15,96,17],[89,18,96,20],[89,22,96,24],[90,6,97,8],[90,10,97,12,"flags"],[90,15,97,17],[90,18,97,20],[90,22,97,24],[91,6,99,8],[91,10,99,12],[91,11,99,13,"eat"],[91,14,99,16],[91,15,99,17,"LEFTSQUAREBRACKET"],[91,32,99,34],[91,33,99,35],[92,6,100,8],[92,10,100,12],[92,11,100,13,"scanner"],[92,18,100,20],[92,19,100,21,"skipSC"],[92,25,100,27],[92,26,100,28],[92,27,100,29],[93,6,102,8,"name"],[93,10,102,12],[93,13,102,15,"getAttributeName"],[93,29,102,31],[93,30,102,32,"call"],[93,34,102,36],[93,35,102,37],[93,39,102,41],[93,40,102,42],[94,6,103,8],[94,10,103,12],[94,11,103,13,"scanner"],[94,18,103,20],[94,19,103,21,"skipSC"],[94,25,103,27],[94,26,103,28],[94,27,103,29],[95,6,105,8],[95,10,105,12],[95,14,105,16],[95,15,105,17,"scanner"],[95,22,105,24],[95,23,105,25,"tokenType"],[95,32,105,34],[95,37,105,39,"RIGHTSQUAREBRACKET"],[95,55,105,57],[95,57,105,59],[96,8,106,12],[97,8,107,12],[97,12,107,16],[97,16,107,20],[97,17,107,21,"scanner"],[97,24,107,28],[97,25,107,29,"tokenType"],[97,34,107,38],[97,39,107,43,"IDENT"],[97,44,107,48],[97,46,107,50],[98,10,108,16,"matcher"],[98,17,108,23],[98,20,108,26,"getOperator"],[98,31,108,37],[98,32,108,38,"call"],[98,36,108,42],[98,37,108,43],[98,41,108,47],[98,42,108,48],[99,10,110,16],[99,14,110,20],[99,15,110,21,"scanner"],[99,22,110,28],[99,23,110,29,"skipSC"],[99,29,110,35],[99,30,110,36],[99,31,110,37],[100,10,112,16,"value"],[100,15,112,21],[100,18,112,24],[100,22,112,28],[100,23,112,29,"scanner"],[100,30,112,36],[100,31,112,37,"tokenType"],[100,40,112,46],[100,45,112,51,"STRING"],[100,51,112,57],[100,54,113,22],[100,58,113,26],[100,59,113,27,"String"],[100,65,113,33],[100,66,113,34],[100,67,113,35],[100,70,114,22],[100,74,114,26],[100,75,114,27,"Identifier"],[100,85,114,37],[100,86,114,38],[100,87,114,39],[101,10,116,16],[101,14,116,20],[101,15,116,21,"scanner"],[101,22,116,28],[101,23,116,29,"skipSC"],[101,29,116,35],[101,30,116,36],[101,31,116,37],[102,8,117,12],[104,8,119,12],[105,8,120,12],[105,12,120,16],[105,16,120,20],[105,17,120,21,"scanner"],[105,24,120,28],[105,25,120,29,"tokenType"],[105,34,120,38],[105,39,120,43,"IDENT"],[105,44,120,48],[105,46,120,50],[106,10,121,16,"flags"],[106,15,121,21],[106,18,121,24],[106,22,121,28],[106,23,121,29,"scanner"],[106,30,121,36],[106,31,121,37,"getTokenValue"],[106,44,121,50],[106,45,121,51],[106,46,121,52],[107,10,122,16],[107,14,122,20],[107,15,122,21,"scanner"],[107,22,122,28],[107,23,122,29,"next"],[107,27,122,33],[107,28,122,34],[107,29,122,35],[108,10,124,16],[108,14,124,20],[108,15,124,21,"scanner"],[108,22,124,28],[108,23,124,29,"skipSC"],[108,29,124,35],[108,30,124,36],[108,31,124,37],[109,8,125,12],[110,6,126,8],[111,6,128,8],[111,10,128,12],[111,11,128,13,"eat"],[111,14,128,16],[111,15,128,17,"RIGHTSQUAREBRACKET"],[111,33,128,35],[111,34,128,36],[112,6,130,8],[112,13,130,15],[113,8,131,12,"type"],[113,12,131,16],[113,14,131,18],[113,33,131,37],[114,8,132,12,"loc"],[114,11,132,15],[114,13,132,17],[114,17,132,21],[114,18,132,22,"getLocation"],[114,29,132,33],[114,30,132,34,"start"],[114,35,132,39],[114,37,132,41],[114,41,132,45],[114,42,132,46,"scanner"],[114,49,132,53],[114,50,132,54,"tokenStart"],[114,60,132,64],[114,61,132,65],[115,8,133,12,"name"],[115,12,133,16],[115,14,133,18,"name"],[115,18,133,22],[116,8,134,12,"matcher"],[116,15,134,19],[116,17,134,21,"matcher"],[116,24,134,28],[117,8,135,12,"value"],[117,13,135,17],[117,15,135,19,"value"],[117,20,135,24],[118,8,136,12,"flags"],[118,13,136,17],[118,15,136,19,"flags"],[119,6,137,8],[119,7,137,9],[120,4,138,4],[120,5,138,5],[121,4,139,4,"generate"],[121,12,139,12],[121,14,139,14],[121,23,139,4,"generate"],[121,31,139,12,"generate"],[121,32,139,23,"node"],[121,36,139,27],[121,38,139,29],[122,6,140,8],[122,10,140,12,"flagsPrefix"],[122,21,140,23],[122,24,140,26],[122,27,140,29],[123,6,142,8],[123,10,142,12],[123,11,142,13,"chunk"],[123,16,142,18],[123,17,142,19],[123,20,142,22],[123,21,142,23],[124,6,143,8],[124,10,143,12],[124,11,143,13,"node"],[124,15,143,17],[124,16,143,18,"node"],[124,20,143,22],[124,21,143,23,"name"],[124,25,143,27],[124,26,143,28],[125,6,145,8],[125,10,145,12,"node"],[125,14,145,16],[125,15,145,17,"matcher"],[125,22,145,24],[125,27,145,29],[125,31,145,33],[125,33,145,35],[126,8,146,12],[126,12,146,16],[126,13,146,17,"chunk"],[126,18,146,22],[126,19,146,23,"node"],[126,23,146,27],[126,24,146,28,"matcher"],[126,31,146,35],[126,32,146,36],[127,8,148,12],[127,12,148,16,"node"],[127,16,148,20],[127,17,148,21,"value"],[127,22,148,26],[127,27,148,31],[127,31,148,35],[127,33,148,37],[128,10,149,16],[128,14,149,20],[128,15,149,21,"node"],[128,19,149,25],[128,20,149,26,"node"],[128,24,149,30],[128,25,149,31,"value"],[128,30,149,36],[128,31,149,37],[130,10,151,16],[131,10,152,16],[131,14,152,20,"node"],[131,18,152,24],[131,19,152,25,"value"],[131,24,152,30],[131,25,152,31,"type"],[131,29,152,35],[131,34,152,40],[131,42,152,48],[131,44,152,50],[132,12,153,20,"flagsPrefix"],[132,23,153,31],[132,26,153,34],[132,28,153,36],[133,10,154,16],[134,8,155,12],[135,6,156,8],[136,6,158,8],[136,10,158,12,"node"],[136,14,158,16],[136,15,158,17,"flags"],[136,20,158,22],[136,25,158,27],[136,29,158,31],[136,31,158,33],[137,8,159,12],[137,12,159,16],[137,13,159,17,"chunk"],[137,18,159,22],[137,19,159,23,"flagsPrefix"],[137,30,159,34],[137,31,159,35],[138,8,160,12],[138,12,160,16],[138,13,160,17,"chunk"],[138,18,160,22],[138,19,160,23,"node"],[138,23,160,27],[138,24,160,28,"flags"],[138,29,160,33],[138,30,160,34],[139,6,161,8],[140,6,163,8],[140,10,163,12],[140,11,163,13,"chunk"],[140,16,163,18],[140,17,163,19],[140,20,163,22],[140,21,163,23],[141,4,164,4],[142,2,165,0],[142,3,165,1],[143,0,165,2],[143,3]],"functionMap":{"names":["<global>","getAttributeName","getOperator","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACc;CDsC;AEE;CFyB;WGY;KH8C;cIC;KJyB"}},"type":"js/module"}]}