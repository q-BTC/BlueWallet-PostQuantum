{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":27,"index":456},"end":{"line":15,"column":54,"index":483}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"../parser/index.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":19,"index":397},"end":{"line":14,"column":49,"index":427}},{"start":{"line":14,"column":19,"index":397},"end":{"line":14,"column":49,"index":427}},{"start":{"line":14,"column":19,"index":397},"end":{"line":14,"column":49,"index":427}}],"key":"+o5HeQziihdE75DWMHn++3MYgSg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  function combine(psbts) {\n    var self = psbts[0];\n    var selfKeyVals = _$$_REQUIRE(_dependencyMap[1], \"../parser/index.cjs\").psbtToKeyVals(self);\n    var others = psbts.slice(1);\n    if (others.length === 0) throw new Error('Combine: Nothing to combine');\n    var selfTx = getTx(self);\n    if (selfTx === undefined) {\n      throw new Error('Combine: Self missing transaction');\n    }\n    var selfGlobalSet = getKeySet(selfKeyVals.globalKeyVals);\n    var selfInputSets = selfKeyVals.inputKeyVals.map(getKeySet);\n    var selfOutputSets = selfKeyVals.outputKeyVals.map(getKeySet);\n    var _loop = function _loop() {\n      var otherTx = getTx(other);\n      if (otherTx === undefined || tools.compare(otherTx.toBuffer(), selfTx.toBuffer()) !== 0) {\n        throw new Error('Combine: One of the Psbts does not have the same transaction.');\n      }\n      var otherKeyVals = _$$_REQUIRE(_dependencyMap[1], \"../parser/index.cjs\").psbtToKeyVals(other);\n      var otherGlobalSet = getKeySet(otherKeyVals.globalKeyVals);\n      otherGlobalSet.forEach(keyPusher(selfGlobalSet, selfKeyVals.globalKeyVals, otherKeyVals.globalKeyVals));\n      var otherInputSets = otherKeyVals.inputKeyVals.map(getKeySet);\n      otherInputSets.forEach(function (inputSet, idx) {\n        return inputSet.forEach(keyPusher(selfInputSets[idx], selfKeyVals.inputKeyVals[idx], otherKeyVals.inputKeyVals[idx]));\n      });\n      var otherOutputSets = otherKeyVals.outputKeyVals.map(getKeySet);\n      otherOutputSets.forEach(function (outputSet, idx) {\n        return outputSet.forEach(keyPusher(selfOutputSets[idx], selfKeyVals.outputKeyVals[idx], otherKeyVals.outputKeyVals[idx]));\n      });\n    };\n    for (var other of others) {\n      _loop();\n    }\n    return _$$_REQUIRE(_dependencyMap[1], \"../parser/index.cjs\").psbtFromKeyVals(selfTx, {\n      globalMapKeyVals: selfKeyVals.globalKeyVals,\n      inputKeyVals: selfKeyVals.inputKeyVals,\n      outputKeyVals: selfKeyVals.outputKeyVals\n    });\n  }\n  exports.combine = combine;\n  function keyPusher(selfSet, selfKeyVals, otherKeyVals) {\n    return function (key) {\n      if (selfSet.has(key)) return;\n      var newKv = otherKeyVals.filter(function (kv) {\n        return tools.toHex(kv.key) === key;\n      })[0];\n      selfKeyVals.push(newKv);\n      selfSet.add(key);\n    };\n  }\n  function getTx(psbt) {\n    return psbt.globalMap.unsignedTx;\n  }\n  function getKeySet(keyVals) {\n    var set = new Set();\n    keyVals.forEach(function (keyVal) {\n      var hex = tools.toHex(keyVal.key);\n      if (set.has(hex)) throw new Error('Combine: KeyValue Map keys should be unique');\n      set.add(hex);\n    });\n    return set;\n  }\n});","lineCount":76,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importStar"],[4,18,2,16],[4,21,3,3],[4,25,3,7],[4,29,3,11],[4,33,3,15],[4,34,3,16,"__importStar"],[4,46,3,28],[4,50,4,2],[4,60,4,11,"mod"],[4,63,4,14],[4,65,4,16],[5,4,5,4],[5,8,5,8,"mod"],[5,11,5,11],[5,15,5,15,"mod"],[5,18,5,18],[5,19,5,19,"__esModule"],[5,29,5,29],[5,31,5,31],[5,38,5,38,"mod"],[5,41,5,41],[6,4,6,4],[6,8,6,8,"result"],[6,14,6,14],[6,17,6,17],[6,18,6,18],[6,19,6,19],[7,4,7,4],[7,8,7,8,"mod"],[7,11,7,11],[7,15,7,15],[7,19,7,19],[7,21,8,6],[7,26,8,11],[7,30,8,15,"k"],[7,31,8,16],[7,35,8,20,"mod"],[7,38,8,23],[7,40,9,8],[7,44,9,12,"Object"],[7,50,9,18],[7,51,9,19,"hasOwnProperty"],[7,65,9,33],[7,66,9,34,"call"],[7,70,9,38],[7,71,9,39,"mod"],[7,74,9,42],[7,76,9,44,"k"],[7,77,9,45],[7,78,9,46],[7,80,9,48,"result"],[7,86,9,54],[7,87,9,55,"k"],[7,88,9,56],[7,89,9,57],[7,92,9,60,"mod"],[7,95,9,63],[7,96,9,64,"k"],[7,97,9,65],[7,98,9,66],[8,4,10,4,"result"],[8,10,10,10],[8,11,10,11],[8,20,10,20],[8,21,10,21],[8,24,10,24,"mod"],[8,27,10,27],[9,4,11,4],[9,11,11,11,"result"],[9,17,11,17],[10,2,12,2],[10,3,12,3],[11,2,13,0,"Object"],[11,8,13,6],[11,9,13,7,"defineProperty"],[11,23,13,21],[11,24,13,22,"exports"],[11,31,13,29],[11,33,13,31],[11,45,13,43],[11,47,13,45],[12,4,13,47,"value"],[12,9,13,52],[12,11,13,54],[13,2,13,59],[13,3,13,60],[13,4,13,61],[14,2,15,0],[14,6,15,6,"tools"],[14,11,15,11],[14,14,15,14,"__importStar"],[14,26,15,26],[14,27,15,27,"require"],[14,38,15,34],[14,39,15,34,"_dependencyMap"],[14,53,15,34],[14,76,15,53],[14,77,15,54],[14,78,15,55],[15,2,16,0],[15,11,16,9,"combine"],[15,18,16,16,"combine"],[15,19,16,17,"psbts"],[15,24,16,22],[15,26,16,24],[16,4,17,2],[16,8,17,8,"self"],[16,12,17,12],[16,15,17,15,"psbts"],[16,20,17,20],[16,21,17,21],[16,22,17,22],[16,23,17,23],[17,4,18,2],[17,8,18,8,"selfKeyVals"],[17,19,18,19],[17,22,18,22,"_$$_REQUIRE"],[17,33,18,22],[17,34,18,22,"_dependencyMap"],[17,48,18,22],[17,76,18,33,"psbtToKeyVals"],[17,89,18,46],[17,90,18,47,"self"],[17,94,18,51],[17,95,18,52],[18,4,19,2],[18,8,19,8,"others"],[18,14,19,14],[18,17,19,17,"psbts"],[18,22,19,22],[18,23,19,23,"slice"],[18,28,19,28],[18,29,19,29],[18,30,19,30],[18,31,19,31],[19,4,20,2],[19,8,20,6,"others"],[19,14,20,12],[19,15,20,13,"length"],[19,21,20,19],[19,26,20,24],[19,27,20,25],[19,29,20,27],[19,35,20,33],[19,39,20,37,"Error"],[19,44,20,42],[19,45,20,43],[19,74,20,72],[19,75,20,73],[20,4,21,2],[20,8,21,8,"selfTx"],[20,14,21,14],[20,17,21,17,"getTx"],[20,22,21,22],[20,23,21,23,"self"],[20,27,21,27],[20,28,21,28],[21,4,22,2],[21,8,22,6,"selfTx"],[21,14,22,12],[21,19,22,17,"undefined"],[21,28,22,26],[21,30,22,28],[22,6,23,4],[22,12,23,10],[22,16,23,14,"Error"],[22,21,23,19],[22,22,23,20],[22,57,23,55],[22,58,23,56],[23,4,24,2],[24,4,25,2],[24,8,25,8,"selfGlobalSet"],[24,21,25,21],[24,24,25,24,"getKeySet"],[24,33,25,33],[24,34,25,34,"selfKeyVals"],[24,45,25,45],[24,46,25,46,"globalKeyVals"],[24,59,25,59],[24,60,25,60],[25,4,26,2],[25,8,26,8,"selfInputSets"],[25,21,26,21],[25,24,26,24,"selfKeyVals"],[25,35,26,35],[25,36,26,36,"inputKeyVals"],[25,48,26,48],[25,49,26,49,"map"],[25,52,26,52],[25,53,26,53,"getKeySet"],[25,62,26,62],[25,63,26,63],[26,4,27,2],[26,8,27,8,"selfOutputSets"],[26,22,27,22],[26,25,27,25,"selfKeyVals"],[26,36,27,36],[26,37,27,37,"outputKeyVals"],[26,50,27,50],[26,51,27,51,"map"],[26,54,27,54],[26,55,27,55,"getKeySet"],[26,64,27,64],[26,65,27,65],[27,4,27,66],[27,8,27,66,"_loop"],[27,13,27,66],[27,25,27,66,"_loop"],[27,31,27,66],[27,33,28,30],[28,6,29,4],[28,10,29,10,"otherTx"],[28,17,29,17],[28,20,29,20,"getTx"],[28,25,29,25],[28,26,29,26,"other"],[28,31,29,31],[28,32,29,32],[29,6,30,4],[29,10,31,6,"otherTx"],[29,17,31,13],[29,22,31,18,"undefined"],[29,31,31,27],[29,35,32,6,"tools"],[29,40,32,11],[29,41,32,12,"compare"],[29,48,32,19],[29,49,32,20,"otherTx"],[29,56,32,27],[29,57,32,28,"toBuffer"],[29,65,32,36],[29,66,32,37],[29,67,32,38],[29,69,32,40,"selfTx"],[29,75,32,46],[29,76,32,47,"toBuffer"],[29,84,32,55],[29,85,32,56],[29,86,32,57],[29,87,32,58],[29,92,32,63],[29,93,32,64],[29,95,33,6],[30,8,34,6],[30,14,34,12],[30,18,34,16,"Error"],[30,23,34,21],[30,24,35,8],[30,87,36,6],[30,88,36,7],[31,6,37,4],[32,6,38,4],[32,10,38,10,"otherKeyVals"],[32,22,38,22],[32,25,38,25,"_$$_REQUIRE"],[32,36,38,25],[32,37,38,25,"_dependencyMap"],[32,51,38,25],[32,79,38,36,"psbtToKeyVals"],[32,92,38,49],[32,93,38,50,"other"],[32,98,38,55],[32,99,38,56],[33,6,39,4],[33,10,39,10,"otherGlobalSet"],[33,24,39,24],[33,27,39,27,"getKeySet"],[33,36,39,36],[33,37,39,37,"otherKeyVals"],[33,49,39,49],[33,50,39,50,"globalKeyVals"],[33,63,39,63],[33,64,39,64],[34,6,40,4,"otherGlobalSet"],[34,20,40,18],[34,21,40,19,"forEach"],[34,28,40,26],[34,29,41,6,"keyPusher"],[34,38,41,15],[34,39,42,8,"selfGlobalSet"],[34,52,42,21],[34,54,43,8,"selfKeyVals"],[34,65,43,19],[34,66,43,20,"globalKeyVals"],[34,79,43,33],[34,81,44,8,"otherKeyVals"],[34,93,44,20],[34,94,44,21,"globalKeyVals"],[34,107,45,6],[34,108,46,4],[34,109,46,5],[35,6,47,4],[35,10,47,10,"otherInputSets"],[35,24,47,24],[35,27,47,27,"otherKeyVals"],[35,39,47,39],[35,40,47,40,"inputKeyVals"],[35,52,47,52],[35,53,47,53,"map"],[35,56,47,56],[35,57,47,57,"getKeySet"],[35,66,47,66],[35,67,47,67],[36,6,48,4,"otherInputSets"],[36,20,48,18],[36,21,48,19,"forEach"],[36,28,48,26],[36,29,48,27],[36,39,48,28,"inputSet"],[36,47,48,36],[36,49,48,38,"idx"],[36,52,48,41],[37,8,48,41],[37,15,49,6,"inputSet"],[37,23,49,14],[37,24,49,15,"forEach"],[37,31,49,22],[37,32,50,8,"keyPusher"],[37,41,50,17],[37,42,51,10,"selfInputSets"],[37,55,51,23],[37,56,51,24,"idx"],[37,59,51,27],[37,60,51,28],[37,62,52,10,"selfKeyVals"],[37,73,52,21],[37,74,52,22,"inputKeyVals"],[37,86,52,34],[37,87,52,35,"idx"],[37,90,52,38],[37,91,52,39],[37,93,53,10,"otherKeyVals"],[37,105,53,22],[37,106,53,23,"inputKeyVals"],[37,118,53,35],[37,119,53,36,"idx"],[37,122,53,39],[37,123,54,8],[37,124,55,6],[37,125,55,7],[38,6,55,7],[38,7,56,4],[38,8,56,5],[39,6,57,4],[39,10,57,10,"otherOutputSets"],[39,25,57,25],[39,28,57,28,"otherKeyVals"],[39,40,57,40],[39,41,57,41,"outputKeyVals"],[39,54,57,54],[39,55,57,55,"map"],[39,58,57,58],[39,59,57,59,"getKeySet"],[39,68,57,68],[39,69,57,69],[40,6,58,4,"otherOutputSets"],[40,21,58,19],[40,22,58,20,"forEach"],[40,29,58,27],[40,30,58,28],[40,40,58,29,"outputSet"],[40,49,58,38],[40,51,58,40,"idx"],[40,54,58,43],[41,8,58,43],[41,15,59,6,"outputSet"],[41,24,59,15],[41,25,59,16,"forEach"],[41,32,59,23],[41,33,60,8,"keyPusher"],[41,42,60,17],[41,43,61,10,"selfOutputSets"],[41,57,61,24],[41,58,61,25,"idx"],[41,61,61,28],[41,62,61,29],[41,64,62,10,"selfKeyVals"],[41,75,62,21],[41,76,62,22,"outputKeyVals"],[41,89,62,35],[41,90,62,36,"idx"],[41,93,62,39],[41,94,62,40],[41,96,63,10,"otherKeyVals"],[41,108,63,22],[41,109,63,23,"outputKeyVals"],[41,122,63,36],[41,123,63,37,"idx"],[41,126,63,40],[41,127,64,8],[41,128,65,6],[41,129,65,7],[42,6,65,7],[42,7,66,4],[42,8,66,5],[43,4,67,2],[43,5,67,3],[44,4,28,2],[44,9,28,7],[44,13,28,13,"other"],[44,18,28,18],[44,22,28,22,"others"],[44,28,28,28],[45,6,28,28,"_loop"],[45,11,28,28],[46,4,28,28],[47,4,68,2],[47,11,68,9,"_$$_REQUIRE"],[47,22,68,9],[47,23,68,9,"_dependencyMap"],[47,37,68,9],[47,65,68,20,"psbtFromKeyVals"],[47,80,68,35],[47,81,68,36,"selfTx"],[47,87,68,42],[47,89,68,44],[48,6,69,4,"globalMapKeyVals"],[48,22,69,20],[48,24,69,22,"selfKeyVals"],[48,35,69,33],[48,36,69,34,"globalKeyVals"],[48,49,69,47],[49,6,70,4,"inputKeyVals"],[49,18,70,16],[49,20,70,18,"selfKeyVals"],[49,31,70,29],[49,32,70,30,"inputKeyVals"],[49,44,70,42],[50,6,71,4,"outputKeyVals"],[50,19,71,17],[50,21,71,19,"selfKeyVals"],[50,32,71,30],[50,33,71,31,"outputKeyVals"],[51,4,72,2],[51,5,72,3],[51,6,72,4],[52,2,73,0],[53,2,74,0,"exports"],[53,9,74,7],[53,10,74,8,"combine"],[53,17,74,15],[53,20,74,18,"combine"],[53,27,74,25],[54,2,75,0],[54,11,75,9,"keyPusher"],[54,20,75,18,"keyPusher"],[54,21,75,19,"selfSet"],[54,28,75,26],[54,30,75,28,"selfKeyVals"],[54,41,75,39],[54,43,75,41,"otherKeyVals"],[54,55,75,53],[54,57,75,55],[55,4,76,2],[55,11,76,9],[55,21,76,9,"key"],[55,24,76,12],[55,26,76,16],[56,6,77,4],[56,10,77,8,"selfSet"],[56,17,77,15],[56,18,77,16,"has"],[56,21,77,19],[56,22,77,20,"key"],[56,25,77,23],[56,26,77,24],[56,28,77,26],[57,6,78,4],[57,10,78,10,"newKv"],[57,15,78,15],[57,18,78,18,"otherKeyVals"],[57,30,78,30],[57,31,78,31,"filter"],[57,37,78,37],[57,38,78,38],[57,48,78,38,"kv"],[57,50,78,40],[58,8,78,40],[58,15,78,44,"tools"],[58,20,78,49],[58,21,78,50,"toHex"],[58,26,78,55],[58,27,78,56,"kv"],[58,29,78,58],[58,30,78,59,"key"],[58,33,78,62],[58,34,78,63],[58,39,78,68,"key"],[58,42,78,71],[59,6,78,71],[59,8,78,72],[59,9,78,73],[59,10,78,74],[59,11,78,75],[60,6,79,4,"selfKeyVals"],[60,17,79,15],[60,18,79,16,"push"],[60,22,79,20],[60,23,79,21,"newKv"],[60,28,79,26],[60,29,79,27],[61,6,80,4,"selfSet"],[61,13,80,11],[61,14,80,12,"add"],[61,17,80,15],[61,18,80,16,"key"],[61,21,80,19],[61,22,80,20],[62,4,81,2],[62,5,81,3],[63,2,82,0],[64,2,83,0],[64,11,83,9,"getTx"],[64,16,83,14,"getTx"],[64,17,83,15,"psbt"],[64,21,83,19],[64,23,83,21],[65,4,84,2],[65,11,84,9,"psbt"],[65,15,84,13],[65,16,84,14,"globalMap"],[65,25,84,23],[65,26,84,24,"unsignedTx"],[65,36,84,34],[66,2,85,0],[67,2,86,0],[67,11,86,9,"getKeySet"],[67,20,86,18,"getKeySet"],[67,21,86,19,"keyVals"],[67,28,86,26],[67,30,86,28],[68,4,87,2],[68,8,87,8,"set"],[68,11,87,11],[68,14,87,14],[68,18,87,18,"Set"],[68,21,87,21],[68,22,87,22],[68,23,87,23],[69,4,88,2,"keyVals"],[69,11,88,9],[69,12,88,10,"forEach"],[69,19,88,17],[69,20,88,18],[69,30,88,18,"keyVal"],[69,36,88,24],[69,38,88,28],[70,6,89,4],[70,10,89,10,"hex"],[70,13,89,13],[70,16,89,16,"tools"],[70,21,89,21],[70,22,89,22,"toHex"],[70,27,89,27],[70,28,89,28,"keyVal"],[70,34,89,34],[70,35,89,35,"key"],[70,38,89,38],[70,39,89,39],[71,6,90,4],[71,10,90,8,"set"],[71,13,90,11],[71,14,90,12,"has"],[71,17,90,15],[71,18,90,16,"hex"],[71,21,90,19],[71,22,90,20],[71,24,91,6],[71,30,91,12],[71,34,91,16,"Error"],[71,39,91,21],[71,40,91,22],[71,85,91,67],[71,86,91,68],[72,6,92,4,"set"],[72,9,92,7],[72,10,92,8,"add"],[72,13,92,11],[72,14,92,12,"hex"],[72,17,92,15],[72,18,92,16],[73,4,93,2],[73,5,93,3],[73,6,93,4],[74,4,94,2],[74,11,94,9,"set"],[74,14,94,12],[75,2,95,0],[76,0,95,1],[76,3]],"functionMap":{"names":["<global>","<anonymous>","combine","otherInputSets.forEach$argument_0","otherOutputSets.forEach$argument_0","keyPusher","otherKeyVals.filter$argument_0","getTx","getKeySet","keyVals.forEach$argument_0"],"mappings":"AAA;ECG;GDQ;AEI;2BCgC;ODO;4BEG;OFO;CFQ;AKE;SJC;sCKE,iCL;GIG;CLC;AOC;CPE;AQC;kBCE;GDK;CRE"}},"type":"js/module"}]}