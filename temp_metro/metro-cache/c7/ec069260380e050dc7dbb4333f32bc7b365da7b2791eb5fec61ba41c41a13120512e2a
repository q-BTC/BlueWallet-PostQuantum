{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":49,"column":27,"index":1403},"end":{"line":49,"column":54,"index":1430}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, 'default', {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o['default'] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.initEccLib = initEccLib;\n  exports.getEccLib = getEccLib;\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  var _ECCLIB_CACHE = {};\n  /**\n   * Initializes the ECC library with the provided instance.\n   * If `eccLib` is `undefined`, the library will be cleared.\n   * If `eccLib` is a new instance, it will be verified before setting it as the active library.\n   *\n   * @param eccLib The instance of the ECC library to initialize.\n   */\n  function initEccLib(eccLib) {\n    if (!eccLib) {\n      // allow clearing the library\n      _ECCLIB_CACHE.eccLib = eccLib;\n    } else if (eccLib !== _ECCLIB_CACHE.eccLib) {\n      // new instance, verify it\n      verifyEcc(eccLib);\n      _ECCLIB_CACHE.eccLib = eccLib;\n    }\n  }\n  /**\n   * Retrieves the ECC Library instance.\n   * Throws an error if the ECC Library is not provided.\n   * You must call initEccLib() with a valid TinySecp256k1Interface instance before calling this function.\n   * @returns The ECC Library instance.\n   * @throws Error if the ECC Library is not provided.\n   */\n  function getEccLib() {\n    if (!_ECCLIB_CACHE.eccLib) throw new Error('No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance');\n    return _ECCLIB_CACHE.eccLib;\n  }\n  var h = function h(hex) {\n    return tools.fromHex(hex);\n  };\n  /**\n   * Verifies the ECC functionality.\n   *\n   * @param ecc - The TinySecp256k1Interface object.\n   */\n  function verifyEcc(ecc) {\n    assert(typeof ecc.isXOnlyPoint === 'function');\n    assert(ecc.isXOnlyPoint(h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798')));\n    assert(ecc.isXOnlyPoint(h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e')));\n    assert(ecc.isXOnlyPoint(h('f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9')));\n    assert(ecc.isXOnlyPoint(h('0000000000000000000000000000000000000000000000000000000000000001')));\n    assert(!ecc.isXOnlyPoint(h('0000000000000000000000000000000000000000000000000000000000000000')));\n    assert(!ecc.isXOnlyPoint(h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f')));\n    assert(typeof ecc.xOnlyPointAddTweak === 'function');\n    tweakAddVectors.forEach(function (t) {\n      var r = ecc.xOnlyPointAddTweak(h(t.pubkey), h(t.tweak));\n      if (t.result === null) {\n        assert(r === null);\n      } else {\n        assert(r !== null);\n        assert(r.parity === t.parity);\n        assert(tools.compare(r.xOnlyPubkey, h(t.result)) === 0);\n      }\n    });\n  }\n  function assert(bool) {\n    if (!bool) throw new Error('ecc library invalid');\n  }\n  var tweakAddVectors = [{\n    pubkey: '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    tweak: 'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140',\n    parity: -1,\n    result: null\n  }, {\n    pubkey: '1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b',\n    tweak: 'a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac',\n    parity: 1,\n    result: 'e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf'\n  }, {\n    pubkey: '2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991',\n    tweak: '823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47',\n    parity: 0,\n    result: '9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c'\n  }];\n});","lineCount":117,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__createBinding"],[4,21,2,19],[4,24,3,3],[4,28,3,7],[4,32,3,11],[4,36,3,15],[4,37,3,16,"__createBinding"],[4,52,3,31],[4,57,4,3,"Object"],[4,63,4,9],[4,64,4,10,"create"],[4,70,4,16],[4,73,5,6],[4,83,5,16,"o"],[4,84,5,17],[4,86,5,19,"m"],[4,87,5,20],[4,89,5,22,"k"],[4,90,5,23],[4,92,5,25,"k2"],[4,94,5,27],[4,96,5,29],[5,4,6,8],[5,8,6,12,"k2"],[5,10,6,14],[5,15,6,19,"undefined"],[5,24,6,28],[5,26,6,30,"k2"],[5,28,6,32],[5,31,6,35,"k"],[5,32,6,36],[6,4,7,8],[6,8,7,12,"desc"],[6,12,7,16],[6,15,7,19,"Object"],[6,21,7,25],[6,22,7,26,"getOwnPropertyDescriptor"],[6,46,7,50],[6,47,7,51,"m"],[6,48,7,52],[6,50,7,54,"k"],[6,51,7,55],[6,52,7,56],[7,4,8,8],[7,8,9,10],[7,9,9,11,"desc"],[7,13,9,15],[7,18,10,11],[7,23,10,16],[7,27,10,20,"desc"],[7,31,10,24],[7,34,10,27],[7,35,10,28,"m"],[7,36,10,29],[7,37,10,30,"__esModule"],[7,47,10,40],[7,50,10,43,"desc"],[7,54,10,47],[7,55,10,48,"writable"],[7,63,10,56],[7,67,10,60,"desc"],[7,71,10,64],[7,72,10,65,"configurable"],[7,84,10,77],[7,85,10,78],[7,87,11,10],[8,6,12,10,"desc"],[8,10,12,14],[8,13,12,17],[9,8,13,12,"enumerable"],[9,18,13,22],[9,20,13,24],[9,24,13,28],[10,8,14,12,"get"],[10,11,14,15],[10,13,14,17],[10,22,14,12,"get"],[10,25,14,15,"get"],[10,26,14,15],[10,28,14,29],[11,10,15,14],[11,17,15,21,"m"],[11,18,15,22],[11,19,15,23,"k"],[11,20,15,24],[11,21,15,25],[12,8,16,12],[13,6,17,10],[13,7,17,11],[14,4,18,8],[15,4,19,8,"Object"],[15,10,19,14],[15,11,19,15,"defineProperty"],[15,25,19,29],[15,26,19,30,"o"],[15,27,19,31],[15,29,19,33,"k2"],[15,31,19,35],[15,33,19,37,"desc"],[15,37,19,41],[15,38,19,42],[16,2,20,6],[16,3,20,7],[16,6,21,6],[16,16,21,16,"o"],[16,17,21,17],[16,19,21,19,"m"],[16,20,21,20],[16,22,21,22,"k"],[16,23,21,23],[16,25,21,25,"k2"],[16,27,21,27],[16,29,21,29],[17,4,22,8],[17,8,22,12,"k2"],[17,10,22,14],[17,15,22,19,"undefined"],[17,24,22,28],[17,26,22,30,"k2"],[17,28,22,32],[17,31,22,35,"k"],[17,32,22,36],[18,4,23,8,"o"],[18,5,23,9],[18,6,23,10,"k2"],[18,8,23,12],[18,9,23,13],[18,12,23,16,"m"],[18,13,23,17],[18,14,23,18,"k"],[18,15,23,19],[18,16,23,20],[19,2,24,6],[19,3,24,7],[19,4,24,8],[20,2,25,0],[20,6,25,4,"__setModuleDefault"],[20,24,25,22],[20,27,26,3],[20,31,26,7],[20,35,26,11],[20,39,26,15],[20,40,26,16,"__setModuleDefault"],[20,58,26,34],[20,63,27,3,"Object"],[20,69,27,9],[20,70,27,10,"create"],[20,76,27,16],[20,79,28,6],[20,89,28,16,"o"],[20,90,28,17],[20,92,28,19,"v"],[20,93,28,20],[20,95,28,22],[21,4,29,8,"Object"],[21,10,29,14],[21,11,29,15,"defineProperty"],[21,25,29,29],[21,26,29,30,"o"],[21,27,29,31],[21,29,29,33],[21,38,29,42],[21,40,29,44],[22,6,29,46,"enumerable"],[22,16,29,56],[22,18,29,58],[22,22,29,62],[23,6,29,64,"value"],[23,11,29,69],[23,13,29,71,"v"],[24,4,29,73],[24,5,29,74],[24,6,29,75],[25,2,30,6],[25,3,30,7],[25,6,31,6],[25,16,31,16,"o"],[25,17,31,17],[25,19,31,19,"v"],[25,20,31,20],[25,22,31,22],[26,4,32,8,"o"],[26,5,32,9],[26,6,32,10],[26,15,32,19],[26,16,32,20],[26,19,32,23,"v"],[26,20,32,24],[27,2,33,6],[27,3,33,7],[27,4,33,8],[28,2,34,0],[28,6,34,4,"__importStar"],[28,18,34,16],[28,21,35,3],[28,25,35,7],[28,29,35,11],[28,33,35,15],[28,34,35,16,"__importStar"],[28,46,35,28],[28,50,36,2],[28,60,36,12,"mod"],[28,63,36,15],[28,65,36,17],[29,4,37,4],[29,8,37,8,"mod"],[29,11,37,11],[29,15,37,15,"mod"],[29,18,37,18],[29,19,37,19,"__esModule"],[29,29,37,29],[29,31,37,31],[29,38,37,38,"mod"],[29,41,37,41],[30,4,38,4],[30,8,38,8,"result"],[30,14,38,14],[30,17,38,17],[30,18,38,18],[30,19,38,19],[31,4,39,4],[31,8,39,8,"mod"],[31,11,39,11],[31,15,39,15],[31,19,39,19],[31,21,40,6],[31,26,40,11],[31,30,40,15,"k"],[31,31,40,16],[31,35,40,20,"mod"],[31,38,40,23],[31,40,41,8],[31,44,41,12,"k"],[31,45,41,13],[31,50,41,18],[31,59,41,27],[31,63,41,31,"Object"],[31,69,41,37],[31,70,41,38,"prototype"],[31,79,41,47],[31,80,41,48,"hasOwnProperty"],[31,94,41,62],[31,95,41,63,"call"],[31,99,41,67],[31,100,41,68,"mod"],[31,103,41,71],[31,105,41,73,"k"],[31,106,41,74],[31,107,41,75],[31,109,42,10,"__createBinding"],[31,124,42,25],[31,125,42,26,"result"],[31,131,42,32],[31,133,42,34,"mod"],[31,136,42,37],[31,138,42,39,"k"],[31,139,42,40],[31,140,42,41],[32,4,43,4,"__setModuleDefault"],[32,22,43,22],[32,23,43,23,"result"],[32,29,43,29],[32,31,43,31,"mod"],[32,34,43,34],[32,35,43,35],[33,4,44,4],[33,11,44,11,"result"],[33,17,44,17],[34,2,45,2],[34,3,45,3],[35,2,46,0,"Object"],[35,8,46,6],[35,9,46,7,"defineProperty"],[35,23,46,21],[35,24,46,22,"exports"],[35,31,46,29],[35,33,46,31],[35,45,46,43],[35,47,46,45],[36,4,46,47,"value"],[36,9,46,52],[36,11,46,54],[37,2,46,59],[37,3,46,60],[37,4,46,61],[38,2,47,0,"exports"],[38,9,47,7],[38,10,47,8,"initEccLib"],[38,20,47,18],[38,23,47,21,"initEccLib"],[38,33,47,31],[39,2,48,0,"exports"],[39,9,48,7],[39,10,48,8,"getEccLib"],[39,19,48,17],[39,22,48,20,"getEccLib"],[39,31,48,29],[40,2,49,0],[40,6,49,6,"tools"],[40,11,49,11],[40,14,49,14,"__importStar"],[40,26,49,26],[40,27,49,27,"require"],[40,38,49,34],[40,39,49,34,"_dependencyMap"],[40,53,49,34],[40,76,49,53],[40,77,49,54],[40,78,49,55],[41,2,50,0],[41,6,50,6,"_ECCLIB_CACHE"],[41,19,50,19],[41,22,50,22],[41,23,50,23],[41,24,50,24],[42,2,51,0],[43,0,52,0],[44,0,53,0],[45,0,54,0],[46,0,55,0],[47,0,56,0],[48,0,57,0],[49,2,58,0],[49,11,58,9,"initEccLib"],[49,21,58,19,"initEccLib"],[49,22,58,20,"eccLib"],[49,28,58,26],[49,30,58,28],[50,4,59,2],[50,8,59,6],[50,9,59,7,"eccLib"],[50,15,59,13],[50,17,59,15],[51,6,60,4],[52,6,61,4,"_ECCLIB_CACHE"],[52,19,61,17],[52,20,61,18,"eccLib"],[52,26,61,24],[52,29,61,27,"eccLib"],[52,35,61,33],[53,4,62,2],[53,5,62,3],[53,11,62,9],[53,15,62,13,"eccLib"],[53,21,62,19],[53,26,62,24,"_ECCLIB_CACHE"],[53,39,62,37],[53,40,62,38,"eccLib"],[53,46,62,44],[53,48,62,46],[54,6,63,4],[55,6,64,4,"verifyEcc"],[55,15,64,13],[55,16,64,14,"eccLib"],[55,22,64,20],[55,23,64,21],[56,6,65,4,"_ECCLIB_CACHE"],[56,19,65,17],[56,20,65,18,"eccLib"],[56,26,65,24],[56,29,65,27,"eccLib"],[56,35,65,33],[57,4,66,2],[58,2,67,0],[59,2,68,0],[60,0,69,0],[61,0,70,0],[62,0,71,0],[63,0,72,0],[64,0,73,0],[65,0,74,0],[66,2,75,0],[66,11,75,9,"getEccLib"],[66,20,75,18,"getEccLib"],[66,21,75,18],[66,23,75,21],[67,4,76,2],[67,8,76,6],[67,9,76,7,"_ECCLIB_CACHE"],[67,22,76,20],[67,23,76,21,"eccLib"],[67,29,76,27],[67,31,77,4],[67,37,77,10],[67,41,77,14,"Error"],[67,46,77,19],[67,47,78,6],[67,145,79,4],[67,146,79,5],[68,4,80,2],[68,11,80,9,"_ECCLIB_CACHE"],[68,24,80,22],[68,25,80,23,"eccLib"],[68,31,80,29],[69,2,81,0],[70,2,82,0],[70,6,82,6,"h"],[70,7,82,7],[70,10,82,10],[70,19,82,6,"h"],[70,20,82,7,"h"],[70,21,82,10,"hex"],[70,24,82,13],[71,4,82,13],[71,11,82,17,"tools"],[71,16,82,22],[71,17,82,23,"fromHex"],[71,24,82,30],[71,25,82,31,"hex"],[71,28,82,34],[71,29,82,35],[72,2,82,35],[73,2,83,0],[74,0,84,0],[75,0,85,0],[76,0,86,0],[77,0,87,0],[78,2,88,0],[78,11,88,9,"verifyEcc"],[78,20,88,18,"verifyEcc"],[78,21,88,19,"ecc"],[78,24,88,22],[78,26,88,24],[79,4,89,2,"assert"],[79,10,89,8],[79,11,89,9],[79,18,89,16,"ecc"],[79,21,89,19],[79,22,89,20,"isXOnlyPoint"],[79,34,89,32],[79,39,89,37],[79,49,89,47],[79,50,89,48],[80,4,90,2,"assert"],[80,10,90,8],[80,11,91,4,"ecc"],[80,14,91,7],[80,15,91,8,"isXOnlyPoint"],[80,27,91,20],[80,28,92,6,"h"],[80,29,92,7],[80,30,92,8],[80,96,92,74],[80,97,93,4],[80,98,94,2],[80,99,94,3],[81,4,95,2,"assert"],[81,10,95,8],[81,11,96,4,"ecc"],[81,14,96,7],[81,15,96,8,"isXOnlyPoint"],[81,27,96,20],[81,28,97,6,"h"],[81,29,97,7],[81,30,97,8],[81,96,97,74],[81,97,98,4],[81,98,99,2],[81,99,99,3],[82,4,100,2,"assert"],[82,10,100,8],[82,11,101,4,"ecc"],[82,14,101,7],[82,15,101,8,"isXOnlyPoint"],[82,27,101,20],[82,28,102,6,"h"],[82,29,102,7],[82,30,102,8],[82,96,102,74],[82,97,103,4],[82,98,104,2],[82,99,104,3],[83,4,105,2,"assert"],[83,10,105,8],[83,11,106,4,"ecc"],[83,14,106,7],[83,15,106,8,"isXOnlyPoint"],[83,27,106,20],[83,28,107,6,"h"],[83,29,107,7],[83,30,107,8],[83,96,107,74],[83,97,108,4],[83,98,109,2],[83,99,109,3],[84,4,110,2,"assert"],[84,10,110,8],[84,11,111,4],[84,12,111,5,"ecc"],[84,15,111,8],[84,16,111,9,"isXOnlyPoint"],[84,28,111,21],[84,29,112,6,"h"],[84,30,112,7],[84,31,112,8],[84,97,112,74],[84,98,113,4],[84,99,114,2],[84,100,114,3],[85,4,115,2,"assert"],[85,10,115,8],[85,11,116,4],[85,12,116,5,"ecc"],[85,15,116,8],[85,16,116,9,"isXOnlyPoint"],[85,28,116,21],[85,29,117,6,"h"],[85,30,117,7],[85,31,117,8],[85,97,117,74],[85,98,118,4],[85,99,119,2],[85,100,119,3],[86,4,120,2,"assert"],[86,10,120,8],[86,11,120,9],[86,18,120,16,"ecc"],[86,21,120,19],[86,22,120,20,"xOnlyPointAddTweak"],[86,40,120,38],[86,45,120,43],[86,55,120,53],[86,56,120,54],[87,4,121,2,"tweakAddVectors"],[87,19,121,17],[87,20,121,18,"forEach"],[87,27,121,25],[87,28,121,26],[87,38,121,26,"t"],[87,39,121,27],[87,41,121,31],[88,6,122,4],[88,10,122,10,"r"],[88,11,122,11],[88,14,122,14,"ecc"],[88,17,122,17],[88,18,122,18,"xOnlyPointAddTweak"],[88,36,122,36],[88,37,122,37,"h"],[88,38,122,38],[88,39,122,39,"t"],[88,40,122,40],[88,41,122,41,"pubkey"],[88,47,122,47],[88,48,122,48],[88,50,122,50,"h"],[88,51,122,51],[88,52,122,52,"t"],[88,53,122,53],[88,54,122,54,"tweak"],[88,59,122,59],[88,60,122,60],[88,61,122,61],[89,6,123,4],[89,10,123,8,"t"],[89,11,123,9],[89,12,123,10,"result"],[89,18,123,16],[89,23,123,21],[89,27,123,25],[89,29,123,27],[90,8,124,6,"assert"],[90,14,124,12],[90,15,124,13,"r"],[90,16,124,14],[90,21,124,19],[90,25,124,23],[90,26,124,24],[91,6,125,4],[91,7,125,5],[91,13,125,11],[92,8,126,6,"assert"],[92,14,126,12],[92,15,126,13,"r"],[92,16,126,14],[92,21,126,19],[92,25,126,23],[92,26,126,24],[93,8,127,6,"assert"],[93,14,127,12],[93,15,127,13,"r"],[93,16,127,14],[93,17,127,15,"parity"],[93,23,127,21],[93,28,127,26,"t"],[93,29,127,27],[93,30,127,28,"parity"],[93,36,127,34],[93,37,127,35],[94,8,128,6,"assert"],[94,14,128,12],[94,15,128,13,"tools"],[94,20,128,18],[94,21,128,19,"compare"],[94,28,128,26],[94,29,128,27,"r"],[94,30,128,28],[94,31,128,29,"xOnlyPubkey"],[94,42,128,40],[94,44,128,42,"h"],[94,45,128,43],[94,46,128,44,"t"],[94,47,128,45],[94,48,128,46,"result"],[94,54,128,52],[94,55,128,53],[94,56,128,54],[94,61,128,59],[94,62,128,60],[94,63,128,61],[95,6,129,4],[96,4,130,2],[96,5,130,3],[96,6,130,4],[97,2,131,0],[98,2,132,0],[98,11,132,9,"assert"],[98,17,132,15,"assert"],[98,18,132,16,"bool"],[98,22,132,20],[98,24,132,22],[99,4,133,2],[99,8,133,6],[99,9,133,7,"bool"],[99,13,133,11],[99,15,133,13],[99,21,133,19],[99,25,133,23,"Error"],[99,30,133,28],[99,31,133,29],[99,52,133,50],[99,53,133,51],[100,2,134,0],[101,2,135,0],[101,6,135,6,"tweakAddVectors"],[101,21,135,21],[101,24,135,24],[101,25,136,2],[102,4,137,4,"pubkey"],[102,10,137,10],[102,12,137,12],[102,78,137,78],[103,4,138,4,"tweak"],[103,9,138,9],[103,11,138,11],[103,77,138,77],[104,4,139,4,"parity"],[104,10,139,10],[104,12,139,12],[104,13,139,13],[104,14,139,14],[105,4,140,4,"result"],[105,10,140,10],[105,12,140,12],[106,2,141,2],[106,3,141,3],[106,5,142,2],[107,4,143,4,"pubkey"],[107,10,143,10],[107,12,143,12],[107,78,143,78],[108,4,144,4,"tweak"],[108,9,144,9],[108,11,144,11],[108,77,144,77],[109,4,145,4,"parity"],[109,10,145,10],[109,12,145,12],[109,13,145,13],[110,4,146,4,"result"],[110,10,146,10],[110,12,146,12],[111,2,147,2],[111,3,147,3],[111,5,148,2],[112,4,149,4,"pubkey"],[112,10,149,10],[112,12,149,12],[112,78,149,78],[113,4,150,4,"tweak"],[113,9,150,9],[113,11,150,11],[113,77,150,77],[114,4,151,4,"parity"],[114,10,151,10],[114,12,151,12],[114,13,151,13],[115,4,152,4,"result"],[115,10,152,10],[115,12,152,12],[116,2,153,2],[116,3,153,3],[116,4,154,1],[117,0,154,2],[117,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","initEccLib","getEccLib","h","verifyEcc","tweakAddVectors.forEach$argument_0","assert"],"mappings":"AAA;MCI;iBCS;aDE;ODI;MCC;ODG;MCI;ODE;MCC;ODE;ECG;GDS;AGa;CHS;AIQ;CJM;UKC,yBL;AMM;0BCiC;GDS;CNC;AQC;CRE"}},"type":"js/module"}]}