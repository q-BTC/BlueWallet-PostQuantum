{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}},{"name":"./Raw","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":14,"index":58},"end":{"line":2,"column":35,"index":79}}],"key":"tJ3LrdMXJGYBLPt24IO0ACFD5ss="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var ATKEYWORD = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.AtKeyword;\n  var SEMICOLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n  var LEFTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n  var RIGHTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightCurlyBracket;\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode.leftCurlyBracketOrSemicolon, true);\n  }\n  function isDeclarationBlockAtrule() {\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\n      if (type === RIGHTCURLYBRACKET) {\n        return true;\n      }\n      if (type === LEFTCURLYBRACKET || type === ATKEYWORD) {\n        return false;\n      }\n    }\n    return false;\n  }\n  module.exports = {\n    name: 'Atrule',\n    structure: {\n      name: String,\n      prelude: ['AtrulePrelude', 'Raw', null],\n      block: ['Block', null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var name;\n      var nameLowerCase;\n      var prelude = null;\n      var block = null;\n      this.eat(ATKEYWORD);\n      name = this.scanner.substrToCursor(start + 1);\n      nameLowerCase = name.toLowerCase();\n      this.scanner.skipSC();\n\n      // parse prelude\n      if (this.scanner.eof === false && this.scanner.tokenType !== LEFTCURLYBRACKET && this.scanner.tokenType !== SEMICOLON) {\n        if (this.parseAtrulePrelude) {\n          prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\n\n          // turn empty AtrulePrelude into null\n          if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\n            prelude = null;\n          }\n        } else {\n          prelude = consumeRaw.call(this, this.scanner.tokenIndex);\n        }\n        this.scanner.skipSC();\n      }\n      switch (this.scanner.tokenType) {\n        case SEMICOLON:\n          this.scanner.next();\n          break;\n        case LEFTCURLYBRACKET:\n          if (this.atrule.hasOwnProperty(nameLowerCase) && typeof this.atrule[nameLowerCase].block === 'function') {\n            block = this.atrule[nameLowerCase].block.call(this);\n          } else {\n            // TODO: should consume block content as Raw?\n            block = this.Block(isDeclarationBlockAtrule.call(this));\n          }\n          break;\n      }\n      return {\n        type: 'Atrule',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        prelude: prelude,\n        block: block\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('@');\n      this.chunk(node.name);\n      if (node.prelude !== null) {\n        this.chunk(' ');\n        this.node(node.prelude);\n      }\n      if (node.block) {\n        this.node(node.block);\n      } else {\n        this.chunk(';');\n      }\n    },\n    walkContext: 'atrule'\n  };\n});","lineCount":88,"map":[[2,2,4,0],[2,6,4,4,"ATKEYWORD"],[2,15,4,13],[2,18,4,16,"_$$_REQUIRE"],[2,29,4,16],[2,30,4,16,"_dependencyMap"],[2,44,4,16],[2,68,4,16,"TYPE"],[2,72,4,16],[2,73,4,21,"AtKeyword"],[2,82,4,30],[3,2,5,0],[3,6,5,4,"SEMICOLON"],[3,15,5,13],[3,18,5,16,"_$$_REQUIRE"],[3,29,5,16],[3,30,5,16,"_dependencyMap"],[3,44,5,16],[3,68,5,16,"TYPE"],[3,72,5,16],[3,73,5,21,"Semicolon"],[3,82,5,30],[4,2,6,0],[4,6,6,4,"LEFTCURLYBRACKET"],[4,22,6,20],[4,25,6,23,"_$$_REQUIRE"],[4,36,6,23],[4,37,6,23,"_dependencyMap"],[4,51,6,23],[4,75,6,23,"TYPE"],[4,79,6,23],[4,80,6,28,"LeftCurlyBracket"],[4,96,6,44],[5,2,7,0],[5,6,7,4,"RIGHTCURLYBRACKET"],[5,23,7,21],[5,26,7,24,"_$$_REQUIRE"],[5,37,7,24],[5,38,7,24,"_dependencyMap"],[5,52,7,24],[5,76,7,24,"TYPE"],[5,80,7,24],[5,81,7,29,"RightCurlyBracket"],[5,98,7,46],[6,2,9,0],[6,11,9,9,"consumeRaw"],[6,21,9,19,"consumeRaw"],[6,22,9,20,"startToken"],[6,32,9,30],[6,34,9,32],[7,4,10,4],[7,11,10,11],[7,15,10,15],[7,16,10,16,"Raw"],[7,19,10,19],[7,20,10,20,"startToken"],[7,30,10,30],[7,32,10,32,"_$$_REQUIRE"],[7,43,10,32],[7,44,10,32,"_dependencyMap"],[7,58,10,32],[7,72,10,32,"mode"],[7,76,10,32],[7,77,10,40,"leftCurlyBracketOrSemicolon"],[7,104,10,67],[7,106,10,69],[7,110,10,73],[7,111,10,74],[8,2,11,0],[9,2,13,0],[9,11,13,9,"isDeclarationBlockAtrule"],[9,35,13,33,"isDeclarationBlockAtrule"],[9,36,13,33],[9,38,13,36],[10,4,14,4],[10,9,14,9],[10,13,14,13,"offset"],[10,19,14,19],[10,22,14,22],[10,23,14,23],[10,25,14,25,"type"],[10,29,14,29],[10,31,14,31,"type"],[10,35,14,35],[10,38,14,38],[10,42,14,42],[10,43,14,43,"scanner"],[10,50,14,50],[10,51,14,51,"lookupType"],[10,61,14,61],[10,62,14,62,"offset"],[10,68,14,68],[10,69,14,69],[10,71,14,71,"offset"],[10,77,14,77],[10,79,14,79],[10,81,14,81],[11,6,15,8],[11,10,15,12,"type"],[11,14,15,16],[11,19,15,21,"RIGHTCURLYBRACKET"],[11,36,15,38],[11,38,15,40],[12,8,16,12],[12,15,16,19],[12,19,16,23],[13,6,17,8],[14,6,19,8],[14,10,19,12,"type"],[14,14,19,16],[14,19,19,21,"LEFTCURLYBRACKET"],[14,35,19,37],[14,39,20,12,"type"],[14,43,20,16],[14,48,20,21,"ATKEYWORD"],[14,57,20,30],[14,59,20,32],[15,8,21,12],[15,15,21,19],[15,20,21,24],[16,6,22,8],[17,4,23,4],[18,4,25,4],[18,11,25,11],[18,16,25,16],[19,2,26,0],[20,2,28,0,"module"],[20,8,28,6],[20,9,28,7,"exports"],[20,16,28,14],[20,19,28,17],[21,4,29,4,"name"],[21,8,29,8],[21,10,29,10],[21,18,29,18],[22,4,30,4,"structure"],[22,13,30,13],[22,15,30,15],[23,6,31,8,"name"],[23,10,31,12],[23,12,31,14,"String"],[23,18,31,20],[24,6,32,8,"prelude"],[24,13,32,15],[24,15,32,17],[24,16,32,18],[24,31,32,33],[24,33,32,35],[24,38,32,40],[24,40,32,42],[24,44,32,46],[24,45,32,47],[25,6,33,8,"block"],[25,11,33,13],[25,13,33,15],[25,14,33,16],[25,21,33,23],[25,23,33,25],[25,27,33,29],[26,4,34,4],[26,5,34,5],[27,4,35,4,"parse"],[27,9,35,9],[27,11,35,11],[27,20,35,4,"parse"],[27,25,35,9,"parse"],[27,26,35,9],[27,28,35,22],[28,6,36,8],[28,10,36,12,"start"],[28,15,36,17],[28,18,36,20],[28,22,36,24],[28,23,36,25,"scanner"],[28,30,36,32],[28,31,36,33,"tokenStart"],[28,41,36,43],[29,6,37,8],[29,10,37,12,"name"],[29,14,37,16],[30,6,38,8],[30,10,38,12,"nameLowerCase"],[30,23,38,25],[31,6,39,8],[31,10,39,12,"prelude"],[31,17,39,19],[31,20,39,22],[31,24,39,26],[32,6,40,8],[32,10,40,12,"block"],[32,15,40,17],[32,18,40,20],[32,22,40,24],[33,6,42,8],[33,10,42,12],[33,11,42,13,"eat"],[33,14,42,16],[33,15,42,17,"ATKEYWORD"],[33,24,42,26],[33,25,42,27],[34,6,44,8,"name"],[34,10,44,12],[34,13,44,15],[34,17,44,19],[34,18,44,20,"scanner"],[34,25,44,27],[34,26,44,28,"substrToCursor"],[34,40,44,42],[34,41,44,43,"start"],[34,46,44,48],[34,49,44,51],[34,50,44,52],[34,51,44,53],[35,6,45,8,"nameLowerCase"],[35,19,45,21],[35,22,45,24,"name"],[35,26,45,28],[35,27,45,29,"toLowerCase"],[35,38,45,40],[35,39,45,41],[35,40,45,42],[36,6,46,8],[36,10,46,12],[36,11,46,13,"scanner"],[36,18,46,20],[36,19,46,21,"skipSC"],[36,25,46,27],[36,26,46,28],[36,27,46,29],[38,6,48,8],[39,6,49,8],[39,10,49,12],[39,14,49,16],[39,15,49,17,"scanner"],[39,22,49,24],[39,23,49,25,"eof"],[39,26,49,28],[39,31,49,33],[39,36,49,38],[39,40,50,12],[39,44,50,16],[39,45,50,17,"scanner"],[39,52,50,24],[39,53,50,25,"tokenType"],[39,62,50,34],[39,67,50,39,"LEFTCURLYBRACKET"],[39,83,50,55],[39,87,51,12],[39,91,51,16],[39,92,51,17,"scanner"],[39,99,51,24],[39,100,51,25,"tokenType"],[39,109,51,34],[39,114,51,39,"SEMICOLON"],[39,123,51,48],[39,125,51,50],[40,8,52,12],[40,12,52,16],[40,16,52,20],[40,17,52,21,"parseAtrulePrelude"],[40,35,52,39],[40,37,52,41],[41,10,53,16,"prelude"],[41,17,53,23],[41,20,53,26],[41,24,53,30],[41,25,53,31,"parseWithFallback"],[41,42,53,48],[41,43,53,49],[41,47,53,53],[41,48,53,54,"AtrulePrelude"],[41,61,53,67],[41,62,53,68,"bind"],[41,66,53,72],[41,67,53,73],[41,71,53,77],[41,73,53,79,"name"],[41,77,53,83],[41,78,53,84],[41,80,53,86,"consumeRaw"],[41,90,53,96],[41,91,53,97],[43,10,55,16],[44,10,56,16],[44,14,56,20,"prelude"],[44,21,56,27],[44,22,56,28,"type"],[44,26,56,32],[44,31,56,37],[44,46,56,52],[44,50,56,56,"prelude"],[44,57,56,63],[44,58,56,64,"children"],[44,66,56,72],[44,67,56,73,"head"],[44,71,56,77],[44,76,56,82],[44,80,56,86],[44,82,56,88],[45,12,57,20,"prelude"],[45,19,57,27],[45,22,57,30],[45,26,57,34],[46,10,58,16],[47,8,59,12],[47,9,59,13],[47,15,59,19],[48,10,60,16,"prelude"],[48,17,60,23],[48,20,60,26,"consumeRaw"],[48,30,60,36],[48,31,60,37,"call"],[48,35,60,41],[48,36,60,42],[48,40,60,46],[48,42,60,48],[48,46,60,52],[48,47,60,53,"scanner"],[48,54,60,60],[48,55,60,61,"tokenIndex"],[48,65,60,71],[48,66,60,72],[49,8,61,12],[50,8,63,12],[50,12,63,16],[50,13,63,17,"scanner"],[50,20,63,24],[50,21,63,25,"skipSC"],[50,27,63,31],[50,28,63,32],[50,29,63,33],[51,6,64,8],[52,6,66,8],[52,14,66,16],[52,18,66,20],[52,19,66,21,"scanner"],[52,26,66,28],[52,27,66,29,"tokenType"],[52,36,66,38],[53,8,67,12],[53,13,67,17,"SEMICOLON"],[53,22,67,26],[54,10,68,16],[54,14,68,20],[54,15,68,21,"scanner"],[54,22,68,28],[54,23,68,29,"next"],[54,27,68,33],[54,28,68,34],[54,29,68,35],[55,10,69,16],[56,8,71,12],[56,13,71,17,"LEFTCURLYBRACKET"],[56,29,71,33],[57,10,72,16],[57,14,72,20],[57,18,72,24],[57,19,72,25,"atrule"],[57,25,72,31],[57,26,72,32,"hasOwnProperty"],[57,40,72,46],[57,41,72,47,"nameLowerCase"],[57,54,72,60],[57,55,72,61],[57,59,73,20],[57,66,73,27],[57,70,73,31],[57,71,73,32,"atrule"],[57,77,73,38],[57,78,73,39,"nameLowerCase"],[57,91,73,52],[57,92,73,53],[57,93,73,54,"block"],[57,98,73,59],[57,103,73,64],[57,113,73,74],[57,115,73,76],[58,12,74,20,"block"],[58,17,74,25],[58,20,74,28],[58,24,74,32],[58,25,74,33,"atrule"],[58,31,74,39],[58,32,74,40,"nameLowerCase"],[58,45,74,53],[58,46,74,54],[58,47,74,55,"block"],[58,52,74,60],[58,53,74,61,"call"],[58,57,74,65],[58,58,74,66],[58,62,74,70],[58,63,74,71],[59,10,75,16],[59,11,75,17],[59,17,75,23],[60,12,76,20],[61,12,77,20,"block"],[61,17,77,25],[61,20,77,28],[61,24,77,32],[61,25,77,33,"Block"],[61,30,77,38],[61,31,77,39,"isDeclarationBlockAtrule"],[61,55,77,63],[61,56,77,64,"call"],[61,60,77,68],[61,61,77,69],[61,65,77,73],[61,66,77,74],[61,67,77,75],[62,10,78,16],[63,10,80,16],[64,6,81,8],[65,6,83,8],[65,13,83,15],[66,8,84,12,"type"],[66,12,84,16],[66,14,84,18],[66,22,84,26],[67,8,85,12,"loc"],[67,11,85,15],[67,13,85,17],[67,17,85,21],[67,18,85,22,"getLocation"],[67,29,85,33],[67,30,85,34,"start"],[67,35,85,39],[67,37,85,41],[67,41,85,45],[67,42,85,46,"scanner"],[67,49,85,53],[67,50,85,54,"tokenStart"],[67,60,85,64],[67,61,85,65],[68,8,86,12,"name"],[68,12,86,16],[68,14,86,18,"name"],[68,18,86,22],[69,8,87,12,"prelude"],[69,15,87,19],[69,17,87,21,"prelude"],[69,24,87,28],[70,8,88,12,"block"],[70,13,88,17],[70,15,88,19,"block"],[71,6,89,8],[71,7,89,9],[72,4,90,4],[72,5,90,5],[73,4,91,4,"generate"],[73,12,91,12],[73,14,91,14],[73,23,91,4,"generate"],[73,31,91,12,"generate"],[73,32,91,23,"node"],[73,36,91,27],[73,38,91,29],[74,6,92,8],[74,10,92,12],[74,11,92,13,"chunk"],[74,16,92,18],[74,17,92,19],[74,20,92,22],[74,21,92,23],[75,6,93,8],[75,10,93,12],[75,11,93,13,"chunk"],[75,16,93,18],[75,17,93,19,"node"],[75,21,93,23],[75,22,93,24,"name"],[75,26,93,28],[75,27,93,29],[76,6,95,8],[76,10,95,12,"node"],[76,14,95,16],[76,15,95,17,"prelude"],[76,22,95,24],[76,27,95,29],[76,31,95,33],[76,33,95,35],[77,8,96,12],[77,12,96,16],[77,13,96,17,"chunk"],[77,18,96,22],[77,19,96,23],[77,22,96,26],[77,23,96,27],[78,8,97,12],[78,12,97,16],[78,13,97,17,"node"],[78,17,97,21],[78,18,97,22,"node"],[78,22,97,26],[78,23,97,27,"prelude"],[78,30,97,34],[78,31,97,35],[79,6,98,8],[80,6,100,8],[80,10,100,12,"node"],[80,14,100,16],[80,15,100,17,"block"],[80,20,100,22],[80,22,100,24],[81,8,101,12],[81,12,101,16],[81,13,101,17,"node"],[81,17,101,21],[81,18,101,22,"node"],[81,22,101,26],[81,23,101,27,"block"],[81,28,101,32],[81,29,101,33],[82,6,102,8],[82,7,102,9],[82,13,102,15],[83,8,103,12],[83,12,103,16],[83,13,103,17,"chunk"],[83,18,103,22],[83,19,103,23],[83,22,103,26],[83,23,103,27],[84,6,104,8],[85,4,105,4],[85,5,105,5],[86,4,106,4,"walkContext"],[86,15,106,15],[86,17,106,17],[87,2,107,0],[87,3,107,1],[88,0,107,2],[88,3]],"functionMap":{"names":["<global>","consumeRaw","isDeclarationBlockAtrule","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACQ;CDE;AEE;CFa;WGS;KHuD;cIC;KJc"}},"type":"js/module"}]}