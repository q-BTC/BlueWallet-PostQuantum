{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1066,"column":0,"index":33362}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1066,"column":0,"index":33362}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1066,"column":0,"index":33362}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}},{"start":{"line":14,"column":18,"index":532},"end":{"line":14,"column":38,"index":552}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8=","isOptional":false}},{"name":"./transaction","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}},{"start":{"line":12,"column":22,"index":454},"end":{"line":12,"column":46,"index":478}}],"key":"QyHAamlaDdme9J9SOOQ5bKZGvis="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":294},"end":{"line":8,"column":38,"index":315}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}},{"start":{"line":13,"column":14,"index":494},"end":{"line":13,"column":32,"index":512}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./bufferutils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":22,"index":138},"end":{"line":4,"column":46,"index":162}}],"key":"8h+4nPdiw4lgWqmpJE4tN3Ks+fM="}},{"name":"./address","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":37,"index":114}}],"key":"GT9ovCpEVJfvfL3l5/wI3+rX9eo="}},{"name":"./classify","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":181},"end":{"line":5,"column":38,"index":202}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":5,"column":17,"index":181},"end":{"line":5,"column":38,"index":202}},{"start":{"line":5,"column":17,"index":181},"end":{"line":5,"column":38,"index":202}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":5,"column":17,"index":181},"end":{"line":5,"column":38,"index":202}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":5,"column":17,"index":181},"end":{"line":5,"column":38,"index":202}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":5,"column":17,"index":181},"end":{"line":5,"column":38,"index":202}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}},{"start":{"line":15,"column":21,"index":575},"end":{"line":15,"column":35,"index":589}}],"key":"rj+xVXwwaXaReQKyvFd5VfAnihI="}},{"name":"./payments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}},{"start":{"line":9,"column":17,"index":334},"end":{"line":9,"column":38,"index":355}}],"key":"jFG+uchKeOlOOhe0V9dHvbyfUWQ="}},{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}},{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}},{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}},{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}},{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}},{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}},{"start":{"line":11,"column":17,"index":411},"end":{"line":11,"column":36,"index":430}},{"start":{"line":10,"column":16,"index":373},"end":{"line":10,"column":35,"index":392}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}},{"name":"./ecpair","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":256},"end":{"line":7,"column":34,"index":275}}],"key":"gBmfZquSE9Xxa5HPpEFCKKFZvzw="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":16,"index":220},"end":{"line":6,"column":35,"index":239}},{"start":{"line":6,"column":16,"index":220},"end":{"line":6,"column":35,"index":239}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var PREVOUT_TYPES = new Set([\n  // Raw\n  'p2pkh', 'p2pk', 'p2wpkh', 'p2ms',\n  // P2SH wrapped\n  'p2sh-p2pkh', 'p2sh-p2pk', 'p2sh-p2wpkh', 'p2sh-p2ms',\n  // P2WSH wrapped\n  'p2wsh-p2pkh', 'p2wsh-p2pk', 'p2wsh-p2ms',\n  // P2SH-P2WSH wrapper\n  'p2sh-p2wsh-p2pkh', 'p2sh-p2wsh-p2pk', 'p2sh-p2wsh-p2ms']);\n  function tfMessage(type, value, message) {\n    try {\n      _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(type, value);\n    } catch (err) {\n      throw new Error(message);\n    }\n  }\n  function txIsString(tx) {\n    return typeof tx === 'string' || tx instanceof String;\n  }\n  function txIsTransaction(tx) {\n    return tx instanceof _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction;\n  }\n  var TransactionBuilder = /*#__PURE__*/function () {\n    // WARNING: maximumFeeRate is __NOT__ to be relied on,\n    //          it's just another potential safety mechanism (safety in-depth)\n    function TransactionBuilder() {\n      var network = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _$$_REQUIRE(_dependencyMap[5], \"./networks\").bitcoin;\n      var maximumFeeRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2500;\n      _classCallCheck(this, TransactionBuilder);\n      this.network = network;\n      this.maximumFeeRate = maximumFeeRate;\n      this.__PREV_TX_SET = {};\n      this.__INPUTS = [];\n      this.__TX = new (_$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction)();\n      this.__TX.version = 2;\n      this.__USE_LOW_R = false;\n      console.warn('Deprecation Warning: TransactionBuilder will be removed in the future. ' + '(v6.x.x or later) Please use the Psbt class instead. Examples of usage ' + 'are available in the transactions-psbt.js integration test file on our ' + 'Github. A high level explanation is available in the psbt.ts and psbt.js ' + 'files as well.');\n    }\n    return _createClass(TransactionBuilder, [{\n      key: \"setLowR\",\n      value: function setLowR(setting) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").maybe(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Boolean), setting);\n        if (setting === undefined) {\n          setting = true;\n        }\n        this.__USE_LOW_R = setting;\n        return setting;\n      }\n    }, {\n      key: \"setLockTime\",\n      value: function setLockTime(locktime) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[6], \"./types\").UInt32, locktime);\n        // if any signatures exist, throw\n        if (this.__INPUTS.some(function (input) {\n          if (!input.signatures) return false;\n          return input.signatures.some(function (s) {\n            return s !== undefined;\n          });\n        })) {\n          throw new Error('No, this would invalidate signatures');\n        }\n        this.__TX.locktime = locktime;\n      }\n    }, {\n      key: \"setVersion\",\n      value: function setVersion(version) {\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[6], \"./types\").UInt32, version);\n        // XXX: this might eventually become more complex depending on what the versions represent\n        this.__TX.version = version;\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(txHash, vout, sequence, prevOutScript) {\n        if (!this.__canModifyInputs()) {\n          throw new Error('No, this would invalidate signatures');\n        }\n        var value;\n        // is it a hex string?\n        if (txIsString(txHash)) {\n          // transaction hashs's are displayed in reverse order, un-reverse it\n          txHash = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils\").reverseBuffer(Buffer.from(txHash, 'hex'));\n          // is it a Transaction object?\n        } else if (txIsTransaction(txHash)) {\n          var txOut = txHash.outs[vout];\n          prevOutScript = txOut.script;\n          value = txOut.value;\n          txHash = txHash.getHash(false);\n        }\n        return this.__addInputUnsafe(txHash, vout, {\n          sequence: sequence,\n          prevOutScript: prevOutScript,\n          value: value\n        });\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(scriptPubKey, value) {\n        if (!this.__canModifyOutputs()) {\n          throw new Error('No, this would invalidate signatures');\n        }\n        // Attempt to get a script if it's a base58 or bech32 address string\n        if (typeof scriptPubKey === 'string') {\n          scriptPubKey = _$$_REQUIRE(_dependencyMap[8], \"./address\").toOutputScript(scriptPubKey, this.network);\n        }\n        return this.__TX.addOutput(scriptPubKey, value);\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        return this.__build(false);\n      }\n    }, {\n      key: \"buildIncomplete\",\n      value: function buildIncomplete() {\n        return this.__build(true);\n      }\n    }, {\n      key: \"sign\",\n      value: function sign(signParams, keyPair, redeemScript, hashType, witnessValue, witnessScript) {\n        trySign(getSigningData(this.network, this.__INPUTS, this.__needsOutputs.bind(this), this.__TX, signParams, keyPair, redeemScript, hashType, witnessValue, witnessScript, this.__USE_LOW_R));\n      }\n    }, {\n      key: \"__addInputUnsafe\",\n      value: function __addInputUnsafe(txHash, vout, options) {\n        if (_$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.isCoinbaseHash(txHash)) {\n          throw new Error('coinbase inputs not supported');\n        }\n        var prevTxOut = txHash.toString('hex') + ':' + vout;\n        if (this.__PREV_TX_SET[prevTxOut] !== undefined) throw new Error('Duplicate TxOut: ' + prevTxOut);\n        var input = {};\n        // derive what we can from the scriptSig\n        if (options.script !== undefined) {\n          input = expandInput(options.script, options.witness || []);\n        }\n        // if an input value was given, retain it\n        if (options.value !== undefined) {\n          input.value = options.value;\n        }\n        // derive what we can from the previous transactions output script\n        if (!input.prevOutScript && options.prevOutScript) {\n          var prevOutType;\n          if (!input.pubkeys && !input.signatures) {\n            var expanded = expandOutput(options.prevOutScript);\n            if (expanded.pubkeys) {\n              input.pubkeys = expanded.pubkeys;\n              input.signatures = expanded.signatures;\n            }\n            prevOutType = expanded.type;\n          }\n          input.prevOutScript = options.prevOutScript;\n          input.prevOutType = prevOutType || _$$_REQUIRE(_dependencyMap[9], \"./classify\").output(options.prevOutScript);\n        }\n        var vin = this.__TX.addInput(txHash, vout, options.sequence, options.scriptSig);\n        this.__INPUTS[vin] = input;\n        this.__PREV_TX_SET[prevTxOut] = true;\n        return vin;\n      }\n    }, {\n      key: \"__build\",\n      value: function __build(allowIncomplete) {\n        if (!allowIncomplete) {\n          if (!this.__TX.ins.length) throw new Error('Transaction has no inputs');\n          if (!this.__TX.outs.length) throw new Error('Transaction has no outputs');\n        }\n        var tx = this.__TX.clone();\n        // create script signatures from inputs\n        this.__INPUTS.forEach(function (input, i) {\n          if (!input.prevOutType && !allowIncomplete) throw new Error('Transaction is not complete');\n          var result = build(input.prevOutType, input, allowIncomplete);\n          if (!result) {\n            if (!allowIncomplete && input.prevOutType === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.NONSTANDARD) throw new Error('Unknown input type');\n            if (!allowIncomplete) throw new Error('Not enough information');\n            return;\n          }\n          tx.setInputScript(i, result.input);\n          tx.setWitness(i, result.witness);\n        });\n        if (!allowIncomplete) {\n          // do not rely on this, its merely a last resort\n          if (this.__overMaximumFees(tx.virtualSize())) {\n            throw new Error('Transaction has absurd fees');\n          }\n        }\n        return tx;\n      }\n    }, {\n      key: \"__canModifyInputs\",\n      value: function __canModifyInputs() {\n        return this.__INPUTS.every(function (input) {\n          if (!input.signatures) return true;\n          return input.signatures.every(function (signature) {\n            if (!signature) return true;\n            var hashType = signatureHashType(signature);\n            // if SIGHASH_ANYONECANPAY is set, signatures would not\n            // be invalidated by more inputs\n            return (hashType & _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.SIGHASH_ANYONECANPAY) !== 0;\n          });\n        });\n      }\n    }, {\n      key: \"__needsOutputs\",\n      value: function __needsOutputs(signingHashType) {\n        if (signingHashType === _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.SIGHASH_ALL) {\n          return this.__TX.outs.length === 0;\n        }\n        // if inputs are being signed with SIGHASH_NONE, we don't strictly need outputs\n        // .build() will fail, but .buildIncomplete() is OK\n        return this.__TX.outs.length === 0 && this.__INPUTS.some(function (input) {\n          if (!input.signatures) return false;\n          return input.signatures.some(function (signature) {\n            if (!signature) return false; // no signature, no issue\n            var hashType = signatureHashType(signature);\n            if (hashType & _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.SIGHASH_NONE) return false; // SIGHASH_NONE doesn't care about outputs\n            return true; // SIGHASH_* does care\n          });\n        });\n      }\n    }, {\n      key: \"__canModifyOutputs\",\n      value: function __canModifyOutputs() {\n        var nInputs = this.__TX.ins.length;\n        var nOutputs = this.__TX.outs.length;\n        return this.__INPUTS.every(function (input) {\n          if (input.signatures === undefined) return true;\n          return input.signatures.every(function (signature) {\n            if (!signature) return true;\n            var hashType = signatureHashType(signature);\n            var hashTypeMod = hashType & 0x1f;\n            if (hashTypeMod === _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.SIGHASH_NONE) return true;\n            if (hashTypeMod === _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.SIGHASH_SINGLE) {\n              // if SIGHASH_SINGLE is set, and nInputs > nOutputs\n              // some signatures would be invalidated by the addition\n              // of more outputs\n              return nInputs <= nOutputs;\n            }\n            return false;\n          });\n        });\n      }\n    }, {\n      key: \"__overMaximumFees\",\n      value: function __overMaximumFees(bytes) {\n        // not all inputs will have .value defined\n        var incoming = this.__INPUTS.reduce(function (a, x) {\n          return a + (x.value >>> 0);\n        }, 0);\n        // but all outputs do, and if we have any input value\n        // we can immediately determine if the outputs are too small\n        var outgoing = this.__TX.outs.reduce(function (a, x) {\n          return a + x.value;\n        }, 0);\n        var fee = incoming - outgoing;\n        var feeRate = fee / bytes;\n        return feeRate > this.maximumFeeRate;\n      }\n    }], [{\n      key: \"fromTransaction\",\n      value: function fromTransaction(transaction, network) {\n        var txb = new TransactionBuilder(network);\n        // Copy transaction fields\n        txb.setVersion(transaction.version);\n        txb.setLockTime(transaction.locktime);\n        // Copy outputs (done first to avoid signature invalidation)\n        transaction.outs.forEach(function (txOut) {\n          txb.addOutput(txOut.script, txOut.value);\n        });\n        // Copy inputs\n        transaction.ins.forEach(function (txIn) {\n          txb.__addInputUnsafe(txIn.hash, txIn.index, {\n            sequence: txIn.sequence,\n            script: txIn.script,\n            witness: txIn.witness\n          });\n        });\n        // fix some things not possible through the public API\n        txb.__INPUTS.forEach(function (input, i) {\n          fixMultisigOrder(input, transaction, i);\n        });\n        return txb;\n      }\n    }]);\n  }();\n  exports.TransactionBuilder = TransactionBuilder;\n  function expandInput(scriptSig, witnessStack, type, scriptPubKey) {\n    if (scriptSig.length === 0 && witnessStack.length === 0) return {};\n    if (!type) {\n      var ssType = _$$_REQUIRE(_dependencyMap[9], \"./classify\").input(scriptSig, true);\n      var wsType = _$$_REQUIRE(_dependencyMap[9], \"./classify\").witness(witnessStack, true);\n      if (ssType === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.NONSTANDARD) ssType = undefined;\n      if (wsType === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.NONSTANDARD) wsType = undefined;\n      type = ssType || wsType;\n    }\n    switch (type) {\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH:\n        {\n          var _payments$p2wpkh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wpkh({\n              witness: witnessStack\n            }),\n            output = _payments$p2wpkh.output,\n            pubkey = _payments$p2wpkh.pubkey,\n            signature = _payments$p2wpkh.signature;\n          return {\n            prevOutScript: output,\n            prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH,\n            pubkeys: [pubkey],\n            signatures: [signature]\n          };\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PKH:\n        {\n          var _payments$p2pkh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pkh({\n              input: scriptSig\n            }),\n            _output = _payments$p2pkh.output,\n            _pubkey = _payments$p2pkh.pubkey,\n            _signature = _payments$p2pkh.signature;\n          return {\n            prevOutScript: _output,\n            prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PKH,\n            pubkeys: [_pubkey],\n            signatures: [_signature]\n          };\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PK:\n        {\n          var _payments$p2pk = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pk({\n              input: scriptSig\n            }),\n            _signature2 = _payments$p2pk.signature;\n          return {\n            prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PK,\n            pubkeys: [undefined],\n            signatures: [_signature2]\n          };\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2MS:\n        {\n          var _payments$p2ms = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2ms({\n              input: scriptSig,\n              output: scriptPubKey\n            }, {\n              allowIncomplete: true\n            }),\n            m = _payments$p2ms.m,\n            pubkeys = _payments$p2ms.pubkeys,\n            signatures = _payments$p2ms.signatures;\n          return {\n            prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2MS,\n            pubkeys: pubkeys,\n            signatures: signatures,\n            maxSignatures: m\n          };\n        }\n    }\n    if (type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2SH) {\n      var _payments$p2sh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2sh({\n          input: scriptSig,\n          witness: witnessStack\n        }),\n        _output2 = _payments$p2sh.output,\n        redeem = _payments$p2sh.redeem;\n      var outputType = _$$_REQUIRE(_dependencyMap[9], \"./classify\").output(redeem.output);\n      var expanded = expandInput(redeem.input, redeem.witness, outputType, redeem.output);\n      if (!expanded.prevOutType) return {};\n      return {\n        prevOutScript: _output2,\n        prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2SH,\n        redeemScript: redeem.output,\n        redeemScriptType: expanded.prevOutType,\n        witnessScript: expanded.witnessScript,\n        witnessScriptType: expanded.witnessScriptType,\n        pubkeys: expanded.pubkeys,\n        signatures: expanded.signatures\n      };\n    }\n    if (type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WSH) {\n      var _payments$p2wsh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wsh({\n          input: scriptSig,\n          witness: witnessStack\n        }),\n        _output3 = _payments$p2wsh.output,\n        _redeem = _payments$p2wsh.redeem;\n      var _outputType = _$$_REQUIRE(_dependencyMap[9], \"./classify\").output(_redeem.output);\n      var _expanded;\n      if (_outputType === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH) {\n        _expanded = expandInput(_redeem.input, _redeem.witness, _outputType);\n      } else {\n        _expanded = expandInput(_$$_REQUIRE(_dependencyMap[11], \"./script\").compile(_redeem.witness), [], _outputType, _redeem.output);\n      }\n      if (!_expanded.prevOutType) return {};\n      return {\n        prevOutScript: _output3,\n        prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WSH,\n        witnessScript: _redeem.output,\n        witnessScriptType: _expanded.prevOutType,\n        pubkeys: _expanded.pubkeys,\n        signatures: _expanded.signatures\n      };\n    }\n    return {\n      prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.NONSTANDARD,\n      prevOutScript: scriptSig\n    };\n  }\n  // could be done in expandInput, but requires the original Transaction for hashForSignature\n  function fixMultisigOrder(input, transaction, vin) {\n    if (input.redeemScriptType !== _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2MS || !input.redeemScript) return;\n    if (input.pubkeys.length === input.signatures.length) return;\n    var unmatched = input.signatures.concat();\n    input.signatures = input.pubkeys.map(function (pubKey) {\n      var keyPair = _$$_REQUIRE(_dependencyMap[12], \"./ecpair\").fromPublicKey(pubKey);\n      var match;\n      // check for a signature\n      unmatched.some(function (signature, i) {\n        // skip if undefined || OP_0\n        if (!signature) return false;\n        // TODO: avoid O(n) hashForSignature\n        var parsed = _$$_REQUIRE(_dependencyMap[11], \"./script\").signature.decode(signature);\n        var hash = transaction.hashForSignature(vin, input.redeemScript, parsed.hashType);\n        // skip if signature does not match pubKey\n        if (!keyPair.verify(hash, parsed.signature)) return false;\n        // remove matched signature from unmatched\n        unmatched[i] = undefined;\n        match = signature;\n        return true;\n      });\n      return match;\n    });\n  }\n  function expandOutput(script, ourPubKey) {\n    _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[6], \"./types\").Buffer, script);\n    var type = _$$_REQUIRE(_dependencyMap[9], \"./classify\").output(script);\n    switch (type) {\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PKH:\n        {\n          if (!ourPubKey) return {\n            type: type\n          };\n          // does our hash160(pubKey) match the output scripts?\n          var pkh1 = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pkh({\n            output: script\n          }).hash;\n          var pkh2 = _$$_REQUIRE(_dependencyMap[13], \"./crypto\").hash160(ourPubKey);\n          if (!pkh1.equals(pkh2)) return {\n            type: type\n          };\n          return {\n            type: type,\n            pubkeys: [ourPubKey],\n            signatures: [undefined]\n          };\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH:\n        {\n          if (!ourPubKey) return {\n            type: type\n          };\n          // does our hash160(pubKey) match the output scripts?\n          var wpkh1 = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wpkh({\n            output: script\n          }).hash;\n          var wpkh2 = _$$_REQUIRE(_dependencyMap[13], \"./crypto\").hash160(ourPubKey);\n          if (!wpkh1.equals(wpkh2)) return {\n            type: type\n          };\n          return {\n            type: type,\n            pubkeys: [ourPubKey],\n            signatures: [undefined]\n          };\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PK:\n        {\n          var p2pk = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pk({\n            output: script\n          });\n          return {\n            type: type,\n            pubkeys: [p2pk.pubkey],\n            signatures: [undefined]\n          };\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2MS:\n        {\n          var p2ms = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2ms({\n            output: script\n          });\n          return {\n            type: type,\n            pubkeys: p2ms.pubkeys,\n            signatures: p2ms.pubkeys.map(function () {\n              return undefined;\n            }),\n            maxSignatures: p2ms.m\n          };\n        }\n    }\n    return {\n      type: type\n    };\n  }\n  function prepareInput(input, ourPubKey, redeemScript, witnessScript) {\n    if (redeemScript && witnessScript) {\n      var p2wsh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wsh({\n        redeem: {\n          output: witnessScript\n        }\n      });\n      var p2wshAlt = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wsh({\n        output: redeemScript\n      });\n      var p2sh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2sh({\n        redeem: {\n          output: redeemScript\n        }\n      });\n      var p2shAlt = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2sh({\n        redeem: p2wsh\n      });\n      // enforces P2SH(P2WSH(...))\n      if (!p2wsh.hash.equals(p2wshAlt.hash)) throw new Error('Witness script inconsistent with prevOutScript');\n      if (!p2sh.hash.equals(p2shAlt.hash)) throw new Error('Redeem script inconsistent with prevOutScript');\n      var expanded = expandOutput(p2wsh.redeem.output, ourPubKey);\n      if (!expanded.pubkeys) throw new Error(expanded.type + ' not supported as witnessScript (' + _$$_REQUIRE(_dependencyMap[11], \"./script\").toASM(witnessScript) + ')');\n      if (input.signatures && input.signatures.some(function (x) {\n        return x !== undefined;\n      })) {\n        expanded.signatures = input.signatures;\n      }\n      var signScript = witnessScript;\n      if (expanded.type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH) throw new Error('P2SH(P2WSH(P2WPKH)) is a consensus failure');\n      return {\n        redeemScript: redeemScript,\n        redeemScriptType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WSH,\n        witnessScript: witnessScript,\n        witnessScriptType: expanded.type,\n        prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2SH,\n        prevOutScript: p2sh.output,\n        hasWitness: true,\n        signScript: signScript,\n        signType: expanded.type,\n        pubkeys: expanded.pubkeys,\n        signatures: expanded.signatures,\n        maxSignatures: expanded.maxSignatures\n      };\n    }\n    if (redeemScript) {\n      var _p2sh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2sh({\n        redeem: {\n          output: redeemScript\n        }\n      });\n      if (input.prevOutScript) {\n        var _p2shAlt;\n        try {\n          _p2shAlt = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2sh({\n            output: input.prevOutScript\n          });\n        } catch (e) {\n          throw new Error('PrevOutScript must be P2SH');\n        }\n        if (!_p2sh.hash.equals(_p2shAlt.hash)) throw new Error('Redeem script inconsistent with prevOutScript');\n      }\n      var _expanded2 = expandOutput(_p2sh.redeem.output, ourPubKey);\n      if (!_expanded2.pubkeys) throw new Error(_expanded2.type + ' not supported as redeemScript (' + _$$_REQUIRE(_dependencyMap[11], \"./script\").toASM(redeemScript) + ')');\n      if (input.signatures && input.signatures.some(function (x) {\n        return x !== undefined;\n      })) {\n        _expanded2.signatures = input.signatures;\n      }\n      var _signScript = redeemScript;\n      if (_expanded2.type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH) {\n        _signScript = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pkh({\n          pubkey: _expanded2.pubkeys[0]\n        }).output;\n      }\n      return {\n        redeemScript: redeemScript,\n        redeemScriptType: _expanded2.type,\n        prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2SH,\n        prevOutScript: _p2sh.output,\n        hasWitness: _expanded2.type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH,\n        signScript: _signScript,\n        signType: _expanded2.type,\n        pubkeys: _expanded2.pubkeys,\n        signatures: _expanded2.signatures,\n        maxSignatures: _expanded2.maxSignatures\n      };\n    }\n    if (witnessScript) {\n      var _p2wsh = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wsh({\n        redeem: {\n          output: witnessScript\n        }\n      });\n      if (input.prevOutScript) {\n        var _p2wshAlt = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wsh({\n          output: input.prevOutScript\n        });\n        if (!_p2wsh.hash.equals(_p2wshAlt.hash)) throw new Error('Witness script inconsistent with prevOutScript');\n      }\n      var _expanded3 = expandOutput(_p2wsh.redeem.output, ourPubKey);\n      if (!_expanded3.pubkeys) throw new Error(_expanded3.type + ' not supported as witnessScript (' + _$$_REQUIRE(_dependencyMap[11], \"./script\").toASM(witnessScript) + ')');\n      if (input.signatures && input.signatures.some(function (x) {\n        return x !== undefined;\n      })) {\n        _expanded3.signatures = input.signatures;\n      }\n      var _signScript2 = witnessScript;\n      if (_expanded3.type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH) throw new Error('P2WSH(P2WPKH) is a consensus failure');\n      return {\n        witnessScript: witnessScript,\n        witnessScriptType: _expanded3.type,\n        prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WSH,\n        prevOutScript: _p2wsh.output,\n        hasWitness: true,\n        signScript: _signScript2,\n        signType: _expanded3.type,\n        pubkeys: _expanded3.pubkeys,\n        signatures: _expanded3.signatures,\n        maxSignatures: _expanded3.maxSignatures\n      };\n    }\n    if (input.prevOutType && input.prevOutScript) {\n      // embedded scripts are not possible without extra information\n      if (input.prevOutType === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2SH) throw new Error('PrevOutScript is ' + input.prevOutType + ', requires redeemScript');\n      if (input.prevOutType === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WSH) throw new Error('PrevOutScript is ' + input.prevOutType + ', requires witnessScript');\n      if (!input.prevOutScript) throw new Error('PrevOutScript is missing');\n      var _expanded4 = expandOutput(input.prevOutScript, ourPubKey);\n      if (!_expanded4.pubkeys) throw new Error(_expanded4.type + ' not supported (' + _$$_REQUIRE(_dependencyMap[11], \"./script\").toASM(input.prevOutScript) + ')');\n      if (input.signatures && input.signatures.some(function (x) {\n        return x !== undefined;\n      })) {\n        _expanded4.signatures = input.signatures;\n      }\n      var _signScript3 = input.prevOutScript;\n      if (_expanded4.type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH) {\n        _signScript3 = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pkh({\n          pubkey: _expanded4.pubkeys[0]\n        }).output;\n      }\n      return {\n        prevOutType: _expanded4.type,\n        prevOutScript: input.prevOutScript,\n        hasWitness: _expanded4.type === _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH,\n        signScript: _signScript3,\n        signType: _expanded4.type,\n        pubkeys: _expanded4.pubkeys,\n        signatures: _expanded4.signatures,\n        maxSignatures: _expanded4.maxSignatures\n      };\n    }\n    var prevOutScript = _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pkh({\n      pubkey: ourPubKey\n    }).output;\n    return {\n      prevOutType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PKH,\n      prevOutScript: prevOutScript,\n      hasWitness: false,\n      signScript: prevOutScript,\n      signType: _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PKH,\n      pubkeys: [ourPubKey],\n      signatures: [undefined]\n    };\n  }\n  function build(type, input, allowIncomplete) {\n    var pubkeys = input.pubkeys || [];\n    var signatures = input.signatures || [];\n    switch (type) {\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PKH:\n        {\n          if (pubkeys.length === 0) break;\n          if (signatures.length === 0) break;\n          return _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pkh({\n            pubkey: pubkeys[0],\n            signature: signatures[0]\n          });\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WPKH:\n        {\n          if (pubkeys.length === 0) break;\n          if (signatures.length === 0) break;\n          return _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wpkh({\n            pubkey: pubkeys[0],\n            signature: signatures[0]\n          });\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2PK:\n        {\n          if (pubkeys.length === 0) break;\n          if (signatures.length === 0) break;\n          return _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2pk({\n            signature: signatures[0]\n          });\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2MS:\n        {\n          var m = input.maxSignatures;\n          if (allowIncomplete) {\n            signatures = signatures.map(function (x) {\n              return x || _$$_REQUIRE(_dependencyMap[11], \"./script\").OPS.OP_0;\n            });\n          } else {\n            signatures = signatures.filter(function (x) {\n              return x;\n            });\n          }\n          // if the transaction is not not complete (complete), or if signatures.length === m, validate\n          // otherwise, the number of OP_0's may be >= m, so don't validate (boo)\n          var validate = !allowIncomplete || m === signatures.length;\n          return _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2ms({\n            m: m,\n            pubkeys: pubkeys,\n            signatures: signatures\n          }, {\n            allowIncomplete: allowIncomplete,\n            validate: validate\n          });\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2SH:\n        {\n          var redeem = build(input.redeemScriptType, input, allowIncomplete);\n          if (!redeem) return;\n          return _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2sh({\n            redeem: {\n              output: redeem.output || input.redeemScript,\n              input: redeem.input,\n              witness: redeem.witness\n            }\n          });\n        }\n      case _$$_REQUIRE(_dependencyMap[9], \"./classify\").types.P2WSH:\n        {\n          var _redeem2 = build(input.witnessScriptType, input, allowIncomplete);\n          if (!_redeem2) return;\n          return _$$_REQUIRE(_dependencyMap[10], \"./payments\").p2wsh({\n            redeem: {\n              output: input.witnessScript,\n              input: _redeem2.input,\n              witness: _redeem2.witness\n            }\n          });\n        }\n    }\n  }\n  function canSign(input) {\n    return input.signScript !== undefined && input.signType !== undefined && input.pubkeys !== undefined && input.signatures !== undefined && input.signatures.length === input.pubkeys.length && input.pubkeys.length > 0 && (input.hasWitness === false || input.value !== undefined);\n  }\n  function signatureHashType(buffer) {\n    return buffer.readUInt8(buffer.length - 1);\n  }\n  function checkSignArgs(inputs, signParams) {\n    if (!PREVOUT_TYPES.has(signParams.prevOutScriptType)) {\n      throw new TypeError(`Unknown prevOutScriptType \"${signParams.prevOutScriptType}\"`);\n    }\n    tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Number, signParams.vin, `sign must include vin parameter as Number (input index)`);\n    tfMessage(_$$_REQUIRE(_dependencyMap[6], \"./types\").Signer, signParams.keyPair, `sign must include keyPair parameter as Signer interface`);\n    tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").maybe(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Number), signParams.hashType, `sign hashType parameter must be a number`);\n    var prevOutType = (inputs[signParams.vin] || []).prevOutType;\n    var posType = signParams.prevOutScriptType;\n    switch (posType) {\n      case 'p2pkh':\n        if (prevOutType && prevOutType !== 'pubkeyhash') {\n          throw new TypeError(`input #${signParams.vin} is not of type p2pkh: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessScript, `${posType} requires NO witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.redeemScript, `${posType} requires NO redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessValue, `${posType} requires NO witnessValue`);\n        break;\n      case 'p2pk':\n        if (prevOutType && prevOutType !== 'pubkey') {\n          throw new TypeError(`input #${signParams.vin} is not of type p2pk: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessScript, `${posType} requires NO witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.redeemScript, `${posType} requires NO redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessValue, `${posType} requires NO witnessValue`);\n        break;\n      case 'p2wpkh':\n        if (prevOutType && prevOutType !== 'witnesspubkeyhash') {\n          throw new TypeError(`input #${signParams.vin} is not of type p2wpkh: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessScript, `${posType} requires NO witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.redeemScript, `${posType} requires NO redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[6], \"./types\").Satoshi, signParams.witnessValue, `${posType} requires witnessValue`);\n        break;\n      case 'p2ms':\n        if (prevOutType && prevOutType !== 'multisig') {\n          throw new TypeError(`input #${signParams.vin} is not of type p2ms: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessScript, `${posType} requires NO witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.redeemScript, `${posType} requires NO redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessValue, `${posType} requires NO witnessValue`);\n        break;\n      case 'p2sh-p2wpkh':\n        if (prevOutType && prevOutType !== 'scripthash') {\n          throw new TypeError(`input #${signParams.vin} is not of type p2sh-p2wpkh: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessScript, `${posType} requires NO witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Buffer, signParams.redeemScript, `${posType} requires redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[6], \"./types\").Satoshi, signParams.witnessValue, `${posType} requires witnessValue`);\n        break;\n      case 'p2sh-p2ms':\n      case 'p2sh-p2pk':\n      case 'p2sh-p2pkh':\n        if (prevOutType && prevOutType !== 'scripthash') {\n          throw new TypeError(`input #${signParams.vin} is not of type ${posType}: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessScript, `${posType} requires NO witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Buffer, signParams.redeemScript, `${posType} requires redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.witnessValue, `${posType} requires NO witnessValue`);\n        break;\n      case 'p2wsh-p2ms':\n      case 'p2wsh-p2pk':\n      case 'p2wsh-p2pkh':\n        if (prevOutType && prevOutType !== 'witnessscripthash') {\n          throw new TypeError(`input #${signParams.vin} is not of type ${posType}: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Buffer, signParams.witnessScript, `${posType} requires witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").value(undefined), signParams.redeemScript, `${posType} requires NO redeemScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[6], \"./types\").Satoshi, signParams.witnessValue, `${posType} requires witnessValue`);\n        break;\n      case 'p2sh-p2wsh-p2ms':\n      case 'p2sh-p2wsh-p2pk':\n      case 'p2sh-p2wsh-p2pkh':\n        if (prevOutType && prevOutType !== 'scripthash') {\n          throw new TypeError(`input #${signParams.vin} is not of type ${posType}: ${prevOutType}`);\n        }\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Buffer, signParams.witnessScript, `${posType} requires witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[3], \"typeforce\").Buffer, signParams.redeemScript, `${posType} requires witnessScript`);\n        tfMessage(_$$_REQUIRE(_dependencyMap[6], \"./types\").Satoshi, signParams.witnessValue, `${posType} requires witnessScript`);\n        break;\n    }\n  }\n  function trySign(_ref) {\n    var input = _ref.input,\n      ourPubKey = _ref.ourPubKey,\n      keyPair = _ref.keyPair,\n      signatureHash = _ref.signatureHash,\n      hashType = _ref.hashType,\n      useLowR = _ref.useLowR;\n    // enforce in order signing of public keys\n    var signed = false;\n    for (var _ref2 of input.pubkeys.entries()) {\n      var _ref3 = _slicedToArray(_ref2, 2);\n      var i = _ref3[0];\n      var pubKey = _ref3[1];\n      if (!ourPubKey.equals(pubKey)) continue;\n      if (input.signatures[i]) throw new Error('Signature already exists');\n      // TODO: add tests\n      if (ourPubKey.length !== 33 && input.hasWitness) {\n        throw new Error('BIP143 rejects uncompressed public keys in P2WPKH or P2WSH');\n      }\n      var signature = keyPair.sign(signatureHash, useLowR);\n      input.signatures[i] = _$$_REQUIRE(_dependencyMap[11], \"./script\").signature.encode(signature, hashType);\n      signed = true;\n    }\n    if (!signed) throw new Error('Key pair cannot sign for this input');\n  }\n  function getSigningData(network, inputs, needsOutputs, tx, signParams, keyPair, redeemScript, hashType, witnessValue, witnessScript, useLowR) {\n    var vin;\n    if (typeof signParams === 'number') {\n      console.warn('DEPRECATED: TransactionBuilder sign method arguments ' + 'will change in v6, please use the TxbSignArg interface');\n      vin = signParams;\n    } else if (typeof signParams === 'object') {\n      checkSignArgs(inputs, signParams);\n      vin = signParams.vin;\n      keyPair = signParams.keyPair;\n      redeemScript = signParams.redeemScript;\n      hashType = signParams.hashType;\n      witnessValue = signParams.witnessValue;\n      witnessScript = signParams.witnessScript;\n    } else {\n      throw new TypeError('TransactionBuilder sign first arg must be TxbSignArg or number');\n    }\n    if (keyPair === undefined) {\n      throw new Error('sign requires keypair');\n    }\n    // TODO: remove keyPair.network matching in 4.0.0\n    if (keyPair.network && keyPair.network !== network) throw new TypeError('Inconsistent network');\n    if (!inputs[vin]) throw new Error('No input at index: ' + vin);\n    hashType = hashType || _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.SIGHASH_ALL;\n    if (needsOutputs(hashType)) throw new Error('Transaction needs outputs');\n    var input = inputs[vin];\n    // if redeemScript was previously provided, enforce consistency\n    if (input.redeemScript !== undefined && redeemScript && !input.redeemScript.equals(redeemScript)) {\n      throw new Error('Inconsistent redeemScript');\n    }\n    var ourPubKey = keyPair.publicKey || keyPair.getPublicKey && keyPair.getPublicKey();\n    if (!canSign(input)) {\n      if (witnessValue !== undefined) {\n        if (input.value !== undefined && input.value !== witnessValue) throw new Error('Input did not match witnessValue');\n        _$$_REQUIRE(_dependencyMap[3], \"typeforce\")(_$$_REQUIRE(_dependencyMap[6], \"./types\").Satoshi, witnessValue);\n        input.value = witnessValue;\n      }\n      if (!canSign(input)) {\n        var prepared = prepareInput(input, ourPubKey, redeemScript, witnessScript);\n        // updates inline\n        Object.assign(input, prepared);\n      }\n      if (!canSign(input)) throw Error(input.prevOutType + ' not supported');\n    }\n    // ready to sign\n    var signatureHash;\n    if (input.hasWitness) {\n      signatureHash = tx.hashForWitnessV0(vin, input.signScript, input.value, hashType);\n    } else {\n      signatureHash = tx.hashForSignature(vin, input.signScript, hashType);\n    }\n    return {\n      input: input,\n      ourPubKey: ourPubKey,\n      keyPair: keyPair,\n      signatureHash: signatureHash,\n      hashType: hashType,\n      useLowR: !!useLowR\n    };\n  }\n});","lineCount":927,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"_$$_REQUIRE"],[5,35,1,13],[5,36,1,13,"_dependencyMap"],[5,50,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"_$$_REQUIRE"],[6,32,1,13],[6,33,1,13,"_dependencyMap"],[6,47,1,13],[7,2,2,0,"Object"],[7,8,2,6],[7,9,2,7,"defineProperty"],[7,23,2,21],[7,24,2,22,"exports"],[7,31,2,29],[7,33,2,31],[7,45,2,43],[7,47,2,45],[8,4,2,47,"value"],[8,9,2,52],[8,11,2,54],[9,2,2,59],[9,3,2,60],[9,4,2,61],[10,2,16,0],[10,6,16,6,"PREVOUT_TYPES"],[10,19,16,19],[10,22,16,22],[10,26,16,26,"Set"],[10,29,16,29],[10,30,16,30],[11,2,17,2],[12,2,18,2],[12,9,18,9],[12,11,19,2],[12,17,19,8],[12,19,20,2],[12,27,20,10],[12,29,21,2],[12,35,21,8],[13,2,22,2],[14,2,23,2],[14,14,23,14],[14,16,24,2],[14,27,24,13],[14,29,25,2],[14,42,25,15],[14,44,26,2],[14,55,26,13],[15,2,27,2],[16,2,28,2],[16,15,28,15],[16,17,29,2],[16,29,29,14],[16,31,30,2],[16,43,30,14],[17,2,31,2],[18,2,32,2],[18,20,32,20],[18,22,33,2],[18,39,33,19],[18,41,34,2],[18,58,34,19],[18,59,35,1],[18,60,35,2],[19,2,36,0],[19,11,36,9,"tfMessage"],[19,20,36,18,"tfMessage"],[19,21,36,19,"type"],[19,25,36,23],[19,27,36,25,"value"],[19,32,36,30],[19,34,36,32,"message"],[19,41,36,39],[19,43,36,41],[20,4,37,2],[20,8,37,6],[21,6,38,4,"_$$_REQUIRE"],[21,17,38,4],[21,18,38,4,"_dependencyMap"],[21,32,38,4],[21,50,38,14,"type"],[21,54,38,18],[21,56,38,20,"value"],[21,61,38,25],[21,62,38,26],[22,4,39,2],[22,5,39,3],[22,6,39,4],[22,13,39,11,"err"],[22,16,39,14],[22,18,39,16],[23,6,40,4],[23,12,40,10],[23,16,40,14,"Error"],[23,21,40,19],[23,22,40,20,"message"],[23,29,40,27],[23,30,40,28],[24,4,41,2],[25,2,42,0],[26,2,43,0],[26,11,43,9,"txIsString"],[26,21,43,19,"txIsString"],[26,22,43,20,"tx"],[26,24,43,22],[26,26,43,24],[27,4,44,2],[27,11,44,9],[27,18,44,16,"tx"],[27,20,44,18],[27,25,44,23],[27,33,44,31],[27,37,44,35,"tx"],[27,39,44,37],[27,51,44,49,"String"],[27,57,44,55],[28,2,45,0],[29,2,46,0],[29,11,46,9,"txIsTransaction"],[29,26,46,24,"txIsTransaction"],[29,27,46,25,"tx"],[29,29,46,27],[29,31,46,29],[30,4,47,2],[30,11,47,9,"tx"],[30,13,47,11],[30,25,47,23,"_$$_REQUIRE"],[30,36,47,23],[30,37,47,23,"_dependencyMap"],[30,51,47,23],[30,73,47,37,"Transaction"],[30,84,47,48],[31,2,48,0],[32,2,48,1],[32,6,49,6,"TransactionBuilder"],[32,24,49,24],[33,4,50,2],[34,4,51,2],[35,4,52,2],[35,13,52,2,"TransactionBuilder"],[35,32,52,2],[35,34,52,65],[36,6,52,65],[36,10,52,14,"network"],[36,17,52,21],[36,20,52,21,"arguments"],[36,29,52,21],[36,30,52,21,"length"],[36,36,52,21],[36,44,52,21,"arguments"],[36,53,52,21],[36,61,52,21,"undefined"],[36,70,52,21],[36,73,52,21,"arguments"],[36,82,52,21],[36,88,52,24,"_$$_REQUIRE"],[36,99,52,24],[36,100,52,24,"_dependencyMap"],[36,114,52,24],[36,133,52,33,"bitcoin"],[36,140,52,40],[37,6,52,40],[37,10,52,42,"maximumFeeRate"],[37,24,52,56],[37,27,52,56,"arguments"],[37,36,52,56],[37,37,52,56,"length"],[37,43,52,56],[37,51,52,56,"arguments"],[37,60,52,56],[37,68,52,56,"undefined"],[37,77,52,56],[37,80,52,56,"arguments"],[37,89,52,56],[37,95,52,59],[37,99,52,63],[38,6,52,63,"_classCallCheck"],[38,21,52,63],[38,28,52,63,"TransactionBuilder"],[38,46,52,63],[39,6,53,4],[39,10,53,8],[39,11,53,9,"network"],[39,18,53,16],[39,21,53,19,"network"],[39,28,53,26],[40,6,54,4],[40,10,54,8],[40,11,54,9,"maximumFeeRate"],[40,25,54,23],[40,28,54,26,"maximumFeeRate"],[40,42,54,40],[41,6,55,4],[41,10,55,8],[41,11,55,9,"__PREV_TX_SET"],[41,24,55,22],[41,27,55,25],[41,28,55,26],[41,29,55,27],[42,6,56,4],[42,10,56,8],[42,11,56,9,"__INPUTS"],[42,19,56,17],[42,22,56,20],[42,24,56,22],[43,6,57,4],[43,10,57,8],[43,11,57,9,"__TX"],[43,15,57,13],[43,18,57,16],[43,23,57,20,"_$$_REQUIRE"],[43,34,57,20],[43,35,57,20,"_dependencyMap"],[43,49,57,20],[43,71,57,34,"Transaction"],[43,82,57,45],[43,84,57,46],[43,85,57,47],[44,6,58,4],[44,10,58,8],[44,11,58,9,"__TX"],[44,15,58,13],[44,16,58,14,"version"],[44,23,58,21],[44,26,58,24],[44,27,58,25],[45,6,59,4],[45,10,59,8],[45,11,59,9,"__USE_LOW_R"],[45,22,59,20],[45,25,59,23],[45,30,59,28],[46,6,60,4,"console"],[46,13,60,11],[46,14,60,12,"warn"],[46,18,60,16],[46,19,61,6],[46,92,61,79],[46,95,62,8],[46,168,62,81],[46,171,63,8],[46,244,63,81],[46,247,64,8],[46,322,64,83],[46,325,65,8],[46,341,66,4],[46,342,66,5],[47,4,67,2],[48,4,67,3],[48,11,67,3,"_createClass"],[48,23,67,3],[48,24,67,3,"TransactionBuilder"],[48,42,67,3],[49,6,67,3,"key"],[49,9,67,3],[50,6,67,3,"value"],[50,11,67,3],[50,13,91,2],[50,22,91,2,"setLowR"],[50,29,91,9,"setLowR"],[50,30,91,10,"setting"],[50,37,91,17],[50,39,91,19],[51,8,92,4,"_$$_REQUIRE"],[51,19,92,4],[51,20,92,4,"_dependencyMap"],[51,34,92,4],[51,52,92,14,"_$$_REQUIRE"],[51,63,92,14],[51,64,92,14,"_dependencyMap"],[51,78,92,14],[51,96,92,24,"maybe"],[51,101,92,29],[51,102,92,30,"_$$_REQUIRE"],[51,113,92,30],[51,114,92,30,"_dependencyMap"],[51,128,92,30],[51,146,92,40,"Boolean"],[51,153,92,47],[51,154,92,48],[51,156,92,50,"setting"],[51,163,92,57],[51,164,92,58],[52,8,93,4],[52,12,93,8,"setting"],[52,19,93,15],[52,24,93,20,"undefined"],[52,33,93,29],[52,35,93,31],[53,10,94,6,"setting"],[53,17,94,13],[53,20,94,16],[53,24,94,20],[54,8,95,4],[55,8,96,4],[55,12,96,8],[55,13,96,9,"__USE_LOW_R"],[55,24,96,20],[55,27,96,23,"setting"],[55,34,96,30],[56,8,97,4],[56,15,97,11,"setting"],[56,22,97,18],[57,6,98,2],[58,4,98,3],[59,6,98,3,"key"],[59,9,98,3],[60,6,98,3,"value"],[60,11,98,3],[60,13,99,2],[60,22,99,2,"setLockTime"],[60,33,99,13,"setLockTime"],[60,34,99,14,"locktime"],[60,42,99,22],[60,44,99,24],[61,8,100,4,"_$$_REQUIRE"],[61,19,100,4],[61,20,100,4,"_dependencyMap"],[61,34,100,4],[61,52,100,14,"_$$_REQUIRE"],[61,63,100,14],[61,64,100,14,"_dependencyMap"],[61,78,100,14],[61,94,100,20,"UInt32"],[61,100,100,26],[61,102,100,28,"locktime"],[61,110,100,36],[61,111,100,37],[62,8,101,4],[63,8,102,4],[63,12,103,6],[63,16,103,10],[63,17,103,11,"__INPUTS"],[63,25,103,19],[63,26,103,20,"some"],[63,30,103,24],[63,31,103,25],[63,41,103,25,"input"],[63,46,103,30],[63,48,103,34],[64,10,104,8],[64,14,104,12],[64,15,104,13,"input"],[64,20,104,18],[64,21,104,19,"signatures"],[64,31,104,29],[64,33,104,31],[64,40,104,38],[64,45,104,43],[65,10,105,8],[65,17,105,15,"input"],[65,22,105,20],[65,23,105,21,"signatures"],[65,33,105,31],[65,34,105,32,"some"],[65,38,105,36],[65,39,105,37],[65,49,105,37,"s"],[65,50,105,38],[66,12,105,38],[66,19,105,42,"s"],[66,20,105,43],[66,25,105,48,"undefined"],[66,34,105,57],[67,10,105,57],[67,12,105,58],[68,8,106,6],[68,9,106,7],[68,10,106,8],[68,12,107,6],[69,10,108,6],[69,16,108,12],[69,20,108,16,"Error"],[69,25,108,21],[69,26,108,22],[69,64,108,60],[69,65,108,61],[70,8,109,4],[71,8,110,4],[71,12,110,8],[71,13,110,9,"__TX"],[71,17,110,13],[71,18,110,14,"locktime"],[71,26,110,22],[71,29,110,25,"locktime"],[71,37,110,33],[72,6,111,2],[73,4,111,3],[74,6,111,3,"key"],[74,9,111,3],[75,6,111,3,"value"],[75,11,111,3],[75,13,112,2],[75,22,112,2,"setVersion"],[75,32,112,12,"setVersion"],[75,33,112,13,"version"],[75,40,112,20],[75,42,112,22],[76,8,113,4,"_$$_REQUIRE"],[76,19,113,4],[76,20,113,4,"_dependencyMap"],[76,34,113,4],[76,52,113,14,"_$$_REQUIRE"],[76,63,113,14],[76,64,113,14,"_dependencyMap"],[76,78,113,14],[76,94,113,20,"UInt32"],[76,100,113,26],[76,102,113,28,"version"],[76,109,113,35],[76,110,113,36],[77,8,114,4],[78,8,115,4],[78,12,115,8],[78,13,115,9,"__TX"],[78,17,115,13],[78,18,115,14,"version"],[78,25,115,21],[78,28,115,24,"version"],[78,35,115,31],[79,6,116,2],[80,4,116,3],[81,6,116,3,"key"],[81,9,116,3],[82,6,116,3,"value"],[82,11,116,3],[82,13,117,2],[82,22,117,2,"addInput"],[82,30,117,10,"addInput"],[82,31,117,11,"txHash"],[82,37,117,17],[82,39,117,19,"vout"],[82,43,117,23],[82,45,117,25,"sequence"],[82,53,117,33],[82,55,117,35,"prevOutScript"],[82,68,117,48],[82,70,117,50],[83,8,118,4],[83,12,118,8],[83,13,118,9],[83,17,118,13],[83,18,118,14,"__canModifyInputs"],[83,35,118,31],[83,36,118,32],[83,37,118,33],[83,39,118,35],[84,10,119,6],[84,16,119,12],[84,20,119,16,"Error"],[84,25,119,21],[84,26,119,22],[84,64,119,60],[84,65,119,61],[85,8,120,4],[86,8,121,4],[86,12,121,8,"value"],[86,17,121,13],[87,8,122,4],[88,8,123,4],[88,12,123,8,"txIsString"],[88,22,123,18],[88,23,123,19,"txHash"],[88,29,123,25],[88,30,123,26],[88,32,123,28],[89,10,124,6],[90,10,125,6,"txHash"],[90,16,125,12],[90,19,125,15,"_$$_REQUIRE"],[90,30,125,15],[90,31,125,15,"_dependencyMap"],[90,45,125,15],[90,67,125,29,"reverseBuffer"],[90,80,125,42],[90,81,125,43,"Buffer"],[90,87,125,49],[90,88,125,50,"from"],[90,92,125,54],[90,93,125,55,"txHash"],[90,99,125,61],[90,101,125,63],[90,106,125,68],[90,107,125,69],[90,108,125,70],[91,10,126,6],[92,8,127,4],[92,9,127,5],[92,15,127,11],[92,19,127,15,"txIsTransaction"],[92,34,127,30],[92,35,127,31,"txHash"],[92,41,127,37],[92,42,127,38],[92,44,127,40],[93,10,128,6],[93,14,128,12,"txOut"],[93,19,128,17],[93,22,128,20,"txHash"],[93,28,128,26],[93,29,128,27,"outs"],[93,33,128,31],[93,34,128,32,"vout"],[93,38,128,36],[93,39,128,37],[94,10,129,6,"prevOutScript"],[94,23,129,19],[94,26,129,22,"txOut"],[94,31,129,27],[94,32,129,28,"script"],[94,38,129,34],[95,10,130,6,"value"],[95,15,130,11],[95,18,130,14,"txOut"],[95,23,130,19],[95,24,130,20,"value"],[95,29,130,25],[96,10,131,6,"txHash"],[96,16,131,12],[96,19,131,15,"txHash"],[96,25,131,21],[96,26,131,22,"getHash"],[96,33,131,29],[96,34,131,30],[96,39,131,35],[96,40,131,36],[97,8,132,4],[98,8,133,4],[98,15,133,11],[98,19,133,15],[98,20,133,16,"__addInputUnsafe"],[98,36,133,32],[98,37,133,33,"txHash"],[98,43,133,39],[98,45,133,41,"vout"],[98,49,133,45],[98,51,133,47],[99,10,134,6,"sequence"],[99,18,134,14],[99,20,134,6,"sequence"],[99,28,134,14],[100,10,135,6,"prevOutScript"],[100,23,135,19],[100,25,135,6,"prevOutScript"],[100,38,135,19],[101,10,136,6,"value"],[101,15,136,11],[101,17,136,6,"value"],[102,8,137,4],[102,9,137,5],[102,10,137,6],[103,6,138,2],[104,4,138,3],[105,6,138,3,"key"],[105,9,138,3],[106,6,138,3,"value"],[106,11,138,3],[106,13,139,2],[106,22,139,2,"addOutput"],[106,31,139,11,"addOutput"],[106,32,139,12,"scriptPubKey"],[106,44,139,24],[106,46,139,26,"value"],[106,51,139,31],[106,53,139,33],[107,8,140,4],[107,12,140,8],[107,13,140,9],[107,17,140,13],[107,18,140,14,"__canModifyOutputs"],[107,36,140,32],[107,37,140,33],[107,38,140,34],[107,40,140,36],[108,10,141,6],[108,16,141,12],[108,20,141,16,"Error"],[108,25,141,21],[108,26,141,22],[108,64,141,60],[108,65,141,61],[109,8,142,4],[110,8,143,4],[111,8,144,4],[111,12,144,8],[111,19,144,15,"scriptPubKey"],[111,31,144,27],[111,36,144,32],[111,44,144,40],[111,46,144,42],[112,10,145,6,"scriptPubKey"],[112,22,145,18],[112,25,145,21,"_$$_REQUIRE"],[112,36,145,21],[112,37,145,21,"_dependencyMap"],[112,51,145,21],[112,69,145,30,"toOutputScript"],[112,83,145,44],[112,84,145,45,"scriptPubKey"],[112,96,145,57],[112,98,145,59],[112,102,145,63],[112,103,145,64,"network"],[112,110,145,71],[112,111,145,72],[113,8,146,4],[114,8,147,4],[114,15,147,11],[114,19,147,15],[114,20,147,16,"__TX"],[114,24,147,20],[114,25,147,21,"addOutput"],[114,34,147,30],[114,35,147,31,"scriptPubKey"],[114,47,147,43],[114,49,147,45,"value"],[114,54,147,50],[114,55,147,51],[115,6,148,2],[116,4,148,3],[117,6,148,3,"key"],[117,9,148,3],[118,6,148,3,"value"],[118,11,148,3],[118,13,149,2],[118,22,149,2,"build"],[118,27,149,7,"build"],[118,28,149,7],[118,30,149,10],[119,8,150,4],[119,15,150,11],[119,19,150,15],[119,20,150,16,"__build"],[119,27,150,23],[119,28,150,24],[119,33,150,29],[119,34,150,30],[120,6,151,2],[121,4,151,3],[122,6,151,3,"key"],[122,9,151,3],[123,6,151,3,"value"],[123,11,151,3],[123,13,152,2],[123,22,152,2,"buildIncomplete"],[123,37,152,17,"buildIncomplete"],[123,38,152,17],[123,40,152,20],[124,8,153,4],[124,15,153,11],[124,19,153,15],[124,20,153,16,"__build"],[124,27,153,23],[124,28,153,24],[124,32,153,28],[124,33,153,29],[125,6,154,2],[126,4,154,3],[127,6,154,3,"key"],[127,9,154,3],[128,6,154,3,"value"],[128,11,154,3],[128,13,155,2],[128,22,155,2,"sign"],[128,26,155,6,"sign"],[128,27,156,4,"signParams"],[128,37,156,14],[128,39,157,4,"keyPair"],[128,46,157,11],[128,48,158,4,"redeemScript"],[128,60,158,16],[128,62,159,4,"hashType"],[128,70,159,12],[128,72,160,4,"witnessValue"],[128,84,160,16],[128,86,161,4,"witnessScript"],[128,99,161,17],[128,101,162,4],[129,8,163,4,"trySign"],[129,15,163,11],[129,16,164,6,"getSigningData"],[129,30,164,20],[129,31,165,8],[129,35,165,12],[129,36,165,13,"network"],[129,43,165,20],[129,45,166,8],[129,49,166,12],[129,50,166,13,"__INPUTS"],[129,58,166,21],[129,60,167,8],[129,64,167,12],[129,65,167,13,"__needsOutputs"],[129,79,167,27],[129,80,167,28,"bind"],[129,84,167,32],[129,85,167,33],[129,89,167,37],[129,90,167,38],[129,92,168,8],[129,96,168,12],[129,97,168,13,"__TX"],[129,101,168,17],[129,103,169,8,"signParams"],[129,113,169,18],[129,115,170,8,"keyPair"],[129,122,170,15],[129,124,171,8,"redeemScript"],[129,136,171,20],[129,138,172,8,"hashType"],[129,146,172,16],[129,148,173,8,"witnessValue"],[129,160,173,20],[129,162,174,8,"witnessScript"],[129,175,174,21],[129,177,175,8],[129,181,175,12],[129,182,175,13,"__USE_LOW_R"],[129,193,176,6],[129,194,177,4],[129,195,177,5],[130,6,178,2],[131,4,178,3],[132,6,178,3,"key"],[132,9,178,3],[133,6,178,3,"value"],[133,11,178,3],[133,13,179,2],[133,22,179,2,"__addInputUnsafe"],[133,38,179,18,"__addInputUnsafe"],[133,39,179,19,"txHash"],[133,45,179,25],[133,47,179,27,"vout"],[133,51,179,31],[133,53,179,33,"options"],[133,60,179,40],[133,62,179,42],[134,8,180,4],[134,12,180,8,"_$$_REQUIRE"],[134,23,180,8],[134,24,180,8,"_dependencyMap"],[134,38,180,8],[134,60,180,22,"Transaction"],[134,71,180,33],[134,72,180,34,"isCoinbaseHash"],[134,86,180,48],[134,87,180,49,"txHash"],[134,93,180,55],[134,94,180,56],[134,96,180,58],[135,10,181,6],[135,16,181,12],[135,20,181,16,"Error"],[135,25,181,21],[135,26,181,22],[135,57,181,53],[135,58,181,54],[136,8,182,4],[137,8,183,4],[137,12,183,10,"prevTxOut"],[137,21,183,19],[137,24,183,22,"txHash"],[137,30,183,28],[137,31,183,29,"toString"],[137,39,183,37],[137,40,183,38],[137,45,183,43],[137,46,183,44],[137,49,183,47],[137,52,183,50],[137,55,183,53,"vout"],[137,59,183,57],[138,8,184,4],[138,12,184,8],[138,16,184,12],[138,17,184,13,"__PREV_TX_SET"],[138,30,184,26],[138,31,184,27,"prevTxOut"],[138,40,184,36],[138,41,184,37],[138,46,184,42,"undefined"],[138,55,184,51],[138,57,185,6],[138,63,185,12],[138,67,185,16,"Error"],[138,72,185,21],[138,73,185,22],[138,92,185,41],[138,95,185,44,"prevTxOut"],[138,104,185,53],[138,105,185,54],[139,8,186,4],[139,12,186,8,"input"],[139,17,186,13],[139,20,186,16],[139,21,186,17],[139,22,186,18],[140,8,187,4],[141,8,188,4],[141,12,188,8,"options"],[141,19,188,15],[141,20,188,16,"script"],[141,26,188,22],[141,31,188,27,"undefined"],[141,40,188,36],[141,42,188,38],[142,10,189,6,"input"],[142,15,189,11],[142,18,189,14,"expandInput"],[142,29,189,25],[142,30,189,26,"options"],[142,37,189,33],[142,38,189,34,"script"],[142,44,189,40],[142,46,189,42,"options"],[142,53,189,49],[142,54,189,50,"witness"],[142,61,189,57],[142,65,189,61],[142,67,189,63],[142,68,189,64],[143,8,190,4],[144,8,191,4],[145,8,192,4],[145,12,192,8,"options"],[145,19,192,15],[145,20,192,16,"value"],[145,25,192,21],[145,30,192,26,"undefined"],[145,39,192,35],[145,41,192,37],[146,10,193,6,"input"],[146,15,193,11],[146,16,193,12,"value"],[146,21,193,17],[146,24,193,20,"options"],[146,31,193,27],[146,32,193,28,"value"],[146,37,193,33],[147,8,194,4],[148,8,195,4],[149,8,196,4],[149,12,196,8],[149,13,196,9,"input"],[149,18,196,14],[149,19,196,15,"prevOutScript"],[149,32,196,28],[149,36,196,32,"options"],[149,43,196,39],[149,44,196,40,"prevOutScript"],[149,57,196,53],[149,59,196,55],[150,10,197,6],[150,14,197,10,"prevOutType"],[150,25,197,21],[151,10,198,6],[151,14,198,10],[151,15,198,11,"input"],[151,20,198,16],[151,21,198,17,"pubkeys"],[151,28,198,24],[151,32,198,28],[151,33,198,29,"input"],[151,38,198,34],[151,39,198,35,"signatures"],[151,49,198,45],[151,51,198,47],[152,12,199,8],[152,16,199,14,"expanded"],[152,24,199,22],[152,27,199,25,"expandOutput"],[152,39,199,37],[152,40,199,38,"options"],[152,47,199,45],[152,48,199,46,"prevOutScript"],[152,61,199,59],[152,62,199,60],[153,12,200,8],[153,16,200,12,"expanded"],[153,24,200,20],[153,25,200,21,"pubkeys"],[153,32,200,28],[153,34,200,30],[154,14,201,10,"input"],[154,19,201,15],[154,20,201,16,"pubkeys"],[154,27,201,23],[154,30,201,26,"expanded"],[154,38,201,34],[154,39,201,35,"pubkeys"],[154,46,201,42],[155,14,202,10,"input"],[155,19,202,15],[155,20,202,16,"signatures"],[155,30,202,26],[155,33,202,29,"expanded"],[155,41,202,37],[155,42,202,38,"signatures"],[155,52,202,48],[156,12,203,8],[157,12,204,8,"prevOutType"],[157,23,204,19],[157,26,204,22,"expanded"],[157,34,204,30],[157,35,204,31,"type"],[157,39,204,35],[158,10,205,6],[159,10,206,6,"input"],[159,15,206,11],[159,16,206,12,"prevOutScript"],[159,29,206,25],[159,32,206,28,"options"],[159,39,206,35],[159,40,206,36,"prevOutScript"],[159,53,206,49],[160,10,207,6,"input"],[160,15,207,11],[160,16,207,12,"prevOutType"],[160,27,207,23],[160,30,207,26,"prevOutType"],[160,41,207,37],[160,45,207,41,"_$$_REQUIRE"],[160,56,207,41],[160,57,207,41,"_dependencyMap"],[160,71,207,41],[160,90,207,50,"output"],[160,96,207,56],[160,97,207,57,"options"],[160,104,207,64],[160,105,207,65,"prevOutScript"],[160,118,207,78],[160,119,207,79],[161,8,208,4],[162,8,209,4],[162,12,209,10,"vin"],[162,15,209,13],[162,18,209,16],[162,22,209,20],[162,23,209,21,"__TX"],[162,27,209,25],[162,28,209,26,"addInput"],[162,36,209,34],[162,37,210,6,"txHash"],[162,43,210,12],[162,45,211,6,"vout"],[162,49,211,10],[162,51,212,6,"options"],[162,58,212,13],[162,59,212,14,"sequence"],[162,67,212,22],[162,69,213,6,"options"],[162,76,213,13],[162,77,213,14,"scriptSig"],[162,86,214,4],[162,87,214,5],[163,8,215,4],[163,12,215,8],[163,13,215,9,"__INPUTS"],[163,21,215,17],[163,22,215,18,"vin"],[163,25,215,21],[163,26,215,22],[163,29,215,25,"input"],[163,34,215,30],[164,8,216,4],[164,12,216,8],[164,13,216,9,"__PREV_TX_SET"],[164,26,216,22],[164,27,216,23,"prevTxOut"],[164,36,216,32],[164,37,216,33],[164,40,216,36],[164,44,216,40],[165,8,217,4],[165,15,217,11,"vin"],[165,18,217,14],[166,6,218,2],[167,4,218,3],[168,6,218,3,"key"],[168,9,218,3],[169,6,218,3,"value"],[169,11,218,3],[169,13,219,2],[169,22,219,2,"__build"],[169,29,219,9,"__build"],[169,30,219,10,"allowIncomplete"],[169,45,219,25],[169,47,219,27],[170,8,220,4],[170,12,220,8],[170,13,220,9,"allowIncomplete"],[170,28,220,24],[170,30,220,26],[171,10,221,6],[171,14,221,10],[171,15,221,11],[171,19,221,15],[171,20,221,16,"__TX"],[171,24,221,20],[171,25,221,21,"ins"],[171,28,221,24],[171,29,221,25,"length"],[171,35,221,31],[171,37,221,33],[171,43,221,39],[171,47,221,43,"Error"],[171,52,221,48],[171,53,221,49],[171,80,221,76],[171,81,221,77],[172,10,222,6],[172,14,222,10],[172,15,222,11],[172,19,222,15],[172,20,222,16,"__TX"],[172,24,222,20],[172,25,222,21,"outs"],[172,29,222,25],[172,30,222,26,"length"],[172,36,222,32],[172,38,222,34],[172,44,222,40],[172,48,222,44,"Error"],[172,53,222,49],[172,54,222,50],[172,82,222,78],[172,83,222,79],[173,8,223,4],[174,8,224,4],[174,12,224,10,"tx"],[174,14,224,12],[174,17,224,15],[174,21,224,19],[174,22,224,20,"__TX"],[174,26,224,24],[174,27,224,25,"clone"],[174,32,224,30],[174,33,224,31],[174,34,224,32],[175,8,225,4],[176,8,226,4],[176,12,226,8],[176,13,226,9,"__INPUTS"],[176,21,226,17],[176,22,226,18,"forEach"],[176,29,226,25],[176,30,226,26],[176,40,226,27,"input"],[176,45,226,32],[176,47,226,34,"i"],[176,48,226,35],[176,50,226,40],[177,10,227,6],[177,14,227,10],[177,15,227,11,"input"],[177,20,227,16],[177,21,227,17,"prevOutType"],[177,32,227,28],[177,36,227,32],[177,37,227,33,"allowIncomplete"],[177,52,227,48],[177,54,228,8],[177,60,228,14],[177,64,228,18,"Error"],[177,69,228,23],[177,70,228,24],[177,99,228,53],[177,100,228,54],[178,10,229,6],[178,14,229,12,"result"],[178,20,229,18],[178,23,229,21,"build"],[178,28,229,26],[178,29,229,27,"input"],[178,34,229,32],[178,35,229,33,"prevOutType"],[178,46,229,44],[178,48,229,46,"input"],[178,53,229,51],[178,55,229,53,"allowIncomplete"],[178,70,229,68],[178,71,229,69],[179,10,230,6],[179,14,230,10],[179,15,230,11,"result"],[179,21,230,17],[179,23,230,19],[180,12,231,8],[180,16,231,12],[180,17,231,13,"allowIncomplete"],[180,32,231,28],[180,36,231,32,"input"],[180,41,231,37],[180,42,231,38,"prevOutType"],[180,53,231,49],[180,58,231,54,"_$$_REQUIRE"],[180,69,231,54],[180,70,231,54,"_dependencyMap"],[180,84,231,54],[180,103,231,54,"types"],[180,108,231,54],[180,109,231,67,"NONSTANDARD"],[180,120,231,78],[180,122,232,10],[180,128,232,16],[180,132,232,20,"Error"],[180,137,232,25],[180,138,232,26],[180,158,232,46],[180,159,232,47],[181,12,233,8],[181,16,233,12],[181,17,233,13,"allowIncomplete"],[181,32,233,28],[181,34,233,30],[181,40,233,36],[181,44,233,40,"Error"],[181,49,233,45],[181,50,233,46],[181,74,233,70],[181,75,233,71],[182,12,234,8],[183,10,235,6],[184,10,236,6,"tx"],[184,12,236,8],[184,13,236,9,"setInputScript"],[184,27,236,23],[184,28,236,24,"i"],[184,29,236,25],[184,31,236,27,"result"],[184,37,236,33],[184,38,236,34,"input"],[184,43,236,39],[184,44,236,40],[185,10,237,6,"tx"],[185,12,237,8],[185,13,237,9,"setWitness"],[185,23,237,19],[185,24,237,20,"i"],[185,25,237,21],[185,27,237,23,"result"],[185,33,237,29],[185,34,237,30,"witness"],[185,41,237,37],[185,42,237,38],[186,8,238,4],[186,9,238,5],[186,10,238,6],[187,8,239,4],[187,12,239,8],[187,13,239,9,"allowIncomplete"],[187,28,239,24],[187,30,239,26],[188,10,240,6],[189,10,241,6],[189,14,241,10],[189,18,241,14],[189,19,241,15,"__overMaximumFees"],[189,36,241,32],[189,37,241,33,"tx"],[189,39,241,35],[189,40,241,36,"virtualSize"],[189,51,241,47],[189,52,241,48],[189,53,241,49],[189,54,241,50],[189,56,241,52],[190,12,242,8],[190,18,242,14],[190,22,242,18,"Error"],[190,27,242,23],[190,28,242,24],[190,57,242,53],[190,58,242,54],[191,10,243,6],[192,8,244,4],[193,8,245,4],[193,15,245,11,"tx"],[193,17,245,13],[194,6,246,2],[195,4,246,3],[196,6,246,3,"key"],[196,9,246,3],[197,6,246,3,"value"],[197,11,246,3],[197,13,247,2],[197,22,247,2,"__canModifyInputs"],[197,39,247,19,"__canModifyInputs"],[197,40,247,19],[197,42,247,22],[198,8,248,4],[198,15,248,11],[198,19,248,15],[198,20,248,16,"__INPUTS"],[198,28,248,24],[198,29,248,25,"every"],[198,34,248,30],[198,35,248,31],[198,45,248,31,"input"],[198,50,248,36],[198,52,248,40],[199,10,249,6],[199,14,249,10],[199,15,249,11,"input"],[199,20,249,16],[199,21,249,17,"signatures"],[199,31,249,27],[199,33,249,29],[199,40,249,36],[199,44,249,40],[200,10,250,6],[200,17,250,13,"input"],[200,22,250,18],[200,23,250,19,"signatures"],[200,33,250,29],[200,34,250,30,"every"],[200,39,250,35],[200,40,250,36],[200,50,250,36,"signature"],[200,59,250,45],[200,61,250,49],[201,12,251,8],[201,16,251,12],[201,17,251,13,"signature"],[201,26,251,22],[201,28,251,24],[201,35,251,31],[201,39,251,35],[202,12,252,8],[202,16,252,14,"hashType"],[202,24,252,22],[202,27,252,25,"signatureHashType"],[202,44,252,42],[202,45,252,43,"signature"],[202,54,252,52],[202,55,252,53],[203,12,253,8],[204,12,254,8],[205,12,255,8],[205,19,256,10],[205,20,256,11,"hashType"],[205,28,256,19],[205,31,256,22,"_$$_REQUIRE"],[205,42,256,22],[205,43,256,22,"_dependencyMap"],[205,57,256,22],[205,79,256,36,"Transaction"],[205,90,256,47],[205,91,256,48,"SIGHASH_ANYONECANPAY"],[205,111,256,68],[205,117,256,74],[205,118,256,75],[206,10,258,6],[206,11,258,7],[206,12,258,8],[207,8,259,4],[207,9,259,5],[207,10,259,6],[208,6,260,2],[209,4,260,3],[210,6,260,3,"key"],[210,9,260,3],[211,6,260,3,"value"],[211,11,260,3],[211,13,261,2],[211,22,261,2,"__needsOutputs"],[211,36,261,16,"__needsOutputs"],[211,37,261,17,"signingHashType"],[211,52,261,32],[211,54,261,34],[212,8,262,4],[212,12,262,8,"signingHashType"],[212,27,262,23],[212,32,262,28,"_$$_REQUIRE"],[212,43,262,28],[212,44,262,28,"_dependencyMap"],[212,58,262,28],[212,80,262,42,"Transaction"],[212,91,262,53],[212,92,262,54,"SIGHASH_ALL"],[212,103,262,65],[212,105,262,67],[213,10,263,6],[213,17,263,13],[213,21,263,17],[213,22,263,18,"__TX"],[213,26,263,22],[213,27,263,23,"outs"],[213,31,263,27],[213,32,263,28,"length"],[213,38,263,34],[213,43,263,39],[213,44,263,40],[214,8,264,4],[215,8,265,4],[216,8,266,4],[217,8,267,4],[217,15,268,6],[217,19,268,10],[217,20,268,11,"__TX"],[217,24,268,15],[217,25,268,16,"outs"],[217,29,268,20],[217,30,268,21,"length"],[217,36,268,27],[217,41,268,32],[217,42,268,33],[217,46,269,6],[217,50,269,10],[217,51,269,11,"__INPUTS"],[217,59,269,19],[217,60,269,20,"some"],[217,64,269,24],[217,65,269,25],[217,75,269,25,"input"],[217,80,269,30],[217,82,269,34],[218,10,270,8],[218,14,270,12],[218,15,270,13,"input"],[218,20,270,18],[218,21,270,19,"signatures"],[218,31,270,29],[218,33,270,31],[218,40,270,38],[218,45,270,43],[219,10,271,8],[219,17,271,15,"input"],[219,22,271,20],[219,23,271,21,"signatures"],[219,33,271,31],[219,34,271,32,"some"],[219,38,271,36],[219,39,271,37],[219,49,271,37,"signature"],[219,58,271,46],[219,60,271,50],[220,12,272,10],[220,16,272,14],[220,17,272,15,"signature"],[220,26,272,24],[220,28,272,26],[220,35,272,33],[220,40,272,38],[220,41,272,39],[220,42,272,40],[221,12,273,10],[221,16,273,16,"hashType"],[221,24,273,24],[221,27,273,27,"signatureHashType"],[221,44,273,44],[221,45,273,45,"signature"],[221,54,273,54],[221,55,273,55],[222,12,274,10],[222,16,274,14,"hashType"],[222,24,274,22],[222,27,274,25,"_$$_REQUIRE"],[222,38,274,25],[222,39,274,25,"_dependencyMap"],[222,53,274,25],[222,75,274,39,"Transaction"],[222,86,274,50],[222,87,274,51,"SIGHASH_NONE"],[222,99,274,63],[222,101,274,65],[222,108,274,72],[222,113,274,77],[222,114,274,78],[222,115,274,79],[223,12,275,10],[223,19,275,17],[223,23,275,21],[223,24,275,22],[223,25,275,23],[224,10,276,8],[224,11,276,9],[224,12,276,10],[225,8,277,6],[225,9,277,7],[225,10,277,8],[226,6,279,2],[227,4,279,3],[228,6,279,3,"key"],[228,9,279,3],[229,6,279,3,"value"],[229,11,279,3],[229,13,280,2],[229,22,280,2,"__canModifyOutputs"],[229,40,280,20,"__canModifyOutputs"],[229,41,280,20],[229,43,280,23],[230,8,281,4],[230,12,281,10,"nInputs"],[230,19,281,17],[230,22,281,20],[230,26,281,24],[230,27,281,25,"__TX"],[230,31,281,29],[230,32,281,30,"ins"],[230,35,281,33],[230,36,281,34,"length"],[230,42,281,40],[231,8,282,4],[231,12,282,10,"nOutputs"],[231,20,282,18],[231,23,282,21],[231,27,282,25],[231,28,282,26,"__TX"],[231,32,282,30],[231,33,282,31,"outs"],[231,37,282,35],[231,38,282,36,"length"],[231,44,282,42],[232,8,283,4],[232,15,283,11],[232,19,283,15],[232,20,283,16,"__INPUTS"],[232,28,283,24],[232,29,283,25,"every"],[232,34,283,30],[232,35,283,31],[232,45,283,31,"input"],[232,50,283,36],[232,52,283,40],[233,10,284,6],[233,14,284,10,"input"],[233,19,284,15],[233,20,284,16,"signatures"],[233,30,284,26],[233,35,284,31,"undefined"],[233,44,284,40],[233,46,284,42],[233,53,284,49],[233,57,284,53],[234,10,285,6],[234,17,285,13,"input"],[234,22,285,18],[234,23,285,19,"signatures"],[234,33,285,29],[234,34,285,30,"every"],[234,39,285,35],[234,40,285,36],[234,50,285,36,"signature"],[234,59,285,45],[234,61,285,49],[235,12,286,8],[235,16,286,12],[235,17,286,13,"signature"],[235,26,286,22],[235,28,286,24],[235,35,286,31],[235,39,286,35],[236,12,287,8],[236,16,287,14,"hashType"],[236,24,287,22],[236,27,287,25,"signatureHashType"],[236,44,287,42],[236,45,287,43,"signature"],[236,54,287,52],[236,55,287,53],[237,12,288,8],[237,16,288,14,"hashTypeMod"],[237,27,288,25],[237,30,288,28,"hashType"],[237,38,288,36],[237,41,288,39],[237,45,288,43],[238,12,289,8],[238,16,289,12,"hashTypeMod"],[238,27,289,23],[238,32,289,28,"_$$_REQUIRE"],[238,43,289,28],[238,44,289,28,"_dependencyMap"],[238,58,289,28],[238,80,289,42,"Transaction"],[238,91,289,53],[238,92,289,54,"SIGHASH_NONE"],[238,104,289,66],[238,106,289,68],[238,113,289,75],[238,117,289,79],[239,12,290,8],[239,16,290,12,"hashTypeMod"],[239,27,290,23],[239,32,290,28,"_$$_REQUIRE"],[239,43,290,28],[239,44,290,28,"_dependencyMap"],[239,58,290,28],[239,80,290,42,"Transaction"],[239,91,290,53],[239,92,290,54,"SIGHASH_SINGLE"],[239,106,290,68],[239,108,290,70],[240,14,291,10],[241,14,292,10],[242,14,293,10],[243,14,294,10],[243,21,294,17,"nInputs"],[243,28,294,24],[243,32,294,28,"nOutputs"],[243,40,294,36],[244,12,295,8],[245,12,296,8],[245,19,296,15],[245,24,296,20],[246,10,297,6],[246,11,297,7],[246,12,297,8],[247,8,298,4],[247,9,298,5],[247,10,298,6],[248,6,299,2],[249,4,299,3],[250,6,299,3,"key"],[250,9,299,3],[251,6,299,3,"value"],[251,11,299,3],[251,13,300,2],[251,22,300,2,"__overMaximumFees"],[251,39,300,19,"__overMaximumFees"],[251,40,300,20,"bytes"],[251,45,300,25],[251,47,300,27],[252,8,301,4],[253,8,302,4],[253,12,302,10,"incoming"],[253,20,302,18],[253,23,302,21],[253,27,302,25],[253,28,302,26,"__INPUTS"],[253,36,302,34],[253,37,302,35,"reduce"],[253,43,302,41],[253,44,302,42],[253,54,302,43,"a"],[253,55,302,44],[253,57,302,46,"x"],[253,58,302,47],[254,10,302,47],[254,17,302,52,"a"],[254,18,302,53],[254,22,302,57,"x"],[254,23,302,58],[254,24,302,59,"value"],[254,29,302,64],[254,34,302,69],[254,35,302,70],[254,36,302,71],[255,8,302,71],[255,11,302,73],[255,12,302,74],[255,13,302,75],[256,8,303,4],[257,8,304,4],[258,8,305,4],[258,12,305,10,"outgoing"],[258,20,305,18],[258,23,305,21],[258,27,305,25],[258,28,305,26,"__TX"],[258,32,305,30],[258,33,305,31,"outs"],[258,37,305,35],[258,38,305,36,"reduce"],[258,44,305,42],[258,45,305,43],[258,55,305,44,"a"],[258,56,305,45],[258,58,305,47,"x"],[258,59,305,48],[259,10,305,48],[259,17,305,53,"a"],[259,18,305,54],[259,21,305,57,"x"],[259,22,305,58],[259,23,305,59,"value"],[259,28,305,64],[260,8,305,64],[260,11,305,66],[260,12,305,67],[260,13,305,68],[261,8,306,4],[261,12,306,10,"fee"],[261,15,306,13],[261,18,306,16,"incoming"],[261,26,306,24],[261,29,306,27,"outgoing"],[261,37,306,35],[262,8,307,4],[262,12,307,10,"feeRate"],[262,19,307,17],[262,22,307,20,"fee"],[262,25,307,23],[262,28,307,26,"bytes"],[262,33,307,31],[263,8,308,4],[263,15,308,11,"feeRate"],[263,22,308,18],[263,25,308,21],[263,29,308,25],[263,30,308,26,"maximumFeeRate"],[263,44,308,40],[264,6,309,2],[265,4,309,3],[266,6,309,3,"key"],[266,9,309,3],[267,6,309,3,"value"],[267,11,309,3],[267,13,68,2],[267,22,68,9,"fromTransaction"],[267,37,68,24,"fromTransaction"],[267,38,68,25,"transaction"],[267,49,68,36],[267,51,68,38,"network"],[267,58,68,45],[267,60,68,47],[268,8,69,4],[268,12,69,10,"txb"],[268,15,69,13],[268,18,69,16],[268,22,69,20,"TransactionBuilder"],[268,40,69,38],[268,41,69,39,"network"],[268,48,69,46],[268,49,69,47],[269,8,70,4],[270,8,71,4,"txb"],[270,11,71,7],[270,12,71,8,"setVersion"],[270,22,71,18],[270,23,71,19,"transaction"],[270,34,71,30],[270,35,71,31,"version"],[270,42,71,38],[270,43,71,39],[271,8,72,4,"txb"],[271,11,72,7],[271,12,72,8,"setLockTime"],[271,23,72,19],[271,24,72,20,"transaction"],[271,35,72,31],[271,36,72,32,"locktime"],[271,44,72,40],[271,45,72,41],[272,8,73,4],[273,8,74,4,"transaction"],[273,19,74,15],[273,20,74,16,"outs"],[273,24,74,20],[273,25,74,21,"forEach"],[273,32,74,28],[273,33,74,29],[273,43,74,29,"txOut"],[273,48,74,34],[273,50,74,38],[274,10,75,6,"txb"],[274,13,75,9],[274,14,75,10,"addOutput"],[274,23,75,19],[274,24,75,20,"txOut"],[274,29,75,25],[274,30,75,26,"script"],[274,36,75,32],[274,38,75,34,"txOut"],[274,43,75,39],[274,44,75,40,"value"],[274,49,75,45],[274,50,75,46],[275,8,76,4],[275,9,76,5],[275,10,76,6],[276,8,77,4],[277,8,78,4,"transaction"],[277,19,78,15],[277,20,78,16,"ins"],[277,23,78,19],[277,24,78,20,"forEach"],[277,31,78,27],[277,32,78,28],[277,42,78,28,"txIn"],[277,46,78,32],[277,48,78,36],[278,10,79,6,"txb"],[278,13,79,9],[278,14,79,10,"__addInputUnsafe"],[278,30,79,26],[278,31,79,27,"txIn"],[278,35,79,31],[278,36,79,32,"hash"],[278,40,79,36],[278,42,79,38,"txIn"],[278,46,79,42],[278,47,79,43,"index"],[278,52,79,48],[278,54,79,50],[279,12,80,8,"sequence"],[279,20,80,16],[279,22,80,18,"txIn"],[279,26,80,22],[279,27,80,23,"sequence"],[279,35,80,31],[280,12,81,8,"script"],[280,18,81,14],[280,20,81,16,"txIn"],[280,24,81,20],[280,25,81,21,"script"],[280,31,81,27],[281,12,82,8,"witness"],[281,19,82,15],[281,21,82,17,"txIn"],[281,25,82,21],[281,26,82,22,"witness"],[282,10,83,6],[282,11,83,7],[282,12,83,8],[283,8,84,4],[283,9,84,5],[283,10,84,6],[284,8,85,4],[285,8,86,4,"txb"],[285,11,86,7],[285,12,86,8,"__INPUTS"],[285,20,86,16],[285,21,86,17,"forEach"],[285,28,86,24],[285,29,86,25],[285,39,86,26,"input"],[285,44,86,31],[285,46,86,33,"i"],[285,47,86,34],[285,49,86,39],[286,10,87,6,"fixMultisigOrder"],[286,26,87,22],[286,27,87,23,"input"],[286,32,87,28],[286,34,87,30,"transaction"],[286,45,87,41],[286,47,87,43,"i"],[286,48,87,44],[286,49,87,45],[287,8,88,4],[287,9,88,5],[287,10,88,6],[288,8,89,4],[288,15,89,11,"txb"],[288,18,89,14],[289,6,90,2],[290,4,90,3],[291,2,90,3],[292,2,311,0,"exports"],[292,9,311,7],[292,10,311,8,"TransactionBuilder"],[292,28,311,26],[292,31,311,29,"TransactionBuilder"],[292,49,311,47],[293,2,312,0],[293,11,312,9,"expandInput"],[293,22,312,20,"expandInput"],[293,23,312,21,"scriptSig"],[293,32,312,30],[293,34,312,32,"witnessStack"],[293,46,312,44],[293,48,312,46,"type"],[293,52,312,50],[293,54,312,52,"scriptPubKey"],[293,66,312,64],[293,68,312,66],[294,4,313,2],[294,8,313,6,"scriptSig"],[294,17,313,15],[294,18,313,16,"length"],[294,24,313,22],[294,29,313,27],[294,30,313,28],[294,34,313,32,"witnessStack"],[294,46,313,44],[294,47,313,45,"length"],[294,53,313,51],[294,58,313,56],[294,59,313,57],[294,61,313,59],[294,68,313,66],[294,69,313,67],[294,70,313,68],[295,4,314,2],[295,8,314,6],[295,9,314,7,"type"],[295,13,314,11],[295,15,314,13],[296,6,315,4],[296,10,315,8,"ssType"],[296,16,315,14],[296,19,315,17,"_$$_REQUIRE"],[296,30,315,17],[296,31,315,17,"_dependencyMap"],[296,45,315,17],[296,64,315,26,"input"],[296,69,315,31],[296,70,315,32,"scriptSig"],[296,79,315,41],[296,81,315,43],[296,85,315,47],[296,86,315,48],[297,6,316,4],[297,10,316,8,"wsType"],[297,16,316,14],[297,19,316,17,"_$$_REQUIRE"],[297,30,316,17],[297,31,316,17,"_dependencyMap"],[297,45,316,17],[297,64,316,26,"witness"],[297,71,316,33],[297,72,316,34,"witnessStack"],[297,84,316,46],[297,86,316,48],[297,90,316,52],[297,91,316,53],[298,6,317,4],[298,10,317,8,"ssType"],[298,16,317,14],[298,21,317,19,"_$$_REQUIRE"],[298,32,317,19],[298,33,317,19,"_dependencyMap"],[298,47,317,19],[298,66,317,19,"types"],[298,71,317,19],[298,72,317,32,"NONSTANDARD"],[298,83,317,43],[298,85,317,45,"ssType"],[298,91,317,51],[298,94,317,54,"undefined"],[298,103,317,63],[299,6,318,4],[299,10,318,8,"wsType"],[299,16,318,14],[299,21,318,19,"_$$_REQUIRE"],[299,32,318,19],[299,33,318,19,"_dependencyMap"],[299,47,318,19],[299,66,318,19,"types"],[299,71,318,19],[299,72,318,32,"NONSTANDARD"],[299,83,318,43],[299,85,318,45,"wsType"],[299,91,318,51],[299,94,318,54,"undefined"],[299,103,318,63],[300,6,319,4,"type"],[300,10,319,8],[300,13,319,11,"ssType"],[300,19,319,17],[300,23,319,21,"wsType"],[300,29,319,27],[301,4,320,2],[302,4,321,2],[302,12,321,10,"type"],[302,16,321,14],[303,6,322,4],[303,11,322,9,"_$$_REQUIRE"],[303,22,322,9],[303,23,322,9,"_dependencyMap"],[303,37,322,9],[303,56,322,9,"types"],[303,61,322,9],[303,62,322,22,"P2WPKH"],[303,68,322,28],[304,8,322,30],[305,10,323,6],[305,14,323,6,"_payments$p2wpkh"],[305,30,323,6],[305,33,323,44,"_$$_REQUIRE"],[305,44,323,44],[305,45,323,44,"_dependencyMap"],[305,59,323,44],[305,79,323,53,"p2wpkh"],[305,85,323,59],[305,86,323,60],[306,14,324,8,"witness"],[306,21,324,15],[306,23,324,17,"witnessStack"],[307,12,325,6],[307,13,325,7],[307,14,325,8],[308,12,323,14,"output"],[308,18,323,20],[308,21,323,20,"_payments$p2wpkh"],[308,37,323,20],[308,38,323,14,"output"],[308,44,323,20],[309,12,323,22,"pubkey"],[309,18,323,28],[309,21,323,28,"_payments$p2wpkh"],[309,37,323,28],[309,38,323,22,"pubkey"],[309,44,323,28],[310,12,323,30,"signature"],[310,21,323,39],[310,24,323,39,"_payments$p2wpkh"],[310,40,323,39],[310,41,323,30,"signature"],[310,50,323,39],[311,10,326,6],[311,17,326,13],[312,12,327,8,"prevOutScript"],[312,25,327,21],[312,27,327,23,"output"],[312,33,327,29],[313,12,328,8,"prevOutType"],[313,23,328,19],[313,25,328,21,"_$$_REQUIRE"],[313,36,328,21],[313,37,328,21,"_dependencyMap"],[313,51,328,21],[313,70,328,21,"types"],[313,75,328,21],[313,76,328,34,"P2WPKH"],[313,82,328,40],[314,12,329,8,"pubkeys"],[314,19,329,15],[314,21,329,17],[314,22,329,18,"pubkey"],[314,28,329,24],[314,29,329,25],[315,12,330,8,"signatures"],[315,22,330,18],[315,24,330,20],[315,25,330,21,"signature"],[315,34,330,30],[316,10,331,6],[316,11,331,7],[317,8,332,4],[318,6,333,4],[318,11,333,9,"_$$_REQUIRE"],[318,22,333,9],[318,23,333,9,"_dependencyMap"],[318,37,333,9],[318,56,333,9,"types"],[318,61,333,9],[318,62,333,22,"P2PKH"],[318,67,333,27],[319,8,333,29],[320,10,334,6],[320,14,334,6,"_payments$p2pkh"],[320,29,334,6],[320,32,334,44,"_$$_REQUIRE"],[320,43,334,44],[320,44,334,44,"_dependencyMap"],[320,58,334,44],[320,78,334,53,"p2pkh"],[320,83,334,58],[320,84,334,59],[321,14,335,8,"input"],[321,19,335,13],[321,21,335,15,"scriptSig"],[322,12,336,6],[322,13,336,7],[322,14,336,8],[323,12,334,14,"output"],[323,19,334,20],[323,22,334,20,"_payments$p2pkh"],[323,37,334,20],[323,38,334,14,"output"],[323,44,334,20],[324,12,334,22,"pubkey"],[324,19,334,28],[324,22,334,28,"_payments$p2pkh"],[324,37,334,28],[324,38,334,22,"pubkey"],[324,44,334,28],[325,12,334,30,"signature"],[325,22,334,39],[325,25,334,39,"_payments$p2pkh"],[325,40,334,39],[325,41,334,30,"signature"],[325,50,334,39],[326,10,337,6],[326,17,337,13],[327,12,338,8,"prevOutScript"],[327,25,338,21],[327,27,338,23,"output"],[327,34,338,29],[328,12,339,8,"prevOutType"],[328,23,339,19],[328,25,339,21,"_$$_REQUIRE"],[328,36,339,21],[328,37,339,21,"_dependencyMap"],[328,51,339,21],[328,70,339,21,"types"],[328,75,339,21],[328,76,339,34,"P2PKH"],[328,81,339,39],[329,12,340,8,"pubkeys"],[329,19,340,15],[329,21,340,17],[329,22,340,18,"pubkey"],[329,29,340,24],[329,30,340,25],[330,12,341,8,"signatures"],[330,22,341,18],[330,24,341,20],[330,25,341,21,"signature"],[330,35,341,30],[331,10,342,6],[331,11,342,7],[332,8,343,4],[333,6,344,4],[333,11,344,9,"_$$_REQUIRE"],[333,22,344,9],[333,23,344,9,"_dependencyMap"],[333,37,344,9],[333,56,344,9,"types"],[333,61,344,9],[333,62,344,22,"P2PK"],[333,66,344,26],[334,8,344,28],[335,10,345,6],[335,14,345,6,"_payments$p2pk"],[335,28,345,6],[335,31,345,28,"_$$_REQUIRE"],[335,42,345,28],[335,43,345,28,"_dependencyMap"],[335,57,345,28],[335,77,345,37,"p2pk"],[335,81,345,41],[335,82,345,42],[336,14,345,44,"input"],[336,19,345,49],[336,21,345,51,"scriptSig"],[337,12,345,61],[337,13,345,62],[337,14,345,63],[338,12,345,14,"signature"],[338,23,345,23],[338,26,345,23,"_payments$p2pk"],[338,40,345,23],[338,41,345,14,"signature"],[338,50,345,23],[339,10,346,6],[339,17,346,13],[340,12,347,8,"prevOutType"],[340,23,347,19],[340,25,347,21,"_$$_REQUIRE"],[340,36,347,21],[340,37,347,21,"_dependencyMap"],[340,51,347,21],[340,70,347,21,"types"],[340,75,347,21],[340,76,347,34,"P2PK"],[340,80,347,38],[341,12,348,8,"pubkeys"],[341,19,348,15],[341,21,348,17],[341,22,348,18,"undefined"],[341,31,348,27],[341,32,348,28],[342,12,349,8,"signatures"],[342,22,349,18],[342,24,349,20],[342,25,349,21,"signature"],[342,36,349,30],[343,10,350,6],[343,11,350,7],[344,8,351,4],[345,6,352,4],[345,11,352,9,"_$$_REQUIRE"],[345,22,352,9],[345,23,352,9,"_dependencyMap"],[345,37,352,9],[345,56,352,9,"types"],[345,61,352,9],[345,62,352,22,"P2MS"],[345,66,352,26],[346,8,352,28],[347,10,353,6],[347,14,353,6,"_payments$p2ms"],[347,28,353,6],[347,31,353,41,"_$$_REQUIRE"],[347,42,353,41],[347,43,353,41,"_dependencyMap"],[347,57,353,41],[347,77,353,50,"p2ms"],[347,81,353,54],[347,82,354,8],[348,14,355,10,"input"],[348,19,355,15],[348,21,355,17,"scriptSig"],[348,30,355,26],[349,14,356,10,"output"],[349,20,356,16],[349,22,356,18,"scriptPubKey"],[350,12,357,8],[350,13,357,9],[350,15,358,8],[351,14,358,10,"allowIncomplete"],[351,29,358,25],[351,31,358,27],[352,12,358,32],[352,13,359,6],[352,14,359,7],[353,12,353,14,"m"],[353,13,353,15],[353,16,353,15,"_payments$p2ms"],[353,30,353,15],[353,31,353,14,"m"],[353,32,353,15],[354,12,353,17,"pubkeys"],[354,19,353,24],[354,22,353,24,"_payments$p2ms"],[354,36,353,24],[354,37,353,17,"pubkeys"],[354,44,353,24],[355,12,353,26,"signatures"],[355,22,353,36],[355,25,353,36,"_payments$p2ms"],[355,39,353,36],[355,40,353,26,"signatures"],[355,50,353,36],[356,10,360,6],[356,17,360,13],[357,12,361,8,"prevOutType"],[357,23,361,19],[357,25,361,21,"_$$_REQUIRE"],[357,36,361,21],[357,37,361,21,"_dependencyMap"],[357,51,361,21],[357,70,361,21,"types"],[357,75,361,21],[357,76,361,34,"P2MS"],[357,80,361,38],[358,12,362,8,"pubkeys"],[358,19,362,15],[358,21,362,8,"pubkeys"],[358,28,362,15],[359,12,363,8,"signatures"],[359,22,363,18],[359,24,363,8,"signatures"],[359,34,363,18],[360,12,364,8,"maxSignatures"],[360,25,364,21],[360,27,364,23,"m"],[361,10,365,6],[361,11,365,7],[362,8,366,4],[363,4,367,2],[364,4,368,2],[364,8,368,6,"type"],[364,12,368,10],[364,17,368,15,"_$$_REQUIRE"],[364,28,368,15],[364,29,368,15,"_dependencyMap"],[364,43,368,15],[364,62,368,15,"types"],[364,67,368,15],[364,68,368,28,"P2SH"],[364,72,368,32],[364,74,368,34],[365,6,369,4],[365,10,369,4,"_payments$p2sh"],[365,24,369,4],[365,27,369,31,"_$$_REQUIRE"],[365,38,369,31],[365,39,369,31,"_dependencyMap"],[365,53,369,31],[365,73,369,40,"p2sh"],[365,77,369,44],[365,78,369,45],[366,10,370,6,"input"],[366,15,370,11],[366,17,370,13,"scriptSig"],[366,26,370,22],[367,10,371,6,"witness"],[367,17,371,13],[367,19,371,15,"witnessStack"],[368,8,372,4],[368,9,372,5],[368,10,372,6],[369,8,369,12,"output"],[369,16,369,18],[369,19,369,18,"_payments$p2sh"],[369,33,369,18],[369,34,369,12,"output"],[369,40,369,18],[370,8,369,20,"redeem"],[370,14,369,26],[370,17,369,26,"_payments$p2sh"],[370,31,369,26],[370,32,369,20,"redeem"],[370,38,369,26],[371,6,373,4],[371,10,373,10,"outputType"],[371,20,373,20],[371,23,373,23,"_$$_REQUIRE"],[371,34,373,23],[371,35,373,23,"_dependencyMap"],[371,49,373,23],[371,68,373,32,"output"],[371,74,373,38],[371,75,373,39,"redeem"],[371,81,373,45],[371,82,373,46,"output"],[371,88,373,52],[371,89,373,53],[372,6,374,4],[372,10,374,10,"expanded"],[372,18,374,18],[372,21,374,21,"expandInput"],[372,32,374,32],[372,33,375,6,"redeem"],[372,39,375,12],[372,40,375,13,"input"],[372,45,375,18],[372,47,376,6,"redeem"],[372,53,376,12],[372,54,376,13,"witness"],[372,61,376,20],[372,63,377,6,"outputType"],[372,73,377,16],[372,75,378,6,"redeem"],[372,81,378,12],[372,82,378,13,"output"],[372,88,379,4],[372,89,379,5],[373,6,380,4],[373,10,380,8],[373,11,380,9,"expanded"],[373,19,380,17],[373,20,380,18,"prevOutType"],[373,31,380,29],[373,33,380,31],[373,40,380,38],[373,41,380,39],[373,42,380,40],[374,6,381,4],[374,13,381,11],[375,8,382,6,"prevOutScript"],[375,21,382,19],[375,23,382,21,"output"],[375,31,382,27],[376,8,383,6,"prevOutType"],[376,19,383,17],[376,21,383,19,"_$$_REQUIRE"],[376,32,383,19],[376,33,383,19,"_dependencyMap"],[376,47,383,19],[376,66,383,19,"types"],[376,71,383,19],[376,72,383,32,"P2SH"],[376,76,383,36],[377,8,384,6,"redeemScript"],[377,20,384,18],[377,22,384,20,"redeem"],[377,28,384,26],[377,29,384,27,"output"],[377,35,384,33],[378,8,385,6,"redeemScriptType"],[378,24,385,22],[378,26,385,24,"expanded"],[378,34,385,32],[378,35,385,33,"prevOutType"],[378,46,385,44],[379,8,386,6,"witnessScript"],[379,21,386,19],[379,23,386,21,"expanded"],[379,31,386,29],[379,32,386,30,"witnessScript"],[379,45,386,43],[380,8,387,6,"witnessScriptType"],[380,25,387,23],[380,27,387,25,"expanded"],[380,35,387,33],[380,36,387,34,"witnessScriptType"],[380,53,387,51],[381,8,388,6,"pubkeys"],[381,15,388,13],[381,17,388,15,"expanded"],[381,25,388,23],[381,26,388,24,"pubkeys"],[381,33,388,31],[382,8,389,6,"signatures"],[382,18,389,16],[382,20,389,18,"expanded"],[382,28,389,26],[382,29,389,27,"signatures"],[383,6,390,4],[383,7,390,5],[384,4,391,2],[385,4,392,2],[385,8,392,6,"type"],[385,12,392,10],[385,17,392,15,"_$$_REQUIRE"],[385,28,392,15],[385,29,392,15,"_dependencyMap"],[385,43,392,15],[385,62,392,15,"types"],[385,67,392,15],[385,68,392,28,"P2WSH"],[385,73,392,33],[385,75,392,35],[386,6,393,4],[386,10,393,4,"_payments$p2wsh"],[386,25,393,4],[386,28,393,31,"_$$_REQUIRE"],[386,39,393,31],[386,40,393,31,"_dependencyMap"],[386,54,393,31],[386,74,393,40,"p2wsh"],[386,79,393,45],[386,80,393,46],[387,10,394,6,"input"],[387,15,394,11],[387,17,394,13,"scriptSig"],[387,26,394,22],[388,10,395,6,"witness"],[388,17,395,13],[388,19,395,15,"witnessStack"],[389,8,396,4],[389,9,396,5],[389,10,396,6],[390,8,393,12,"output"],[390,16,393,18],[390,19,393,18,"_payments$p2wsh"],[390,34,393,18],[390,35,393,12,"output"],[390,41,393,18],[391,8,393,20,"redeem"],[391,15,393,26],[391,18,393,26,"_payments$p2wsh"],[391,33,393,26],[391,34,393,20,"redeem"],[391,40,393,26],[392,6,397,4],[392,10,397,10,"outputType"],[392,21,397,20],[392,24,397,23,"_$$_REQUIRE"],[392,35,397,23],[392,36,397,23,"_dependencyMap"],[392,50,397,23],[392,69,397,32,"output"],[392,75,397,38],[392,76,397,39,"redeem"],[392,83,397,45],[392,84,397,46,"output"],[392,90,397,52],[392,91,397,53],[393,6,398,4],[393,10,398,8,"expanded"],[393,19,398,16],[394,6,399,4],[394,10,399,8,"outputType"],[394,21,399,18],[394,26,399,23,"_$$_REQUIRE"],[394,37,399,23],[394,38,399,23,"_dependencyMap"],[394,52,399,23],[394,71,399,23,"types"],[394,76,399,23],[394,77,399,36,"P2WPKH"],[394,83,399,42],[394,85,399,44],[395,8,400,6,"expanded"],[395,17,400,14],[395,20,400,17,"expandInput"],[395,31,400,28],[395,32,400,29,"redeem"],[395,39,400,35],[395,40,400,36,"input"],[395,45,400,41],[395,47,400,43,"redeem"],[395,54,400,49],[395,55,400,50,"witness"],[395,62,400,57],[395,64,400,59,"outputType"],[395,75,400,69],[395,76,400,70],[396,6,401,4],[396,7,401,5],[396,13,401,11],[397,8,402,6,"expanded"],[397,17,402,14],[397,20,402,17,"expandInput"],[397,31,402,28],[397,32,403,8,"_$$_REQUIRE"],[397,43,403,8],[397,44,403,8,"_dependencyMap"],[397,58,403,8],[397,76,403,16,"compile"],[397,83,403,23],[397,84,403,24,"redeem"],[397,91,403,30],[397,92,403,31,"witness"],[397,99,403,38],[397,100,403,39],[397,102,404,8],[397,104,404,10],[397,106,405,8,"outputType"],[397,117,405,18],[397,119,406,8,"redeem"],[397,126,406,14],[397,127,406,15,"output"],[397,133,407,6],[397,134,407,7],[398,6,408,4],[399,6,409,4],[399,10,409,8],[399,11,409,9,"expanded"],[399,20,409,17],[399,21,409,18,"prevOutType"],[399,32,409,29],[399,34,409,31],[399,41,409,38],[399,42,409,39],[399,43,409,40],[400,6,410,4],[400,13,410,11],[401,8,411,6,"prevOutScript"],[401,21,411,19],[401,23,411,21,"output"],[401,31,411,27],[402,8,412,6,"prevOutType"],[402,19,412,17],[402,21,412,19,"_$$_REQUIRE"],[402,32,412,19],[402,33,412,19,"_dependencyMap"],[402,47,412,19],[402,66,412,19,"types"],[402,71,412,19],[402,72,412,32,"P2WSH"],[402,77,412,37],[403,8,413,6,"witnessScript"],[403,21,413,19],[403,23,413,21,"redeem"],[403,30,413,27],[403,31,413,28,"output"],[403,37,413,34],[404,8,414,6,"witnessScriptType"],[404,25,414,23],[404,27,414,25,"expanded"],[404,36,414,33],[404,37,414,34,"prevOutType"],[404,48,414,45],[405,8,415,6,"pubkeys"],[405,15,415,13],[405,17,415,15,"expanded"],[405,26,415,23],[405,27,415,24,"pubkeys"],[405,34,415,31],[406,8,416,6,"signatures"],[406,18,416,16],[406,20,416,18,"expanded"],[406,29,416,26],[406,30,416,27,"signatures"],[407,6,417,4],[407,7,417,5],[408,4,418,2],[409,4,419,2],[409,11,419,9],[410,6,420,4,"prevOutType"],[410,17,420,15],[410,19,420,17,"_$$_REQUIRE"],[410,30,420,17],[410,31,420,17,"_dependencyMap"],[410,45,420,17],[410,64,420,17,"types"],[410,69,420,17],[410,70,420,30,"NONSTANDARD"],[410,81,420,41],[411,6,421,4,"prevOutScript"],[411,19,421,17],[411,21,421,19,"scriptSig"],[412,4,422,2],[412,5,422,3],[413,2,423,0],[414,2,424,0],[415,2,425,0],[415,11,425,9,"fixMultisigOrder"],[415,27,425,25,"fixMultisigOrder"],[415,28,425,26,"input"],[415,33,425,31],[415,35,425,33,"transaction"],[415,46,425,44],[415,48,425,46,"vin"],[415,51,425,49],[415,53,425,51],[416,4,426,2],[416,8,426,6,"input"],[416,13,426,11],[416,14,426,12,"redeemScriptType"],[416,30,426,28],[416,35,426,33,"_$$_REQUIRE"],[416,46,426,33],[416,47,426,33,"_dependencyMap"],[416,61,426,33],[416,80,426,33,"types"],[416,85,426,33],[416,86,426,46,"P2MS"],[416,90,426,50],[416,94,426,54],[416,95,426,55,"input"],[416,100,426,60],[416,101,426,61,"redeemScript"],[416,113,426,73],[416,115,427,4],[417,4,428,2],[417,8,428,6,"input"],[417,13,428,11],[417,14,428,12,"pubkeys"],[417,21,428,19],[417,22,428,20,"length"],[417,28,428,26],[417,33,428,31,"input"],[417,38,428,36],[417,39,428,37,"signatures"],[417,49,428,47],[417,50,428,48,"length"],[417,56,428,54],[417,58,428,56],[418,4,429,2],[418,8,429,8,"unmatched"],[418,17,429,17],[418,20,429,20,"input"],[418,25,429,25],[418,26,429,26,"signatures"],[418,36,429,36],[418,37,429,37,"concat"],[418,43,429,43],[418,44,429,44],[418,45,429,45],[419,4,430,2,"input"],[419,9,430,7],[419,10,430,8,"signatures"],[419,20,430,18],[419,23,430,21,"input"],[419,28,430,26],[419,29,430,27,"pubkeys"],[419,36,430,34],[419,37,430,35,"map"],[419,40,430,38],[419,41,430,39],[419,51,430,39,"pubKey"],[419,57,430,45],[419,59,430,49],[420,6,431,4],[420,10,431,10,"keyPair"],[420,17,431,17],[420,20,431,20,"_$$_REQUIRE"],[420,31,431,20],[420,32,431,20,"_dependencyMap"],[420,46,431,20],[420,64,431,27,"fromPublicKey"],[420,77,431,40],[420,78,431,41,"pubKey"],[420,84,431,47],[420,85,431,48],[421,6,432,4],[421,10,432,8,"match"],[421,15,432,13],[422,6,433,4],[423,6,434,4,"unmatched"],[423,15,434,13],[423,16,434,14,"some"],[423,20,434,18],[423,21,434,19],[423,31,434,20,"signature"],[423,40,434,29],[423,42,434,31,"i"],[423,43,434,32],[423,45,434,37],[424,8,435,6],[425,8,436,6],[425,12,436,10],[425,13,436,11,"signature"],[425,22,436,20],[425,24,436,22],[425,31,436,29],[425,36,436,34],[426,8,437,6],[427,8,438,6],[427,12,438,12,"parsed"],[427,18,438,18],[427,21,438,21,"_$$_REQUIRE"],[427,32,438,21],[427,33,438,21,"_dependencyMap"],[427,47,438,21],[427,65,438,29,"signature"],[427,74,438,38],[427,75,438,39,"decode"],[427,81,438,45],[427,82,438,46,"signature"],[427,91,438,55],[427,92,438,56],[428,8,439,6],[428,12,439,12,"hash"],[428,16,439,16],[428,19,439,19,"transaction"],[428,30,439,30],[428,31,439,31,"hashForSignature"],[428,47,439,47],[428,48,440,8,"vin"],[428,51,440,11],[428,53,441,8,"input"],[428,58,441,13],[428,59,441,14,"redeemScript"],[428,71,441,26],[428,73,442,8,"parsed"],[428,79,442,14],[428,80,442,15,"hashType"],[428,88,443,6],[428,89,443,7],[429,8,444,6],[430,8,445,6],[430,12,445,10],[430,13,445,11,"keyPair"],[430,20,445,18],[430,21,445,19,"verify"],[430,27,445,25],[430,28,445,26,"hash"],[430,32,445,30],[430,34,445,32,"parsed"],[430,40,445,38],[430,41,445,39,"signature"],[430,50,445,48],[430,51,445,49],[430,53,445,51],[430,60,445,58],[430,65,445,63],[431,8,446,6],[432,8,447,6,"unmatched"],[432,17,447,15],[432,18,447,16,"i"],[432,19,447,17],[432,20,447,18],[432,23,447,21,"undefined"],[432,32,447,30],[433,8,448,6,"match"],[433,13,448,11],[433,16,448,14,"signature"],[433,25,448,23],[434,8,449,6],[434,15,449,13],[434,19,449,17],[435,6,450,4],[435,7,450,5],[435,8,450,6],[436,6,451,4],[436,13,451,11,"match"],[436,18,451,16],[437,4,452,2],[437,5,452,3],[437,6,452,4],[438,2,453,0],[439,2,454,0],[439,11,454,9,"expandOutput"],[439,23,454,21,"expandOutput"],[439,24,454,22,"script"],[439,30,454,28],[439,32,454,30,"ourPubKey"],[439,41,454,39],[439,43,454,41],[440,4,455,2,"_$$_REQUIRE"],[440,15,455,2],[440,16,455,2,"_dependencyMap"],[440,30,455,2],[440,48,455,12,"_$$_REQUIRE"],[440,59,455,12],[440,60,455,12,"_dependencyMap"],[440,74,455,12],[440,90,455,18,"Buffer"],[440,96,455,24],[440,98,455,26,"script"],[440,104,455,32],[440,105,455,33],[441,4,456,2],[441,8,456,8,"type"],[441,12,456,12],[441,15,456,15,"_$$_REQUIRE"],[441,26,456,15],[441,27,456,15,"_dependencyMap"],[441,41,456,15],[441,60,456,24,"output"],[441,66,456,30],[441,67,456,31,"script"],[441,73,456,37],[441,74,456,38],[442,4,457,2],[442,12,457,10,"type"],[442,16,457,14],[443,6,458,4],[443,11,458,9,"_$$_REQUIRE"],[443,22,458,9],[443,23,458,9,"_dependencyMap"],[443,37,458,9],[443,56,458,9,"types"],[443,61,458,9],[443,62,458,22,"P2PKH"],[443,67,458,27],[444,8,458,29],[445,10,459,6],[445,14,459,10],[445,15,459,11,"ourPubKey"],[445,24,459,20],[445,26,459,22],[445,33,459,29],[446,12,459,31,"type"],[446,16,459,35],[446,18,459,31,"type"],[447,10,459,36],[447,11,459,37],[448,10,460,6],[449,10,461,6],[449,14,461,12,"pkh1"],[449,18,461,16],[449,21,461,19,"_$$_REQUIRE"],[449,32,461,19],[449,33,461,19,"_dependencyMap"],[449,47,461,19],[449,67,461,28,"p2pkh"],[449,72,461,33],[449,73,461,34],[450,12,461,36,"output"],[450,18,461,42],[450,20,461,44,"script"],[451,10,461,51],[451,11,461,52],[451,12,461,53],[451,13,461,54,"hash"],[451,17,461,58],[452,10,462,6],[452,14,462,12,"pkh2"],[452,18,462,16],[452,21,462,19,"_$$_REQUIRE"],[452,32,462,19],[452,33,462,19,"_dependencyMap"],[452,47,462,19],[452,65,462,27,"hash160"],[452,72,462,34],[452,73,462,35,"ourPubKey"],[452,82,462,44],[452,83,462,45],[453,10,463,6],[453,14,463,10],[453,15,463,11,"pkh1"],[453,19,463,15],[453,20,463,16,"equals"],[453,26,463,22],[453,27,463,23,"pkh2"],[453,31,463,27],[453,32,463,28],[453,34,463,30],[453,41,463,37],[454,12,463,39,"type"],[454,16,463,43],[454,18,463,39,"type"],[455,10,463,44],[455,11,463,45],[456,10,464,6],[456,17,464,13],[457,12,465,8,"type"],[457,16,465,12],[457,18,465,8,"type"],[457,22,465,12],[458,12,466,8,"pubkeys"],[458,19,466,15],[458,21,466,17],[458,22,466,18,"ourPubKey"],[458,31,466,27],[458,32,466,28],[459,12,467,8,"signatures"],[459,22,467,18],[459,24,467,20],[459,25,467,21,"undefined"],[459,34,467,30],[460,10,468,6],[460,11,468,7],[461,8,469,4],[462,6,470,4],[462,11,470,9,"_$$_REQUIRE"],[462,22,470,9],[462,23,470,9,"_dependencyMap"],[462,37,470,9],[462,56,470,9,"types"],[462,61,470,9],[462,62,470,22,"P2WPKH"],[462,68,470,28],[463,8,470,30],[464,10,471,6],[464,14,471,10],[464,15,471,11,"ourPubKey"],[464,24,471,20],[464,26,471,22],[464,33,471,29],[465,12,471,31,"type"],[465,16,471,35],[465,18,471,31,"type"],[466,10,471,36],[466,11,471,37],[467,10,472,6],[468,10,473,6],[468,14,473,12,"wpkh1"],[468,19,473,17],[468,22,473,20,"_$$_REQUIRE"],[468,33,473,20],[468,34,473,20,"_dependencyMap"],[468,48,473,20],[468,68,473,29,"p2wpkh"],[468,74,473,35],[468,75,473,36],[469,12,473,38,"output"],[469,18,473,44],[469,20,473,46,"script"],[470,10,473,53],[470,11,473,54],[470,12,473,55],[470,13,473,56,"hash"],[470,17,473,60],[471,10,474,6],[471,14,474,12,"wpkh2"],[471,19,474,17],[471,22,474,20,"_$$_REQUIRE"],[471,33,474,20],[471,34,474,20,"_dependencyMap"],[471,48,474,20],[471,66,474,28,"hash160"],[471,73,474,35],[471,74,474,36,"ourPubKey"],[471,83,474,45],[471,84,474,46],[472,10,475,6],[472,14,475,10],[472,15,475,11,"wpkh1"],[472,20,475,16],[472,21,475,17,"equals"],[472,27,475,23],[472,28,475,24,"wpkh2"],[472,33,475,29],[472,34,475,30],[472,36,475,32],[472,43,475,39],[473,12,475,41,"type"],[473,16,475,45],[473,18,475,41,"type"],[474,10,475,46],[474,11,475,47],[475,10,476,6],[475,17,476,13],[476,12,477,8,"type"],[476,16,477,12],[476,18,477,8,"type"],[476,22,477,12],[477,12,478,8,"pubkeys"],[477,19,478,15],[477,21,478,17],[477,22,478,18,"ourPubKey"],[477,31,478,27],[477,32,478,28],[478,12,479,8,"signatures"],[478,22,479,18],[478,24,479,20],[478,25,479,21,"undefined"],[478,34,479,30],[479,10,480,6],[479,11,480,7],[480,8,481,4],[481,6,482,4],[481,11,482,9,"_$$_REQUIRE"],[481,22,482,9],[481,23,482,9,"_dependencyMap"],[481,37,482,9],[481,56,482,9,"types"],[481,61,482,9],[481,62,482,22,"P2PK"],[481,66,482,26],[482,8,482,28],[483,10,483,6],[483,14,483,12,"p2pk"],[483,18,483,16],[483,21,483,19,"_$$_REQUIRE"],[483,32,483,19],[483,33,483,19,"_dependencyMap"],[483,47,483,19],[483,67,483,28,"p2pk"],[483,71,483,32],[483,72,483,33],[484,12,483,35,"output"],[484,18,483,41],[484,20,483,43,"script"],[485,10,483,50],[485,11,483,51],[485,12,483,52],[486,10,484,6],[486,17,484,13],[487,12,485,8,"type"],[487,16,485,12],[487,18,485,8,"type"],[487,22,485,12],[488,12,486,8,"pubkeys"],[488,19,486,15],[488,21,486,17],[488,22,486,18,"p2pk"],[488,26,486,22],[488,27,486,23,"pubkey"],[488,33,486,29],[488,34,486,30],[489,12,487,8,"signatures"],[489,22,487,18],[489,24,487,20],[489,25,487,21,"undefined"],[489,34,487,30],[490,10,488,6],[490,11,488,7],[491,8,489,4],[492,6,490,4],[492,11,490,9,"_$$_REQUIRE"],[492,22,490,9],[492,23,490,9,"_dependencyMap"],[492,37,490,9],[492,56,490,9,"types"],[492,61,490,9],[492,62,490,22,"P2MS"],[492,66,490,26],[493,8,490,28],[494,10,491,6],[494,14,491,12,"p2ms"],[494,18,491,16],[494,21,491,19,"_$$_REQUIRE"],[494,32,491,19],[494,33,491,19,"_dependencyMap"],[494,47,491,19],[494,67,491,28,"p2ms"],[494,71,491,32],[494,72,491,33],[495,12,491,35,"output"],[495,18,491,41],[495,20,491,43,"script"],[496,10,491,50],[496,11,491,51],[496,12,491,52],[497,10,492,6],[497,17,492,13],[498,12,493,8,"type"],[498,16,493,12],[498,18,493,8,"type"],[498,22,493,12],[499,12,494,8,"pubkeys"],[499,19,494,15],[499,21,494,17,"p2ms"],[499,25,494,21],[499,26,494,22,"pubkeys"],[499,33,494,29],[500,12,495,8,"signatures"],[500,22,495,18],[500,24,495,20,"p2ms"],[500,28,495,24],[500,29,495,25,"pubkeys"],[500,36,495,32],[500,37,495,33,"map"],[500,40,495,36],[500,41,495,37],[501,14,495,37],[501,21,495,43,"undefined"],[501,30,495,52],[502,12,495,52],[502,14,495,53],[503,12,496,8,"maxSignatures"],[503,25,496,21],[503,27,496,23,"p2ms"],[503,31,496,27],[503,32,496,28,"m"],[504,10,497,6],[504,11,497,7],[505,8,498,4],[506,4,499,2],[507,4,500,2],[507,11,500,9],[508,6,500,11,"type"],[508,10,500,15],[508,12,500,11,"type"],[509,4,500,16],[509,5,500,17],[510,2,501,0],[511,2,502,0],[511,11,502,9,"prepareInput"],[511,23,502,21,"prepareInput"],[511,24,502,22,"input"],[511,29,502,27],[511,31,502,29,"ourPubKey"],[511,40,502,38],[511,42,502,40,"redeemScript"],[511,54,502,52],[511,56,502,54,"witnessScript"],[511,69,502,67],[511,71,502,69],[512,4,503,2],[512,8,503,6,"redeemScript"],[512,20,503,18],[512,24,503,22,"witnessScript"],[512,37,503,35],[512,39,503,37],[513,6,504,4],[513,10,504,10,"p2wsh"],[513,15,504,15],[513,18,504,18,"_$$_REQUIRE"],[513,29,504,18],[513,30,504,18,"_dependencyMap"],[513,44,504,18],[513,64,504,27,"p2wsh"],[513,69,504,32],[513,70,504,33],[514,8,505,6,"redeem"],[514,14,505,12],[514,16,505,14],[515,10,505,16,"output"],[515,16,505,22],[515,18,505,24,"witnessScript"],[516,8,505,38],[517,6,506,4],[517,7,506,5],[517,8,506,6],[518,6,507,4],[518,10,507,10,"p2wshAlt"],[518,18,507,18],[518,21,507,21,"_$$_REQUIRE"],[518,32,507,21],[518,33,507,21,"_dependencyMap"],[518,47,507,21],[518,67,507,30,"p2wsh"],[518,72,507,35],[518,73,507,36],[519,8,507,38,"output"],[519,14,507,44],[519,16,507,46,"redeemScript"],[520,6,507,59],[520,7,507,60],[520,8,507,61],[521,6,508,4],[521,10,508,10,"p2sh"],[521,14,508,14],[521,17,508,17,"_$$_REQUIRE"],[521,28,508,17],[521,29,508,17,"_dependencyMap"],[521,43,508,17],[521,63,508,26,"p2sh"],[521,67,508,30],[521,68,508,31],[522,8,508,33,"redeem"],[522,14,508,39],[522,16,508,41],[523,10,508,43,"output"],[523,16,508,49],[523,18,508,51,"redeemScript"],[524,8,508,64],[525,6,508,66],[525,7,508,67],[525,8,508,68],[526,6,509,4],[526,10,509,10,"p2shAlt"],[526,17,509,17],[526,20,509,20,"_$$_REQUIRE"],[526,31,509,20],[526,32,509,20,"_dependencyMap"],[526,46,509,20],[526,66,509,29,"p2sh"],[526,70,509,33],[526,71,509,34],[527,8,509,36,"redeem"],[527,14,509,42],[527,16,509,44,"p2wsh"],[528,6,509,50],[528,7,509,51],[528,8,509,52],[529,6,510,4],[530,6,511,4],[530,10,511,8],[530,11,511,9,"p2wsh"],[530,16,511,14],[530,17,511,15,"hash"],[530,21,511,19],[530,22,511,20,"equals"],[530,28,511,26],[530,29,511,27,"p2wshAlt"],[530,37,511,35],[530,38,511,36,"hash"],[530,42,511,40],[530,43,511,41],[530,45,512,6],[530,51,512,12],[530,55,512,16,"Error"],[530,60,512,21],[530,61,512,22],[530,109,512,70],[530,110,512,71],[531,6,513,4],[531,10,513,8],[531,11,513,9,"p2sh"],[531,15,513,13],[531,16,513,14,"hash"],[531,20,513,18],[531,21,513,19,"equals"],[531,27,513,25],[531,28,513,26,"p2shAlt"],[531,35,513,33],[531,36,513,34,"hash"],[531,40,513,38],[531,41,513,39],[531,43,514,6],[531,49,514,12],[531,53,514,16,"Error"],[531,58,514,21],[531,59,514,22],[531,106,514,69],[531,107,514,70],[532,6,515,4],[532,10,515,10,"expanded"],[532,18,515,18],[532,21,515,21,"expandOutput"],[532,33,515,33],[532,34,515,34,"p2wsh"],[532,39,515,39],[532,40,515,40,"redeem"],[532,46,515,46],[532,47,515,47,"output"],[532,53,515,53],[532,55,515,55,"ourPubKey"],[532,64,515,64],[532,65,515,65],[533,6,516,4],[533,10,516,8],[533,11,516,9,"expanded"],[533,19,516,17],[533,20,516,18,"pubkeys"],[533,27,516,25],[533,29,517,6],[533,35,517,12],[533,39,517,16,"Error"],[533,44,517,21],[533,45,518,8,"expanded"],[533,53,518,16],[533,54,518,17,"type"],[533,58,518,21],[533,61,519,10],[533,96,519,45],[533,99,520,10,"_$$_REQUIRE"],[533,110,520,10],[533,111,520,10,"_dependencyMap"],[533,125,520,10],[533,143,520,18,"toASM"],[533,148,520,23],[533,149,520,24,"witnessScript"],[533,162,520,37],[533,163,520,38],[533,166,521,10],[533,169,522,6],[533,170,522,7],[534,6,523,4],[534,10,523,8,"input"],[534,15,523,13],[534,16,523,14,"signatures"],[534,26,523,24],[534,30,523,28,"input"],[534,35,523,33],[534,36,523,34,"signatures"],[534,46,523,44],[534,47,523,45,"some"],[534,51,523,49],[534,52,523,50],[534,62,523,50,"x"],[534,63,523,51],[535,8,523,51],[535,15,523,55,"x"],[535,16,523,56],[535,21,523,61,"undefined"],[535,30,523,70],[536,6,523,70],[536,8,523,71],[536,10,523,73],[537,8,524,6,"expanded"],[537,16,524,14],[537,17,524,15,"signatures"],[537,27,524,25],[537,30,524,28,"input"],[537,35,524,33],[537,36,524,34,"signatures"],[537,46,524,44],[538,6,525,4],[539,6,526,4],[539,10,526,10,"signScript"],[539,20,526,20],[539,23,526,23,"witnessScript"],[539,36,526,36],[540,6,527,4],[540,10,527,8,"expanded"],[540,18,527,16],[540,19,527,17,"type"],[540,23,527,21],[540,28,527,26,"_$$_REQUIRE"],[540,39,527,26],[540,40,527,26,"_dependencyMap"],[540,54,527,26],[540,73,527,26,"types"],[540,78,527,26],[540,79,527,39,"P2WPKH"],[540,85,527,45],[540,87,528,6],[540,93,528,12],[540,97,528,16,"Error"],[540,102,528,21],[540,103,528,22],[540,147,528,66],[540,148,528,67],[541,6,529,4],[541,13,529,11],[542,8,530,6,"redeemScript"],[542,20,530,18],[542,22,530,6,"redeemScript"],[542,34,530,18],[543,8,531,6,"redeemScriptType"],[543,24,531,22],[543,26,531,24,"_$$_REQUIRE"],[543,37,531,24],[543,38,531,24,"_dependencyMap"],[543,52,531,24],[543,71,531,24,"types"],[543,76,531,24],[543,77,531,37,"P2WSH"],[543,82,531,42],[544,8,532,6,"witnessScript"],[544,21,532,19],[544,23,532,6,"witnessScript"],[544,36,532,19],[545,8,533,6,"witnessScriptType"],[545,25,533,23],[545,27,533,25,"expanded"],[545,35,533,33],[545,36,533,34,"type"],[545,40,533,38],[546,8,534,6,"prevOutType"],[546,19,534,17],[546,21,534,19,"_$$_REQUIRE"],[546,32,534,19],[546,33,534,19,"_dependencyMap"],[546,47,534,19],[546,66,534,19,"types"],[546,71,534,19],[546,72,534,32,"P2SH"],[546,76,534,36],[547,8,535,6,"prevOutScript"],[547,21,535,19],[547,23,535,21,"p2sh"],[547,27,535,25],[547,28,535,26,"output"],[547,34,535,32],[548,8,536,6,"hasWitness"],[548,18,536,16],[548,20,536,18],[548,24,536,22],[549,8,537,6,"signScript"],[549,18,537,16],[549,20,537,6,"signScript"],[549,30,537,16],[550,8,538,6,"signType"],[550,16,538,14],[550,18,538,16,"expanded"],[550,26,538,24],[550,27,538,25,"type"],[550,31,538,29],[551,8,539,6,"pubkeys"],[551,15,539,13],[551,17,539,15,"expanded"],[551,25,539,23],[551,26,539,24,"pubkeys"],[551,33,539,31],[552,8,540,6,"signatures"],[552,18,540,16],[552,20,540,18,"expanded"],[552,28,540,26],[552,29,540,27,"signatures"],[552,39,540,37],[553,8,541,6,"maxSignatures"],[553,21,541,19],[553,23,541,21,"expanded"],[553,31,541,29],[553,32,541,30,"maxSignatures"],[554,6,542,4],[554,7,542,5],[555,4,543,2],[556,4,544,2],[556,8,544,6,"redeemScript"],[556,20,544,18],[556,22,544,20],[557,6,545,4],[557,10,545,10,"p2sh"],[557,15,545,14],[557,18,545,17,"_$$_REQUIRE"],[557,29,545,17],[557,30,545,17,"_dependencyMap"],[557,44,545,17],[557,64,545,26,"p2sh"],[557,68,545,30],[557,69,545,31],[558,8,545,33,"redeem"],[558,14,545,39],[558,16,545,41],[559,10,545,43,"output"],[559,16,545,49],[559,18,545,51,"redeemScript"],[560,8,545,64],[561,6,545,66],[561,7,545,67],[561,8,545,68],[562,6,546,4],[562,10,546,8,"input"],[562,15,546,13],[562,16,546,14,"prevOutScript"],[562,29,546,27],[562,31,546,29],[563,8,547,6],[563,12,547,10,"p2shAlt"],[563,20,547,17],[564,8,548,6],[564,12,548,10],[565,10,549,8,"p2shAlt"],[565,18,549,15],[565,21,549,18,"_$$_REQUIRE"],[565,32,549,18],[565,33,549,18,"_dependencyMap"],[565,47,549,18],[565,67,549,27,"p2sh"],[565,71,549,31],[565,72,549,32],[566,12,549,34,"output"],[566,18,549,40],[566,20,549,42,"input"],[566,25,549,47],[566,26,549,48,"prevOutScript"],[567,10,549,62],[567,11,549,63],[567,12,549,64],[568,8,550,6],[568,9,550,7],[568,10,550,8],[568,17,550,15,"e"],[568,18,550,16],[568,20,550,18],[569,10,551,8],[569,16,551,14],[569,20,551,18,"Error"],[569,25,551,23],[569,26,551,24],[569,54,551,52],[569,55,551,53],[570,8,552,6],[571,8,553,6],[571,12,553,10],[571,13,553,11,"p2sh"],[571,18,553,15],[571,19,553,16,"hash"],[571,23,553,20],[571,24,553,21,"equals"],[571,30,553,27],[571,31,553,28,"p2shAlt"],[571,39,553,35],[571,40,553,36,"hash"],[571,44,553,40],[571,45,553,41],[571,47,554,8],[571,53,554,14],[571,57,554,18,"Error"],[571,62,554,23],[571,63,554,24],[571,110,554,71],[571,111,554,72],[572,6,555,4],[573,6,556,4],[573,10,556,10,"expanded"],[573,20,556,18],[573,23,556,21,"expandOutput"],[573,35,556,33],[573,36,556,34,"p2sh"],[573,41,556,38],[573,42,556,39,"redeem"],[573,48,556,45],[573,49,556,46,"output"],[573,55,556,52],[573,57,556,54,"ourPubKey"],[573,66,556,63],[573,67,556,64],[574,6,557,4],[574,10,557,8],[574,11,557,9,"expanded"],[574,21,557,17],[574,22,557,18,"pubkeys"],[574,29,557,25],[574,31,558,6],[574,37,558,12],[574,41,558,16,"Error"],[574,46,558,21],[574,47,559,8,"expanded"],[574,57,559,16],[574,58,559,17,"type"],[574,62,559,21],[574,65,560,10],[574,99,560,44],[574,102,561,10,"_$$_REQUIRE"],[574,113,561,10],[574,114,561,10,"_dependencyMap"],[574,128,561,10],[574,146,561,18,"toASM"],[574,151,561,23],[574,152,561,24,"redeemScript"],[574,164,561,36],[574,165,561,37],[574,168,562,10],[574,171,563,6],[574,172,563,7],[575,6,564,4],[575,10,564,8,"input"],[575,15,564,13],[575,16,564,14,"signatures"],[575,26,564,24],[575,30,564,28,"input"],[575,35,564,33],[575,36,564,34,"signatures"],[575,46,564,44],[575,47,564,45,"some"],[575,51,564,49],[575,52,564,50],[575,62,564,50,"x"],[575,63,564,51],[576,8,564,51],[576,15,564,55,"x"],[576,16,564,56],[576,21,564,61,"undefined"],[576,30,564,70],[577,6,564,70],[577,8,564,71],[577,10,564,73],[578,8,565,6,"expanded"],[578,18,565,14],[578,19,565,15,"signatures"],[578,29,565,25],[578,32,565,28,"input"],[578,37,565,33],[578,38,565,34,"signatures"],[578,48,565,44],[579,6,566,4],[580,6,567,4],[580,10,567,8,"signScript"],[580,21,567,18],[580,24,567,21,"redeemScript"],[580,36,567,33],[581,6,568,4],[581,10,568,8,"expanded"],[581,20,568,16],[581,21,568,17,"type"],[581,25,568,21],[581,30,568,26,"_$$_REQUIRE"],[581,41,568,26],[581,42,568,26,"_dependencyMap"],[581,56,568,26],[581,75,568,26,"types"],[581,80,568,26],[581,81,568,39,"P2WPKH"],[581,87,568,45],[581,89,568,47],[582,8,569,6,"signScript"],[582,19,569,16],[582,22,569,19,"_$$_REQUIRE"],[582,33,569,19],[582,34,569,19,"_dependencyMap"],[582,48,569,19],[582,68,569,28,"p2pkh"],[582,73,569,33],[582,74,569,34],[583,10,569,36,"pubkey"],[583,16,569,42],[583,18,569,44,"expanded"],[583,28,569,52],[583,29,569,53,"pubkeys"],[583,36,569,60],[583,37,569,61],[583,38,569,62],[584,8,569,64],[584,9,569,65],[584,10,569,66],[584,11,569,67,"output"],[584,17,569,73],[585,6,570,4],[586,6,571,4],[586,13,571,11],[587,8,572,6,"redeemScript"],[587,20,572,18],[587,22,572,6,"redeemScript"],[587,34,572,18],[588,8,573,6,"redeemScriptType"],[588,24,573,22],[588,26,573,24,"expanded"],[588,36,573,32],[588,37,573,33,"type"],[588,41,573,37],[589,8,574,6,"prevOutType"],[589,19,574,17],[589,21,574,19,"_$$_REQUIRE"],[589,32,574,19],[589,33,574,19,"_dependencyMap"],[589,47,574,19],[589,66,574,19,"types"],[589,71,574,19],[589,72,574,32,"P2SH"],[589,76,574,36],[590,8,575,6,"prevOutScript"],[590,21,575,19],[590,23,575,21,"p2sh"],[590,28,575,25],[590,29,575,26,"output"],[590,35,575,32],[591,8,576,6,"hasWitness"],[591,18,576,16],[591,20,576,18,"expanded"],[591,30,576,26],[591,31,576,27,"type"],[591,35,576,31],[591,40,576,36,"_$$_REQUIRE"],[591,51,576,36],[591,52,576,36,"_dependencyMap"],[591,66,576,36],[591,85,576,36,"types"],[591,90,576,36],[591,91,576,49,"P2WPKH"],[591,97,576,55],[592,8,577,6,"signScript"],[592,18,577,16],[592,20,577,6,"signScript"],[592,31,577,16],[593,8,578,6,"signType"],[593,16,578,14],[593,18,578,16,"expanded"],[593,28,578,24],[593,29,578,25,"type"],[593,33,578,29],[594,8,579,6,"pubkeys"],[594,15,579,13],[594,17,579,15,"expanded"],[594,27,579,23],[594,28,579,24,"pubkeys"],[594,35,579,31],[595,8,580,6,"signatures"],[595,18,580,16],[595,20,580,18,"expanded"],[595,30,580,26],[595,31,580,27,"signatures"],[595,41,580,37],[596,8,581,6,"maxSignatures"],[596,21,581,19],[596,23,581,21,"expanded"],[596,33,581,29],[596,34,581,30,"maxSignatures"],[597,6,582,4],[597,7,582,5],[598,4,583,2],[599,4,584,2],[599,8,584,6,"witnessScript"],[599,21,584,19],[599,23,584,21],[600,6,585,4],[600,10,585,10,"p2wsh"],[600,16,585,15],[600,19,585,18,"_$$_REQUIRE"],[600,30,585,18],[600,31,585,18,"_dependencyMap"],[600,45,585,18],[600,65,585,27,"p2wsh"],[600,70,585,32],[600,71,585,33],[601,8,585,35,"redeem"],[601,14,585,41],[601,16,585,43],[602,10,585,45,"output"],[602,16,585,51],[602,18,585,53,"witnessScript"],[603,8,585,67],[604,6,585,69],[604,7,585,70],[604,8,585,71],[605,6,586,4],[605,10,586,8,"input"],[605,15,586,13],[605,16,586,14,"prevOutScript"],[605,29,586,27],[605,31,586,29],[606,8,587,6],[606,12,587,12,"p2wshAlt"],[606,21,587,20],[606,24,587,23,"_$$_REQUIRE"],[606,35,587,23],[606,36,587,23,"_dependencyMap"],[606,50,587,23],[606,70,587,32,"p2wsh"],[606,75,587,37],[606,76,587,38],[607,10,587,40,"output"],[607,16,587,46],[607,18,587,48,"input"],[607,23,587,53],[607,24,587,54,"prevOutScript"],[608,8,587,68],[608,9,587,69],[608,10,587,70],[609,8,588,6],[609,12,588,10],[609,13,588,11,"p2wsh"],[609,19,588,16],[609,20,588,17,"hash"],[609,24,588,21],[609,25,588,22,"equals"],[609,31,588,28],[609,32,588,29,"p2wshAlt"],[609,41,588,37],[609,42,588,38,"hash"],[609,46,588,42],[609,47,588,43],[609,49,589,8],[609,55,589,14],[609,59,589,18,"Error"],[609,64,589,23],[609,65,589,24],[609,113,589,72],[609,114,589,73],[610,6,590,4],[611,6,591,4],[611,10,591,10,"expanded"],[611,20,591,18],[611,23,591,21,"expandOutput"],[611,35,591,33],[611,36,591,34,"p2wsh"],[611,42,591,39],[611,43,591,40,"redeem"],[611,49,591,46],[611,50,591,47,"output"],[611,56,591,53],[611,58,591,55,"ourPubKey"],[611,67,591,64],[611,68,591,65],[612,6,592,4],[612,10,592,8],[612,11,592,9,"expanded"],[612,21,592,17],[612,22,592,18,"pubkeys"],[612,29,592,25],[612,31,593,6],[612,37,593,12],[612,41,593,16,"Error"],[612,46,593,21],[612,47,594,8,"expanded"],[612,57,594,16],[612,58,594,17,"type"],[612,62,594,21],[612,65,595,10],[612,100,595,45],[612,103,596,10,"_$$_REQUIRE"],[612,114,596,10],[612,115,596,10,"_dependencyMap"],[612,129,596,10],[612,147,596,18,"toASM"],[612,152,596,23],[612,153,596,24,"witnessScript"],[612,166,596,37],[612,167,596,38],[612,170,597,10],[612,173,598,6],[612,174,598,7],[613,6,599,4],[613,10,599,8,"input"],[613,15,599,13],[613,16,599,14,"signatures"],[613,26,599,24],[613,30,599,28,"input"],[613,35,599,33],[613,36,599,34,"signatures"],[613,46,599,44],[613,47,599,45,"some"],[613,51,599,49],[613,52,599,50],[613,62,599,50,"x"],[613,63,599,51],[614,8,599,51],[614,15,599,55,"x"],[614,16,599,56],[614,21,599,61,"undefined"],[614,30,599,70],[615,6,599,70],[615,8,599,71],[615,10,599,73],[616,8,600,6,"expanded"],[616,18,600,14],[616,19,600,15,"signatures"],[616,29,600,25],[616,32,600,28,"input"],[616,37,600,33],[616,38,600,34,"signatures"],[616,48,600,44],[617,6,601,4],[618,6,602,4],[618,10,602,10,"signScript"],[618,22,602,20],[618,25,602,23,"witnessScript"],[618,38,602,36],[619,6,603,4],[619,10,603,8,"expanded"],[619,20,603,16],[619,21,603,17,"type"],[619,25,603,21],[619,30,603,26,"_$$_REQUIRE"],[619,41,603,26],[619,42,603,26,"_dependencyMap"],[619,56,603,26],[619,75,603,26,"types"],[619,80,603,26],[619,81,603,39,"P2WPKH"],[619,87,603,45],[619,89,604,6],[619,95,604,12],[619,99,604,16,"Error"],[619,104,604,21],[619,105,604,22],[619,143,604,60],[619,144,604,61],[620,6,605,4],[620,13,605,11],[621,8,606,6,"witnessScript"],[621,21,606,19],[621,23,606,6,"witnessScript"],[621,36,606,19],[622,8,607,6,"witnessScriptType"],[622,25,607,23],[622,27,607,25,"expanded"],[622,37,607,33],[622,38,607,34,"type"],[622,42,607,38],[623,8,608,6,"prevOutType"],[623,19,608,17],[623,21,608,19,"_$$_REQUIRE"],[623,32,608,19],[623,33,608,19,"_dependencyMap"],[623,47,608,19],[623,66,608,19,"types"],[623,71,608,19],[623,72,608,32,"P2WSH"],[623,77,608,37],[624,8,609,6,"prevOutScript"],[624,21,609,19],[624,23,609,21,"p2wsh"],[624,29,609,26],[624,30,609,27,"output"],[624,36,609,33],[625,8,610,6,"hasWitness"],[625,18,610,16],[625,20,610,18],[625,24,610,22],[626,8,611,6,"signScript"],[626,18,611,16],[626,20,611,6,"signScript"],[626,32,611,16],[627,8,612,6,"signType"],[627,16,612,14],[627,18,612,16,"expanded"],[627,28,612,24],[627,29,612,25,"type"],[627,33,612,29],[628,8,613,6,"pubkeys"],[628,15,613,13],[628,17,613,15,"expanded"],[628,27,613,23],[628,28,613,24,"pubkeys"],[628,35,613,31],[629,8,614,6,"signatures"],[629,18,614,16],[629,20,614,18,"expanded"],[629,30,614,26],[629,31,614,27,"signatures"],[629,41,614,37],[630,8,615,6,"maxSignatures"],[630,21,615,19],[630,23,615,21,"expanded"],[630,33,615,29],[630,34,615,30,"maxSignatures"],[631,6,616,4],[631,7,616,5],[632,4,617,2],[633,4,618,2],[633,8,618,6,"input"],[633,13,618,11],[633,14,618,12,"prevOutType"],[633,25,618,23],[633,29,618,27,"input"],[633,34,618,32],[633,35,618,33,"prevOutScript"],[633,48,618,46],[633,50,618,48],[634,6,619,4],[635,6,620,4],[635,10,620,8,"input"],[635,15,620,13],[635,16,620,14,"prevOutType"],[635,27,620,25],[635,32,620,30,"_$$_REQUIRE"],[635,43,620,30],[635,44,620,30,"_dependencyMap"],[635,58,620,30],[635,77,620,30,"types"],[635,82,620,30],[635,83,620,43,"P2SH"],[635,87,620,47],[635,89,621,6],[635,95,621,12],[635,99,621,16,"Error"],[635,104,621,21],[635,105,622,8],[635,124,622,27],[635,127,622,30,"input"],[635,132,622,35],[635,133,622,36,"prevOutType"],[635,144,622,47],[635,147,622,50],[635,172,623,6],[635,173,623,7],[636,6,624,4],[636,10,624,8,"input"],[636,15,624,13],[636,16,624,14,"prevOutType"],[636,27,624,25],[636,32,624,30,"_$$_REQUIRE"],[636,43,624,30],[636,44,624,30,"_dependencyMap"],[636,58,624,30],[636,77,624,30,"types"],[636,82,624,30],[636,83,624,43,"P2WSH"],[636,88,624,48],[636,90,625,6],[636,96,625,12],[636,100,625,16,"Error"],[636,105,625,21],[636,106,626,8],[636,125,626,27],[636,128,626,30,"input"],[636,133,626,35],[636,134,626,36,"prevOutType"],[636,145,626,47],[636,148,626,50],[636,174,627,6],[636,175,627,7],[637,6,628,4],[637,10,628,8],[637,11,628,9,"input"],[637,16,628,14],[637,17,628,15,"prevOutScript"],[637,30,628,28],[637,32,628,30],[637,38,628,36],[637,42,628,40,"Error"],[637,47,628,45],[637,48,628,46],[637,74,628,72],[637,75,628,73],[638,6,629,4],[638,10,629,10,"expanded"],[638,20,629,18],[638,23,629,21,"expandOutput"],[638,35,629,33],[638,36,629,34,"input"],[638,41,629,39],[638,42,629,40,"prevOutScript"],[638,55,629,53],[638,57,629,55,"ourPubKey"],[638,66,629,64],[638,67,629,65],[639,6,630,4],[639,10,630,8],[639,11,630,9,"expanded"],[639,21,630,17],[639,22,630,18,"pubkeys"],[639,29,630,25],[639,31,631,6],[639,37,631,12],[639,41,631,16,"Error"],[639,46,631,21],[639,47,632,8,"expanded"],[639,57,632,16],[639,58,632,17,"type"],[639,62,632,21],[639,65,633,10],[639,83,633,28],[639,86,634,10,"_$$_REQUIRE"],[639,97,634,10],[639,98,634,10,"_dependencyMap"],[639,112,634,10],[639,130,634,18,"toASM"],[639,135,634,23],[639,136,634,24,"input"],[639,141,634,29],[639,142,634,30,"prevOutScript"],[639,155,634,43],[639,156,634,44],[639,159,635,10],[639,162,636,6],[639,163,636,7],[640,6,637,4],[640,10,637,8,"input"],[640,15,637,13],[640,16,637,14,"signatures"],[640,26,637,24],[640,30,637,28,"input"],[640,35,637,33],[640,36,637,34,"signatures"],[640,46,637,44],[640,47,637,45,"some"],[640,51,637,49],[640,52,637,50],[640,62,637,50,"x"],[640,63,637,51],[641,8,637,51],[641,15,637,55,"x"],[641,16,637,56],[641,21,637,61,"undefined"],[641,30,637,70],[642,6,637,70],[642,8,637,71],[642,10,637,73],[643,8,638,6,"expanded"],[643,18,638,14],[643,19,638,15,"signatures"],[643,29,638,25],[643,32,638,28,"input"],[643,37,638,33],[643,38,638,34,"signatures"],[643,48,638,44],[644,6,639,4],[645,6,640,4],[645,10,640,8,"signScript"],[645,22,640,18],[645,25,640,21,"input"],[645,30,640,26],[645,31,640,27,"prevOutScript"],[645,44,640,40],[646,6,641,4],[646,10,641,8,"expanded"],[646,20,641,16],[646,21,641,17,"type"],[646,25,641,21],[646,30,641,26,"_$$_REQUIRE"],[646,41,641,26],[646,42,641,26,"_dependencyMap"],[646,56,641,26],[646,75,641,26,"types"],[646,80,641,26],[646,81,641,39,"P2WPKH"],[646,87,641,45],[646,89,641,47],[647,8,642,6,"signScript"],[647,20,642,16],[647,23,642,19,"_$$_REQUIRE"],[647,34,642,19],[647,35,642,19,"_dependencyMap"],[647,49,642,19],[647,69,642,28,"p2pkh"],[647,74,642,33],[647,75,642,34],[648,10,642,36,"pubkey"],[648,16,642,42],[648,18,642,44,"expanded"],[648,28,642,52],[648,29,642,53,"pubkeys"],[648,36,642,60],[648,37,642,61],[648,38,642,62],[649,8,642,64],[649,9,642,65],[649,10,642,66],[649,11,642,67,"output"],[649,17,642,73],[650,6,643,4],[651,6,644,4],[651,13,644,11],[652,8,645,6,"prevOutType"],[652,19,645,17],[652,21,645,19,"expanded"],[652,31,645,27],[652,32,645,28,"type"],[652,36,645,32],[653,8,646,6,"prevOutScript"],[653,21,646,19],[653,23,646,21,"input"],[653,28,646,26],[653,29,646,27,"prevOutScript"],[653,42,646,40],[654,8,647,6,"hasWitness"],[654,18,647,16],[654,20,647,18,"expanded"],[654,30,647,26],[654,31,647,27,"type"],[654,35,647,31],[654,40,647,36,"_$$_REQUIRE"],[654,51,647,36],[654,52,647,36,"_dependencyMap"],[654,66,647,36],[654,85,647,36,"types"],[654,90,647,36],[654,91,647,49,"P2WPKH"],[654,97,647,55],[655,8,648,6,"signScript"],[655,18,648,16],[655,20,648,6,"signScript"],[655,32,648,16],[656,8,649,6,"signType"],[656,16,649,14],[656,18,649,16,"expanded"],[656,28,649,24],[656,29,649,25,"type"],[656,33,649,29],[657,8,650,6,"pubkeys"],[657,15,650,13],[657,17,650,15,"expanded"],[657,27,650,23],[657,28,650,24,"pubkeys"],[657,35,650,31],[658,8,651,6,"signatures"],[658,18,651,16],[658,20,651,18,"expanded"],[658,30,651,26],[658,31,651,27,"signatures"],[658,41,651,37],[659,8,652,6,"maxSignatures"],[659,21,652,19],[659,23,652,21,"expanded"],[659,33,652,29],[659,34,652,30,"maxSignatures"],[660,6,653,4],[660,7,653,5],[661,4,654,2],[662,4,655,2],[662,8,655,8,"prevOutScript"],[662,21,655,21],[662,24,655,24,"_$$_REQUIRE"],[662,35,655,24],[662,36,655,24,"_dependencyMap"],[662,50,655,24],[662,70,655,33,"p2pkh"],[662,75,655,38],[662,76,655,39],[663,6,655,41,"pubkey"],[663,12,655,47],[663,14,655,49,"ourPubKey"],[664,4,655,59],[664,5,655,60],[664,6,655,61],[664,7,655,62,"output"],[664,13,655,68],[665,4,656,2],[665,11,656,9],[666,6,657,4,"prevOutType"],[666,17,657,15],[666,19,657,17,"_$$_REQUIRE"],[666,30,657,17],[666,31,657,17,"_dependencyMap"],[666,45,657,17],[666,64,657,17,"types"],[666,69,657,17],[666,70,657,30,"P2PKH"],[666,75,657,35],[667,6,658,4,"prevOutScript"],[667,19,658,17],[667,21,658,4,"prevOutScript"],[667,34,658,17],[668,6,659,4,"hasWitness"],[668,16,659,14],[668,18,659,16],[668,23,659,21],[669,6,660,4,"signScript"],[669,16,660,14],[669,18,660,16,"prevOutScript"],[669,31,660,29],[670,6,661,4,"signType"],[670,14,661,12],[670,16,661,14,"_$$_REQUIRE"],[670,27,661,14],[670,28,661,14,"_dependencyMap"],[670,42,661,14],[670,61,661,14,"types"],[670,66,661,14],[670,67,661,27,"P2PKH"],[670,72,661,32],[671,6,662,4,"pubkeys"],[671,13,662,11],[671,15,662,13],[671,16,662,14,"ourPubKey"],[671,25,662,23],[671,26,662,24],[672,6,663,4,"signatures"],[672,16,663,14],[672,18,663,16],[672,19,663,17,"undefined"],[672,28,663,26],[673,4,664,2],[673,5,664,3],[674,2,665,0],[675,2,666,0],[675,11,666,9,"build"],[675,16,666,14,"build"],[675,17,666,15,"type"],[675,21,666,19],[675,23,666,21,"input"],[675,28,666,26],[675,30,666,28,"allowIncomplete"],[675,45,666,43],[675,47,666,45],[676,4,667,2],[676,8,667,8,"pubkeys"],[676,15,667,15],[676,18,667,18,"input"],[676,23,667,23],[676,24,667,24,"pubkeys"],[676,31,667,31],[676,35,667,35],[676,37,667,37],[677,4,668,2],[677,8,668,6,"signatures"],[677,18,668,16],[677,21,668,19,"input"],[677,26,668,24],[677,27,668,25,"signatures"],[677,37,668,35],[677,41,668,39],[677,43,668,41],[678,4,669,2],[678,12,669,10,"type"],[678,16,669,14],[679,6,670,4],[679,11,670,9,"_$$_REQUIRE"],[679,22,670,9],[679,23,670,9,"_dependencyMap"],[679,37,670,9],[679,56,670,9,"types"],[679,61,670,9],[679,62,670,22,"P2PKH"],[679,67,670,27],[680,8,670,29],[681,10,671,6],[681,14,671,10,"pubkeys"],[681,21,671,17],[681,22,671,18,"length"],[681,28,671,24],[681,33,671,29],[681,34,671,30],[681,36,671,32],[682,10,672,6],[682,14,672,10,"signatures"],[682,24,672,20],[682,25,672,21,"length"],[682,31,672,27],[682,36,672,32],[682,37,672,33],[682,39,672,35],[683,10,673,6],[683,17,673,13,"_$$_REQUIRE"],[683,28,673,13],[683,29,673,13,"_dependencyMap"],[683,43,673,13],[683,63,673,22,"p2pkh"],[683,68,673,27],[683,69,673,28],[684,12,673,30,"pubkey"],[684,18,673,36],[684,20,673,38,"pubkeys"],[684,27,673,45],[684,28,673,46],[684,29,673,47],[684,30,673,48],[685,12,673,50,"signature"],[685,21,673,59],[685,23,673,61,"signatures"],[685,33,673,71],[685,34,673,72],[685,35,673,73],[686,10,673,75],[686,11,673,76],[686,12,673,77],[687,8,674,4],[688,6,675,4],[688,11,675,9,"_$$_REQUIRE"],[688,22,675,9],[688,23,675,9,"_dependencyMap"],[688,37,675,9],[688,56,675,9,"types"],[688,61,675,9],[688,62,675,22,"P2WPKH"],[688,68,675,28],[689,8,675,30],[690,10,676,6],[690,14,676,10,"pubkeys"],[690,21,676,17],[690,22,676,18,"length"],[690,28,676,24],[690,33,676,29],[690,34,676,30],[690,36,676,32],[691,10,677,6],[691,14,677,10,"signatures"],[691,24,677,20],[691,25,677,21,"length"],[691,31,677,27],[691,36,677,32],[691,37,677,33],[691,39,677,35],[692,10,678,6],[692,17,678,13,"_$$_REQUIRE"],[692,28,678,13],[692,29,678,13,"_dependencyMap"],[692,43,678,13],[692,63,678,22,"p2wpkh"],[692,69,678,28],[692,70,678,29],[693,12,678,31,"pubkey"],[693,18,678,37],[693,20,678,39,"pubkeys"],[693,27,678,46],[693,28,678,47],[693,29,678,48],[693,30,678,49],[694,12,678,51,"signature"],[694,21,678,60],[694,23,678,62,"signatures"],[694,33,678,72],[694,34,678,73],[694,35,678,74],[695,10,678,76],[695,11,678,77],[695,12,678,78],[696,8,679,4],[697,6,680,4],[697,11,680,9,"_$$_REQUIRE"],[697,22,680,9],[697,23,680,9,"_dependencyMap"],[697,37,680,9],[697,56,680,9,"types"],[697,61,680,9],[697,62,680,22,"P2PK"],[697,66,680,26],[698,8,680,28],[699,10,681,6],[699,14,681,10,"pubkeys"],[699,21,681,17],[699,22,681,18,"length"],[699,28,681,24],[699,33,681,29],[699,34,681,30],[699,36,681,32],[700,10,682,6],[700,14,682,10,"signatures"],[700,24,682,20],[700,25,682,21,"length"],[700,31,682,27],[700,36,682,32],[700,37,682,33],[700,39,682,35],[701,10,683,6],[701,17,683,13,"_$$_REQUIRE"],[701,28,683,13],[701,29,683,13,"_dependencyMap"],[701,43,683,13],[701,63,683,22,"p2pk"],[701,67,683,26],[701,68,683,27],[702,12,683,29,"signature"],[702,21,683,38],[702,23,683,40,"signatures"],[702,33,683,50],[702,34,683,51],[702,35,683,52],[703,10,683,54],[703,11,683,55],[703,12,683,56],[704,8,684,4],[705,6,685,4],[705,11,685,9,"_$$_REQUIRE"],[705,22,685,9],[705,23,685,9,"_dependencyMap"],[705,37,685,9],[705,56,685,9,"types"],[705,61,685,9],[705,62,685,22,"P2MS"],[705,66,685,26],[706,8,685,28],[707,10,686,6],[707,14,686,12,"m"],[707,15,686,13],[707,18,686,16,"input"],[707,23,686,21],[707,24,686,22,"maxSignatures"],[707,37,686,35],[708,10,687,6],[708,14,687,10,"allowIncomplete"],[708,29,687,25],[708,31,687,27],[709,12,688,8,"signatures"],[709,22,688,18],[709,25,688,21,"signatures"],[709,35,688,31],[709,36,688,32,"map"],[709,39,688,35],[709,40,688,36],[709,50,688,36,"x"],[709,51,688,37],[710,14,688,37],[710,21,688,41,"x"],[710,22,688,42],[710,26,688,46,"_$$_REQUIRE"],[710,37,688,46],[710,38,688,46,"_dependencyMap"],[710,52,688,46],[710,70,688,55,"OPS"],[710,73,688,58],[710,74,688,59,"OP_0"],[710,78,688,63],[711,12,688,63],[711,14,688,64],[712,10,689,6],[712,11,689,7],[712,17,689,13],[713,12,690,8,"signatures"],[713,22,690,18],[713,25,690,21,"signatures"],[713,35,690,31],[713,36,690,32,"filter"],[713,42,690,38],[713,43,690,39],[713,53,690,39,"x"],[713,54,690,40],[714,14,690,40],[714,21,690,44,"x"],[714,22,690,45],[715,12,690,45],[715,14,690,46],[716,10,691,6],[717,10,692,6],[718,10,693,6],[719,10,694,6],[719,14,694,12,"validate"],[719,22,694,20],[719,25,694,23],[719,26,694,24,"allowIncomplete"],[719,41,694,39],[719,45,694,43,"m"],[719,46,694,44],[719,51,694,49,"signatures"],[719,61,694,59],[719,62,694,60,"length"],[719,68,694,66],[720,10,695,6],[720,17,695,13,"_$$_REQUIRE"],[720,28,695,13],[720,29,695,13,"_dependencyMap"],[720,43,695,13],[720,63,695,22,"p2ms"],[720,67,695,26],[720,68,696,8],[721,12,696,10,"m"],[721,13,696,11],[721,15,696,10,"m"],[721,16,696,11],[722,12,696,13,"pubkeys"],[722,19,696,20],[722,21,696,13,"pubkeys"],[722,28,696,20],[723,12,696,22,"signatures"],[723,22,696,32],[723,24,696,22,"signatures"],[724,10,696,33],[724,11,696,34],[724,13,697,8],[725,12,697,10,"allowIncomplete"],[725,27,697,25],[725,29,697,10,"allowIncomplete"],[725,44,697,25],[726,12,697,27,"validate"],[726,20,697,35],[726,22,697,27,"validate"],[727,10,697,36],[727,11,698,6],[727,12,698,7],[728,8,699,4],[729,6,700,4],[729,11,700,9,"_$$_REQUIRE"],[729,22,700,9],[729,23,700,9,"_dependencyMap"],[729,37,700,9],[729,56,700,9,"types"],[729,61,700,9],[729,62,700,22,"P2SH"],[729,66,700,26],[730,8,700,28],[731,10,701,6],[731,14,701,12,"redeem"],[731,20,701,18],[731,23,701,21,"build"],[731,28,701,26],[731,29,701,27,"input"],[731,34,701,32],[731,35,701,33,"redeemScriptType"],[731,51,701,49],[731,53,701,51,"input"],[731,58,701,56],[731,60,701,58,"allowIncomplete"],[731,75,701,73],[731,76,701,74],[732,10,702,6],[732,14,702,10],[732,15,702,11,"redeem"],[732,21,702,17],[732,23,702,19],[733,10,703,6],[733,17,703,13,"_$$_REQUIRE"],[733,28,703,13],[733,29,703,13,"_dependencyMap"],[733,43,703,13],[733,63,703,22,"p2sh"],[733,67,703,26],[733,68,703,27],[734,12,704,8,"redeem"],[734,18,704,14],[734,20,704,16],[735,14,705,10,"output"],[735,20,705,16],[735,22,705,18,"redeem"],[735,28,705,24],[735,29,705,25,"output"],[735,35,705,31],[735,39,705,35,"input"],[735,44,705,40],[735,45,705,41,"redeemScript"],[735,57,705,53],[736,14,706,10,"input"],[736,19,706,15],[736,21,706,17,"redeem"],[736,27,706,23],[736,28,706,24,"input"],[736,33,706,29],[737,14,707,10,"witness"],[737,21,707,17],[737,23,707,19,"redeem"],[737,29,707,25],[737,30,707,26,"witness"],[738,12,708,8],[739,10,709,6],[739,11,709,7],[739,12,709,8],[740,8,710,4],[741,6,711,4],[741,11,711,9,"_$$_REQUIRE"],[741,22,711,9],[741,23,711,9,"_dependencyMap"],[741,37,711,9],[741,56,711,9,"types"],[741,61,711,9],[741,62,711,22,"P2WSH"],[741,67,711,27],[742,8,711,29],[743,10,712,6],[743,14,712,12,"redeem"],[743,22,712,18],[743,25,712,21,"build"],[743,30,712,26],[743,31,712,27,"input"],[743,36,712,32],[743,37,712,33,"witnessScriptType"],[743,54,712,50],[743,56,712,52,"input"],[743,61,712,57],[743,63,712,59,"allowIncomplete"],[743,78,712,74],[743,79,712,75],[744,10,713,6],[744,14,713,10],[744,15,713,11,"redeem"],[744,23,713,17],[744,25,713,19],[745,10,714,6],[745,17,714,13,"_$$_REQUIRE"],[745,28,714,13],[745,29,714,13,"_dependencyMap"],[745,43,714,13],[745,63,714,22,"p2wsh"],[745,68,714,27],[745,69,714,28],[746,12,715,8,"redeem"],[746,18,715,14],[746,20,715,16],[747,14,716,10,"output"],[747,20,716,16],[747,22,716,18,"input"],[747,27,716,23],[747,28,716,24,"witnessScript"],[747,41,716,37],[748,14,717,10,"input"],[748,19,717,15],[748,21,717,17,"redeem"],[748,29,717,23],[748,30,717,24,"input"],[748,35,717,29],[749,14,718,10,"witness"],[749,21,718,17],[749,23,718,19,"redeem"],[749,31,718,25],[749,32,718,26,"witness"],[750,12,719,8],[751,10,720,6],[751,11,720,7],[751,12,720,8],[752,8,721,4],[753,4,722,2],[754,2,723,0],[755,2,724,0],[755,11,724,9,"canSign"],[755,18,724,16,"canSign"],[755,19,724,17,"input"],[755,24,724,22],[755,26,724,24],[756,4,725,2],[756,11,726,4,"input"],[756,16,726,9],[756,17,726,10,"signScript"],[756,27,726,20],[756,32,726,25,"undefined"],[756,41,726,34],[756,45,727,4,"input"],[756,50,727,9],[756,51,727,10,"signType"],[756,59,727,18],[756,64,727,23,"undefined"],[756,73,727,32],[756,77,728,4,"input"],[756,82,728,9],[756,83,728,10,"pubkeys"],[756,90,728,17],[756,95,728,22,"undefined"],[756,104,728,31],[756,108,729,4,"input"],[756,113,729,9],[756,114,729,10,"signatures"],[756,124,729,20],[756,129,729,25,"undefined"],[756,138,729,34],[756,142,730,4,"input"],[756,147,730,9],[756,148,730,10,"signatures"],[756,158,730,20],[756,159,730,21,"length"],[756,165,730,27],[756,170,730,32,"input"],[756,175,730,37],[756,176,730,38,"pubkeys"],[756,183,730,45],[756,184,730,46,"length"],[756,190,730,52],[756,194,731,4,"input"],[756,199,731,9],[756,200,731,10,"pubkeys"],[756,207,731,17],[756,208,731,18,"length"],[756,214,731,24],[756,217,731,27],[756,218,731,28],[756,223,732,5,"input"],[756,228,732,10],[756,229,732,11,"hasWitness"],[756,239,732,21],[756,244,732,26],[756,249,732,31],[756,253,732,35,"input"],[756,258,732,40],[756,259,732,41,"value"],[756,264,732,46],[756,269,732,51,"undefined"],[756,278,732,60],[756,279,732,61],[757,2,734,0],[758,2,735,0],[758,11,735,9,"signatureHashType"],[758,28,735,26,"signatureHashType"],[758,29,735,27,"buffer"],[758,35,735,33],[758,37,735,35],[759,4,736,2],[759,11,736,9,"buffer"],[759,17,736,15],[759,18,736,16,"readUInt8"],[759,27,736,25],[759,28,736,26,"buffer"],[759,34,736,32],[759,35,736,33,"length"],[759,41,736,39],[759,44,736,42],[759,45,736,43],[759,46,736,44],[760,2,737,0],[761,2,738,0],[761,11,738,9,"checkSignArgs"],[761,24,738,22,"checkSignArgs"],[761,25,738,23,"inputs"],[761,31,738,29],[761,33,738,31,"signParams"],[761,43,738,41],[761,45,738,43],[762,4,739,2],[762,8,739,6],[762,9,739,7,"PREVOUT_TYPES"],[762,22,739,20],[762,23,739,21,"has"],[762,26,739,24],[762,27,739,25,"signParams"],[762,37,739,35],[762,38,739,36,"prevOutScriptType"],[762,55,739,53],[762,56,739,54],[762,58,739,56],[763,6,740,4],[763,12,740,10],[763,16,740,14,"TypeError"],[763,25,740,23],[763,26,741,6],[763,56,741,36,"signParams"],[763,66,741,46],[763,67,741,47,"prevOutScriptType"],[763,84,741,64],[763,87,742,4],[763,88,742,5],[764,4,743,2],[765,4,744,2,"tfMessage"],[765,13,744,11],[765,14,745,4,"_$$_REQUIRE"],[765,25,745,4],[765,26,745,4,"_dependencyMap"],[765,40,745,4],[765,58,745,14,"Number"],[765,64,745,20],[765,66,746,4,"signParams"],[765,76,746,14],[765,77,746,15,"vin"],[765,80,746,18],[765,82,747,4],[765,139,748,2],[765,140,748,3],[766,4,749,2,"tfMessage"],[766,13,749,11],[766,14,750,4,"_$$_REQUIRE"],[766,25,750,4],[766,26,750,4,"_dependencyMap"],[766,40,750,4],[766,56,750,10,"Signer"],[766,62,750,16],[766,64,751,4,"signParams"],[766,74,751,14],[766,75,751,15,"keyPair"],[766,82,751,22],[766,84,752,4],[766,141,753,2],[766,142,753,3],[767,4,754,2,"tfMessage"],[767,13,754,11],[767,14,755,4,"_$$_REQUIRE"],[767,25,755,4],[767,26,755,4,"_dependencyMap"],[767,40,755,4],[767,58,755,14,"maybe"],[767,63,755,19],[767,64,755,20,"_$$_REQUIRE"],[767,75,755,20],[767,76,755,20,"_dependencyMap"],[767,90,755,20],[767,108,755,30,"Number"],[767,114,755,36],[767,115,755,37],[767,117,756,4,"signParams"],[767,127,756,14],[767,128,756,15,"hashType"],[767,136,756,23],[767,138,757,4],[767,180,758,2],[767,181,758,3],[768,4,759,2],[768,8,759,8,"prevOutType"],[768,19,759,19],[768,22,759,22],[768,23,759,23,"inputs"],[768,29,759,29],[768,30,759,30,"signParams"],[768,40,759,40],[768,41,759,41,"vin"],[768,44,759,44],[768,45,759,45],[768,49,759,49],[768,51,759,51],[768,53,759,53,"prevOutType"],[768,64,759,64],[769,4,760,2],[769,8,760,8,"posType"],[769,15,760,15],[769,18,760,18,"signParams"],[769,28,760,28],[769,29,760,29,"prevOutScriptType"],[769,46,760,46],[770,4,761,2],[770,12,761,10,"posType"],[770,19,761,17],[771,6,762,4],[771,11,762,9],[771,18,762,16],[772,8,763,6],[772,12,763,10,"prevOutType"],[772,23,763,21],[772,27,763,25,"prevOutType"],[772,38,763,36],[772,43,763,41],[772,55,763,53],[772,57,763,55],[773,10,764,8],[773,16,764,14],[773,20,764,18,"TypeError"],[773,29,764,27],[773,30,765,10],[773,40,765,20,"signParams"],[773,50,765,30],[773,51,765,31,"vin"],[773,54,765,34],[773,80,765,60,"prevOutType"],[773,91,765,71],[773,93,766,8],[773,94,766,9],[774,8,767,6],[775,8,768,6,"tfMessage"],[775,17,768,15],[775,18,769,8,"_$$_REQUIRE"],[775,29,769,8],[775,30,769,8,"_dependencyMap"],[775,44,769,8],[775,62,769,18,"value"],[775,67,769,23],[775,68,769,24,"undefined"],[775,77,769,33],[775,78,769,34],[775,80,770,8,"signParams"],[775,90,770,18],[775,91,770,19,"witnessScript"],[775,104,770,32],[775,106,771,8],[775,109,771,11,"posType"],[775,116,771,18],[775,144,772,6],[775,145,772,7],[776,8,773,6,"tfMessage"],[776,17,773,15],[776,18,774,8,"_$$_REQUIRE"],[776,29,774,8],[776,30,774,8,"_dependencyMap"],[776,44,774,8],[776,62,774,18,"value"],[776,67,774,23],[776,68,774,24,"undefined"],[776,77,774,33],[776,78,774,34],[776,80,775,8,"signParams"],[776,90,775,18],[776,91,775,19,"redeemScript"],[776,103,775,31],[776,105,776,8],[776,108,776,11,"posType"],[776,115,776,18],[776,142,777,6],[776,143,777,7],[777,8,778,6,"tfMessage"],[777,17,778,15],[777,18,779,8,"_$$_REQUIRE"],[777,29,779,8],[777,30,779,8,"_dependencyMap"],[777,44,779,8],[777,62,779,18,"value"],[777,67,779,23],[777,68,779,24,"undefined"],[777,77,779,33],[777,78,779,34],[777,80,780,8,"signParams"],[777,90,780,18],[777,91,780,19,"witnessValue"],[777,103,780,31],[777,105,781,8],[777,108,781,11,"posType"],[777,115,781,18],[777,142,782,6],[777,143,782,7],[778,8,783,6],[779,6,784,4],[779,11,784,9],[779,17,784,15],[780,8,785,6],[780,12,785,10,"prevOutType"],[780,23,785,21],[780,27,785,25,"prevOutType"],[780,38,785,36],[780,43,785,41],[780,51,785,49],[780,53,785,51],[781,10,786,8],[781,16,786,14],[781,20,786,18,"TypeError"],[781,29,786,27],[781,30,787,10],[781,40,787,20,"signParams"],[781,50,787,30],[781,51,787,31,"vin"],[781,54,787,34],[781,79,787,59,"prevOutType"],[781,90,787,70],[781,92,788,8],[781,93,788,9],[782,8,789,6],[783,8,790,6,"tfMessage"],[783,17,790,15],[783,18,791,8,"_$$_REQUIRE"],[783,29,791,8],[783,30,791,8,"_dependencyMap"],[783,44,791,8],[783,62,791,18,"value"],[783,67,791,23],[783,68,791,24,"undefined"],[783,77,791,33],[783,78,791,34],[783,80,792,8,"signParams"],[783,90,792,18],[783,91,792,19,"witnessScript"],[783,104,792,32],[783,106,793,8],[783,109,793,11,"posType"],[783,116,793,18],[783,144,794,6],[783,145,794,7],[784,8,795,6,"tfMessage"],[784,17,795,15],[784,18,796,8,"_$$_REQUIRE"],[784,29,796,8],[784,30,796,8,"_dependencyMap"],[784,44,796,8],[784,62,796,18,"value"],[784,67,796,23],[784,68,796,24,"undefined"],[784,77,796,33],[784,78,796,34],[784,80,797,8,"signParams"],[784,90,797,18],[784,91,797,19,"redeemScript"],[784,103,797,31],[784,105,798,8],[784,108,798,11,"posType"],[784,115,798,18],[784,142,799,6],[784,143,799,7],[785,8,800,6,"tfMessage"],[785,17,800,15],[785,18,801,8,"_$$_REQUIRE"],[785,29,801,8],[785,30,801,8,"_dependencyMap"],[785,44,801,8],[785,62,801,18,"value"],[785,67,801,23],[785,68,801,24,"undefined"],[785,77,801,33],[785,78,801,34],[785,80,802,8,"signParams"],[785,90,802,18],[785,91,802,19,"witnessValue"],[785,103,802,31],[785,105,803,8],[785,108,803,11,"posType"],[785,115,803,18],[785,142,804,6],[785,143,804,7],[786,8,805,6],[787,6,806,4],[787,11,806,9],[787,19,806,17],[788,8,807,6],[788,12,807,10,"prevOutType"],[788,23,807,21],[788,27,807,25,"prevOutType"],[788,38,807,36],[788,43,807,41],[788,62,807,60],[788,64,807,62],[789,10,808,8],[789,16,808,14],[789,20,808,18,"TypeError"],[789,29,808,27],[789,30,809,10],[789,40,809,20,"signParams"],[789,50,809,30],[789,51,809,31,"vin"],[789,54,809,34],[789,81,809,61,"prevOutType"],[789,92,809,72],[789,94,810,8],[789,95,810,9],[790,8,811,6],[791,8,812,6,"tfMessage"],[791,17,812,15],[791,18,813,8,"_$$_REQUIRE"],[791,29,813,8],[791,30,813,8,"_dependencyMap"],[791,44,813,8],[791,62,813,18,"value"],[791,67,813,23],[791,68,813,24,"undefined"],[791,77,813,33],[791,78,813,34],[791,80,814,8,"signParams"],[791,90,814,18],[791,91,814,19,"witnessScript"],[791,104,814,32],[791,106,815,8],[791,109,815,11,"posType"],[791,116,815,18],[791,144,816,6],[791,145,816,7],[792,8,817,6,"tfMessage"],[792,17,817,15],[792,18,818,8,"_$$_REQUIRE"],[792,29,818,8],[792,30,818,8,"_dependencyMap"],[792,44,818,8],[792,62,818,18,"value"],[792,67,818,23],[792,68,818,24,"undefined"],[792,77,818,33],[792,78,818,34],[792,80,819,8,"signParams"],[792,90,819,18],[792,91,819,19,"redeemScript"],[792,103,819,31],[792,105,820,8],[792,108,820,11,"posType"],[792,115,820,18],[792,142,821,6],[792,143,821,7],[793,8,822,6,"tfMessage"],[793,17,822,15],[793,18,823,8,"_$$_REQUIRE"],[793,29,823,8],[793,30,823,8,"_dependencyMap"],[793,44,823,8],[793,60,823,14,"Satoshi"],[793,67,823,21],[793,69,824,8,"signParams"],[793,79,824,18],[793,80,824,19,"witnessValue"],[793,92,824,31],[793,94,825,8],[793,97,825,11,"posType"],[793,104,825,18],[793,128,826,6],[793,129,826,7],[794,8,827,6],[795,6,828,4],[795,11,828,9],[795,17,828,15],[796,8,829,6],[796,12,829,10,"prevOutType"],[796,23,829,21],[796,27,829,25,"prevOutType"],[796,38,829,36],[796,43,829,41],[796,53,829,51],[796,55,829,53],[797,10,830,8],[797,16,830,14],[797,20,830,18,"TypeError"],[797,29,830,27],[797,30,831,10],[797,40,831,20,"signParams"],[797,50,831,30],[797,51,831,31,"vin"],[797,54,831,34],[797,79,831,59,"prevOutType"],[797,90,831,70],[797,92,832,8],[797,93,832,9],[798,8,833,6],[799,8,834,6,"tfMessage"],[799,17,834,15],[799,18,835,8,"_$$_REQUIRE"],[799,29,835,8],[799,30,835,8,"_dependencyMap"],[799,44,835,8],[799,62,835,18,"value"],[799,67,835,23],[799,68,835,24,"undefined"],[799,77,835,33],[799,78,835,34],[799,80,836,8,"signParams"],[799,90,836,18],[799,91,836,19,"witnessScript"],[799,104,836,32],[799,106,837,8],[799,109,837,11,"posType"],[799,116,837,18],[799,144,838,6],[799,145,838,7],[800,8,839,6,"tfMessage"],[800,17,839,15],[800,18,840,8,"_$$_REQUIRE"],[800,29,840,8],[800,30,840,8,"_dependencyMap"],[800,44,840,8],[800,62,840,18,"value"],[800,67,840,23],[800,68,840,24,"undefined"],[800,77,840,33],[800,78,840,34],[800,80,841,8,"signParams"],[800,90,841,18],[800,91,841,19,"redeemScript"],[800,103,841,31],[800,105,842,8],[800,108,842,11,"posType"],[800,115,842,18],[800,142,843,6],[800,143,843,7],[801,8,844,6,"tfMessage"],[801,17,844,15],[801,18,845,8,"_$$_REQUIRE"],[801,29,845,8],[801,30,845,8,"_dependencyMap"],[801,44,845,8],[801,62,845,18,"value"],[801,67,845,23],[801,68,845,24,"undefined"],[801,77,845,33],[801,78,845,34],[801,80,846,8,"signParams"],[801,90,846,18],[801,91,846,19,"witnessValue"],[801,103,846,31],[801,105,847,8],[801,108,847,11,"posType"],[801,115,847,18],[801,142,848,6],[801,143,848,7],[802,8,849,6],[803,6,850,4],[803,11,850,9],[803,24,850,22],[804,8,851,6],[804,12,851,10,"prevOutType"],[804,23,851,21],[804,27,851,25,"prevOutType"],[804,38,851,36],[804,43,851,41],[804,55,851,53],[804,57,851,55],[805,10,852,8],[805,16,852,14],[805,20,852,18,"TypeError"],[805,29,852,27],[805,30,853,10],[805,40,853,20,"signParams"],[805,50,853,30],[805,51,853,31,"vin"],[805,54,853,34],[805,86,853,66,"prevOutType"],[805,97,853,77],[805,99,854,8],[805,100,854,9],[806,8,855,6],[807,8,856,6,"tfMessage"],[807,17,856,15],[807,18,857,8,"_$$_REQUIRE"],[807,29,857,8],[807,30,857,8,"_dependencyMap"],[807,44,857,8],[807,62,857,18,"value"],[807,67,857,23],[807,68,857,24,"undefined"],[807,77,857,33],[807,78,857,34],[807,80,858,8,"signParams"],[807,90,858,18],[807,91,858,19,"witnessScript"],[807,104,858,32],[807,106,859,8],[807,109,859,11,"posType"],[807,116,859,18],[807,144,860,6],[807,145,860,7],[808,8,861,6,"tfMessage"],[808,17,861,15],[808,18,862,8,"_$$_REQUIRE"],[808,29,862,8],[808,30,862,8,"_dependencyMap"],[808,44,862,8],[808,62,862,18,"Buffer"],[808,68,862,24],[808,70,863,8,"signParams"],[808,80,863,18],[808,81,863,19,"redeemScript"],[808,93,863,31],[808,95,864,8],[808,98,864,11,"posType"],[808,105,864,18],[808,129,865,6],[808,130,865,7],[809,8,866,6,"tfMessage"],[809,17,866,15],[809,18,867,8,"_$$_REQUIRE"],[809,29,867,8],[809,30,867,8,"_dependencyMap"],[809,44,867,8],[809,60,867,14,"Satoshi"],[809,67,867,21],[809,69,868,8,"signParams"],[809,79,868,18],[809,80,868,19,"witnessValue"],[809,92,868,31],[809,94,869,8],[809,97,869,11,"posType"],[809,104,869,18],[809,128,870,6],[809,129,870,7],[810,8,871,6],[811,6,872,4],[811,11,872,9],[811,22,872,20],[812,6,873,4],[812,11,873,9],[812,22,873,20],[813,6,874,4],[813,11,874,9],[813,23,874,21],[814,8,875,6],[814,12,875,10,"prevOutType"],[814,23,875,21],[814,27,875,25,"prevOutType"],[814,38,875,36],[814,43,875,41],[814,55,875,53],[814,57,875,55],[815,10,876,8],[815,16,876,14],[815,20,876,18,"TypeError"],[815,29,876,27],[815,30,877,10],[815,40,877,20,"signParams"],[815,50,877,30],[815,51,877,31,"vin"],[815,54,877,34],[815,73,877,53,"posType"],[815,80,877,60],[815,85,877,65,"prevOutType"],[815,96,877,76],[815,98,878,8],[815,99,878,9],[816,8,879,6],[817,8,880,6,"tfMessage"],[817,17,880,15],[817,18,881,8,"_$$_REQUIRE"],[817,29,881,8],[817,30,881,8,"_dependencyMap"],[817,44,881,8],[817,62,881,18,"value"],[817,67,881,23],[817,68,881,24,"undefined"],[817,77,881,33],[817,78,881,34],[817,80,882,8,"signParams"],[817,90,882,18],[817,91,882,19,"witnessScript"],[817,104,882,32],[817,106,883,8],[817,109,883,11,"posType"],[817,116,883,18],[817,144,884,6],[817,145,884,7],[818,8,885,6,"tfMessage"],[818,17,885,15],[818,18,886,8,"_$$_REQUIRE"],[818,29,886,8],[818,30,886,8,"_dependencyMap"],[818,44,886,8],[818,62,886,18,"Buffer"],[818,68,886,24],[818,70,887,8,"signParams"],[818,80,887,18],[818,81,887,19,"redeemScript"],[818,93,887,31],[818,95,888,8],[818,98,888,11,"posType"],[818,105,888,18],[818,129,889,6],[818,130,889,7],[819,8,890,6,"tfMessage"],[819,17,890,15],[819,18,891,8,"_$$_REQUIRE"],[819,29,891,8],[819,30,891,8,"_dependencyMap"],[819,44,891,8],[819,62,891,18,"value"],[819,67,891,23],[819,68,891,24,"undefined"],[819,77,891,33],[819,78,891,34],[819,80,892,8,"signParams"],[819,90,892,18],[819,91,892,19,"witnessValue"],[819,103,892,31],[819,105,893,8],[819,108,893,11,"posType"],[819,115,893,18],[819,142,894,6],[819,143,894,7],[820,8,895,6],[821,6,896,4],[821,11,896,9],[821,23,896,21],[822,6,897,4],[822,11,897,9],[822,23,897,21],[823,6,898,4],[823,11,898,9],[823,24,898,22],[824,8,899,6],[824,12,899,10,"prevOutType"],[824,23,899,21],[824,27,899,25,"prevOutType"],[824,38,899,36],[824,43,899,41],[824,62,899,60],[824,64,899,62],[825,10,900,8],[825,16,900,14],[825,20,900,18,"TypeError"],[825,29,900,27],[825,30,901,10],[825,40,901,20,"signParams"],[825,50,901,30],[825,51,901,31,"vin"],[825,54,901,34],[825,73,901,53,"posType"],[825,80,901,60],[825,85,901,65,"prevOutType"],[825,96,901,76],[825,98,902,8],[825,99,902,9],[826,8,903,6],[827,8,904,6,"tfMessage"],[827,17,904,15],[827,18,905,8,"_$$_REQUIRE"],[827,29,905,8],[827,30,905,8,"_dependencyMap"],[827,44,905,8],[827,62,905,18,"Buffer"],[827,68,905,24],[827,70,906,8,"signParams"],[827,80,906,18],[827,81,906,19,"witnessScript"],[827,94,906,32],[827,96,907,8],[827,99,907,11,"posType"],[827,106,907,18],[827,131,908,6],[827,132,908,7],[828,8,909,6,"tfMessage"],[828,17,909,15],[828,18,910,8,"_$$_REQUIRE"],[828,29,910,8],[828,30,910,8,"_dependencyMap"],[828,44,910,8],[828,62,910,18,"value"],[828,67,910,23],[828,68,910,24,"undefined"],[828,77,910,33],[828,78,910,34],[828,80,911,8,"signParams"],[828,90,911,18],[828,91,911,19,"redeemScript"],[828,103,911,31],[828,105,912,8],[828,108,912,11,"posType"],[828,115,912,18],[828,142,913,6],[828,143,913,7],[829,8,914,6,"tfMessage"],[829,17,914,15],[829,18,915,8,"_$$_REQUIRE"],[829,29,915,8],[829,30,915,8,"_dependencyMap"],[829,44,915,8],[829,60,915,14,"Satoshi"],[829,67,915,21],[829,69,916,8,"signParams"],[829,79,916,18],[829,80,916,19,"witnessValue"],[829,92,916,31],[829,94,917,8],[829,97,917,11,"posType"],[829,104,917,18],[829,128,918,6],[829,129,918,7],[830,8,919,6],[831,6,920,4],[831,11,920,9],[831,28,920,26],[832,6,921,4],[832,11,921,9],[832,28,921,26],[833,6,922,4],[833,11,922,9],[833,29,922,27],[834,8,923,6],[834,12,923,10,"prevOutType"],[834,23,923,21],[834,27,923,25,"prevOutType"],[834,38,923,36],[834,43,923,41],[834,55,923,53],[834,57,923,55],[835,10,924,8],[835,16,924,14],[835,20,924,18,"TypeError"],[835,29,924,27],[835,30,925,10],[835,40,925,20,"signParams"],[835,50,925,30],[835,51,925,31,"vin"],[835,54,925,34],[835,73,925,53,"posType"],[835,80,925,60],[835,85,925,65,"prevOutType"],[835,96,925,76],[835,98,926,8],[835,99,926,9],[836,8,927,6],[837,8,928,6,"tfMessage"],[837,17,928,15],[837,18,929,8,"_$$_REQUIRE"],[837,29,929,8],[837,30,929,8,"_dependencyMap"],[837,44,929,8],[837,62,929,18,"Buffer"],[837,68,929,24],[837,70,930,8,"signParams"],[837,80,930,18],[837,81,930,19,"witnessScript"],[837,94,930,32],[837,96,931,8],[837,99,931,11,"posType"],[837,106,931,18],[837,131,932,6],[837,132,932,7],[838,8,933,6,"tfMessage"],[838,17,933,15],[838,18,934,8,"_$$_REQUIRE"],[838,29,934,8],[838,30,934,8,"_dependencyMap"],[838,44,934,8],[838,62,934,18,"Buffer"],[838,68,934,24],[838,70,935,8,"signParams"],[838,80,935,18],[838,81,935,19,"redeemScript"],[838,93,935,31],[838,95,936,8],[838,98,936,11,"posType"],[838,105,936,18],[838,130,937,6],[838,131,937,7],[839,8,938,6,"tfMessage"],[839,17,938,15],[839,18,939,8,"_$$_REQUIRE"],[839,29,939,8],[839,30,939,8,"_dependencyMap"],[839,44,939,8],[839,60,939,14,"Satoshi"],[839,67,939,21],[839,69,940,8,"signParams"],[839,79,940,18],[839,80,940,19,"witnessValue"],[839,92,940,31],[839,94,941,8],[839,97,941,11,"posType"],[839,104,941,18],[839,129,942,6],[839,130,942,7],[840,8,943,6],[841,4,944,2],[842,2,945,0],[843,2,946,0],[843,11,946,9,"trySign"],[843,18,946,16,"trySign"],[843,19,946,16,"_ref"],[843,23,946,16],[843,25,953,3],[844,4,953,3],[844,8,947,2,"input"],[844,13,947,7],[844,16,947,7,"_ref"],[844,20,947,7],[844,21,947,2,"input"],[844,26,947,7],[845,6,948,2,"ourPubKey"],[845,15,948,11],[845,18,948,11,"_ref"],[845,22,948,11],[845,23,948,2,"ourPubKey"],[845,32,948,11],[846,6,949,2,"keyPair"],[846,13,949,9],[846,16,949,9,"_ref"],[846,20,949,9],[846,21,949,2,"keyPair"],[846,28,949,9],[847,6,950,2,"signatureHash"],[847,19,950,15],[847,22,950,15,"_ref"],[847,26,950,15],[847,27,950,2,"signatureHash"],[847,40,950,15],[848,6,951,2,"hashType"],[848,14,951,10],[848,17,951,10,"_ref"],[848,21,951,10],[848,22,951,2,"hashType"],[848,30,951,10],[849,6,952,2,"useLowR"],[849,13,952,9],[849,16,952,9,"_ref"],[849,20,952,9],[849,21,952,2,"useLowR"],[849,28,952,9],[850,4,954,2],[851,4,955,2],[851,8,955,6,"signed"],[851,14,955,12],[851,17,955,15],[851,22,955,20],[852,4,956,2],[852,13,956,2,"_ref2"],[852,18,956,2],[852,22,956,28,"input"],[852,27,956,33],[852,28,956,34,"pubkeys"],[852,35,956,41],[852,36,956,42,"entries"],[852,43,956,49],[852,44,956,50],[852,45,956,51],[852,47,956,53],[853,6,956,53],[853,10,956,53,"_ref3"],[853,15,956,53],[853,18,956,53,"_slicedToArray"],[853,32,956,53],[853,33,956,53,"_ref2"],[853,38,956,53],[854,6,956,53],[854,10,956,14,"i"],[854,11,956,15],[854,14,956,15,"_ref3"],[854,19,956,15],[855,6,956,15],[855,10,956,17,"pubKey"],[855,16,956,23],[855,19,956,23,"_ref3"],[855,24,956,23],[856,6,957,4],[856,10,957,8],[856,11,957,9,"ourPubKey"],[856,20,957,18],[856,21,957,19,"equals"],[856,27,957,25],[856,28,957,26,"pubKey"],[856,34,957,32],[856,35,957,33],[856,37,957,35],[857,6,958,4],[857,10,958,8,"input"],[857,15,958,13],[857,16,958,14,"signatures"],[857,26,958,24],[857,27,958,25,"i"],[857,28,958,26],[857,29,958,27],[857,31,958,29],[857,37,958,35],[857,41,958,39,"Error"],[857,46,958,44],[857,47,958,45],[857,73,958,71],[857,74,958,72],[858,6,959,4],[859,6,960,4],[859,10,960,8,"ourPubKey"],[859,19,960,17],[859,20,960,18,"length"],[859,26,960,24],[859,31,960,29],[859,33,960,31],[859,37,960,35,"input"],[859,42,960,40],[859,43,960,41,"hasWitness"],[859,53,960,51],[859,55,960,53],[860,8,961,6],[860,14,961,12],[860,18,961,16,"Error"],[860,23,961,21],[860,24,962,8],[860,84,963,6],[860,85,963,7],[861,6,964,4],[862,6,965,4],[862,10,965,10,"signature"],[862,19,965,19],[862,22,965,22,"keyPair"],[862,29,965,29],[862,30,965,30,"sign"],[862,34,965,34],[862,35,965,35,"signatureHash"],[862,48,965,48],[862,50,965,50,"useLowR"],[862,57,965,57],[862,58,965,58],[863,6,966,4,"input"],[863,11,966,9],[863,12,966,10,"signatures"],[863,22,966,20],[863,23,966,21,"i"],[863,24,966,22],[863,25,966,23],[863,28,966,26,"_$$_REQUIRE"],[863,39,966,26],[863,40,966,26,"_dependencyMap"],[863,54,966,26],[863,72,966,34,"signature"],[863,81,966,43],[863,82,966,44,"encode"],[863,88,966,50],[863,89,966,51,"signature"],[863,98,966,60],[863,100,966,62,"hashType"],[863,108,966,70],[863,109,966,71],[864,6,967,4,"signed"],[864,12,967,10],[864,15,967,13],[864,19,967,17],[865,4,968,2],[866,4,969,2],[866,8,969,6],[866,9,969,7,"signed"],[866,15,969,13],[866,17,969,15],[866,23,969,21],[866,27,969,25,"Error"],[866,32,969,30],[866,33,969,31],[866,70,969,68],[866,71,969,69],[867,2,970,0],[868,2,971,0],[868,11,971,9,"getSigningData"],[868,25,971,23,"getSigningData"],[868,26,972,2,"network"],[868,33,972,9],[868,35,973,2,"inputs"],[868,41,973,8],[868,43,974,2,"needsOutputs"],[868,55,974,14],[868,57,975,2,"tx"],[868,59,975,4],[868,61,976,2,"signParams"],[868,71,976,12],[868,73,977,2,"keyPair"],[868,80,977,9],[868,82,978,2,"redeemScript"],[868,94,978,14],[868,96,979,2,"hashType"],[868,104,979,10],[868,106,980,2,"witnessValue"],[868,118,980,14],[868,120,981,2,"witnessScript"],[868,133,981,15],[868,135,982,2,"useLowR"],[868,142,982,9],[868,144,983,2],[869,4,984,2],[869,8,984,6,"vin"],[869,11,984,9],[870,4,985,2],[870,8,985,6],[870,15,985,13,"signParams"],[870,25,985,23],[870,30,985,28],[870,38,985,36],[870,40,985,38],[871,6,986,4,"console"],[871,13,986,11],[871,14,986,12,"warn"],[871,18,986,16],[871,19,987,6],[871,74,987,61],[871,77,988,8],[871,133,989,4],[871,134,989,5],[872,6,990,4,"vin"],[872,9,990,7],[872,12,990,10,"signParams"],[872,22,990,20],[873,4,991,2],[873,5,991,3],[873,11,991,9],[873,15,991,13],[873,22,991,20,"signParams"],[873,32,991,30],[873,37,991,35],[873,45,991,43],[873,47,991,45],[874,6,992,4,"checkSignArgs"],[874,19,992,17],[874,20,992,18,"inputs"],[874,26,992,24],[874,28,992,26,"signParams"],[874,38,992,36],[874,39,992,37],[875,6,994,6,"vin"],[875,9,994,9],[875,12,1000,8,"signParams"],[875,22,1000,18],[875,23,994,6,"vin"],[875,26,994,9],[876,6,995,6,"keyPair"],[876,13,995,13],[876,16,1000,8,"signParams"],[876,26,1000,18],[876,27,995,6,"keyPair"],[876,34,995,13],[877,6,996,6,"redeemScript"],[877,18,996,18],[877,21,1000,8,"signParams"],[877,31,1000,18],[877,32,996,6,"redeemScript"],[877,44,996,18],[878,6,997,6,"hashType"],[878,14,997,14],[878,17,1000,8,"signParams"],[878,27,1000,18],[878,28,997,6,"hashType"],[878,36,997,14],[879,6,998,6,"witnessValue"],[879,18,998,18],[879,21,1000,8,"signParams"],[879,31,1000,18],[879,32,998,6,"witnessValue"],[879,44,998,18],[880,6,999,6,"witnessScript"],[880,19,999,19],[880,22,1000,8,"signParams"],[880,32,1000,18],[880,33,999,6,"witnessScript"],[880,46,999,19],[881,4,1001,2],[881,5,1001,3],[881,11,1001,9],[882,6,1002,4],[882,12,1002,10],[882,16,1002,14,"TypeError"],[882,25,1002,23],[882,26,1003,6],[882,90,1004,4],[882,91,1004,5],[883,4,1005,2],[884,4,1006,2],[884,8,1006,6,"keyPair"],[884,15,1006,13],[884,20,1006,18,"undefined"],[884,29,1006,27],[884,31,1006,29],[885,6,1007,4],[885,12,1007,10],[885,16,1007,14,"Error"],[885,21,1007,19],[885,22,1007,20],[885,45,1007,43],[885,46,1007,44],[886,4,1008,2],[887,4,1009,2],[888,4,1010,2],[888,8,1010,6,"keyPair"],[888,15,1010,13],[888,16,1010,14,"network"],[888,23,1010,21],[888,27,1010,25,"keyPair"],[888,34,1010,32],[888,35,1010,33,"network"],[888,42,1010,40],[888,47,1010,45,"network"],[888,54,1010,52],[888,56,1011,4],[888,62,1011,10],[888,66,1011,14,"TypeError"],[888,75,1011,23],[888,76,1011,24],[888,98,1011,46],[888,99,1011,47],[889,4,1012,2],[889,8,1012,6],[889,9,1012,7,"inputs"],[889,15,1012,13],[889,16,1012,14,"vin"],[889,19,1012,17],[889,20,1012,18],[889,22,1012,20],[889,28,1012,26],[889,32,1012,30,"Error"],[889,37,1012,35],[889,38,1012,36],[889,59,1012,57],[889,62,1012,60,"vin"],[889,65,1012,63],[889,66,1012,64],[890,4,1013,2,"hashType"],[890,12,1013,10],[890,15,1013,13,"hashType"],[890,23,1013,21],[890,27,1013,25,"_$$_REQUIRE"],[890,38,1013,25],[890,39,1013,25,"_dependencyMap"],[890,53,1013,25],[890,75,1013,39,"Transaction"],[890,86,1013,50],[890,87,1013,51,"SIGHASH_ALL"],[890,98,1013,62],[891,4,1014,2],[891,8,1014,6,"needsOutputs"],[891,20,1014,18],[891,21,1014,19,"hashType"],[891,29,1014,27],[891,30,1014,28],[891,32,1014,30],[891,38,1014,36],[891,42,1014,40,"Error"],[891,47,1014,45],[891,48,1014,46],[891,75,1014,73],[891,76,1014,74],[892,4,1015,2],[892,8,1015,8,"input"],[892,13,1015,13],[892,16,1015,16,"inputs"],[892,22,1015,22],[892,23,1015,23,"vin"],[892,26,1015,26],[892,27,1015,27],[893,4,1016,2],[894,4,1017,2],[894,8,1018,4,"input"],[894,13,1018,9],[894,14,1018,10,"redeemScript"],[894,26,1018,22],[894,31,1018,27,"undefined"],[894,40,1018,36],[894,44,1019,4,"redeemScript"],[894,56,1019,16],[894,60,1020,4],[894,61,1020,5,"input"],[894,66,1020,10],[894,67,1020,11,"redeemScript"],[894,79,1020,23],[894,80,1020,24,"equals"],[894,86,1020,30],[894,87,1020,31,"redeemScript"],[894,99,1020,43],[894,100,1020,44],[894,102,1021,4],[895,6,1022,4],[895,12,1022,10],[895,16,1022,14,"Error"],[895,21,1022,19],[895,22,1022,20],[895,49,1022,47],[895,50,1022,48],[896,4,1023,2],[897,4,1024,2],[897,8,1024,8,"ourPubKey"],[897,17,1024,17],[897,20,1025,4,"keyPair"],[897,27,1025,11],[897,28,1025,12,"publicKey"],[897,37,1025,21],[897,41,1025,26,"keyPair"],[897,48,1025,33],[897,49,1025,34,"getPublicKey"],[897,61,1025,46],[897,65,1025,50,"keyPair"],[897,72,1025,57],[897,73,1025,58,"getPublicKey"],[897,85,1025,70],[897,86,1025,71],[897,87,1025,73],[898,4,1026,2],[898,8,1026,6],[898,9,1026,7,"canSign"],[898,16,1026,14],[898,17,1026,15,"input"],[898,22,1026,20],[898,23,1026,21],[898,25,1026,23],[899,6,1027,4],[899,10,1027,8,"witnessValue"],[899,22,1027,20],[899,27,1027,25,"undefined"],[899,36,1027,34],[899,38,1027,36],[900,8,1028,6],[900,12,1028,10,"input"],[900,17,1028,15],[900,18,1028,16,"value"],[900,23,1028,21],[900,28,1028,26,"undefined"],[900,37,1028,35],[900,41,1028,39,"input"],[900,46,1028,44],[900,47,1028,45,"value"],[900,52,1028,50],[900,57,1028,55,"witnessValue"],[900,69,1028,67],[900,71,1029,8],[900,77,1029,14],[900,81,1029,18,"Error"],[900,86,1029,23],[900,87,1029,24],[900,121,1029,58],[900,122,1029,59],[901,8,1030,6,"_$$_REQUIRE"],[901,19,1030,6],[901,20,1030,6,"_dependencyMap"],[901,34,1030,6],[901,52,1030,16,"_$$_REQUIRE"],[901,63,1030,16],[901,64,1030,16,"_dependencyMap"],[901,78,1030,16],[901,94,1030,22,"Satoshi"],[901,101,1030,29],[901,103,1030,31,"witnessValue"],[901,115,1030,43],[901,116,1030,44],[902,8,1031,6,"input"],[902,13,1031,11],[902,14,1031,12,"value"],[902,19,1031,17],[902,22,1031,20,"witnessValue"],[902,34,1031,32],[903,6,1032,4],[904,6,1033,4],[904,10,1033,8],[904,11,1033,9,"canSign"],[904,18,1033,16],[904,19,1033,17,"input"],[904,24,1033,22],[904,25,1033,23],[904,27,1033,25],[905,8,1034,6],[905,12,1034,12,"prepared"],[905,20,1034,20],[905,23,1034,23,"prepareInput"],[905,35,1034,35],[905,36,1035,8,"input"],[905,41,1035,13],[905,43,1036,8,"ourPubKey"],[905,52,1036,17],[905,54,1037,8,"redeemScript"],[905,66,1037,20],[905,68,1038,8,"witnessScript"],[905,81,1039,6],[905,82,1039,7],[906,8,1040,6],[907,8,1041,6,"Object"],[907,14,1041,12],[907,15,1041,13,"assign"],[907,21,1041,19],[907,22,1041,20,"input"],[907,27,1041,25],[907,29,1041,27,"prepared"],[907,37,1041,35],[907,38,1041,36],[908,6,1042,4],[909,6,1043,4],[909,10,1043,8],[909,11,1043,9,"canSign"],[909,18,1043,16],[909,19,1043,17,"input"],[909,24,1043,22],[909,25,1043,23],[909,27,1043,25],[909,33,1043,31,"Error"],[909,38,1043,36],[909,39,1043,37,"input"],[909,44,1043,42],[909,45,1043,43,"prevOutType"],[909,56,1043,54],[909,59,1043,57],[909,75,1043,73],[909,76,1043,74],[910,4,1044,2],[911,4,1045,2],[912,4,1046,2],[912,8,1046,6,"signatureHash"],[912,21,1046,19],[913,4,1047,2],[913,8,1047,6,"input"],[913,13,1047,11],[913,14,1047,12,"hasWitness"],[913,24,1047,22],[913,26,1047,24],[914,6,1048,4,"signatureHash"],[914,19,1048,17],[914,22,1048,20,"tx"],[914,24,1048,22],[914,25,1048,23,"hashForWitnessV0"],[914,41,1048,39],[914,42,1049,6,"vin"],[914,45,1049,9],[914,47,1050,6,"input"],[914,52,1050,11],[914,53,1050,12,"signScript"],[914,63,1050,22],[914,65,1051,6,"input"],[914,70,1051,11],[914,71,1051,12,"value"],[914,76,1051,17],[914,78,1052,6,"hashType"],[914,86,1053,4],[914,87,1053,5],[915,4,1054,2],[915,5,1054,3],[915,11,1054,9],[916,6,1055,4,"signatureHash"],[916,19,1055,17],[916,22,1055,20,"tx"],[916,24,1055,22],[916,25,1055,23,"hashForSignature"],[916,41,1055,39],[916,42,1055,40,"vin"],[916,45,1055,43],[916,47,1055,45,"input"],[916,52,1055,50],[916,53,1055,51,"signScript"],[916,63,1055,61],[916,65,1055,63,"hashType"],[916,73,1055,71],[916,74,1055,72],[917,4,1056,2],[918,4,1057,2],[918,11,1057,9],[919,6,1058,4,"input"],[919,11,1058,9],[919,13,1058,4,"input"],[919,18,1058,9],[920,6,1059,4,"ourPubKey"],[920,15,1059,13],[920,17,1059,4,"ourPubKey"],[920,26,1059,13],[921,6,1060,4,"keyPair"],[921,13,1060,11],[921,15,1060,4,"keyPair"],[921,22,1060,11],[922,6,1061,4,"signatureHash"],[922,19,1061,17],[922,21,1061,4,"signatureHash"],[922,34,1061,17],[923,6,1062,4,"hashType"],[923,14,1062,12],[923,16,1062,4,"hashType"],[923,24,1062,12],[924,6,1063,4,"useLowR"],[924,13,1063,11],[924,15,1063,13],[924,16,1063,14],[924,17,1063,15,"useLowR"],[925,4,1064,2],[925,5,1064,3],[926,2,1065,0],[927,0,1065,1],[927,3]],"functionMap":{"names":["<global>","tfMessage","txIsString","txIsTransaction","TransactionBuilder","TransactionBuilder#constructor","TransactionBuilder.fromTransaction","transaction.outs.forEach$argument_0","transaction.ins.forEach$argument_0","txb.__INPUTS.forEach$argument_0","TransactionBuilder#setLowR","TransactionBuilder#setLockTime","__INPUTS.some$argument_0","input.signatures.some$argument_0","TransactionBuilder#setVersion","TransactionBuilder#addInput","TransactionBuilder#addOutput","TransactionBuilder#build","TransactionBuilder#buildIncomplete","TransactionBuilder#sign","TransactionBuilder#__addInputUnsafe","TransactionBuilder#__build","__INPUTS.forEach$argument_0","TransactionBuilder#__canModifyInputs","__INPUTS.every$argument_0","input.signatures.every$argument_0","TransactionBuilder#__needsOutputs","TransactionBuilder#__canModifyOutputs","TransactionBuilder#__overMaximumFees","__INPUTS.reduce$argument_0","__TX.outs.reduce$argument_0","expandInput","fixMultisigOrder","input.pubkeys.map$argument_0","unmatched.some$argument_0","expandOutput","p2ms.pubkeys.map$argument_0","prepareInput","build","signatures.map$argument_0","signatures.filter$argument_0","canSign","signatureHashType","checkSignArgs","trySign","getSigningData"],"mappings":"AAA;ACmC;CDM;AEC;CFE;AGC;CHE;AIC;ECG;GDe;EEC;6BCM;KDE;4BEE;KFM;yBGE;KHE;GFE;EMC;GNO;EOC;yBCI;qCCE,oBD;ODC;GPK;EUC;GVI;EWC;GXqB;EYC;GZS;EaC;GbE;EcC;GdE;EeC;GfuB;EgBC;GhBuC;EiBC;0BCO;KDY;GjBQ;EmBC;+BCC;oCCE;ODQ;KDC;GnBC;EsBC;yBdQ;qCCE;SDK;OcC;GtBE;EuBC;+BHG;oCCE;ODY;KGC;GvBC;EwBC;0CCE,6BD;2CEG,qBF;GxBI;CJC;A+BE;C/B+G;AgCE;uCCK;mBCI;KDgB;GDE;ChCC;AmCC;qCCyC,eD;CnCM;AqCC;kDxBqB,oBwB;kDxByC,oBwB;kDxBmC,oBwB;kDxBsC,oBwB;CrC4B;AsCC;oCCsB,2BD;uCEE,MF;CtCiC;AyCC;CzCU;A0CC;C1CE;A2CC;C3C+M;A4CC;C5CwB;A6CC;C7C8F"}},"type":"js/module"}]}