{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1798,"column":0,"index":57115}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1798,"column":0,"index":57115}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1798,"column":0,"index":57115}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1798,"column":0,"index":57115}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1798,"column":0,"index":57115}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"varuint-bitcoin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":49,"column":29,"index":1400},"end":{"line":49,"column":55,"index":1426}}],"key":"d/MLbboLwipJSIgxTfEgzKAp95s="}},{"name":"./payments/index.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":54,"column":30,"index":1646},"end":{"line":54,"column":61,"index":1677}}],"key":"7vBGlj2RIOjcpFXncnqqi6q14uc="}},{"name":"./script.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":56,"column":29,"index":1763},"end":{"line":56,"column":52,"index":1786}}],"key":"YwKathlCh3lFwWqarM8qXink2No="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":60,"column":27,"index":1977},"end":{"line":60,"column":54,"index":2004}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"./networks.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":53,"column":22,"index":1589},"end":{"line":53,"column":47,"index":1614}}],"key":"VwSWqjLk3lF+0uJetUWOf3RnSCs="}},{"name":"bip174","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":48,"column":17,"index":1352},"end":{"line":48,"column":34,"index":1369}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":48,"column":17,"index":1352},"end":{"line":48,"column":34,"index":1369}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}},{"start":{"line":50,"column":17,"index":1446},"end":{"line":50,"column":34,"index":1463}}],"key":"H24KkgPT2zAV/Za0F3dKre/tztw="}},{"name":"./bufferutils.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":52,"column":25,"index":1537},"end":{"line":52,"column":53,"index":1565}},{"start":{"line":52,"column":25,"index":1537},"end":{"line":52,"column":53,"index":1565}},{"start":{"line":52,"column":25,"index":1537},"end":{"line":52,"column":53,"index":1565}},{"start":{"line":52,"column":25,"index":1537},"end":{"line":52,"column":53,"index":1565}}],"key":"zB1dBFCakJ6gZt6wDMvzXihj8Jk="}},{"name":"./address.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":51,"column":21,"index":1486},"end":{"line":51,"column":45,"index":1510}},{"start":{"line":51,"column":21,"index":1486},"end":{"line":51,"column":45,"index":1510}}],"key":"jTY0Z3A98z88aDc7FqCg3oHskvM=","isOptional":false}},{"name":"./psbt/bip371.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}},{"start":{"line":58,"column":20,"index":1864},"end":{"line":58,"column":48,"index":1892}}],"key":"fk7q431C3AJ3wFU++kKQiSrXjWo="}},{"name":"./psbt/psbtutils.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}},{"start":{"line":59,"column":23,"index":1917},"end":{"line":59,"column":54,"index":1948}}],"key":"6bh4ZfWLdfV1+6cG6DSoNyXHU70="}},{"name":"./transaction.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}},{"start":{"line":57,"column":25,"index":1814},"end":{"line":57,"column":53,"index":1842}}],"key":"qBwEKAeVOHPS/O7B1GwDP8t2dAs="}},{"name":"./payments/bip341.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":55,"column":20,"index":1700},"end":{"line":55,"column":52,"index":1732}}],"key":"dcPDUwCKyKTZYmCknA2mUa+ynoI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _asyncToGenerator = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\");\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\");\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, 'default', {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o['default'] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.Psbt = void 0;\n  var varuint = __importStar(_$$_REQUIRE(_dependencyMap[5], \"varuint-bitcoin\"));\n  var payments = __importStar(_$$_REQUIRE(_dependencyMap[6], \"./payments/index.cjs\"));\n  var bscript = __importStar(_$$_REQUIRE(_dependencyMap[7], \"./script.cjs\"));\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[8], \"uint8array-tools\"));\n  /**\n   * These are the default arguments for a Psbt instance.\n   */\n  var DEFAULT_OPTS = {\n    /**\n     * A bitcoinjs Network object. This is only used if you pass an `address`\n     * parameter to addOutput. Otherwise it is not needed and can be left default.\n     */\n    network: _$$_REQUIRE(_dependencyMap[9], \"./networks.cjs\").bitcoin,\n    /**\n     * When extractTransaction is called, the fee rate is checked.\n     * THIS IS NOT TO BE RELIED ON.\n     * It is only here as a last ditch effort to prevent sending a 500 BTC fee etc.\n     */\n    maximumFeeRate: 5000 // satoshi per byte\n  };\n  /**\n   * Psbt class can parse and generate a PSBT binary based off of the BIP174.\n   * There are 6 roles that this class fulfills. (Explained in BIP174)\n   *\n   * Creator: This can be done with `new Psbt()`\n   *\n   * Updater: This can be done with `psbt.addInput(input)`, `psbt.addInputs(inputs)`,\n   *   `psbt.addOutput(output)`, `psbt.addOutputs(outputs)` when you are looking to\n   *   add new inputs and outputs to the PSBT, and `psbt.updateGlobal(itemObject)`,\n   *   `psbt.updateInput(itemObject)`, `psbt.updateOutput(itemObject)`\n   *   addInput requires hash: Buffer | string; and index: number; as attributes\n   *   and can also include any attributes that are used in updateInput method.\n   *   addOutput requires script: Buffer; and value: number; and likewise can include\n   *   data for updateOutput.\n   *   For a list of what attributes should be what types. Check the bip174 library.\n   *   Also, check the integration tests for some examples of usage.\n   *\n   * Signer: There are a few methods. signAllInputs and signAllInputsAsync, which will search all input\n   *   information for your pubkey or pubkeyhash, and only sign inputs where it finds\n   *   your info. Or you can explicitly sign a specific input with signInput and\n   *   signInputAsync. For the async methods you can create a SignerAsync object\n   *   and use something like a hardware wallet to sign with. (You must implement this)\n   *\n   * Combiner: psbts can be combined easily with `psbt.combine(psbt2, psbt3, psbt4 ...)`\n   *   the psbt calling combine will always have precedence when a conflict occurs.\n   *   Combine checks if the internal bitcoin transaction is the same, so be sure that\n   *   all sequences, version, locktime, etc. are the same before combining.\n   *\n   * Input Finalizer: This role is fairly important. Not only does it need to construct\n   *   the input scriptSigs and witnesses, but it SHOULD verify the signatures etc.\n   *   Before running `psbt.finalizeAllInputs()` please run `psbt.validateSignaturesOfAllInputs()`\n   *   Running any finalize method will delete any data in the input(s) that are no longer\n   *   needed due to the finalized scripts containing the information.\n   *\n   * Transaction Extractor: This role will perform some checks before returning a\n   *   Transaction object. Such as fee rate not being larger than maximumFeeRate etc.\n   */\n  var Psbt = /*#__PURE__*/function () {\n    function Psbt() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new (_$$_REQUIRE(_dependencyMap[10], \"bip174\").Psbt)(new PsbtTransaction());\n      _classCallCheck(this, Psbt);\n      this.data = data;\n      // set defaults\n      this.opts = Object.assign({}, DEFAULT_OPTS, opts);\n      this.__CACHE = {\n        __NON_WITNESS_UTXO_TX_CACHE: [],\n        __NON_WITNESS_UTXO_BUF_CACHE: [],\n        __TX_IN_CACHE: {},\n        __TX: this.data.globalMap.unsignedTx.tx,\n        // Psbt's predecessor (TransactionBuilder - now removed) behavior\n        // was to not confirm input values  before signing.\n        // Even though we highly encourage people to get\n        // the full parent transaction to verify values, the ability to\n        // sign non-segwit inputs without the full transaction was often\n        // requested. So the only way to activate is to use @ts-ignore.\n        // We will disable exporting the Psbt when unsafe sign is active.\n        // because it is not BIP174 compliant.\n        __UNSAFE_SIGN_NONSEGWIT: false\n      };\n      if (this.data.inputs.length === 0) this.setVersion(2);\n      // Make data hidden when enumerating\n      var dpew = function dpew(obj, attr, enumerable, writable) {\n        return Object.defineProperty(obj, attr, {\n          enumerable: enumerable,\n          writable: writable\n        });\n      };\n      dpew(this, '__CACHE', false, true);\n      dpew(this, 'opts', false, true);\n    }\n    return _createClass(Psbt, [{\n      key: \"inputCount\",\n      get: function get() {\n        return this.data.inputs.length;\n      }\n    }, {\n      key: \"version\",\n      get: function get() {\n        return this.__CACHE.__TX.version;\n      },\n      set: function set(version) {\n        this.setVersion(version);\n      }\n    }, {\n      key: \"locktime\",\n      get: function get() {\n        return this.__CACHE.__TX.locktime;\n      },\n      set: function set(locktime) {\n        this.setLocktime(locktime);\n      }\n    }, {\n      key: \"txInputs\",\n      get: function get() {\n        return this.__CACHE.__TX.ins.map(function (input) {\n          return {\n            hash: (0, _$$_REQUIRE(_dependencyMap[11], \"./bufferutils.cjs\").cloneBuffer)(input.hash),\n            index: input.index,\n            sequence: input.sequence\n          };\n        });\n      }\n    }, {\n      key: \"txOutputs\",\n      get: function get() {\n        var _this = this;\n        return this.__CACHE.__TX.outs.map(function (output) {\n          var address;\n          try {\n            address = (0, _$$_REQUIRE(_dependencyMap[12], \"./address.cjs\").fromOutputScript)(output.script, _this.opts.network);\n          } catch (_) {}\n          return {\n            script: (0, _$$_REQUIRE(_dependencyMap[11], \"./bufferutils.cjs\").cloneBuffer)(output.script),\n            value: output.value,\n            address: address\n          };\n        });\n      }\n    }, {\n      key: \"combine\",\n      value: function combine() {\n        var _this$data;\n        for (var _len = arguments.length, those = new Array(_len), _key = 0; _key < _len; _key++) {\n          those[_key] = arguments[_key];\n        }\n        (_this$data = this.data).combine.apply(_this$data, _toConsumableArray(those.map(function (o) {\n          return o.data;\n        })));\n        return this;\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        // TODO: more efficient cloning\n        var res = Psbt.fromBuffer(this.data.toBuffer());\n        res.opts = JSON.parse(JSON.stringify(this.opts));\n        return res;\n      }\n    }, {\n      key: \"setMaximumFeeRate\",\n      value: function setMaximumFeeRate(satoshiPerByte) {\n        check32Bit(satoshiPerByte); // 42.9 BTC per byte IS excessive... so throw\n        this.opts.maximumFeeRate = satoshiPerByte;\n      }\n    }, {\n      key: \"setVersion\",\n      value: function setVersion(version) {\n        check32Bit(version);\n        checkInputsForPartialSig(this.data.inputs, 'setVersion');\n        var c = this.__CACHE;\n        c.__TX.version = version;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"setLocktime\",\n      value: function setLocktime(locktime) {\n        check32Bit(locktime);\n        checkInputsForPartialSig(this.data.inputs, 'setLocktime');\n        var c = this.__CACHE;\n        c.__TX.locktime = locktime;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"setInputSequence\",\n      value: function setInputSequence(inputIndex, sequence) {\n        check32Bit(sequence);\n        checkInputsForPartialSig(this.data.inputs, 'setInputSequence');\n        var c = this.__CACHE;\n        if (c.__TX.ins.length <= inputIndex) {\n          throw new Error('Input index too high');\n        }\n        c.__TX.ins[inputIndex].sequence = sequence;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"addInputs\",\n      value: function addInputs(inputDatas) {\n        var _this2 = this;\n        inputDatas.forEach(function (inputData) {\n          return _this2.addInput(inputData);\n        });\n        return this;\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(inputData) {\n        if (arguments.length > 1 || !inputData || inputData.hash === undefined || inputData.index === undefined) {\n          throw new Error(`Invalid arguments for Psbt.addInput. ` + `Requires single object with at least [hash] and [index]`);\n        }\n        (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").checkTaprootInputFields)(inputData, inputData, 'addInput');\n        checkInputsForPartialSig(this.data.inputs, 'addInput');\n        if (inputData.witnessScript) checkInvalidP2WSH(inputData.witnessScript);\n        var c = this.__CACHE;\n        this.data.addInput(inputData);\n        var txIn = c.__TX.ins[c.__TX.ins.length - 1];\n        checkTxInputCache(c, txIn);\n        var inputIndex = this.data.inputs.length - 1;\n        var input = this.data.inputs[inputIndex];\n        if (input.nonWitnessUtxo) {\n          addNonWitnessTxCache(this.__CACHE, input, inputIndex);\n        }\n        c.__FEE = undefined;\n        c.__FEE_RATE = undefined;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"addOutputs\",\n      value: function addOutputs(outputDatas) {\n        var _this3 = this;\n        outputDatas.forEach(function (outputData) {\n          return _this3.addOutput(outputData);\n        });\n        return this;\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(outputData) {\n        if (arguments.length > 1 || !outputData || outputData.value === undefined || outputData.address === undefined && outputData.script === undefined) {\n          throw new Error(`Invalid arguments for Psbt.addOutput. ` + `Requires single object with at least [script or address] and [value]`);\n        }\n        checkInputsForPartialSig(this.data.inputs, 'addOutput');\n        var _outputData = outputData,\n          address = _outputData.address;\n        if (typeof address === 'string') {\n          var network = this.opts.network;\n          var script = (0, _$$_REQUIRE(_dependencyMap[12], \"./address.cjs\").toOutputScript)(address, network);\n          outputData = Object.assign({}, outputData, {\n            script: script\n          });\n        }\n        (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").checkTaprootOutputFields)(outputData, outputData, 'addOutput');\n        var c = this.__CACHE;\n        this.data.addOutput(outputData);\n        c.__FEE = undefined;\n        c.__FEE_RATE = undefined;\n        c.__EXTRACTED_TX = undefined;\n        return this;\n      }\n    }, {\n      key: \"extractTransaction\",\n      value: function extractTransaction(disableFeeCheck) {\n        if (!this.data.inputs.every(isFinalized)) throw new Error('Not finalized');\n        var c = this.__CACHE;\n        if (!disableFeeCheck) {\n          checkFees(this, c, this.opts);\n        }\n        if (c.__EXTRACTED_TX) return c.__EXTRACTED_TX;\n        var tx = c.__TX.clone();\n        inputFinalizeGetAmts(this.data.inputs, tx, c, true);\n        return tx;\n      }\n    }, {\n      key: \"getFeeRate\",\n      value: function getFeeRate() {\n        return getTxCacheValue('__FEE_RATE', 'fee rate', this.data.inputs, this.__CACHE);\n      }\n    }, {\n      key: \"getFee\",\n      value: function getFee() {\n        return getTxCacheValue('__FEE', 'fee', this.data.inputs, this.__CACHE);\n      }\n    }, {\n      key: \"finalizeAllInputs\",\n      value: function finalizeAllInputs() {\n        var _this4 = this;\n        (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, 0); // making sure we have at least one\n        range(this.data.inputs.length).forEach(function (idx) {\n          return _this4.finalizeInput(idx);\n        });\n        return this;\n      }\n    }, {\n      key: \"finalizeInput\",\n      value: function finalizeInput(inputIndex, finalScriptsFunc) {\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) return this._finalizeTaprootInput(inputIndex, input, undefined, finalScriptsFunc);\n        return this._finalizeInput(inputIndex, input, finalScriptsFunc);\n      }\n    }, {\n      key: \"finalizeTaprootInput\",\n      value: function finalizeTaprootInput(inputIndex, tapLeafHashToFinalize) {\n        var finalScriptsFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").tapScriptFinalizer;\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) return this._finalizeTaprootInput(inputIndex, input, tapLeafHashToFinalize, finalScriptsFunc);\n        throw new Error(`Cannot finalize input #${inputIndex}. Not Taproot.`);\n      }\n    }, {\n      key: \"_finalizeInput\",\n      value: function _finalizeInput(inputIndex, input) {\n        var finalScriptsFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getFinalScripts;\n        var _getScriptFromInput = getScriptFromInput(inputIndex, input, this.__CACHE),\n          script = _getScriptFromInput.script,\n          isP2SH = _getScriptFromInput.isP2SH,\n          isP2WSH = _getScriptFromInput.isP2WSH,\n          isSegwit = _getScriptFromInput.isSegwit;\n        if (!script) throw new Error(`No script found for input #${inputIndex}`);\n        checkPartialSigSighashes(input);\n        var _finalScriptsFunc = finalScriptsFunc(inputIndex, input, script, isSegwit, isP2SH, isP2WSH),\n          finalScriptSig = _finalScriptsFunc.finalScriptSig,\n          finalScriptWitness = _finalScriptsFunc.finalScriptWitness;\n        if (finalScriptSig) this.data.updateInput(inputIndex, {\n          finalScriptSig: finalScriptSig\n        });\n        if (finalScriptWitness) this.data.updateInput(inputIndex, {\n          finalScriptWitness: finalScriptWitness\n        });\n        if (!finalScriptSig && !finalScriptWitness) throw new Error(`Unknown error finalizing input #${inputIndex}`);\n        this.data.clearFinalizedInput(inputIndex);\n        return this;\n      }\n    }, {\n      key: \"_finalizeTaprootInput\",\n      value: function _finalizeTaprootInput(inputIndex, input, tapLeafHashToFinalize) {\n        var finalScriptsFunc = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").tapScriptFinalizer;\n        if (!input.witnessUtxo) throw new Error(`Cannot finalize input #${inputIndex}. Missing withness utxo.`);\n        // Check key spend first. Increased privacy and reduced block space.\n        if (input.tapKeySig) {\n          var payment = payments.p2tr({\n            output: input.witnessUtxo.script,\n            signature: input.tapKeySig\n          });\n          var finalScriptWitness = (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").witnessStackToScriptWitness)(payment.witness);\n          this.data.updateInput(inputIndex, {\n            finalScriptWitness: finalScriptWitness\n          });\n        } else {\n          var _finalScriptsFunc2 = finalScriptsFunc(inputIndex, input, tapLeafHashToFinalize),\n            _finalScriptWitness = _finalScriptsFunc2.finalScriptWitness;\n          this.data.updateInput(inputIndex, {\n            finalScriptWitness: _finalScriptWitness\n          });\n        }\n        this.data.clearFinalizedInput(inputIndex);\n        return this;\n      }\n    }, {\n      key: \"getInputType\",\n      value: function getInputType(inputIndex) {\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        var script = getScriptFromUtxo(inputIndex, input, this.__CACHE);\n        var result = getMeaningfulScript(script, inputIndex, 'input', input.redeemScript || redeemFromFinalScriptSig(input.finalScriptSig), input.witnessScript || redeemFromFinalWitnessScript(input.finalScriptWitness));\n        var type = result.type === 'raw' ? '' : result.type + '-';\n        var mainType = classifyScript(result.meaningfulScript);\n        return type + mainType;\n      }\n    }, {\n      key: \"inputHasPubkey\",\n      value: function inputHasPubkey(inputIndex, pubkey) {\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        return pubkeyInInput(pubkey, input, inputIndex, this.__CACHE);\n      }\n    }, {\n      key: \"inputHasHDKey\",\n      value: function inputHasHDKey(inputIndex, root) {\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        var derivationIsMine = bip32DerivationIsMine(root);\n        return !!input.bip32Derivation && input.bip32Derivation.some(derivationIsMine);\n      }\n    }, {\n      key: \"outputHasPubkey\",\n      value: function outputHasPubkey(outputIndex, pubkey) {\n        var output = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForOutput)(this.data.outputs, outputIndex);\n        return pubkeyInOutput(pubkey, output, outputIndex, this.__CACHE);\n      }\n    }, {\n      key: \"outputHasHDKey\",\n      value: function outputHasHDKey(outputIndex, root) {\n        var output = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForOutput)(this.data.outputs, outputIndex);\n        var derivationIsMine = bip32DerivationIsMine(root);\n        return !!output.bip32Derivation && output.bip32Derivation.some(derivationIsMine);\n      }\n    }, {\n      key: \"validateSignaturesOfAllInputs\",\n      value: function validateSignaturesOfAllInputs(validator) {\n        var _this5 = this;\n        (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, 0); // making sure we have at least one\n        var results = range(this.data.inputs.length).map(function (idx) {\n          return _this5.validateSignaturesOfInput(idx, validator);\n        });\n        return results.reduce(function (final, res) {\n          return res === true && final;\n        }, true);\n      }\n    }, {\n      key: \"validateSignaturesOfInput\",\n      value: function validateSignaturesOfInput(inputIndex, validator, pubkey) {\n        var input = this.data.inputs[inputIndex];\n        if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) return this.validateSignaturesOfTaprootInput(inputIndex, validator, pubkey);\n        return this._validateSignaturesOfInput(inputIndex, validator, pubkey);\n      }\n    }, {\n      key: \"_validateSignaturesOfInput\",\n      value: function _validateSignaturesOfInput(inputIndex, validator, pubkey) {\n        var input = this.data.inputs[inputIndex];\n        var partialSig = (input || {}).partialSig;\n        if (!input || !partialSig || partialSig.length < 1) throw new Error('No signatures to validate');\n        if (typeof validator !== 'function') throw new Error('Need validator function to validate signatures');\n        var mySigs = pubkey ? partialSig.filter(function (sig) {\n          return tools.compare(sig.pubkey, pubkey) === 0;\n        }) : partialSig;\n        if (mySigs.length < 1) throw new Error('No signatures for this pubkey');\n        var results = [];\n        var hashCache;\n        var scriptCache;\n        var sighashCache;\n        for (var pSig of mySigs) {\n          var sig = bscript.signature.decode(pSig.signature);\n          var _ref = sighashCache !== sig.hashType ? getHashForSig(inputIndex, Object.assign({}, input, {\n              sighashType: sig.hashType\n            }), this.__CACHE, true) : {\n              hash: hashCache,\n              script: scriptCache\n            },\n            hash = _ref.hash,\n            script = _ref.script;\n          sighashCache = sig.hashType;\n          hashCache = hash;\n          scriptCache = script;\n          checkScriptForPubkey(pSig.pubkey, script, 'verify');\n          results.push(validator(pSig.pubkey, hash, sig.signature));\n        }\n        return results.every(function (res) {\n          return res === true;\n        });\n      }\n    }, {\n      key: \"validateSignaturesOfTaprootInput\",\n      value: function validateSignaturesOfTaprootInput(inputIndex, validator, pubkey) {\n        var input = this.data.inputs[inputIndex];\n        var tapKeySig = (input || {}).tapKeySig;\n        var tapScriptSig = (input || {}).tapScriptSig;\n        if (!input && !tapKeySig && !(tapScriptSig && !tapScriptSig.length)) throw new Error('No signatures to validate');\n        if (typeof validator !== 'function') throw new Error('Need validator function to validate signatures');\n        pubkey = pubkey && (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").toXOnly)(pubkey);\n        var allHashses = pubkey ? getTaprootHashesForSig(inputIndex, input, this.data.inputs, pubkey, this.__CACHE) : getAllTaprootHashesForSig(inputIndex, input, this.data.inputs, this.__CACHE);\n        if (!allHashses.length) throw new Error('No signatures for this pubkey');\n        var tapKeyHash = allHashses.find(function (h) {\n          return !h.leafHash;\n        });\n        var validationResultCount = 0;\n        if (tapKeySig && tapKeyHash) {\n          var isValidTapkeySig = validator(tapKeyHash.pubkey, tapKeyHash.hash, trimTaprootSig(tapKeySig));\n          if (!isValidTapkeySig) return false;\n          validationResultCount++;\n        }\n        if (tapScriptSig) {\n          var _loop = function _loop(tapSig) {\n              var tapSigHash = allHashses.find(function (h) {\n                return tools.compare(h.pubkey, tapSig.pubkey) === 0;\n              });\n              if (tapSigHash) {\n                var isValidTapScriptSig = validator(tapSig.pubkey, tapSigHash.hash, trimTaprootSig(tapSig.signature));\n                if (!isValidTapScriptSig) return {\n                  v: false\n                };\n                validationResultCount++;\n              }\n            },\n            _ret;\n          for (var tapSig of tapScriptSig) {\n            _ret = _loop(tapSig);\n            if (_ret) return _ret.v;\n          }\n        }\n        return validationResultCount > 0;\n      }\n    }, {\n      key: \"signAllInputsHD\",\n      value: function signAllInputsHD(hdKeyPair) {\n        var sighashTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL];\n        if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n          throw new Error('Need HDSigner to sign input');\n        }\n        var results = [];\n        for (var i of range(this.data.inputs.length)) {\n          try {\n            this.signInputHD(i, hdKeyPair, sighashTypes);\n            results.push(true);\n          } catch (err) {\n            results.push(false);\n          }\n        }\n        if (results.every(function (v) {\n          return v === false;\n        })) {\n          throw new Error('No inputs were signed');\n        }\n        return this;\n      }\n    }, {\n      key: \"signAllInputsHDAsync\",\n      value: function signAllInputsHDAsync(hdKeyPair) {\n        var _this6 = this;\n        var sighashTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL];\n        return new Promise(function (resolve, reject) {\n          if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n            return reject(new Error('Need HDSigner to sign input'));\n          }\n          var results = [];\n          var promises = [];\n          for (var i of range(_this6.data.inputs.length)) {\n            promises.push(_this6.signInputHDAsync(i, hdKeyPair, sighashTypes).then(function () {\n              results.push(true);\n            }, function () {\n              results.push(false);\n            }));\n          }\n          return Promise.all(promises).then(function () {\n            if (results.every(function (v) {\n              return v === false;\n            })) {\n              return reject(new Error('No inputs were signed'));\n            }\n            resolve();\n          });\n        });\n      }\n    }, {\n      key: \"signInputHD\",\n      value: function signInputHD(inputIndex, hdKeyPair) {\n        var _this7 = this;\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL];\n        if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n          throw new Error('Need HDSigner to sign input');\n        }\n        var signers = getSignersFromHD(inputIndex, this.data.inputs, hdKeyPair);\n        signers.forEach(function (signer) {\n          return _this7.signInput(inputIndex, signer, sighashTypes);\n        });\n        return this;\n      }\n    }, {\n      key: \"signInputHDAsync\",\n      value: function signInputHDAsync(inputIndex, hdKeyPair) {\n        var _this8 = this;\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL];\n        return new Promise(function (resolve, reject) {\n          if (!hdKeyPair || !hdKeyPair.publicKey || !hdKeyPair.fingerprint) {\n            return reject(new Error('Need HDSigner to sign input'));\n          }\n          var signers = getSignersFromHD(inputIndex, _this8.data.inputs, hdKeyPair);\n          var promises = signers.map(function (signer) {\n            return _this8.signInputAsync(inputIndex, signer, sighashTypes);\n          });\n          return Promise.all(promises).then(function () {\n            resolve();\n          }).catch(reject);\n        });\n      }\n    }, {\n      key: \"signAllInputs\",\n      value: function signAllInputs(keyPair, sighashTypes) {\n        if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n        // TODO: Add a pubkey/pubkeyhash cache to each input\n        // as input information is added, then eventually\n        // optimize this method.\n        var results = [];\n        for (var i of range(this.data.inputs.length)) {\n          try {\n            this.signInput(i, keyPair, sighashTypes);\n            results.push(true);\n          } catch (err) {\n            results.push(false);\n          }\n        }\n        if (results.every(function (v) {\n          return v === false;\n        })) {\n          throw new Error('No inputs were signed');\n        }\n        return this;\n      }\n    }, {\n      key: \"signAllInputsAsync\",\n      value: function signAllInputsAsync(keyPair, sighashTypes) {\n        var _this9 = this;\n        return new Promise(function (resolve, reject) {\n          if (!keyPair || !keyPair.publicKey) return reject(new Error('Need Signer to sign input'));\n          // TODO: Add a pubkey/pubkeyhash cache to each input\n          // as input information is added, then eventually\n          // optimize this method.\n          var results = [];\n          var promises = [];\n          for (var _ref2 of _this9.data.inputs.entries()) {\n            var _ref3 = _slicedToArray(_ref2, 1);\n            var i = _ref3[0];\n            promises.push(_this9.signInputAsync(i, keyPair, sighashTypes).then(function () {\n              results.push(true);\n            }, function () {\n              results.push(false);\n            }));\n          }\n          return Promise.all(promises).then(function () {\n            if (results.every(function (v) {\n              return v === false;\n            })) {\n              return reject(new Error('No inputs were signed'));\n            }\n            resolve();\n          });\n        });\n      }\n    }, {\n      key: \"signInput\",\n      value: function signInput(inputIndex, keyPair, sighashTypes) {\n        if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) {\n          return this._signTaprootInput(inputIndex, input, keyPair, undefined, sighashTypes);\n        }\n        return this._signInput(inputIndex, keyPair, sighashTypes);\n      }\n    }, {\n      key: \"signTaprootInput\",\n      value: function signTaprootInput(inputIndex, keyPair, tapLeafHashToSign, sighashTypes) {\n        if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n        var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(this.data.inputs, inputIndex);\n        if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) return this._signTaprootInput(inputIndex, input, keyPair, tapLeafHashToSign, sighashTypes);\n        throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n      }\n    }, {\n      key: \"_signInput\",\n      value: function _signInput(inputIndex, keyPair) {\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL];\n        var _getHashAndSighashTyp = getHashAndSighashType(this.data.inputs, inputIndex, keyPair.publicKey, this.__CACHE, sighashTypes),\n          hash = _getHashAndSighashTyp.hash,\n          sighashType = _getHashAndSighashTyp.sighashType;\n        var partialSig = [{\n          pubkey: keyPair.publicKey,\n          signature: bscript.signature.encode(keyPair.sign(hash), sighashType)\n        }];\n        this.data.updateInput(inputIndex, {\n          partialSig: partialSig\n        });\n        return this;\n      }\n    }, {\n      key: \"_signTaprootInput\",\n      value: function _signTaprootInput(inputIndex, input, keyPair, tapLeafHashToSign) {\n        var allowedSighashTypes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_DEFAULT];\n        var hashesForSig = this.checkTaprootHashesForSig(inputIndex, input, keyPair, tapLeafHashToSign, allowedSighashTypes);\n        var tapKeySig = hashesForSig.filter(function (h) {\n          return !h.leafHash;\n        }).map(function (h) {\n          return (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").serializeTaprootSignature)(keyPair.signSchnorr(h.hash), input.sighashType);\n        })[0];\n        var tapScriptSig = hashesForSig.filter(function (h) {\n          return !!h.leafHash;\n        }).map(function (h) {\n          return {\n            pubkey: (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").toXOnly)(keyPair.publicKey),\n            signature: (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").serializeTaprootSignature)(keyPair.signSchnorr(h.hash), input.sighashType),\n            leafHash: h.leafHash\n          };\n        });\n        if (tapKeySig) {\n          this.data.updateInput(inputIndex, {\n            tapKeySig: tapKeySig\n          });\n        }\n        if (tapScriptSig.length) {\n          this.data.updateInput(inputIndex, {\n            tapScriptSig: tapScriptSig\n          });\n        }\n        return this;\n      }\n    }, {\n      key: \"signInputAsync\",\n      value: function signInputAsync(inputIndex, keyPair, sighashTypes) {\n        var _this0 = this;\n        return Promise.resolve().then(function () {\n          if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n          var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(_this0.data.inputs, inputIndex);\n          if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) return _this0._signTaprootInputAsync(inputIndex, input, keyPair, undefined, sighashTypes);\n          return _this0._signInputAsync(inputIndex, keyPair, sighashTypes);\n        });\n      }\n    }, {\n      key: \"signTaprootInputAsync\",\n      value: function signTaprootInputAsync(inputIndex, keyPair, tapLeafHash, sighashTypes) {\n        var _this1 = this;\n        return Promise.resolve().then(function () {\n          if (!keyPair || !keyPair.publicKey) throw new Error('Need Signer to sign input');\n          var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(_this1.data.inputs, inputIndex);\n          if ((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input)) return _this1._signTaprootInputAsync(inputIndex, input, keyPair, tapLeafHash, sighashTypes);\n          throw new Error(`Input #${inputIndex} is not of type Taproot.`);\n        });\n      }\n    }, {\n      key: \"_signInputAsync\",\n      value: function _signInputAsync(inputIndex, keyPair) {\n        var _this10 = this;\n        var sighashTypes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL];\n        var _getHashAndSighashTyp2 = getHashAndSighashType(this.data.inputs, inputIndex, keyPair.publicKey, this.__CACHE, sighashTypes),\n          hash = _getHashAndSighashTyp2.hash,\n          sighashType = _getHashAndSighashTyp2.sighashType;\n        return Promise.resolve(keyPair.sign(hash)).then(function (signature) {\n          var partialSig = [{\n            pubkey: keyPair.publicKey,\n            signature: bscript.signature.encode(signature, sighashType)\n          }];\n          _this10.data.updateInput(inputIndex, {\n            partialSig: partialSig\n          });\n        });\n      }\n    }, {\n      key: \"_signTaprootInputAsync\",\n      value: function () {\n        var _signTaprootInputAsync2 = _asyncToGenerator(function* (inputIndex, input, keyPair, tapLeafHash) {\n          var _this11 = this;\n          var sighashTypes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [_$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_DEFAULT];\n          var hashesForSig = this.checkTaprootHashesForSig(inputIndex, input, keyPair, tapLeafHash, sighashTypes);\n          var signaturePromises = [];\n          var tapKeyHash = hashesForSig.filter(function (h) {\n            return !h.leafHash;\n          })[0];\n          if (tapKeyHash) {\n            var tapKeySigPromise = Promise.resolve(keyPair.signSchnorr(tapKeyHash.hash)).then(function (sig) {\n              return {\n                tapKeySig: (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").serializeTaprootSignature)(sig, input.sighashType)\n              };\n            });\n            signaturePromises.push(tapKeySigPromise);\n          }\n          var tapScriptHashes = hashesForSig.filter(function (h) {\n            return !!h.leafHash;\n          });\n          if (tapScriptHashes.length) {\n            var tapScriptSigPromises = tapScriptHashes.map(function (tsh) {\n              return Promise.resolve(keyPair.signSchnorr(tsh.hash)).then(function (signature) {\n                var tapScriptSig = [{\n                  pubkey: (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").toXOnly)(keyPair.publicKey),\n                  signature: (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").serializeTaprootSignature)(signature, input.sighashType),\n                  leafHash: tsh.leafHash\n                }];\n                return {\n                  tapScriptSig: tapScriptSig\n                };\n              });\n            });\n            signaturePromises.push.apply(signaturePromises, _toConsumableArray(tapScriptSigPromises));\n          }\n          return Promise.all(signaturePromises).then(function (results) {\n            results.forEach(function (v) {\n              return _this11.data.updateInput(inputIndex, v);\n            });\n          });\n        });\n        function _signTaprootInputAsync(_x, _x2, _x3, _x4) {\n          return _signTaprootInputAsync2.apply(this, arguments);\n        }\n        return _signTaprootInputAsync;\n      }()\n    }, {\n      key: \"checkTaprootHashesForSig\",\n      value: function checkTaprootHashesForSig(inputIndex, input, keyPair, tapLeafHashToSign, allowedSighashTypes) {\n        if (typeof keyPair.signSchnorr !== 'function') throw new Error(`Need Schnorr Signer to sign taproot input #${inputIndex}.`);\n        var hashesForSig = getTaprootHashesForSig(inputIndex, input, this.data.inputs, keyPair.publicKey, this.__CACHE, tapLeafHashToSign, allowedSighashTypes);\n        if (!hashesForSig || !hashesForSig.length) throw new Error(`Can not sign for input #${inputIndex} with the key ${tools.toHex(keyPair.publicKey)}`);\n        return hashesForSig;\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer() {\n        checkCache(this.__CACHE);\n        return this.data.toBuffer();\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex() {\n        checkCache(this.__CACHE);\n        return this.data.toHex();\n      }\n    }, {\n      key: \"toBase64\",\n      value: function toBase64() {\n        checkCache(this.__CACHE);\n        return this.data.toBase64();\n      }\n    }, {\n      key: \"updateGlobal\",\n      value: function updateGlobal(updateData) {\n        this.data.updateGlobal(updateData);\n        return this;\n      }\n    }, {\n      key: \"updateInput\",\n      value: function updateInput(inputIndex, updateData) {\n        if (updateData.witnessScript) checkInvalidP2WSH(updateData.witnessScript);\n        (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").checkTaprootInputFields)(this.data.inputs[inputIndex], updateData, 'updateInput');\n        this.data.updateInput(inputIndex, updateData);\n        if (updateData.nonWitnessUtxo) {\n          addNonWitnessTxCache(this.__CACHE, this.data.inputs[inputIndex], inputIndex);\n        }\n        return this;\n      }\n    }, {\n      key: \"updateOutput\",\n      value: function updateOutput(outputIndex, updateData) {\n        var outputData = this.data.outputs[outputIndex];\n        (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").checkTaprootOutputFields)(outputData, updateData, 'updateOutput');\n        this.data.updateOutput(outputIndex, updateData);\n        return this;\n      }\n    }, {\n      key: \"addUnknownKeyValToGlobal\",\n      value: function addUnknownKeyValToGlobal(keyVal) {\n        this.data.addUnknownKeyValToGlobal(keyVal);\n        return this;\n      }\n    }, {\n      key: \"addUnknownKeyValToInput\",\n      value: function addUnknownKeyValToInput(inputIndex, keyVal) {\n        this.data.addUnknownKeyValToInput(inputIndex, keyVal);\n        return this;\n      }\n    }, {\n      key: \"addUnknownKeyValToOutput\",\n      value: function addUnknownKeyValToOutput(outputIndex, keyVal) {\n        this.data.addUnknownKeyValToOutput(outputIndex, keyVal);\n        return this;\n      }\n    }, {\n      key: \"clearFinalizedInput\",\n      value: function clearFinalizedInput(inputIndex) {\n        this.data.clearFinalizedInput(inputIndex);\n        return this;\n      }\n    }], [{\n      key: \"fromBase64\",\n      value: function fromBase64(data) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var buffer = tools.fromBase64(data);\n        return this.fromBuffer(buffer, opts);\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(data) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var buffer = tools.fromHex(data);\n        return this.fromBuffer(buffer, opts);\n      }\n    }, {\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer) {\n        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var psbtBase = _$$_REQUIRE(_dependencyMap[10], \"bip174\").Psbt.fromBuffer(buffer, transactionFromBuffer);\n        var psbt = new Psbt(opts, psbtBase);\n        checkTxForDupeIns(psbt.__CACHE.__TX, psbt.__CACHE);\n        return psbt;\n      }\n    }]);\n  }();\n  exports.Psbt = Psbt;\n  /**\n   * This function is needed to pass to the bip174 base class's fromBuffer.\n   * It takes the \"transaction buffer\" portion of the psbt buffer and returns a\n   * Transaction (From the bip174 library) interface.\n   */\n  var transactionFromBuffer = function transactionFromBuffer(buffer) {\n    return new PsbtTransaction(buffer);\n  };\n  /**\n   * This class implements the Transaction interface from bip174 library.\n   * It contains a bitcoinjs-lib Transaction object.\n   */\n  var PsbtTransaction = /*#__PURE__*/function () {\n    function PsbtTransaction() {\n      var buffer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Uint8Array.from([2, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n      _classCallCheck(this, PsbtTransaction);\n      this.tx = _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.fromBuffer(buffer);\n      checkTxEmpty(this.tx);\n      Object.defineProperty(this, 'tx', {\n        enumerable: false,\n        writable: true\n      });\n    }\n    return _createClass(PsbtTransaction, [{\n      key: \"getInputOutputCounts\",\n      value: function getInputOutputCounts() {\n        return {\n          inputCount: this.tx.ins.length,\n          outputCount: this.tx.outs.length\n        };\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(input) {\n        if (input.hash === undefined || input.index === undefined || !(input.hash instanceof Uint8Array) && typeof input.hash !== 'string' || typeof input.index !== 'number') {\n          throw new Error('Error adding input.');\n        }\n        var hash = typeof input.hash === 'string' ? (0, _$$_REQUIRE(_dependencyMap[11], \"./bufferutils.cjs\").reverseBuffer)(tools.fromHex(input.hash)) : input.hash;\n        this.tx.addInput(hash, input.index, input.sequence);\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(output) {\n        if (output.script === undefined || output.value === undefined || !(output.script instanceof Uint8Array) || typeof output.value !== 'bigint') {\n          throw new Error('Error adding output.');\n        }\n        this.tx.addOutput(output.script, output.value);\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer() {\n        return this.tx.toBuffer();\n      }\n    }]);\n  }();\n  function canFinalize(input, script, scriptType) {\n    switch (scriptType) {\n      case 'pubkey':\n      case 'pubkeyhash':\n      case 'witnesspubkeyhash':\n        return hasSigs(1, input.partialSig);\n      case 'multisig':\n        var p2ms = payments.p2ms({\n          output: script\n        });\n        return hasSigs(p2ms.m, input.partialSig, p2ms.pubkeys);\n      default:\n        return false;\n    }\n  }\n  function checkCache(cache) {\n    if (cache.__UNSAFE_SIGN_NONSEGWIT !== false) {\n      throw new Error('Not BIP174 compliant, can not export');\n    }\n  }\n  function hasSigs(neededSigs, partialSig, pubkeys) {\n    if (!partialSig) return false;\n    var sigs;\n    if (pubkeys) {\n      sigs = pubkeys.map(function (pkey) {\n        var pubkey = compressPubkey(pkey);\n        return partialSig.find(function (pSig) {\n          return tools.compare(pSig.pubkey, pubkey) === 0;\n        });\n      }).filter(function (v) {\n        return !!v;\n      });\n    } else {\n      sigs = partialSig;\n    }\n    if (sigs.length > neededSigs) throw new Error('Too many signatures');\n    return sigs.length === neededSigs;\n  }\n  function isFinalized(input) {\n    return !!input.finalScriptSig || !!input.finalScriptWitness;\n  }\n  function bip32DerivationIsMine(root) {\n    return function (d) {\n      if (tools.compare(root.fingerprint, d.masterFingerprint)) return false;\n      if (tools.compare(root.derivePath(d.path).publicKey, d.pubkey)) return false;\n      return true;\n    };\n  }\n  function check32Bit(num) {\n    if (typeof num !== 'number' || num !== Math.floor(num) || num > 0xffffffff || num < 0) {\n      throw new Error('Invalid 32 bit integer');\n    }\n  }\n  function checkFees(psbt, cache, opts) {\n    var feeRate = cache.__FEE_RATE || psbt.getFeeRate();\n    var vsize = cache.__EXTRACTED_TX.virtualSize();\n    var satoshis = feeRate * vsize;\n    if (feeRate >= opts.maximumFeeRate) {\n      throw new Error(`Warning: You are paying around ${(satoshis / 1e8).toFixed(8)} in ` + `fees, which is ${feeRate} satoshi per byte for a transaction ` + `with a VSize of ${vsize} bytes (segwit counted as 0.25 byte per ` + `byte). Use setMaximumFeeRate method to raise your threshold, or ` + `pass true to the first arg of extractTransaction.`);\n    }\n  }\n  function checkInputsForPartialSig(inputs, action) {\n    inputs.forEach(function (input) {\n      var throws = (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").isTaprootInput)(input) ? (0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").checkTaprootInputForSigs)(input, action) : (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").checkInputForSig)(input, action);\n      if (throws) throw new Error('Can not modify transaction, signatures exist.');\n    });\n  }\n  function checkPartialSigSighashes(input) {\n    if (!input.sighashType || !input.partialSig) return;\n    var partialSig = input.partialSig,\n      sighashType = input.sighashType;\n    partialSig.forEach(function (pSig) {\n      var _bscript$signature$de = bscript.signature.decode(pSig.signature),\n        hashType = _bscript$signature$de.hashType;\n      if (sighashType !== hashType) {\n        throw new Error('Signature sighash does not match input sighash type');\n      }\n    });\n  }\n  function checkScriptForPubkey(pubkey, script, action) {\n    if (!(0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").pubkeyInScript)(pubkey, script)) {\n      throw new Error(`Can not ${action} for this input with the key ${tools.toHex(pubkey)}`);\n    }\n  }\n  function checkTxEmpty(tx) {\n    var isEmpty = tx.ins.every(function (input) {\n      return input.script && input.script.length === 0 && input.witness && input.witness.length === 0;\n    });\n    if (!isEmpty) {\n      throw new Error('Format Error: Transaction ScriptSigs are not empty');\n    }\n  }\n  function checkTxForDupeIns(tx, cache) {\n    tx.ins.forEach(function (input) {\n      checkTxInputCache(cache, input);\n    });\n  }\n  function checkTxInputCache(cache, input) {\n    var key = tools.toHex((0, _$$_REQUIRE(_dependencyMap[11], \"./bufferutils.cjs\").reverseBuffer)(Uint8Array.from(input.hash))) + ':' + input.index;\n    if (cache.__TX_IN_CACHE[key]) throw new Error('Duplicate input detected.');\n    cache.__TX_IN_CACHE[key] = 1;\n  }\n  function scriptCheckerFactory(payment, paymentScriptName) {\n    return function (inputIndex, scriptPubKey, redeemScript, ioType) {\n      var redeemScriptOutput = payment({\n        redeem: {\n          output: redeemScript\n        }\n      }).output;\n      if (tools.compare(scriptPubKey, redeemScriptOutput)) {\n        throw new Error(`${paymentScriptName} for ${ioType} #${inputIndex} doesn't match the scriptPubKey in the prevout`);\n      }\n    };\n  }\n  var checkRedeemScript = scriptCheckerFactory(payments.p2sh, 'Redeem script');\n  var checkWitnessScript = scriptCheckerFactory(payments.p2wsh, 'Witness script');\n  function getTxCacheValue(key, name, inputs, c) {\n    if (!inputs.every(isFinalized)) throw new Error(`PSBT must be finalized to calculate ${name}`);\n    if (key === '__FEE_RATE' && c.__FEE_RATE) return c.__FEE_RATE;\n    if (key === '__FEE' && c.__FEE) return c.__FEE;\n    var tx;\n    var mustFinalize = true;\n    if (c.__EXTRACTED_TX) {\n      tx = c.__EXTRACTED_TX;\n      mustFinalize = false;\n    } else {\n      tx = c.__TX.clone();\n    }\n    inputFinalizeGetAmts(inputs, tx, c, mustFinalize);\n    if (key === '__FEE_RATE') return c.__FEE_RATE;else if (key === '__FEE') return c.__FEE;\n  }\n  function getFinalScripts(inputIndex, input, script, isSegwit, isP2SH, isP2WSH) {\n    var scriptType = classifyScript(script);\n    if (!canFinalize(input, script, scriptType)) throw new Error(`Can not finalize input #${inputIndex}`);\n    return prepareFinalScripts(script, scriptType, input.partialSig, isSegwit, isP2SH, isP2WSH);\n  }\n  function prepareFinalScripts(script, scriptType, partialSig, isSegwit, isP2SH, isP2WSH) {\n    var finalScriptSig;\n    var finalScriptWitness;\n    // Wow, the payments API is very handy\n    var payment = getPayment(script, scriptType, partialSig);\n    var p2wsh = !isP2WSH ? null : payments.p2wsh({\n      redeem: payment\n    });\n    var p2sh = !isP2SH ? null : payments.p2sh({\n      redeem: p2wsh || payment\n    });\n    if (isSegwit) {\n      if (p2wsh) {\n        finalScriptWitness = (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").witnessStackToScriptWitness)(p2wsh.witness);\n      } else {\n        finalScriptWitness = (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").witnessStackToScriptWitness)(payment.witness);\n      }\n      if (p2sh) {\n        finalScriptSig = p2sh.input;\n      }\n    } else {\n      if (p2sh) {\n        finalScriptSig = p2sh.input;\n      } else {\n        finalScriptSig = payment.input;\n      }\n    }\n    return {\n      finalScriptSig: finalScriptSig,\n      finalScriptWitness: finalScriptWitness\n    };\n  }\n  function getHashAndSighashType(inputs, inputIndex, pubkey, cache, sighashTypes) {\n    var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(inputs, inputIndex);\n    var _getHashForSig = getHashForSig(inputIndex, input, cache, false, sighashTypes),\n      hash = _getHashForSig.hash,\n      sighashType = _getHashForSig.sighashType,\n      script = _getHashForSig.script;\n    checkScriptForPubkey(pubkey, script, 'sign');\n    return {\n      hash: hash,\n      sighashType: sighashType\n    };\n  }\n  function getHashForSig(inputIndex, input, cache, forValidate, sighashTypes) {\n    var unsignedTx = cache.__TX;\n    var sighashType = input.sighashType || _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL;\n    checkSighashTypeAllowed(sighashType, sighashTypes);\n    var hash;\n    var prevout;\n    if (input.nonWitnessUtxo) {\n      var nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(cache, input, inputIndex);\n      var prevoutHash = unsignedTx.ins[inputIndex].hash;\n      var utxoHash = nonWitnessUtxoTx.getHash();\n      // If a non-witness UTXO is provided, its hash must match the hash specified in the prevout\n      if (tools.compare(prevoutHash, utxoHash) !== 0) {\n        throw new Error(`Non-witness UTXO hash for input #${inputIndex} doesn't match the hash specified in the prevout`);\n      }\n      var prevoutIndex = unsignedTx.ins[inputIndex].index;\n      prevout = nonWitnessUtxoTx.outs[prevoutIndex];\n    } else if (input.witnessUtxo) {\n      prevout = input.witnessUtxo;\n    } else {\n      throw new Error('Need a Utxo input item for signing');\n    }\n    var _getMeaningfulScript = getMeaningfulScript(prevout.script, inputIndex, 'input', input.redeemScript, input.witnessScript),\n      meaningfulScript = _getMeaningfulScript.meaningfulScript,\n      type = _getMeaningfulScript.type;\n    if (['p2sh-p2wsh', 'p2wsh'].indexOf(type) >= 0) {\n      hash = unsignedTx.hashForWitnessV0(inputIndex, meaningfulScript, prevout.value, sighashType);\n    } else if ((0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2WPKH)(meaningfulScript)) {\n      // P2WPKH uses the P2PKH template for prevoutScript when signing\n      var signingScript = payments.p2pkh({\n        hash: meaningfulScript.slice(2)\n      }).output;\n      hash = unsignedTx.hashForWitnessV0(inputIndex, signingScript, prevout.value, sighashType);\n    } else {\n      // non-segwit\n      if (input.nonWitnessUtxo === undefined && cache.__UNSAFE_SIGN_NONSEGWIT === false) throw new Error(`Input #${inputIndex} has witnessUtxo but non-segwit script: ` + `${tools.toHex(meaningfulScript)}`);\n      if (!forValidate && cache.__UNSAFE_SIGN_NONSEGWIT !== false) console.warn('Warning: Signing non-segwit inputs without the full parent transaction ' + 'means there is a chance that a miner could feed you incorrect information ' + \"to trick you into paying large fees. This behavior is the same as Psbt's predecessor \" + '(TransactionBuilder - now removed) when signing non-segwit scripts. You are not ' + 'able to export this Psbt with toBuffer|toBase64|toHex since it is not ' + 'BIP174 compliant.\\n*********************\\nPROCEED WITH CAUTION!\\n' + '*********************');\n      hash = unsignedTx.hashForSignature(inputIndex, meaningfulScript, sighashType);\n    }\n    return {\n      script: meaningfulScript,\n      sighashType: sighashType,\n      hash: hash\n    };\n  }\n  function getAllTaprootHashesForSig(inputIndex, input, inputs, cache) {\n    var allPublicKeys = [];\n    if (input.tapInternalKey) {\n      var key = getPrevoutTaprootKey(inputIndex, input, cache);\n      if (key) {\n        allPublicKeys.push(key);\n      }\n    }\n    if (input.tapScriptSig) {\n      var tapScriptPubkeys = input.tapScriptSig.map(function (tss) {\n        return tss.pubkey;\n      });\n      allPublicKeys.push.apply(allPublicKeys, _toConsumableArray(tapScriptPubkeys));\n    }\n    var allHashes = allPublicKeys.map(function (publicKey) {\n      return getTaprootHashesForSig(inputIndex, input, inputs, publicKey, cache);\n    });\n    return allHashes.flat();\n  }\n  function getPrevoutTaprootKey(inputIndex, input, cache) {\n    var _getScriptAndAmountFr = getScriptAndAmountFromUtxo(inputIndex, input, cache),\n      script = _getScriptAndAmountFr.script;\n    return (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2TR)(script) ? script.subarray(2, 34) : null;\n  }\n  function trimTaprootSig(signature) {\n    return signature.length === 64 ? signature : signature.subarray(0, 64);\n  }\n  function getTaprootHashesForSig(inputIndex, input, inputs, pubkey, cache, tapLeafHashToSign, allowedSighashTypes) {\n    var unsignedTx = cache.__TX;\n    var sighashType = input.sighashType || _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_DEFAULT;\n    checkSighashTypeAllowed(sighashType, allowedSighashTypes);\n    var prevOuts = inputs.map(function (i, index) {\n      return getScriptAndAmountFromUtxo(index, i, cache);\n    });\n    var signingScripts = prevOuts.map(function (o) {\n      return o.script;\n    });\n    var values = prevOuts.map(function (o) {\n      return o.value;\n    });\n    var hashes = [];\n    if (input.tapInternalKey && !tapLeafHashToSign) {\n      var outputKey = getPrevoutTaprootKey(inputIndex, input, cache) || Uint8Array.from([]);\n      if (tools.compare((0, _$$_REQUIRE(_dependencyMap[13], \"./psbt/bip371.cjs\").toXOnly)(pubkey), outputKey) === 0) {\n        var tapKeyHash = unsignedTx.hashForWitnessV1(inputIndex, signingScripts, values, sighashType);\n        hashes.push({\n          pubkey: pubkey,\n          hash: tapKeyHash\n        });\n      }\n    }\n    var tapLeafHashes = (input.tapLeafScript || []).filter(function (tapLeaf) {\n      return (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").pubkeyInScript)(pubkey, tapLeaf.script);\n    }).map(function (tapLeaf) {\n      var hash = (0, _$$_REQUIRE(_dependencyMap[16], \"./payments/bip341.cjs\").tapleafHash)({\n        output: tapLeaf.script,\n        version: tapLeaf.leafVersion\n      });\n      return Object.assign({\n        hash: hash\n      }, tapLeaf);\n    }).filter(function (tapLeaf) {\n      return !tapLeafHashToSign || tools.compare(tapLeafHashToSign, tapLeaf.hash) === 0;\n    }).map(function (tapLeaf) {\n      var tapScriptHash = unsignedTx.hashForWitnessV1(inputIndex, signingScripts, values, sighashType, tapLeaf.hash);\n      return {\n        pubkey: pubkey,\n        hash: tapScriptHash,\n        leafHash: tapLeaf.hash\n      };\n    });\n    return hashes.concat(tapLeafHashes);\n  }\n  function checkSighashTypeAllowed(sighashType, sighashTypes) {\n    if (sighashTypes && sighashTypes.indexOf(sighashType) < 0) {\n      var str = sighashTypeToString(sighashType);\n      throw new Error(`Sighash type is not allowed. Retry the sign method passing the ` + `sighashTypes array of whitelisted types. Sighash type: ${str}`);\n    }\n  }\n  function getPayment(script, scriptType, partialSig) {\n    var payment;\n    switch (scriptType) {\n      case 'multisig':\n        var sigs = getSortedSigs(script, partialSig);\n        payment = payments.p2ms({\n          output: script,\n          signatures: sigs\n        });\n        break;\n      case 'pubkey':\n        payment = payments.p2pk({\n          output: script,\n          signature: partialSig[0].signature\n        });\n        break;\n      case 'pubkeyhash':\n        payment = payments.p2pkh({\n          output: script,\n          pubkey: partialSig[0].pubkey,\n          signature: partialSig[0].signature\n        });\n        break;\n      case 'witnesspubkeyhash':\n        payment = payments.p2wpkh({\n          output: script,\n          pubkey: partialSig[0].pubkey,\n          signature: partialSig[0].signature\n        });\n        break;\n    }\n    return payment;\n  }\n  function getScriptFromInput(inputIndex, input, cache) {\n    var unsignedTx = cache.__TX;\n    var res = {\n      script: null,\n      isSegwit: false,\n      isP2SH: false,\n      isP2WSH: false\n    };\n    res.isP2SH = !!input.redeemScript;\n    res.isP2WSH = !!input.witnessScript;\n    if (input.witnessScript) {\n      res.script = input.witnessScript;\n    } else if (input.redeemScript) {\n      res.script = input.redeemScript;\n    } else {\n      if (input.nonWitnessUtxo) {\n        var nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(cache, input, inputIndex);\n        var prevoutIndex = unsignedTx.ins[inputIndex].index;\n        res.script = nonWitnessUtxoTx.outs[prevoutIndex].script;\n      } else if (input.witnessUtxo) {\n        res.script = input.witnessUtxo.script;\n      }\n    }\n    if (input.witnessScript || (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2WPKH)(res.script)) {\n      res.isSegwit = true;\n    }\n    return res;\n  }\n  function getSignersFromHD(inputIndex, inputs, hdKeyPair) {\n    var input = (0, _$$_REQUIRE(_dependencyMap[10], \"bip174\").checkForInput)(inputs, inputIndex);\n    if (!input.bip32Derivation || input.bip32Derivation.length === 0) {\n      throw new Error('Need bip32Derivation to sign with HD');\n    }\n    var myDerivations = input.bip32Derivation.map(function (bipDv) {\n      if (tools.compare(bipDv.masterFingerprint, hdKeyPair.fingerprint) === 0) {\n        return bipDv;\n      } else {\n        return;\n      }\n    }).filter(function (v) {\n      return !!v;\n    });\n    if (myDerivations.length === 0) {\n      throw new Error('Need one bip32Derivation masterFingerprint to match the HDSigner fingerprint');\n    }\n    var signers = myDerivations.map(function (bipDv) {\n      var node = hdKeyPair.derivePath(bipDv.path);\n      if (tools.compare(bipDv.pubkey, node.publicKey) !== 0) {\n        throw new Error('pubkey did not match bip32Derivation');\n      }\n      return node;\n    });\n    return signers;\n  }\n  function getSortedSigs(script, partialSig) {\n    var p2ms = payments.p2ms({\n      output: script\n    });\n    // for each pubkey in order of p2ms script\n    return p2ms.pubkeys.map(function (pk) {\n      // filter partialSig array by pubkey being equal\n      return (partialSig.filter(function (ps) {\n        return tools.compare(ps.pubkey, pk) === 0;\n      })[0] || {}).signature;\n      // Any pubkey without a match will return undefined\n      // this last filter removes all the undefined items in the array.\n    }).filter(function (v) {\n      return !!v;\n    });\n  }\n  function scriptWitnessToWitnessStack(buffer) {\n    var offset = 0;\n    function readSlice(n) {\n      offset += n;\n      return buffer.slice(offset - n, offset);\n    }\n    function readVarInt() {\n      var vi = varuint.decode(buffer, offset);\n      offset += varuint.encodingLength(vi.bigintValue);\n      return vi.numberValue;\n    }\n    function readVarSlice() {\n      return readSlice(readVarInt());\n    }\n    function readVector() {\n      var count = readVarInt();\n      var vector = [];\n      for (var i = 0; i < count; i++) vector.push(readVarSlice());\n      return vector;\n    }\n    return readVector();\n  }\n  function sighashTypeToString(sighashType) {\n    var text = sighashType & _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ANYONECANPAY ? 'SIGHASH_ANYONECANPAY | ' : '';\n    var sigMod = sighashType & 0x1f;\n    switch (sigMod) {\n      case _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_ALL:\n        text += 'SIGHASH_ALL';\n        break;\n      case _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_SINGLE:\n        text += 'SIGHASH_SINGLE';\n        break;\n      case _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.SIGHASH_NONE:\n        text += 'SIGHASH_NONE';\n        break;\n    }\n    return text;\n  }\n  function addNonWitnessTxCache(cache, input, inputIndex) {\n    cache.__NON_WITNESS_UTXO_BUF_CACHE[inputIndex] = input.nonWitnessUtxo;\n    var tx = _$$_REQUIRE(_dependencyMap[15], \"./transaction.cjs\").Transaction.fromBuffer(input.nonWitnessUtxo);\n    cache.__NON_WITNESS_UTXO_TX_CACHE[inputIndex] = tx;\n    var self = cache;\n    var selfIndex = inputIndex;\n    delete input.nonWitnessUtxo;\n    Object.defineProperty(input, 'nonWitnessUtxo', {\n      enumerable: true,\n      get: function get() {\n        var buf = self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex];\n        var txCache = self.__NON_WITNESS_UTXO_TX_CACHE[selfIndex];\n        if (buf !== undefined) {\n          return buf;\n        } else {\n          var newBuf = txCache.toBuffer();\n          self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = newBuf;\n          return newBuf;\n        }\n      },\n      set: function set(data) {\n        self.__NON_WITNESS_UTXO_BUF_CACHE[selfIndex] = data;\n      }\n    });\n  }\n  function inputFinalizeGetAmts(inputs, tx, cache, mustFinalize) {\n    var inputAmount = 0n;\n    inputs.forEach(function (input, idx) {\n      if (mustFinalize && input.finalScriptSig) tx.ins[idx].script = input.finalScriptSig;\n      if (mustFinalize && input.finalScriptWitness) {\n        tx.ins[idx].witness = scriptWitnessToWitnessStack(input.finalScriptWitness);\n      }\n      if (input.witnessUtxo) {\n        inputAmount += input.witnessUtxo.value;\n      } else if (input.nonWitnessUtxo) {\n        var nwTx = nonWitnessUtxoTxFromCache(cache, input, idx);\n        var vout = tx.ins[idx].index;\n        var out = nwTx.outs[vout];\n        inputAmount += out.value;\n      }\n    });\n    var outputAmount = tx.outs.reduce(function (total, o) {\n      return total + o.value;\n    }, 0n);\n    var fee = inputAmount - outputAmount;\n    if (fee < 0) {\n      throw new Error('Outputs are spending more than Inputs');\n    }\n    var bytes = tx.virtualSize();\n    cache.__FEE = fee;\n    cache.__EXTRACTED_TX = tx;\n    cache.__FEE_RATE = Math.floor(Number(fee / BigInt(bytes)));\n  }\n  function nonWitnessUtxoTxFromCache(cache, input, inputIndex) {\n    var c = cache.__NON_WITNESS_UTXO_TX_CACHE;\n    if (!c[inputIndex]) {\n      addNonWitnessTxCache(cache, input, inputIndex);\n    }\n    return c[inputIndex];\n  }\n  function getScriptFromUtxo(inputIndex, input, cache) {\n    var _getScriptAndAmountFr2 = getScriptAndAmountFromUtxo(inputIndex, input, cache),\n      script = _getScriptAndAmountFr2.script;\n    return script;\n  }\n  function getScriptAndAmountFromUtxo(inputIndex, input, cache) {\n    if (input.witnessUtxo !== undefined) {\n      return {\n        script: input.witnessUtxo.script,\n        value: input.witnessUtxo.value\n      };\n    } else if (input.nonWitnessUtxo !== undefined) {\n      var nonWitnessUtxoTx = nonWitnessUtxoTxFromCache(cache, input, inputIndex);\n      var o = nonWitnessUtxoTx.outs[cache.__TX.ins[inputIndex].index];\n      return {\n        script: o.script,\n        value: o.value\n      };\n    } else {\n      throw new Error(\"Can't find pubkey in input without Utxo data\");\n    }\n  }\n  function pubkeyInInput(pubkey, input, inputIndex, cache) {\n    var script = getScriptFromUtxo(inputIndex, input, cache);\n    var _getMeaningfulScript2 = getMeaningfulScript(script, inputIndex, 'input', input.redeemScript, input.witnessScript),\n      meaningfulScript = _getMeaningfulScript2.meaningfulScript;\n    return (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").pubkeyInScript)(pubkey, meaningfulScript);\n  }\n  function pubkeyInOutput(pubkey, output, outputIndex, cache) {\n    var script = cache.__TX.outs[outputIndex].script;\n    var _getMeaningfulScript3 = getMeaningfulScript(script, outputIndex, 'output', output.redeemScript, output.witnessScript),\n      meaningfulScript = _getMeaningfulScript3.meaningfulScript;\n    return (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").pubkeyInScript)(pubkey, meaningfulScript);\n  }\n  function redeemFromFinalScriptSig(finalScript) {\n    if (!finalScript) return;\n    var decomp = bscript.decompile(finalScript);\n    if (!decomp) return;\n    var lastItem = decomp[decomp.length - 1];\n    if (!(lastItem instanceof Uint8Array) || isPubkeyLike(lastItem) || isSigLike(lastItem)) return;\n    var sDecomp = bscript.decompile(lastItem);\n    if (!sDecomp) return;\n    return lastItem;\n  }\n  function redeemFromFinalWitnessScript(finalScript) {\n    if (!finalScript) return;\n    var decomp = scriptWitnessToWitnessStack(finalScript);\n    var lastItem = decomp[decomp.length - 1];\n    if (isPubkeyLike(lastItem)) return;\n    var sDecomp = bscript.decompile(lastItem);\n    if (!sDecomp) return;\n    return lastItem;\n  }\n  function compressPubkey(pubkey) {\n    if (pubkey.length === 65) {\n      var parity = pubkey[64] & 1;\n      var newKey = pubkey.slice(0, 33);\n      newKey[0] = 2 | parity;\n      return newKey;\n    }\n    return pubkey.slice();\n  }\n  function isPubkeyLike(buf) {\n    return buf.length === 33 && bscript.isCanonicalPubKey(buf);\n  }\n  function isSigLike(buf) {\n    return bscript.isCanonicalScriptSignature(buf);\n  }\n  function getMeaningfulScript(script, index, ioType, redeemScript, witnessScript) {\n    var isP2SH = (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2SHScript)(script);\n    var isP2SHP2WSH = isP2SH && redeemScript && (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2WSHScript)(redeemScript);\n    var isP2WSH = (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2WSHScript)(script);\n    if (isP2SH && redeemScript === undefined) throw new Error('scriptPubkey is P2SH but redeemScript missing');\n    if ((isP2WSH || isP2SHP2WSH) && witnessScript === undefined) throw new Error('scriptPubkey or redeemScript is P2WSH but witnessScript missing');\n    var meaningfulScript;\n    if (isP2SHP2WSH) {\n      meaningfulScript = witnessScript;\n      checkRedeemScript(index, script, redeemScript, ioType);\n      checkWitnessScript(index, redeemScript, witnessScript, ioType);\n      checkInvalidP2WSH(meaningfulScript);\n    } else if (isP2WSH) {\n      meaningfulScript = witnessScript;\n      checkWitnessScript(index, script, witnessScript, ioType);\n      checkInvalidP2WSH(meaningfulScript);\n    } else if (isP2SH) {\n      meaningfulScript = redeemScript;\n      checkRedeemScript(index, script, redeemScript, ioType);\n    } else {\n      meaningfulScript = script;\n    }\n    return {\n      meaningfulScript: meaningfulScript,\n      type: isP2SHP2WSH ? 'p2sh-p2wsh' : isP2SH ? 'p2sh' : isP2WSH ? 'p2wsh' : 'raw'\n    };\n  }\n  function checkInvalidP2WSH(script) {\n    if ((0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2WPKH)(script) || (0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2SHScript)(script)) {\n      throw new Error('P2WPKH or P2SH can not be contained within P2WSH');\n    }\n  }\n  function classifyScript(script) {\n    if ((0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2WPKH)(script)) return 'witnesspubkeyhash';\n    if ((0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2PKH)(script)) return 'pubkeyhash';\n    if ((0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2MS)(script)) return 'multisig';\n    if ((0, _$$_REQUIRE(_dependencyMap[14], \"./psbt/psbtutils.cjs\").isP2PK)(script)) return 'pubkey';\n    return 'nonstandard';\n  }\n  function range(n) {\n    return _toConsumableArray(Array(n).keys());\n  }\n});","lineCount":1594,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_asyncToGenerator"],[4,23,1,13],[4,26,1,13,"_$$_REQUIRE"],[4,37,1,13],[4,38,1,13,"_dependencyMap"],[4,52,1,13],[5,2,1,13],[5,6,1,13,"_slicedToArray"],[5,20,1,13],[5,23,1,13,"_$$_REQUIRE"],[5,34,1,13],[5,35,1,13,"_dependencyMap"],[5,49,1,13],[6,2,1,13],[6,6,1,13,"_toConsumableArray"],[6,24,1,13],[6,27,1,13,"_$$_REQUIRE"],[6,38,1,13],[6,39,1,13,"_dependencyMap"],[6,53,1,13],[7,2,1,13],[7,6,1,13,"_classCallCheck"],[7,21,1,13],[7,24,1,13,"_$$_REQUIRE"],[7,35,1,13],[7,36,1,13,"_dependencyMap"],[7,50,1,13],[8,2,1,13],[8,6,1,13,"_createClass"],[8,18,1,13],[8,21,1,13,"_$$_REQUIRE"],[8,32,1,13],[8,33,1,13,"_dependencyMap"],[8,47,1,13],[9,2,2,0],[9,6,2,4,"__createBinding"],[9,21,2,19],[9,24,3,3],[9,28,3,7],[9,32,3,11],[9,36,3,15],[9,37,3,16,"__createBinding"],[9,52,3,31],[9,57,4,3,"Object"],[9,63,4,9],[9,64,4,10,"create"],[9,70,4,16],[9,73,5,6],[9,83,5,16,"o"],[9,84,5,17],[9,86,5,19,"m"],[9,87,5,20],[9,89,5,22,"k"],[9,90,5,23],[9,92,5,25,"k2"],[9,94,5,27],[9,96,5,29],[10,4,6,8],[10,8,6,12,"k2"],[10,10,6,14],[10,15,6,19,"undefined"],[10,24,6,28],[10,26,6,30,"k2"],[10,28,6,32],[10,31,6,35,"k"],[10,32,6,36],[11,4,7,8],[11,8,7,12,"desc"],[11,12,7,16],[11,15,7,19,"Object"],[11,21,7,25],[11,22,7,26,"getOwnPropertyDescriptor"],[11,46,7,50],[11,47,7,51,"m"],[11,48,7,52],[11,50,7,54,"k"],[11,51,7,55],[11,52,7,56],[12,4,8,8],[12,8,9,10],[12,9,9,11,"desc"],[12,13,9,15],[12,18,10,11],[12,23,10,16],[12,27,10,20,"desc"],[12,31,10,24],[12,34,10,27],[12,35,10,28,"m"],[12,36,10,29],[12,37,10,30,"__esModule"],[12,47,10,40],[12,50,10,43,"desc"],[12,54,10,47],[12,55,10,48,"writable"],[12,63,10,56],[12,67,10,60,"desc"],[12,71,10,64],[12,72,10,65,"configurable"],[12,84,10,77],[12,85,10,78],[12,87,11,10],[13,6,12,10,"desc"],[13,10,12,14],[13,13,12,17],[14,8,13,12,"enumerable"],[14,18,13,22],[14,20,13,24],[14,24,13,28],[15,8,14,12,"get"],[15,11,14,15],[15,13,14,17],[15,22,14,12,"get"],[15,25,14,15,"get"],[15,26,14,15],[15,28,14,29],[16,10,15,14],[16,17,15,21,"m"],[16,18,15,22],[16,19,15,23,"k"],[16,20,15,24],[16,21,15,25],[17,8,16,12],[18,6,17,10],[18,7,17,11],[19,4,18,8],[20,4,19,8,"Object"],[20,10,19,14],[20,11,19,15,"defineProperty"],[20,25,19,29],[20,26,19,30,"o"],[20,27,19,31],[20,29,19,33,"k2"],[20,31,19,35],[20,33,19,37,"desc"],[20,37,19,41],[20,38,19,42],[21,2,20,6],[21,3,20,7],[21,6,21,6],[21,16,21,16,"o"],[21,17,21,17],[21,19,21,19,"m"],[21,20,21,20],[21,22,21,22,"k"],[21,23,21,23],[21,25,21,25,"k2"],[21,27,21,27],[21,29,21,29],[22,4,22,8],[22,8,22,12,"k2"],[22,10,22,14],[22,15,22,19,"undefined"],[22,24,22,28],[22,26,22,30,"k2"],[22,28,22,32],[22,31,22,35,"k"],[22,32,22,36],[23,4,23,8,"o"],[23,5,23,9],[23,6,23,10,"k2"],[23,8,23,12],[23,9,23,13],[23,12,23,16,"m"],[23,13,23,17],[23,14,23,18,"k"],[23,15,23,19],[23,16,23,20],[24,2,24,6],[24,3,24,7],[24,4,24,8],[25,2,25,0],[25,6,25,4,"__setModuleDefault"],[25,24,25,22],[25,27,26,3],[25,31,26,7],[25,35,26,11],[25,39,26,15],[25,40,26,16,"__setModuleDefault"],[25,58,26,34],[25,63,27,3,"Object"],[25,69,27,9],[25,70,27,10,"create"],[25,76,27,16],[25,79,28,6],[25,89,28,16,"o"],[25,90,28,17],[25,92,28,19,"v"],[25,93,28,20],[25,95,28,22],[26,4,29,8,"Object"],[26,10,29,14],[26,11,29,15,"defineProperty"],[26,25,29,29],[26,26,29,30,"o"],[26,27,29,31],[26,29,29,33],[26,38,29,42],[26,40,29,44],[27,6,29,46,"enumerable"],[27,16,29,56],[27,18,29,58],[27,22,29,62],[28,6,29,64,"value"],[28,11,29,69],[28,13,29,71,"v"],[29,4,29,73],[29,5,29,74],[29,6,29,75],[30,2,30,6],[30,3,30,7],[30,6,31,6],[30,16,31,16,"o"],[30,17,31,17],[30,19,31,19,"v"],[30,20,31,20],[30,22,31,22],[31,4,32,8,"o"],[31,5,32,9],[31,6,32,10],[31,15,32,19],[31,16,32,20],[31,19,32,23,"v"],[31,20,32,24],[32,2,33,6],[32,3,33,7],[32,4,33,8],[33,2,34,0],[33,6,34,4,"__importStar"],[33,18,34,16],[33,21,35,3],[33,25,35,7],[33,29,35,11],[33,33,35,15],[33,34,35,16,"__importStar"],[33,46,35,28],[33,50,36,2],[33,60,36,12,"mod"],[33,63,36,15],[33,65,36,17],[34,4,37,4],[34,8,37,8,"mod"],[34,11,37,11],[34,15,37,15,"mod"],[34,18,37,18],[34,19,37,19,"__esModule"],[34,29,37,29],[34,31,37,31],[34,38,37,38,"mod"],[34,41,37,41],[35,4,38,4],[35,8,38,8,"result"],[35,14,38,14],[35,17,38,17],[35,18,38,18],[35,19,38,19],[36,4,39,4],[36,8,39,8,"mod"],[36,11,39,11],[36,15,39,15],[36,19,39,19],[36,21,40,6],[36,26,40,11],[36,30,40,15,"k"],[36,31,40,16],[36,35,40,20,"mod"],[36,38,40,23],[36,40,41,8],[36,44,41,12,"k"],[36,45,41,13],[36,50,41,18],[36,59,41,27],[36,63,41,31,"Object"],[36,69,41,37],[36,70,41,38,"prototype"],[36,79,41,47],[36,80,41,48,"hasOwnProperty"],[36,94,41,62],[36,95,41,63,"call"],[36,99,41,67],[36,100,41,68,"mod"],[36,103,41,71],[36,105,41,73,"k"],[36,106,41,74],[36,107,41,75],[36,109,42,10,"__createBinding"],[36,124,42,25],[36,125,42,26,"result"],[36,131,42,32],[36,133,42,34,"mod"],[36,136,42,37],[36,138,42,39,"k"],[36,139,42,40],[36,140,42,41],[37,4,43,4,"__setModuleDefault"],[37,22,43,22],[37,23,43,23,"result"],[37,29,43,29],[37,31,43,31,"mod"],[37,34,43,34],[37,35,43,35],[38,4,44,4],[38,11,44,11,"result"],[38,17,44,17],[39,2,45,2],[39,3,45,3],[40,2,46,0,"Object"],[40,8,46,6],[40,9,46,7,"defineProperty"],[40,23,46,21],[40,24,46,22,"exports"],[40,31,46,29],[40,33,46,31],[40,45,46,43],[40,47,46,45],[41,4,46,47,"value"],[41,9,46,52],[41,11,46,54],[42,2,46,59],[42,3,46,60],[42,4,46,61],[43,2,47,0,"exports"],[43,9,47,7],[43,10,47,8,"Psbt"],[43,14,47,12],[43,17,47,15],[43,22,47,20],[43,23,47,21],[44,2,49,0],[44,6,49,6,"varuint"],[44,13,49,13],[44,16,49,16,"__importStar"],[44,28,49,28],[44,29,49,29,"require"],[44,40,49,36],[44,41,49,36,"_dependencyMap"],[44,55,49,36],[44,77,49,54],[44,78,49,55],[44,79,49,56],[45,2,54,0],[45,6,54,6,"payments"],[45,14,54,14],[45,17,54,17,"__importStar"],[45,29,54,29],[45,30,54,30,"require"],[45,41,54,37],[45,42,54,37,"_dependencyMap"],[45,56,54,37],[45,83,54,60],[45,84,54,61],[45,85,54,62],[46,2,56,0],[46,6,56,6,"bscript"],[46,13,56,13],[46,16,56,16,"__importStar"],[46,28,56,28],[46,29,56,29,"require"],[46,40,56,36],[46,41,56,36,"_dependencyMap"],[46,55,56,36],[46,74,56,51],[46,75,56,52],[46,76,56,53],[47,2,60,0],[47,6,60,6,"tools"],[47,11,60,11],[47,14,60,14,"__importStar"],[47,26,60,26],[47,27,60,27,"require"],[47,38,60,34],[47,39,60,34,"_dependencyMap"],[47,53,60,34],[47,76,60,53],[47,77,60,54],[47,78,60,55],[48,2,61,0],[49,0,62,0],[50,0,63,0],[51,2,64,0],[51,6,64,6,"DEFAULT_OPTS"],[51,18,64,18],[51,21,64,21],[52,4,65,2],[53,0,66,0],[54,0,67,0],[55,0,68,0],[56,4,69,2,"network"],[56,11,69,9],[56,13,69,11,"_$$_REQUIRE"],[56,24,69,11],[56,25,69,11,"_dependencyMap"],[56,39,69,11],[56,62,69,25,"bitcoin"],[56,69,69,32],[57,4,70,2],[58,0,71,0],[59,0,72,0],[60,0,73,0],[61,0,74,0],[62,4,75,2,"maximumFeeRate"],[62,18,75,16],[62,20,75,18],[62,24,75,22],[62,25,75,24],[63,2,76,0],[63,3,76,1],[64,2,77,0],[65,0,78,0],[66,0,79,0],[67,0,80,0],[68,0,81,0],[69,0,82,0],[70,0,83,0],[71,0,84,0],[72,0,85,0],[73,0,86,0],[74,0,87,0],[75,0,88,0],[76,0,89,0],[77,0,90,0],[78,0,91,0],[79,0,92,0],[80,0,93,0],[81,0,94,0],[82,0,95,0],[83,0,96,0],[84,0,97,0],[85,0,98,0],[86,0,99,0],[87,0,100,0],[88,0,101,0],[89,0,102,0],[90,0,103,0],[91,0,104,0],[92,0,105,0],[93,0,106,0],[94,0,107,0],[95,0,108,0],[96,0,109,0],[97,0,110,0],[98,0,111,0],[99,0,112,0],[100,0,113,0],[101,2,77,0],[101,6,114,6,"Psbt"],[101,10,114,10],[102,4,132,2],[102,13,132,2,"Psbt"],[102,18,132,2],[102,20,132,74],[103,6,132,74],[103,10,132,14,"opts"],[103,14,132,18],[103,17,132,18,"arguments"],[103,26,132,18],[103,27,132,18,"length"],[103,33,132,18],[103,41,132,18,"arguments"],[103,50,132,18],[103,58,132,18,"undefined"],[103,67,132,18],[103,70,132,18,"arguments"],[103,79,132,18],[103,85,132,21],[103,86,132,22],[103,87,132,23],[104,6,132,23],[104,10,132,25,"data"],[104,14,132,29],[104,17,132,29,"arguments"],[104,26,132,29],[104,27,132,29,"length"],[104,33,132,29],[104,41,132,29,"arguments"],[104,50,132,29],[104,58,132,29,"undefined"],[104,67,132,29],[104,70,132,29,"arguments"],[104,79,132,29],[104,85,132,32],[104,90,132,36,"_$$_REQUIRE"],[104,101,132,36],[104,102,132,36,"_dependencyMap"],[104,116,132,36],[104,132,132,45,"Psbt"],[104,136,132,49],[104,138,132,50],[104,142,132,54,"PsbtTransaction"],[104,157,132,69],[104,158,132,70],[104,159,132,71],[104,160,132,72],[105,6,132,72,"_classCallCheck"],[105,21,132,72],[105,28,132,72,"Psbt"],[105,32,132,72],[106,6,133,4],[106,10,133,8],[106,11,133,9,"data"],[106,15,133,13],[106,18,133,16,"data"],[106,22,133,20],[107,6,134,4],[108,6,135,4],[108,10,135,8],[108,11,135,9,"opts"],[108,15,135,13],[108,18,135,16,"Object"],[108,24,135,22],[108,25,135,23,"assign"],[108,31,135,29],[108,32,135,30],[108,33,135,31],[108,34,135,32],[108,36,135,34,"DEFAULT_OPTS"],[108,48,135,46],[108,50,135,48,"opts"],[108,54,135,52],[108,55,135,53],[109,6,136,4],[109,10,136,8],[109,11,136,9,"__CACHE"],[109,18,136,16],[109,21,136,19],[110,8,137,6,"__NON_WITNESS_UTXO_TX_CACHE"],[110,35,137,33],[110,37,137,35],[110,39,137,37],[111,8,138,6,"__NON_WITNESS_UTXO_BUF_CACHE"],[111,36,138,34],[111,38,138,36],[111,40,138,38],[112,8,139,6,"__TX_IN_CACHE"],[112,21,139,19],[112,23,139,21],[112,24,139,22],[112,25,139,23],[113,8,140,6,"__TX"],[113,12,140,10],[113,14,140,12],[113,18,140,16],[113,19,140,17,"data"],[113,23,140,21],[113,24,140,22,"globalMap"],[113,33,140,31],[113,34,140,32,"unsignedTx"],[113,44,140,42],[113,45,140,43,"tx"],[113,47,140,45],[114,8,141,6],[115,8,142,6],[116,8,143,6],[117,8,144,6],[118,8,145,6],[119,8,146,6],[120,8,147,6],[121,8,148,6],[122,8,149,6,"__UNSAFE_SIGN_NONSEGWIT"],[122,31,149,29],[122,33,149,31],[123,6,150,4],[123,7,150,5],[124,6,151,4],[124,10,151,8],[124,14,151,12],[124,15,151,13,"data"],[124,19,151,17],[124,20,151,18,"inputs"],[124,26,151,24],[124,27,151,25,"length"],[124,33,151,31],[124,38,151,36],[124,39,151,37],[124,41,151,39],[124,45,151,43],[124,46,151,44,"setVersion"],[124,56,151,54],[124,57,151,55],[124,58,151,56],[124,59,151,57],[125,6,152,4],[126,6,153,4],[126,10,153,10,"dpew"],[126,14,153,14],[126,17,153,17],[126,26,153,10,"dpew"],[126,30,153,14,"dpew"],[126,31,153,18,"obj"],[126,34,153,21],[126,36,153,23,"attr"],[126,40,153,27],[126,42,153,29,"enumerable"],[126,52,153,39],[126,54,153,41,"writable"],[126,62,153,49],[127,8,153,49],[127,15,154,6,"Object"],[127,21,154,12],[127,22,154,13,"defineProperty"],[127,36,154,27],[127,37,154,28,"obj"],[127,40,154,31],[127,42,154,33,"attr"],[127,46,154,37],[127,48,154,39],[128,10,155,8,"enumerable"],[128,20,155,18],[128,22,155,8,"enumerable"],[128,32,155,18],[129,10,156,8,"writable"],[129,18,156,16],[129,20,156,8,"writable"],[130,8,157,6],[130,9,157,7],[130,10,157,8],[131,6,157,8],[132,6,158,4,"dpew"],[132,10,158,8],[132,11,158,9],[132,15,158,13],[132,17,158,15],[132,26,158,24],[132,28,158,26],[132,33,158,31],[132,35,158,33],[132,39,158,37],[132,40,158,38],[133,6,159,4,"dpew"],[133,10,159,8],[133,11,159,9],[133,15,159,13],[133,17,159,15],[133,23,159,21],[133,25,159,23],[133,30,159,28],[133,32,159,30],[133,36,159,34],[133,37,159,35],[134,4,160,2],[135,4,160,3],[135,11,160,3,"_createClass"],[135,23,160,3],[135,24,160,3,"Psbt"],[135,28,160,3],[136,6,160,3,"key"],[136,9,160,3],[137,6,160,3,"get"],[137,9,160,3],[137,11,161,2],[137,20,161,2,"get"],[137,24,161,2],[137,26,161,19],[138,8,162,4],[138,15,162,11],[138,19,162,15],[138,20,162,16,"data"],[138,24,162,20],[138,25,162,21,"inputs"],[138,31,162,27],[138,32,162,28,"length"],[138,38,162,34],[139,6,163,2],[140,4,163,3],[141,6,163,3,"key"],[141,9,163,3],[142,6,163,3,"get"],[142,9,163,3],[142,11,164,2],[142,20,164,2,"get"],[142,24,164,2],[142,26,164,16],[143,8,165,4],[143,15,165,11],[143,19,165,15],[143,20,165,16,"__CACHE"],[143,27,165,23],[143,28,165,24,"__TX"],[143,32,165,28],[143,33,165,29,"version"],[143,40,165,36],[144,6,166,2],[144,7,166,3],[145,6,166,3,"set"],[145,9,166,3],[145,11,167,2],[145,20,167,2,"set"],[145,24,167,14,"version"],[145,31,167,21],[145,33,167,23],[146,8,168,4],[146,12,168,8],[146,13,168,9,"setVersion"],[146,23,168,19],[146,24,168,20,"version"],[146,31,168,27],[146,32,168,28],[147,6,169,2],[148,4,169,3],[149,6,169,3,"key"],[149,9,169,3],[150,6,169,3,"get"],[150,9,169,3],[150,11,170,2],[150,20,170,2,"get"],[150,24,170,2],[150,26,170,17],[151,8,171,4],[151,15,171,11],[151,19,171,15],[151,20,171,16,"__CACHE"],[151,27,171,23],[151,28,171,24,"__TX"],[151,32,171,28],[151,33,171,29,"locktime"],[151,41,171,37],[152,6,172,2],[152,7,172,3],[153,6,172,3,"set"],[153,9,172,3],[153,11,173,2],[153,20,173,2,"set"],[153,24,173,15,"locktime"],[153,32,173,23],[153,34,173,25],[154,8,174,4],[154,12,174,8],[154,13,174,9,"setLocktime"],[154,24,174,20],[154,25,174,21,"locktime"],[154,33,174,29],[154,34,174,30],[155,6,175,2],[156,4,175,3],[157,6,175,3,"key"],[157,9,175,3],[158,6,175,3,"get"],[158,9,175,3],[158,11,176,2],[158,20,176,2,"get"],[158,24,176,2],[158,26,176,17],[159,8,177,4],[159,15,177,11],[159,19,177,15],[159,20,177,16,"__CACHE"],[159,27,177,23],[159,28,177,24,"__TX"],[159,32,177,28],[159,33,177,29,"ins"],[159,36,177,32],[159,37,177,33,"map"],[159,40,177,36],[159,41,177,37],[159,51,177,37,"input"],[159,56,177,42],[160,10,177,42],[160,17,177,47],[161,12,178,6,"hash"],[161,16,178,10],[161,18,178,12],[161,19,178,13],[161,20,178,14],[161,22,178,16,"_$$_REQUIRE"],[161,33,178,16],[161,34,178,16,"_dependencyMap"],[161,48,178,16],[161,75,178,33,"cloneBuffer"],[161,86,178,44],[161,88,178,46,"input"],[161,93,178,51],[161,94,178,52,"hash"],[161,98,178,56],[161,99,178,57],[162,12,179,6,"index"],[162,17,179,11],[162,19,179,13,"input"],[162,24,179,18],[162,25,179,19,"index"],[162,30,179,24],[163,12,180,6,"sequence"],[163,20,180,14],[163,22,180,16,"input"],[163,27,180,21],[163,28,180,22,"sequence"],[164,10,181,4],[164,11,181,5],[165,8,181,5],[165,9,181,6],[165,10,181,7],[166,6,182,2],[167,4,182,3],[168,6,182,3,"key"],[168,9,182,3],[169,6,182,3,"get"],[169,9,182,3],[169,11,183,2],[169,20,183,2,"get"],[169,24,183,2],[169,26,183,18],[170,8,183,18],[170,12,183,18,"_this"],[170,17,183,18],[171,8,184,4],[171,15,184,11],[171,19,184,15],[171,20,184,16,"__CACHE"],[171,27,184,23],[171,28,184,24,"__TX"],[171,32,184,28],[171,33,184,29,"outs"],[171,37,184,33],[171,38,184,34,"map"],[171,41,184,37],[171,42,184,38],[171,52,184,38,"output"],[171,58,184,44],[171,60,184,48],[172,10,185,6],[172,14,185,10,"address"],[172,21,185,17],[173,10,186,6],[173,14,186,10],[174,12,187,8,"address"],[174,19,187,15],[174,22,187,18],[174,23,187,19],[174,24,187,20],[174,26,187,22,"_$$_REQUIRE"],[174,37,187,22],[174,38,187,22,"_dependencyMap"],[174,52,187,22],[174,75,187,35,"fromOutputScript"],[174,91,187,51],[174,93,188,10,"output"],[174,99,188,16],[174,100,188,17,"script"],[174,106,188,23],[174,108,189,10,"_this"],[174,113,189,14],[174,114,189,15,"opts"],[174,118,189,19],[174,119,189,20,"network"],[174,126,190,8],[174,127,190,9],[175,10,191,6],[175,11,191,7],[175,12,191,8],[175,19,191,15,"_"],[175,20,191,16],[175,22,191,18],[175,23,191,19],[176,10,192,6],[176,17,192,13],[177,12,193,8,"script"],[177,18,193,14],[177,20,193,16],[177,21,193,17],[177,22,193,18],[177,24,193,20,"_$$_REQUIRE"],[177,35,193,20],[177,36,193,20,"_dependencyMap"],[177,50,193,20],[177,77,193,37,"cloneBuffer"],[177,88,193,48],[177,90,193,50,"output"],[177,96,193,56],[177,97,193,57,"script"],[177,103,193,63],[177,104,193,64],[178,12,194,8,"value"],[178,17,194,13],[178,19,194,15,"output"],[178,25,194,21],[178,26,194,22,"value"],[178,31,194,27],[179,12,195,8,"address"],[179,19,195,15],[179,21,195,8,"address"],[180,10,196,6],[180,11,196,7],[181,8,197,4],[181,9,197,5],[181,10,197,6],[182,6,198,2],[183,4,198,3],[184,6,198,3,"key"],[184,9,198,3],[185,6,198,3,"value"],[185,11,198,3],[185,13,199,2],[185,22,199,2,"combine"],[185,29,199,9,"combine"],[185,30,199,9],[185,32,199,20],[186,8,199,20],[186,12,199,20,"_this$data"],[186,22,199,20],[187,8,199,20],[187,17,199,20,"_len"],[187,21,199,20],[187,24,199,20,"arguments"],[187,33,199,20],[187,34,199,20,"length"],[187,40,199,20],[187,42,199,13,"those"],[187,47,199,18],[187,54,199,18,"Array"],[187,59,199,18],[187,60,199,18,"_len"],[187,64,199,18],[187,67,199,18,"_key"],[187,71,199,18],[187,77,199,18,"_key"],[187,81,199,18],[187,84,199,18,"_len"],[187,88,199,18],[187,90,199,18,"_key"],[187,94,199,18],[188,10,199,13,"those"],[188,15,199,18],[188,16,199,18,"_key"],[188,20,199,18],[188,24,199,18,"arguments"],[188,33,199,18],[188,34,199,18,"_key"],[188,38,199,18],[189,8,199,18],[190,8,200,4],[190,9,200,4,"_this$data"],[190,19,200,4],[190,26,200,8],[190,27,200,9,"data"],[190,31,200,13],[190,33,200,14,"combine"],[190,40,200,21],[190,41,200,21,"apply"],[190,46,200,21],[190,47,200,21,"_this$data"],[190,57,200,21],[190,59,200,21,"_toConsumableArray"],[190,77,200,21],[190,78,200,25,"those"],[190,83,200,30],[190,84,200,31,"map"],[190,87,200,34],[190,88,200,35],[190,98,200,35,"o"],[190,99,200,36],[191,10,200,36],[191,17,200,40,"o"],[191,18,200,41],[191,19,200,42,"data"],[191,23,200,46],[192,8,200,46],[192,10,200,47],[192,12,200,48],[193,8,201,4],[193,15,201,11],[193,19,201,15],[194,6,202,2],[195,4,202,3],[196,6,202,3,"key"],[196,9,202,3],[197,6,202,3,"value"],[197,11,202,3],[197,13,203,2],[197,22,203,2,"clone"],[197,27,203,7,"clone"],[197,28,203,7],[197,30,203,10],[198,8,204,4],[199,8,205,4],[199,12,205,10,"res"],[199,15,205,13],[199,18,205,16,"Psbt"],[199,22,205,20],[199,23,205,21,"fromBuffer"],[199,33,205,31],[199,34,205,32],[199,38,205,36],[199,39,205,37,"data"],[199,43,205,41],[199,44,205,42,"toBuffer"],[199,52,205,50],[199,53,205,51],[199,54,205,52],[199,55,205,53],[200,8,206,4,"res"],[200,11,206,7],[200,12,206,8,"opts"],[200,16,206,12],[200,19,206,15,"JSON"],[200,23,206,19],[200,24,206,20,"parse"],[200,29,206,25],[200,30,206,26,"JSON"],[200,34,206,30],[200,35,206,31,"stringify"],[200,44,206,40],[200,45,206,41],[200,49,206,45],[200,50,206,46,"opts"],[200,54,206,50],[200,55,206,51],[200,56,206,52],[201,8,207,4],[201,15,207,11,"res"],[201,18,207,14],[202,6,208,2],[203,4,208,3],[204,6,208,3,"key"],[204,9,208,3],[205,6,208,3,"value"],[205,11,208,3],[205,13,209,2],[205,22,209,2,"setMaximumFeeRate"],[205,39,209,19,"setMaximumFeeRate"],[205,40,209,20,"satoshiPerByte"],[205,54,209,34],[205,56,209,36],[206,8,210,4,"check32Bit"],[206,18,210,14],[206,19,210,15,"satoshiPerByte"],[206,33,210,29],[206,34,210,30],[206,35,210,31],[206,36,210,32],[207,8,211,4],[207,12,211,8],[207,13,211,9,"opts"],[207,17,211,13],[207,18,211,14,"maximumFeeRate"],[207,32,211,28],[207,35,211,31,"satoshiPerByte"],[207,49,211,45],[208,6,212,2],[209,4,212,3],[210,6,212,3,"key"],[210,9,212,3],[211,6,212,3,"value"],[211,11,212,3],[211,13,213,2],[211,22,213,2,"setVersion"],[211,32,213,12,"setVersion"],[211,33,213,13,"version"],[211,40,213,20],[211,42,213,22],[212,8,214,4,"check32Bit"],[212,18,214,14],[212,19,214,15,"version"],[212,26,214,22],[212,27,214,23],[213,8,215,4,"checkInputsForPartialSig"],[213,32,215,28],[213,33,215,29],[213,37,215,33],[213,38,215,34,"data"],[213,42,215,38],[213,43,215,39,"inputs"],[213,49,215,45],[213,51,215,47],[213,63,215,59],[213,64,215,60],[214,8,216,4],[214,12,216,10,"c"],[214,13,216,11],[214,16,216,14],[214,20,216,18],[214,21,216,19,"__CACHE"],[214,28,216,26],[215,8,217,4,"c"],[215,9,217,5],[215,10,217,6,"__TX"],[215,14,217,10],[215,15,217,11,"version"],[215,22,217,18],[215,25,217,21,"version"],[215,32,217,28],[216,8,218,4,"c"],[216,9,218,5],[216,10,218,6,"__EXTRACTED_TX"],[216,24,218,20],[216,27,218,23,"undefined"],[216,36,218,32],[217,8,219,4],[217,15,219,11],[217,19,219,15],[218,6,220,2],[219,4,220,3],[220,6,220,3,"key"],[220,9,220,3],[221,6,220,3,"value"],[221,11,220,3],[221,13,221,2],[221,22,221,2,"setLocktime"],[221,33,221,13,"setLocktime"],[221,34,221,14,"locktime"],[221,42,221,22],[221,44,221,24],[222,8,222,4,"check32Bit"],[222,18,222,14],[222,19,222,15,"locktime"],[222,27,222,23],[222,28,222,24],[223,8,223,4,"checkInputsForPartialSig"],[223,32,223,28],[223,33,223,29],[223,37,223,33],[223,38,223,34,"data"],[223,42,223,38],[223,43,223,39,"inputs"],[223,49,223,45],[223,51,223,47],[223,64,223,60],[223,65,223,61],[224,8,224,4],[224,12,224,10,"c"],[224,13,224,11],[224,16,224,14],[224,20,224,18],[224,21,224,19,"__CACHE"],[224,28,224,26],[225,8,225,4,"c"],[225,9,225,5],[225,10,225,6,"__TX"],[225,14,225,10],[225,15,225,11,"locktime"],[225,23,225,19],[225,26,225,22,"locktime"],[225,34,225,30],[226,8,226,4,"c"],[226,9,226,5],[226,10,226,6,"__EXTRACTED_TX"],[226,24,226,20],[226,27,226,23,"undefined"],[226,36,226,32],[227,8,227,4],[227,15,227,11],[227,19,227,15],[228,6,228,2],[229,4,228,3],[230,6,228,3,"key"],[230,9,228,3],[231,6,228,3,"value"],[231,11,228,3],[231,13,229,2],[231,22,229,2,"setInputSequence"],[231,38,229,18,"setInputSequence"],[231,39,229,19,"inputIndex"],[231,49,229,29],[231,51,229,31,"sequence"],[231,59,229,39],[231,61,229,41],[232,8,230,4,"check32Bit"],[232,18,230,14],[232,19,230,15,"sequence"],[232,27,230,23],[232,28,230,24],[233,8,231,4,"checkInputsForPartialSig"],[233,32,231,28],[233,33,231,29],[233,37,231,33],[233,38,231,34,"data"],[233,42,231,38],[233,43,231,39,"inputs"],[233,49,231,45],[233,51,231,47],[233,69,231,65],[233,70,231,66],[234,8,232,4],[234,12,232,10,"c"],[234,13,232,11],[234,16,232,14],[234,20,232,18],[234,21,232,19,"__CACHE"],[234,28,232,26],[235,8,233,4],[235,12,233,8,"c"],[235,13,233,9],[235,14,233,10,"__TX"],[235,18,233,14],[235,19,233,15,"ins"],[235,22,233,18],[235,23,233,19,"length"],[235,29,233,25],[235,33,233,29,"inputIndex"],[235,43,233,39],[235,45,233,41],[236,10,234,6],[236,16,234,12],[236,20,234,16,"Error"],[236,25,234,21],[236,26,234,22],[236,48,234,44],[236,49,234,45],[237,8,235,4],[238,8,236,4,"c"],[238,9,236,5],[238,10,236,6,"__TX"],[238,14,236,10],[238,15,236,11,"ins"],[238,18,236,14],[238,19,236,15,"inputIndex"],[238,29,236,25],[238,30,236,26],[238,31,236,27,"sequence"],[238,39,236,35],[238,42,236,38,"sequence"],[238,50,236,46],[239,8,237,4,"c"],[239,9,237,5],[239,10,237,6,"__EXTRACTED_TX"],[239,24,237,20],[239,27,237,23,"undefined"],[239,36,237,32],[240,8,238,4],[240,15,238,11],[240,19,238,15],[241,6,239,2],[242,4,239,3],[243,6,239,3,"key"],[243,9,239,3],[244,6,239,3,"value"],[244,11,239,3],[244,13,240,2],[244,22,240,2,"addInputs"],[244,31,240,11,"addInputs"],[244,32,240,12,"inputDatas"],[244,42,240,22],[244,44,240,24],[245,8,240,24],[245,12,240,24,"_this2"],[245,18,240,24],[246,8,241,4,"inputDatas"],[246,18,241,14],[246,19,241,15,"forEach"],[246,26,241,22],[246,27,241,23],[246,37,241,23,"inputData"],[246,46,241,32],[247,10,241,32],[247,17,241,36,"_this2"],[247,23,241,40],[247,24,241,41,"addInput"],[247,32,241,49],[247,33,241,50,"inputData"],[247,42,241,59],[247,43,241,60],[248,8,241,60],[248,10,241,61],[249,8,242,4],[249,15,242,11],[249,19,242,15],[250,6,243,2],[251,4,243,3],[252,6,243,3,"key"],[252,9,243,3],[253,6,243,3,"value"],[253,11,243,3],[253,13,244,2],[253,22,244,2,"addInput"],[253,30,244,10,"addInput"],[253,31,244,11,"inputData"],[253,40,244,20],[253,42,244,22],[254,8,245,4],[254,12,246,6,"arguments"],[254,21,246,15],[254,22,246,16,"length"],[254,28,246,22],[254,31,246,25],[254,32,246,26],[254,36,247,6],[254,37,247,7,"inputData"],[254,46,247,16],[254,50,248,6,"inputData"],[254,59,248,15],[254,60,248,16,"hash"],[254,64,248,20],[254,69,248,25,"undefined"],[254,78,248,34],[254,82,249,6,"inputData"],[254,91,249,15],[254,92,249,16,"index"],[254,97,249,21],[254,102,249,26,"undefined"],[254,111,249,35],[254,113,250,6],[255,10,251,6],[255,16,251,12],[255,20,251,16,"Error"],[255,25,251,21],[255,26,252,8],[255,65,252,47],[255,68,253,10],[255,125,254,6],[255,126,254,7],[256,8,255,4],[257,8,256,4],[257,9,256,5],[257,10,256,6],[257,12,256,8,"_$$_REQUIRE"],[257,23,256,8],[257,24,256,8,"_dependencyMap"],[257,38,256,8],[257,65,256,20,"checkTaprootInputFields"],[257,88,256,43],[257,90,256,45,"inputData"],[257,99,256,54],[257,101,256,56,"inputData"],[257,110,256,65],[257,112,256,67],[257,122,256,77],[257,123,256,78],[258,8,257,4,"checkInputsForPartialSig"],[258,32,257,28],[258,33,257,29],[258,37,257,33],[258,38,257,34,"data"],[258,42,257,38],[258,43,257,39,"inputs"],[258,49,257,45],[258,51,257,47],[258,61,257,57],[258,62,257,58],[259,8,258,4],[259,12,258,8,"inputData"],[259,21,258,17],[259,22,258,18,"witnessScript"],[259,35,258,31],[259,37,258,33,"checkInvalidP2WSH"],[259,54,258,50],[259,55,258,51,"inputData"],[259,64,258,60],[259,65,258,61,"witnessScript"],[259,78,258,74],[259,79,258,75],[260,8,259,4],[260,12,259,10,"c"],[260,13,259,11],[260,16,259,14],[260,20,259,18],[260,21,259,19,"__CACHE"],[260,28,259,26],[261,8,260,4],[261,12,260,8],[261,13,260,9,"data"],[261,17,260,13],[261,18,260,14,"addInput"],[261,26,260,22],[261,27,260,23,"inputData"],[261,36,260,32],[261,37,260,33],[262,8,261,4],[262,12,261,10,"txIn"],[262,16,261,14],[262,19,261,17,"c"],[262,20,261,18],[262,21,261,19,"__TX"],[262,25,261,23],[262,26,261,24,"ins"],[262,29,261,27],[262,30,261,28,"c"],[262,31,261,29],[262,32,261,30,"__TX"],[262,36,261,34],[262,37,261,35,"ins"],[262,40,261,38],[262,41,261,39,"length"],[262,47,261,45],[262,50,261,48],[262,51,261,49],[262,52,261,50],[263,8,262,4,"checkTxInputCache"],[263,25,262,21],[263,26,262,22,"c"],[263,27,262,23],[263,29,262,25,"txIn"],[263,33,262,29],[263,34,262,30],[264,8,263,4],[264,12,263,10,"inputIndex"],[264,22,263,20],[264,25,263,23],[264,29,263,27],[264,30,263,28,"data"],[264,34,263,32],[264,35,263,33,"inputs"],[264,41,263,39],[264,42,263,40,"length"],[264,48,263,46],[264,51,263,49],[264,52,263,50],[265,8,264,4],[265,12,264,10,"input"],[265,17,264,15],[265,20,264,18],[265,24,264,22],[265,25,264,23,"data"],[265,29,264,27],[265,30,264,28,"inputs"],[265,36,264,34],[265,37,264,35,"inputIndex"],[265,47,264,45],[265,48,264,46],[266,8,265,4],[266,12,265,8,"input"],[266,17,265,13],[266,18,265,14,"nonWitnessUtxo"],[266,32,265,28],[266,34,265,30],[267,10,266,6,"addNonWitnessTxCache"],[267,30,266,26],[267,31,266,27],[267,35,266,31],[267,36,266,32,"__CACHE"],[267,43,266,39],[267,45,266,41,"input"],[267,50,266,46],[267,52,266,48,"inputIndex"],[267,62,266,58],[267,63,266,59],[268,8,267,4],[269,8,268,4,"c"],[269,9,268,5],[269,10,268,6,"__FEE"],[269,15,268,11],[269,18,268,14,"undefined"],[269,27,268,23],[270,8,269,4,"c"],[270,9,269,5],[270,10,269,6,"__FEE_RATE"],[270,20,269,16],[270,23,269,19,"undefined"],[270,32,269,28],[271,8,270,4,"c"],[271,9,270,5],[271,10,270,6,"__EXTRACTED_TX"],[271,24,270,20],[271,27,270,23,"undefined"],[271,36,270,32],[272,8,271,4],[272,15,271,11],[272,19,271,15],[273,6,272,2],[274,4,272,3],[275,6,272,3,"key"],[275,9,272,3],[276,6,272,3,"value"],[276,11,272,3],[276,13,273,2],[276,22,273,2,"addOutputs"],[276,32,273,12,"addOutputs"],[276,33,273,13,"outputDatas"],[276,44,273,24],[276,46,273,26],[277,8,273,26],[277,12,273,26,"_this3"],[277,18,273,26],[278,8,274,4,"outputDatas"],[278,19,274,15],[278,20,274,16,"forEach"],[278,27,274,23],[278,28,274,24],[278,38,274,24,"outputData"],[278,48,274,34],[279,10,274,34],[279,17,274,38,"_this3"],[279,23,274,42],[279,24,274,43,"addOutput"],[279,33,274,52],[279,34,274,53,"outputData"],[279,44,274,63],[279,45,274,64],[280,8,274,64],[280,10,274,65],[281,8,275,4],[281,15,275,11],[281,19,275,15],[282,6,276,2],[283,4,276,3],[284,6,276,3,"key"],[284,9,276,3],[285,6,276,3,"value"],[285,11,276,3],[285,13,277,2],[285,22,277,2,"addOutput"],[285,31,277,11,"addOutput"],[285,32,277,12,"outputData"],[285,42,277,22],[285,44,277,24],[286,8,278,4],[286,12,279,6,"arguments"],[286,21,279,15],[286,22,279,16,"length"],[286,28,279,22],[286,31,279,25],[286,32,279,26],[286,36,280,6],[286,37,280,7,"outputData"],[286,47,280,17],[286,51,281,6,"outputData"],[286,61,281,16],[286,62,281,17,"value"],[286,67,281,22],[286,72,281,27,"undefined"],[286,81,281,36],[286,85,282,7,"outputData"],[286,95,282,17],[286,96,282,18,"address"],[286,103,282,25],[286,108,282,30,"undefined"],[286,117,282,39],[286,121,282,43,"outputData"],[286,131,282,53],[286,132,282,54,"script"],[286,138,282,60],[286,143,282,65,"undefined"],[286,152,282,75],[286,154,283,6],[287,10,284,6],[287,16,284,12],[287,20,284,16,"Error"],[287,25,284,21],[287,26,285,8],[287,66,285,48],[287,69,286,10],[287,139,287,6],[287,140,287,7],[288,8,288,4],[289,8,289,4,"checkInputsForPartialSig"],[289,32,289,28],[289,33,289,29],[289,37,289,33],[289,38,289,34,"data"],[289,42,289,38],[289,43,289,39,"inputs"],[289,49,289,45],[289,51,289,47],[289,62,289,58],[289,63,289,59],[290,8,290,4],[290,12,290,4,"_outputData"],[290,23,290,4],[290,26,290,24,"outputData"],[290,36,290,34],[291,10,290,12,"address"],[291,17,290,19],[291,20,290,19,"_outputData"],[291,31,290,19],[291,32,290,12,"address"],[291,39,290,19],[292,8,291,4],[292,12,291,8],[292,19,291,15,"address"],[292,26,291,22],[292,31,291,27],[292,39,291,35],[292,41,291,37],[293,10,292,6],[293,14,292,14,"network"],[293,21,292,21],[293,24,292,26],[293,28,292,30],[293,29,292,31,"opts"],[293,33,292,35],[293,34,292,14,"network"],[293,41,292,21],[294,10,293,6],[294,14,293,12,"script"],[294,20,293,18],[294,23,293,21],[294,24,293,22],[294,25,293,23],[294,27,293,25,"_$$_REQUIRE"],[294,38,293,25],[294,39,293,25,"_dependencyMap"],[294,53,293,25],[294,76,293,38,"toOutputScript"],[294,90,293,52],[294,92,293,54,"address"],[294,99,293,61],[294,101,293,63,"network"],[294,108,293,70],[294,109,293,71],[295,10,294,6,"outputData"],[295,20,294,16],[295,23,294,19,"Object"],[295,29,294,25],[295,30,294,26,"assign"],[295,36,294,32],[295,37,294,33],[295,38,294,34],[295,39,294,35],[295,41,294,37,"outputData"],[295,51,294,47],[295,53,294,49],[296,12,294,51,"script"],[296,18,294,57],[296,20,294,51,"script"],[297,10,294,58],[297,11,294,59],[297,12,294,60],[298,8,295,4],[299,8,296,4],[299,9,296,5],[299,10,296,6],[299,12,296,8,"_$$_REQUIRE"],[299,23,296,8],[299,24,296,8,"_dependencyMap"],[299,38,296,8],[299,65,296,20,"checkTaprootOutputFields"],[299,89,296,44],[299,91,297,6,"outputData"],[299,101,297,16],[299,103,298,6,"outputData"],[299,113,298,16],[299,115,299,6],[299,126,300,4],[299,127,300,5],[300,8,301,4],[300,12,301,10,"c"],[300,13,301,11],[300,16,301,14],[300,20,301,18],[300,21,301,19,"__CACHE"],[300,28,301,26],[301,8,302,4],[301,12,302,8],[301,13,302,9,"data"],[301,17,302,13],[301,18,302,14,"addOutput"],[301,27,302,23],[301,28,302,24,"outputData"],[301,38,302,34],[301,39,302,35],[302,8,303,4,"c"],[302,9,303,5],[302,10,303,6,"__FEE"],[302,15,303,11],[302,18,303,14,"undefined"],[302,27,303,23],[303,8,304,4,"c"],[303,9,304,5],[303,10,304,6,"__FEE_RATE"],[303,20,304,16],[303,23,304,19,"undefined"],[303,32,304,28],[304,8,305,4,"c"],[304,9,305,5],[304,10,305,6,"__EXTRACTED_TX"],[304,24,305,20],[304,27,305,23,"undefined"],[304,36,305,32],[305,8,306,4],[305,15,306,11],[305,19,306,15],[306,6,307,2],[307,4,307,3],[308,6,307,3,"key"],[308,9,307,3],[309,6,307,3,"value"],[309,11,307,3],[309,13,308,2],[309,22,308,2,"extractTransaction"],[309,40,308,20,"extractTransaction"],[309,41,308,21,"disableFeeCheck"],[309,56,308,36],[309,58,308,38],[310,8,309,4],[310,12,309,8],[310,13,309,9],[310,17,309,13],[310,18,309,14,"data"],[310,22,309,18],[310,23,309,19,"inputs"],[310,29,309,25],[310,30,309,26,"every"],[310,35,309,31],[310,36,309,32,"isFinalized"],[310,47,309,43],[310,48,309,44],[310,50,309,46],[310,56,309,52],[310,60,309,56,"Error"],[310,65,309,61],[310,66,309,62],[310,81,309,77],[310,82,309,78],[311,8,310,4],[311,12,310,10,"c"],[311,13,310,11],[311,16,310,14],[311,20,310,18],[311,21,310,19,"__CACHE"],[311,28,310,26],[312,8,311,4],[312,12,311,8],[312,13,311,9,"disableFeeCheck"],[312,28,311,24],[312,30,311,26],[313,10,312,6,"checkFees"],[313,19,312,15],[313,20,312,16],[313,24,312,20],[313,26,312,22,"c"],[313,27,312,23],[313,29,312,25],[313,33,312,29],[313,34,312,30,"opts"],[313,38,312,34],[313,39,312,35],[314,8,313,4],[315,8,314,4],[315,12,314,8,"c"],[315,13,314,9],[315,14,314,10,"__EXTRACTED_TX"],[315,28,314,24],[315,30,314,26],[315,37,314,33,"c"],[315,38,314,34],[315,39,314,35,"__EXTRACTED_TX"],[315,53,314,49],[316,8,315,4],[316,12,315,10,"tx"],[316,14,315,12],[316,17,315,15,"c"],[316,18,315,16],[316,19,315,17,"__TX"],[316,23,315,21],[316,24,315,22,"clone"],[316,29,315,27],[316,30,315,28],[316,31,315,29],[317,8,316,4,"inputFinalizeGetAmts"],[317,28,316,24],[317,29,316,25],[317,33,316,29],[317,34,316,30,"data"],[317,38,316,34],[317,39,316,35,"inputs"],[317,45,316,41],[317,47,316,43,"tx"],[317,49,316,45],[317,51,316,47,"c"],[317,52,316,48],[317,54,316,50],[317,58,316,54],[317,59,316,55],[318,8,317,4],[318,15,317,11,"tx"],[318,17,317,13],[319,6,318,2],[320,4,318,3],[321,6,318,3,"key"],[321,9,318,3],[322,6,318,3,"value"],[322,11,318,3],[322,13,319,2],[322,22,319,2,"getFeeRate"],[322,32,319,12,"getFeeRate"],[322,33,319,12],[322,35,319,15],[323,8,320,4],[323,15,320,11,"getTxCacheValue"],[323,30,320,26],[323,31,321,6],[323,43,321,18],[323,45,322,6],[323,55,322,16],[323,57,323,6],[323,61,323,10],[323,62,323,11,"data"],[323,66,323,15],[323,67,323,16,"inputs"],[323,73,323,22],[323,75,324,6],[323,79,324,10],[323,80,324,11,"__CACHE"],[323,87,325,4],[323,88,325,5],[324,6,326,2],[325,4,326,3],[326,6,326,3,"key"],[326,9,326,3],[327,6,326,3,"value"],[327,11,326,3],[327,13,327,2],[327,22,327,2,"getFee"],[327,28,327,8,"getFee"],[327,29,327,8],[327,31,327,11],[328,8,328,4],[328,15,328,11,"getTxCacheValue"],[328,30,328,26],[328,31,328,27],[328,38,328,34],[328,40,328,36],[328,45,328,41],[328,47,328,43],[328,51,328,47],[328,52,328,48,"data"],[328,56,328,52],[328,57,328,53,"inputs"],[328,63,328,59],[328,65,328,61],[328,69,328,65],[328,70,328,66,"__CACHE"],[328,77,328,73],[328,78,328,74],[329,6,329,2],[330,4,329,3],[331,6,329,3,"key"],[331,9,329,3],[332,6,329,3,"value"],[332,11,329,3],[332,13,330,2],[332,22,330,2,"finalizeAllInputs"],[332,39,330,19,"finalizeAllInputs"],[332,40,330,19],[332,42,330,22],[333,8,330,22],[333,12,330,22,"_this4"],[333,18,330,22],[334,8,331,4],[334,9,331,5],[334,10,331,6],[334,12,331,8,"_$$_REQUIRE"],[334,23,331,8],[334,24,331,8,"_dependencyMap"],[334,38,331,8],[334,54,331,17,"checkForInput"],[334,67,331,30],[334,69,331,32],[334,73,331,36],[334,74,331,37,"data"],[334,78,331,41],[334,79,331,42,"inputs"],[334,85,331,48],[334,87,331,50],[334,88,331,51],[334,89,331,52],[334,90,331,53],[334,91,331,54],[335,8,332,4,"range"],[335,13,332,9],[335,14,332,10],[335,18,332,14],[335,19,332,15,"data"],[335,23,332,19],[335,24,332,20,"inputs"],[335,30,332,26],[335,31,332,27,"length"],[335,37,332,33],[335,38,332,34],[335,39,332,35,"forEach"],[335,46,332,42],[335,47,332,43],[335,57,332,43,"idx"],[335,60,332,46],[336,10,332,46],[336,17,332,50,"_this4"],[336,23,332,54],[336,24,332,55,"finalizeInput"],[336,37,332,68],[336,38,332,69,"idx"],[336,41,332,72],[336,42,332,73],[337,8,332,73],[337,10,332,74],[338,8,333,4],[338,15,333,11],[338,19,333,15],[339,6,334,2],[340,4,334,3],[341,6,334,3,"key"],[341,9,334,3],[342,6,334,3,"value"],[342,11,334,3],[342,13,335,2],[342,22,335,2,"finalizeInput"],[342,35,335,15,"finalizeInput"],[342,36,335,16,"inputIndex"],[342,46,335,26],[342,48,335,28,"finalScriptsFunc"],[342,64,335,44],[342,66,335,46],[343,8,336,4],[343,12,336,10,"input"],[343,17,336,15],[343,20,336,18],[343,21,336,19],[343,22,336,20],[343,24,336,22,"_$$_REQUIRE"],[343,35,336,22],[343,36,336,22,"_dependencyMap"],[343,50,336,22],[343,66,336,31,"checkForInput"],[343,79,336,44],[343,81,336,46],[343,85,336,50],[343,86,336,51,"data"],[343,90,336,55],[343,91,336,56,"inputs"],[343,97,336,62],[343,99,336,64,"inputIndex"],[343,109,336,74],[343,110,336,75],[344,8,337,4],[344,12,337,8],[344,13,337,9],[344,14,337,10],[344,16,337,12,"_$$_REQUIRE"],[344,27,337,12],[344,28,337,12,"_dependencyMap"],[344,42,337,12],[344,69,337,24,"isTaprootInput"],[344,83,337,38],[344,85,337,40,"input"],[344,90,337,45],[344,91,337,46],[344,93,338,6],[344,100,338,13],[344,104,338,17],[344,105,338,18,"_finalizeTaprootInput"],[344,126,338,39],[344,127,339,8,"inputIndex"],[344,137,339,18],[344,139,340,8,"input"],[344,144,340,13],[344,146,341,8,"undefined"],[344,155,341,17],[344,157,342,8,"finalScriptsFunc"],[344,173,343,6],[344,174,343,7],[345,8,344,4],[345,15,344,11],[345,19,344,15],[345,20,344,16,"_finalizeInput"],[345,34,344,30],[345,35,344,31,"inputIndex"],[345,45,344,41],[345,47,344,43,"input"],[345,52,344,48],[345,54,344,50,"finalScriptsFunc"],[345,70,344,66],[345,71,344,67],[346,6,345,2],[347,4,345,3],[348,6,345,3,"key"],[348,9,345,3],[349,6,345,3,"value"],[349,11,345,3],[349,13,346,2],[349,22,346,2,"finalizeTaprootInput"],[349,42,346,22,"finalizeTaprootInput"],[349,43,347,4,"inputIndex"],[349,53,347,14],[349,55,348,4,"tapLeafHashToFinalize"],[349,76,348,25],[349,78,350,4],[350,8,350,4],[350,12,349,4,"finalScriptsFunc"],[350,28,349,20],[350,31,349,20,"arguments"],[350,40,349,20],[350,41,349,20,"length"],[350,47,349,20],[350,55,349,20,"arguments"],[350,64,349,20],[350,72,349,20,"undefined"],[350,81,349,20],[350,84,349,20,"arguments"],[350,93,349,20],[350,99,349,23,"_$$_REQUIRE"],[350,110,349,23],[350,111,349,23,"_dependencyMap"],[350,125,349,23],[350,152,349,35,"tapScriptFinalizer"],[350,170,349,53],[351,8,351,4],[351,12,351,10,"input"],[351,17,351,15],[351,20,351,18],[351,21,351,19],[351,22,351,20],[351,24,351,22,"_$$_REQUIRE"],[351,35,351,22],[351,36,351,22,"_dependencyMap"],[351,50,351,22],[351,66,351,31,"checkForInput"],[351,79,351,44],[351,81,351,46],[351,85,351,50],[351,86,351,51,"data"],[351,90,351,55],[351,91,351,56,"inputs"],[351,97,351,62],[351,99,351,64,"inputIndex"],[351,109,351,74],[351,110,351,75],[352,8,352,4],[352,12,352,8],[352,13,352,9],[352,14,352,10],[352,16,352,12,"_$$_REQUIRE"],[352,27,352,12],[352,28,352,12,"_dependencyMap"],[352,42,352,12],[352,69,352,24,"isTaprootInput"],[352,83,352,38],[352,85,352,40,"input"],[352,90,352,45],[352,91,352,46],[352,93,353,6],[352,100,353,13],[352,104,353,17],[352,105,353,18,"_finalizeTaprootInput"],[352,126,353,39],[352,127,354,8,"inputIndex"],[352,137,354,18],[352,139,355,8,"input"],[352,144,355,13],[352,146,356,8,"tapLeafHashToFinalize"],[352,167,356,29],[352,169,357,8,"finalScriptsFunc"],[352,185,358,6],[352,186,358,7],[353,8,359,4],[353,14,359,10],[353,18,359,14,"Error"],[353,23,359,19],[353,24,359,20],[353,50,359,46,"inputIndex"],[353,60,359,56],[353,76,359,72],[353,77,359,73],[354,6,360,2],[355,4,360,3],[356,6,360,3,"key"],[356,9,360,3],[357,6,360,3,"value"],[357,11,360,3],[357,13,361,2],[357,22,361,2,"_finalizeInput"],[357,36,361,16,"_finalizeInput"],[357,37,361,17,"inputIndex"],[357,47,361,27],[357,49,361,29,"input"],[357,54,361,34],[357,56,361,72],[358,8,361,72],[358,12,361,36,"finalScriptsFunc"],[358,28,361,52],[358,31,361,52,"arguments"],[358,40,361,52],[358,41,361,52,"length"],[358,47,361,52],[358,55,361,52,"arguments"],[358,64,361,52],[358,72,361,52,"undefined"],[358,81,361,52],[358,84,361,52,"arguments"],[358,93,361,52],[358,99,361,55,"getFinalScripts"],[358,114,361,70],[359,8,362,4],[359,12,362,4,"_getScriptFromInput"],[359,31,362,4],[359,34,362,50,"getScriptFromInput"],[359,52,362,68],[359,53,363,6,"inputIndex"],[359,63,363,16],[359,65,364,6,"input"],[359,70,364,11],[359,72,365,6],[359,76,365,10],[359,77,365,11,"__CACHE"],[359,84,366,4],[359,85,366,5],[360,10,362,12,"script"],[360,16,362,18],[360,19,362,18,"_getScriptFromInput"],[360,38,362,18],[360,39,362,12,"script"],[360,45,362,18],[361,10,362,20,"isP2SH"],[361,16,362,26],[361,19,362,26,"_getScriptFromInput"],[361,38,362,26],[361,39,362,20,"isP2SH"],[361,45,362,26],[362,10,362,28,"isP2WSH"],[362,17,362,35],[362,20,362,35,"_getScriptFromInput"],[362,39,362,35],[362,40,362,28,"isP2WSH"],[362,47,362,35],[363,10,362,37,"isSegwit"],[363,18,362,45],[363,21,362,45,"_getScriptFromInput"],[363,40,362,45],[363,41,362,37,"isSegwit"],[363,49,362,45],[364,8,367,4],[364,12,367,8],[364,13,367,9,"script"],[364,19,367,15],[364,21,367,17],[364,27,367,23],[364,31,367,27,"Error"],[364,36,367,32],[364,37,367,33],[364,67,367,63,"inputIndex"],[364,77,367,73],[364,79,367,75],[364,80,367,76],[365,8,368,4,"checkPartialSigSighashes"],[365,32,368,28],[365,33,368,29,"input"],[365,38,368,34],[365,39,368,35],[366,8,369,4],[366,12,369,4,"_finalScriptsFunc"],[366,29,369,4],[366,32,369,51,"finalScriptsFunc"],[366,48,369,67],[366,49,370,6,"inputIndex"],[366,59,370,16],[366,61,371,6,"input"],[366,66,371,11],[366,68,372,6,"script"],[366,74,372,12],[366,76,373,6,"isSegwit"],[366,84,373,14],[366,86,374,6,"isP2SH"],[366,92,374,12],[366,94,375,6,"isP2WSH"],[366,101,376,4],[366,102,376,5],[367,10,369,12,"finalScriptSig"],[367,24,369,26],[367,27,369,26,"_finalScriptsFunc"],[367,44,369,26],[367,45,369,12,"finalScriptSig"],[367,59,369,26],[368,10,369,28,"finalScriptWitness"],[368,28,369,46],[368,31,369,46,"_finalScriptsFunc"],[368,48,369,46],[368,49,369,28,"finalScriptWitness"],[368,67,369,46],[369,8,377,4],[369,12,377,8,"finalScriptSig"],[369,26,377,22],[369,28,377,24],[369,32,377,28],[369,33,377,29,"data"],[369,37,377,33],[369,38,377,34,"updateInput"],[369,49,377,45],[369,50,377,46,"inputIndex"],[369,60,377,56],[369,62,377,58],[370,10,377,60,"finalScriptSig"],[370,24,377,74],[370,26,377,60,"finalScriptSig"],[371,8,377,75],[371,9,377,76],[371,10,377,77],[372,8,378,4],[372,12,378,8,"finalScriptWitness"],[372,30,378,26],[372,32,379,6],[372,36,379,10],[372,37,379,11,"data"],[372,41,379,15],[372,42,379,16,"updateInput"],[372,53,379,27],[372,54,379,28,"inputIndex"],[372,64,379,38],[372,66,379,40],[373,10,379,42,"finalScriptWitness"],[373,28,379,60],[373,30,379,42,"finalScriptWitness"],[374,8,379,61],[374,9,379,62],[374,10,379,63],[375,8,380,4],[375,12,380,8],[375,13,380,9,"finalScriptSig"],[375,27,380,23],[375,31,380,27],[375,32,380,28,"finalScriptWitness"],[375,50,380,46],[375,52,381,6],[375,58,381,12],[375,62,381,16,"Error"],[375,67,381,21],[375,68,381,22],[375,103,381,57,"inputIndex"],[375,113,381,67],[375,115,381,69],[375,116,381,70],[376,8,382,4],[376,12,382,8],[376,13,382,9,"data"],[376,17,382,13],[376,18,382,14,"clearFinalizedInput"],[376,37,382,33],[376,38,382,34,"inputIndex"],[376,48,382,44],[376,49,382,45],[377,8,383,4],[377,15,383,11],[377,19,383,15],[378,6,384,2],[379,4,384,3],[380,6,384,3,"key"],[380,9,384,3],[381,6,384,3,"value"],[381,11,384,3],[381,13,385,2],[381,22,385,2,"_finalizeTaprootInput"],[381,43,385,23,"_finalizeTaprootInput"],[381,44,386,4,"inputIndex"],[381,54,386,14],[381,56,387,4,"input"],[381,61,387,9],[381,63,388,4,"tapLeafHashToFinalize"],[381,84,388,25],[381,86,390,4],[382,8,390,4],[382,12,389,4,"finalScriptsFunc"],[382,28,389,20],[382,31,389,20,"arguments"],[382,40,389,20],[382,41,389,20,"length"],[382,47,389,20],[382,55,389,20,"arguments"],[382,64,389,20],[382,72,389,20,"undefined"],[382,81,389,20],[382,84,389,20,"arguments"],[382,93,389,20],[382,99,389,23,"_$$_REQUIRE"],[382,110,389,23],[382,111,389,23,"_dependencyMap"],[382,125,389,23],[382,152,389,35,"tapScriptFinalizer"],[382,170,389,53],[383,8,391,4],[383,12,391,8],[383,13,391,9,"input"],[383,18,391,14],[383,19,391,15,"witnessUtxo"],[383,30,391,26],[383,32,392,6],[383,38,392,12],[383,42,392,16,"Error"],[383,47,392,21],[383,48,393,8],[383,74,393,34,"inputIndex"],[383,84,393,44],[383,110,394,6],[383,111,394,7],[384,8,395,4],[385,8,396,4],[385,12,396,8,"input"],[385,17,396,13],[385,18,396,14,"tapKeySig"],[385,27,396,23],[385,29,396,25],[386,10,397,6],[386,14,397,12,"payment"],[386,21,397,19],[386,24,397,22,"payments"],[386,32,397,30],[386,33,397,31,"p2tr"],[386,37,397,35],[386,38,397,36],[387,12,398,8,"output"],[387,18,398,14],[387,20,398,16,"input"],[387,25,398,21],[387,26,398,22,"witnessUtxo"],[387,37,398,33],[387,38,398,34,"script"],[387,44,398,40],[388,12,399,8,"signature"],[388,21,399,17],[388,23,399,19,"input"],[388,28,399,24],[388,29,399,25,"tapKeySig"],[389,10,400,6],[389,11,400,7],[389,12,400,8],[390,10,401,6],[390,14,401,12,"finalScriptWitness"],[390,32,401,30],[390,35,401,33],[390,36,401,34],[390,37,401,35],[390,39,402,6,"_$$_REQUIRE"],[390,50,402,6],[390,51,402,6,"_dependencyMap"],[390,65,402,6],[390,95,402,21,"witnessStackToScriptWitness"],[390,122,402,48],[390,124,402,50,"payment"],[390,131,402,57],[390,132,402,58,"witness"],[390,139,402,65],[390,140,402,66],[391,10,403,6],[391,14,403,10],[391,15,403,11,"data"],[391,19,403,15],[391,20,403,16,"updateInput"],[391,31,403,27],[391,32,403,28,"inputIndex"],[391,42,403,38],[391,44,403,40],[392,12,403,42,"finalScriptWitness"],[392,30,403,60],[392,32,403,42,"finalScriptWitness"],[393,10,403,61],[393,11,403,62],[393,12,403,63],[394,8,404,4],[394,9,404,5],[394,15,404,11],[395,10,405,6],[395,14,405,6,"_finalScriptsFunc2"],[395,32,405,6],[395,35,405,37,"finalScriptsFunc"],[395,51,405,53],[395,52,406,8,"inputIndex"],[395,62,406,18],[395,64,407,8,"input"],[395,69,407,13],[395,71,408,8,"tapLeafHashToFinalize"],[395,92,409,6],[395,93,409,7],[396,12,405,14,"finalScriptWitness"],[396,31,405,32],[396,34,405,32,"_finalScriptsFunc2"],[396,52,405,32],[396,53,405,14,"finalScriptWitness"],[396,71,405,32],[397,10,410,6],[397,14,410,10],[397,15,410,11,"data"],[397,19,410,15],[397,20,410,16,"updateInput"],[397,31,410,27],[397,32,410,28,"inputIndex"],[397,42,410,38],[397,44,410,40],[398,12,410,42,"finalScriptWitness"],[398,30,410,60],[398,32,410,42,"finalScriptWitness"],[399,10,410,61],[399,11,410,62],[399,12,410,63],[400,8,411,4],[401,8,412,4],[401,12,412,8],[401,13,412,9,"data"],[401,17,412,13],[401,18,412,14,"clearFinalizedInput"],[401,37,412,33],[401,38,412,34,"inputIndex"],[401,48,412,44],[401,49,412,45],[402,8,413,4],[402,15,413,11],[402,19,413,15],[403,6,414,2],[404,4,414,3],[405,6,414,3,"key"],[405,9,414,3],[406,6,414,3,"value"],[406,11,414,3],[406,13,415,2],[406,22,415,2,"getInputType"],[406,34,415,14,"getInputType"],[406,35,415,15,"inputIndex"],[406,45,415,25],[406,47,415,27],[407,8,416,4],[407,12,416,10,"input"],[407,17,416,15],[407,20,416,18],[407,21,416,19],[407,22,416,20],[407,24,416,22,"_$$_REQUIRE"],[407,35,416,22],[407,36,416,22,"_dependencyMap"],[407,50,416,22],[407,66,416,31,"checkForInput"],[407,79,416,44],[407,81,416,46],[407,85,416,50],[407,86,416,51,"data"],[407,90,416,55],[407,91,416,56,"inputs"],[407,97,416,62],[407,99,416,64,"inputIndex"],[407,109,416,74],[407,110,416,75],[408,8,417,4],[408,12,417,10,"script"],[408,18,417,16],[408,21,417,19,"getScriptFromUtxo"],[408,38,417,36],[408,39,417,37,"inputIndex"],[408,49,417,47],[408,51,417,49,"input"],[408,56,417,54],[408,58,417,56],[408,62,417,60],[408,63,417,61,"__CACHE"],[408,70,417,68],[408,71,417,69],[409,8,418,4],[409,12,418,10,"result"],[409,18,418,16],[409,21,418,19,"getMeaningfulScript"],[409,40,418,38],[409,41,419,6,"script"],[409,47,419,12],[409,49,420,6,"inputIndex"],[409,59,420,16],[409,61,421,6],[409,68,421,13],[409,70,422,6,"input"],[409,75,422,11],[409,76,422,12,"redeemScript"],[409,88,422,24],[409,92,422,28,"redeemFromFinalScriptSig"],[409,116,422,52],[409,117,422,53,"input"],[409,122,422,58],[409,123,422,59,"finalScriptSig"],[409,137,422,73],[409,138,422,74],[409,140,423,6,"input"],[409,145,423,11],[409,146,423,12,"witnessScript"],[409,159,423,25],[409,163,424,8,"redeemFromFinalWitnessScript"],[409,191,424,36],[409,192,424,37,"input"],[409,197,424,42],[409,198,424,43,"finalScriptWitness"],[409,216,424,61],[409,217,425,4],[409,218,425,5],[410,8,426,4],[410,12,426,10,"type"],[410,16,426,14],[410,19,426,17,"result"],[410,25,426,23],[410,26,426,24,"type"],[410,30,426,28],[410,35,426,33],[410,40,426,38],[410,43,426,41],[410,45,426,43],[410,48,426,46,"result"],[410,54,426,52],[410,55,426,53,"type"],[410,59,426,57],[410,62,426,60],[410,65,426,63],[411,8,427,4],[411,12,427,10,"mainType"],[411,20,427,18],[411,23,427,21,"classifyScript"],[411,37,427,35],[411,38,427,36,"result"],[411,44,427,42],[411,45,427,43,"meaningfulScript"],[411,61,427,59],[411,62,427,60],[412,8,428,4],[412,15,428,11,"type"],[412,19,428,15],[412,22,428,18,"mainType"],[412,30,428,26],[413,6,429,2],[414,4,429,3],[415,6,429,3,"key"],[415,9,429,3],[416,6,429,3,"value"],[416,11,429,3],[416,13,430,2],[416,22,430,2,"inputHasPubkey"],[416,36,430,16,"inputHasPubkey"],[416,37,430,17,"inputIndex"],[416,47,430,27],[416,49,430,29,"pubkey"],[416,55,430,35],[416,57,430,37],[417,8,431,4],[417,12,431,10,"input"],[417,17,431,15],[417,20,431,18],[417,21,431,19],[417,22,431,20],[417,24,431,22,"_$$_REQUIRE"],[417,35,431,22],[417,36,431,22,"_dependencyMap"],[417,50,431,22],[417,66,431,31,"checkForInput"],[417,79,431,44],[417,81,431,46],[417,85,431,50],[417,86,431,51,"data"],[417,90,431,55],[417,91,431,56,"inputs"],[417,97,431,62],[417,99,431,64,"inputIndex"],[417,109,431,74],[417,110,431,75],[418,8,432,4],[418,15,432,11,"pubkeyInInput"],[418,28,432,24],[418,29,432,25,"pubkey"],[418,35,432,31],[418,37,432,33,"input"],[418,42,432,38],[418,44,432,40,"inputIndex"],[418,54,432,50],[418,56,432,52],[418,60,432,56],[418,61,432,57,"__CACHE"],[418,68,432,64],[418,69,432,65],[419,6,433,2],[420,4,433,3],[421,6,433,3,"key"],[421,9,433,3],[422,6,433,3,"value"],[422,11,433,3],[422,13,434,2],[422,22,434,2,"inputHasHDKey"],[422,35,434,15,"inputHasHDKey"],[422,36,434,16,"inputIndex"],[422,46,434,26],[422,48,434,28,"root"],[422,52,434,32],[422,54,434,34],[423,8,435,4],[423,12,435,10,"input"],[423,17,435,15],[423,20,435,18],[423,21,435,19],[423,22,435,20],[423,24,435,22,"_$$_REQUIRE"],[423,35,435,22],[423,36,435,22,"_dependencyMap"],[423,50,435,22],[423,66,435,31,"checkForInput"],[423,79,435,44],[423,81,435,46],[423,85,435,50],[423,86,435,51,"data"],[423,90,435,55],[423,91,435,56,"inputs"],[423,97,435,62],[423,99,435,64,"inputIndex"],[423,109,435,74],[423,110,435,75],[424,8,436,4],[424,12,436,10,"derivationIsMine"],[424,28,436,26],[424,31,436,29,"bip32DerivationIsMine"],[424,52,436,50],[424,53,436,51,"root"],[424,57,436,55],[424,58,436,56],[425,8,437,4],[425,15,438,6],[425,16,438,7],[425,17,438,8,"input"],[425,22,438,13],[425,23,438,14,"bip32Derivation"],[425,38,438,29],[425,42,438,33,"input"],[425,47,438,38],[425,48,438,39,"bip32Derivation"],[425,63,438,54],[425,64,438,55,"some"],[425,68,438,59],[425,69,438,60,"derivationIsMine"],[425,85,438,76],[425,86,438,77],[426,6,440,2],[427,4,440,3],[428,6,440,3,"key"],[428,9,440,3],[429,6,440,3,"value"],[429,11,440,3],[429,13,441,2],[429,22,441,2,"outputHasPubkey"],[429,37,441,17,"outputHasPubkey"],[429,38,441,18,"outputIndex"],[429,49,441,29],[429,51,441,31,"pubkey"],[429,57,441,37],[429,59,441,39],[430,8,442,4],[430,12,442,10,"output"],[430,18,442,16],[430,21,442,19],[430,22,442,20],[430,23,442,21],[430,25,442,23,"_$$_REQUIRE"],[430,36,442,23],[430,37,442,23,"_dependencyMap"],[430,51,442,23],[430,67,442,32,"checkForOutput"],[430,81,442,46],[430,83,442,48],[430,87,442,52],[430,88,442,53,"data"],[430,92,442,57],[430,93,442,58,"outputs"],[430,100,442,65],[430,102,442,67,"outputIndex"],[430,113,442,78],[430,114,442,79],[431,8,443,4],[431,15,443,11,"pubkeyInOutput"],[431,29,443,25],[431,30,443,26,"pubkey"],[431,36,443,32],[431,38,443,34,"output"],[431,44,443,40],[431,46,443,42,"outputIndex"],[431,57,443,53],[431,59,443,55],[431,63,443,59],[431,64,443,60,"__CACHE"],[431,71,443,67],[431,72,443,68],[432,6,444,2],[433,4,444,3],[434,6,444,3,"key"],[434,9,444,3],[435,6,444,3,"value"],[435,11,444,3],[435,13,445,2],[435,22,445,2,"outputHasHDKey"],[435,36,445,16,"outputHasHDKey"],[435,37,445,17,"outputIndex"],[435,48,445,28],[435,50,445,30,"root"],[435,54,445,34],[435,56,445,36],[436,8,446,4],[436,12,446,10,"output"],[436,18,446,16],[436,21,446,19],[436,22,446,20],[436,23,446,21],[436,25,446,23,"_$$_REQUIRE"],[436,36,446,23],[436,37,446,23,"_dependencyMap"],[436,51,446,23],[436,67,446,32,"checkForOutput"],[436,81,446,46],[436,83,446,48],[436,87,446,52],[436,88,446,53,"data"],[436,92,446,57],[436,93,446,58,"outputs"],[436,100,446,65],[436,102,446,67,"outputIndex"],[436,113,446,78],[436,114,446,79],[437,8,447,4],[437,12,447,10,"derivationIsMine"],[437,28,447,26],[437,31,447,29,"bip32DerivationIsMine"],[437,52,447,50],[437,53,447,51,"root"],[437,57,447,55],[437,58,447,56],[438,8,448,4],[438,15,449,6],[438,16,449,7],[438,17,449,8,"output"],[438,23,449,14],[438,24,449,15,"bip32Derivation"],[438,39,449,30],[438,43,449,34,"output"],[438,49,449,40],[438,50,449,41,"bip32Derivation"],[438,65,449,56],[438,66,449,57,"some"],[438,70,449,61],[438,71,449,62,"derivationIsMine"],[438,87,449,78],[438,88,449,79],[439,6,451,2],[440,4,451,3],[441,6,451,3,"key"],[441,9,451,3],[442,6,451,3,"value"],[442,11,451,3],[442,13,452,2],[442,22,452,2,"validateSignaturesOfAllInputs"],[442,51,452,31,"validateSignaturesOfAllInputs"],[442,52,452,32,"validator"],[442,61,452,41],[442,63,452,43],[443,8,452,43],[443,12,452,43,"_this5"],[443,18,452,43],[444,8,453,4],[444,9,453,5],[444,10,453,6],[444,12,453,8,"_$$_REQUIRE"],[444,23,453,8],[444,24,453,8,"_dependencyMap"],[444,38,453,8],[444,54,453,17,"checkForInput"],[444,67,453,30],[444,69,453,32],[444,73,453,36],[444,74,453,37,"data"],[444,78,453,41],[444,79,453,42,"inputs"],[444,85,453,48],[444,87,453,50],[444,88,453,51],[444,89,453,52],[444,90,453,53],[444,91,453,54],[445,8,454,4],[445,12,454,10,"results"],[445,19,454,17],[445,22,454,20,"range"],[445,27,454,25],[445,28,454,26],[445,32,454,30],[445,33,454,31,"data"],[445,37,454,35],[445,38,454,36,"inputs"],[445,44,454,42],[445,45,454,43,"length"],[445,51,454,49],[445,52,454,50],[445,53,454,51,"map"],[445,56,454,54],[445,57,454,55],[445,67,454,55,"idx"],[445,70,454,58],[446,10,454,58],[446,17,455,6,"_this5"],[446,23,455,10],[446,24,455,11,"validateSignaturesOfInput"],[446,49,455,36],[446,50,455,37,"idx"],[446,53,455,40],[446,55,455,42,"validator"],[446,64,455,51],[446,65,455,52],[447,8,455,52],[447,9,456,4],[447,10,456,5],[448,8,457,4],[448,15,457,11,"results"],[448,22,457,18],[448,23,457,19,"reduce"],[448,29,457,25],[448,30,457,26],[448,40,457,27,"final"],[448,45,457,32],[448,47,457,34,"res"],[448,50,457,37],[449,10,457,37],[449,17,457,42,"res"],[449,20,457,45],[449,25,457,50],[449,29,457,54],[449,33,457,58,"final"],[449,38,457,63],[450,8,457,63],[450,11,457,65],[450,15,457,69],[450,16,457,70],[451,6,458,2],[452,4,458,3],[453,6,458,3,"key"],[453,9,458,3],[454,6,458,3,"value"],[454,11,458,3],[454,13,459,2],[454,22,459,2,"validateSignaturesOfInput"],[454,47,459,27,"validateSignaturesOfInput"],[454,48,459,28,"inputIndex"],[454,58,459,38],[454,60,459,40,"validator"],[454,69,459,49],[454,71,459,51,"pubkey"],[454,77,459,57],[454,79,459,59],[455,8,460,4],[455,12,460,10,"input"],[455,17,460,15],[455,20,460,18],[455,24,460,22],[455,25,460,23,"data"],[455,29,460,27],[455,30,460,28,"inputs"],[455,36,460,34],[455,37,460,35,"inputIndex"],[455,47,460,45],[455,48,460,46],[456,8,461,4],[456,12,461,8],[456,13,461,9],[456,14,461,10],[456,16,461,12,"_$$_REQUIRE"],[456,27,461,12],[456,28,461,12,"_dependencyMap"],[456,42,461,12],[456,69,461,24,"isTaprootInput"],[456,83,461,38],[456,85,461,40,"input"],[456,90,461,45],[456,91,461,46],[456,93,462,6],[456,100,462,13],[456,104,462,17],[456,105,462,18,"validateSignaturesOfTaprootInput"],[456,137,462,50],[456,138,463,8,"inputIndex"],[456,148,463,18],[456,150,464,8,"validator"],[456,159,464,17],[456,161,465,8,"pubkey"],[456,167,466,6],[456,168,466,7],[457,8,467,4],[457,15,467,11],[457,19,467,15],[457,20,467,16,"_validateSignaturesOfInput"],[457,46,467,42],[457,47,467,43,"inputIndex"],[457,57,467,53],[457,59,467,55,"validator"],[457,68,467,64],[457,70,467,66,"pubkey"],[457,76,467,72],[457,77,467,73],[458,6,468,2],[459,4,468,3],[460,6,468,3,"key"],[460,9,468,3],[461,6,468,3,"value"],[461,11,468,3],[461,13,469,2],[461,22,469,2,"_validateSignaturesOfInput"],[461,48,469,28,"_validateSignaturesOfInput"],[461,49,469,29,"inputIndex"],[461,59,469,39],[461,61,469,41,"validator"],[461,70,469,50],[461,72,469,52,"pubkey"],[461,78,469,58],[461,80,469,60],[462,8,470,4],[462,12,470,10,"input"],[462,17,470,15],[462,20,470,18],[462,24,470,22],[462,25,470,23,"data"],[462,29,470,27],[462,30,470,28,"inputs"],[462,36,470,34],[462,37,470,35,"inputIndex"],[462,47,470,45],[462,48,470,46],[463,8,471,4],[463,12,471,10,"partialSig"],[463,22,471,20],[463,25,471,23],[463,26,471,24,"input"],[463,31,471,29],[463,35,471,33],[463,36,471,34],[463,37,471,35],[463,39,471,37,"partialSig"],[463,49,471,47],[464,8,472,4],[464,12,472,8],[464,13,472,9,"input"],[464,18,472,14],[464,22,472,18],[464,23,472,19,"partialSig"],[464,33,472,29],[464,37,472,33,"partialSig"],[464,47,472,43],[464,48,472,44,"length"],[464,54,472,50],[464,57,472,53],[464,58,472,54],[464,60,473,6],[464,66,473,12],[464,70,473,16,"Error"],[464,75,473,21],[464,76,473,22],[464,103,473,49],[464,104,473,50],[465,8,474,4],[465,12,474,8],[465,19,474,15,"validator"],[465,28,474,24],[465,33,474,29],[465,43,474,39],[465,45,475,6],[465,51,475,12],[465,55,475,16,"Error"],[465,60,475,21],[465,61,475,22],[465,109,475,70],[465,110,475,71],[466,8,476,4],[466,12,476,10,"mySigs"],[466,18,476,16],[466,21,476,19,"pubkey"],[466,27,476,25],[466,30,477,8,"partialSig"],[466,40,477,18],[466,41,477,19,"filter"],[466,47,477,25],[466,48,477,26],[466,58,477,26,"sig"],[466,61,477,29],[467,10,477,29],[467,17,477,33,"tools"],[467,22,477,38],[467,23,477,39,"compare"],[467,30,477,46],[467,31,477,47,"sig"],[467,34,477,50],[467,35,477,51,"pubkey"],[467,41,477,57],[467,43,477,59,"pubkey"],[467,49,477,65],[467,50,477,66],[467,55,477,71],[467,56,477,72],[468,8,477,72],[468,10,477,73],[468,13,478,8,"partialSig"],[468,23,478,18],[469,8,479,4],[469,12,479,8,"mySigs"],[469,18,479,14],[469,19,479,15,"length"],[469,25,479,21],[469,28,479,24],[469,29,479,25],[469,31,479,27],[469,37,479,33],[469,41,479,37,"Error"],[469,46,479,42],[469,47,479,43],[469,78,479,74],[469,79,479,75],[470,8,480,4],[470,12,480,10,"results"],[470,19,480,17],[470,22,480,20],[470,24,480,22],[471,8,481,4],[471,12,481,8,"hashCache"],[471,21,481,17],[472,8,482,4],[472,12,482,8,"scriptCache"],[472,23,482,19],[473,8,483,4],[473,12,483,8,"sighashCache"],[473,24,483,20],[474,8,484,4],[474,13,484,9],[474,17,484,15,"pSig"],[474,21,484,19],[474,25,484,23,"mySigs"],[474,31,484,29],[474,33,484,31],[475,10,485,6],[475,14,485,12,"sig"],[475,17,485,15],[475,20,485,18,"bscript"],[475,27,485,25],[475,28,485,26,"signature"],[475,37,485,35],[475,38,485,36,"decode"],[475,44,485,42],[475,45,485,43,"pSig"],[475,49,485,47],[475,50,485,48,"signature"],[475,59,485,57],[475,60,485,58],[476,10,486,6],[476,14,486,6,"_ref"],[476,18,486,6],[476,21,487,8,"sighashCache"],[476,33,487,20],[476,38,487,25,"sig"],[476,41,487,28],[476,42,487,29,"hashType"],[476,50,487,37],[476,53,488,12,"getHashForSig"],[476,66,488,25],[476,67,489,14,"inputIndex"],[476,77,489,24],[476,79,490,14,"Object"],[476,85,490,20],[476,86,490,21,"assign"],[476,92,490,27],[476,93,490,28],[476,94,490,29],[476,95,490,30],[476,97,490,32,"input"],[476,102,490,37],[476,104,490,39],[477,14,490,41,"sighashType"],[477,25,490,52],[477,27,490,54,"sig"],[477,30,490,57],[477,31,490,58,"hashType"],[478,12,490,67],[478,13,490,68],[478,14,490,69],[478,16,491,14],[478,20,491,18],[478,21,491,19,"__CACHE"],[478,28,491,26],[478,30,492,14],[478,34,493,12],[478,35,493,13],[478,38,494,12],[479,14,494,14,"hash"],[479,18,494,18],[479,20,494,20,"hashCache"],[479,29,494,29],[480,14,494,31,"script"],[480,20,494,37],[480,22,494,39,"scriptCache"],[481,12,494,51],[481,13,494,52],[482,12,486,14,"hash"],[482,16,486,18],[482,19,486,18,"_ref"],[482,23,486,18],[482,24,486,14,"hash"],[482,28,486,18],[483,12,486,20,"script"],[483,18,486,26],[483,21,486,26,"_ref"],[483,25,486,26],[483,26,486,20,"script"],[483,32,486,26],[484,10,495,6,"sighashCache"],[484,22,495,18],[484,25,495,21,"sig"],[484,28,495,24],[484,29,495,25,"hashType"],[484,37,495,33],[485,10,496,6,"hashCache"],[485,19,496,15],[485,22,496,18,"hash"],[485,26,496,22],[486,10,497,6,"scriptCache"],[486,21,497,17],[486,24,497,20,"script"],[486,30,497,26],[487,10,498,6,"checkScriptForPubkey"],[487,30,498,26],[487,31,498,27,"pSig"],[487,35,498,31],[487,36,498,32,"pubkey"],[487,42,498,38],[487,44,498,40,"script"],[487,50,498,46],[487,52,498,48],[487,60,498,56],[487,61,498,57],[488,10,499,6,"results"],[488,17,499,13],[488,18,499,14,"push"],[488,22,499,18],[488,23,499,19,"validator"],[488,32,499,28],[488,33,499,29,"pSig"],[488,37,499,33],[488,38,499,34,"pubkey"],[488,44,499,40],[488,46,499,42,"hash"],[488,50,499,46],[488,52,499,48,"sig"],[488,55,499,51],[488,56,499,52,"signature"],[488,65,499,61],[488,66,499,62],[488,67,499,63],[489,8,500,4],[490,8,501,4],[490,15,501,11,"results"],[490,22,501,18],[490,23,501,19,"every"],[490,28,501,24],[490,29,501,25],[490,39,501,25,"res"],[490,42,501,28],[491,10,501,28],[491,17,501,32,"res"],[491,20,501,35],[491,25,501,40],[491,29,501,44],[492,8,501,44],[492,10,501,45],[493,6,502,2],[494,4,502,3],[495,6,502,3,"key"],[495,9,502,3],[496,6,502,3,"value"],[496,11,502,3],[496,13,503,2],[496,22,503,2,"validateSignaturesOfTaprootInput"],[496,54,503,34,"validateSignaturesOfTaprootInput"],[496,55,503,35,"inputIndex"],[496,65,503,45],[496,67,503,47,"validator"],[496,76,503,56],[496,78,503,58,"pubkey"],[496,84,503,64],[496,86,503,66],[497,8,504,4],[497,12,504,10,"input"],[497,17,504,15],[497,20,504,18],[497,24,504,22],[497,25,504,23,"data"],[497,29,504,27],[497,30,504,28,"inputs"],[497,36,504,34],[497,37,504,35,"inputIndex"],[497,47,504,45],[497,48,504,46],[498,8,505,4],[498,12,505,10,"tapKeySig"],[498,21,505,19],[498,24,505,22],[498,25,505,23,"input"],[498,30,505,28],[498,34,505,32],[498,35,505,33],[498,36,505,34],[498,38,505,36,"tapKeySig"],[498,47,505,45],[499,8,506,4],[499,12,506,10,"tapScriptSig"],[499,24,506,22],[499,27,506,25],[499,28,506,26,"input"],[499,33,506,31],[499,37,506,35],[499,38,506,36],[499,39,506,37],[499,41,506,39,"tapScriptSig"],[499,53,506,51],[500,8,507,4],[500,12,507,8],[500,13,507,9,"input"],[500,18,507,14],[500,22,507,18],[500,23,507,19,"tapKeySig"],[500,32,507,28],[500,36,507,32],[500,38,507,34,"tapScriptSig"],[500,50,507,46],[500,54,507,50],[500,55,507,51,"tapScriptSig"],[500,67,507,63],[500,68,507,64,"length"],[500,74,507,70],[500,75,507,71],[500,77,508,6],[500,83,508,12],[500,87,508,16,"Error"],[500,92,508,21],[500,93,508,22],[500,120,508,49],[500,121,508,50],[501,8,509,4],[501,12,509,8],[501,19,509,15,"validator"],[501,28,509,24],[501,33,509,29],[501,43,509,39],[501,45,510,6],[501,51,510,12],[501,55,510,16,"Error"],[501,60,510,21],[501,61,510,22],[501,109,510,70],[501,110,510,71],[502,8,511,4,"pubkey"],[502,14,511,10],[502,17,511,13,"pubkey"],[502,23,511,19],[502,27,511,23],[502,28,511,24],[502,29,511,25],[502,31,511,27,"_$$_REQUIRE"],[502,42,511,27],[502,43,511,27,"_dependencyMap"],[502,57,511,27],[502,84,511,39,"toXOnly"],[502,91,511,46],[502,93,511,48,"pubkey"],[502,99,511,54],[502,100,511,55],[503,8,512,4],[503,12,512,10,"allHashses"],[503,22,512,20],[503,25,512,23,"pubkey"],[503,31,512,29],[503,34,513,8,"getTaprootHashesForSig"],[503,56,513,30],[503,57,514,10,"inputIndex"],[503,67,514,20],[503,69,515,10,"input"],[503,74,515,15],[503,76,516,10],[503,80,516,14],[503,81,516,15,"data"],[503,85,516,19],[503,86,516,20,"inputs"],[503,92,516,26],[503,94,517,10,"pubkey"],[503,100,517,16],[503,102,518,10],[503,106,518,14],[503,107,518,15,"__CACHE"],[503,114,519,8],[503,115,519,9],[503,118,520,8,"getAllTaprootHashesForSig"],[503,143,520,33],[503,144,521,10,"inputIndex"],[503,154,521,20],[503,156,522,10,"input"],[503,161,522,15],[503,163,523,10],[503,167,523,14],[503,168,523,15,"data"],[503,172,523,19],[503,173,523,20,"inputs"],[503,179,523,26],[503,181,524,10],[503,185,524,14],[503,186,524,15,"__CACHE"],[503,193,525,8],[503,194,525,9],[504,8,526,4],[504,12,526,8],[504,13,526,9,"allHashses"],[504,23,526,19],[504,24,526,20,"length"],[504,30,526,26],[504,32,526,28],[504,38,526,34],[504,42,526,38,"Error"],[504,47,526,43],[504,48,526,44],[504,79,526,75],[504,80,526,76],[505,8,527,4],[505,12,527,10,"tapKeyHash"],[505,22,527,20],[505,25,527,23,"allHashses"],[505,35,527,33],[505,36,527,34,"find"],[505,40,527,38],[505,41,527,39],[505,51,527,39,"h"],[505,52,527,40],[506,10,527,40],[506,17,527,44],[506,18,527,45,"h"],[506,19,527,46],[506,20,527,47,"leafHash"],[506,28,527,55],[507,8,527,55],[507,10,527,56],[508,8,528,4],[508,12,528,8,"validationResultCount"],[508,33,528,29],[508,36,528,32],[508,37,528,33],[509,8,529,4],[509,12,529,8,"tapKeySig"],[509,21,529,17],[509,25,529,21,"tapKeyHash"],[509,35,529,31],[509,37,529,33],[510,10,530,6],[510,14,530,12,"isValidTapkeySig"],[510,30,530,28],[510,33,530,31,"validator"],[510,42,530,40],[510,43,531,8,"tapKeyHash"],[510,53,531,18],[510,54,531,19,"pubkey"],[510,60,531,25],[510,62,532,8,"tapKeyHash"],[510,72,532,18],[510,73,532,19,"hash"],[510,77,532,23],[510,79,533,8,"trimTaprootSig"],[510,93,533,22],[510,94,533,23,"tapKeySig"],[510,103,533,32],[510,104,534,6],[510,105,534,7],[511,10,535,6],[511,14,535,10],[511,15,535,11,"isValidTapkeySig"],[511,31,535,27],[511,33,535,29],[511,40,535,36],[511,45,535,41],[512,10,536,6,"validationResultCount"],[512,31,536,27],[512,33,536,29],[513,8,537,4],[514,8,538,4],[514,12,538,8,"tapScriptSig"],[514,24,538,20],[514,26,538,22],[515,10,538,22],[515,14,538,22,"_loop"],[515,19,538,22],[515,31,538,22,"_loop"],[515,37,538,22,"tapSig"],[515,43,538,22],[515,45,539,41],[516,14,540,8],[516,18,540,14,"tapSigHash"],[516,28,540,24],[516,31,540,27,"allHashses"],[516,41,540,37],[516,42,540,38,"find"],[516,46,540,42],[516,47,541,10],[516,57,541,10,"h"],[516,58,541,11],[517,16,541,11],[517,23,541,15,"tools"],[517,28,541,20],[517,29,541,21,"compare"],[517,36,541,28],[517,37,541,29,"h"],[517,38,541,30],[517,39,541,31,"pubkey"],[517,45,541,37],[517,47,541,39,"tapSig"],[517,53,541,45],[517,54,541,46,"pubkey"],[517,60,541,52],[517,61,541,53],[517,66,541,58],[517,67,541,59],[518,14,541,59],[518,15,542,8],[518,16,542,9],[519,14,543,8],[519,18,543,12,"tapSigHash"],[519,28,543,22],[519,30,543,24],[520,16,544,10],[520,20,544,16,"isValidTapScriptSig"],[520,39,544,35],[520,42,544,38,"validator"],[520,51,544,47],[520,52,545,12,"tapSig"],[520,58,545,18],[520,59,545,19,"pubkey"],[520,65,545,25],[520,67,546,12,"tapSigHash"],[520,77,546,22],[520,78,546,23,"hash"],[520,82,546,27],[520,84,547,12,"trimTaprootSig"],[520,98,547,26],[520,99,547,27,"tapSig"],[520,105,547,33],[520,106,547,34,"signature"],[520,115,547,43],[520,116,548,10],[520,117,548,11],[521,16,549,10],[521,20,549,14],[521,21,549,15,"isValidTapScriptSig"],[521,40,549,34],[522,18,549,34,"v"],[522,19,549,34],[522,21,549,43],[523,16,549,48],[524,16,550,10,"validationResultCount"],[524,37,550,31],[524,39,550,33],[525,14,551,8],[526,12,552,6],[526,13,552,7],[527,12,552,7,"_ret"],[527,16,552,7],[528,10,539,6],[528,15,539,11],[528,19,539,17,"tapSig"],[528,25,539,23],[528,29,539,27,"tapScriptSig"],[528,41,539,39],[529,12,539,39,"_ret"],[529,16,539,39],[529,19,539,39,"_loop"],[529,24,539,39],[529,25,539,39,"tapSig"],[529,31,539,39],[530,12,539,39],[530,16,539,39,"_ret"],[530,20,539,39],[530,29,539,39,"_ret"],[530,33,539,39],[530,34,539,39,"v"],[530,35,539,39],[531,10,539,39],[532,8,553,4],[533,8,554,4],[533,15,554,11,"validationResultCount"],[533,36,554,32],[533,39,554,35],[533,40,554,36],[534,6,555,2],[535,4,555,3],[536,6,555,3,"key"],[536,9,555,3],[537,6,555,3,"value"],[537,11,555,3],[537,13,556,2],[537,22,556,2,"signAllInputsHD"],[537,37,556,17,"signAllInputsHD"],[537,38,557,4,"hdKeyPair"],[537,47,557,13],[537,49,559,4],[538,8,559,4],[538,12,558,4,"sighashTypes"],[538,24,558,16],[538,27,558,16,"arguments"],[538,36,558,16],[538,37,558,16,"length"],[538,43,558,16],[538,51,558,16,"arguments"],[538,60,558,16],[538,68,558,16,"undefined"],[538,77,558,16],[538,80,558,16,"arguments"],[538,89,558,16],[538,95,558,19],[538,96,558,20,"_$$_REQUIRE"],[538,107,558,20],[538,108,558,20,"_dependencyMap"],[538,122,558,20],[538,149,558,37,"Transaction"],[538,160,558,48],[538,161,558,49,"SIGHASH_ALL"],[538,172,558,60],[538,173,558,61],[539,8,560,4],[539,12,560,8],[539,13,560,9,"hdKeyPair"],[539,22,560,18],[539,26,560,22],[539,27,560,23,"hdKeyPair"],[539,36,560,32],[539,37,560,33,"publicKey"],[539,46,560,42],[539,50,560,46],[539,51,560,47,"hdKeyPair"],[539,60,560,56],[539,61,560,57,"fingerprint"],[539,72,560,68],[539,74,560,70],[540,10,561,6],[540,16,561,12],[540,20,561,16,"Error"],[540,25,561,21],[540,26,561,22],[540,55,561,51],[540,56,561,52],[541,8,562,4],[542,8,563,4],[542,12,563,10,"results"],[542,19,563,17],[542,22,563,20],[542,24,563,22],[543,8,564,4],[543,13,564,9],[543,17,564,15,"i"],[543,18,564,16],[543,22,564,20,"range"],[543,27,564,25],[543,28,564,26],[543,32,564,30],[543,33,564,31,"data"],[543,37,564,35],[543,38,564,36,"inputs"],[543,44,564,42],[543,45,564,43,"length"],[543,51,564,49],[543,52,564,50],[543,54,564,52],[544,10,565,6],[544,14,565,10],[545,12,566,8],[545,16,566,12],[545,17,566,13,"signInputHD"],[545,28,566,24],[545,29,566,25,"i"],[545,30,566,26],[545,32,566,28,"hdKeyPair"],[545,41,566,37],[545,43,566,39,"sighashTypes"],[545,55,566,51],[545,56,566,52],[546,12,567,8,"results"],[546,19,567,15],[546,20,567,16,"push"],[546,24,567,20],[546,25,567,21],[546,29,567,25],[546,30,567,26],[547,10,568,6],[547,11,568,7],[547,12,568,8],[547,19,568,15,"err"],[547,22,568,18],[547,24,568,20],[548,12,569,8,"results"],[548,19,569,15],[548,20,569,16,"push"],[548,24,569,20],[548,25,569,21],[548,30,569,26],[548,31,569,27],[549,10,570,6],[550,8,571,4],[551,8,572,4],[551,12,572,8,"results"],[551,19,572,15],[551,20,572,16,"every"],[551,25,572,21],[551,26,572,22],[551,36,572,22,"v"],[551,37,572,23],[552,10,572,23],[552,17,572,27,"v"],[552,18,572,28],[552,23,572,33],[552,28,572,38],[553,8,572,38],[553,10,572,39],[553,12,572,41],[554,10,573,6],[554,16,573,12],[554,20,573,16,"Error"],[554,25,573,21],[554,26,573,22],[554,49,573,45],[554,50,573,46],[555,8,574,4],[556,8,575,4],[556,15,575,11],[556,19,575,15],[557,6,576,2],[558,4,576,3],[559,6,576,3,"key"],[559,9,576,3],[560,6,576,3,"value"],[560,11,576,3],[560,13,577,2],[560,22,577,2,"signAllInputsHDAsync"],[560,42,577,22,"signAllInputsHDAsync"],[560,43,578,4,"hdKeyPair"],[560,52,578,13],[560,54,580,4],[561,8,580,4],[561,12,580,4,"_this6"],[561,18,580,4],[562,8,580,4],[562,12,579,4,"sighashTypes"],[562,24,579,16],[562,27,579,16,"arguments"],[562,36,579,16],[562,37,579,16,"length"],[562,43,579,16],[562,51,579,16,"arguments"],[562,60,579,16],[562,68,579,16,"undefined"],[562,77,579,16],[562,80,579,16,"arguments"],[562,89,579,16],[562,95,579,19],[562,96,579,20,"_$$_REQUIRE"],[562,107,579,20],[562,108,579,20,"_dependencyMap"],[562,122,579,20],[562,149,579,37,"Transaction"],[562,160,579,48],[562,161,579,49,"SIGHASH_ALL"],[562,172,579,60],[562,173,579,61],[563,8,581,4],[563,15,581,11],[563,19,581,15,"Promise"],[563,26,581,22],[563,27,581,23],[563,37,581,24,"resolve"],[563,44,581,31],[563,46,581,33,"reject"],[563,52,581,39],[563,54,581,44],[564,10,582,6],[564,14,582,10],[564,15,582,11,"hdKeyPair"],[564,24,582,20],[564,28,582,24],[564,29,582,25,"hdKeyPair"],[564,38,582,34],[564,39,582,35,"publicKey"],[564,48,582,44],[564,52,582,48],[564,53,582,49,"hdKeyPair"],[564,62,582,58],[564,63,582,59,"fingerprint"],[564,74,582,70],[564,76,582,72],[565,12,583,8],[565,19,583,15,"reject"],[565,25,583,21],[565,26,583,22],[565,30,583,26,"Error"],[565,35,583,31],[565,36,583,32],[565,65,583,61],[565,66,583,62],[565,67,583,63],[566,10,584,6],[567,10,585,6],[567,14,585,12,"results"],[567,21,585,19],[567,24,585,22],[567,26,585,24],[568,10,586,6],[568,14,586,12,"promises"],[568,22,586,20],[568,25,586,23],[568,27,586,25],[569,10,587,6],[569,15,587,11],[569,19,587,17,"i"],[569,20,587,18],[569,24,587,22,"range"],[569,29,587,27],[569,30,587,28,"_this6"],[569,36,587,32],[569,37,587,33,"data"],[569,41,587,37],[569,42,587,38,"inputs"],[569,48,587,44],[569,49,587,45,"length"],[569,55,587,51],[569,56,587,52],[569,58,587,54],[570,12,588,8,"promises"],[570,20,588,16],[570,21,588,17,"push"],[570,25,588,21],[570,26,589,10,"_this6"],[570,32,589,14],[570,33,589,15,"signInputHDAsync"],[570,49,589,31],[570,50,589,32,"i"],[570,51,589,33],[570,53,589,35,"hdKeyPair"],[570,62,589,44],[570,64,589,46,"sighashTypes"],[570,76,589,58],[570,77,589,59],[570,78,589,60,"then"],[570,82,589,64],[570,83,590,12],[570,95,590,18],[571,14,591,14,"results"],[571,21,591,21],[571,22,591,22,"push"],[571,26,591,26],[571,27,591,27],[571,31,591,31],[571,32,591,32],[572,12,592,12],[572,13,592,13],[572,15,593,12],[572,27,593,18],[573,14,594,14,"results"],[573,21,594,21],[573,22,594,22,"push"],[573,26,594,26],[573,27,594,27],[573,32,594,32],[573,33,594,33],[574,12,595,12],[574,13,596,10],[574,14,597,8],[574,15,597,9],[575,10,598,6],[576,10,599,6],[576,17,599,13,"Promise"],[576,24,599,20],[576,25,599,21,"all"],[576,28,599,24],[576,29,599,25,"promises"],[576,37,599,33],[576,38,599,34],[576,39,599,35,"then"],[576,43,599,39],[576,44,599,40],[576,56,599,46],[577,12,600,8],[577,16,600,12,"results"],[577,23,600,19],[577,24,600,20,"every"],[577,29,600,25],[577,30,600,26],[577,40,600,26,"v"],[577,41,600,27],[578,14,600,27],[578,21,600,31,"v"],[578,22,600,32],[578,27,600,37],[578,32,600,42],[579,12,600,42],[579,14,600,43],[579,16,600,45],[580,14,601,10],[580,21,601,17,"reject"],[580,27,601,23],[580,28,601,24],[580,32,601,28,"Error"],[580,37,601,33],[580,38,601,34],[580,61,601,57],[580,62,601,58],[580,63,601,59],[581,12,602,8],[582,12,603,8,"resolve"],[582,19,603,15],[582,20,603,16],[582,21,603,17],[583,10,604,6],[583,11,604,7],[583,12,604,8],[584,8,605,4],[584,9,605,5],[584,10,605,6],[585,6,606,2],[586,4,606,3],[587,6,606,3,"key"],[587,9,606,3],[588,6,606,3,"value"],[588,11,606,3],[588,13,607,2],[588,22,607,2,"signInputHD"],[588,33,607,13,"signInputHD"],[588,34,608,4,"inputIndex"],[588,44,608,14],[588,46,609,4,"hdKeyPair"],[588,55,609,13],[588,57,611,4],[589,8,611,4],[589,12,611,4,"_this7"],[589,18,611,4],[590,8,611,4],[590,12,610,4,"sighashTypes"],[590,24,610,16],[590,27,610,16,"arguments"],[590,36,610,16],[590,37,610,16,"length"],[590,43,610,16],[590,51,610,16,"arguments"],[590,60,610,16],[590,68,610,16,"undefined"],[590,77,610,16],[590,80,610,16,"arguments"],[590,89,610,16],[590,95,610,19],[590,96,610,20,"_$$_REQUIRE"],[590,107,610,20],[590,108,610,20,"_dependencyMap"],[590,122,610,20],[590,149,610,37,"Transaction"],[590,160,610,48],[590,161,610,49,"SIGHASH_ALL"],[590,172,610,60],[590,173,610,61],[591,8,612,4],[591,12,612,8],[591,13,612,9,"hdKeyPair"],[591,22,612,18],[591,26,612,22],[591,27,612,23,"hdKeyPair"],[591,36,612,32],[591,37,612,33,"publicKey"],[591,46,612,42],[591,50,612,46],[591,51,612,47,"hdKeyPair"],[591,60,612,56],[591,61,612,57,"fingerprint"],[591,72,612,68],[591,74,612,70],[592,10,613,6],[592,16,613,12],[592,20,613,16,"Error"],[592,25,613,21],[592,26,613,22],[592,55,613,51],[592,56,613,52],[593,8,614,4],[594,8,615,4],[594,12,615,10,"signers"],[594,19,615,17],[594,22,615,20,"getSignersFromHD"],[594,38,615,36],[594,39,615,37,"inputIndex"],[594,49,615,47],[594,51,615,49],[594,55,615,53],[594,56,615,54,"data"],[594,60,615,58],[594,61,615,59,"inputs"],[594,67,615,65],[594,69,615,67,"hdKeyPair"],[594,78,615,76],[594,79,615,77],[595,8,616,4,"signers"],[595,15,616,11],[595,16,616,12,"forEach"],[595,23,616,19],[595,24,616,20],[595,34,616,20,"signer"],[595,40,616,26],[596,10,616,26],[596,17,616,30,"_this7"],[596,23,616,34],[596,24,616,35,"signInput"],[596,33,616,44],[596,34,616,45,"inputIndex"],[596,44,616,55],[596,46,616,57,"signer"],[596,52,616,63],[596,54,616,65,"sighashTypes"],[596,66,616,77],[596,67,616,78],[597,8,616,78],[597,10,616,79],[598,8,617,4],[598,15,617,11],[598,19,617,15],[599,6,618,2],[600,4,618,3],[601,6,618,3,"key"],[601,9,618,3],[602,6,618,3,"value"],[602,11,618,3],[602,13,619,2],[602,22,619,2,"signInputHDAsync"],[602,38,619,18,"signInputHDAsync"],[602,39,620,4,"inputIndex"],[602,49,620,14],[602,51,621,4,"hdKeyPair"],[602,60,621,13],[602,62,623,4],[603,8,623,4],[603,12,623,4,"_this8"],[603,18,623,4],[604,8,623,4],[604,12,622,4,"sighashTypes"],[604,24,622,16],[604,27,622,16,"arguments"],[604,36,622,16],[604,37,622,16,"length"],[604,43,622,16],[604,51,622,16,"arguments"],[604,60,622,16],[604,68,622,16,"undefined"],[604,77,622,16],[604,80,622,16,"arguments"],[604,89,622,16],[604,95,622,19],[604,96,622,20,"_$$_REQUIRE"],[604,107,622,20],[604,108,622,20,"_dependencyMap"],[604,122,622,20],[604,149,622,37,"Transaction"],[604,160,622,48],[604,161,622,49,"SIGHASH_ALL"],[604,172,622,60],[604,173,622,61],[605,8,624,4],[605,15,624,11],[605,19,624,15,"Promise"],[605,26,624,22],[605,27,624,23],[605,37,624,24,"resolve"],[605,44,624,31],[605,46,624,33,"reject"],[605,52,624,39],[605,54,624,44],[606,10,625,6],[606,14,625,10],[606,15,625,11,"hdKeyPair"],[606,24,625,20],[606,28,625,24],[606,29,625,25,"hdKeyPair"],[606,38,625,34],[606,39,625,35,"publicKey"],[606,48,625,44],[606,52,625,48],[606,53,625,49,"hdKeyPair"],[606,62,625,58],[606,63,625,59,"fingerprint"],[606,74,625,70],[606,76,625,72],[607,12,626,8],[607,19,626,15,"reject"],[607,25,626,21],[607,26,626,22],[607,30,626,26,"Error"],[607,35,626,31],[607,36,626,32],[607,65,626,61],[607,66,626,62],[607,67,626,63],[608,10,627,6],[609,10,628,6],[609,14,628,12,"signers"],[609,21,628,19],[609,24,628,22,"getSignersFromHD"],[609,40,628,38],[609,41,628,39,"inputIndex"],[609,51,628,49],[609,53,628,51,"_this8"],[609,59,628,55],[609,60,628,56,"data"],[609,64,628,60],[609,65,628,61,"inputs"],[609,71,628,67],[609,73,628,69,"hdKeyPair"],[609,82,628,78],[609,83,628,79],[610,10,629,6],[610,14,629,12,"promises"],[610,22,629,20],[610,25,629,23,"signers"],[610,32,629,30],[610,33,629,31,"map"],[610,36,629,34],[610,37,629,35],[610,47,629,35,"signer"],[610,53,629,41],[611,12,629,41],[611,19,630,8,"_this8"],[611,25,630,12],[611,26,630,13,"signInputAsync"],[611,40,630,27],[611,41,630,28,"inputIndex"],[611,51,630,38],[611,53,630,40,"signer"],[611,59,630,46],[611,61,630,48,"sighashTypes"],[611,73,630,60],[611,74,630,61],[612,10,630,61],[612,11,631,6],[612,12,631,7],[613,10,632,6],[613,17,632,13,"Promise"],[613,24,632,20],[613,25,632,21,"all"],[613,28,632,24],[613,29,632,25,"promises"],[613,37,632,33],[613,38,632,34],[613,39,633,9,"then"],[613,43,633,13],[613,44,633,14],[613,56,633,20],[614,12,634,10,"resolve"],[614,19,634,17],[614,20,634,18],[614,21,634,19],[615,10,635,8],[615,11,635,9],[615,12,635,10],[615,13,636,9,"catch"],[615,18,636,14],[615,19,636,15,"reject"],[615,25,636,21],[615,26,636,22],[616,8,637,4],[616,9,637,5],[616,10,637,6],[617,6,638,2],[618,4,638,3],[619,6,638,3,"key"],[619,9,638,3],[620,6,638,3,"value"],[620,11,638,3],[620,13,639,2],[620,22,639,2,"signAllInputs"],[620,35,639,15,"signAllInputs"],[620,36,639,16,"keyPair"],[620,43,639,23],[620,45,639,25,"sighashTypes"],[620,57,639,37],[620,59,639,39],[621,8,640,4],[621,12,640,8],[621,13,640,9,"keyPair"],[621,20,640,16],[621,24,640,20],[621,25,640,21,"keyPair"],[621,32,640,28],[621,33,640,29,"publicKey"],[621,42,640,38],[621,44,641,6],[621,50,641,12],[621,54,641,16,"Error"],[621,59,641,21],[621,60,641,22],[621,87,641,49],[621,88,641,50],[622,8,642,4],[623,8,643,4],[624,8,644,4],[625,8,645,4],[625,12,645,10,"results"],[625,19,645,17],[625,22,645,20],[625,24,645,22],[626,8,646,4],[626,13,646,9],[626,17,646,15,"i"],[626,18,646,16],[626,22,646,20,"range"],[626,27,646,25],[626,28,646,26],[626,32,646,30],[626,33,646,31,"data"],[626,37,646,35],[626,38,646,36,"inputs"],[626,44,646,42],[626,45,646,43,"length"],[626,51,646,49],[626,52,646,50],[626,54,646,52],[627,10,647,6],[627,14,647,10],[628,12,648,8],[628,16,648,12],[628,17,648,13,"signInput"],[628,26,648,22],[628,27,648,23,"i"],[628,28,648,24],[628,30,648,26,"keyPair"],[628,37,648,33],[628,39,648,35,"sighashTypes"],[628,51,648,47],[628,52,648,48],[629,12,649,8,"results"],[629,19,649,15],[629,20,649,16,"push"],[629,24,649,20],[629,25,649,21],[629,29,649,25],[629,30,649,26],[630,10,650,6],[630,11,650,7],[630,12,650,8],[630,19,650,15,"err"],[630,22,650,18],[630,24,650,20],[631,12,651,8,"results"],[631,19,651,15],[631,20,651,16,"push"],[631,24,651,20],[631,25,651,21],[631,30,651,26],[631,31,651,27],[632,10,652,6],[633,8,653,4],[634,8,654,4],[634,12,654,8,"results"],[634,19,654,15],[634,20,654,16,"every"],[634,25,654,21],[634,26,654,22],[634,36,654,22,"v"],[634,37,654,23],[635,10,654,23],[635,17,654,27,"v"],[635,18,654,28],[635,23,654,33],[635,28,654,38],[636,8,654,38],[636,10,654,39],[636,12,654,41],[637,10,655,6],[637,16,655,12],[637,20,655,16,"Error"],[637,25,655,21],[637,26,655,22],[637,49,655,45],[637,50,655,46],[638,8,656,4],[639,8,657,4],[639,15,657,11],[639,19,657,15],[640,6,658,2],[641,4,658,3],[642,6,658,3,"key"],[642,9,658,3],[643,6,658,3,"value"],[643,11,658,3],[643,13,659,2],[643,22,659,2,"signAllInputsAsync"],[643,40,659,20,"signAllInputsAsync"],[643,41,659,21,"keyPair"],[643,48,659,28],[643,50,659,30,"sighashTypes"],[643,62,659,42],[643,64,659,44],[644,8,659,44],[644,12,659,44,"_this9"],[644,18,659,44],[645,8,660,4],[645,15,660,11],[645,19,660,15,"Promise"],[645,26,660,22],[645,27,660,23],[645,37,660,24,"resolve"],[645,44,660,31],[645,46,660,33,"reject"],[645,52,660,39],[645,54,660,44],[646,10,661,6],[646,14,661,10],[646,15,661,11,"keyPair"],[646,22,661,18],[646,26,661,22],[646,27,661,23,"keyPair"],[646,34,661,30],[646,35,661,31,"publicKey"],[646,44,661,40],[646,46,662,8],[646,53,662,15,"reject"],[646,59,662,21],[646,60,662,22],[646,64,662,26,"Error"],[646,69,662,31],[646,70,662,32],[646,97,662,59],[646,98,662,60],[646,99,662,61],[647,10,663,6],[648,10,664,6],[649,10,665,6],[650,10,666,6],[650,14,666,12,"results"],[650,21,666,19],[650,24,666,22],[650,26,666,24],[651,10,667,6],[651,14,667,12,"promises"],[651,22,667,20],[651,25,667,23],[651,27,667,25],[652,10,668,6],[652,19,668,6,"_ref2"],[652,24,668,6],[652,28,668,24,"_this9"],[652,34,668,28],[652,35,668,29,"data"],[652,39,668,33],[652,40,668,34,"inputs"],[652,46,668,40],[652,47,668,41,"entries"],[652,54,668,48],[652,55,668,49],[652,56,668,50],[652,58,668,52],[653,12,668,52],[653,16,668,52,"_ref3"],[653,21,668,52],[653,24,668,52,"_slicedToArray"],[653,38,668,52],[653,39,668,52,"_ref2"],[653,44,668,52],[654,12,668,52],[654,16,668,18,"i"],[654,17,668,19],[654,20,668,19,"_ref3"],[654,25,668,19],[655,12,669,8,"promises"],[655,20,669,16],[655,21,669,17,"push"],[655,25,669,21],[655,26,670,10,"_this9"],[655,32,670,14],[655,33,670,15,"signInputAsync"],[655,47,670,29],[655,48,670,30,"i"],[655,49,670,31],[655,51,670,33,"keyPair"],[655,58,670,40],[655,60,670,42,"sighashTypes"],[655,72,670,54],[655,73,670,55],[655,74,670,56,"then"],[655,78,670,60],[655,79,671,12],[655,91,671,18],[656,14,672,14,"results"],[656,21,672,21],[656,22,672,22,"push"],[656,26,672,26],[656,27,672,27],[656,31,672,31],[656,32,672,32],[657,12,673,12],[657,13,673,13],[657,15,674,12],[657,27,674,18],[658,14,675,14,"results"],[658,21,675,21],[658,22,675,22,"push"],[658,26,675,26],[658,27,675,27],[658,32,675,32],[658,33,675,33],[659,12,676,12],[659,13,677,10],[659,14,678,8],[659,15,678,9],[660,10,679,6],[661,10,680,6],[661,17,680,13,"Promise"],[661,24,680,20],[661,25,680,21,"all"],[661,28,680,24],[661,29,680,25,"promises"],[661,37,680,33],[661,38,680,34],[661,39,680,35,"then"],[661,43,680,39],[661,44,680,40],[661,56,680,46],[662,12,681,8],[662,16,681,12,"results"],[662,23,681,19],[662,24,681,20,"every"],[662,29,681,25],[662,30,681,26],[662,40,681,26,"v"],[662,41,681,27],[663,14,681,27],[663,21,681,31,"v"],[663,22,681,32],[663,27,681,37],[663,32,681,42],[664,12,681,42],[664,14,681,43],[664,16,681,45],[665,14,682,10],[665,21,682,17,"reject"],[665,27,682,23],[665,28,682,24],[665,32,682,28,"Error"],[665,37,682,33],[665,38,682,34],[665,61,682,57],[665,62,682,58],[665,63,682,59],[666,12,683,8],[667,12,684,8,"resolve"],[667,19,684,15],[667,20,684,16],[667,21,684,17],[668,10,685,6],[668,11,685,7],[668,12,685,8],[669,8,686,4],[669,9,686,5],[669,10,686,6],[670,6,687,2],[671,4,687,3],[672,6,687,3,"key"],[672,9,687,3],[673,6,687,3,"value"],[673,11,687,3],[673,13,688,2],[673,22,688,2,"signInput"],[673,31,688,11,"signInput"],[673,32,688,12,"inputIndex"],[673,42,688,22],[673,44,688,24,"keyPair"],[673,51,688,31],[673,53,688,33,"sighashTypes"],[673,65,688,45],[673,67,688,47],[674,8,689,4],[674,12,689,8],[674,13,689,9,"keyPair"],[674,20,689,16],[674,24,689,20],[674,25,689,21,"keyPair"],[674,32,689,28],[674,33,689,29,"publicKey"],[674,42,689,38],[674,44,690,6],[674,50,690,12],[674,54,690,16,"Error"],[674,59,690,21],[674,60,690,22],[674,87,690,49],[674,88,690,50],[675,8,691,4],[675,12,691,10,"input"],[675,17,691,15],[675,20,691,18],[675,21,691,19],[675,22,691,20],[675,24,691,22,"_$$_REQUIRE"],[675,35,691,22],[675,36,691,22,"_dependencyMap"],[675,50,691,22],[675,66,691,31,"checkForInput"],[675,79,691,44],[675,81,691,46],[675,85,691,50],[675,86,691,51,"data"],[675,90,691,55],[675,91,691,56,"inputs"],[675,97,691,62],[675,99,691,64,"inputIndex"],[675,109,691,74],[675,110,691,75],[676,8,692,4],[676,12,692,8],[676,13,692,9],[676,14,692,10],[676,16,692,12,"_$$_REQUIRE"],[676,27,692,12],[676,28,692,12,"_dependencyMap"],[676,42,692,12],[676,69,692,24,"isTaprootInput"],[676,83,692,38],[676,85,692,40,"input"],[676,90,692,45],[676,91,692,46],[676,93,692,48],[677,10,693,6],[677,17,693,13],[677,21,693,17],[677,22,693,18,"_signTaprootInput"],[677,39,693,35],[677,40,694,8,"inputIndex"],[677,50,694,18],[677,52,695,8,"input"],[677,57,695,13],[677,59,696,8,"keyPair"],[677,66,696,15],[677,68,697,8,"undefined"],[677,77,697,17],[677,79,698,8,"sighashTypes"],[677,91,699,6],[677,92,699,7],[678,8,700,4],[679,8,701,4],[679,15,701,11],[679,19,701,15],[679,20,701,16,"_signInput"],[679,30,701,26],[679,31,701,27,"inputIndex"],[679,41,701,37],[679,43,701,39,"keyPair"],[679,50,701,46],[679,52,701,48,"sighashTypes"],[679,64,701,60],[679,65,701,61],[680,6,702,2],[681,4,702,3],[682,6,702,3,"key"],[682,9,702,3],[683,6,702,3,"value"],[683,11,702,3],[683,13,703,2],[683,22,703,2,"signTaprootInput"],[683,38,703,18,"signTaprootInput"],[683,39,703,19,"inputIndex"],[683,49,703,29],[683,51,703,31,"keyPair"],[683,58,703,38],[683,60,703,40,"tapLeafHashToSign"],[683,77,703,57],[683,79,703,59,"sighashTypes"],[683,91,703,71],[683,93,703,73],[684,8,704,4],[684,12,704,8],[684,13,704,9,"keyPair"],[684,20,704,16],[684,24,704,20],[684,25,704,21,"keyPair"],[684,32,704,28],[684,33,704,29,"publicKey"],[684,42,704,38],[684,44,705,6],[684,50,705,12],[684,54,705,16,"Error"],[684,59,705,21],[684,60,705,22],[684,87,705,49],[684,88,705,50],[685,8,706,4],[685,12,706,10,"input"],[685,17,706,15],[685,20,706,18],[685,21,706,19],[685,22,706,20],[685,24,706,22,"_$$_REQUIRE"],[685,35,706,22],[685,36,706,22,"_dependencyMap"],[685,50,706,22],[685,66,706,31,"checkForInput"],[685,79,706,44],[685,81,706,46],[685,85,706,50],[685,86,706,51,"data"],[685,90,706,55],[685,91,706,56,"inputs"],[685,97,706,62],[685,99,706,64,"inputIndex"],[685,109,706,74],[685,110,706,75],[686,8,707,4],[686,12,707,8],[686,13,707,9],[686,14,707,10],[686,16,707,12,"_$$_REQUIRE"],[686,27,707,12],[686,28,707,12,"_dependencyMap"],[686,42,707,12],[686,69,707,24,"isTaprootInput"],[686,83,707,38],[686,85,707,40,"input"],[686,90,707,45],[686,91,707,46],[686,93,708,6],[686,100,708,13],[686,104,708,17],[686,105,708,18,"_signTaprootInput"],[686,122,708,35],[686,123,709,8,"inputIndex"],[686,133,709,18],[686,135,710,8,"input"],[686,140,710,13],[686,142,711,8,"keyPair"],[686,149,711,15],[686,151,712,8,"tapLeafHashToSign"],[686,168,712,25],[686,170,713,8,"sighashTypes"],[686,182,714,6],[686,183,714,7],[687,8,715,4],[687,14,715,10],[687,18,715,14,"Error"],[687,23,715,19],[687,24,715,20],[687,34,715,30,"inputIndex"],[687,44,715,40],[687,70,715,66],[687,71,715,67],[688,6,716,2],[689,4,716,3],[690,6,716,3,"key"],[690,9,716,3],[691,6,716,3,"value"],[691,11,716,3],[691,13,717,2],[691,22,717,2,"_signInput"],[691,32,717,12,"_signInput"],[691,33,718,4,"inputIndex"],[691,43,718,14],[691,45,719,4,"keyPair"],[691,52,719,11],[691,54,721,4],[692,8,721,4],[692,12,720,4,"sighashTypes"],[692,24,720,16],[692,27,720,16,"arguments"],[692,36,720,16],[692,37,720,16,"length"],[692,43,720,16],[692,51,720,16,"arguments"],[692,60,720,16],[692,68,720,16,"undefined"],[692,77,720,16],[692,80,720,16,"arguments"],[692,89,720,16],[692,95,720,19],[692,96,720,20,"_$$_REQUIRE"],[692,107,720,20],[692,108,720,20,"_dependencyMap"],[692,122,720,20],[692,149,720,37,"Transaction"],[692,160,720,48],[692,161,720,49,"SIGHASH_ALL"],[692,172,720,60],[692,173,720,61],[693,8,722,4],[693,12,722,4,"_getHashAndSighashTyp"],[693,33,722,4],[693,36,722,34,"getHashAndSighashType"],[693,57,722,55],[693,58,723,6],[693,62,723,10],[693,63,723,11,"data"],[693,67,723,15],[693,68,723,16,"inputs"],[693,74,723,22],[693,76,724,6,"inputIndex"],[693,86,724,16],[693,88,725,6,"keyPair"],[693,95,725,13],[693,96,725,14,"publicKey"],[693,105,725,23],[693,107,726,6],[693,111,726,10],[693,112,726,11,"__CACHE"],[693,119,726,18],[693,121,727,6,"sighashTypes"],[693,133,728,4],[693,134,728,5],[694,10,722,12,"hash"],[694,14,722,16],[694,17,722,16,"_getHashAndSighashTyp"],[694,38,722,16],[694,39,722,12,"hash"],[694,43,722,16],[695,10,722,18,"sighashType"],[695,21,722,29],[695,24,722,29,"_getHashAndSighashTyp"],[695,45,722,29],[695,46,722,18,"sighashType"],[695,57,722,29],[696,8,729,4],[696,12,729,10,"partialSig"],[696,22,729,20],[696,25,729,23],[696,26,730,6],[697,10,731,8,"pubkey"],[697,16,731,14],[697,18,731,16,"keyPair"],[697,25,731,23],[697,26,731,24,"publicKey"],[697,35,731,33],[698,10,732,8,"signature"],[698,19,732,17],[698,21,732,19,"bscript"],[698,28,732,26],[698,29,732,27,"signature"],[698,38,732,36],[698,39,732,37,"encode"],[698,45,732,43],[698,46,732,44,"keyPair"],[698,53,732,51],[698,54,732,52,"sign"],[698,58,732,56],[698,59,732,57,"hash"],[698,63,732,61],[698,64,732,62],[698,66,732,64,"sighashType"],[698,77,732,75],[699,8,733,6],[699,9,733,7],[699,10,734,5],[700,8,735,4],[700,12,735,8],[700,13,735,9,"data"],[700,17,735,13],[700,18,735,14,"updateInput"],[700,29,735,25],[700,30,735,26,"inputIndex"],[700,40,735,36],[700,42,735,38],[701,10,735,40,"partialSig"],[701,20,735,50],[701,22,735,40,"partialSig"],[702,8,735,51],[702,9,735,52],[702,10,735,53],[703,8,736,4],[703,15,736,11],[703,19,736,15],[704,6,737,2],[705,4,737,3],[706,6,737,3,"key"],[706,9,737,3],[707,6,737,3,"value"],[707,11,737,3],[707,13,738,2],[707,22,738,2,"_signTaprootInput"],[707,39,738,19,"_signTaprootInput"],[707,40,739,4,"inputIndex"],[707,50,739,14],[707,52,740,4,"input"],[707,57,740,9],[707,59,741,4,"keyPair"],[707,66,741,11],[707,68,742,4,"tapLeafHashToSign"],[707,85,742,21],[707,87,744,4],[708,8,744,4],[708,12,743,4,"allowedSighashTypes"],[708,31,743,23],[708,34,743,23,"arguments"],[708,43,743,23],[708,44,743,23,"length"],[708,50,743,23],[708,58,743,23,"arguments"],[708,67,743,23],[708,75,743,23,"undefined"],[708,84,743,23],[708,87,743,23,"arguments"],[708,96,743,23],[708,102,743,26],[708,103,743,27,"_$$_REQUIRE"],[708,114,743,27],[708,115,743,27,"_dependencyMap"],[708,129,743,27],[708,156,743,44,"Transaction"],[708,167,743,55],[708,168,743,56,"SIGHASH_DEFAULT"],[708,183,743,71],[708,184,743,72],[709,8,745,4],[709,12,745,10,"hashesForSig"],[709,24,745,22],[709,27,745,25],[709,31,745,29],[709,32,745,30,"checkTaprootHashesForSig"],[709,56,745,54],[709,57,746,6,"inputIndex"],[709,67,746,16],[709,69,747,6,"input"],[709,74,747,11],[709,76,748,6,"keyPair"],[709,83,748,13],[709,85,749,6,"tapLeafHashToSign"],[709,102,749,23],[709,104,750,6,"allowedSighashTypes"],[709,123,751,4],[709,124,751,5],[710,8,752,4],[710,12,752,10,"tapKeySig"],[710,21,752,19],[710,24,752,22,"hashesForSig"],[710,36,752,34],[710,37,753,7,"filter"],[710,43,753,13],[710,44,753,14],[710,54,753,14,"h"],[710,55,753,15],[711,10,753,15],[711,17,753,19],[711,18,753,20,"h"],[711,19,753,21],[711,20,753,22,"leafHash"],[711,28,753,30],[712,8,753,30],[712,10,753,31],[712,11,754,7,"map"],[712,14,754,10],[712,15,754,11],[712,25,754,11,"h"],[712,26,754,12],[713,10,754,12],[713,17,755,8],[713,18,755,9],[713,19,755,10],[713,21,755,12,"_$$_REQUIRE"],[713,32,755,12],[713,33,755,12,"_dependencyMap"],[713,47,755,12],[713,74,755,24,"serializeTaprootSignature"],[713,99,755,49],[713,101,756,10,"keyPair"],[713,108,756,17],[713,109,756,18,"signSchnorr"],[713,120,756,29],[713,121,756,30,"h"],[713,122,756,31],[713,123,756,32,"hash"],[713,127,756,36],[713,128,756,37],[713,130,757,10,"input"],[713,135,757,15],[713,136,757,16,"sighashType"],[713,147,758,8],[713,148,758,9],[714,8,758,9],[714,9,759,6],[714,10,759,7],[714,11,759,8],[714,12,759,9],[714,13,759,10],[715,8,760,4],[715,12,760,10,"tapScriptSig"],[715,24,760,22],[715,27,760,25,"hashesForSig"],[715,39,760,37],[715,40,761,7,"filter"],[715,46,761,13],[715,47,761,14],[715,57,761,14,"h"],[715,58,761,15],[716,10,761,15],[716,17,761,19],[716,18,761,20],[716,19,761,21,"h"],[716,20,761,22],[716,21,761,23,"leafHash"],[716,29,761,31],[717,8,761,31],[717,10,761,32],[717,11,762,7,"map"],[717,14,762,10],[717,15,762,11],[717,25,762,11,"h"],[717,26,762,12],[718,10,762,12],[718,17,762,17],[719,12,763,8,"pubkey"],[719,18,763,14],[719,20,763,16],[719,21,763,17],[719,22,763,18],[719,24,763,20,"_$$_REQUIRE"],[719,35,763,20],[719,36,763,20,"_dependencyMap"],[719,50,763,20],[719,77,763,32,"toXOnly"],[719,84,763,39],[719,86,763,41,"keyPair"],[719,93,763,48],[719,94,763,49,"publicKey"],[719,103,763,58],[719,104,763,59],[720,12,764,8,"signature"],[720,21,764,17],[720,23,764,19],[720,24,764,20],[720,25,764,21],[720,27,764,23,"_$$_REQUIRE"],[720,38,764,23],[720,39,764,23,"_dependencyMap"],[720,53,764,23],[720,80,764,35,"serializeTaprootSignature"],[720,105,764,60],[720,107,765,10,"keyPair"],[720,114,765,17],[720,115,765,18,"signSchnorr"],[720,126,765,29],[720,127,765,30,"h"],[720,128,765,31],[720,129,765,32,"hash"],[720,133,765,36],[720,134,765,37],[720,136,766,10,"input"],[720,141,766,15],[720,142,766,16,"sighashType"],[720,153,767,8],[720,154,767,9],[721,12,768,8,"leafHash"],[721,20,768,16],[721,22,768,18,"h"],[721,23,768,19],[721,24,768,20,"leafHash"],[722,10,769,6],[722,11,769,7],[723,8,769,7],[723,9,769,8],[723,10,769,9],[724,8,770,4],[724,12,770,8,"tapKeySig"],[724,21,770,17],[724,23,770,19],[725,10,771,6],[725,14,771,10],[725,15,771,11,"data"],[725,19,771,15],[725,20,771,16,"updateInput"],[725,31,771,27],[725,32,771,28,"inputIndex"],[725,42,771,38],[725,44,771,40],[726,12,771,42,"tapKeySig"],[726,21,771,51],[726,23,771,42,"tapKeySig"],[727,10,771,52],[727,11,771,53],[727,12,771,54],[728,8,772,4],[729,8,773,4],[729,12,773,8,"tapScriptSig"],[729,24,773,20],[729,25,773,21,"length"],[729,31,773,27],[729,33,773,29],[730,10,774,6],[730,14,774,10],[730,15,774,11,"data"],[730,19,774,15],[730,20,774,16,"updateInput"],[730,31,774,27],[730,32,774,28,"inputIndex"],[730,42,774,38],[730,44,774,40],[731,12,774,42,"tapScriptSig"],[731,24,774,54],[731,26,774,42,"tapScriptSig"],[732,10,774,55],[732,11,774,56],[732,12,774,57],[733,8,775,4],[734,8,776,4],[734,15,776,11],[734,19,776,15],[735,6,777,2],[736,4,777,3],[737,6,777,3,"key"],[737,9,777,3],[738,6,777,3,"value"],[738,11,777,3],[738,13,778,2],[738,22,778,2,"signInputAsync"],[738,36,778,16,"signInputAsync"],[738,37,778,17,"inputIndex"],[738,47,778,27],[738,49,778,29,"keyPair"],[738,56,778,36],[738,58,778,38,"sighashTypes"],[738,70,778,50],[738,72,778,52],[739,8,778,52],[739,12,778,52,"_this0"],[739,18,778,52],[740,8,779,4],[740,15,779,11,"Promise"],[740,22,779,18],[740,23,779,19,"resolve"],[740,30,779,26],[740,31,779,27],[740,32,779,28],[740,33,779,29,"then"],[740,37,779,33],[740,38,779,34],[740,50,779,40],[741,10,780,6],[741,14,780,10],[741,15,780,11,"keyPair"],[741,22,780,18],[741,26,780,22],[741,27,780,23,"keyPair"],[741,34,780,30],[741,35,780,31,"publicKey"],[741,44,780,40],[741,46,781,8],[741,52,781,14],[741,56,781,18,"Error"],[741,61,781,23],[741,62,781,24],[741,89,781,51],[741,90,781,52],[742,10,782,6],[742,14,782,12,"input"],[742,19,782,17],[742,22,782,20],[742,23,782,21],[742,24,782,22],[742,26,782,24,"_$$_REQUIRE"],[742,37,782,24],[742,38,782,24,"_dependencyMap"],[742,52,782,24],[742,68,782,33,"checkForInput"],[742,81,782,46],[742,83,782,48,"_this0"],[742,89,782,52],[742,90,782,53,"data"],[742,94,782,57],[742,95,782,58,"inputs"],[742,101,782,64],[742,103,782,66,"inputIndex"],[742,113,782,76],[742,114,782,77],[743,10,783,6],[743,14,783,10],[743,15,783,11],[743,16,783,12],[743,18,783,14,"_$$_REQUIRE"],[743,29,783,14],[743,30,783,14,"_dependencyMap"],[743,44,783,14],[743,71,783,26,"isTaprootInput"],[743,85,783,40],[743,87,783,42,"input"],[743,92,783,47],[743,93,783,48],[743,95,784,8],[743,102,784,15,"_this0"],[743,108,784,19],[743,109,784,20,"_signTaprootInputAsync"],[743,131,784,42],[743,132,785,10,"inputIndex"],[743,142,785,20],[743,144,786,10,"input"],[743,149,786,15],[743,151,787,10,"keyPair"],[743,158,787,17],[743,160,788,10,"undefined"],[743,169,788,19],[743,171,789,10,"sighashTypes"],[743,183,790,8],[743,184,790,9],[744,10,791,6],[744,17,791,13,"_this0"],[744,23,791,17],[744,24,791,18,"_signInputAsync"],[744,39,791,33],[744,40,791,34,"inputIndex"],[744,50,791,44],[744,52,791,46,"keyPair"],[744,59,791,53],[744,61,791,55,"sighashTypes"],[744,73,791,67],[744,74,791,68],[745,8,792,4],[745,9,792,5],[745,10,792,6],[746,6,793,2],[747,4,793,3],[748,6,793,3,"key"],[748,9,793,3],[749,6,793,3,"value"],[749,11,793,3],[749,13,794,2],[749,22,794,2,"signTaprootInputAsync"],[749,43,794,23,"signTaprootInputAsync"],[749,44,794,24,"inputIndex"],[749,54,794,34],[749,56,794,36,"keyPair"],[749,63,794,43],[749,65,794,45,"tapLeafHash"],[749,76,794,56],[749,78,794,58,"sighashTypes"],[749,90,794,70],[749,92,794,72],[750,8,794,72],[750,12,794,72,"_this1"],[750,18,794,72],[751,8,795,4],[751,15,795,11,"Promise"],[751,22,795,18],[751,23,795,19,"resolve"],[751,30,795,26],[751,31,795,27],[751,32,795,28],[751,33,795,29,"then"],[751,37,795,33],[751,38,795,34],[751,50,795,40],[752,10,796,6],[752,14,796,10],[752,15,796,11,"keyPair"],[752,22,796,18],[752,26,796,22],[752,27,796,23,"keyPair"],[752,34,796,30],[752,35,796,31,"publicKey"],[752,44,796,40],[752,46,797,8],[752,52,797,14],[752,56,797,18,"Error"],[752,61,797,23],[752,62,797,24],[752,89,797,51],[752,90,797,52],[753,10,798,6],[753,14,798,12,"input"],[753,19,798,17],[753,22,798,20],[753,23,798,21],[753,24,798,22],[753,26,798,24,"_$$_REQUIRE"],[753,37,798,24],[753,38,798,24,"_dependencyMap"],[753,52,798,24],[753,68,798,33,"checkForInput"],[753,81,798,46],[753,83,798,48,"_this1"],[753,89,798,52],[753,90,798,53,"data"],[753,94,798,57],[753,95,798,58,"inputs"],[753,101,798,64],[753,103,798,66,"inputIndex"],[753,113,798,76],[753,114,798,77],[754,10,799,6],[754,14,799,10],[754,15,799,11],[754,16,799,12],[754,18,799,14,"_$$_REQUIRE"],[754,29,799,14],[754,30,799,14,"_dependencyMap"],[754,44,799,14],[754,71,799,26,"isTaprootInput"],[754,85,799,40],[754,87,799,42,"input"],[754,92,799,47],[754,93,799,48],[754,95,800,8],[754,102,800,15,"_this1"],[754,108,800,19],[754,109,800,20,"_signTaprootInputAsync"],[754,131,800,42],[754,132,801,10,"inputIndex"],[754,142,801,20],[754,144,802,10,"input"],[754,149,802,15],[754,151,803,10,"keyPair"],[754,158,803,17],[754,160,804,10,"tapLeafHash"],[754,171,804,21],[754,173,805,10,"sighashTypes"],[754,185,806,8],[754,186,806,9],[755,10,807,6],[755,16,807,12],[755,20,807,16,"Error"],[755,25,807,21],[755,26,807,22],[755,36,807,32,"inputIndex"],[755,46,807,42],[755,72,807,68],[755,73,807,69],[756,8,808,4],[756,9,808,5],[756,10,808,6],[757,6,809,2],[758,4,809,3],[759,6,809,3,"key"],[759,9,809,3],[760,6,809,3,"value"],[760,11,809,3],[760,13,810,2],[760,22,810,2,"_signInputAsync"],[760,37,810,17,"_signInputAsync"],[760,38,811,4,"inputIndex"],[760,48,811,14],[760,50,812,4,"keyPair"],[760,57,812,11],[760,59,814,4],[761,8,814,4],[761,12,814,4,"_this10"],[761,19,814,4],[762,8,814,4],[762,12,813,4,"sighashTypes"],[762,24,813,16],[762,27,813,16,"arguments"],[762,36,813,16],[762,37,813,16,"length"],[762,43,813,16],[762,51,813,16,"arguments"],[762,60,813,16],[762,68,813,16,"undefined"],[762,77,813,16],[762,80,813,16,"arguments"],[762,89,813,16],[762,95,813,19],[762,96,813,20,"_$$_REQUIRE"],[762,107,813,20],[762,108,813,20,"_dependencyMap"],[762,122,813,20],[762,149,813,37,"Transaction"],[762,160,813,48],[762,161,813,49,"SIGHASH_ALL"],[762,172,813,60],[762,173,813,61],[763,8,815,4],[763,12,815,4,"_getHashAndSighashTyp2"],[763,34,815,4],[763,37,815,34,"getHashAndSighashType"],[763,58,815,55],[763,59,816,6],[763,63,816,10],[763,64,816,11,"data"],[763,68,816,15],[763,69,816,16,"inputs"],[763,75,816,22],[763,77,817,6,"inputIndex"],[763,87,817,16],[763,89,818,6,"keyPair"],[763,96,818,13],[763,97,818,14,"publicKey"],[763,106,818,23],[763,108,819,6],[763,112,819,10],[763,113,819,11,"__CACHE"],[763,120,819,18],[763,122,820,6,"sighashTypes"],[763,134,821,4],[763,135,821,5],[764,10,815,12,"hash"],[764,14,815,16],[764,17,815,16,"_getHashAndSighashTyp2"],[764,39,815,16],[764,40,815,12,"hash"],[764,44,815,16],[765,10,815,18,"sighashType"],[765,21,815,29],[765,24,815,29,"_getHashAndSighashTyp2"],[765,46,815,29],[765,47,815,18,"sighashType"],[765,58,815,29],[766,8,822,4],[766,15,822,11,"Promise"],[766,22,822,18],[766,23,822,19,"resolve"],[766,30,822,26],[766,31,822,27,"keyPair"],[766,38,822,34],[766,39,822,35,"sign"],[766,43,822,39],[766,44,822,40,"hash"],[766,48,822,44],[766,49,822,45],[766,50,822,46],[766,51,822,47,"then"],[766,55,822,51],[766,56,822,52],[766,66,822,52,"signature"],[766,75,822,61],[766,77,822,65],[767,10,823,6],[767,14,823,12,"partialSig"],[767,24,823,22],[767,27,823,25],[767,28,824,8],[768,12,825,10,"pubkey"],[768,18,825,16],[768,20,825,18,"keyPair"],[768,27,825,25],[768,28,825,26,"publicKey"],[768,37,825,35],[769,12,826,10,"signature"],[769,21,826,19],[769,23,826,21,"bscript"],[769,30,826,28],[769,31,826,29,"signature"],[769,40,826,38],[769,41,826,39,"encode"],[769,47,826,45],[769,48,826,46,"signature"],[769,57,826,55],[769,59,826,57,"sighashType"],[769,70,826,68],[770,10,827,8],[770,11,827,9],[770,12,828,7],[771,10,829,6,"_this10"],[771,17,829,10],[771,18,829,11,"data"],[771,22,829,15],[771,23,829,16,"updateInput"],[771,34,829,27],[771,35,829,28,"inputIndex"],[771,45,829,38],[771,47,829,40],[772,12,829,42,"partialSig"],[772,22,829,52],[772,24,829,42,"partialSig"],[773,10,829,53],[773,11,829,54],[773,12,829,55],[774,8,830,4],[774,9,830,5],[774,10,830,6],[775,6,831,2],[776,4,831,3],[777,6,831,3,"key"],[777,9,831,3],[778,6,831,3,"value"],[778,11,831,3],[779,8,831,3],[779,12,831,3,"_signTaprootInputAsync2"],[779,35,831,3],[779,38,831,3,"_asyncToGenerator"],[779,55,831,3],[779,56,832,2],[779,67,833,4,"inputIndex"],[779,77,833,14],[779,79,834,4,"input"],[779,84,834,9],[779,86,835,4,"keyPair"],[779,93,835,11],[779,95,836,4,"tapLeafHash"],[779,106,836,15],[779,108,838,4],[780,10,838,4],[780,14,838,4,"_this11"],[780,21,838,4],[781,10,838,4],[781,14,837,4,"sighashTypes"],[781,26,837,16],[781,29,837,16,"arguments"],[781,38,837,16],[781,39,837,16,"length"],[781,45,837,16],[781,53,837,16,"arguments"],[781,62,837,16],[781,70,837,16,"undefined"],[781,79,837,16],[781,82,837,16,"arguments"],[781,91,837,16],[781,97,837,19],[781,98,837,20,"_$$_REQUIRE"],[781,109,837,20],[781,110,837,20,"_dependencyMap"],[781,124,837,20],[781,151,837,37,"Transaction"],[781,162,837,48],[781,163,837,49,"SIGHASH_DEFAULT"],[781,178,837,64],[781,179,837,65],[782,10,839,4],[782,14,839,10,"hashesForSig"],[782,26,839,22],[782,29,839,25],[782,33,839,29],[782,34,839,30,"checkTaprootHashesForSig"],[782,58,839,54],[782,59,840,6,"inputIndex"],[782,69,840,16],[782,71,841,6,"input"],[782,76,841,11],[782,78,842,6,"keyPair"],[782,85,842,13],[782,87,843,6,"tapLeafHash"],[782,98,843,17],[782,100,844,6,"sighashTypes"],[782,112,845,4],[782,113,845,5],[783,10,846,4],[783,14,846,10,"signaturePromises"],[783,31,846,27],[783,34,846,30],[783,36,846,32],[784,10,847,4],[784,14,847,10,"tapKeyHash"],[784,24,847,20],[784,27,847,23,"hashesForSig"],[784,39,847,35],[784,40,847,36,"filter"],[784,46,847,42],[784,47,847,43],[784,57,847,43,"h"],[784,58,847,44],[785,12,847,44],[785,19,847,48],[785,20,847,49,"h"],[785,21,847,50],[785,22,847,51,"leafHash"],[785,30,847,59],[786,10,847,59],[786,12,847,60],[786,13,847,61],[786,14,847,62],[786,15,847,63],[787,10,848,4],[787,14,848,8,"tapKeyHash"],[787,24,848,18],[787,26,848,20],[788,12,849,6],[788,16,849,12,"tapKeySigPromise"],[788,32,849,28],[788,35,849,31,"Promise"],[788,42,849,38],[788,43,849,39,"resolve"],[788,50,849,46],[788,51,850,8,"keyPair"],[788,58,850,15],[788,59,850,16,"signSchnorr"],[788,70,850,27],[788,71,850,28,"tapKeyHash"],[788,81,850,38],[788,82,850,39,"hash"],[788,86,850,43],[788,87,851,6],[788,88,851,7],[788,89,851,8,"then"],[788,93,851,12],[788,94,851,13],[788,104,851,13,"sig"],[788,107,851,16],[788,109,851,20],[789,14,852,8],[789,21,852,15],[790,16,853,10,"tapKeySig"],[790,25,853,19],[790,27,853,21],[790,28,853,22],[790,29,853,23],[790,31,853,25,"_$$_REQUIRE"],[790,42,853,25],[790,43,853,25,"_dependencyMap"],[790,57,853,25],[790,84,853,37,"serializeTaprootSignature"],[790,109,853,62],[790,111,854,12,"sig"],[790,114,854,15],[790,116,855,12,"input"],[790,121,855,17],[790,122,855,18,"sighashType"],[790,133,856,10],[791,14,857,8],[791,15,857,9],[792,12,858,6],[792,13,858,7],[792,14,858,8],[793,12,859,6,"signaturePromises"],[793,29,859,23],[793,30,859,24,"push"],[793,34,859,28],[793,35,859,29,"tapKeySigPromise"],[793,51,859,45],[793,52,859,46],[794,10,860,4],[795,10,861,4],[795,14,861,10,"tapScriptHashes"],[795,29,861,25],[795,32,861,28,"hashesForSig"],[795,44,861,40],[795,45,861,41,"filter"],[795,51,861,47],[795,52,861,48],[795,62,861,48,"h"],[795,63,861,49],[796,12,861,49],[796,19,861,53],[796,20,861,54],[796,21,861,55,"h"],[796,22,861,56],[796,23,861,57,"leafHash"],[796,31,861,65],[797,10,861,65],[797,12,861,66],[798,10,862,4],[798,14,862,8,"tapScriptHashes"],[798,29,862,23],[798,30,862,24,"length"],[798,36,862,30],[798,38,862,32],[799,12,863,6],[799,16,863,12,"tapScriptSigPromises"],[799,36,863,32],[799,39,863,35,"tapScriptHashes"],[799,54,863,50],[799,55,863,51,"map"],[799,58,863,54],[799,59,863,55],[799,69,863,55,"tsh"],[799,72,863,58],[799,74,863,62],[800,14,864,8],[800,21,864,15,"Promise"],[800,28,864,22],[800,29,864,23,"resolve"],[800,36,864,30],[800,37,864,31,"keyPair"],[800,44,864,38],[800,45,864,39,"signSchnorr"],[800,56,864,50],[800,57,864,51,"tsh"],[800,60,864,54],[800,61,864,55,"hash"],[800,65,864,59],[800,66,864,60],[800,67,864,61],[800,68,864,62,"then"],[800,72,864,66],[800,73,865,10],[800,83,865,10,"signature"],[800,92,865,19],[800,94,865,23],[801,16,866,12],[801,20,866,18,"tapScriptSig"],[801,32,866,30],[801,35,866,33],[801,36,867,14],[802,18,868,16,"pubkey"],[802,24,868,22],[802,26,868,24],[802,27,868,25],[802,28,868,26],[802,30,868,28,"_$$_REQUIRE"],[802,41,868,28],[802,42,868,28,"_dependencyMap"],[802,56,868,28],[802,83,868,40,"toXOnly"],[802,90,868,47],[802,92,868,49,"keyPair"],[802,99,868,56],[802,100,868,57,"publicKey"],[802,109,868,66],[802,110,868,67],[803,18,869,16,"signature"],[803,27,869,25],[803,29,869,27],[803,30,869,28],[803,31,869,29],[803,33,869,31,"_$$_REQUIRE"],[803,44,869,31],[803,45,869,31,"_dependencyMap"],[803,59,869,31],[803,86,869,43,"serializeTaprootSignature"],[803,111,869,68],[803,113,870,18,"signature"],[803,122,870,27],[803,124,871,18,"input"],[803,129,871,23],[803,130,871,24,"sighashType"],[803,141,872,16],[803,142,872,17],[804,18,873,16,"leafHash"],[804,26,873,24],[804,28,873,26,"tsh"],[804,31,873,29],[804,32,873,30,"leafHash"],[805,16,874,14],[805,17,874,15],[805,18,875,13],[806,16,876,12],[806,23,876,19],[807,18,876,21,"tapScriptSig"],[807,30,876,33],[807,32,876,21,"tapScriptSig"],[808,16,876,34],[808,17,876,35],[809,14,877,10],[809,15,878,8],[809,16,878,9],[810,12,879,6],[810,13,879,7],[810,14,879,8],[811,12,880,6,"signaturePromises"],[811,29,880,23],[811,30,880,24,"push"],[811,34,880,28],[811,35,880,28,"apply"],[811,40,880,28],[811,41,880,6,"signaturePromises"],[811,58,880,23],[811,60,880,23,"_toConsumableArray"],[811,78,880,23],[811,79,880,32,"tapScriptSigPromises"],[811,99,880,52],[811,101,880,53],[812,10,881,4],[813,10,882,4],[813,17,882,11,"Promise"],[813,24,882,18],[813,25,882,19,"all"],[813,28,882,22],[813,29,882,23,"signaturePromises"],[813,46,882,40],[813,47,882,41],[813,48,882,42,"then"],[813,52,882,46],[813,53,882,47],[813,63,882,47,"results"],[813,70,882,54],[813,72,882,58],[814,12,883,6,"results"],[814,19,883,13],[814,20,883,14,"forEach"],[814,27,883,21],[814,28,883,22],[814,38,883,22,"v"],[814,39,883,23],[815,14,883,23],[815,21,883,27,"_this11"],[815,28,883,31],[815,29,883,32,"data"],[815,33,883,36],[815,34,883,37,"updateInput"],[815,45,883,48],[815,46,883,49,"inputIndex"],[815,56,883,59],[815,58,883,61,"v"],[815,59,883,62],[815,60,883,63],[816,12,883,63],[816,14,883,64],[817,10,884,4],[817,11,884,5],[817,12,884,6],[818,8,885,2],[818,9,885,3],[819,8,885,3],[819,17,832,8,"_signTaprootInputAsync"],[819,39,832,30,"_signTaprootInputAsync"],[819,40,832,30,"_x"],[819,42,832,30],[819,44,832,30,"_x2"],[819,47,832,30],[819,49,832,30,"_x3"],[819,52,832,30],[819,54,832,30,"_x4"],[819,57,832,30],[820,10,832,30],[820,17,832,30,"_signTaprootInputAsync2"],[820,40,832,30],[820,41,832,30,"apply"],[820,46,832,30],[820,53,832,30,"arguments"],[820,62,832,30],[821,8,832,30],[822,8,832,30],[822,15,832,8,"_signTaprootInputAsync"],[822,37,832,30],[823,6,832,30],[824,4,832,30],[825,6,832,30,"key"],[825,9,832,30],[826,6,832,30,"value"],[826,11,832,30],[826,13,886,2],[826,22,886,2,"checkTaprootHashesForSig"],[826,46,886,26,"checkTaprootHashesForSig"],[826,47,887,4,"inputIndex"],[826,57,887,14],[826,59,888,4,"input"],[826,64,888,9],[826,66,889,4,"keyPair"],[826,73,889,11],[826,75,890,4,"tapLeafHashToSign"],[826,92,890,21],[826,94,891,4,"allowedSighashTypes"],[826,113,891,23],[826,115,892,4],[827,8,893,4],[827,12,893,8],[827,19,893,15,"keyPair"],[827,26,893,22],[827,27,893,23,"signSchnorr"],[827,38,893,34],[827,43,893,39],[827,53,893,49],[827,55,894,6],[827,61,894,12],[827,65,894,16,"Error"],[827,70,894,21],[827,71,895,8],[827,117,895,54,"inputIndex"],[827,127,895,64],[827,130,896,6],[827,131,896,7],[828,8,897,4],[828,12,897,10,"hashesForSig"],[828,24,897,22],[828,27,897,25,"getTaprootHashesForSig"],[828,49,897,47],[828,50,898,6,"inputIndex"],[828,60,898,16],[828,62,899,6,"input"],[828,67,899,11],[828,69,900,6],[828,73,900,10],[828,74,900,11,"data"],[828,78,900,15],[828,79,900,16,"inputs"],[828,85,900,22],[828,87,901,6,"keyPair"],[828,94,901,13],[828,95,901,14,"publicKey"],[828,104,901,23],[828,106,902,6],[828,110,902,10],[828,111,902,11,"__CACHE"],[828,118,902,18],[828,120,903,6,"tapLeafHashToSign"],[828,137,903,23],[828,139,904,6,"allowedSighashTypes"],[828,158,905,4],[828,159,905,5],[829,8,906,4],[829,12,906,8],[829,13,906,9,"hashesForSig"],[829,25,906,21],[829,29,906,25],[829,30,906,26,"hashesForSig"],[829,42,906,38],[829,43,906,39,"length"],[829,49,906,45],[829,51,907,6],[829,57,907,12],[829,61,907,16,"Error"],[829,66,907,21],[829,67,908,8],[829,94,908,35,"inputIndex"],[829,104,908,45],[829,121,908,62,"tools"],[829,126,908,67],[829,127,908,68,"toHex"],[829,132,908,73],[829,133,908,74,"keyPair"],[829,140,908,81],[829,141,908,82,"publicKey"],[829,150,908,91],[829,151,908,92],[829,153,909,6],[829,154,909,7],[830,8,910,4],[830,15,910,11,"hashesForSig"],[830,27,910,23],[831,6,911,2],[832,4,911,3],[833,6,911,3,"key"],[833,9,911,3],[834,6,911,3,"value"],[834,11,911,3],[834,13,912,2],[834,22,912,2,"toBuffer"],[834,30,912,10,"toBuffer"],[834,31,912,10],[834,33,912,13],[835,8,913,4,"checkCache"],[835,18,913,14],[835,19,913,15],[835,23,913,19],[835,24,913,20,"__CACHE"],[835,31,913,27],[835,32,913,28],[836,8,914,4],[836,15,914,11],[836,19,914,15],[836,20,914,16,"data"],[836,24,914,20],[836,25,914,21,"toBuffer"],[836,33,914,29],[836,34,914,30],[836,35,914,31],[837,6,915,2],[838,4,915,3],[839,6,915,3,"key"],[839,9,915,3],[840,6,915,3,"value"],[840,11,915,3],[840,13,916,2],[840,22,916,2,"toHex"],[840,27,916,7,"toHex"],[840,28,916,7],[840,30,916,10],[841,8,917,4,"checkCache"],[841,18,917,14],[841,19,917,15],[841,23,917,19],[841,24,917,20,"__CACHE"],[841,31,917,27],[841,32,917,28],[842,8,918,4],[842,15,918,11],[842,19,918,15],[842,20,918,16,"data"],[842,24,918,20],[842,25,918,21,"toHex"],[842,30,918,26],[842,31,918,27],[842,32,918,28],[843,6,919,2],[844,4,919,3],[845,6,919,3,"key"],[845,9,919,3],[846,6,919,3,"value"],[846,11,919,3],[846,13,920,2],[846,22,920,2,"toBase64"],[846,30,920,10,"toBase64"],[846,31,920,10],[846,33,920,13],[847,8,921,4,"checkCache"],[847,18,921,14],[847,19,921,15],[847,23,921,19],[847,24,921,20,"__CACHE"],[847,31,921,27],[847,32,921,28],[848,8,922,4],[848,15,922,11],[848,19,922,15],[848,20,922,16,"data"],[848,24,922,20],[848,25,922,21,"toBase64"],[848,33,922,29],[848,34,922,30],[848,35,922,31],[849,6,923,2],[850,4,923,3],[851,6,923,3,"key"],[851,9,923,3],[852,6,923,3,"value"],[852,11,923,3],[852,13,924,2],[852,22,924,2,"updateGlobal"],[852,34,924,14,"updateGlobal"],[852,35,924,15,"updateData"],[852,45,924,25],[852,47,924,27],[853,8,925,4],[853,12,925,8],[853,13,925,9,"data"],[853,17,925,13],[853,18,925,14,"updateGlobal"],[853,30,925,26],[853,31,925,27,"updateData"],[853,41,925,37],[853,42,925,38],[854,8,926,4],[854,15,926,11],[854,19,926,15],[855,6,927,2],[856,4,927,3],[857,6,927,3,"key"],[857,9,927,3],[858,6,927,3,"value"],[858,11,927,3],[858,13,928,2],[858,22,928,2,"updateInput"],[858,33,928,13,"updateInput"],[858,34,928,14,"inputIndex"],[858,44,928,24],[858,46,928,26,"updateData"],[858,56,928,36],[858,58,928,38],[859,8,929,4],[859,12,929,8,"updateData"],[859,22,929,18],[859,23,929,19,"witnessScript"],[859,36,929,32],[859,38,929,34,"checkInvalidP2WSH"],[859,55,929,51],[859,56,929,52,"updateData"],[859,66,929,62],[859,67,929,63,"witnessScript"],[859,80,929,76],[859,81,929,77],[860,8,930,4],[860,9,930,5],[860,10,930,6],[860,12,930,8,"_$$_REQUIRE"],[860,23,930,8],[860,24,930,8,"_dependencyMap"],[860,38,930,8],[860,65,930,20,"checkTaprootInputFields"],[860,88,930,43],[860,90,931,6],[860,94,931,10],[860,95,931,11,"data"],[860,99,931,15],[860,100,931,16,"inputs"],[860,106,931,22],[860,107,931,23,"inputIndex"],[860,117,931,33],[860,118,931,34],[860,120,932,6,"updateData"],[860,130,932,16],[860,132,933,6],[860,145,934,4],[860,146,934,5],[861,8,935,4],[861,12,935,8],[861,13,935,9,"data"],[861,17,935,13],[861,18,935,14,"updateInput"],[861,29,935,25],[861,30,935,26,"inputIndex"],[861,40,935,36],[861,42,935,38,"updateData"],[861,52,935,48],[861,53,935,49],[862,8,936,4],[862,12,936,8,"updateData"],[862,22,936,18],[862,23,936,19,"nonWitnessUtxo"],[862,37,936,33],[862,39,936,35],[863,10,937,6,"addNonWitnessTxCache"],[863,30,937,26],[863,31,938,8],[863,35,938,12],[863,36,938,13,"__CACHE"],[863,43,938,20],[863,45,939,8],[863,49,939,12],[863,50,939,13,"data"],[863,54,939,17],[863,55,939,18,"inputs"],[863,61,939,24],[863,62,939,25,"inputIndex"],[863,72,939,35],[863,73,939,36],[863,75,940,8,"inputIndex"],[863,85,941,6],[863,86,941,7],[864,8,942,4],[865,8,943,4],[865,15,943,11],[865,19,943,15],[866,6,944,2],[867,4,944,3],[868,6,944,3,"key"],[868,9,944,3],[869,6,944,3,"value"],[869,11,944,3],[869,13,945,2],[869,22,945,2,"updateOutput"],[869,34,945,14,"updateOutput"],[869,35,945,15,"outputIndex"],[869,46,945,26],[869,48,945,28,"updateData"],[869,58,945,38],[869,60,945,40],[870,8,946,4],[870,12,946,10,"outputData"],[870,22,946,20],[870,25,946,23],[870,29,946,27],[870,30,946,28,"data"],[870,34,946,32],[870,35,946,33,"outputs"],[870,42,946,40],[870,43,946,41,"outputIndex"],[870,54,946,52],[870,55,946,53],[871,8,947,4],[871,9,947,5],[871,10,947,6],[871,12,947,8,"_$$_REQUIRE"],[871,23,947,8],[871,24,947,8,"_dependencyMap"],[871,38,947,8],[871,65,947,20,"checkTaprootOutputFields"],[871,89,947,44],[871,91,948,6,"outputData"],[871,101,948,16],[871,103,949,6,"updateData"],[871,113,949,16],[871,115,950,6],[871,129,951,4],[871,130,951,5],[872,8,952,4],[872,12,952,8],[872,13,952,9,"data"],[872,17,952,13],[872,18,952,14,"updateOutput"],[872,30,952,26],[872,31,952,27,"outputIndex"],[872,42,952,38],[872,44,952,40,"updateData"],[872,54,952,50],[872,55,952,51],[873,8,953,4],[873,15,953,11],[873,19,953,15],[874,6,954,2],[875,4,954,3],[876,6,954,3,"key"],[876,9,954,3],[877,6,954,3,"value"],[877,11,954,3],[877,13,955,2],[877,22,955,2,"addUnknownKeyValToGlobal"],[877,46,955,26,"addUnknownKeyValToGlobal"],[877,47,955,27,"keyVal"],[877,53,955,33],[877,55,955,35],[878,8,956,4],[878,12,956,8],[878,13,956,9,"data"],[878,17,956,13],[878,18,956,14,"addUnknownKeyValToGlobal"],[878,42,956,38],[878,43,956,39,"keyVal"],[878,49,956,45],[878,50,956,46],[879,8,957,4],[879,15,957,11],[879,19,957,15],[880,6,958,2],[881,4,958,3],[882,6,958,3,"key"],[882,9,958,3],[883,6,958,3,"value"],[883,11,958,3],[883,13,959,2],[883,22,959,2,"addUnknownKeyValToInput"],[883,45,959,25,"addUnknownKeyValToInput"],[883,46,959,26,"inputIndex"],[883,56,959,36],[883,58,959,38,"keyVal"],[883,64,959,44],[883,66,959,46],[884,8,960,4],[884,12,960,8],[884,13,960,9,"data"],[884,17,960,13],[884,18,960,14,"addUnknownKeyValToInput"],[884,41,960,37],[884,42,960,38,"inputIndex"],[884,52,960,48],[884,54,960,50,"keyVal"],[884,60,960,56],[884,61,960,57],[885,8,961,4],[885,15,961,11],[885,19,961,15],[886,6,962,2],[887,4,962,3],[888,6,962,3,"key"],[888,9,962,3],[889,6,962,3,"value"],[889,11,962,3],[889,13,963,2],[889,22,963,2,"addUnknownKeyValToOutput"],[889,46,963,26,"addUnknownKeyValToOutput"],[889,47,963,27,"outputIndex"],[889,58,963,38],[889,60,963,40,"keyVal"],[889,66,963,46],[889,68,963,48],[890,8,964,4],[890,12,964,8],[890,13,964,9,"data"],[890,17,964,13],[890,18,964,14,"addUnknownKeyValToOutput"],[890,42,964,38],[890,43,964,39,"outputIndex"],[890,54,964,50],[890,56,964,52,"keyVal"],[890,62,964,58],[890,63,964,59],[891,8,965,4],[891,15,965,11],[891,19,965,15],[892,6,966,2],[893,4,966,3],[894,6,966,3,"key"],[894,9,966,3],[895,6,966,3,"value"],[895,11,966,3],[895,13,967,2],[895,22,967,2,"clearFinalizedInput"],[895,41,967,21,"clearFinalizedInput"],[895,42,967,22,"inputIndex"],[895,52,967,32],[895,54,967,34],[896,8,968,4],[896,12,968,8],[896,13,968,9,"data"],[896,17,968,13],[896,18,968,14,"clearFinalizedInput"],[896,37,968,33],[896,38,968,34,"inputIndex"],[896,48,968,44],[896,49,968,45],[897,8,969,4],[897,15,969,11],[897,19,969,15],[898,6,970,2],[899,4,970,3],[900,6,970,3,"key"],[900,9,970,3],[901,6,970,3,"value"],[901,11,970,3],[901,13,116,2],[901,22,116,9,"fromBase64"],[901,32,116,19,"fromBase64"],[901,33,116,20,"data"],[901,37,116,24],[901,39,116,37],[902,8,116,37],[902,12,116,26,"opts"],[902,16,116,30],[902,19,116,30,"arguments"],[902,28,116,30],[902,29,116,30,"length"],[902,35,116,30],[902,43,116,30,"arguments"],[902,52,116,30],[902,60,116,30,"undefined"],[902,69,116,30],[902,72,116,30,"arguments"],[902,81,116,30],[902,87,116,33],[902,88,116,34],[902,89,116,35],[903,8,117,4],[903,12,117,10,"buffer"],[903,18,117,16],[903,21,117,19,"tools"],[903,26,117,24],[903,27,117,25,"fromBase64"],[903,37,117,35],[903,38,117,36,"data"],[903,42,117,40],[903,43,117,41],[904,8,118,4],[904,15,118,11],[904,19,118,15],[904,20,118,16,"fromBuffer"],[904,30,118,26],[904,31,118,27,"buffer"],[904,37,118,33],[904,39,118,35,"opts"],[904,43,118,39],[904,44,118,40],[905,6,119,2],[906,4,119,3],[907,6,119,3,"key"],[907,9,119,3],[908,6,119,3,"value"],[908,11,119,3],[908,13,120,2],[908,22,120,9,"fromHex"],[908,29,120,16,"fromHex"],[908,30,120,17,"data"],[908,34,120,21],[908,36,120,34],[909,8,120,34],[909,12,120,23,"opts"],[909,16,120,27],[909,19,120,27,"arguments"],[909,28,120,27],[909,29,120,27,"length"],[909,35,120,27],[909,43,120,27,"arguments"],[909,52,120,27],[909,60,120,27,"undefined"],[909,69,120,27],[909,72,120,27,"arguments"],[909,81,120,27],[909,87,120,30],[909,88,120,31],[909,89,120,32],[910,8,121,4],[910,12,121,10,"buffer"],[910,18,121,16],[910,21,121,19,"tools"],[910,26,121,24],[910,27,121,25,"fromHex"],[910,34,121,32],[910,35,121,33,"data"],[910,39,121,37],[910,40,121,38],[911,8,122,4],[911,15,122,11],[911,19,122,15],[911,20,122,16,"fromBuffer"],[911,30,122,26],[911,31,122,27,"buffer"],[911,37,122,33],[911,39,122,35,"opts"],[911,43,122,39],[911,44,122,40],[912,6,123,2],[913,4,123,3],[914,6,123,3,"key"],[914,9,123,3],[915,6,123,3,"value"],[915,11,123,3],[915,13,124,2],[915,22,124,9,"fromBuffer"],[915,32,124,19,"fromBuffer"],[915,33,124,20,"buffer"],[915,39,124,26],[915,41,124,39],[916,8,124,39],[916,12,124,28,"opts"],[916,16,124,32],[916,19,124,32,"arguments"],[916,28,124,32],[916,29,124,32,"length"],[916,35,124,32],[916,43,124,32,"arguments"],[916,52,124,32],[916,60,124,32,"undefined"],[916,69,124,32],[916,72,124,32,"arguments"],[916,81,124,32],[916,87,124,35],[916,88,124,36],[916,89,124,37],[917,8,125,4],[917,12,125,10,"psbtBase"],[917,20,125,18],[917,23,125,21,"_$$_REQUIRE"],[917,34,125,21],[917,35,125,21,"_dependencyMap"],[917,49,125,21],[917,65,125,30,"Psbt"],[917,69,125,34],[917,70,125,35,"fromBuffer"],[917,80,125,45],[917,81,125,46,"buffer"],[917,87,125,52],[917,89,125,54,"transactionFromBuffer"],[917,110,125,75],[917,111,125,76],[918,8,126,4],[918,12,126,10,"psbt"],[918,16,126,14],[918,19,126,17],[918,23,126,21,"Psbt"],[918,27,126,25],[918,28,126,26,"opts"],[918,32,126,30],[918,34,126,32,"psbtBase"],[918,42,126,40],[918,43,126,41],[919,8,127,4,"checkTxForDupeIns"],[919,25,127,21],[919,26,127,22,"psbt"],[919,30,127,26],[919,31,127,27,"__CACHE"],[919,38,127,34],[919,39,127,35,"__TX"],[919,43,127,39],[919,45,127,41,"psbt"],[919,49,127,45],[919,50,127,46,"__CACHE"],[919,57,127,53],[919,58,127,54],[920,8,128,4],[920,15,128,11,"psbt"],[920,19,128,15],[921,6,129,2],[922,4,129,3],[923,2,129,3],[924,2,972,0,"exports"],[924,9,972,7],[924,10,972,8,"Psbt"],[924,14,972,12],[924,17,972,15,"Psbt"],[924,21,972,19],[925,2,973,0],[926,0,974,0],[927,0,975,0],[928,0,976,0],[929,0,977,0],[930,2,978,0],[930,6,978,6,"transactionFromBuffer"],[930,27,978,27],[930,30,978,30],[930,39,978,6,"transactionFromBuffer"],[930,60,978,27,"transactionFromBuffer"],[930,61,978,30,"buffer"],[930,67,978,36],[931,4,978,36],[931,11,978,40],[931,15,978,44,"PsbtTransaction"],[931,30,978,59],[931,31,978,60,"buffer"],[931,37,978,66],[931,38,978,67],[932,2,978,67],[933,2,979,0],[934,0,980,0],[935,0,981,0],[936,0,982,0],[937,2,979,0],[937,6,983,6,"PsbtTransaction"],[937,21,983,21],[938,4,985,2],[938,13,985,2,"PsbtTransaction"],[938,29,985,2],[938,31,985,72],[939,6,985,72],[939,10,985,14,"buffer"],[939,16,985,20],[939,19,985,20,"arguments"],[939,28,985,20],[939,29,985,20,"length"],[939,35,985,20],[939,43,985,20,"arguments"],[939,52,985,20],[939,60,985,20,"undefined"],[939,69,985,20],[939,72,985,20,"arguments"],[939,81,985,20],[939,87,985,23,"Uint8Array"],[939,97,985,33],[939,98,985,34,"from"],[939,102,985,38],[939,103,985,39],[939,104,985,40],[939,105,985,41],[939,107,985,43],[939,108,985,44],[939,110,985,46],[939,111,985,47],[939,113,985,49],[939,114,985,50],[939,116,985,52],[939,117,985,53],[939,119,985,55],[939,120,985,56],[939,122,985,58],[939,123,985,59],[939,125,985,61],[939,126,985,62],[939,128,985,64],[939,129,985,65],[939,131,985,67],[939,132,985,68],[939,133,985,69],[939,134,985,70],[940,6,985,70,"_classCallCheck"],[940,21,985,70],[940,28,985,70,"PsbtTransaction"],[940,43,985,70],[941,6,986,4],[941,10,986,8],[941,11,986,9,"tx"],[941,13,986,11],[941,16,986,14,"_$$_REQUIRE"],[941,27,986,14],[941,28,986,14,"_dependencyMap"],[941,42,986,14],[941,69,986,31,"Transaction"],[941,80,986,42],[941,81,986,43,"fromBuffer"],[941,91,986,53],[941,92,986,54,"buffer"],[941,98,986,60],[941,99,986,61],[942,6,987,4,"checkTxEmpty"],[942,18,987,16],[942,19,987,17],[942,23,987,21],[942,24,987,22,"tx"],[942,26,987,24],[942,27,987,25],[943,6,988,4,"Object"],[943,12,988,10],[943,13,988,11,"defineProperty"],[943,27,988,25],[943,28,988,26],[943,32,988,30],[943,34,988,32],[943,38,988,36],[943,40,988,38],[944,8,989,6,"enumerable"],[944,18,989,16],[944,20,989,18],[944,25,989,23],[945,8,990,6,"writable"],[945,16,990,14],[945,18,990,16],[946,6,991,4],[946,7,991,5],[946,8,991,6],[947,4,992,2],[948,4,992,3],[948,11,992,3,"_createClass"],[948,23,992,3],[948,24,992,3,"PsbtTransaction"],[948,39,992,3],[949,6,992,3,"key"],[949,9,992,3],[950,6,992,3,"value"],[950,11,992,3],[950,13,993,2],[950,22,993,2,"getInputOutputCounts"],[950,42,993,22,"getInputOutputCounts"],[950,43,993,22],[950,45,993,25],[951,8,994,4],[951,15,994,11],[952,10,995,6,"inputCount"],[952,20,995,16],[952,22,995,18],[952,26,995,22],[952,27,995,23,"tx"],[952,29,995,25],[952,30,995,26,"ins"],[952,33,995,29],[952,34,995,30,"length"],[952,40,995,36],[953,10,996,6,"outputCount"],[953,21,996,17],[953,23,996,19],[953,27,996,23],[953,28,996,24,"tx"],[953,30,996,26],[953,31,996,27,"outs"],[953,35,996,31],[953,36,996,32,"length"],[954,8,997,4],[954,9,997,5],[955,6,998,2],[956,4,998,3],[957,6,998,3,"key"],[957,9,998,3],[958,6,998,3,"value"],[958,11,998,3],[958,13,999,2],[958,22,999,2,"addInput"],[958,30,999,10,"addInput"],[958,31,999,11,"input"],[958,36,999,16],[958,38,999,18],[959,8,1000,4],[959,12,1001,6,"input"],[959,17,1001,11],[959,18,1001,12,"hash"],[959,22,1001,16],[959,27,1001,21,"undefined"],[959,36,1001,30],[959,40,1002,6,"input"],[959,45,1002,11],[959,46,1002,12,"index"],[959,51,1002,17],[959,56,1002,22,"undefined"],[959,65,1002,31],[959,69,1003,7],[959,71,1003,9,"input"],[959,76,1003,14],[959,77,1003,15,"hash"],[959,81,1003,19],[959,93,1003,31,"Uint8Array"],[959,103,1003,41],[959,104,1003,42],[959,108,1003,46],[959,115,1003,53,"input"],[959,120,1003,58],[959,121,1003,59,"hash"],[959,125,1003,63],[959,130,1003,68],[959,138,1003,77],[959,142,1004,6],[959,149,1004,13,"input"],[959,154,1004,18],[959,155,1004,19,"index"],[959,160,1004,24],[959,165,1004,29],[959,173,1004,37],[959,175,1005,6],[960,10,1006,6],[960,16,1006,12],[960,20,1006,16,"Error"],[960,25,1006,21],[960,26,1006,22],[960,47,1006,43],[960,48,1006,44],[961,8,1007,4],[962,8,1008,4],[962,12,1008,10,"hash"],[962,16,1008,14],[962,19,1009,6],[962,26,1009,13,"input"],[962,31,1009,18],[962,32,1009,19,"hash"],[962,36,1009,23],[962,41,1009,28],[962,49,1009,36],[962,52,1010,10],[962,53,1010,11],[962,54,1010,12],[962,56,1010,14,"_$$_REQUIRE"],[962,67,1010,14],[962,68,1010,14,"_dependencyMap"],[962,82,1010,14],[962,109,1010,31,"reverseBuffer"],[962,122,1010,44],[962,124,1010,46,"tools"],[962,129,1010,51],[962,130,1010,52,"fromHex"],[962,137,1010,59],[962,138,1010,60,"input"],[962,143,1010,65],[962,144,1010,66,"hash"],[962,148,1010,70],[962,149,1010,71],[962,150,1010,72],[962,153,1011,10,"input"],[962,158,1011,15],[962,159,1011,16,"hash"],[962,163,1011,20],[963,8,1012,4],[963,12,1012,8],[963,13,1012,9,"tx"],[963,15,1012,11],[963,16,1012,12,"addInput"],[963,24,1012,20],[963,25,1012,21,"hash"],[963,29,1012,25],[963,31,1012,27,"input"],[963,36,1012,32],[963,37,1012,33,"index"],[963,42,1012,38],[963,44,1012,40,"input"],[963,49,1012,45],[963,50,1012,46,"sequence"],[963,58,1012,54],[963,59,1012,55],[964,6,1013,2],[965,4,1013,3],[966,6,1013,3,"key"],[966,9,1013,3],[967,6,1013,3,"value"],[967,11,1013,3],[967,13,1014,2],[967,22,1014,2,"addOutput"],[967,31,1014,11,"addOutput"],[967,32,1014,12,"output"],[967,38,1014,18],[967,40,1014,20],[968,8,1015,4],[968,12,1016,6,"output"],[968,18,1016,12],[968,19,1016,13,"script"],[968,25,1016,19],[968,30,1016,24,"undefined"],[968,39,1016,33],[968,43,1017,6,"output"],[968,49,1017,12],[968,50,1017,13,"value"],[968,55,1017,18],[968,60,1017,23,"undefined"],[968,69,1017,32],[968,73,1018,6],[968,75,1018,8,"output"],[968,81,1018,14],[968,82,1018,15,"script"],[968,88,1018,21],[968,100,1018,33,"Uint8Array"],[968,110,1018,43],[968,111,1018,44],[968,115,1019,6],[968,122,1019,13,"output"],[968,128,1019,19],[968,129,1019,20,"value"],[968,134,1019,25],[968,139,1019,30],[968,147,1019,38],[968,149,1020,6],[969,10,1021,6],[969,16,1021,12],[969,20,1021,16,"Error"],[969,25,1021,21],[969,26,1021,22],[969,48,1021,44],[969,49,1021,45],[970,8,1022,4],[971,8,1023,4],[971,12,1023,8],[971,13,1023,9,"tx"],[971,15,1023,11],[971,16,1023,12,"addOutput"],[971,25,1023,21],[971,26,1023,22,"output"],[971,32,1023,28],[971,33,1023,29,"script"],[971,39,1023,35],[971,41,1023,37,"output"],[971,47,1023,43],[971,48,1023,44,"value"],[971,53,1023,49],[971,54,1023,50],[972,6,1024,2],[973,4,1024,3],[974,6,1024,3,"key"],[974,9,1024,3],[975,6,1024,3,"value"],[975,11,1024,3],[975,13,1025,2],[975,22,1025,2,"toBuffer"],[975,30,1025,10,"toBuffer"],[975,31,1025,10],[975,33,1025,13],[976,8,1026,4],[976,15,1026,11],[976,19,1026,15],[976,20,1026,16,"tx"],[976,22,1026,18],[976,23,1026,19,"toBuffer"],[976,31,1026,27],[976,32,1026,28],[976,33,1026,29],[977,6,1027,2],[978,4,1027,3],[979,2,1027,3],[980,2,1029,0],[980,11,1029,9,"canFinalize"],[980,22,1029,20,"canFinalize"],[980,23,1029,21,"input"],[980,28,1029,26],[980,30,1029,28,"script"],[980,36,1029,34],[980,38,1029,36,"scriptType"],[980,48,1029,46],[980,50,1029,48],[981,4,1030,2],[981,12,1030,10,"scriptType"],[981,22,1030,20],[982,6,1031,4],[982,11,1031,9],[982,19,1031,17],[983,6,1032,4],[983,11,1032,9],[983,23,1032,21],[984,6,1033,4],[984,11,1033,9],[984,30,1033,28],[985,8,1034,6],[985,15,1034,13,"hasSigs"],[985,22,1034,20],[985,23,1034,21],[985,24,1034,22],[985,26,1034,24,"input"],[985,31,1034,29],[985,32,1034,30,"partialSig"],[985,42,1034,40],[985,43,1034,41],[986,6,1035,4],[986,11,1035,9],[986,21,1035,19],[987,8,1036,6],[987,12,1036,12,"p2ms"],[987,16,1036,16],[987,19,1036,19,"payments"],[987,27,1036,27],[987,28,1036,28,"p2ms"],[987,32,1036,32],[987,33,1036,33],[988,10,1036,35,"output"],[988,16,1036,41],[988,18,1036,43,"script"],[989,8,1036,50],[989,9,1036,51],[989,10,1036,52],[990,8,1037,6],[990,15,1037,13,"hasSigs"],[990,22,1037,20],[990,23,1037,21,"p2ms"],[990,27,1037,25],[990,28,1037,26,"m"],[990,29,1037,27],[990,31,1037,29,"input"],[990,36,1037,34],[990,37,1037,35,"partialSig"],[990,47,1037,45],[990,49,1037,47,"p2ms"],[990,53,1037,51],[990,54,1037,52,"pubkeys"],[990,61,1037,59],[990,62,1037,60],[991,6,1038,4],[992,8,1039,6],[992,15,1039,13],[992,20,1039,18],[993,4,1040,2],[994,2,1041,0],[995,2,1042,0],[995,11,1042,9,"checkCache"],[995,21,1042,19,"checkCache"],[995,22,1042,20,"cache"],[995,27,1042,25],[995,29,1042,27],[996,4,1043,2],[996,8,1043,6,"cache"],[996,13,1043,11],[996,14,1043,12,"__UNSAFE_SIGN_NONSEGWIT"],[996,37,1043,35],[996,42,1043,40],[996,47,1043,45],[996,49,1043,47],[997,6,1044,4],[997,12,1044,10],[997,16,1044,14,"Error"],[997,21,1044,19],[997,22,1044,20],[997,60,1044,58],[997,61,1044,59],[998,4,1045,2],[999,2,1046,0],[1000,2,1047,0],[1000,11,1047,9,"hasSigs"],[1000,18,1047,16,"hasSigs"],[1000,19,1047,17,"neededSigs"],[1000,29,1047,27],[1000,31,1047,29,"partialSig"],[1000,41,1047,39],[1000,43,1047,41,"pubkeys"],[1000,50,1047,48],[1000,52,1047,50],[1001,4,1048,2],[1001,8,1048,6],[1001,9,1048,7,"partialSig"],[1001,19,1048,17],[1001,21,1048,19],[1001,28,1048,26],[1001,33,1048,31],[1002,4,1049,2],[1002,8,1049,6,"sigs"],[1002,12,1049,10],[1003,4,1050,2],[1003,8,1050,6,"pubkeys"],[1003,15,1050,13],[1003,17,1050,15],[1004,6,1051,4,"sigs"],[1004,10,1051,8],[1004,13,1051,11,"pubkeys"],[1004,20,1051,18],[1004,21,1052,7,"map"],[1004,24,1052,10],[1004,25,1052,11],[1004,35,1052,11,"pkey"],[1004,39,1052,15],[1004,41,1052,19],[1005,8,1053,8],[1005,12,1053,14,"pubkey"],[1005,18,1053,20],[1005,21,1053,23,"compressPubkey"],[1005,35,1053,37],[1005,36,1053,38,"pkey"],[1005,40,1053,42],[1005,41,1053,43],[1006,8,1054,8],[1006,15,1054,15,"partialSig"],[1006,25,1054,25],[1006,26,1054,26,"find"],[1006,30,1054,30],[1006,31,1055,10],[1006,41,1055,10,"pSig"],[1006,45,1055,14],[1007,10,1055,14],[1007,17,1055,18,"tools"],[1007,22,1055,23],[1007,23,1055,24,"compare"],[1007,30,1055,31],[1007,31,1055,32,"pSig"],[1007,35,1055,36],[1007,36,1055,37,"pubkey"],[1007,42,1055,43],[1007,44,1055,45,"pubkey"],[1007,50,1055,51],[1007,51,1055,52],[1007,56,1055,57],[1007,57,1055,58],[1008,8,1055,58],[1008,9,1056,8],[1008,10,1056,9],[1009,6,1057,6],[1009,7,1057,7],[1009,8,1057,8],[1009,9,1058,7,"filter"],[1009,15,1058,13],[1009,16,1058,14],[1009,26,1058,14,"v"],[1009,27,1058,15],[1010,8,1058,15],[1010,15,1058,19],[1010,16,1058,20],[1010,17,1058,21,"v"],[1010,18,1058,22],[1011,6,1058,22],[1011,8,1058,23],[1012,4,1059,2],[1012,5,1059,3],[1012,11,1059,9],[1013,6,1060,4,"sigs"],[1013,10,1060,8],[1013,13,1060,11,"partialSig"],[1013,23,1060,21],[1014,4,1061,2],[1015,4,1062,2],[1015,8,1062,6,"sigs"],[1015,12,1062,10],[1015,13,1062,11,"length"],[1015,19,1062,17],[1015,22,1062,20,"neededSigs"],[1015,32,1062,30],[1015,34,1062,32],[1015,40,1062,38],[1015,44,1062,42,"Error"],[1015,49,1062,47],[1015,50,1062,48],[1015,71,1062,69],[1015,72,1062,70],[1016,4,1063,2],[1016,11,1063,9,"sigs"],[1016,15,1063,13],[1016,16,1063,14,"length"],[1016,22,1063,20],[1016,27,1063,25,"neededSigs"],[1016,37,1063,35],[1017,2,1064,0],[1018,2,1065,0],[1018,11,1065,9,"isFinalized"],[1018,22,1065,20,"isFinalized"],[1018,23,1065,21,"input"],[1018,28,1065,26],[1018,30,1065,28],[1019,4,1066,2],[1019,11,1066,9],[1019,12,1066,10],[1019,13,1066,11,"input"],[1019,18,1066,16],[1019,19,1066,17,"finalScriptSig"],[1019,33,1066,31],[1019,37,1066,35],[1019,38,1066,36],[1019,39,1066,37,"input"],[1019,44,1066,42],[1019,45,1066,43,"finalScriptWitness"],[1019,63,1066,61],[1020,2,1067,0],[1021,2,1068,0],[1021,11,1068,9,"bip32DerivationIsMine"],[1021,32,1068,30,"bip32DerivationIsMine"],[1021,33,1068,31,"root"],[1021,37,1068,35],[1021,39,1068,37],[1022,4,1069,2],[1022,11,1069,9],[1022,21,1069,9,"d"],[1022,22,1069,10],[1022,24,1069,14],[1023,6,1070,4],[1023,10,1070,8,"tools"],[1023,15,1070,13],[1023,16,1070,14,"compare"],[1023,23,1070,21],[1023,24,1070,22,"root"],[1023,28,1070,26],[1023,29,1070,27,"fingerprint"],[1023,40,1070,38],[1023,42,1070,40,"d"],[1023,43,1070,41],[1023,44,1070,42,"masterFingerprint"],[1023,61,1070,59],[1023,62,1070,60],[1023,64,1070,62],[1023,71,1070,69],[1023,76,1070,74],[1024,6,1071,4],[1024,10,1071,8,"tools"],[1024,15,1071,13],[1024,16,1071,14,"compare"],[1024,23,1071,21],[1024,24,1071,22,"root"],[1024,28,1071,26],[1024,29,1071,27,"derivePath"],[1024,39,1071,37],[1024,40,1071,38,"d"],[1024,41,1071,39],[1024,42,1071,40,"path"],[1024,46,1071,44],[1024,47,1071,45],[1024,48,1071,46,"publicKey"],[1024,57,1071,55],[1024,59,1071,57,"d"],[1024,60,1071,58],[1024,61,1071,59,"pubkey"],[1024,67,1071,65],[1024,68,1071,66],[1024,70,1072,6],[1024,77,1072,13],[1024,82,1072,18],[1025,6,1073,4],[1025,13,1073,11],[1025,17,1073,15],[1026,4,1074,2],[1026,5,1074,3],[1027,2,1075,0],[1028,2,1076,0],[1028,11,1076,9,"check32Bit"],[1028,21,1076,19,"check32Bit"],[1028,22,1076,20,"num"],[1028,25,1076,23],[1028,27,1076,25],[1029,4,1077,2],[1029,8,1078,4],[1029,15,1078,11,"num"],[1029,18,1078,14],[1029,23,1078,19],[1029,31,1078,27],[1029,35,1079,4,"num"],[1029,38,1079,7],[1029,43,1079,12,"Math"],[1029,47,1079,16],[1029,48,1079,17,"floor"],[1029,53,1079,22],[1029,54,1079,23,"num"],[1029,57,1079,26],[1029,58,1079,27],[1029,62,1080,4,"num"],[1029,65,1080,7],[1029,68,1080,10],[1029,78,1080,20],[1029,82,1081,4,"num"],[1029,85,1081,7],[1029,88,1081,10],[1029,89,1081,11],[1029,91,1082,4],[1030,6,1083,4],[1030,12,1083,10],[1030,16,1083,14,"Error"],[1030,21,1083,19],[1030,22,1083,20],[1030,46,1083,44],[1030,47,1083,45],[1031,4,1084,2],[1032,2,1085,0],[1033,2,1086,0],[1033,11,1086,9,"checkFees"],[1033,20,1086,18,"checkFees"],[1033,21,1086,19,"psbt"],[1033,25,1086,23],[1033,27,1086,25,"cache"],[1033,32,1086,30],[1033,34,1086,32,"opts"],[1033,38,1086,36],[1033,40,1086,38],[1034,4,1087,2],[1034,8,1087,8,"feeRate"],[1034,15,1087,15],[1034,18,1087,18,"cache"],[1034,23,1087,23],[1034,24,1087,24,"__FEE_RATE"],[1034,34,1087,34],[1034,38,1087,38,"psbt"],[1034,42,1087,42],[1034,43,1087,43,"getFeeRate"],[1034,53,1087,53],[1034,54,1087,54],[1034,55,1087,55],[1035,4,1088,2],[1035,8,1088,8,"vsize"],[1035,13,1088,13],[1035,16,1088,16,"cache"],[1035,21,1088,21],[1035,22,1088,22,"__EXTRACTED_TX"],[1035,36,1088,36],[1035,37,1088,37,"virtualSize"],[1035,48,1088,48],[1035,49,1088,49],[1035,50,1088,50],[1036,4,1089,2],[1036,8,1089,8,"satoshis"],[1036,16,1089,16],[1036,19,1089,19,"feeRate"],[1036,26,1089,26],[1036,29,1089,29,"vsize"],[1036,34,1089,34],[1037,4,1090,2],[1037,8,1090,6,"feeRate"],[1037,15,1090,13],[1037,19,1090,17,"opts"],[1037,23,1090,21],[1037,24,1090,22,"maximumFeeRate"],[1037,38,1090,36],[1037,40,1090,38],[1038,6,1091,4],[1038,12,1091,10],[1038,16,1091,14,"Error"],[1038,21,1091,19],[1038,22,1092,6],[1038,56,1092,40],[1038,57,1092,41,"satoshis"],[1038,65,1092,49],[1038,68,1092,52],[1038,71,1092,55],[1038,73,1092,57,"toFixed"],[1038,80,1092,64],[1038,81,1092,65],[1038,82,1092,66],[1038,83,1092,67],[1038,89,1092,73],[1038,92,1093,8],[1038,110,1093,26,"feeRate"],[1038,117,1093,33],[1038,155,1093,71],[1038,158,1094,8],[1038,177,1094,27,"vsize"],[1038,182,1094,32],[1038,224,1094,74],[1038,227,1095,8],[1038,293,1095,74],[1038,296,1096,8],[1038,347,1097,4],[1038,348,1097,5],[1039,4,1098,2],[1040,2,1099,0],[1041,2,1100,0],[1041,11,1100,9,"checkInputsForPartialSig"],[1041,35,1100,33,"checkInputsForPartialSig"],[1041,36,1100,34,"inputs"],[1041,42,1100,40],[1041,44,1100,42,"action"],[1041,50,1100,48],[1041,52,1100,50],[1042,4,1101,2,"inputs"],[1042,10,1101,8],[1042,11,1101,9,"forEach"],[1042,18,1101,16],[1042,19,1101,17],[1042,29,1101,17,"input"],[1042,34,1101,22],[1042,36,1101,26],[1043,6,1102,4],[1043,10,1102,10,"throws"],[1043,16,1102,16],[1043,19,1102,19],[1043,20,1102,20],[1043,21,1102,21],[1043,23,1102,23,"_$$_REQUIRE"],[1043,34,1102,23],[1043,35,1102,23,"_dependencyMap"],[1043,49,1102,23],[1043,76,1102,35,"isTaprootInput"],[1043,90,1102,49],[1043,92,1102,51,"input"],[1043,97,1102,56],[1043,98,1102,57],[1043,101,1103,8],[1043,102,1103,9],[1043,103,1103,10],[1043,105,1103,12,"_$$_REQUIRE"],[1043,116,1103,12],[1043,117,1103,12,"_dependencyMap"],[1043,131,1103,12],[1043,158,1103,24,"checkTaprootInputForSigs"],[1043,182,1103,48],[1043,184,1103,50,"input"],[1043,189,1103,55],[1043,191,1103,57,"action"],[1043,197,1103,63],[1043,198,1103,64],[1043,201,1104,8],[1043,202,1104,9],[1043,203,1104,10],[1043,205,1104,12,"_$$_REQUIRE"],[1043,216,1104,12],[1043,217,1104,12,"_dependencyMap"],[1043,231,1104,12],[1043,261,1104,27,"checkInputForSig"],[1043,277,1104,43],[1043,279,1104,45,"input"],[1043,284,1104,50],[1043,286,1104,52,"action"],[1043,292,1104,58],[1043,293,1104,59],[1044,6,1105,4],[1044,10,1105,8,"throws"],[1044,16,1105,14],[1044,18,1106,6],[1044,24,1106,12],[1044,28,1106,16,"Error"],[1044,33,1106,21],[1044,34,1106,22],[1044,81,1106,69],[1044,82,1106,70],[1045,4,1107,2],[1045,5,1107,3],[1045,6,1107,4],[1046,2,1108,0],[1047,2,1109,0],[1047,11,1109,9,"checkPartialSigSighashes"],[1047,35,1109,33,"checkPartialSigSighashes"],[1047,36,1109,34,"input"],[1047,41,1109,39],[1047,43,1109,41],[1048,4,1110,2],[1048,8,1110,6],[1048,9,1110,7,"input"],[1048,14,1110,12],[1048,15,1110,13,"sighashType"],[1048,26,1110,24],[1048,30,1110,28],[1048,31,1110,29,"input"],[1048,36,1110,34],[1048,37,1110,35,"partialSig"],[1048,47,1110,45],[1048,49,1110,47],[1049,4,1111,2],[1049,8,1111,10,"partialSig"],[1049,18,1111,20],[1049,21,1111,38,"input"],[1049,26,1111,43],[1049,27,1111,10,"partialSig"],[1049,37,1111,20],[1050,6,1111,22,"sighashType"],[1050,17,1111,33],[1050,20,1111,38,"input"],[1050,25,1111,43],[1050,26,1111,22,"sighashType"],[1050,37,1111,33],[1051,4,1112,2,"partialSig"],[1051,14,1112,12],[1051,15,1112,13,"forEach"],[1051,22,1112,20],[1051,23,1112,21],[1051,33,1112,21,"pSig"],[1051,37,1112,25],[1051,39,1112,29],[1052,6,1113,4],[1052,10,1113,4,"_bscript$signature$de"],[1052,31,1113,4],[1052,34,1113,25,"bscript"],[1052,41,1113,32],[1052,42,1113,33,"signature"],[1052,51,1113,42],[1052,52,1113,43,"decode"],[1052,58,1113,49],[1052,59,1113,50,"pSig"],[1052,63,1113,54],[1052,64,1113,55,"signature"],[1052,73,1113,64],[1052,74,1113,65],[1053,8,1113,12,"hashType"],[1053,16,1113,20],[1053,19,1113,20,"_bscript$signature$de"],[1053,40,1113,20],[1053,41,1113,12,"hashType"],[1053,49,1113,20],[1054,6,1114,4],[1054,10,1114,8,"sighashType"],[1054,21,1114,19],[1054,26,1114,24,"hashType"],[1054,34,1114,32],[1054,36,1114,34],[1055,8,1115,6],[1055,14,1115,12],[1055,18,1115,16,"Error"],[1055,23,1115,21],[1055,24,1115,22],[1055,77,1115,75],[1055,78,1115,76],[1056,6,1116,4],[1057,4,1117,2],[1057,5,1117,3],[1057,6,1117,4],[1058,2,1118,0],[1059,2,1119,0],[1059,11,1119,9,"checkScriptForPubkey"],[1059,31,1119,29,"checkScriptForPubkey"],[1059,32,1119,30,"pubkey"],[1059,38,1119,36],[1059,40,1119,38,"script"],[1059,46,1119,44],[1059,48,1119,46,"action"],[1059,54,1119,52],[1059,56,1119,54],[1060,4,1120,2],[1060,8,1120,6],[1060,9,1120,7],[1060,10,1120,8],[1060,11,1120,9],[1060,13,1120,11,"_$$_REQUIRE"],[1060,24,1120,11],[1060,25,1120,11,"_dependencyMap"],[1060,39,1120,11],[1060,69,1120,26,"pubkeyInScript"],[1060,83,1120,40],[1060,85,1120,42,"pubkey"],[1060,91,1120,48],[1060,93,1120,50,"script"],[1060,99,1120,56],[1060,100,1120,57],[1060,102,1120,59],[1061,6,1121,4],[1061,12,1121,10],[1061,16,1121,14,"Error"],[1061,21,1121,19],[1061,22,1122,6],[1061,33,1122,17,"action"],[1061,39,1122,23],[1061,71,1122,55,"tools"],[1061,76,1122,60],[1061,77,1122,61,"toHex"],[1061,82,1122,66],[1061,83,1122,67,"pubkey"],[1061,89,1122,73],[1061,90,1122,74],[1061,92,1123,4],[1061,93,1123,5],[1062,4,1124,2],[1063,2,1125,0],[1064,2,1126,0],[1064,11,1126,9,"checkTxEmpty"],[1064,23,1126,21,"checkTxEmpty"],[1064,24,1126,22,"tx"],[1064,26,1126,24],[1064,28,1126,26],[1065,4,1127,2],[1065,8,1127,8,"isEmpty"],[1065,15,1127,15],[1065,18,1127,18,"tx"],[1065,20,1127,20],[1065,21,1127,21,"ins"],[1065,24,1127,24],[1065,25,1127,25,"every"],[1065,30,1127,30],[1065,31,1128,4],[1065,41,1128,4,"input"],[1065,46,1128,9],[1066,6,1128,9],[1066,13,1129,6,"input"],[1066,18,1129,11],[1066,19,1129,12,"script"],[1066,25,1129,18],[1066,29,1130,6,"input"],[1066,34,1130,11],[1066,35,1130,12,"script"],[1066,41,1130,18],[1066,42,1130,19,"length"],[1066,48,1130,25],[1066,53,1130,30],[1066,54,1130,31],[1066,58,1131,6,"input"],[1066,63,1131,11],[1066,64,1131,12,"witness"],[1066,71,1131,19],[1066,75,1132,6,"input"],[1066,80,1132,11],[1066,81,1132,12,"witness"],[1066,88,1132,19],[1066,89,1132,20,"length"],[1066,95,1132,26],[1066,100,1132,31],[1066,101,1132,32],[1067,4,1132,32],[1067,5,1133,2],[1067,6,1133,3],[1068,4,1134,2],[1068,8,1134,6],[1068,9,1134,7,"isEmpty"],[1068,16,1134,14],[1068,18,1134,16],[1069,6,1135,4],[1069,12,1135,10],[1069,16,1135,14,"Error"],[1069,21,1135,19],[1069,22,1135,20],[1069,74,1135,72],[1069,75,1135,73],[1070,4,1136,2],[1071,2,1137,0],[1072,2,1138,0],[1072,11,1138,9,"checkTxForDupeIns"],[1072,28,1138,26,"checkTxForDupeIns"],[1072,29,1138,27,"tx"],[1072,31,1138,29],[1072,33,1138,31,"cache"],[1072,38,1138,36],[1072,40,1138,38],[1073,4,1139,2,"tx"],[1073,6,1139,4],[1073,7,1139,5,"ins"],[1073,10,1139,8],[1073,11,1139,9,"forEach"],[1073,18,1139,16],[1073,19,1139,17],[1073,29,1139,17,"input"],[1073,34,1139,22],[1073,36,1139,26],[1074,6,1140,4,"checkTxInputCache"],[1074,23,1140,21],[1074,24,1140,22,"cache"],[1074,29,1140,27],[1074,31,1140,29,"input"],[1074,36,1140,34],[1074,37,1140,35],[1075,4,1141,2],[1075,5,1141,3],[1075,6,1141,4],[1076,2,1142,0],[1077,2,1143,0],[1077,11,1143,9,"checkTxInputCache"],[1077,28,1143,26,"checkTxInputCache"],[1077,29,1143,27,"cache"],[1077,34,1143,32],[1077,36,1143,34,"input"],[1077,41,1143,39],[1077,43,1143,41],[1078,4,1144,2],[1078,8,1144,8,"key"],[1078,11,1144,11],[1078,14,1145,4,"tools"],[1078,19,1145,9],[1078,20,1145,10,"toHex"],[1078,25,1145,15],[1078,26,1146,6],[1078,27,1146,7],[1078,28,1146,8],[1078,30,1146,10,"_$$_REQUIRE"],[1078,41,1146,10],[1078,42,1146,10,"_dependencyMap"],[1078,56,1146,10],[1078,83,1146,27,"reverseBuffer"],[1078,96,1146,40],[1078,98,1146,42,"Uint8Array"],[1078,108,1146,52],[1078,109,1146,53,"from"],[1078,113,1146,57],[1078,114,1146,58,"input"],[1078,119,1146,63],[1078,120,1146,64,"hash"],[1078,124,1146,68],[1078,125,1146,69],[1078,126,1147,4],[1078,127,1147,5],[1078,130,1148,4],[1078,133,1148,7],[1078,136,1149,4,"input"],[1078,141,1149,9],[1078,142,1149,10,"index"],[1078,147,1149,15],[1079,4,1150,2],[1079,8,1150,6,"cache"],[1079,13,1150,11],[1079,14,1150,12,"__TX_IN_CACHE"],[1079,27,1150,25],[1079,28,1150,26,"key"],[1079,31,1150,29],[1079,32,1150,30],[1079,34,1150,32],[1079,40,1150,38],[1079,44,1150,42,"Error"],[1079,49,1150,47],[1079,50,1150,48],[1079,77,1150,75],[1079,78,1150,76],[1080,4,1151,2,"cache"],[1080,9,1151,7],[1080,10,1151,8,"__TX_IN_CACHE"],[1080,23,1151,21],[1080,24,1151,22,"key"],[1080,27,1151,25],[1080,28,1151,26],[1080,31,1151,29],[1080,32,1151,30],[1081,2,1152,0],[1082,2,1153,0],[1082,11,1153,9,"scriptCheckerFactory"],[1082,31,1153,29,"scriptCheckerFactory"],[1082,32,1153,30,"payment"],[1082,39,1153,37],[1082,41,1153,39,"paymentScriptName"],[1082,58,1153,56],[1082,60,1153,58],[1083,4,1154,2],[1083,11,1154,9],[1083,21,1154,10,"inputIndex"],[1083,31,1154,20],[1083,33,1154,22,"scriptPubKey"],[1083,45,1154,34],[1083,47,1154,36,"redeemScript"],[1083,59,1154,48],[1083,61,1154,50,"ioType"],[1083,67,1154,56],[1083,69,1154,61],[1084,6,1155,4],[1084,10,1155,10,"redeemScriptOutput"],[1084,28,1155,28],[1084,31,1155,31,"payment"],[1084,38,1155,38],[1084,39,1155,39],[1085,8,1156,6,"redeem"],[1085,14,1156,12],[1085,16,1156,14],[1086,10,1156,16,"output"],[1086,16,1156,22],[1086,18,1156,24,"redeemScript"],[1087,8,1156,37],[1088,6,1157,4],[1088,7,1157,5],[1088,8,1157,6],[1088,9,1157,7,"output"],[1088,15,1157,13],[1089,6,1158,4],[1089,10,1158,8,"tools"],[1089,15,1158,13],[1089,16,1158,14,"compare"],[1089,23,1158,21],[1089,24,1158,22,"scriptPubKey"],[1089,36,1158,34],[1089,38,1158,36,"redeemScriptOutput"],[1089,56,1158,54],[1089,57,1158,55],[1089,59,1158,57],[1090,8,1159,6],[1090,14,1159,12],[1090,18,1159,16,"Error"],[1090,23,1159,21],[1090,24,1160,8],[1090,27,1160,11,"paymentScriptName"],[1090,44,1160,28],[1090,52,1160,36,"ioType"],[1090,58,1160,42],[1090,63,1160,47,"inputIndex"],[1090,73,1160,57],[1090,121,1161,6],[1090,122,1161,7],[1091,6,1162,4],[1092,4,1163,2],[1092,5,1163,3],[1093,2,1164,0],[1094,2,1165,0],[1094,6,1165,6,"checkRedeemScript"],[1094,23,1165,23],[1094,26,1165,26,"scriptCheckerFactory"],[1094,46,1165,46],[1094,47,1165,47,"payments"],[1094,55,1165,55],[1094,56,1165,56,"p2sh"],[1094,60,1165,60],[1094,62,1165,62],[1094,77,1165,77],[1094,78,1165,78],[1095,2,1166,0],[1095,6,1166,6,"checkWitnessScript"],[1095,24,1166,24],[1095,27,1166,27,"scriptCheckerFactory"],[1095,47,1166,47],[1095,48,1167,2,"payments"],[1095,56,1167,10],[1095,57,1167,11,"p2wsh"],[1095,62,1167,16],[1095,64,1168,2],[1095,80,1169,0],[1095,81,1169,1],[1096,2,1170,0],[1096,11,1170,9,"getTxCacheValue"],[1096,26,1170,24,"getTxCacheValue"],[1096,27,1170,25,"key"],[1096,30,1170,28],[1096,32,1170,30,"name"],[1096,36,1170,34],[1096,38,1170,36,"inputs"],[1096,44,1170,42],[1096,46,1170,44,"c"],[1096,47,1170,45],[1096,49,1170,47],[1097,4,1171,2],[1097,8,1171,6],[1097,9,1171,7,"inputs"],[1097,15,1171,13],[1097,16,1171,14,"every"],[1097,21,1171,19],[1097,22,1171,20,"isFinalized"],[1097,33,1171,31],[1097,34,1171,32],[1097,36,1172,4],[1097,42,1172,10],[1097,46,1172,14,"Error"],[1097,51,1172,19],[1097,52,1172,20],[1097,91,1172,59,"name"],[1097,95,1172,63],[1097,97,1172,65],[1097,98,1172,66],[1098,4,1173,2],[1098,8,1173,6,"key"],[1098,11,1173,9],[1098,16,1173,14],[1098,28,1173,26],[1098,32,1173,30,"c"],[1098,33,1173,31],[1098,34,1173,32,"__FEE_RATE"],[1098,44,1173,42],[1098,46,1173,44],[1098,53,1173,51,"c"],[1098,54,1173,52],[1098,55,1173,53,"__FEE_RATE"],[1098,65,1173,63],[1099,4,1174,2],[1099,8,1174,6,"key"],[1099,11,1174,9],[1099,16,1174,14],[1099,23,1174,21],[1099,27,1174,25,"c"],[1099,28,1174,26],[1099,29,1174,27,"__FEE"],[1099,34,1174,32],[1099,36,1174,34],[1099,43,1174,41,"c"],[1099,44,1174,42],[1099,45,1174,43,"__FEE"],[1099,50,1174,48],[1100,4,1175,2],[1100,8,1175,6,"tx"],[1100,10,1175,8],[1101,4,1176,2],[1101,8,1176,6,"mustFinalize"],[1101,20,1176,18],[1101,23,1176,21],[1101,27,1176,25],[1102,4,1177,2],[1102,8,1177,6,"c"],[1102,9,1177,7],[1102,10,1177,8,"__EXTRACTED_TX"],[1102,24,1177,22],[1102,26,1177,24],[1103,6,1178,4,"tx"],[1103,8,1178,6],[1103,11,1178,9,"c"],[1103,12,1178,10],[1103,13,1178,11,"__EXTRACTED_TX"],[1103,27,1178,25],[1104,6,1179,4,"mustFinalize"],[1104,18,1179,16],[1104,21,1179,19],[1104,26,1179,24],[1105,4,1180,2],[1105,5,1180,3],[1105,11,1180,9],[1106,6,1181,4,"tx"],[1106,8,1181,6],[1106,11,1181,9,"c"],[1106,12,1181,10],[1106,13,1181,11,"__TX"],[1106,17,1181,15],[1106,18,1181,16,"clone"],[1106,23,1181,21],[1106,24,1181,22],[1106,25,1181,23],[1107,4,1182,2],[1108,4,1183,2,"inputFinalizeGetAmts"],[1108,24,1183,22],[1108,25,1183,23,"inputs"],[1108,31,1183,29],[1108,33,1183,31,"tx"],[1108,35,1183,33],[1108,37,1183,35,"c"],[1108,38,1183,36],[1108,40,1183,38,"mustFinalize"],[1108,52,1183,50],[1108,53,1183,51],[1109,4,1184,2],[1109,8,1184,6,"key"],[1109,11,1184,9],[1109,16,1184,14],[1109,28,1184,26],[1109,30,1184,28],[1109,37,1184,35,"c"],[1109,38,1184,36],[1109,39,1184,37,"__FEE_RATE"],[1109,49,1184,47],[1109,50,1184,48],[1109,55,1185,7],[1109,59,1185,11,"key"],[1109,62,1185,14],[1109,67,1185,19],[1109,74,1185,26],[1109,76,1185,28],[1109,83,1185,35,"c"],[1109,84,1185,36],[1109,85,1185,37,"__FEE"],[1109,90,1185,42],[1110,2,1186,0],[1111,2,1187,0],[1111,11,1187,9,"getFinalScripts"],[1111,26,1187,24,"getFinalScripts"],[1111,27,1187,25,"inputIndex"],[1111,37,1187,35],[1111,39,1187,37,"input"],[1111,44,1187,42],[1111,46,1187,44,"script"],[1111,52,1187,50],[1111,54,1187,52,"isSegwit"],[1111,62,1187,60],[1111,64,1187,62,"isP2SH"],[1111,70,1187,68],[1111,72,1187,70,"isP2WSH"],[1111,79,1187,77],[1111,81,1187,79],[1112,4,1188,2],[1112,8,1188,8,"scriptType"],[1112,18,1188,18],[1112,21,1188,21,"classifyScript"],[1112,35,1188,35],[1112,36,1188,36,"script"],[1112,42,1188,42],[1112,43,1188,43],[1113,4,1189,2],[1113,8,1189,6],[1113,9,1189,7,"canFinalize"],[1113,20,1189,18],[1113,21,1189,19,"input"],[1113,26,1189,24],[1113,28,1189,26,"script"],[1113,34,1189,32],[1113,36,1189,34,"scriptType"],[1113,46,1189,44],[1113,47,1189,45],[1113,49,1190,4],[1113,55,1190,10],[1113,59,1190,14,"Error"],[1113,64,1190,19],[1113,65,1190,20],[1113,92,1190,47,"inputIndex"],[1113,102,1190,57],[1113,104,1190,59],[1113,105,1190,60],[1114,4,1191,2],[1114,11,1191,9,"prepareFinalScripts"],[1114,30,1191,28],[1114,31,1192,4,"script"],[1114,37,1192,10],[1114,39,1193,4,"scriptType"],[1114,49,1193,14],[1114,51,1194,4,"input"],[1114,56,1194,9],[1114,57,1194,10,"partialSig"],[1114,67,1194,20],[1114,69,1195,4,"isSegwit"],[1114,77,1195,12],[1114,79,1196,4,"isP2SH"],[1114,85,1196,10],[1114,87,1197,4,"isP2WSH"],[1114,94,1198,2],[1114,95,1198,3],[1115,2,1199,0],[1116,2,1200,0],[1116,11,1200,9,"prepareFinalScripts"],[1116,30,1200,28,"prepareFinalScripts"],[1116,31,1201,2,"script"],[1116,37,1201,8],[1116,39,1202,2,"scriptType"],[1116,49,1202,12],[1116,51,1203,2,"partialSig"],[1116,61,1203,12],[1116,63,1204,2,"isSegwit"],[1116,71,1204,10],[1116,73,1205,2,"isP2SH"],[1116,79,1205,8],[1116,81,1206,2,"isP2WSH"],[1116,88,1206,9],[1116,90,1207,2],[1117,4,1208,2],[1117,8,1208,6,"finalScriptSig"],[1117,22,1208,20],[1118,4,1209,2],[1118,8,1209,6,"finalScriptWitness"],[1118,26,1209,24],[1119,4,1210,2],[1120,4,1211,2],[1120,8,1211,8,"payment"],[1120,15,1211,15],[1120,18,1211,18,"getPayment"],[1120,28,1211,28],[1120,29,1211,29,"script"],[1120,35,1211,35],[1120,37,1211,37,"scriptType"],[1120,47,1211,47],[1120,49,1211,49,"partialSig"],[1120,59,1211,59],[1120,60,1211,60],[1121,4,1212,2],[1121,8,1212,8,"p2wsh"],[1121,13,1212,13],[1121,16,1212,16],[1121,17,1212,17,"isP2WSH"],[1121,24,1212,24],[1121,27,1212,27],[1121,31,1212,31],[1121,34,1212,34,"payments"],[1121,42,1212,42],[1121,43,1212,43,"p2wsh"],[1121,48,1212,48],[1121,49,1212,49],[1122,6,1212,51,"redeem"],[1122,12,1212,57],[1122,14,1212,59,"payment"],[1123,4,1212,67],[1123,5,1212,68],[1123,6,1212,69],[1124,4,1213,2],[1124,8,1213,8,"p2sh"],[1124,12,1213,12],[1124,15,1213,15],[1124,16,1213,16,"isP2SH"],[1124,22,1213,22],[1124,25,1213,25],[1124,29,1213,29],[1124,32,1213,32,"payments"],[1124,40,1213,40],[1124,41,1213,41,"p2sh"],[1124,45,1213,45],[1124,46,1213,46],[1125,6,1213,48,"redeem"],[1125,12,1213,54],[1125,14,1213,56,"p2wsh"],[1125,19,1213,61],[1125,23,1213,65,"payment"],[1126,4,1213,73],[1126,5,1213,74],[1126,6,1213,75],[1127,4,1214,2],[1127,8,1214,6,"isSegwit"],[1127,16,1214,14],[1127,18,1214,16],[1128,6,1215,4],[1128,10,1215,8,"p2wsh"],[1128,15,1215,13],[1128,17,1215,15],[1129,8,1216,6,"finalScriptWitness"],[1129,26,1216,24],[1129,29,1216,27],[1129,30,1216,28],[1129,31,1216,29],[1129,33,1216,31,"_$$_REQUIRE"],[1129,44,1216,31],[1129,45,1216,31,"_dependencyMap"],[1129,59,1216,31],[1129,89,1216,46,"witnessStackToScriptWitness"],[1129,116,1216,73],[1129,118,1217,8,"p2wsh"],[1129,123,1217,13],[1129,124,1217,14,"witness"],[1129,131,1218,6],[1129,132,1218,7],[1130,6,1219,4],[1130,7,1219,5],[1130,13,1219,11],[1131,8,1220,6,"finalScriptWitness"],[1131,26,1220,24],[1131,29,1220,27],[1131,30,1220,28],[1131,31,1220,29],[1131,33,1220,31,"_$$_REQUIRE"],[1131,44,1220,31],[1131,45,1220,31,"_dependencyMap"],[1131,59,1220,31],[1131,89,1220,46,"witnessStackToScriptWitness"],[1131,116,1220,73],[1131,118,1221,8,"payment"],[1131,125,1221,15],[1131,126,1221,16,"witness"],[1131,133,1222,6],[1131,134,1222,7],[1132,6,1223,4],[1133,6,1224,4],[1133,10,1224,8,"p2sh"],[1133,14,1224,12],[1133,16,1224,14],[1134,8,1225,6,"finalScriptSig"],[1134,22,1225,20],[1134,25,1225,23,"p2sh"],[1134,29,1225,27],[1134,30,1225,28,"input"],[1134,35,1225,33],[1135,6,1226,4],[1136,4,1227,2],[1136,5,1227,3],[1136,11,1227,9],[1137,6,1228,4],[1137,10,1228,8,"p2sh"],[1137,14,1228,12],[1137,16,1228,14],[1138,8,1229,6,"finalScriptSig"],[1138,22,1229,20],[1138,25,1229,23,"p2sh"],[1138,29,1229,27],[1138,30,1229,28,"input"],[1138,35,1229,33],[1139,6,1230,4],[1139,7,1230,5],[1139,13,1230,11],[1140,8,1231,6,"finalScriptSig"],[1140,22,1231,20],[1140,25,1231,23,"payment"],[1140,32,1231,30],[1140,33,1231,31,"input"],[1140,38,1231,36],[1141,6,1232,4],[1142,4,1233,2],[1143,4,1234,2],[1143,11,1234,9],[1144,6,1235,4,"finalScriptSig"],[1144,20,1235,18],[1144,22,1235,4,"finalScriptSig"],[1144,36,1235,18],[1145,6,1236,4,"finalScriptWitness"],[1145,24,1236,22],[1145,26,1236,4,"finalScriptWitness"],[1146,4,1237,2],[1146,5,1237,3],[1147,2,1238,0],[1148,2,1239,0],[1148,11,1239,9,"getHashAndSighashType"],[1148,32,1239,30,"getHashAndSighashType"],[1148,33,1240,2,"inputs"],[1148,39,1240,8],[1148,41,1241,2,"inputIndex"],[1148,51,1241,12],[1148,53,1242,2,"pubkey"],[1148,59,1242,8],[1148,61,1243,2,"cache"],[1148,66,1243,7],[1148,68,1244,2,"sighashTypes"],[1148,80,1244,14],[1148,82,1245,2],[1149,4,1246,2],[1149,8,1246,8,"input"],[1149,13,1246,13],[1149,16,1246,16],[1149,17,1246,17],[1149,18,1246,18],[1149,20,1246,20,"_$$_REQUIRE"],[1149,31,1246,20],[1149,32,1246,20,"_dependencyMap"],[1149,46,1246,20],[1149,62,1246,29,"checkForInput"],[1149,75,1246,42],[1149,77,1246,44,"inputs"],[1149,83,1246,50],[1149,85,1246,52,"inputIndex"],[1149,95,1246,62],[1149,96,1246,63],[1150,4,1247,2],[1150,8,1247,2,"_getHashForSig"],[1150,22,1247,2],[1150,25,1247,40,"getHashForSig"],[1150,38,1247,53],[1150,39,1248,4,"inputIndex"],[1150,49,1248,14],[1150,51,1249,4,"input"],[1150,56,1249,9],[1150,58,1250,4,"cache"],[1150,63,1250,9],[1150,65,1251,4],[1150,70,1251,9],[1150,72,1252,4,"sighashTypes"],[1150,84,1253,2],[1150,85,1253,3],[1151,6,1247,10,"hash"],[1151,10,1247,14],[1151,13,1247,14,"_getHashForSig"],[1151,27,1247,14],[1151,28,1247,10,"hash"],[1151,32,1247,14],[1152,6,1247,16,"sighashType"],[1152,17,1247,27],[1152,20,1247,27,"_getHashForSig"],[1152,34,1247,27],[1152,35,1247,16,"sighashType"],[1152,46,1247,27],[1153,6,1247,29,"script"],[1153,12,1247,35],[1153,15,1247,35,"_getHashForSig"],[1153,29,1247,35],[1153,30,1247,29,"script"],[1153,36,1247,35],[1154,4,1254,2,"checkScriptForPubkey"],[1154,24,1254,22],[1154,25,1254,23,"pubkey"],[1154,31,1254,29],[1154,33,1254,31,"script"],[1154,39,1254,37],[1154,41,1254,39],[1154,47,1254,45],[1154,48,1254,46],[1155,4,1255,2],[1155,11,1255,9],[1156,6,1256,4,"hash"],[1156,10,1256,8],[1156,12,1256,4,"hash"],[1156,16,1256,8],[1157,6,1257,4,"sighashType"],[1157,17,1257,15],[1157,19,1257,4,"sighashType"],[1158,4,1258,2],[1158,5,1258,3],[1159,2,1259,0],[1160,2,1260,0],[1160,11,1260,9,"getHashForSig"],[1160,24,1260,22,"getHashForSig"],[1160,25,1260,23,"inputIndex"],[1160,35,1260,33],[1160,37,1260,35,"input"],[1160,42,1260,40],[1160,44,1260,42,"cache"],[1160,49,1260,47],[1160,51,1260,49,"forValidate"],[1160,62,1260,60],[1160,64,1260,62,"sighashTypes"],[1160,76,1260,74],[1160,78,1260,76],[1161,4,1261,2],[1161,8,1261,8,"unsignedTx"],[1161,18,1261,18],[1161,21,1261,21,"cache"],[1161,26,1261,26],[1161,27,1261,27,"__TX"],[1161,31,1261,31],[1162,4,1262,2],[1162,8,1262,8,"sighashType"],[1162,19,1262,19],[1162,22,1263,4,"input"],[1162,27,1263,9],[1162,28,1263,10,"sighashType"],[1162,39,1263,21],[1162,43,1263,25,"_$$_REQUIRE"],[1162,54,1263,25],[1162,55,1263,25,"_dependencyMap"],[1162,69,1263,25],[1162,96,1263,42,"Transaction"],[1162,107,1263,53],[1162,108,1263,54,"SIGHASH_ALL"],[1162,119,1263,65],[1163,4,1264,2,"checkSighashTypeAllowed"],[1163,27,1264,25],[1163,28,1264,26,"sighashType"],[1163,39,1264,37],[1163,41,1264,39,"sighashTypes"],[1163,53,1264,51],[1163,54,1264,52],[1164,4,1265,2],[1164,8,1265,6,"hash"],[1164,12,1265,10],[1165,4,1266,2],[1165,8,1266,6,"prevout"],[1165,15,1266,13],[1166,4,1267,2],[1166,8,1267,6,"input"],[1166,13,1267,11],[1166,14,1267,12,"nonWitnessUtxo"],[1166,28,1267,26],[1166,30,1267,28],[1167,6,1268,4],[1167,10,1268,10,"nonWitnessUtxoTx"],[1167,26,1268,26],[1167,29,1268,29,"nonWitnessUtxoTxFromCache"],[1167,54,1268,54],[1167,55,1269,6,"cache"],[1167,60,1269,11],[1167,62,1270,6,"input"],[1167,67,1270,11],[1167,69,1271,6,"inputIndex"],[1167,79,1272,4],[1167,80,1272,5],[1168,6,1273,4],[1168,10,1273,10,"prevoutHash"],[1168,21,1273,21],[1168,24,1273,24,"unsignedTx"],[1168,34,1273,34],[1168,35,1273,35,"ins"],[1168,38,1273,38],[1168,39,1273,39,"inputIndex"],[1168,49,1273,49],[1168,50,1273,50],[1168,51,1273,51,"hash"],[1168,55,1273,55],[1169,6,1274,4],[1169,10,1274,10,"utxoHash"],[1169,18,1274,18],[1169,21,1274,21,"nonWitnessUtxoTx"],[1169,37,1274,37],[1169,38,1274,38,"getHash"],[1169,45,1274,45],[1169,46,1274,46],[1169,47,1274,47],[1170,6,1275,4],[1171,6,1276,4],[1171,10,1276,8,"tools"],[1171,15,1276,13],[1171,16,1276,14,"compare"],[1171,23,1276,21],[1171,24,1276,22,"prevoutHash"],[1171,35,1276,33],[1171,37,1276,35,"utxoHash"],[1171,45,1276,43],[1171,46,1276,44],[1171,51,1276,49],[1171,52,1276,50],[1171,54,1276,52],[1172,8,1277,6],[1172,14,1277,12],[1172,18,1277,16,"Error"],[1172,23,1277,21],[1172,24,1278,8],[1172,60,1278,44,"inputIndex"],[1172,70,1278,54],[1172,120,1279,6],[1172,121,1279,7],[1173,6,1280,4],[1174,6,1281,4],[1174,10,1281,10,"prevoutIndex"],[1174,22,1281,22],[1174,25,1281,25,"unsignedTx"],[1174,35,1281,35],[1174,36,1281,36,"ins"],[1174,39,1281,39],[1174,40,1281,40,"inputIndex"],[1174,50,1281,50],[1174,51,1281,51],[1174,52,1281,52,"index"],[1174,57,1281,57],[1175,6,1282,4,"prevout"],[1175,13,1282,11],[1175,16,1282,14,"nonWitnessUtxoTx"],[1175,32,1282,30],[1175,33,1282,31,"outs"],[1175,37,1282,35],[1175,38,1282,36,"prevoutIndex"],[1175,50,1282,48],[1175,51,1282,49],[1176,4,1283,2],[1176,5,1283,3],[1176,11,1283,9],[1176,15,1283,13,"input"],[1176,20,1283,18],[1176,21,1283,19,"witnessUtxo"],[1176,32,1283,30],[1176,34,1283,32],[1177,6,1284,4,"prevout"],[1177,13,1284,11],[1177,16,1284,14,"input"],[1177,21,1284,19],[1177,22,1284,20,"witnessUtxo"],[1177,33,1284,31],[1178,4,1285,2],[1178,5,1285,3],[1178,11,1285,9],[1179,6,1286,4],[1179,12,1286,10],[1179,16,1286,14,"Error"],[1179,21,1286,19],[1179,22,1286,20],[1179,58,1286,56],[1179,59,1286,57],[1180,4,1287,2],[1181,4,1288,2],[1181,8,1288,2,"_getMeaningfulScript"],[1181,28,1288,2],[1181,31,1288,37,"getMeaningfulScript"],[1181,50,1288,56],[1181,51,1289,4,"prevout"],[1181,58,1289,11],[1181,59,1289,12,"script"],[1181,65,1289,18],[1181,67,1290,4,"inputIndex"],[1181,77,1290,14],[1181,79,1291,4],[1181,86,1291,11],[1181,88,1292,4,"input"],[1181,93,1292,9],[1181,94,1292,10,"redeemScript"],[1181,106,1292,22],[1181,108,1293,4,"input"],[1181,113,1293,9],[1181,114,1293,10,"witnessScript"],[1181,127,1294,2],[1181,128,1294,3],[1182,6,1288,10,"meaningfulScript"],[1182,22,1288,26],[1182,25,1288,26,"_getMeaningfulScript"],[1182,45,1288,26],[1182,46,1288,10,"meaningfulScript"],[1182,62,1288,26],[1183,6,1288,28,"type"],[1183,10,1288,32],[1183,13,1288,32,"_getMeaningfulScript"],[1183,33,1288,32],[1183,34,1288,28,"type"],[1183,38,1288,32],[1184,4,1295,2],[1184,8,1295,6],[1184,9,1295,7],[1184,21,1295,19],[1184,23,1295,21],[1184,30,1295,28],[1184,31,1295,29],[1184,32,1295,30,"indexOf"],[1184,39,1295,37],[1184,40,1295,38,"type"],[1184,44,1295,42],[1184,45,1295,43],[1184,49,1295,47],[1184,50,1295,48],[1184,52,1295,50],[1185,6,1296,4,"hash"],[1185,10,1296,8],[1185,13,1296,11,"unsignedTx"],[1185,23,1296,21],[1185,24,1296,22,"hashForWitnessV0"],[1185,40,1296,38],[1185,41,1297,6,"inputIndex"],[1185,51,1297,16],[1185,53,1298,6,"meaningfulScript"],[1185,69,1298,22],[1185,71,1299,6,"prevout"],[1185,78,1299,13],[1185,79,1299,14,"value"],[1185,84,1299,19],[1185,86,1300,6,"sighashType"],[1185,97,1301,4],[1185,98,1301,5],[1186,4,1302,2],[1186,5,1302,3],[1186,11,1302,9],[1186,15,1302,13],[1186,16,1302,14],[1186,17,1302,15],[1186,19,1302,17,"_$$_REQUIRE"],[1186,30,1302,17],[1186,31,1302,17,"_dependencyMap"],[1186,45,1302,17],[1186,75,1302,32,"isP2WPKH"],[1186,83,1302,40],[1186,85,1302,42,"meaningfulScript"],[1186,101,1302,58],[1186,102,1302,59],[1186,104,1302,61],[1187,6,1303,4],[1188,6,1304,4],[1188,10,1304,10,"signingScript"],[1188,23,1304,23],[1188,26,1304,26,"payments"],[1188,34,1304,34],[1188,35,1304,35,"p2pkh"],[1188,40,1304,40],[1188,41,1304,41],[1189,8,1305,6,"hash"],[1189,12,1305,10],[1189,14,1305,12,"meaningfulScript"],[1189,30,1305,28],[1189,31,1305,29,"slice"],[1189,36,1305,34],[1189,37,1305,35],[1189,38,1305,36],[1190,6,1306,4],[1190,7,1306,5],[1190,8,1306,6],[1190,9,1306,7,"output"],[1190,15,1306,13],[1191,6,1307,4,"hash"],[1191,10,1307,8],[1191,13,1307,11,"unsignedTx"],[1191,23,1307,21],[1191,24,1307,22,"hashForWitnessV0"],[1191,40,1307,38],[1191,41,1308,6,"inputIndex"],[1191,51,1308,16],[1191,53,1309,6,"signingScript"],[1191,66,1309,19],[1191,68,1310,6,"prevout"],[1191,75,1310,13],[1191,76,1310,14,"value"],[1191,81,1310,19],[1191,83,1311,6,"sighashType"],[1191,94,1312,4],[1191,95,1312,5],[1192,4,1313,2],[1192,5,1313,3],[1192,11,1313,9],[1193,6,1314,4],[1194,6,1315,4],[1194,10,1316,6,"input"],[1194,15,1316,11],[1194,16,1316,12,"nonWitnessUtxo"],[1194,30,1316,26],[1194,35,1316,31,"undefined"],[1194,44,1316,40],[1194,48,1317,6,"cache"],[1194,53,1317,11],[1194,54,1317,12,"__UNSAFE_SIGN_NONSEGWIT"],[1194,77,1317,35],[1194,82,1317,40],[1194,87,1317,45],[1194,89,1319,6],[1194,95,1319,12],[1194,99,1319,16,"Error"],[1194,104,1319,21],[1194,105,1320,8],[1194,115,1320,18,"inputIndex"],[1194,125,1320,28],[1194,167,1320,70],[1194,170,1321,10],[1194,173,1321,13,"tools"],[1194,178,1321,18],[1194,179,1321,19,"toHex"],[1194,184,1321,24],[1194,185,1321,25,"meaningfulScript"],[1194,201,1321,41],[1194,202,1321,42],[1194,204,1322,6],[1194,205,1322,7],[1195,6,1323,4],[1195,10,1323,8],[1195,11,1323,9,"forValidate"],[1195,22,1323,20],[1195,26,1323,24,"cache"],[1195,31,1323,29],[1195,32,1323,30,"__UNSAFE_SIGN_NONSEGWIT"],[1195,55,1323,53],[1195,60,1323,58],[1195,65,1323,63],[1195,67,1324,6,"console"],[1195,74,1324,13],[1195,75,1324,14,"warn"],[1195,79,1324,18],[1195,80,1325,8],[1195,153,1325,81],[1195,156,1326,10],[1195,232,1326,86],[1195,235,1327,10],[1195,322,1327,97],[1195,325,1328,10],[1195,407,1328,92],[1195,410,1329,10],[1195,482,1329,82],[1195,485,1330,10],[1195,552,1330,77],[1195,555,1331,10],[1195,578,1332,6],[1195,579,1332,7],[1196,6,1333,4,"hash"],[1196,10,1333,8],[1196,13,1333,11,"unsignedTx"],[1196,23,1333,21],[1196,24,1333,22,"hashForSignature"],[1196,40,1333,38],[1196,41,1334,6,"inputIndex"],[1196,51,1334,16],[1196,53,1335,6,"meaningfulScript"],[1196,69,1335,22],[1196,71,1336,6,"sighashType"],[1196,82,1337,4],[1196,83,1337,5],[1197,4,1338,2],[1198,4,1339,2],[1198,11,1339,9],[1199,6,1340,4,"script"],[1199,12,1340,10],[1199,14,1340,12,"meaningfulScript"],[1199,30,1340,28],[1200,6,1341,4,"sighashType"],[1200,17,1341,15],[1200,19,1341,4,"sighashType"],[1200,30,1341,15],[1201,6,1342,4,"hash"],[1201,10,1342,8],[1201,12,1342,4,"hash"],[1202,4,1343,2],[1202,5,1343,3],[1203,2,1344,0],[1204,2,1345,0],[1204,11,1345,9,"getAllTaprootHashesForSig"],[1204,36,1345,34,"getAllTaprootHashesForSig"],[1204,37,1345,35,"inputIndex"],[1204,47,1345,45],[1204,49,1345,47,"input"],[1204,54,1345,52],[1204,56,1345,54,"inputs"],[1204,62,1345,60],[1204,64,1345,62,"cache"],[1204,69,1345,67],[1204,71,1345,69],[1205,4,1346,2],[1205,8,1346,8,"allPublicKeys"],[1205,21,1346,21],[1205,24,1346,24],[1205,26,1346,26],[1206,4,1347,2],[1206,8,1347,6,"input"],[1206,13,1347,11],[1206,14,1347,12,"tapInternalKey"],[1206,28,1347,26],[1206,30,1347,28],[1207,6,1348,4],[1207,10,1348,10,"key"],[1207,13,1348,13],[1207,16,1348,16,"getPrevoutTaprootKey"],[1207,36,1348,36],[1207,37,1348,37,"inputIndex"],[1207,47,1348,47],[1207,49,1348,49,"input"],[1207,54,1348,54],[1207,56,1348,56,"cache"],[1207,61,1348,61],[1207,62,1348,62],[1208,6,1349,4],[1208,10,1349,8,"key"],[1208,13,1349,11],[1208,15,1349,13],[1209,8,1350,6,"allPublicKeys"],[1209,21,1350,19],[1209,22,1350,20,"push"],[1209,26,1350,24],[1209,27,1350,25,"key"],[1209,30,1350,28],[1209,31,1350,29],[1210,6,1351,4],[1211,4,1352,2],[1212,4,1353,2],[1212,8,1353,6,"input"],[1212,13,1353,11],[1212,14,1353,12,"tapScriptSig"],[1212,26,1353,24],[1212,28,1353,26],[1213,6,1354,4],[1213,10,1354,10,"tapScriptPubkeys"],[1213,26,1354,26],[1213,29,1354,29,"input"],[1213,34,1354,34],[1213,35,1354,35,"tapScriptSig"],[1213,47,1354,47],[1213,48,1354,48,"map"],[1213,51,1354,51],[1213,52,1354,52],[1213,62,1354,52,"tss"],[1213,65,1354,55],[1214,8,1354,55],[1214,15,1354,59,"tss"],[1214,18,1354,62],[1214,19,1354,63,"pubkey"],[1214,25,1354,69],[1215,6,1354,69],[1215,8,1354,70],[1216,6,1355,4,"allPublicKeys"],[1216,19,1355,17],[1216,20,1355,18,"push"],[1216,24,1355,22],[1216,25,1355,22,"apply"],[1216,30,1355,22],[1216,31,1355,4,"allPublicKeys"],[1216,44,1355,17],[1216,46,1355,17,"_toConsumableArray"],[1216,64,1355,17],[1216,65,1355,26,"tapScriptPubkeys"],[1216,81,1355,42],[1216,83,1355,43],[1217,4,1356,2],[1218,4,1357,2],[1218,8,1357,8,"allHashes"],[1218,17,1357,17],[1218,20,1357,20,"allPublicKeys"],[1218,33,1357,33],[1218,34,1357,34,"map"],[1218,37,1357,37],[1218,38,1357,38],[1218,48,1357,38,"publicKey"],[1218,57,1357,47],[1219,6,1357,47],[1219,13,1358,4,"getTaprootHashesForSig"],[1219,35,1358,26],[1219,36,1358,27,"inputIndex"],[1219,46,1358,37],[1219,48,1358,39,"input"],[1219,53,1358,44],[1219,55,1358,46,"inputs"],[1219,61,1358,52],[1219,63,1358,54,"publicKey"],[1219,72,1358,63],[1219,74,1358,65,"cache"],[1219,79,1358,70],[1219,80,1358,71],[1220,4,1358,71],[1220,5,1359,2],[1220,6,1359,3],[1221,4,1360,2],[1221,11,1360,9,"allHashes"],[1221,20,1360,18],[1221,21,1360,19,"flat"],[1221,25,1360,23],[1221,26,1360,24],[1221,27,1360,25],[1222,2,1361,0],[1223,2,1362,0],[1223,11,1362,9,"getPrevoutTaprootKey"],[1223,31,1362,29,"getPrevoutTaprootKey"],[1223,32,1362,30,"inputIndex"],[1223,42,1362,40],[1223,44,1362,42,"input"],[1223,49,1362,47],[1223,51,1362,49,"cache"],[1223,56,1362,54],[1223,58,1362,56],[1224,4,1363,2],[1224,8,1363,2,"_getScriptAndAmountFr"],[1224,29,1363,2],[1224,32,1363,21,"getScriptAndAmountFromUtxo"],[1224,58,1363,47],[1224,59,1363,48,"inputIndex"],[1224,69,1363,58],[1224,71,1363,60,"input"],[1224,76,1363,65],[1224,78,1363,67,"cache"],[1224,83,1363,72],[1224,84,1363,73],[1225,6,1363,10,"script"],[1225,12,1363,16],[1225,15,1363,16,"_getScriptAndAmountFr"],[1225,36,1363,16],[1225,37,1363,10,"script"],[1225,43,1363,16],[1226,4,1364,2],[1226,11,1364,9],[1226,12,1364,10],[1226,13,1364,11],[1226,15,1364,13,"_$$_REQUIRE"],[1226,26,1364,13],[1226,27,1364,13,"_dependencyMap"],[1226,41,1364,13],[1226,71,1364,28,"isP2TR"],[1226,77,1364,34],[1226,79,1364,36,"script"],[1226,85,1364,42],[1226,86,1364,43],[1226,89,1364,46,"script"],[1226,95,1364,52],[1226,96,1364,53,"subarray"],[1226,104,1364,61],[1226,105,1364,62],[1226,106,1364,63],[1226,108,1364,65],[1226,110,1364,67],[1226,111,1364,68],[1226,114,1364,71],[1226,118,1364,75],[1227,2,1365,0],[1228,2,1366,0],[1228,11,1366,9,"trimTaprootSig"],[1228,25,1366,23,"trimTaprootSig"],[1228,26,1366,24,"signature"],[1228,35,1366,33],[1228,37,1366,35],[1229,4,1367,2],[1229,11,1367,9,"signature"],[1229,20,1367,18],[1229,21,1367,19,"length"],[1229,27,1367,25],[1229,32,1367,30],[1229,34,1367,32],[1229,37,1367,35,"signature"],[1229,46,1367,44],[1229,49,1367,47,"signature"],[1229,58,1367,56],[1229,59,1367,57,"subarray"],[1229,67,1367,65],[1229,68,1367,66],[1229,69,1367,67],[1229,71,1367,69],[1229,73,1367,71],[1229,74,1367,72],[1230,2,1368,0],[1231,2,1369,0],[1231,11,1369,9,"getTaprootHashesForSig"],[1231,33,1369,31,"getTaprootHashesForSig"],[1231,34,1370,2,"inputIndex"],[1231,44,1370,12],[1231,46,1371,2,"input"],[1231,51,1371,7],[1231,53,1372,2,"inputs"],[1231,59,1372,8],[1231,61,1373,2,"pubkey"],[1231,67,1373,8],[1231,69,1374,2,"cache"],[1231,74,1374,7],[1231,76,1375,2,"tapLeafHashToSign"],[1231,93,1375,19],[1231,95,1376,2,"allowedSighashTypes"],[1231,114,1376,21],[1231,116,1377,2],[1232,4,1378,2],[1232,8,1378,8,"unsignedTx"],[1232,18,1378,18],[1232,21,1378,21,"cache"],[1232,26,1378,26],[1232,27,1378,27,"__TX"],[1232,31,1378,31],[1233,4,1379,2],[1233,8,1379,8,"sighashType"],[1233,19,1379,19],[1233,22,1380,4,"input"],[1233,27,1380,9],[1233,28,1380,10,"sighashType"],[1233,39,1380,21],[1233,43,1380,25,"_$$_REQUIRE"],[1233,54,1380,25],[1233,55,1380,25,"_dependencyMap"],[1233,69,1380,25],[1233,96,1380,42,"Transaction"],[1233,107,1380,53],[1233,108,1380,54,"SIGHASH_DEFAULT"],[1233,123,1380,69],[1234,4,1381,2,"checkSighashTypeAllowed"],[1234,27,1381,25],[1234,28,1381,26,"sighashType"],[1234,39,1381,37],[1234,41,1381,39,"allowedSighashTypes"],[1234,60,1381,58],[1234,61,1381,59],[1235,4,1382,2],[1235,8,1382,8,"prevOuts"],[1235,16,1382,16],[1235,19,1382,19,"inputs"],[1235,25,1382,25],[1235,26,1382,26,"map"],[1235,29,1382,29],[1235,30,1382,30],[1235,40,1382,31,"i"],[1235,41,1382,32],[1235,43,1382,34,"index"],[1235,48,1382,39],[1236,6,1382,39],[1236,13,1383,4,"getScriptAndAmountFromUtxo"],[1236,39,1383,30],[1236,40,1383,31,"index"],[1236,45,1383,36],[1236,47,1383,38,"i"],[1236,48,1383,39],[1236,50,1383,41,"cache"],[1236,55,1383,46],[1236,56,1383,47],[1237,4,1383,47],[1237,5,1384,2],[1237,6,1384,3],[1238,4,1385,2],[1238,8,1385,8,"signingScripts"],[1238,22,1385,22],[1238,25,1385,25,"prevOuts"],[1238,33,1385,33],[1238,34,1385,34,"map"],[1238,37,1385,37],[1238,38,1385,38],[1238,48,1385,38,"o"],[1238,49,1385,39],[1239,6,1385,39],[1239,13,1385,43,"o"],[1239,14,1385,44],[1239,15,1385,45,"script"],[1239,21,1385,51],[1240,4,1385,51],[1240,6,1385,52],[1241,4,1386,2],[1241,8,1386,8,"values"],[1241,14,1386,14],[1241,17,1386,17,"prevOuts"],[1241,25,1386,25],[1241,26,1386,26,"map"],[1241,29,1386,29],[1241,30,1386,30],[1241,40,1386,30,"o"],[1241,41,1386,31],[1242,6,1386,31],[1242,13,1386,35,"o"],[1242,14,1386,36],[1242,15,1386,37,"value"],[1242,20,1386,42],[1243,4,1386,42],[1243,6,1386,43],[1244,4,1387,2],[1244,8,1387,8,"hashes"],[1244,14,1387,14],[1244,17,1387,17],[1244,19,1387,19],[1245,4,1388,2],[1245,8,1388,6,"input"],[1245,13,1388,11],[1245,14,1388,12,"tapInternalKey"],[1245,28,1388,26],[1245,32,1388,30],[1245,33,1388,31,"tapLeafHashToSign"],[1245,50,1388,48],[1245,52,1388,50],[1246,6,1389,4],[1246,10,1389,10,"outputKey"],[1246,19,1389,19],[1246,22,1390,6,"getPrevoutTaprootKey"],[1246,42,1390,26],[1246,43,1390,27,"inputIndex"],[1246,53,1390,37],[1246,55,1390,39,"input"],[1246,60,1390,44],[1246,62,1390,46,"cache"],[1246,67,1390,51],[1246,68,1390,52],[1246,72,1390,56,"Uint8Array"],[1246,82,1390,66],[1246,83,1390,67,"from"],[1246,87,1390,71],[1246,88,1390,72],[1246,90,1390,74],[1246,91,1390,75],[1247,6,1391,4],[1247,10,1391,8,"tools"],[1247,15,1391,13],[1247,16,1391,14,"compare"],[1247,23,1391,21],[1247,24,1391,22],[1247,25,1391,23],[1247,26,1391,24],[1247,28,1391,26,"_$$_REQUIRE"],[1247,39,1391,26],[1247,40,1391,26,"_dependencyMap"],[1247,54,1391,26],[1247,81,1391,38,"toXOnly"],[1247,88,1391,45],[1247,90,1391,47,"pubkey"],[1247,96,1391,53],[1247,97,1391,54],[1247,99,1391,56,"outputKey"],[1247,108,1391,65],[1247,109,1391,66],[1247,114,1391,71],[1247,115,1391,72],[1247,117,1391,74],[1248,8,1392,6],[1248,12,1392,12,"tapKeyHash"],[1248,22,1392,22],[1248,25,1392,25,"unsignedTx"],[1248,35,1392,35],[1248,36,1392,36,"hashForWitnessV1"],[1248,52,1392,52],[1248,53,1393,8,"inputIndex"],[1248,63,1393,18],[1248,65,1394,8,"signingScripts"],[1248,79,1394,22],[1248,81,1395,8,"values"],[1248,87,1395,14],[1248,89,1396,8,"sighashType"],[1248,100,1397,6],[1248,101,1397,7],[1249,8,1398,6,"hashes"],[1249,14,1398,12],[1249,15,1398,13,"push"],[1249,19,1398,17],[1249,20,1398,18],[1250,10,1398,20,"pubkey"],[1250,16,1398,26],[1250,18,1398,20,"pubkey"],[1250,24,1398,26],[1251,10,1398,28,"hash"],[1251,14,1398,32],[1251,16,1398,34,"tapKeyHash"],[1252,8,1398,45],[1252,9,1398,46],[1252,10,1398,47],[1253,6,1399,4],[1254,4,1400,2],[1255,4,1401,2],[1255,8,1401,8,"tapLeafHashes"],[1255,21,1401,21],[1255,24,1401,24],[1255,25,1401,25,"input"],[1255,30,1401,30],[1255,31,1401,31,"tapLeafScript"],[1255,44,1401,44],[1255,48,1401,48],[1255,50,1401,50],[1255,52,1402,5,"filter"],[1255,58,1402,11],[1255,59,1402,12],[1255,69,1402,12,"tapLeaf"],[1255,76,1402,19],[1256,6,1402,19],[1256,13,1403,6],[1256,14,1403,7],[1256,15,1403,8],[1256,17,1403,10,"_$$_REQUIRE"],[1256,28,1403,10],[1256,29,1403,10,"_dependencyMap"],[1256,43,1403,10],[1256,73,1403,25,"pubkeyInScript"],[1256,87,1403,39],[1256,89,1403,41,"pubkey"],[1256,95,1403,47],[1256,97,1403,49,"tapLeaf"],[1256,104,1403,56],[1256,105,1403,57,"script"],[1256,111,1403,63],[1256,112,1403,64],[1257,4,1403,64],[1257,5,1404,4],[1257,6,1404,5],[1257,7,1405,5,"map"],[1257,10,1405,8],[1257,11,1405,9],[1257,21,1405,9,"tapLeaf"],[1257,28,1405,16],[1257,30,1405,20],[1258,6,1406,6],[1258,10,1406,12,"hash"],[1258,14,1406,16],[1258,17,1406,19],[1258,18,1406,20],[1258,19,1406,21],[1258,21,1406,23,"_$$_REQUIRE"],[1258,32,1406,23],[1258,33,1406,23,"_dependencyMap"],[1258,47,1406,23],[1258,78,1406,35,"tapleafHash"],[1258,89,1406,46],[1258,91,1406,48],[1259,8,1407,8,"output"],[1259,14,1407,14],[1259,16,1407,16,"tapLeaf"],[1259,23,1407,23],[1259,24,1407,24,"script"],[1259,30,1407,30],[1260,8,1408,8,"version"],[1260,15,1408,15],[1260,17,1408,17,"tapLeaf"],[1260,24,1408,24],[1260,25,1408,25,"leafVersion"],[1261,6,1409,6],[1261,7,1409,7],[1261,8,1409,8],[1262,6,1410,6],[1262,13,1410,13,"Object"],[1262,19,1410,19],[1262,20,1410,20,"assign"],[1262,26,1410,26],[1262,27,1410,27],[1263,8,1410,29,"hash"],[1263,12,1410,33],[1263,14,1410,29,"hash"],[1264,6,1410,34],[1264,7,1410,35],[1264,9,1410,37,"tapLeaf"],[1264,16,1410,44],[1264,17,1410,45],[1265,4,1411,4],[1265,5,1411,5],[1265,6,1411,6],[1265,7,1412,5,"filter"],[1265,13,1412,11],[1265,14,1413,6],[1265,24,1413,6,"tapLeaf"],[1265,31,1413,13],[1266,6,1413,13],[1266,13,1414,8],[1266,14,1414,9,"tapLeafHashToSign"],[1266,31,1414,26],[1266,35,1415,8,"tools"],[1266,40,1415,13],[1266,41,1415,14,"compare"],[1266,48,1415,21],[1266,49,1415,22,"tapLeafHashToSign"],[1266,66,1415,39],[1266,68,1415,41,"tapLeaf"],[1266,75,1415,48],[1266,76,1415,49,"hash"],[1266,80,1415,53],[1266,81,1415,54],[1266,86,1415,59],[1266,87,1415,60],[1267,4,1415,60],[1267,5,1416,4],[1267,6,1416,5],[1267,7,1417,5,"map"],[1267,10,1417,8],[1267,11,1417,9],[1267,21,1417,9,"tapLeaf"],[1267,28,1417,16],[1267,30,1417,20],[1268,6,1418,6],[1268,10,1418,12,"tapScriptHash"],[1268,23,1418,25],[1268,26,1418,28,"unsignedTx"],[1268,36,1418,38],[1268,37,1418,39,"hashForWitnessV1"],[1268,53,1418,55],[1268,54,1419,8,"inputIndex"],[1268,64,1419,18],[1268,66,1420,8,"signingScripts"],[1268,80,1420,22],[1268,82,1421,8,"values"],[1268,88,1421,14],[1268,90,1422,8,"sighashType"],[1268,101,1422,19],[1268,103,1423,8,"tapLeaf"],[1268,110,1423,15],[1268,111,1423,16,"hash"],[1268,115,1424,6],[1268,116,1424,7],[1269,6,1425,6],[1269,13,1425,13],[1270,8,1426,8,"pubkey"],[1270,14,1426,14],[1270,16,1426,8,"pubkey"],[1270,22,1426,14],[1271,8,1427,8,"hash"],[1271,12,1427,12],[1271,14,1427,14,"tapScriptHash"],[1271,27,1427,27],[1272,8,1428,8,"leafHash"],[1272,16,1428,16],[1272,18,1428,18,"tapLeaf"],[1272,25,1428,25],[1272,26,1428,26,"hash"],[1273,6,1429,6],[1273,7,1429,7],[1274,4,1430,4],[1274,5,1430,5],[1274,6,1430,6],[1275,4,1431,2],[1275,11,1431,9,"hashes"],[1275,17,1431,15],[1275,18,1431,16,"concat"],[1275,24,1431,22],[1275,25,1431,23,"tapLeafHashes"],[1275,38,1431,36],[1275,39,1431,37],[1276,2,1432,0],[1277,2,1433,0],[1277,11,1433,9,"checkSighashTypeAllowed"],[1277,34,1433,32,"checkSighashTypeAllowed"],[1277,35,1433,33,"sighashType"],[1277,46,1433,44],[1277,48,1433,46,"sighashTypes"],[1277,60,1433,58],[1277,62,1433,60],[1278,4,1434,2],[1278,8,1434,6,"sighashTypes"],[1278,20,1434,18],[1278,24,1434,22,"sighashTypes"],[1278,36,1434,34],[1278,37,1434,35,"indexOf"],[1278,44,1434,42],[1278,45,1434,43,"sighashType"],[1278,56,1434,54],[1278,57,1434,55],[1278,60,1434,58],[1278,61,1434,59],[1278,63,1434,61],[1279,6,1435,4],[1279,10,1435,10,"str"],[1279,13,1435,13],[1279,16,1435,16,"sighashTypeToString"],[1279,35,1435,35],[1279,36,1435,36,"sighashType"],[1279,47,1435,47],[1279,48,1435,48],[1280,6,1436,4],[1280,12,1436,10],[1280,16,1436,14,"Error"],[1280,21,1436,19],[1280,22,1437,6],[1280,87,1437,71],[1280,90,1438,8],[1280,148,1438,66,"str"],[1280,151,1438,69],[1280,153,1439,4],[1280,154,1439,5],[1281,4,1440,2],[1282,2,1441,0],[1283,2,1442,0],[1283,11,1442,9,"getPayment"],[1283,21,1442,19,"getPayment"],[1283,22,1442,20,"script"],[1283,28,1442,26],[1283,30,1442,28,"scriptType"],[1283,40,1442,38],[1283,42,1442,40,"partialSig"],[1283,52,1442,50],[1283,54,1442,52],[1284,4,1443,2],[1284,8,1443,6,"payment"],[1284,15,1443,13],[1285,4,1444,2],[1285,12,1444,10,"scriptType"],[1285,22,1444,20],[1286,6,1445,4],[1286,11,1445,9],[1286,21,1445,19],[1287,8,1446,6],[1287,12,1446,12,"sigs"],[1287,16,1446,16],[1287,19,1446,19,"getSortedSigs"],[1287,32,1446,32],[1287,33,1446,33,"script"],[1287,39,1446,39],[1287,41,1446,41,"partialSig"],[1287,51,1446,51],[1287,52,1446,52],[1288,8,1447,6,"payment"],[1288,15,1447,13],[1288,18,1447,16,"payments"],[1288,26,1447,24],[1288,27,1447,25,"p2ms"],[1288,31,1447,29],[1288,32,1447,30],[1289,10,1448,8,"output"],[1289,16,1448,14],[1289,18,1448,16,"script"],[1289,24,1448,22],[1290,10,1449,8,"signatures"],[1290,20,1449,18],[1290,22,1449,20,"sigs"],[1291,8,1450,6],[1291,9,1450,7],[1291,10,1450,8],[1292,8,1451,6],[1293,6,1452,4],[1293,11,1452,9],[1293,19,1452,17],[1294,8,1453,6,"payment"],[1294,15,1453,13],[1294,18,1453,16,"payments"],[1294,26,1453,24],[1294,27,1453,25,"p2pk"],[1294,31,1453,29],[1294,32,1453,30],[1295,10,1454,8,"output"],[1295,16,1454,14],[1295,18,1454,16,"script"],[1295,24,1454,22],[1296,10,1455,8,"signature"],[1296,19,1455,17],[1296,21,1455,19,"partialSig"],[1296,31,1455,29],[1296,32,1455,30],[1296,33,1455,31],[1296,34,1455,32],[1296,35,1455,33,"signature"],[1297,8,1456,6],[1297,9,1456,7],[1297,10,1456,8],[1298,8,1457,6],[1299,6,1458,4],[1299,11,1458,9],[1299,23,1458,21],[1300,8,1459,6,"payment"],[1300,15,1459,13],[1300,18,1459,16,"payments"],[1300,26,1459,24],[1300,27,1459,25,"p2pkh"],[1300,32,1459,30],[1300,33,1459,31],[1301,10,1460,8,"output"],[1301,16,1460,14],[1301,18,1460,16,"script"],[1301,24,1460,22],[1302,10,1461,8,"pubkey"],[1302,16,1461,14],[1302,18,1461,16,"partialSig"],[1302,28,1461,26],[1302,29,1461,27],[1302,30,1461,28],[1302,31,1461,29],[1302,32,1461,30,"pubkey"],[1302,38,1461,36],[1303,10,1462,8,"signature"],[1303,19,1462,17],[1303,21,1462,19,"partialSig"],[1303,31,1462,29],[1303,32,1462,30],[1303,33,1462,31],[1303,34,1462,32],[1303,35,1462,33,"signature"],[1304,8,1463,6],[1304,9,1463,7],[1304,10,1463,8],[1305,8,1464,6],[1306,6,1465,4],[1306,11,1465,9],[1306,30,1465,28],[1307,8,1466,6,"payment"],[1307,15,1466,13],[1307,18,1466,16,"payments"],[1307,26,1466,24],[1307,27,1466,25,"p2wpkh"],[1307,33,1466,31],[1307,34,1466,32],[1308,10,1467,8,"output"],[1308,16,1467,14],[1308,18,1467,16,"script"],[1308,24,1467,22],[1309,10,1468,8,"pubkey"],[1309,16,1468,14],[1309,18,1468,16,"partialSig"],[1309,28,1468,26],[1309,29,1468,27],[1309,30,1468,28],[1309,31,1468,29],[1309,32,1468,30,"pubkey"],[1309,38,1468,36],[1310,10,1469,8,"signature"],[1310,19,1469,17],[1310,21,1469,19,"partialSig"],[1310,31,1469,29],[1310,32,1469,30],[1310,33,1469,31],[1310,34,1469,32],[1310,35,1469,33,"signature"],[1311,8,1470,6],[1311,9,1470,7],[1311,10,1470,8],[1312,8,1471,6],[1313,4,1472,2],[1314,4,1473,2],[1314,11,1473,9,"payment"],[1314,18,1473,16],[1315,2,1474,0],[1316,2,1475,0],[1316,11,1475,9,"getScriptFromInput"],[1316,29,1475,27,"getScriptFromInput"],[1316,30,1475,28,"inputIndex"],[1316,40,1475,38],[1316,42,1475,40,"input"],[1316,47,1475,45],[1316,49,1475,47,"cache"],[1316,54,1475,52],[1316,56,1475,54],[1317,4,1476,2],[1317,8,1476,8,"unsignedTx"],[1317,18,1476,18],[1317,21,1476,21,"cache"],[1317,26,1476,26],[1317,27,1476,27,"__TX"],[1317,31,1476,31],[1318,4,1477,2],[1318,8,1477,8,"res"],[1318,11,1477,11],[1318,14,1477,14],[1319,6,1478,4,"script"],[1319,12,1478,10],[1319,14,1478,12],[1319,18,1478,16],[1320,6,1479,4,"isSegwit"],[1320,14,1479,12],[1320,16,1479,14],[1320,21,1479,19],[1321,6,1480,4,"isP2SH"],[1321,12,1480,10],[1321,14,1480,12],[1321,19,1480,17],[1322,6,1481,4,"isP2WSH"],[1322,13,1481,11],[1322,15,1481,13],[1323,4,1482,2],[1323,5,1482,3],[1324,4,1483,2,"res"],[1324,7,1483,5],[1324,8,1483,6,"isP2SH"],[1324,14,1483,12],[1324,17,1483,15],[1324,18,1483,16],[1324,19,1483,17,"input"],[1324,24,1483,22],[1324,25,1483,23,"redeemScript"],[1324,37,1483,35],[1325,4,1484,2,"res"],[1325,7,1484,5],[1325,8,1484,6,"isP2WSH"],[1325,15,1484,13],[1325,18,1484,16],[1325,19,1484,17],[1325,20,1484,18,"input"],[1325,25,1484,23],[1325,26,1484,24,"witnessScript"],[1325,39,1484,37],[1326,4,1485,2],[1326,8,1485,6,"input"],[1326,13,1485,11],[1326,14,1485,12,"witnessScript"],[1326,27,1485,25],[1326,29,1485,27],[1327,6,1486,4,"res"],[1327,9,1486,7],[1327,10,1486,8,"script"],[1327,16,1486,14],[1327,19,1486,17,"input"],[1327,24,1486,22],[1327,25,1486,23,"witnessScript"],[1327,38,1486,36],[1328,4,1487,2],[1328,5,1487,3],[1328,11,1487,9],[1328,15,1487,13,"input"],[1328,20,1487,18],[1328,21,1487,19,"redeemScript"],[1328,33,1487,31],[1328,35,1487,33],[1329,6,1488,4,"res"],[1329,9,1488,7],[1329,10,1488,8,"script"],[1329,16,1488,14],[1329,19,1488,17,"input"],[1329,24,1488,22],[1329,25,1488,23,"redeemScript"],[1329,37,1488,35],[1330,4,1489,2],[1330,5,1489,3],[1330,11,1489,9],[1331,6,1490,4],[1331,10,1490,8,"input"],[1331,15,1490,13],[1331,16,1490,14,"nonWitnessUtxo"],[1331,30,1490,28],[1331,32,1490,30],[1332,8,1491,6],[1332,12,1491,12,"nonWitnessUtxoTx"],[1332,28,1491,28],[1332,31,1491,31,"nonWitnessUtxoTxFromCache"],[1332,56,1491,56],[1332,57,1492,8,"cache"],[1332,62,1492,13],[1332,64,1493,8,"input"],[1332,69,1493,13],[1332,71,1494,8,"inputIndex"],[1332,81,1495,6],[1332,82,1495,7],[1333,8,1496,6],[1333,12,1496,12,"prevoutIndex"],[1333,24,1496,24],[1333,27,1496,27,"unsignedTx"],[1333,37,1496,37],[1333,38,1496,38,"ins"],[1333,41,1496,41],[1333,42,1496,42,"inputIndex"],[1333,52,1496,52],[1333,53,1496,53],[1333,54,1496,54,"index"],[1333,59,1496,59],[1334,8,1497,6,"res"],[1334,11,1497,9],[1334,12,1497,10,"script"],[1334,18,1497,16],[1334,21,1497,19,"nonWitnessUtxoTx"],[1334,37,1497,35],[1334,38,1497,36,"outs"],[1334,42,1497,40],[1334,43,1497,41,"prevoutIndex"],[1334,55,1497,53],[1334,56,1497,54],[1334,57,1497,55,"script"],[1334,63,1497,61],[1335,6,1498,4],[1335,7,1498,5],[1335,13,1498,11],[1335,17,1498,15,"input"],[1335,22,1498,20],[1335,23,1498,21,"witnessUtxo"],[1335,34,1498,32],[1335,36,1498,34],[1336,8,1499,6,"res"],[1336,11,1499,9],[1336,12,1499,10,"script"],[1336,18,1499,16],[1336,21,1499,19,"input"],[1336,26,1499,24],[1336,27,1499,25,"witnessUtxo"],[1336,38,1499,36],[1336,39,1499,37,"script"],[1336,45,1499,43],[1337,6,1500,4],[1338,4,1501,2],[1339,4,1502,2],[1339,8,1502,6,"input"],[1339,13,1502,11],[1339,14,1502,12,"witnessScript"],[1339,27,1502,25],[1339,31,1502,29],[1339,32,1502,30],[1339,33,1502,31],[1339,35,1502,33,"_$$_REQUIRE"],[1339,46,1502,33],[1339,47,1502,33,"_dependencyMap"],[1339,61,1502,33],[1339,91,1502,48,"isP2WPKH"],[1339,99,1502,56],[1339,101,1502,58,"res"],[1339,104,1502,61],[1339,105,1502,62,"script"],[1339,111,1502,68],[1339,112,1502,69],[1339,114,1502,71],[1340,6,1503,4,"res"],[1340,9,1503,7],[1340,10,1503,8,"isSegwit"],[1340,18,1503,16],[1340,21,1503,19],[1340,25,1503,23],[1341,4,1504,2],[1342,4,1505,2],[1342,11,1505,9,"res"],[1342,14,1505,12],[1343,2,1506,0],[1344,2,1507,0],[1344,11,1507,9,"getSignersFromHD"],[1344,27,1507,25,"getSignersFromHD"],[1344,28,1507,26,"inputIndex"],[1344,38,1507,36],[1344,40,1507,38,"inputs"],[1344,46,1507,44],[1344,48,1507,46,"hdKeyPair"],[1344,57,1507,55],[1344,59,1507,57],[1345,4,1508,2],[1345,8,1508,8,"input"],[1345,13,1508,13],[1345,16,1508,16],[1345,17,1508,17],[1345,18,1508,18],[1345,20,1508,20,"_$$_REQUIRE"],[1345,31,1508,20],[1345,32,1508,20,"_dependencyMap"],[1345,46,1508,20],[1345,62,1508,29,"checkForInput"],[1345,75,1508,42],[1345,77,1508,44,"inputs"],[1345,83,1508,50],[1345,85,1508,52,"inputIndex"],[1345,95,1508,62],[1345,96,1508,63],[1346,4,1509,2],[1346,8,1509,6],[1346,9,1509,7,"input"],[1346,14,1509,12],[1346,15,1509,13,"bip32Derivation"],[1346,30,1509,28],[1346,34,1509,32,"input"],[1346,39,1509,37],[1346,40,1509,38,"bip32Derivation"],[1346,55,1509,53],[1346,56,1509,54,"length"],[1346,62,1509,60],[1346,67,1509,65],[1346,68,1509,66],[1346,70,1509,68],[1347,6,1510,4],[1347,12,1510,10],[1347,16,1510,14,"Error"],[1347,21,1510,19],[1347,22,1510,20],[1347,60,1510,58],[1347,61,1510,59],[1348,4,1511,2],[1349,4,1512,2],[1349,8,1512,8,"myDerivations"],[1349,21,1512,21],[1349,24,1512,24,"input"],[1349,29,1512,29],[1349,30,1512,30,"bip32Derivation"],[1349,45,1512,45],[1349,46,1513,5,"map"],[1349,49,1513,8],[1349,50,1513,9],[1349,60,1513,9,"bipDv"],[1349,65,1513,14],[1349,67,1513,18],[1350,6,1514,6],[1350,10,1514,10,"tools"],[1350,15,1514,15],[1350,16,1514,16,"compare"],[1350,23,1514,23],[1350,24,1514,24,"bipDv"],[1350,29,1514,29],[1350,30,1514,30,"masterFingerprint"],[1350,47,1514,47],[1350,49,1514,49,"hdKeyPair"],[1350,58,1514,58],[1350,59,1514,59,"fingerprint"],[1350,70,1514,70],[1350,71,1514,71],[1350,76,1514,76],[1350,77,1514,77],[1350,79,1514,79],[1351,8,1515,8],[1351,15,1515,15,"bipDv"],[1351,20,1515,20],[1352,6,1516,6],[1352,7,1516,7],[1352,13,1516,13],[1353,8,1517,8],[1354,6,1518,6],[1355,4,1519,4],[1355,5,1519,5],[1355,6,1519,6],[1355,7,1520,5,"filter"],[1355,13,1520,11],[1355,14,1520,12],[1355,24,1520,12,"v"],[1355,25,1520,13],[1356,6,1520,13],[1356,13,1520,17],[1356,14,1520,18],[1356,15,1520,19,"v"],[1356,16,1520,20],[1357,4,1520,20],[1357,6,1520,21],[1358,4,1521,2],[1358,8,1521,6,"myDerivations"],[1358,21,1521,19],[1358,22,1521,20,"length"],[1358,28,1521,26],[1358,33,1521,31],[1358,34,1521,32],[1358,36,1521,34],[1359,6,1522,4],[1359,12,1522,10],[1359,16,1522,14,"Error"],[1359,21,1522,19],[1359,22,1523,6],[1359,100,1524,4],[1359,101,1524,5],[1360,4,1525,2],[1361,4,1526,2],[1361,8,1526,8,"signers"],[1361,15,1526,15],[1361,18,1526,18,"myDerivations"],[1361,31,1526,31],[1361,32,1526,32,"map"],[1361,35,1526,35],[1361,36,1526,36],[1361,46,1526,36,"bipDv"],[1361,51,1526,41],[1361,53,1526,45],[1362,6,1527,4],[1362,10,1527,10,"node"],[1362,14,1527,14],[1362,17,1527,17,"hdKeyPair"],[1362,26,1527,26],[1362,27,1527,27,"derivePath"],[1362,37,1527,37],[1362,38,1527,38,"bipDv"],[1362,43,1527,43],[1362,44,1527,44,"path"],[1362,48,1527,48],[1362,49,1527,49],[1363,6,1528,4],[1363,10,1528,8,"tools"],[1363,15,1528,13],[1363,16,1528,14,"compare"],[1363,23,1528,21],[1363,24,1528,22,"bipDv"],[1363,29,1528,27],[1363,30,1528,28,"pubkey"],[1363,36,1528,34],[1363,38,1528,36,"node"],[1363,42,1528,40],[1363,43,1528,41,"publicKey"],[1363,52,1528,50],[1363,53,1528,51],[1363,58,1528,56],[1363,59,1528,57],[1363,61,1528,59],[1364,8,1529,6],[1364,14,1529,12],[1364,18,1529,16,"Error"],[1364,23,1529,21],[1364,24,1529,22],[1364,62,1529,60],[1364,63,1529,61],[1365,6,1530,4],[1366,6,1531,4],[1366,13,1531,11,"node"],[1366,17,1531,15],[1367,4,1532,2],[1367,5,1532,3],[1367,6,1532,4],[1368,4,1533,2],[1368,11,1533,9,"signers"],[1368,18,1533,16],[1369,2,1534,0],[1370,2,1535,0],[1370,11,1535,9,"getSortedSigs"],[1370,24,1535,22,"getSortedSigs"],[1370,25,1535,23,"script"],[1370,31,1535,29],[1370,33,1535,31,"partialSig"],[1370,43,1535,41],[1370,45,1535,43],[1371,4,1536,2],[1371,8,1536,8,"p2ms"],[1371,12,1536,12],[1371,15,1536,15,"payments"],[1371,23,1536,23],[1371,24,1536,24,"p2ms"],[1371,28,1536,28],[1371,29,1536,29],[1372,6,1536,31,"output"],[1372,12,1536,37],[1372,14,1536,39,"script"],[1373,4,1536,46],[1373,5,1536,47],[1373,6,1536,48],[1374,4,1537,2],[1375,4,1538,2],[1375,11,1538,9,"p2ms"],[1375,15,1538,13],[1375,16,1538,14,"pubkeys"],[1375,23,1538,21],[1375,24,1539,5,"map"],[1375,27,1539,8],[1375,28,1539,9],[1375,38,1539,9,"pk"],[1375,40,1539,11],[1375,42,1539,15],[1376,6,1540,6],[1377,6,1541,6],[1377,13,1541,13],[1377,14,1542,8,"partialSig"],[1377,24,1542,18],[1377,25,1542,19,"filter"],[1377,31,1542,25],[1377,32,1542,26],[1377,42,1542,26,"ps"],[1377,44,1542,28],[1377,46,1542,32],[1378,8,1543,10],[1378,15,1543,17,"tools"],[1378,20,1543,22],[1378,21,1543,23,"compare"],[1378,28,1543,30],[1378,29,1543,31,"ps"],[1378,31,1543,33],[1378,32,1543,34,"pubkey"],[1378,38,1543,40],[1378,40,1543,42,"pk"],[1378,42,1543,44],[1378,43,1543,45],[1378,48,1543,50],[1378,49,1543,51],[1379,6,1544,8],[1379,7,1544,9],[1379,8,1544,10],[1379,9,1544,11],[1379,10,1544,12],[1379,11,1544,13],[1379,15,1544,17],[1379,16,1544,18],[1379,17,1544,19],[1379,19,1545,8,"signature"],[1379,28,1545,17],[1380,6,1546,6],[1381,6,1547,6],[1382,4,1548,4],[1382,5,1548,5],[1382,6,1548,6],[1382,7,1549,5,"filter"],[1382,13,1549,11],[1382,14,1549,12],[1382,24,1549,12,"v"],[1382,25,1549,13],[1383,6,1549,13],[1383,13,1549,17],[1383,14,1549,18],[1383,15,1549,19,"v"],[1383,16,1549,20],[1384,4,1549,20],[1384,6,1549,21],[1385,2,1550,0],[1386,2,1551,0],[1386,11,1551,9,"scriptWitnessToWitnessStack"],[1386,38,1551,36,"scriptWitnessToWitnessStack"],[1386,39,1551,37,"buffer"],[1386,45,1551,43],[1386,47,1551,45],[1387,4,1552,2],[1387,8,1552,6,"offset"],[1387,14,1552,12],[1387,17,1552,15],[1387,18,1552,16],[1388,4,1553,2],[1388,13,1553,11,"readSlice"],[1388,22,1553,20,"readSlice"],[1388,23,1553,21,"n"],[1388,24,1553,22],[1388,26,1553,24],[1389,6,1554,4,"offset"],[1389,12,1554,10],[1389,16,1554,14,"n"],[1389,17,1554,15],[1390,6,1555,4],[1390,13,1555,11,"buffer"],[1390,19,1555,17],[1390,20,1555,18,"slice"],[1390,25,1555,23],[1390,26,1555,24,"offset"],[1390,32,1555,30],[1390,35,1555,33,"n"],[1390,36,1555,34],[1390,38,1555,36,"offset"],[1390,44,1555,42],[1390,45,1555,43],[1391,4,1556,2],[1392,4,1557,2],[1392,13,1557,11,"readVarInt"],[1392,23,1557,21,"readVarInt"],[1392,24,1557,21],[1392,26,1557,24],[1393,6,1558,4],[1393,10,1558,10,"vi"],[1393,12,1558,12],[1393,15,1558,15,"varuint"],[1393,22,1558,22],[1393,23,1558,23,"decode"],[1393,29,1558,29],[1393,30,1558,30,"buffer"],[1393,36,1558,36],[1393,38,1558,38,"offset"],[1393,44,1558,44],[1393,45,1558,45],[1394,6,1559,4,"offset"],[1394,12,1559,10],[1394,16,1559,14,"varuint"],[1394,23,1559,21],[1394,24,1559,22,"encodingLength"],[1394,38,1559,36],[1394,39,1559,37,"vi"],[1394,41,1559,39],[1394,42,1559,40,"bigintValue"],[1394,53,1559,51],[1394,54,1559,52],[1395,6,1560,4],[1395,13,1560,11,"vi"],[1395,15,1560,13],[1395,16,1560,14,"numberValue"],[1395,27,1560,25],[1396,4,1561,2],[1397,4,1562,2],[1397,13,1562,11,"readVarSlice"],[1397,25,1562,23,"readVarSlice"],[1397,26,1562,23],[1397,28,1562,26],[1398,6,1563,4],[1398,13,1563,11,"readSlice"],[1398,22,1563,20],[1398,23,1563,21,"readVarInt"],[1398,33,1563,31],[1398,34,1563,32],[1398,35,1563,33],[1398,36,1563,34],[1399,4,1564,2],[1400,4,1565,2],[1400,13,1565,11,"readVector"],[1400,23,1565,21,"readVector"],[1400,24,1565,21],[1400,26,1565,24],[1401,6,1566,4],[1401,10,1566,10,"count"],[1401,15,1566,15],[1401,18,1566,18,"readVarInt"],[1401,28,1566,28],[1401,29,1566,29],[1401,30,1566,30],[1402,6,1567,4],[1402,10,1567,10,"vector"],[1402,16,1567,16],[1402,19,1567,19],[1402,21,1567,21],[1403,6,1568,4],[1403,11,1568,9],[1403,15,1568,13,"i"],[1403,16,1568,14],[1403,19,1568,17],[1403,20,1568,18],[1403,22,1568,20,"i"],[1403,23,1568,21],[1403,26,1568,24,"count"],[1403,31,1568,29],[1403,33,1568,31,"i"],[1403,34,1568,32],[1403,36,1568,34],[1403,38,1568,36,"vector"],[1403,44,1568,42],[1403,45,1568,43,"push"],[1403,49,1568,47],[1403,50,1568,48,"readVarSlice"],[1403,62,1568,60],[1403,63,1568,61],[1403,64,1568,62],[1403,65,1568,63],[1404,6,1569,4],[1404,13,1569,11,"vector"],[1404,19,1569,17],[1405,4,1570,2],[1406,4,1571,2],[1406,11,1571,9,"readVector"],[1406,21,1571,19],[1406,22,1571,20],[1406,23,1571,21],[1407,2,1572,0],[1408,2,1573,0],[1408,11,1573,9,"sighashTypeToString"],[1408,30,1573,28,"sighashTypeToString"],[1408,31,1573,29,"sighashType"],[1408,42,1573,40],[1408,44,1573,42],[1409,4,1574,2],[1409,8,1574,6,"text"],[1409,12,1574,10],[1409,15,1575,4,"sighashType"],[1409,26,1575,15],[1409,29,1575,18,"_$$_REQUIRE"],[1409,40,1575,18],[1409,41,1575,18,"_dependencyMap"],[1409,55,1575,18],[1409,82,1575,35,"Transaction"],[1409,93,1575,46],[1409,94,1575,47,"SIGHASH_ANYONECANPAY"],[1409,114,1575,67],[1409,117,1576,8],[1409,142,1576,33],[1409,145,1577,8],[1409,147,1577,10],[1410,4,1578,2],[1410,8,1578,8,"sigMod"],[1410,14,1578,14],[1410,17,1578,17,"sighashType"],[1410,28,1578,28],[1410,31,1578,31],[1410,35,1578,35],[1411,4,1579,2],[1411,12,1579,10,"sigMod"],[1411,18,1579,16],[1412,6,1580,4],[1412,11,1580,9,"_$$_REQUIRE"],[1412,22,1580,9],[1412,23,1580,9,"_dependencyMap"],[1412,37,1580,9],[1412,64,1580,26,"Transaction"],[1412,75,1580,37],[1412,76,1580,38,"SIGHASH_ALL"],[1412,87,1580,49],[1413,8,1581,6,"text"],[1413,12,1581,10],[1413,16,1581,14],[1413,29,1581,27],[1414,8,1582,6],[1415,6,1583,4],[1415,11,1583,9,"_$$_REQUIRE"],[1415,22,1583,9],[1415,23,1583,9,"_dependencyMap"],[1415,37,1583,9],[1415,64,1583,26,"Transaction"],[1415,75,1583,37],[1415,76,1583,38,"SIGHASH_SINGLE"],[1415,90,1583,52],[1416,8,1584,6,"text"],[1416,12,1584,10],[1416,16,1584,14],[1416,32,1584,30],[1417,8,1585,6],[1418,6,1586,4],[1418,11,1586,9,"_$$_REQUIRE"],[1418,22,1586,9],[1418,23,1586,9,"_dependencyMap"],[1418,37,1586,9],[1418,64,1586,26,"Transaction"],[1418,75,1586,37],[1418,76,1586,38,"SIGHASH_NONE"],[1418,88,1586,50],[1419,8,1587,6,"text"],[1419,12,1587,10],[1419,16,1587,14],[1419,30,1587,28],[1420,8,1588,6],[1421,4,1589,2],[1422,4,1590,2],[1422,11,1590,9,"text"],[1422,15,1590,13],[1423,2,1591,0],[1424,2,1592,0],[1424,11,1592,9,"addNonWitnessTxCache"],[1424,31,1592,29,"addNonWitnessTxCache"],[1424,32,1592,30,"cache"],[1424,37,1592,35],[1424,39,1592,37,"input"],[1424,44,1592,42],[1424,46,1592,44,"inputIndex"],[1424,56,1592,54],[1424,58,1592,56],[1425,4,1593,2,"cache"],[1425,9,1593,7],[1425,10,1593,8,"__NON_WITNESS_UTXO_BUF_CACHE"],[1425,38,1593,36],[1425,39,1593,37,"inputIndex"],[1425,49,1593,47],[1425,50,1593,48],[1425,53,1593,51,"input"],[1425,58,1593,56],[1425,59,1593,57,"nonWitnessUtxo"],[1425,73,1593,71],[1426,4,1594,2],[1426,8,1594,8,"tx"],[1426,10,1594,10],[1426,13,1594,13,"_$$_REQUIRE"],[1426,24,1594,13],[1426,25,1594,13,"_dependencyMap"],[1426,39,1594,13],[1426,66,1594,30,"Transaction"],[1426,77,1594,41],[1426,78,1594,42,"fromBuffer"],[1426,88,1594,52],[1426,89,1594,53,"input"],[1426,94,1594,58],[1426,95,1594,59,"nonWitnessUtxo"],[1426,109,1594,73],[1426,110,1594,74],[1427,4,1595,2,"cache"],[1427,9,1595,7],[1427,10,1595,8,"__NON_WITNESS_UTXO_TX_CACHE"],[1427,37,1595,35],[1427,38,1595,36,"inputIndex"],[1427,48,1595,46],[1427,49,1595,47],[1427,52,1595,50,"tx"],[1427,54,1595,52],[1428,4,1596,2],[1428,8,1596,8,"self"],[1428,12,1596,12],[1428,15,1596,15,"cache"],[1428,20,1596,20],[1429,4,1597,2],[1429,8,1597,8,"selfIndex"],[1429,17,1597,17],[1429,20,1597,20,"inputIndex"],[1429,30,1597,30],[1430,4,1598,2],[1430,11,1598,9,"input"],[1430,16,1598,14],[1430,17,1598,15,"nonWitnessUtxo"],[1430,31,1598,29],[1431,4,1599,2,"Object"],[1431,10,1599,8],[1431,11,1599,9,"defineProperty"],[1431,25,1599,23],[1431,26,1599,24,"input"],[1431,31,1599,29],[1431,33,1599,31],[1431,49,1599,47],[1431,51,1599,49],[1432,6,1600,4,"enumerable"],[1432,16,1600,14],[1432,18,1600,16],[1432,22,1600,20],[1433,6,1601,4,"get"],[1433,9,1601,7],[1433,20,1601,4,"get"],[1433,23,1601,7,"get"],[1433,24,1601,7],[1433,26,1601,10],[1434,8,1602,6],[1434,12,1602,12,"buf"],[1434,15,1602,15],[1434,18,1602,18,"self"],[1434,22,1602,22],[1434,23,1602,23,"__NON_WITNESS_UTXO_BUF_CACHE"],[1434,51,1602,51],[1434,52,1602,52,"selfIndex"],[1434,61,1602,61],[1434,62,1602,62],[1435,8,1603,6],[1435,12,1603,12,"txCache"],[1435,19,1603,19],[1435,22,1603,22,"self"],[1435,26,1603,26],[1435,27,1603,27,"__NON_WITNESS_UTXO_TX_CACHE"],[1435,54,1603,54],[1435,55,1603,55,"selfIndex"],[1435,64,1603,64],[1435,65,1603,65],[1436,8,1604,6],[1436,12,1604,10,"buf"],[1436,15,1604,13],[1436,20,1604,18,"undefined"],[1436,29,1604,27],[1436,31,1604,29],[1437,10,1605,8],[1437,17,1605,15,"buf"],[1437,20,1605,18],[1438,8,1606,6],[1438,9,1606,7],[1438,15,1606,13],[1439,10,1607,8],[1439,14,1607,14,"newBuf"],[1439,20,1607,20],[1439,23,1607,23,"txCache"],[1439,30,1607,30],[1439,31,1607,31,"toBuffer"],[1439,39,1607,39],[1439,40,1607,40],[1439,41,1607,41],[1440,10,1608,8,"self"],[1440,14,1608,12],[1440,15,1608,13,"__NON_WITNESS_UTXO_BUF_CACHE"],[1440,43,1608,41],[1440,44,1608,42,"selfIndex"],[1440,53,1608,51],[1440,54,1608,52],[1440,57,1608,55,"newBuf"],[1440,63,1608,61],[1441,10,1609,8],[1441,17,1609,15,"newBuf"],[1441,23,1609,21],[1442,8,1610,6],[1443,6,1611,4],[1443,7,1611,5],[1444,6,1612,4,"set"],[1444,9,1612,7],[1444,20,1612,4,"set"],[1444,23,1612,7,"set"],[1444,24,1612,8,"data"],[1444,28,1612,12],[1444,30,1612,14],[1445,8,1613,6,"self"],[1445,12,1613,10],[1445,13,1613,11,"__NON_WITNESS_UTXO_BUF_CACHE"],[1445,41,1613,39],[1445,42,1613,40,"selfIndex"],[1445,51,1613,49],[1445,52,1613,50],[1445,55,1613,53,"data"],[1445,59,1613,57],[1446,6,1614,4],[1447,4,1615,2],[1447,5,1615,3],[1447,6,1615,4],[1448,2,1616,0],[1449,2,1617,0],[1449,11,1617,9,"inputFinalizeGetAmts"],[1449,31,1617,29,"inputFinalizeGetAmts"],[1449,32,1617,30,"inputs"],[1449,38,1617,36],[1449,40,1617,38,"tx"],[1449,42,1617,40],[1449,44,1617,42,"cache"],[1449,49,1617,47],[1449,51,1617,49,"mustFinalize"],[1449,63,1617,61],[1449,65,1617,63],[1450,4,1618,2],[1450,8,1618,6,"inputAmount"],[1450,19,1618,17],[1450,22,1618,20],[1450,24,1618,22],[1451,4,1619,2,"inputs"],[1451,10,1619,8],[1451,11,1619,9,"forEach"],[1451,18,1619,16],[1451,19,1619,17],[1451,29,1619,18,"input"],[1451,34,1619,23],[1451,36,1619,25,"idx"],[1451,39,1619,28],[1451,41,1619,33],[1452,6,1620,4],[1452,10,1620,8,"mustFinalize"],[1452,22,1620,20],[1452,26,1620,24,"input"],[1452,31,1620,29],[1452,32,1620,30,"finalScriptSig"],[1452,46,1620,44],[1452,48,1621,6,"tx"],[1452,50,1621,8],[1452,51,1621,9,"ins"],[1452,54,1621,12],[1452,55,1621,13,"idx"],[1452,58,1621,16],[1452,59,1621,17],[1452,60,1621,18,"script"],[1452,66,1621,24],[1452,69,1621,27,"input"],[1452,74,1621,32],[1452,75,1621,33,"finalScriptSig"],[1452,89,1621,47],[1453,6,1622,4],[1453,10,1622,8,"mustFinalize"],[1453,22,1622,20],[1453,26,1622,24,"input"],[1453,31,1622,29],[1453,32,1622,30,"finalScriptWitness"],[1453,50,1622,48],[1453,52,1622,50],[1454,8,1623,6,"tx"],[1454,10,1623,8],[1454,11,1623,9,"ins"],[1454,14,1623,12],[1454,15,1623,13,"idx"],[1454,18,1623,16],[1454,19,1623,17],[1454,20,1623,18,"witness"],[1454,27,1623,25],[1454,30,1623,28,"scriptWitnessToWitnessStack"],[1454,57,1623,55],[1454,58,1624,8,"input"],[1454,63,1624,13],[1454,64,1624,14,"finalScriptWitness"],[1454,82,1625,6],[1454,83,1625,7],[1455,6,1626,4],[1456,6,1627,4],[1456,10,1627,8,"input"],[1456,15,1627,13],[1456,16,1627,14,"witnessUtxo"],[1456,27,1627,25],[1456,29,1627,27],[1457,8,1628,6,"inputAmount"],[1457,19,1628,17],[1457,23,1628,21,"input"],[1457,28,1628,26],[1457,29,1628,27,"witnessUtxo"],[1457,40,1628,38],[1457,41,1628,39,"value"],[1457,46,1628,44],[1458,6,1629,4],[1458,7,1629,5],[1458,13,1629,11],[1458,17,1629,15,"input"],[1458,22,1629,20],[1458,23,1629,21,"nonWitnessUtxo"],[1458,37,1629,35],[1458,39,1629,37],[1459,8,1630,6],[1459,12,1630,12,"nwTx"],[1459,16,1630,16],[1459,19,1630,19,"nonWitnessUtxoTxFromCache"],[1459,44,1630,44],[1459,45,1630,45,"cache"],[1459,50,1630,50],[1459,52,1630,52,"input"],[1459,57,1630,57],[1459,59,1630,59,"idx"],[1459,62,1630,62],[1459,63,1630,63],[1460,8,1631,6],[1460,12,1631,12,"vout"],[1460,16,1631,16],[1460,19,1631,19,"tx"],[1460,21,1631,21],[1460,22,1631,22,"ins"],[1460,25,1631,25],[1460,26,1631,26,"idx"],[1460,29,1631,29],[1460,30,1631,30],[1460,31,1631,31,"index"],[1460,36,1631,36],[1461,8,1632,6],[1461,12,1632,12,"out"],[1461,15,1632,15],[1461,18,1632,18,"nwTx"],[1461,22,1632,22],[1461,23,1632,23,"outs"],[1461,27,1632,27],[1461,28,1632,28,"vout"],[1461,32,1632,32],[1461,33,1632,33],[1462,8,1633,6,"inputAmount"],[1462,19,1633,17],[1462,23,1633,21,"out"],[1462,26,1633,24],[1462,27,1633,25,"value"],[1462,32,1633,30],[1463,6,1634,4],[1464,4,1635,2],[1464,5,1635,3],[1464,6,1635,4],[1465,4,1636,2],[1465,8,1636,8,"outputAmount"],[1465,20,1636,20],[1465,23,1636,23,"tx"],[1465,25,1636,25],[1465,26,1636,26,"outs"],[1465,30,1636,30],[1465,31,1636,31,"reduce"],[1465,37,1636,37],[1465,38,1636,38],[1465,48,1636,39,"total"],[1465,53,1636,44],[1465,55,1636,46,"o"],[1465,56,1636,47],[1466,6,1636,47],[1466,13,1636,52,"total"],[1466,18,1636,57],[1466,21,1636,60,"o"],[1466,22,1636,61],[1466,23,1636,62,"value"],[1466,28,1636,67],[1467,4,1636,67],[1467,7,1636,69],[1467,9,1636,71],[1467,10,1636,72],[1468,4,1637,2],[1468,8,1637,8,"fee"],[1468,11,1637,11],[1468,14,1637,14,"inputAmount"],[1468,25,1637,25],[1468,28,1637,28,"outputAmount"],[1468,40,1637,40],[1469,4,1638,2],[1469,8,1638,6,"fee"],[1469,11,1638,9],[1469,14,1638,12],[1469,15,1638,13],[1469,17,1638,15],[1470,6,1639,4],[1470,12,1639,10],[1470,16,1639,14,"Error"],[1470,21,1639,19],[1470,22,1639,20],[1470,61,1639,59],[1470,62,1639,60],[1471,4,1640,2],[1472,4,1641,2],[1472,8,1641,8,"bytes"],[1472,13,1641,13],[1472,16,1641,16,"tx"],[1472,18,1641,18],[1472,19,1641,19,"virtualSize"],[1472,30,1641,30],[1472,31,1641,31],[1472,32,1641,32],[1473,4,1642,2,"cache"],[1473,9,1642,7],[1473,10,1642,8,"__FEE"],[1473,15,1642,13],[1473,18,1642,16,"fee"],[1473,21,1642,19],[1474,4,1643,2,"cache"],[1474,9,1643,7],[1474,10,1643,8,"__EXTRACTED_TX"],[1474,24,1643,22],[1474,27,1643,25,"tx"],[1474,29,1643,27],[1475,4,1644,2,"cache"],[1475,9,1644,7],[1475,10,1644,8,"__FEE_RATE"],[1475,20,1644,18],[1475,23,1644,21,"Math"],[1475,27,1644,25],[1475,28,1644,26,"floor"],[1475,33,1644,31],[1475,34,1644,32,"Number"],[1475,40,1644,38],[1475,41,1644,39,"fee"],[1475,44,1644,42],[1475,47,1644,45,"BigInt"],[1475,53,1644,51],[1475,54,1644,52,"bytes"],[1475,59,1644,57],[1475,60,1644,58],[1475,61,1644,59],[1475,62,1644,60],[1476,2,1645,0],[1477,2,1646,0],[1477,11,1646,9,"nonWitnessUtxoTxFromCache"],[1477,36,1646,34,"nonWitnessUtxoTxFromCache"],[1477,37,1646,35,"cache"],[1477,42,1646,40],[1477,44,1646,42,"input"],[1477,49,1646,47],[1477,51,1646,49,"inputIndex"],[1477,61,1646,59],[1477,63,1646,61],[1478,4,1647,2],[1478,8,1647,8,"c"],[1478,9,1647,9],[1478,12,1647,12,"cache"],[1478,17,1647,17],[1478,18,1647,18,"__NON_WITNESS_UTXO_TX_CACHE"],[1478,45,1647,45],[1479,4,1648,2],[1479,8,1648,6],[1479,9,1648,7,"c"],[1479,10,1648,8],[1479,11,1648,9,"inputIndex"],[1479,21,1648,19],[1479,22,1648,20],[1479,24,1648,22],[1480,6,1649,4,"addNonWitnessTxCache"],[1480,26,1649,24],[1480,27,1649,25,"cache"],[1480,32,1649,30],[1480,34,1649,32,"input"],[1480,39,1649,37],[1480,41,1649,39,"inputIndex"],[1480,51,1649,49],[1480,52,1649,50],[1481,4,1650,2],[1482,4,1651,2],[1482,11,1651,9,"c"],[1482,12,1651,10],[1482,13,1651,11,"inputIndex"],[1482,23,1651,21],[1482,24,1651,22],[1483,2,1652,0],[1484,2,1653,0],[1484,11,1653,9,"getScriptFromUtxo"],[1484,28,1653,26,"getScriptFromUtxo"],[1484,29,1653,27,"inputIndex"],[1484,39,1653,37],[1484,41,1653,39,"input"],[1484,46,1653,44],[1484,48,1653,46,"cache"],[1484,53,1653,51],[1484,55,1653,53],[1485,4,1654,2],[1485,8,1654,2,"_getScriptAndAmountFr2"],[1485,30,1654,2],[1485,33,1654,21,"getScriptAndAmountFromUtxo"],[1485,59,1654,47],[1485,60,1654,48,"inputIndex"],[1485,70,1654,58],[1485,72,1654,60,"input"],[1485,77,1654,65],[1485,79,1654,67,"cache"],[1485,84,1654,72],[1485,85,1654,73],[1486,6,1654,10,"script"],[1486,12,1654,16],[1486,15,1654,16,"_getScriptAndAmountFr2"],[1486,37,1654,16],[1486,38,1654,10,"script"],[1486,44,1654,16],[1487,4,1655,2],[1487,11,1655,9,"script"],[1487,17,1655,15],[1488,2,1656,0],[1489,2,1657,0],[1489,11,1657,9,"getScriptAndAmountFromUtxo"],[1489,37,1657,35,"getScriptAndAmountFromUtxo"],[1489,38,1657,36,"inputIndex"],[1489,48,1657,46],[1489,50,1657,48,"input"],[1489,55,1657,53],[1489,57,1657,55,"cache"],[1489,62,1657,60],[1489,64,1657,62],[1490,4,1658,2],[1490,8,1658,6,"input"],[1490,13,1658,11],[1490,14,1658,12,"witnessUtxo"],[1490,25,1658,23],[1490,30,1658,28,"undefined"],[1490,39,1658,37],[1490,41,1658,39],[1491,6,1659,4],[1491,13,1659,11],[1492,8,1660,6,"script"],[1492,14,1660,12],[1492,16,1660,14,"input"],[1492,21,1660,19],[1492,22,1660,20,"witnessUtxo"],[1492,33,1660,31],[1492,34,1660,32,"script"],[1492,40,1660,38],[1493,8,1661,6,"value"],[1493,13,1661,11],[1493,15,1661,13,"input"],[1493,20,1661,18],[1493,21,1661,19,"witnessUtxo"],[1493,32,1661,30],[1493,33,1661,31,"value"],[1494,6,1662,4],[1494,7,1662,5],[1495,4,1663,2],[1495,5,1663,3],[1495,11,1663,9],[1495,15,1663,13,"input"],[1495,20,1663,18],[1495,21,1663,19,"nonWitnessUtxo"],[1495,35,1663,33],[1495,40,1663,38,"undefined"],[1495,49,1663,47],[1495,51,1663,49],[1496,6,1664,4],[1496,10,1664,10,"nonWitnessUtxoTx"],[1496,26,1664,26],[1496,29,1664,29,"nonWitnessUtxoTxFromCache"],[1496,54,1664,54],[1496,55,1665,6,"cache"],[1496,60,1665,11],[1496,62,1666,6,"input"],[1496,67,1666,11],[1496,69,1667,6,"inputIndex"],[1496,79,1668,4],[1496,80,1668,5],[1497,6,1669,4],[1497,10,1669,10,"o"],[1497,11,1669,11],[1497,14,1669,14,"nonWitnessUtxoTx"],[1497,30,1669,30],[1497,31,1669,31,"outs"],[1497,35,1669,35],[1497,36,1669,36,"cache"],[1497,41,1669,41],[1497,42,1669,42,"__TX"],[1497,46,1669,46],[1497,47,1669,47,"ins"],[1497,50,1669,50],[1497,51,1669,51,"inputIndex"],[1497,61,1669,61],[1497,62,1669,62],[1497,63,1669,63,"index"],[1497,68,1669,68],[1497,69,1669,69],[1498,6,1670,4],[1498,13,1670,11],[1499,8,1670,13,"script"],[1499,14,1670,19],[1499,16,1670,21,"o"],[1499,17,1670,22],[1499,18,1670,23,"script"],[1499,24,1670,29],[1500,8,1670,31,"value"],[1500,13,1670,36],[1500,15,1670,38,"o"],[1500,16,1670,39],[1500,17,1670,40,"value"],[1501,6,1670,46],[1501,7,1670,47],[1502,4,1671,2],[1502,5,1671,3],[1502,11,1671,9],[1503,6,1672,4],[1503,12,1672,10],[1503,16,1672,14,"Error"],[1503,21,1672,19],[1503,22,1672,20],[1503,68,1672,66],[1503,69,1672,67],[1504,4,1673,2],[1505,2,1674,0],[1506,2,1675,0],[1506,11,1675,9,"pubkeyInInput"],[1506,24,1675,22,"pubkeyInInput"],[1506,25,1675,23,"pubkey"],[1506,31,1675,29],[1506,33,1675,31,"input"],[1506,38,1675,36],[1506,40,1675,38,"inputIndex"],[1506,50,1675,48],[1506,52,1675,50,"cache"],[1506,57,1675,55],[1506,59,1675,57],[1507,4,1676,2],[1507,8,1676,8,"script"],[1507,14,1676,14],[1507,17,1676,17,"getScriptFromUtxo"],[1507,34,1676,34],[1507,35,1676,35,"inputIndex"],[1507,45,1676,45],[1507,47,1676,47,"input"],[1507,52,1676,52],[1507,54,1676,54,"cache"],[1507,59,1676,59],[1507,60,1676,60],[1508,4,1677,2],[1508,8,1677,2,"_getMeaningfulScript2"],[1508,29,1677,2],[1508,32,1677,31,"getMeaningfulScript"],[1508,51,1677,50],[1508,52,1678,4,"script"],[1508,58,1678,10],[1508,60,1679,4,"inputIndex"],[1508,70,1679,14],[1508,72,1680,4],[1508,79,1680,11],[1508,81,1681,4,"input"],[1508,86,1681,9],[1508,87,1681,10,"redeemScript"],[1508,99,1681,22],[1508,101,1682,4,"input"],[1508,106,1682,9],[1508,107,1682,10,"witnessScript"],[1508,120,1683,2],[1508,121,1683,3],[1509,6,1677,10,"meaningfulScript"],[1509,22,1677,26],[1509,25,1677,26,"_getMeaningfulScript2"],[1509,46,1677,26],[1509,47,1677,10,"meaningfulScript"],[1509,63,1677,26],[1510,4,1684,2],[1510,11,1684,9],[1510,12,1684,10],[1510,13,1684,11],[1510,15,1684,13,"_$$_REQUIRE"],[1510,26,1684,13],[1510,27,1684,13,"_dependencyMap"],[1510,41,1684,13],[1510,71,1684,28,"pubkeyInScript"],[1510,85,1684,42],[1510,87,1684,44,"pubkey"],[1510,93,1684,50],[1510,95,1684,52,"meaningfulScript"],[1510,111,1684,68],[1510,112,1684,69],[1511,2,1685,0],[1512,2,1686,0],[1512,11,1686,9,"pubkeyInOutput"],[1512,25,1686,23,"pubkeyInOutput"],[1512,26,1686,24,"pubkey"],[1512,32,1686,30],[1512,34,1686,32,"output"],[1512,40,1686,38],[1512,42,1686,40,"outputIndex"],[1512,53,1686,51],[1512,55,1686,53,"cache"],[1512,60,1686,58],[1512,62,1686,60],[1513,4,1687,2],[1513,8,1687,8,"script"],[1513,14,1687,14],[1513,17,1687,17,"cache"],[1513,22,1687,22],[1513,23,1687,23,"__TX"],[1513,27,1687,27],[1513,28,1687,28,"outs"],[1513,32,1687,32],[1513,33,1687,33,"outputIndex"],[1513,44,1687,44],[1513,45,1687,45],[1513,46,1687,46,"script"],[1513,52,1687,52],[1514,4,1688,2],[1514,8,1688,2,"_getMeaningfulScript3"],[1514,29,1688,2],[1514,32,1688,31,"getMeaningfulScript"],[1514,51,1688,50],[1514,52,1689,4,"script"],[1514,58,1689,10],[1514,60,1690,4,"outputIndex"],[1514,71,1690,15],[1514,73,1691,4],[1514,81,1691,12],[1514,83,1692,4,"output"],[1514,89,1692,10],[1514,90,1692,11,"redeemScript"],[1514,102,1692,23],[1514,104,1693,4,"output"],[1514,110,1693,10],[1514,111,1693,11,"witnessScript"],[1514,124,1694,2],[1514,125,1694,3],[1515,6,1688,10,"meaningfulScript"],[1515,22,1688,26],[1515,25,1688,26,"_getMeaningfulScript3"],[1515,46,1688,26],[1515,47,1688,10,"meaningfulScript"],[1515,63,1688,26],[1516,4,1695,2],[1516,11,1695,9],[1516,12,1695,10],[1516,13,1695,11],[1516,15,1695,13,"_$$_REQUIRE"],[1516,26,1695,13],[1516,27,1695,13,"_dependencyMap"],[1516,41,1695,13],[1516,71,1695,28,"pubkeyInScript"],[1516,85,1695,42],[1516,87,1695,44,"pubkey"],[1516,93,1695,50],[1516,95,1695,52,"meaningfulScript"],[1516,111,1695,68],[1516,112,1695,69],[1517,2,1696,0],[1518,2,1697,0],[1518,11,1697,9,"redeemFromFinalScriptSig"],[1518,35,1697,33,"redeemFromFinalScriptSig"],[1518,36,1697,34,"finalScript"],[1518,47,1697,45],[1518,49,1697,47],[1519,4,1698,2],[1519,8,1698,6],[1519,9,1698,7,"finalScript"],[1519,20,1698,18],[1519,22,1698,20],[1520,4,1699,2],[1520,8,1699,8,"decomp"],[1520,14,1699,14],[1520,17,1699,17,"bscript"],[1520,24,1699,24],[1520,25,1699,25,"decompile"],[1520,34,1699,34],[1520,35,1699,35,"finalScript"],[1520,46,1699,46],[1520,47,1699,47],[1521,4,1700,2],[1521,8,1700,6],[1521,9,1700,7,"decomp"],[1521,15,1700,13],[1521,17,1700,15],[1522,4,1701,2],[1522,8,1701,8,"lastItem"],[1522,16,1701,16],[1522,19,1701,19,"decomp"],[1522,25,1701,25],[1522,26,1701,26,"decomp"],[1522,32,1701,32],[1522,33,1701,33,"length"],[1522,39,1701,39],[1522,42,1701,42],[1522,43,1701,43],[1522,44,1701,44],[1523,4,1702,2],[1523,8,1703,4],[1523,10,1703,6,"lastItem"],[1523,18,1703,14],[1523,30,1703,26,"Uint8Array"],[1523,40,1703,36],[1523,41,1703,37],[1523,45,1704,4,"isPubkeyLike"],[1523,57,1704,16],[1523,58,1704,17,"lastItem"],[1523,66,1704,25],[1523,67,1704,26],[1523,71,1705,4,"isSigLike"],[1523,80,1705,13],[1523,81,1705,14,"lastItem"],[1523,89,1705,22],[1523,90,1705,23],[1523,92,1707,4],[1524,4,1708,2],[1524,8,1708,8,"sDecomp"],[1524,15,1708,15],[1524,18,1708,18,"bscript"],[1524,25,1708,25],[1524,26,1708,26,"decompile"],[1524,35,1708,35],[1524,36,1708,36,"lastItem"],[1524,44,1708,44],[1524,45,1708,45],[1525,4,1709,2],[1525,8,1709,6],[1525,9,1709,7,"sDecomp"],[1525,16,1709,14],[1525,18,1709,16],[1526,4,1710,2],[1526,11,1710,9,"lastItem"],[1526,19,1710,17],[1527,2,1711,0],[1528,2,1712,0],[1528,11,1712,9,"redeemFromFinalWitnessScript"],[1528,39,1712,37,"redeemFromFinalWitnessScript"],[1528,40,1712,38,"finalScript"],[1528,51,1712,49],[1528,53,1712,51],[1529,4,1713,2],[1529,8,1713,6],[1529,9,1713,7,"finalScript"],[1529,20,1713,18],[1529,22,1713,20],[1530,4,1714,2],[1530,8,1714,8,"decomp"],[1530,14,1714,14],[1530,17,1714,17,"scriptWitnessToWitnessStack"],[1530,44,1714,44],[1530,45,1714,45,"finalScript"],[1530,56,1714,56],[1530,57,1714,57],[1531,4,1715,2],[1531,8,1715,8,"lastItem"],[1531,16,1715,16],[1531,19,1715,19,"decomp"],[1531,25,1715,25],[1531,26,1715,26,"decomp"],[1531,32,1715,32],[1531,33,1715,33,"length"],[1531,39,1715,39],[1531,42,1715,42],[1531,43,1715,43],[1531,44,1715,44],[1532,4,1716,2],[1532,8,1716,6,"isPubkeyLike"],[1532,20,1716,18],[1532,21,1716,19,"lastItem"],[1532,29,1716,27],[1532,30,1716,28],[1532,32,1716,30],[1533,4,1717,2],[1533,8,1717,8,"sDecomp"],[1533,15,1717,15],[1533,18,1717,18,"bscript"],[1533,25,1717,25],[1533,26,1717,26,"decompile"],[1533,35,1717,35],[1533,36,1717,36,"lastItem"],[1533,44,1717,44],[1533,45,1717,45],[1534,4,1718,2],[1534,8,1718,6],[1534,9,1718,7,"sDecomp"],[1534,16,1718,14],[1534,18,1718,16],[1535,4,1719,2],[1535,11,1719,9,"lastItem"],[1535,19,1719,17],[1536,2,1720,0],[1537,2,1721,0],[1537,11,1721,9,"compressPubkey"],[1537,25,1721,23,"compressPubkey"],[1537,26,1721,24,"pubkey"],[1537,32,1721,30],[1537,34,1721,32],[1538,4,1722,2],[1538,8,1722,6,"pubkey"],[1538,14,1722,12],[1538,15,1722,13,"length"],[1538,21,1722,19],[1538,26,1722,24],[1538,28,1722,26],[1538,30,1722,28],[1539,6,1723,4],[1539,10,1723,10,"parity"],[1539,16,1723,16],[1539,19,1723,19,"pubkey"],[1539,25,1723,25],[1539,26,1723,26],[1539,28,1723,28],[1539,29,1723,29],[1539,32,1723,32],[1539,33,1723,33],[1540,6,1724,4],[1540,10,1724,10,"newKey"],[1540,16,1724,16],[1540,19,1724,19,"pubkey"],[1540,25,1724,25],[1540,26,1724,26,"slice"],[1540,31,1724,31],[1540,32,1724,32],[1540,33,1724,33],[1540,35,1724,35],[1540,37,1724,37],[1540,38,1724,38],[1541,6,1725,4,"newKey"],[1541,12,1725,10],[1541,13,1725,11],[1541,14,1725,12],[1541,15,1725,13],[1541,18,1725,16],[1541,19,1725,17],[1541,22,1725,20,"parity"],[1541,28,1725,26],[1542,6,1726,4],[1542,13,1726,11,"newKey"],[1542,19,1726,17],[1543,4,1727,2],[1544,4,1728,2],[1544,11,1728,9,"pubkey"],[1544,17,1728,15],[1544,18,1728,16,"slice"],[1544,23,1728,21],[1544,24,1728,22],[1544,25,1728,23],[1545,2,1729,0],[1546,2,1730,0],[1546,11,1730,9,"isPubkeyLike"],[1546,23,1730,21,"isPubkeyLike"],[1546,24,1730,22,"buf"],[1546,27,1730,25],[1546,29,1730,27],[1547,4,1731,2],[1547,11,1731,9,"buf"],[1547,14,1731,12],[1547,15,1731,13,"length"],[1547,21,1731,19],[1547,26,1731,24],[1547,28,1731,26],[1547,32,1731,30,"bscript"],[1547,39,1731,37],[1547,40,1731,38,"isCanonicalPubKey"],[1547,57,1731,55],[1547,58,1731,56,"buf"],[1547,61,1731,59],[1547,62,1731,60],[1548,2,1732,0],[1549,2,1733,0],[1549,11,1733,9,"isSigLike"],[1549,20,1733,18,"isSigLike"],[1549,21,1733,19,"buf"],[1549,24,1733,22],[1549,26,1733,24],[1550,4,1734,2],[1550,11,1734,9,"bscript"],[1550,18,1734,16],[1550,19,1734,17,"isCanonicalScriptSignature"],[1550,45,1734,43],[1550,46,1734,44,"buf"],[1550,49,1734,47],[1550,50,1734,48],[1551,2,1735,0],[1552,2,1736,0],[1552,11,1736,9,"getMeaningfulScript"],[1552,30,1736,28,"getMeaningfulScript"],[1552,31,1737,2,"script"],[1552,37,1737,8],[1552,39,1738,2,"index"],[1552,44,1738,7],[1552,46,1739,2,"ioType"],[1552,52,1739,8],[1552,54,1740,2,"redeemScript"],[1552,66,1740,14],[1552,68,1741,2,"witnessScript"],[1552,81,1741,15],[1552,83,1742,2],[1553,4,1743,2],[1553,8,1743,8,"isP2SH"],[1553,14,1743,14],[1553,17,1743,17],[1553,18,1743,18],[1553,19,1743,19],[1553,21,1743,21,"_$$_REQUIRE"],[1553,32,1743,21],[1553,33,1743,21,"_dependencyMap"],[1553,47,1743,21],[1553,77,1743,36,"isP2SHScript"],[1553,89,1743,48],[1553,91,1743,50,"script"],[1553,97,1743,56],[1553,98,1743,57],[1554,4,1744,2],[1554,8,1744,8,"isP2SHP2WSH"],[1554,19,1744,19],[1554,22,1745,4,"isP2SH"],[1554,28,1745,10],[1554,32,1745,14,"redeemScript"],[1554,44,1745,26],[1554,48,1745,30],[1554,49,1745,31],[1554,50,1745,32],[1554,52,1745,34,"_$$_REQUIRE"],[1554,63,1745,34],[1554,64,1745,34,"_dependencyMap"],[1554,78,1745,34],[1554,108,1745,49,"isP2WSHScript"],[1554,121,1745,62],[1554,123,1745,64,"redeemScript"],[1554,135,1745,76],[1554,136,1745,77],[1555,4,1746,2],[1555,8,1746,8,"isP2WSH"],[1555,15,1746,15],[1555,18,1746,18],[1555,19,1746,19],[1555,20,1746,20],[1555,22,1746,22,"_$$_REQUIRE"],[1555,33,1746,22],[1555,34,1746,22,"_dependencyMap"],[1555,48,1746,22],[1555,78,1746,37,"isP2WSHScript"],[1555,91,1746,50],[1555,93,1746,52,"script"],[1555,99,1746,58],[1555,100,1746,59],[1556,4,1747,2],[1556,8,1747,6,"isP2SH"],[1556,14,1747,12],[1556,18,1747,16,"redeemScript"],[1556,30,1747,28],[1556,35,1747,33,"undefined"],[1556,44,1747,42],[1556,46,1748,4],[1556,52,1748,10],[1556,56,1748,14,"Error"],[1556,61,1748,19],[1556,62,1748,20],[1556,109,1748,67],[1556,110,1748,68],[1557,4,1749,2],[1557,8,1749,6],[1557,9,1749,7,"isP2WSH"],[1557,16,1749,14],[1557,20,1749,18,"isP2SHP2WSH"],[1557,31,1749,29],[1557,36,1749,34,"witnessScript"],[1557,49,1749,47],[1557,54,1749,52,"undefined"],[1557,63,1749,61],[1557,65,1750,4],[1557,71,1750,10],[1557,75,1750,14,"Error"],[1557,80,1750,19],[1557,81,1751,6],[1557,146,1752,4],[1557,147,1752,5],[1558,4,1753,2],[1558,8,1753,6,"meaningfulScript"],[1558,24,1753,22],[1559,4,1754,2],[1559,8,1754,6,"isP2SHP2WSH"],[1559,19,1754,17],[1559,21,1754,19],[1560,6,1755,4,"meaningfulScript"],[1560,22,1755,20],[1560,25,1755,23,"witnessScript"],[1560,38,1755,36],[1561,6,1756,4,"checkRedeemScript"],[1561,23,1756,21],[1561,24,1756,22,"index"],[1561,29,1756,27],[1561,31,1756,29,"script"],[1561,37,1756,35],[1561,39,1756,37,"redeemScript"],[1561,51,1756,49],[1561,53,1756,51,"ioType"],[1561,59,1756,57],[1561,60,1756,58],[1562,6,1757,4,"checkWitnessScript"],[1562,24,1757,22],[1562,25,1757,23,"index"],[1562,30,1757,28],[1562,32,1757,30,"redeemScript"],[1562,44,1757,42],[1562,46,1757,44,"witnessScript"],[1562,59,1757,57],[1562,61,1757,59,"ioType"],[1562,67,1757,65],[1562,68,1757,66],[1563,6,1758,4,"checkInvalidP2WSH"],[1563,23,1758,21],[1563,24,1758,22,"meaningfulScript"],[1563,40,1758,38],[1563,41,1758,39],[1564,4,1759,2],[1564,5,1759,3],[1564,11,1759,9],[1564,15,1759,13,"isP2WSH"],[1564,22,1759,20],[1564,24,1759,22],[1565,6,1760,4,"meaningfulScript"],[1565,22,1760,20],[1565,25,1760,23,"witnessScript"],[1565,38,1760,36],[1566,6,1761,4,"checkWitnessScript"],[1566,24,1761,22],[1566,25,1761,23,"index"],[1566,30,1761,28],[1566,32,1761,30,"script"],[1566,38,1761,36],[1566,40,1761,38,"witnessScript"],[1566,53,1761,51],[1566,55,1761,53,"ioType"],[1566,61,1761,59],[1566,62,1761,60],[1567,6,1762,4,"checkInvalidP2WSH"],[1567,23,1762,21],[1567,24,1762,22,"meaningfulScript"],[1567,40,1762,38],[1567,41,1762,39],[1568,4,1763,2],[1568,5,1763,3],[1568,11,1763,9],[1568,15,1763,13,"isP2SH"],[1568,21,1763,19],[1568,23,1763,21],[1569,6,1764,4,"meaningfulScript"],[1569,22,1764,20],[1569,25,1764,23,"redeemScript"],[1569,37,1764,35],[1570,6,1765,4,"checkRedeemScript"],[1570,23,1765,21],[1570,24,1765,22,"index"],[1570,29,1765,27],[1570,31,1765,29,"script"],[1570,37,1765,35],[1570,39,1765,37,"redeemScript"],[1570,51,1765,49],[1570,53,1765,51,"ioType"],[1570,59,1765,57],[1570,60,1765,58],[1571,4,1766,2],[1571,5,1766,3],[1571,11,1766,9],[1572,6,1767,4,"meaningfulScript"],[1572,22,1767,20],[1572,25,1767,23,"script"],[1572,31,1767,29],[1573,4,1768,2],[1574,4,1769,2],[1574,11,1769,9],[1575,6,1770,4,"meaningfulScript"],[1575,22,1770,20],[1575,24,1770,4,"meaningfulScript"],[1575,40,1770,20],[1576,6,1771,4,"type"],[1576,10,1771,8],[1576,12,1771,10,"isP2SHP2WSH"],[1576,23,1771,21],[1576,26,1772,8],[1576,38,1772,20],[1576,41,1773,8,"isP2SH"],[1576,47,1773,14],[1576,50,1774,10],[1576,56,1774,16],[1576,59,1775,10,"isP2WSH"],[1576,66,1775,17],[1576,69,1776,12],[1576,76,1776,19],[1576,79,1777,12],[1577,4,1778,2],[1577,5,1778,3],[1578,2,1779,0],[1579,2,1780,0],[1579,11,1780,9,"checkInvalidP2WSH"],[1579,28,1780,26,"checkInvalidP2WSH"],[1579,29,1780,27,"script"],[1579,35,1780,33],[1579,37,1780,35],[1580,4,1781,2],[1580,8,1782,4],[1580,9,1782,5],[1580,10,1782,6],[1580,12,1782,8,"_$$_REQUIRE"],[1580,23,1782,8],[1580,24,1782,8,"_dependencyMap"],[1580,38,1782,8],[1580,68,1782,23,"isP2WPKH"],[1580,76,1782,31],[1580,78,1782,33,"script"],[1580,84,1782,39],[1580,85,1782,40],[1580,89,1783,4],[1580,90,1783,5],[1580,91,1783,6],[1580,93,1783,8,"_$$_REQUIRE"],[1580,104,1783,8],[1580,105,1783,8,"_dependencyMap"],[1580,119,1783,8],[1580,149,1783,23,"isP2SHScript"],[1580,161,1783,35],[1580,163,1783,37,"script"],[1580,169,1783,43],[1580,170,1783,44],[1580,172,1784,4],[1581,6,1785,4],[1581,12,1785,10],[1581,16,1785,14,"Error"],[1581,21,1785,19],[1581,22,1785,20],[1581,72,1785,70],[1581,73,1785,71],[1582,4,1786,2],[1583,2,1787,0],[1584,2,1788,0],[1584,11,1788,9,"classifyScript"],[1584,25,1788,23,"classifyScript"],[1584,26,1788,24,"script"],[1584,32,1788,30],[1584,34,1788,32],[1585,4,1789,2],[1585,8,1789,6],[1585,9,1789,7],[1585,10,1789,8],[1585,12,1789,10,"_$$_REQUIRE"],[1585,23,1789,10],[1585,24,1789,10,"_dependencyMap"],[1585,38,1789,10],[1585,68,1789,25,"isP2WPKH"],[1585,76,1789,33],[1585,78,1789,35,"script"],[1585,84,1789,41],[1585,85,1789,42],[1585,87,1789,44],[1585,94,1789,51],[1585,113,1789,70],[1586,4,1790,2],[1586,8,1790,6],[1586,9,1790,7],[1586,10,1790,8],[1586,12,1790,10,"_$$_REQUIRE"],[1586,23,1790,10],[1586,24,1790,10,"_dependencyMap"],[1586,38,1790,10],[1586,68,1790,25,"isP2PKH"],[1586,75,1790,32],[1586,77,1790,34,"script"],[1586,83,1790,40],[1586,84,1790,41],[1586,86,1790,43],[1586,93,1790,50],[1586,105,1790,62],[1587,4,1791,2],[1587,8,1791,6],[1587,9,1791,7],[1587,10,1791,8],[1587,12,1791,10,"_$$_REQUIRE"],[1587,23,1791,10],[1587,24,1791,10,"_dependencyMap"],[1587,38,1791,10],[1587,68,1791,25,"isP2MS"],[1587,74,1791,31],[1587,76,1791,33,"script"],[1587,82,1791,39],[1587,83,1791,40],[1587,85,1791,42],[1587,92,1791,49],[1587,102,1791,59],[1588,4,1792,2],[1588,8,1792,6],[1588,9,1792,7],[1588,10,1792,8],[1588,12,1792,10,"_$$_REQUIRE"],[1588,23,1792,10],[1588,24,1792,10,"_dependencyMap"],[1588,38,1792,10],[1588,68,1792,25,"isP2PK"],[1588,74,1792,31],[1588,76,1792,33,"script"],[1588,82,1792,39],[1588,83,1792,40],[1588,85,1792,42],[1588,92,1792,49],[1588,100,1792,57],[1589,4,1793,2],[1589,11,1793,9],[1589,24,1793,22],[1590,2,1794,0],[1591,2,1795,0],[1591,11,1795,9,"range"],[1591,16,1795,14,"range"],[1591,17,1795,15,"n"],[1591,18,1795,16],[1591,20,1795,18],[1592,4,1796,2],[1592,11,1796,2,"_toConsumableArray"],[1592,29,1796,2],[1592,30,1796,13,"Array"],[1592,35,1796,18],[1592,36,1796,19,"n"],[1592,37,1796,20],[1592,38,1796,21],[1592,39,1796,22,"keys"],[1592,43,1796,26],[1592,44,1796,27],[1592,45,1796,28],[1593,2,1797,0],[1594,0,1797,1],[1594,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","Psbt","Psbt.fromBase64","Psbt.fromHex","Psbt.fromBuffer","Psbt#constructor","dpew","Psbt#get__inputCount","Psbt#get__version","Psbt#set__version","Psbt#get__locktime","Psbt#set__locktime","Psbt#get__txInputs","__CACHE.__TX.ins.map$argument_0","Psbt#get__txOutputs","__CACHE.__TX.outs.map$argument_0","Psbt#combine","those.map$argument_0","Psbt#clone","Psbt#setMaximumFeeRate","Psbt#setVersion","Psbt#setLocktime","Psbt#setInputSequence","Psbt#addInputs","inputDatas.forEach$argument_0","Psbt#addInput","Psbt#addOutputs","outputDatas.forEach$argument_0","Psbt#addOutput","Psbt#extractTransaction","Psbt#getFeeRate","Psbt#getFee","Psbt#finalizeAllInputs","range.forEach$argument_0","Psbt#finalizeInput","Psbt#finalizeTaprootInput","Psbt#_finalizeInput","Psbt#_finalizeTaprootInput","Psbt#getInputType","Psbt#inputHasPubkey","Psbt#inputHasHDKey","Psbt#outputHasPubkey","Psbt#outputHasHDKey","Psbt#validateSignaturesOfAllInputs","range.map$argument_0","results.reduce$argument_0","Psbt#validateSignaturesOfInput","Psbt#_validateSignaturesOfInput","partialSig.filter$argument_0","results.every$argument_0","Psbt#validateSignaturesOfTaprootInput","allHashses.find$argument_0","Psbt#signAllInputsHD","Psbt#signAllInputsHDAsync","Promise$argument_0","signInputHDAsync.then$argument_0","signInputHDAsync.then$argument_1","Promise.all.then$argument_0","Psbt#signInputHD","signers.forEach$argument_0","Psbt#signInputHDAsync","signers.map$argument_0","Psbt#signAllInputs","Psbt#signAllInputsAsync","signInputAsync.then$argument_0","signInputAsync.then$argument_1","Psbt#signInput","Psbt#signTaprootInput","Psbt#_signInput","Psbt#_signTaprootInput","hashesForSig.filter$argument_0","hashesForSig.filter.map$argument_0","Psbt#signInputAsync","Promise.resolve.then$argument_0","Psbt#signTaprootInputAsync","Psbt#_signInputAsync","Psbt#_signTaprootInputAsync","tapScriptHashes.map$argument_0","results.forEach$argument_0","Psbt#checkTaprootHashesForSig","Psbt#toBuffer","Psbt#toHex","Psbt#toBase64","Psbt#updateGlobal","Psbt#updateInput","Psbt#updateOutput","Psbt#addUnknownKeyValToGlobal","Psbt#addUnknownKeyValToInput","Psbt#addUnknownKeyValToOutput","Psbt#clearFinalizedInput","transactionFromBuffer","PsbtTransaction","PsbtTransaction#constructor","PsbtTransaction#getInputOutputCounts","PsbtTransaction#addInput","PsbtTransaction#addOutput","PsbtTransaction#toBuffer","canFinalize","checkCache","hasSigs","pubkeys.map$argument_0","partialSig.find$argument_0","pubkeys.map.filter$argument_0","isFinalized","bip32DerivationIsMine","check32Bit","checkFees","checkInputsForPartialSig","inputs.forEach$argument_0","checkPartialSigSighashes","partialSig.forEach$argument_0","checkScriptForPubkey","checkTxEmpty","tx.ins.every$argument_0","checkTxForDupeIns","tx.ins.forEach$argument_0","checkTxInputCache","scriptCheckerFactory","getTxCacheValue","getFinalScripts","prepareFinalScripts","getHashAndSighashType","getHashForSig","getAllTaprootHashesForSig","input.tapScriptSig.map$argument_0","allPublicKeys.map$argument_0","getPrevoutTaprootKey","trimTaprootSig","getTaprootHashesForSig","inputs.map$argument_0","prevOuts.map$argument_0","filter$argument_0","filter.map$argument_0","filter.map.filter$argument_0","filter.map.filter.map$argument_0","checkSighashTypeAllowed","getPayment","getScriptFromInput","getSignersFromHD","input.bip32Derivation.map$argument_0","input.bip32Derivation.map.filter$argument_0","myDerivations.map$argument_0","getSortedSigs","p2ms.pubkeys.map$argument_0","p2ms.pubkeys.map.filter$argument_0","scriptWitnessToWitnessStack","readSlice","readVarInt","readVarSlice","readVector","sighashTypeToString","addNonWitnessTxCache","Object.defineProperty$argument_2.get","Object.defineProperty$argument_2.set","inputFinalizeGetAmts","tx.outs.reduce$argument_0","nonWitnessUtxoTxFromCache","getScriptFromUtxo","getScriptAndAmountFromUtxo","pubkeyInInput","pubkeyInOutput","redeemFromFinalScriptSig","redeemFromFinalWitnessScript","compressPubkey","isPubkeyLike","isSigLike","getMeaningfulScript","checkInvalidP2WSH","classifyScript","range"],"mappings":"AAA;MCI;iBCS;aDE;ODI;MCC;ODG;MCI;ODE;MCC;ODE;ECG;GDS;AGqE;ECE;GDG;EEC;GFG;EGC;GHK;EIG;iBCqB;QDI;GJG;EMC;GNE;EOC;GPE;EQC;GRE;ESC;GTE;EUC;GVE;EWC;qCCC;MDI;GXC;EaC;sCCC;KDa;GbC;EeC;mCCC,WD;GfE;EiBC;GjBK;EkBC;GlBG;EmBC;GnBO;EoBC;GpBO;EqBC;GrBU;EsBC;uBCC,qCD;GtBE;EwBC;GxB4B;EyBC;wBCC,wCD;GzBE;E2BC;G3B8B;E4BC;G5BU;E6BC;G7BO;E8BC;G9BE;E+BC;2CCE,8BD;G/BE;EiCC;GjCU;EkCC;GlCc;EmCC;GnCuB;EoCC;GpC6B;EqCC;GrCc;EsCC;GtCG;EuCC;GvCM;EwCC;GxCG;EyCC;GzCM;E0CC;uDCE;oDDC;0BEE,qCF;G1CC;E6CC;G7CS;E8CC;0BCQ,8CD;yBEwB,mBF;G9CC;EiDC;uCCwB,gBD;UCc,iDD;GjDc;EmDC;sBHgB,gBG;GnDI;EoDC;uBCI;YCS;aDE;YEC;aFE;wCGI;0BRC,gBQ;OHI;KDC;GpDC;EyDC;oBCS,0DD;GzDE;E2DC;uBNK;mCOK;6DPC;cGG;SHE;KME;G3DC;E6DC;sBbe,gBa;G7DI;E8DC;uBTC;YUW;aVE;YWC;aXE;wCGI;0BRC,gBQ;OHI;KSC;G9DC;EiEC;GjEc;EkEC;GlEa;EmEC;GnEoB;EoEC;cCe,gBD;WEC;SFI;cCG,iBD;WEC;QFO;GpEQ;EuEC;kCCC;KDa;GvEC;EyEC;kCDC;KCa;GzEC;E0EC;oDFY;KEQ;G1EC;E2EC;2CNe,gBM;aHI;OGO;gDNG,iBM;uDCE;UJE;WIY;ODE;+CnBG;sBqBC,yCrB;KmBC;G3EC;E8EC;G9EyB;E+EC;G/EG;EgFC;GhFG;EiFC;GjFG;EkFC;GlFG;EmFC;GnFgB;EoFC;GpFS;EqFC;GrFG;EsFC;GtFG;EuFC;GvFG;EwFC;GxFG;CHC;8B4FO,qC5F;A6FK;ECE;GDO;EEC;GFK;EGC;GHc;EIC;GJU;EKC;GLE;C7FC;AmGC;CnGY;AoGC;CpGI;AqGC;WCK;UCG,gDD;ODE;cGC,QH;CrGM;AyGC;CzGE;A0GC;SzGC;GyGK;C1GC;A2GC;C3GS;A4GC;C5Ga;A6GC;iBCC;GDM;C7GC;A+GC;qBCG;GDK;C/GC;AiHC;CjHM;AkHC;ICE;gCDI;ClHK;AoHC;iBCC;GDE;CpHC;AsHC;CtHS;AuHC;StHC;GsHS;CvHC;AwHM;CxHgB;AyHC;CzHY;A0HC;C1HsC;A2HC;C3HoB;A4HC;C5HoF;A6HC;oDCS,iBD;sCEG;uEFC;C7HG;AgIC;ChIG;AiIC;CjIE;AkIC;8BCa;+CDC;sCEE,aF;8BEC,YF;YGgB;gEHC;SIE;KJM;MKE;4DLE;SME;KNa;ClIE;AyIC;CzIQ;A0IC;C1IgC;A2IC;C3I+B;A4IC;SCM;KDM;YEC,QF;oCGM;GHM;C5IE;AgJC;SCI;0B/FG;S+FE;KDI;YEC,QF;ChJC;AmJC;ECE;GDG;EEC;GFI;EGC;GHE;EIC;GJK;CnJE;AwJC;CxJkB;AyJC;ICS;KDU;IEC;KFE;CzJE;A4JC;iB9CE;G8CgB;sCCC,6BD;C5JS;A8JC;C9JM;A+JC;C/JG;AgKC;ChKiB;AiKC;CjKU;AkKC;ClKU;AmKC;CnKc;AoKC;CpKQ;AqKC;CrKQ;AsKC;CtKE;AuKC;CvKE;AwKC;CxK2C;AyKC;CzKO;A0KC;C1KM;A2KC;C3KE"}},"type":"js/module"}]}