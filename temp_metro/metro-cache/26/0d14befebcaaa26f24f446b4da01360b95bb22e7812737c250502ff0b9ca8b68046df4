{"dependencies":[{"name":"bs58check","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":18,"index":211},"end":{"line":6,"column":38,"index":231}}],"key":"4OUKwPALIMTasKbVl6WljOsf4WA="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":19,"index":96},"end":{"line":3,"column":40,"index":117}},{"start":{"line":3,"column":19,"index":96},"end":{"line":3,"column":40,"index":117}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}},{"name":"bip39","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":133},"end":{"line":4,"column":30,"index":149}}],"key":"vX/GA8kXuM7hR+Qyo6R9ChvGzk4="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":167},"end":{"line":5,"column":40,"index":191}}],"key":"PV1IDhC/8j/Z7SyCy2R2SKCUYnk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  function getUtils(ecc, bip32) {\n    var getPublicPaymentCodeNodeFromBase58 = function getPublicPaymentCodeNodeFromBase58(paymentCode, network) {\n      var rawPaymentCode = _$$_REQUIRE(_dependencyMap[0], \"bs58check\").decode(paymentCode);\n      return bip32.fromPublicKey(rawPaymentCode.slice(3, 36), rawPaymentCode.slice(36, 68), network.network);\n    };\n    var getRootPaymentCodeNodeFromSeedHex = function getRootPaymentCodeNodeFromSeedHex(seedHex) {\n      var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _$$_REQUIRE(_dependencyMap[1], \"./networks\").mainnetData;\n      if (typeof seedHex === 'string') seedHex = Buffer.from(seedHex, 'hex');\n      var node = bip32.fromSeed(seedHex, network.network);\n      return node.derivePath(`m/47'/${network.coin}'/0'`);\n    };\n    var getRootPaymentCodeNodeFromBIP39Seed = function getRootPaymentCodeNodeFromBIP39Seed(bip39Seed) {\n      var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _$$_REQUIRE(_dependencyMap[1], \"./networks\").mainnetData;\n      var password = arguments.length > 2 ? arguments[2] : undefined;\n      var seed = _$$_REQUIRE(_dependencyMap[2], \"bip39\").mnemonicToSeedSync(bip39Seed, password);\n      return getRootPaymentCodeNodeFromSeedHex(seed);\n    };\n    var uintArrayToBuffer = function uintArrayToBuffer(array) {\n      var b = Buffer.alloc(array.length);\n      for (var i = 0; i < array.length; i++) b[i] = array[i];\n      return b;\n    };\n    var getSharedSecret = function getSharedSecret(B, a) {\n      var S = uintArrayToBuffer(ecc.pointMultiply(B, a, true).slice(1, 33));\n      var s = _$$_REQUIRE(_dependencyMap[3], \"bitcoinjs-lib\").crypto.sha256(S);\n      if (!ecc.isPrivate(s)) throw new Error('Shared secret is not a valid private key');\n      return s;\n    };\n    var toInternalByteOrder = function toInternalByteOrder(data) {\n      var start = 0;\n      var length = data.length;\n      while (length - start >= 1) {\n        var tmp = data[start];\n        var lastIndex = length - 1;\n        data[start] = data[lastIndex];\n        data[lastIndex] = tmp;\n        length--;\n        start++;\n      }\n      return data;\n    };\n    return {\n      getPublicPaymentCodeNodeFromBase58: getPublicPaymentCodeNodeFromBase58,\n      getRootPaymentCodeNodeFromSeedHex: getRootPaymentCodeNodeFromSeedHex,\n      getRootPaymentCodeNodeFromBIP39Seed: getRootPaymentCodeNodeFromBIP39Seed,\n      uintArrayToBuffer: uintArrayToBuffer,\n      getSharedSecret: getSharedSecret,\n      toInternalByteOrder: toInternalByteOrder\n    };\n  }\n  exports.default = getUtils;\n});","lineCount":58,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,7,0],[7,11,7,9,"getUtils"],[7,19,7,17,"getUtils"],[7,20,7,18,"ecc"],[7,23,7,21],[7,25,7,23,"bip32"],[7,30,7,28],[7,32,7,30],[8,4,8,4],[8,8,8,10,"getPublicPaymentCodeNodeFromBase58"],[8,42,8,44],[8,45,8,47],[8,54,8,10,"getPublicPaymentCodeNodeFromBase58"],[8,88,8,44,"getPublicPaymentCodeNodeFromBase58"],[8,89,8,48,"paymentCode"],[8,100,8,59],[8,102,8,61,"network"],[8,109,8,68],[8,111,8,73],[9,6,9,8],[9,10,9,14,"rawPaymentCode"],[9,24,9,28],[9,27,9,31,"_$$_REQUIRE"],[9,38,9,31],[9,39,9,31,"_dependencyMap"],[9,53,9,31],[9,71,9,41,"decode"],[9,77,9,47],[9,78,9,48,"paymentCode"],[9,89,9,59],[9,90,9,60],[10,6,10,8],[10,13,10,15,"bip32"],[10,18,10,20],[10,19,10,21,"fromPublicKey"],[10,32,10,34],[10,33,10,35,"rawPaymentCode"],[10,47,10,49],[10,48,10,50,"slice"],[10,53,10,55],[10,54,10,56],[10,55,10,57],[10,57,10,59],[10,59,10,61],[10,60,10,62],[10,62,10,64,"rawPaymentCode"],[10,76,10,78],[10,77,10,79,"slice"],[10,82,10,84],[10,83,10,85],[10,85,10,87],[10,87,10,89],[10,89,10,91],[10,90,10,92],[10,92,10,94,"network"],[10,99,10,101],[10,100,10,102,"network"],[10,107,10,109],[10,108,10,110],[11,4,11,4],[11,5,11,5],[12,4,12,4],[12,8,12,10,"getRootPaymentCodeNodeFromSeedHex"],[12,41,12,43],[12,44,12,46],[12,53,12,10,"getRootPaymentCodeNodeFromSeedHex"],[12,86,12,43,"getRootPaymentCodeNodeFromSeedHex"],[12,87,12,47,"seedHex"],[12,94,12,54],[12,96,12,93],[13,6,12,93],[13,10,12,56,"network"],[13,17,12,63],[13,20,12,63,"arguments"],[13,29,12,63],[13,30,12,63,"length"],[13,36,12,63],[13,44,12,63,"arguments"],[13,53,12,63],[13,61,12,63,"undefined"],[13,70,12,63],[13,73,12,63,"arguments"],[13,82,12,63],[13,88,12,66,"_$$_REQUIRE"],[13,99,12,66],[13,100,12,66,"_dependencyMap"],[13,114,12,66],[13,133,12,77,"mainnetData"],[13,144,12,88],[14,6,13,8],[14,10,13,12],[14,17,13,19,"seedHex"],[14,24,13,26],[14,29,13,31],[14,37,13,39],[14,39,14,12,"seedHex"],[14,46,14,19],[14,49,14,22,"Buffer"],[14,55,14,28],[14,56,14,29,"from"],[14,60,14,33],[14,61,14,34,"seedHex"],[14,68,14,41],[14,70,14,43],[14,75,14,48],[14,76,14,49],[15,6,15,8],[15,10,15,14,"node"],[15,14,15,18],[15,17,15,21,"bip32"],[15,22,15,26],[15,23,15,27,"fromSeed"],[15,31,15,35],[15,32,15,36,"seedHex"],[15,39,15,43],[15,41,15,45,"network"],[15,48,15,52],[15,49,15,53,"network"],[15,56,15,60],[15,57,15,61],[16,6,16,8],[16,13,16,15,"node"],[16,17,16,19],[16,18,16,20,"derivePath"],[16,28,16,30],[16,29,16,31],[16,38,16,40,"network"],[16,45,16,47],[16,46,16,48,"coin"],[16,50,16,52],[16,56,16,58],[16,57,16,59],[17,4,17,4],[17,5,17,5],[18,4,18,4],[18,8,18,10,"getRootPaymentCodeNodeFromBIP39Seed"],[18,43,18,45],[18,46,18,48],[18,55,18,10,"getRootPaymentCodeNodeFromBIP39Seed"],[18,90,18,45,"getRootPaymentCodeNodeFromBIP39Seed"],[18,91,18,49,"bip39Seed"],[18,100,18,58],[18,102,18,107],[19,6,18,107],[19,10,18,60,"network"],[19,17,18,67],[19,20,18,67,"arguments"],[19,29,18,67],[19,30,18,67,"length"],[19,36,18,67],[19,44,18,67,"arguments"],[19,53,18,67],[19,61,18,67,"undefined"],[19,70,18,67],[19,73,18,67,"arguments"],[19,82,18,67],[19,88,18,70,"_$$_REQUIRE"],[19,99,18,70],[19,100,18,70,"_dependencyMap"],[19,114,18,70],[19,133,18,81,"mainnetData"],[19,144,18,92],[20,6,18,92],[20,10,18,94,"password"],[20,18,18,102],[20,21,18,102,"arguments"],[20,30,18,102],[20,31,18,102,"length"],[20,37,18,102],[20,44,18,102,"arguments"],[20,53,18,102],[20,59,18,102,"undefined"],[20,68,18,102],[21,6,19,8],[21,10,19,14,"seed"],[21,14,19,18],[21,17,19,21,"_$$_REQUIRE"],[21,28,19,21],[21,29,19,21,"_dependencyMap"],[21,43,19,21],[21,57,19,27,"mnemonicToSeedSync"],[21,75,19,45],[21,76,19,46,"bip39Seed"],[21,85,19,55],[21,87,19,57,"password"],[21,95,19,65],[21,96,19,66],[22,6,20,8],[22,13,20,15,"getRootPaymentCodeNodeFromSeedHex"],[22,46,20,48],[22,47,20,49,"seed"],[22,51,20,53],[22,52,20,54],[23,4,21,4],[23,5,21,5],[24,4,22,4],[24,8,22,10,"uintArrayToBuffer"],[24,25,22,27],[24,28,22,30],[24,37,22,10,"uintArrayToBuffer"],[24,54,22,27,"uintArrayToBuffer"],[24,55,22,31,"array"],[24,60,22,36],[24,62,22,41],[25,6,23,8],[25,10,23,14,"b"],[25,11,23,15],[25,14,23,18,"Buffer"],[25,20,23,24],[25,21,23,25,"alloc"],[25,26,23,30],[25,27,23,31,"array"],[25,32,23,36],[25,33,23,37,"length"],[25,39,23,43],[25,40,23,44],[26,6,24,8],[26,11,24,13],[26,15,24,17,"i"],[26,16,24,18],[26,19,24,21],[26,20,24,22],[26,22,24,24,"i"],[26,23,24,25],[26,26,24,28,"array"],[26,31,24,33],[26,32,24,34,"length"],[26,38,24,40],[26,40,24,42,"i"],[26,41,24,43],[26,43,24,45],[26,45,25,12,"b"],[26,46,25,13],[26,47,25,14,"i"],[26,48,25,15],[26,49,25,16],[26,52,25,19,"array"],[26,57,25,24],[26,58,25,25,"i"],[26,59,25,26],[26,60,25,27],[27,6,26,8],[27,13,26,15,"b"],[27,14,26,16],[28,4,27,4],[28,5,27,5],[29,4,28,4],[29,8,28,10,"getSharedSecret"],[29,23,28,25],[29,26,28,28],[29,35,28,10,"getSharedSecret"],[29,50,28,25,"getSharedSecret"],[29,51,28,29,"B"],[29,52,28,30],[29,54,28,32,"a"],[29,55,28,33],[29,57,28,38],[30,6,29,8],[30,10,29,14,"S"],[30,11,29,15],[30,14,29,18,"uintArrayToBuffer"],[30,31,29,35],[30,32,29,36,"ecc"],[30,35,29,39],[30,36,29,40,"pointMultiply"],[30,49,29,53],[30,50,29,54,"B"],[30,51,29,55],[30,53,29,57,"a"],[30,54,29,58],[30,56,29,60],[30,60,29,64],[30,61,29,65],[30,62,29,66,"slice"],[30,67,29,71],[30,68,29,72],[30,69,29,73],[30,71,29,75],[30,73,29,77],[30,74,29,78],[30,75,29,79],[31,6,30,8],[31,10,30,12,"s"],[31,11,30,13],[31,14,30,16,"_$$_REQUIRE"],[31,25,30,16],[31,26,30,16,"_dependencyMap"],[31,40,30,16],[31,62,30,24,"crypto"],[31,68,30,30],[31,69,30,31,"sha256"],[31,75,30,37],[31,76,30,38,"S"],[31,77,30,39],[31,78,30,40],[32,6,31,8],[32,10,31,12],[32,11,31,13,"ecc"],[32,14,31,16],[32,15,31,17,"isPrivate"],[32,24,31,26],[32,25,31,27,"s"],[32,26,31,28],[32,27,31,29],[32,29,32,12],[32,35,32,18],[32,39,32,22,"Error"],[32,44,32,27],[32,45,32,28],[32,87,32,70],[32,88,32,71],[33,6,33,8],[33,13,33,15,"s"],[33,14,33,16],[34,4,34,4],[34,5,34,5],[35,4,35,4],[35,8,35,10,"toInternalByteOrder"],[35,27,35,29],[35,30,35,32],[35,39,35,10,"toInternalByteOrder"],[35,58,35,29,"toInternalByteOrder"],[35,59,35,33,"data"],[35,63,35,37],[35,65,35,42],[36,6,36,8],[36,10,36,12,"start"],[36,15,36,17],[36,18,36,20],[36,19,36,21],[37,6,37,8],[37,10,37,12,"length"],[37,16,37,18],[37,19,37,21,"data"],[37,23,37,25],[37,24,37,26,"length"],[37,30,37,32],[38,6,38,8],[38,13,38,15,"length"],[38,19,38,21],[38,22,38,24,"start"],[38,27,38,29],[38,31,38,33],[38,32,38,34],[38,34,38,36],[39,8,39,12],[39,12,39,18,"tmp"],[39,15,39,21],[39,18,39,24,"data"],[39,22,39,28],[39,23,39,29,"start"],[39,28,39,34],[39,29,39,35],[40,8,40,12],[40,12,40,18,"lastIndex"],[40,21,40,27],[40,24,40,30,"length"],[40,30,40,36],[40,33,40,39],[40,34,40,40],[41,8,41,12,"data"],[41,12,41,16],[41,13,41,17,"start"],[41,18,41,22],[41,19,41,23],[41,22,41,26,"data"],[41,26,41,30],[41,27,41,31,"lastIndex"],[41,36,41,40],[41,37,41,41],[42,8,42,12,"data"],[42,12,42,16],[42,13,42,17,"lastIndex"],[42,22,42,26],[42,23,42,27],[42,26,42,30,"tmp"],[42,29,42,33],[43,8,43,12,"length"],[43,14,43,18],[43,16,43,20],[44,8,44,12,"start"],[44,13,44,17],[44,15,44,19],[45,6,45,8],[46,6,46,8],[46,13,46,15,"data"],[46,17,46,19],[47,4,47,4],[47,5,47,5],[48,4,48,4],[48,11,48,11],[49,6,49,8,"getPublicPaymentCodeNodeFromBase58"],[49,40,49,42],[49,42,49,8,"getPublicPaymentCodeNodeFromBase58"],[49,76,49,42],[50,6,50,8,"getRootPaymentCodeNodeFromSeedHex"],[50,39,50,41],[50,41,50,8,"getRootPaymentCodeNodeFromSeedHex"],[50,74,50,41],[51,6,51,8,"getRootPaymentCodeNodeFromBIP39Seed"],[51,41,51,43],[51,43,51,8,"getRootPaymentCodeNodeFromBIP39Seed"],[51,78,51,43],[52,6,52,8,"uintArrayToBuffer"],[52,23,52,25],[52,25,52,8,"uintArrayToBuffer"],[52,42,52,25],[53,6,53,8,"getSharedSecret"],[53,21,53,23],[53,23,53,8,"getSharedSecret"],[53,38,53,23],[54,6,54,8,"toInternalByteOrder"],[54,25,54,27],[54,27,54,8,"toInternalByteOrder"],[55,4,55,4],[55,5,55,5],[56,2,56,0],[57,2,57,0,"exports"],[57,9,57,7],[57,10,57,8,"default"],[57,17,57,15],[57,20,57,18,"getUtils"],[57,28,57,26],[58,0,57,27],[58,3]],"functionMap":{"names":["<global>","getUtils","getPublicPaymentCodeNodeFromBase58","getRootPaymentCodeNodeFromSeedHex","getRootPaymentCodeNodeFromBIP39Seed","uintArrayToBuffer","getSharedSecret","toInternalByteOrder"],"mappings":"AAA;ACM;+CCC;KDG;8CEC;KFK;gDGC;KHG;8BIC;KJK;4BKC;KLM;gCMC;KNY;CDS"}},"type":"js/module"}]}