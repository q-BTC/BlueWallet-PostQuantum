{"dependencies":[{"name":"./adopt-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":43,"index":43}},{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":43,"index":43}}],"key":"x+rLceIrQKzQi96ZNWhRsCfLw0k="}},{"name":"../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":12,"index":57},"end":{"line":2,"column":41,"index":86}}],"key":"CeLPNCNjt8y0xnwsIyTQzXoUUj0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var N = 10;\n  var F = 12;\n  var R = 13;\n  function computeLinesAndColumns(host, source) {\n    var sourceLength = source.length;\n    var lines = _$$_REQUIRE(_dependencyMap[0], \"./adopt-buffer\")(host.lines, sourceLength); // +1\n    var line = host.startLine;\n    var columns = _$$_REQUIRE(_dependencyMap[0], \"./adopt-buffer\")(host.columns, sourceLength);\n    var column = host.startColumn;\n    var startOffset = source.length > 0 ? _$$_REQUIRE(_dependencyMap[1], \"../tokenizer\").isBOM(source.charCodeAt(0)) : 0;\n    for (var i = startOffset; i < sourceLength; i++) {\n      // -1\n      var code = source.charCodeAt(i);\n      lines[i] = line;\n      columns[i] = column++;\n      if (code === N || code === R || code === F) {\n        if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n          i++;\n          lines[i] = line;\n          columns[i] = column;\n        }\n        line++;\n        column = 1;\n      }\n    }\n    lines[i] = line;\n    columns[i] = column;\n    host.lines = lines;\n    host.columns = columns;\n  }\n  var OffsetToLocation = function OffsetToLocation() {\n    this.lines = null;\n    this.columns = null;\n    this.linesAndColumnsComputed = false;\n  };\n  OffsetToLocation.prototype = {\n    setSource: function setSource(source, startOffset, startLine, startColumn) {\n      this.source = source;\n      this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;\n      this.startLine = typeof startLine === 'undefined' ? 1 : startLine;\n      this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;\n      this.linesAndColumnsComputed = false;\n    },\n    ensureLinesAndColumnsComputed: function ensureLinesAndColumnsComputed() {\n      if (!this.linesAndColumnsComputed) {\n        computeLinesAndColumns(this, this.source);\n        this.linesAndColumnsComputed = true;\n      }\n    },\n    getLocation: function getLocation(offset, filename) {\n      this.ensureLinesAndColumnsComputed();\n      return {\n        source: filename,\n        offset: this.startOffset + offset,\n        line: this.lines[offset],\n        column: this.columns[offset]\n      };\n    },\n    getLocationRange: function getLocationRange(start, end, filename) {\n      this.ensureLinesAndColumnsComputed();\n      return {\n        source: filename,\n        start: {\n          offset: this.startOffset + start,\n          line: this.lines[start],\n          column: this.columns[start]\n        },\n        end: {\n          offset: this.startOffset + end,\n          line: this.lines[end],\n          column: this.columns[end]\n        }\n      };\n    }\n  };\n  module.exports = OffsetToLocation;\n});","lineCount":78,"map":[[2,2,4,0],[2,6,4,4,"N"],[2,7,4,5],[2,10,4,8],[2,12,4,10],[3,2,5,0],[3,6,5,4,"F"],[3,7,5,5],[3,10,5,8],[3,12,5,10],[4,2,6,0],[4,6,6,4,"R"],[4,7,6,5],[4,10,6,8],[4,12,6,10],[5,2,8,0],[5,11,8,9,"computeLinesAndColumns"],[5,33,8,31,"computeLinesAndColumns"],[5,34,8,32,"host"],[5,38,8,36],[5,40,8,38,"source"],[5,46,8,44],[5,48,8,46],[6,4,9,4],[6,8,9,8,"sourceLength"],[6,20,9,20],[6,23,9,23,"source"],[6,29,9,29],[6,30,9,30,"length"],[6,36,9,36],[7,4,10,4],[7,8,10,8,"lines"],[7,13,10,13],[7,16,10,16,"_$$_REQUIRE"],[7,27,10,16],[7,28,10,16,"_dependencyMap"],[7,42,10,16],[7,65,10,28,"host"],[7,69,10,32],[7,70,10,33,"lines"],[7,75,10,38],[7,77,10,40,"sourceLength"],[7,89,10,52],[7,90,10,53],[7,91,10,54],[7,92,10,55],[8,4,11,4],[8,8,11,8,"line"],[8,12,11,12],[8,15,11,15,"host"],[8,19,11,19],[8,20,11,20,"startLine"],[8,29,11,29],[9,4,12,4],[9,8,12,8,"columns"],[9,15,12,15],[9,18,12,18,"_$$_REQUIRE"],[9,29,12,18],[9,30,12,18,"_dependencyMap"],[9,44,12,18],[9,67,12,30,"host"],[9,71,12,34],[9,72,12,35,"columns"],[9,79,12,42],[9,81,12,44,"sourceLength"],[9,93,12,56],[9,94,12,57],[10,4,13,4],[10,8,13,8,"column"],[10,14,13,14],[10,17,13,17,"host"],[10,21,13,21],[10,22,13,22,"startColumn"],[10,33,13,33],[11,4,14,4],[11,8,14,8,"startOffset"],[11,19,14,19],[11,22,14,22,"source"],[11,28,14,28],[11,29,14,29,"length"],[11,35,14,35],[11,38,14,38],[11,39,14,39],[11,42,14,42,"_$$_REQUIRE"],[11,53,14,42],[11,54,14,42,"_dependencyMap"],[11,68,14,42],[11,89,14,42,"isBOM"],[11,94,14,42],[11,95,14,48,"source"],[11,101,14,54],[11,102,14,55,"charCodeAt"],[11,112,14,65],[11,113,14,66],[11,114,14,67],[11,115,14,68],[11,116,14,69],[11,119,14,72],[11,120,14,73],[12,4,16,4],[12,9,16,9],[12,13,16,13,"i"],[12,14,16,14],[12,17,16,17,"startOffset"],[12,28,16,28],[12,30,16,30,"i"],[12,31,16,31],[12,34,16,34,"sourceLength"],[12,46,16,46],[12,48,16,48,"i"],[12,49,16,49],[12,51,16,51],[12,53,16,53],[13,6,16,55],[14,6,17,8],[14,10,17,12,"code"],[14,14,17,16],[14,17,17,19,"source"],[14,23,17,25],[14,24,17,26,"charCodeAt"],[14,34,17,36],[14,35,17,37,"i"],[14,36,17,38],[14,37,17,39],[15,6,19,8,"lines"],[15,11,19,13],[15,12,19,14,"i"],[15,13,19,15],[15,14,19,16],[15,17,19,19,"line"],[15,21,19,23],[16,6,20,8,"columns"],[16,13,20,15],[16,14,20,16,"i"],[16,15,20,17],[16,16,20,18],[16,19,20,21,"column"],[16,25,20,27],[16,27,20,29],[17,6,22,8],[17,10,22,12,"code"],[17,14,22,16],[17,19,22,21,"N"],[17,20,22,22],[17,24,22,26,"code"],[17,28,22,30],[17,33,22,35,"R"],[17,34,22,36],[17,38,22,40,"code"],[17,42,22,44],[17,47,22,49,"F"],[17,48,22,50],[17,50,22,52],[18,8,23,12],[18,12,23,16,"code"],[18,16,23,20],[18,21,23,25,"R"],[18,22,23,26],[18,26,23,30,"i"],[18,27,23,31],[18,30,23,34],[18,31,23,35],[18,34,23,38,"sourceLength"],[18,46,23,50],[18,50,23,54,"source"],[18,56,23,60],[18,57,23,61,"charCodeAt"],[18,67,23,71],[18,68,23,72,"i"],[18,69,23,73],[18,72,23,76],[18,73,23,77],[18,74,23,78],[18,79,23,83,"N"],[18,80,23,84],[18,82,23,86],[19,10,24,16,"i"],[19,11,24,17],[19,13,24,19],[20,10,25,16,"lines"],[20,15,25,21],[20,16,25,22,"i"],[20,17,25,23],[20,18,25,24],[20,21,25,27,"line"],[20,25,25,31],[21,10,26,16,"columns"],[21,17,26,23],[21,18,26,24,"i"],[21,19,26,25],[21,20,26,26],[21,23,26,29,"column"],[21,29,26,35],[22,8,27,12],[23,8,29,12,"line"],[23,12,29,16],[23,14,29,18],[24,8,30,12,"column"],[24,14,30,18],[24,17,30,21],[24,18,30,22],[25,6,31,8],[26,4,32,4],[27,4,34,4,"lines"],[27,9,34,9],[27,10,34,10,"i"],[27,11,34,11],[27,12,34,12],[27,15,34,15,"line"],[27,19,34,19],[28,4,35,4,"columns"],[28,11,35,11],[28,12,35,12,"i"],[28,13,35,13],[28,14,35,14],[28,17,35,17,"column"],[28,23,35,23],[29,4,37,4,"host"],[29,8,37,8],[29,9,37,9,"lines"],[29,14,37,14],[29,17,37,17,"lines"],[29,22,37,22],[30,4,38,4,"host"],[30,8,38,8],[30,9,38,9,"columns"],[30,16,38,16],[30,19,38,19,"columns"],[30,26,38,26],[31,2,39,0],[32,2,41,0],[32,6,41,4,"OffsetToLocation"],[32,22,41,20],[32,25,41,23],[32,34,41,4,"OffsetToLocation"],[32,50,41,20,"OffsetToLocation"],[32,51,41,20],[32,53,41,34],[33,4,42,4],[33,8,42,8],[33,9,42,9,"lines"],[33,14,42,14],[33,17,42,17],[33,21,42,21],[34,4,43,4],[34,8,43,8],[34,9,43,9,"columns"],[34,16,43,16],[34,19,43,19],[34,23,43,23],[35,4,44,4],[35,8,44,8],[35,9,44,9,"linesAndColumnsComputed"],[35,32,44,32],[35,35,44,35],[35,40,44,40],[36,2,45,0],[36,3,45,1],[37,2,47,0,"OffsetToLocation"],[37,18,47,16],[37,19,47,17,"prototype"],[37,28,47,26],[37,31,47,29],[38,4,48,4,"setSource"],[38,13,48,13],[38,15,48,15],[38,24,48,4,"setSource"],[38,33,48,13,"setSource"],[38,34,48,24,"source"],[38,40,48,30],[38,42,48,32,"startOffset"],[38,53,48,43],[38,55,48,45,"startLine"],[38,64,48,54],[38,66,48,56,"startColumn"],[38,77,48,67],[38,79,48,69],[39,6,49,8],[39,10,49,12],[39,11,49,13,"source"],[39,17,49,19],[39,20,49,22,"source"],[39,26,49,28],[40,6,50,8],[40,10,50,12],[40,11,50,13,"startOffset"],[40,22,50,24],[40,25,50,27],[40,32,50,34,"startOffset"],[40,43,50,45],[40,48,50,50],[40,59,50,61],[40,62,50,64],[40,63,50,65],[40,66,50,68,"startOffset"],[40,77,50,79],[41,6,51,8],[41,10,51,12],[41,11,51,13,"startLine"],[41,20,51,22],[41,23,51,25],[41,30,51,32,"startLine"],[41,39,51,41],[41,44,51,46],[41,55,51,57],[41,58,51,60],[41,59,51,61],[41,62,51,64,"startLine"],[41,71,51,73],[42,6,52,8],[42,10,52,12],[42,11,52,13,"startColumn"],[42,22,52,24],[42,25,52,27],[42,32,52,34,"startColumn"],[42,43,52,45],[42,48,52,50],[42,59,52,61],[42,62,52,64],[42,63,52,65],[42,66,52,68,"startColumn"],[42,77,52,79],[43,6,53,8],[43,10,53,12],[43,11,53,13,"linesAndColumnsComputed"],[43,34,53,36],[43,37,53,39],[43,42,53,44],[44,4,54,4],[44,5,54,5],[45,4,56,4,"ensureLinesAndColumnsComputed"],[45,33,56,33],[45,35,56,35],[45,44,56,4,"ensureLinesAndColumnsComputed"],[45,73,56,33,"ensureLinesAndColumnsComputed"],[45,74,56,33],[45,76,56,46],[46,6,57,8],[46,10,57,12],[46,11,57,13],[46,15,57,17],[46,16,57,18,"linesAndColumnsComputed"],[46,39,57,41],[46,41,57,43],[47,8,58,12,"computeLinesAndColumns"],[47,30,58,34],[47,31,58,35],[47,35,58,39],[47,37,58,41],[47,41,58,45],[47,42,58,46,"source"],[47,48,58,52],[47,49,58,53],[48,8,59,12],[48,12,59,16],[48,13,59,17,"linesAndColumnsComputed"],[48,36,59,40],[48,39,59,43],[48,43,59,47],[49,6,60,8],[50,4,61,4],[50,5,61,5],[51,4,62,4,"getLocation"],[51,15,62,15],[51,17,62,17],[51,26,62,4,"getLocation"],[51,37,62,15,"getLocation"],[51,38,62,26,"offset"],[51,44,62,32],[51,46,62,34,"filename"],[51,54,62,42],[51,56,62,44],[52,6,63,8],[52,10,63,12],[52,11,63,13,"ensureLinesAndColumnsComputed"],[52,40,63,42],[52,41,63,43],[52,42,63,44],[53,6,65,8],[53,13,65,15],[54,8,66,12,"source"],[54,14,66,18],[54,16,66,20,"filename"],[54,24,66,28],[55,8,67,12,"offset"],[55,14,67,18],[55,16,67,20],[55,20,67,24],[55,21,67,25,"startOffset"],[55,32,67,36],[55,35,67,39,"offset"],[55,41,67,45],[56,8,68,12,"line"],[56,12,68,16],[56,14,68,18],[56,18,68,22],[56,19,68,23,"lines"],[56,24,68,28],[56,25,68,29,"offset"],[56,31,68,35],[56,32,68,36],[57,8,69,12,"column"],[57,14,69,18],[57,16,69,20],[57,20,69,24],[57,21,69,25,"columns"],[57,28,69,32],[57,29,69,33,"offset"],[57,35,69,39],[58,6,70,8],[58,7,70,9],[59,4,71,4],[59,5,71,5],[60,4,72,4,"getLocationRange"],[60,20,72,20],[60,22,72,22],[60,31,72,4,"getLocationRange"],[60,47,72,20,"getLocationRange"],[60,48,72,31,"start"],[60,53,72,36],[60,55,72,38,"end"],[60,58,72,41],[60,60,72,43,"filename"],[60,68,72,51],[60,70,72,53],[61,6,73,8],[61,10,73,12],[61,11,73,13,"ensureLinesAndColumnsComputed"],[61,40,73,42],[61,41,73,43],[61,42,73,44],[62,6,75,8],[62,13,75,15],[63,8,76,12,"source"],[63,14,76,18],[63,16,76,20,"filename"],[63,24,76,28],[64,8,77,12,"start"],[64,13,77,17],[64,15,77,19],[65,10,78,16,"offset"],[65,16,78,22],[65,18,78,24],[65,22,78,28],[65,23,78,29,"startOffset"],[65,34,78,40],[65,37,78,43,"start"],[65,42,78,48],[66,10,79,16,"line"],[66,14,79,20],[66,16,79,22],[66,20,79,26],[66,21,79,27,"lines"],[66,26,79,32],[66,27,79,33,"start"],[66,32,79,38],[66,33,79,39],[67,10,80,16,"column"],[67,16,80,22],[67,18,80,24],[67,22,80,28],[67,23,80,29,"columns"],[67,30,80,36],[67,31,80,37,"start"],[67,36,80,42],[68,8,81,12],[68,9,81,13],[69,8,82,12,"end"],[69,11,82,15],[69,13,82,17],[70,10,83,16,"offset"],[70,16,83,22],[70,18,83,24],[70,22,83,28],[70,23,83,29,"startOffset"],[70,34,83,40],[70,37,83,43,"end"],[70,40,83,46],[71,10,84,16,"line"],[71,14,84,20],[71,16,84,22],[71,20,84,26],[71,21,84,27,"lines"],[71,26,84,32],[71,27,84,33,"end"],[71,30,84,36],[71,31,84,37],[72,10,85,16,"column"],[72,16,85,22],[72,18,85,24],[72,22,85,28],[72,23,85,29,"columns"],[72,30,85,36],[72,31,85,37,"end"],[72,34,85,40],[73,8,86,12],[74,6,87,8],[74,7,87,9],[75,4,88,4],[76,2,89,0],[76,3,89,1],[77,2,91,0,"module"],[77,8,91,6],[77,9,91,7,"exports"],[77,16,91,14],[77,19,91,17,"OffsetToLocation"],[77,35,91,33],[78,0,91,34],[78,3]],"functionMap":{"names":["<global>","computeLinesAndColumns","OffsetToLocation","prototype.setSource","prototype.ensureLinesAndColumnsComputed","prototype.getLocation","prototype.getLocationRange"],"mappings":"AAA;ACO;CD+B;uBEE;CFI;eGG;KHM;mCIE;KJK;iBKC;KLS;sBMC;KNgB"}},"type":"js/module"}]}