{"dependencies":[{"name":"./tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":16,"index":16},"end":{"line":1,"column":38,"index":38}}],"key":"GTBiRzjUvnEXukakBS3gC84jK1A="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var TAB = 9;\n  var N = 10;\n  var F = 12;\n  var R = 13;\n  var SPACE = 32;\n  var EXCLAMATIONMARK = 33; // !\n  var NUMBERSIGN = 35; // #\n  var AMPERSAND = 38; // &\n  var APOSTROPHE = 39; // '\n  var LEFTPARENTHESIS = 40; // (\n  var RIGHTPARENTHESIS = 41; // )\n  var ASTERISK = 42; // *\n  var PLUSSIGN = 43; // +\n  var COMMA = 44; // ,\n  var HYPERMINUS = 45; // -\n  var LESSTHANSIGN = 60; // <\n  var GREATERTHANSIGN = 62; // >\n  var QUESTIONMARK = 63; // ?\n  var COMMERCIALAT = 64; // @\n  var LEFTSQUAREBRACKET = 91; // [\n  var RIGHTSQUAREBRACKET = 93; // ]\n  var LEFTCURLYBRACKET = 123; // {\n  var VERTICALLINE = 124; // |\n  var RIGHTCURLYBRACKET = 125; // }\n  var INFINITY = 8734; // ∞\n  var NAME_CHAR = createCharMap(function (ch) {\n    return /[a-zA-Z0-9\\-]/.test(ch);\n  });\n  var COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n  };\n  function createCharMap(fn) {\n    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);\n    for (var i = 0; i < 128; i++) {\n      array[i] = fn(String.fromCharCode(i)) ? 1 : 0;\n    }\n    return array;\n  }\n  function scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(tokenizer.findWsEnd(tokenizer.pos));\n  }\n  function scanWord(tokenizer) {\n    var end = tokenizer.pos;\n    for (; end < tokenizer.str.length; end++) {\n      var code = tokenizer.str.charCodeAt(end);\n      if (code >= 128 || NAME_CHAR[code] === 0) {\n        break;\n      }\n    }\n    if (tokenizer.pos === end) {\n      tokenizer.error('Expect a keyword');\n    }\n    return tokenizer.substringToPos(end);\n  }\n  function scanNumber(tokenizer) {\n    var end = tokenizer.pos;\n    for (; end < tokenizer.str.length; end++) {\n      var code = tokenizer.str.charCodeAt(end);\n      if (code < 48 || code > 57) {\n        break;\n      }\n    }\n    if (tokenizer.pos === end) {\n      tokenizer.error('Expect a number');\n    }\n    return tokenizer.substringToPos(end);\n  }\n  function scanString(tokenizer) {\n    var end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n    if (end === -1) {\n      tokenizer.pos = tokenizer.str.length;\n      tokenizer.error('Expect an apostrophe');\n    }\n    return tokenizer.substringToPos(end + 1);\n  }\n  function readMultiplierRange(tokenizer) {\n    var min = null;\n    var max = null;\n    tokenizer.eat(LEFTCURLYBRACKET);\n    min = scanNumber(tokenizer);\n    if (tokenizer.charCode() === COMMA) {\n      tokenizer.pos++;\n      if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n        max = scanNumber(tokenizer);\n      }\n    } else {\n      max = min;\n    }\n    tokenizer.eat(RIGHTCURLYBRACKET);\n    return {\n      min: Number(min),\n      max: max ? Number(max) : 0\n    };\n  }\n  function readMultiplier(tokenizer) {\n    var range = null;\n    var comma = false;\n    switch (tokenizer.charCode()) {\n      case ASTERISK:\n        tokenizer.pos++;\n        range = {\n          min: 0,\n          max: 0\n        };\n        break;\n      case PLUSSIGN:\n        tokenizer.pos++;\n        range = {\n          min: 1,\n          max: 0\n        };\n        break;\n      case QUESTIONMARK:\n        tokenizer.pos++;\n        range = {\n          min: 0,\n          max: 1\n        };\n        break;\n      case NUMBERSIGN:\n        tokenizer.pos++;\n        comma = true;\n        if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n          range = readMultiplierRange(tokenizer);\n        } else {\n          range = {\n            min: 1,\n            max: 0\n          };\n        }\n        break;\n      case LEFTCURLYBRACKET:\n        range = readMultiplierRange(tokenizer);\n        break;\n      default:\n        return null;\n    }\n    return {\n      type: 'Multiplier',\n      comma: comma,\n      min: range.min,\n      max: range.max,\n      term: null\n    };\n  }\n  function maybeMultiplied(tokenizer, node) {\n    var multiplier = readMultiplier(tokenizer);\n    if (multiplier !== null) {\n      multiplier.term = node;\n      return multiplier;\n    }\n    return node;\n  }\n  function maybeToken(tokenizer) {\n    var ch = tokenizer.peek();\n    if (ch === '') {\n      return null;\n    }\n    return {\n      type: 'Token',\n      value: ch\n    };\n  }\n  function readProperty(tokenizer) {\n    var name;\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n    name = scanWord(tokenizer);\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n    return maybeMultiplied(tokenizer, {\n      type: 'Property',\n      name: name\n    });\n  }\n\n  // https://drafts.csswg.org/css-values-3/#numeric-ranges\n  // 4.1. Range Restrictions and Range Definition Notation\n  //\n  // Range restrictions can be annotated in the numeric type notation using CSS bracketed\n  // range notation—[min,max]—within the angle brackets, after the identifying keyword,\n  // indicating a closed range between (and including) min and max.\n  // For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\n  function readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    var min = null; // -Infinity\n    var max = null; // Infinity\n    var sign = 1;\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    if (tokenizer.charCode() === HYPERMINUS) {\n      tokenizer.peek();\n      sign = -1;\n    }\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n      tokenizer.peek();\n    } else {\n      min = sign * Number(scanNumber(tokenizer));\n    }\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n    if (tokenizer.charCode() === INFINITY) {\n      tokenizer.peek();\n    } else {\n      sign = 1;\n      if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n      }\n      max = sign * Number(scanNumber(tokenizer));\n    }\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    // If no range is indicated, either by using the bracketed range notation\n    // or in the property description, then [−∞,∞] is assumed.\n    if (min === null && max === null) {\n      return null;\n    }\n    return {\n      type: 'Range',\n      min: min,\n      max: max\n    };\n  }\n  function readType(tokenizer) {\n    var name;\n    var opts = null;\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n    if (tokenizer.charCode() === LEFTPARENTHESIS && tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n      tokenizer.pos += 2;\n      name += '()';\n    }\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n      scanSpaces(tokenizer);\n      opts = readTypeRange(tokenizer);\n    }\n    tokenizer.eat(GREATERTHANSIGN);\n    return maybeMultiplied(tokenizer, {\n      type: 'Type',\n      name: name,\n      opts: opts\n    });\n  }\n  function readKeywordOrFunction(tokenizer) {\n    var name;\n    name = scanWord(tokenizer);\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n      tokenizer.pos++;\n      return {\n        type: 'Function',\n        name: name\n      };\n    }\n    return maybeMultiplied(tokenizer, {\n      type: 'Keyword',\n      name: name\n    });\n  }\n  function regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n      return {\n        type: 'Group',\n        terms: terms,\n        combinator: combinator,\n        disallowEmpty: false,\n        explicit: false\n      };\n    }\n    combinators = Object.keys(combinators).sort(function (a, b) {\n      return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];\n    });\n    while (combinators.length > 0) {\n      var combinator = combinators.shift();\n      for (var i = 0, subgroupStart = 0; i < terms.length; i++) {\n        var term = terms[i];\n        if (term.type === 'Combinator') {\n          if (term.value === combinator) {\n            if (subgroupStart === -1) {\n              subgroupStart = i - 1;\n            }\n            terms.splice(i, 1);\n            i--;\n          } else {\n            if (subgroupStart !== -1 && i - subgroupStart > 1) {\n              terms.splice(subgroupStart, i - subgroupStart, createGroup(terms.slice(subgroupStart, i), combinator));\n              i = subgroupStart + 1;\n            }\n            subgroupStart = -1;\n          }\n        }\n      }\n      if (subgroupStart !== -1 && combinators.length) {\n        terms.splice(subgroupStart, i - subgroupStart, createGroup(terms.slice(subgroupStart, i), combinator));\n      }\n    }\n    return combinator;\n  }\n  function readImplicitGroup(tokenizer) {\n    var terms = [];\n    var combinators = {};\n    var token;\n    var prevToken = null;\n    var prevTokenPos = tokenizer.pos;\n    while (token = peek(tokenizer)) {\n      if (token.type !== 'Spaces') {\n        if (token.type === 'Combinator') {\n          // check for combinator in group beginning and double combinator sequence\n          if (prevToken === null || prevToken.type === 'Combinator') {\n            tokenizer.pos = prevTokenPos;\n            tokenizer.error('Unexpected combinator');\n          }\n          combinators[token.value] = true;\n        } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n          combinators[' '] = true; // a b\n          terms.push({\n            type: 'Combinator',\n            value: ' '\n          });\n        }\n        terms.push(token);\n        prevToken = token;\n        prevTokenPos = tokenizer.pos;\n      }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n      tokenizer.pos -= prevTokenPos;\n      tokenizer.error('Unexpected combinator');\n    }\n    return {\n      type: 'Group',\n      terms: terms,\n      combinator: regroupTerms(terms, combinators) || ' ',\n      disallowEmpty: false,\n      explicit: false\n    };\n  }\n  function readGroup(tokenizer) {\n    var result;\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n    result.explicit = true;\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n      tokenizer.pos++;\n      result.disallowEmpty = true;\n    }\n    return result;\n  }\n  function peek(tokenizer) {\n    var code = tokenizer.charCode();\n    if (code < 128 && NAME_CHAR[code] === 1) {\n      return readKeywordOrFunction(tokenizer);\n    }\n    switch (code) {\n      case RIGHTSQUAREBRACKET:\n        // don't eat, stop scan a group\n        break;\n      case LEFTSQUAREBRACKET:\n        return maybeMultiplied(tokenizer, readGroup(tokenizer));\n      case LESSTHANSIGN:\n        return tokenizer.nextCharCode() === APOSTROPHE ? readProperty(tokenizer) : readType(tokenizer);\n      case VERTICALLINE:\n        return {\n          type: 'Combinator',\n          value: tokenizer.substringToPos(tokenizer.nextCharCode() === VERTICALLINE ? tokenizer.pos + 2 : tokenizer.pos + 1)\n        };\n      case AMPERSAND:\n        tokenizer.pos++;\n        tokenizer.eat(AMPERSAND);\n        return {\n          type: 'Combinator',\n          value: '&&'\n        };\n      case COMMA:\n        tokenizer.pos++;\n        return {\n          type: 'Comma'\n        };\n      case APOSTROPHE:\n        return maybeMultiplied(tokenizer, {\n          type: 'String',\n          value: scanString(tokenizer)\n        });\n      case SPACE:\n      case TAB:\n      case N:\n      case R:\n      case F:\n        return {\n          type: 'Spaces',\n          value: scanSpaces(tokenizer)\n        };\n      case COMMERCIALAT:\n        code = tokenizer.nextCharCode();\n        if (code < 128 && NAME_CHAR[code] === 1) {\n          tokenizer.pos++;\n          return {\n            type: 'AtKeyword',\n            name: scanWord(tokenizer)\n          };\n        }\n        return maybeToken(tokenizer);\n      case ASTERISK:\n      case PLUSSIGN:\n      case QUESTIONMARK:\n      case NUMBERSIGN:\n      case EXCLAMATIONMARK:\n        // prohibited tokens (used as a multiplier start)\n        break;\n      case LEFTCURLYBRACKET:\n        // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n        // check next char isn't a number, because it's likely a disjoined multiplier\n        code = tokenizer.nextCharCode();\n        if (code < 48 || code > 57) {\n          return maybeToken(tokenizer);\n        }\n        break;\n      default:\n        return maybeToken(tokenizer);\n    }\n  }\n  function parse(source) {\n    var tokenizer = new (_$$_REQUIRE(_dependencyMap[0], \"./tokenizer\"))(source);\n    var result = readImplicitGroup(tokenizer);\n    if (tokenizer.pos !== source.length) {\n      tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n      result = result.terms[0];\n    }\n    return result;\n  }\n\n  // warm up parse to elimitate code branches that never execute\n  // fix soft deoptimizations (insufficient type feedback)\n  parse('[a&&<b>#|<\\'c\\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');\n  module.exports = parse;\n});","lineCount":447,"map":[[2,2,2,0],[2,6,2,4,"TAB"],[2,9,2,7],[2,12,2,10],[2,13,2,11],[3,2,3,0],[3,6,3,4,"N"],[3,7,3,5],[3,10,3,8],[3,12,3,10],[4,2,4,0],[4,6,4,4,"F"],[4,7,4,5],[4,10,4,8],[4,12,4,10],[5,2,5,0],[5,6,5,4,"R"],[5,7,5,5],[5,10,5,8],[5,12,5,10],[6,2,6,0],[6,6,6,4,"SPACE"],[6,11,6,9],[6,14,6,12],[6,16,6,14],[7,2,7,0],[7,6,7,4,"EXCLAMATIONMARK"],[7,21,7,19],[7,24,7,22],[7,26,7,24],[7,27,7,25],[7,28,7,29],[8,2,8,0],[8,6,8,4,"NUMBERSIGN"],[8,16,8,14],[8,19,8,17],[8,21,8,19],[8,22,8,20],[8,23,8,29],[9,2,9,0],[9,6,9,4,"AMPERSAND"],[9,15,9,13],[9,18,9,16],[9,20,9,18],[9,21,9,19],[9,22,9,29],[10,2,10,0],[10,6,10,4,"APOSTROPHE"],[10,16,10,14],[10,19,10,17],[10,21,10,19],[10,22,10,20],[10,23,10,29],[11,2,11,0],[11,6,11,4,"LEFTPARENTHESIS"],[11,21,11,19],[11,24,11,22],[11,26,11,24],[11,27,11,25],[11,28,11,29],[12,2,12,0],[12,6,12,4,"RIGHTPARENTHESIS"],[12,22,12,20],[12,25,12,23],[12,27,12,25],[12,28,12,26],[12,29,12,29],[13,2,13,0],[13,6,13,4,"ASTERISK"],[13,14,13,12],[13,17,13,15],[13,19,13,17],[13,20,13,18],[13,21,13,29],[14,2,14,0],[14,6,14,4,"PLUSSIGN"],[14,14,14,12],[14,17,14,15],[14,19,14,17],[14,20,14,18],[14,21,14,29],[15,2,15,0],[15,6,15,4,"COMMA"],[15,11,15,9],[15,14,15,12],[15,16,15,14],[15,17,15,15],[15,18,15,29],[16,2,16,0],[16,6,16,4,"HYPERMINUS"],[16,16,16,14],[16,19,16,17],[16,21,16,19],[16,22,16,20],[16,23,16,29],[17,2,17,0],[17,6,17,4,"LESSTHANSIGN"],[17,18,17,16],[17,21,17,19],[17,23,17,21],[17,24,17,22],[17,25,17,29],[18,2,18,0],[18,6,18,4,"GREATERTHANSIGN"],[18,21,18,19],[18,24,18,22],[18,26,18,24],[18,27,18,25],[18,28,18,29],[19,2,19,0],[19,6,19,4,"QUESTIONMARK"],[19,18,19,16],[19,21,19,19],[19,23,19,21],[19,24,19,22],[19,25,19,29],[20,2,20,0],[20,6,20,4,"COMMERCIALAT"],[20,18,20,16],[20,21,20,19],[20,23,20,21],[20,24,20,22],[20,25,20,29],[21,2,21,0],[21,6,21,4,"LEFTSQUAREBRACKET"],[21,23,21,21],[21,26,21,24],[21,28,21,26],[21,29,21,27],[21,30,21,29],[22,2,22,0],[22,6,22,4,"RIGHTSQUAREBRACKET"],[22,24,22,22],[22,27,22,25],[22,29,22,27],[22,30,22,28],[22,31,22,29],[23,2,23,0],[23,6,23,4,"LEFTCURLYBRACKET"],[23,22,23,20],[23,25,23,23],[23,28,23,26],[23,29,23,27],[23,30,23,29],[24,2,24,0],[24,6,24,4,"VERTICALLINE"],[24,18,24,16],[24,21,24,19],[24,24,24,22],[24,25,24,23],[24,26,24,29],[25,2,25,0],[25,6,25,4,"RIGHTCURLYBRACKET"],[25,23,25,21],[25,26,25,24],[25,29,25,27],[25,30,25,28],[25,31,25,29],[26,2,26,0],[26,6,26,4,"INFINITY"],[26,14,26,12],[26,17,26,15],[26,21,26,19],[26,22,26,20],[26,23,26,29],[27,2,27,0],[27,6,27,4,"NAME_CHAR"],[27,15,27,13],[27,18,27,16,"createCharMap"],[27,31,27,29],[27,32,27,30],[27,42,27,39,"ch"],[27,44,27,41],[27,46,27,43],[28,4,28,4],[28,11,28,11],[28,26,28,26],[28,27,28,27,"test"],[28,31,28,31],[28,32,28,32,"ch"],[28,34,28,34],[28,35,28,35],[29,2,29,0],[29,3,29,1],[29,4,29,2],[30,2,30,0],[30,6,30,4,"COMBINATOR_PRECEDENCE"],[30,27,30,25],[30,30,30,28],[31,4,31,4],[31,7,31,7],[31,9,31,9],[31,10,31,10],[32,4,32,4],[32,8,32,8],[32,10,32,10],[32,11,32,11],[33,4,33,4],[33,8,33,8],[33,10,33,10],[33,11,33,11],[34,4,34,4],[34,7,34,7],[34,9,34,9],[35,2,35,0],[35,3,35,1],[36,2,37,0],[36,11,37,9,"createCharMap"],[36,24,37,22,"createCharMap"],[36,25,37,23,"fn"],[36,27,37,25],[36,29,37,27],[37,4,38,4],[37,8,38,8,"array"],[37,13,38,13],[37,16,38,16],[37,23,38,23,"Uint32Array"],[37,34,38,34],[37,39,38,39],[37,49,38,49],[37,52,38,52],[37,56,38,56,"Uint32Array"],[37,67,38,67],[37,68,38,68],[37,71,38,71],[37,72,38,72],[37,75,38,75],[37,79,38,79,"Array"],[37,84,38,84],[37,85,38,85],[37,88,38,88],[37,89,38,89],[38,4,39,4],[38,9,39,9],[38,13,39,13,"i"],[38,14,39,14],[38,17,39,17],[38,18,39,18],[38,20,39,20,"i"],[38,21,39,21],[38,24,39,24],[38,27,39,27],[38,29,39,29,"i"],[38,30,39,30],[38,32,39,32],[38,34,39,34],[39,6,40,8,"array"],[39,11,40,13],[39,12,40,14,"i"],[39,13,40,15],[39,14,40,16],[39,17,40,19,"fn"],[39,19,40,21],[39,20,40,22,"String"],[39,26,40,28],[39,27,40,29,"fromCharCode"],[39,39,40,41],[39,40,40,42,"i"],[39,41,40,43],[39,42,40,44],[39,43,40,45],[39,46,40,48],[39,47,40,49],[39,50,40,52],[39,51,40,53],[40,4,41,4],[41,4,42,4],[41,11,42,11,"array"],[41,16,42,16],[42,2,43,0],[43,2,45,0],[43,11,45,9,"scanSpaces"],[43,21,45,19,"scanSpaces"],[43,22,45,20,"tokenizer"],[43,31,45,29],[43,33,45,31],[44,4,46,4],[44,11,46,11,"tokenizer"],[44,20,46,20],[44,21,46,21,"substringToPos"],[44,35,46,35],[44,36,47,8,"tokenizer"],[44,45,47,17],[44,46,47,18,"findWsEnd"],[44,55,47,27],[44,56,47,28,"tokenizer"],[44,65,47,37],[44,66,47,38,"pos"],[44,69,47,41],[44,70,48,4],[44,71,48,5],[45,2,49,0],[46,2,51,0],[46,11,51,9,"scanWord"],[46,19,51,17,"scanWord"],[46,20,51,18,"tokenizer"],[46,29,51,27],[46,31,51,29],[47,4,52,4],[47,8,52,8,"end"],[47,11,52,11],[47,14,52,14,"tokenizer"],[47,23,52,23],[47,24,52,24,"pos"],[47,27,52,27],[48,4,54,4],[48,11,54,11,"end"],[48,14,54,14],[48,17,54,17,"tokenizer"],[48,26,54,26],[48,27,54,27,"str"],[48,30,54,30],[48,31,54,31,"length"],[48,37,54,37],[48,39,54,39,"end"],[48,42,54,42],[48,44,54,44],[48,46,54,46],[49,6,55,8],[49,10,55,12,"code"],[49,14,55,16],[49,17,55,19,"tokenizer"],[49,26,55,28],[49,27,55,29,"str"],[49,30,55,32],[49,31,55,33,"charCodeAt"],[49,41,55,43],[49,42,55,44,"end"],[49,45,55,47],[49,46,55,48],[50,6,56,8],[50,10,56,12,"code"],[50,14,56,16],[50,18,56,20],[50,21,56,23],[50,25,56,27,"NAME_CHAR"],[50,34,56,36],[50,35,56,37,"code"],[50,39,56,41],[50,40,56,42],[50,45,56,47],[50,46,56,48],[50,48,56,50],[51,8,57,12],[52,6,58,8],[53,4,59,4],[54,4,61,4],[54,8,61,8,"tokenizer"],[54,17,61,17],[54,18,61,18,"pos"],[54,21,61,21],[54,26,61,26,"end"],[54,29,61,29],[54,31,61,31],[55,6,62,8,"tokenizer"],[55,15,62,17],[55,16,62,18,"error"],[55,21,62,23],[55,22,62,24],[55,40,62,42],[55,41,62,43],[56,4,63,4],[57,4,65,4],[57,11,65,11,"tokenizer"],[57,20,65,20],[57,21,65,21,"substringToPos"],[57,35,65,35],[57,36,65,36,"end"],[57,39,65,39],[57,40,65,40],[58,2,66,0],[59,2,68,0],[59,11,68,9,"scanNumber"],[59,21,68,19,"scanNumber"],[59,22,68,20,"tokenizer"],[59,31,68,29],[59,33,68,31],[60,4,69,4],[60,8,69,8,"end"],[60,11,69,11],[60,14,69,14,"tokenizer"],[60,23,69,23],[60,24,69,24,"pos"],[60,27,69,27],[61,4,71,4],[61,11,71,11,"end"],[61,14,71,14],[61,17,71,17,"tokenizer"],[61,26,71,26],[61,27,71,27,"str"],[61,30,71,30],[61,31,71,31,"length"],[61,37,71,37],[61,39,71,39,"end"],[61,42,71,42],[61,44,71,44],[61,46,71,46],[62,6,72,8],[62,10,72,12,"code"],[62,14,72,16],[62,17,72,19,"tokenizer"],[62,26,72,28],[62,27,72,29,"str"],[62,30,72,32],[62,31,72,33,"charCodeAt"],[62,41,72,43],[62,42,72,44,"end"],[62,45,72,47],[62,46,72,48],[63,6,73,8],[63,10,73,12,"code"],[63,14,73,16],[63,17,73,19],[63,19,73,21],[63,23,73,25,"code"],[63,27,73,29],[63,30,73,32],[63,32,73,34],[63,34,73,36],[64,8,74,12],[65,6,75,8],[66,4,76,4],[67,4,78,4],[67,8,78,8,"tokenizer"],[67,17,78,17],[67,18,78,18,"pos"],[67,21,78,21],[67,26,78,26,"end"],[67,29,78,29],[67,31,78,31],[68,6,79,8,"tokenizer"],[68,15,79,17],[68,16,79,18,"error"],[68,21,79,23],[68,22,79,24],[68,39,79,41],[68,40,79,42],[69,4,80,4],[70,4,82,4],[70,11,82,11,"tokenizer"],[70,20,82,20],[70,21,82,21,"substringToPos"],[70,35,82,35],[70,36,82,36,"end"],[70,39,82,39],[70,40,82,40],[71,2,83,0],[72,2,85,0],[72,11,85,9,"scanString"],[72,21,85,19,"scanString"],[72,22,85,20,"tokenizer"],[72,31,85,29],[72,33,85,31],[73,4,86,4],[73,8,86,8,"end"],[73,11,86,11],[73,14,86,14,"tokenizer"],[73,23,86,23],[73,24,86,24,"str"],[73,27,86,27],[73,28,86,28,"indexOf"],[73,35,86,35],[73,36,86,36],[73,40,86,40],[73,42,86,42,"tokenizer"],[73,51,86,51],[73,52,86,52,"pos"],[73,55,86,55],[73,58,86,58],[73,59,86,59],[73,60,86,60],[74,4,88,4],[74,8,88,8,"end"],[74,11,88,11],[74,16,88,16],[74,17,88,17],[74,18,88,18],[74,20,88,20],[75,6,89,8,"tokenizer"],[75,15,89,17],[75,16,89,18,"pos"],[75,19,89,21],[75,22,89,24,"tokenizer"],[75,31,89,33],[75,32,89,34,"str"],[75,35,89,37],[75,36,89,38,"length"],[75,42,89,44],[76,6,90,8,"tokenizer"],[76,15,90,17],[76,16,90,18,"error"],[76,21,90,23],[76,22,90,24],[76,44,90,46],[76,45,90,47],[77,4,91,4],[78,4,93,4],[78,11,93,11,"tokenizer"],[78,20,93,20],[78,21,93,21,"substringToPos"],[78,35,93,35],[78,36,93,36,"end"],[78,39,93,39],[78,42,93,42],[78,43,93,43],[78,44,93,44],[79,2,94,0],[80,2,96,0],[80,11,96,9,"readMultiplierRange"],[80,30,96,28,"readMultiplierRange"],[80,31,96,29,"tokenizer"],[80,40,96,38],[80,42,96,40],[81,4,97,4],[81,8,97,8,"min"],[81,11,97,11],[81,14,97,14],[81,18,97,18],[82,4,98,4],[82,8,98,8,"max"],[82,11,98,11],[82,14,98,14],[82,18,98,18],[83,4,100,4,"tokenizer"],[83,13,100,13],[83,14,100,14,"eat"],[83,17,100,17],[83,18,100,18,"LEFTCURLYBRACKET"],[83,34,100,34],[83,35,100,35],[84,4,102,4,"min"],[84,7,102,7],[84,10,102,10,"scanNumber"],[84,20,102,20],[84,21,102,21,"tokenizer"],[84,30,102,30],[84,31,102,31],[85,4,104,4],[85,8,104,8,"tokenizer"],[85,17,104,17],[85,18,104,18,"charCode"],[85,26,104,26],[85,27,104,27],[85,28,104,28],[85,33,104,33,"COMMA"],[85,38,104,38],[85,40,104,40],[86,6,105,8,"tokenizer"],[86,15,105,17],[86,16,105,18,"pos"],[86,19,105,21],[86,21,105,23],[87,6,106,8],[87,10,106,12,"tokenizer"],[87,19,106,21],[87,20,106,22,"charCode"],[87,28,106,30],[87,29,106,31],[87,30,106,32],[87,35,106,37,"RIGHTCURLYBRACKET"],[87,52,106,54],[87,54,106,56],[88,8,107,12,"max"],[88,11,107,15],[88,14,107,18,"scanNumber"],[88,24,107,28],[88,25,107,29,"tokenizer"],[88,34,107,38],[88,35,107,39],[89,6,108,8],[90,4,109,4],[90,5,109,5],[90,11,109,11],[91,6,110,8,"max"],[91,9,110,11],[91,12,110,14,"min"],[91,15,110,17],[92,4,111,4],[93,4,113,4,"tokenizer"],[93,13,113,13],[93,14,113,14,"eat"],[93,17,113,17],[93,18,113,18,"RIGHTCURLYBRACKET"],[93,35,113,35],[93,36,113,36],[94,4,115,4],[94,11,115,11],[95,6,116,8,"min"],[95,9,116,11],[95,11,116,13,"Number"],[95,17,116,19],[95,18,116,20,"min"],[95,21,116,23],[95,22,116,24],[96,6,117,8,"max"],[96,9,117,11],[96,11,117,13,"max"],[96,14,117,16],[96,17,117,19,"Number"],[96,23,117,25],[96,24,117,26,"max"],[96,27,117,29],[96,28,117,30],[96,31,117,33],[97,4,118,4],[97,5,118,5],[98,2,119,0],[99,2,121,0],[99,11,121,9,"readMultiplier"],[99,25,121,23,"readMultiplier"],[99,26,121,24,"tokenizer"],[99,35,121,33],[99,37,121,35],[100,4,122,4],[100,8,122,8,"range"],[100,13,122,13],[100,16,122,16],[100,20,122,20],[101,4,123,4],[101,8,123,8,"comma"],[101,13,123,13],[101,16,123,16],[101,21,123,21],[102,4,125,4],[102,12,125,12,"tokenizer"],[102,21,125,21],[102,22,125,22,"charCode"],[102,30,125,30],[102,31,125,31],[102,32,125,32],[103,6,126,8],[103,11,126,13,"ASTERISK"],[103,19,126,21],[104,8,127,12,"tokenizer"],[104,17,127,21],[104,18,127,22,"pos"],[104,21,127,25],[104,23,127,27],[105,8,129,12,"range"],[105,13,129,17],[105,16,129,20],[106,10,130,16,"min"],[106,13,130,19],[106,15,130,21],[106,16,130,22],[107,10,131,16,"max"],[107,13,131,19],[107,15,131,21],[108,8,132,12],[108,9,132,13],[109,8,134,12],[110,6,136,8],[110,11,136,13,"PLUSSIGN"],[110,19,136,21],[111,8,137,12,"tokenizer"],[111,17,137,21],[111,18,137,22,"pos"],[111,21,137,25],[111,23,137,27],[112,8,139,12,"range"],[112,13,139,17],[112,16,139,20],[113,10,140,16,"min"],[113,13,140,19],[113,15,140,21],[113,16,140,22],[114,10,141,16,"max"],[114,13,141,19],[114,15,141,21],[115,8,142,12],[115,9,142,13],[116,8,144,12],[117,6,146,8],[117,11,146,13,"QUESTIONMARK"],[117,23,146,25],[118,8,147,12,"tokenizer"],[118,17,147,21],[118,18,147,22,"pos"],[118,21,147,25],[118,23,147,27],[119,8,149,12,"range"],[119,13,149,17],[119,16,149,20],[120,10,150,16,"min"],[120,13,150,19],[120,15,150,21],[120,16,150,22],[121,10,151,16,"max"],[121,13,151,19],[121,15,151,21],[122,8,152,12],[122,9,152,13],[123,8,154,12],[124,6,156,8],[124,11,156,13,"NUMBERSIGN"],[124,21,156,23],[125,8,157,12,"tokenizer"],[125,17,157,21],[125,18,157,22,"pos"],[125,21,157,25],[125,23,157,27],[126,8,159,12,"comma"],[126,13,159,17],[126,16,159,20],[126,20,159,24],[127,8,161,12],[127,12,161,16,"tokenizer"],[127,21,161,25],[127,22,161,26,"charCode"],[127,30,161,34],[127,31,161,35],[127,32,161,36],[127,37,161,41,"LEFTCURLYBRACKET"],[127,53,161,57],[127,55,161,59],[128,10,162,16,"range"],[128,15,162,21],[128,18,162,24,"readMultiplierRange"],[128,37,162,43],[128,38,162,44,"tokenizer"],[128,47,162,53],[128,48,162,54],[129,8,163,12],[129,9,163,13],[129,15,163,19],[130,10,164,16,"range"],[130,15,164,21],[130,18,164,24],[131,12,165,20,"min"],[131,15,165,23],[131,17,165,25],[131,18,165,26],[132,12,166,20,"max"],[132,15,166,23],[132,17,166,25],[133,10,167,16],[133,11,167,17],[134,8,168,12],[135,8,170,12],[136,6,172,8],[136,11,172,13,"LEFTCURLYBRACKET"],[136,27,172,29],[137,8,173,12,"range"],[137,13,173,17],[137,16,173,20,"readMultiplierRange"],[137,35,173,39],[137,36,173,40,"tokenizer"],[137,45,173,49],[137,46,173,50],[138,8,174,12],[139,6,176,8],[140,8,177,12],[140,15,177,19],[140,19,177,23],[141,4,178,4],[142,4,180,4],[142,11,180,11],[143,6,181,8,"type"],[143,10,181,12],[143,12,181,14],[143,24,181,26],[144,6,182,8,"comma"],[144,11,182,13],[144,13,182,15,"comma"],[144,18,182,20],[145,6,183,8,"min"],[145,9,183,11],[145,11,183,13,"range"],[145,16,183,18],[145,17,183,19,"min"],[145,20,183,22],[146,6,184,8,"max"],[146,9,184,11],[146,11,184,13,"range"],[146,16,184,18],[146,17,184,19,"max"],[146,20,184,22],[147,6,185,8,"term"],[147,10,185,12],[147,12,185,14],[148,4,186,4],[148,5,186,5],[149,2,187,0],[150,2,189,0],[150,11,189,9,"maybeMultiplied"],[150,26,189,24,"maybeMultiplied"],[150,27,189,25,"tokenizer"],[150,36,189,34],[150,38,189,36,"node"],[150,42,189,40],[150,44,189,42],[151,4,190,4],[151,8,190,8,"multiplier"],[151,18,190,18],[151,21,190,21,"readMultiplier"],[151,35,190,35],[151,36,190,36,"tokenizer"],[151,45,190,45],[151,46,190,46],[152,4,192,4],[152,8,192,8,"multiplier"],[152,18,192,18],[152,23,192,23],[152,27,192,27],[152,29,192,29],[153,6,193,8,"multiplier"],[153,16,193,18],[153,17,193,19,"term"],[153,21,193,23],[153,24,193,26,"node"],[153,28,193,30],[154,6,194,8],[154,13,194,15,"multiplier"],[154,23,194,25],[155,4,195,4],[156,4,197,4],[156,11,197,11,"node"],[156,15,197,15],[157,2,198,0],[158,2,200,0],[158,11,200,9,"maybeToken"],[158,21,200,19,"maybeToken"],[158,22,200,20,"tokenizer"],[158,31,200,29],[158,33,200,31],[159,4,201,4],[159,8,201,8,"ch"],[159,10,201,10],[159,13,201,13,"tokenizer"],[159,22,201,22],[159,23,201,23,"peek"],[159,27,201,27],[159,28,201,28],[159,29,201,29],[160,4,203,4],[160,8,203,8,"ch"],[160,10,203,10],[160,15,203,15],[160,17,203,17],[160,19,203,19],[161,6,204,8],[161,13,204,15],[161,17,204,19],[162,4,205,4],[163,4,207,4],[163,11,207,11],[164,6,208,8,"type"],[164,10,208,12],[164,12,208,14],[164,19,208,21],[165,6,209,8,"value"],[165,11,209,13],[165,13,209,15,"ch"],[166,4,210,4],[166,5,210,5],[167,2,211,0],[168,2,213,0],[168,11,213,9,"readProperty"],[168,23,213,21,"readProperty"],[168,24,213,22,"tokenizer"],[168,33,213,31],[168,35,213,33],[169,4,214,4],[169,8,214,8,"name"],[169,12,214,12],[170,4,216,4,"tokenizer"],[170,13,216,13],[170,14,216,14,"eat"],[170,17,216,17],[170,18,216,18,"LESSTHANSIGN"],[170,30,216,30],[170,31,216,31],[171,4,217,4,"tokenizer"],[171,13,217,13],[171,14,217,14,"eat"],[171,17,217,17],[171,18,217,18,"APOSTROPHE"],[171,28,217,28],[171,29,217,29],[172,4,219,4,"name"],[172,8,219,8],[172,11,219,11,"scanWord"],[172,19,219,19],[172,20,219,20,"tokenizer"],[172,29,219,29],[172,30,219,30],[173,4,221,4,"tokenizer"],[173,13,221,13],[173,14,221,14,"eat"],[173,17,221,17],[173,18,221,18,"APOSTROPHE"],[173,28,221,28],[173,29,221,29],[174,4,222,4,"tokenizer"],[174,13,222,13],[174,14,222,14,"eat"],[174,17,222,17],[174,18,222,18,"GREATERTHANSIGN"],[174,33,222,33],[174,34,222,34],[175,4,224,4],[175,11,224,11,"maybeMultiplied"],[175,26,224,26],[175,27,224,27,"tokenizer"],[175,36,224,36],[175,38,224,38],[176,6,225,8,"type"],[176,10,225,12],[176,12,225,14],[176,22,225,24],[177,6,226,8,"name"],[177,10,226,12],[177,12,226,14,"name"],[178,4,227,4],[178,5,227,5],[178,6,227,6],[179,2,228,0],[181,2,230,0],[182,2,231,0],[183,2,232,0],[184,2,233,0],[185,2,234,0],[186,2,235,0],[187,2,236,0],[188,2,237,0],[188,11,237,9,"readTypeRange"],[188,24,237,22,"readTypeRange"],[188,25,237,23,"tokenizer"],[188,34,237,32],[188,36,237,34],[189,4,238,4],[190,4,239,4],[190,8,239,8,"min"],[190,11,239,11],[190,14,239,14],[190,18,239,18],[190,19,239,19],[190,20,239,20],[191,4,240,4],[191,8,240,8,"max"],[191,11,240,11],[191,14,240,14],[191,18,240,18],[191,19,240,19],[191,20,240,20],[192,4,241,4],[192,8,241,8,"sign"],[192,12,241,12],[192,15,241,15],[192,16,241,16],[193,4,243,4,"tokenizer"],[193,13,243,13],[193,14,243,14,"eat"],[193,17,243,17],[193,18,243,18,"LEFTSQUAREBRACKET"],[193,35,243,35],[193,36,243,36],[194,4,245,4],[194,8,245,8,"tokenizer"],[194,17,245,17],[194,18,245,18,"charCode"],[194,26,245,26],[194,27,245,27],[194,28,245,28],[194,33,245,33,"HYPERMINUS"],[194,43,245,43],[194,45,245,45],[195,6,246,8,"tokenizer"],[195,15,246,17],[195,16,246,18,"peek"],[195,20,246,22],[195,21,246,23],[195,22,246,24],[196,6,247,8,"sign"],[196,10,247,12],[196,13,247,15],[196,14,247,16],[196,15,247,17],[197,4,248,4],[198,4,250,4],[198,8,250,8,"sign"],[198,12,250,12],[198,16,250,16],[198,17,250,17],[198,18,250,18],[198,22,250,22,"tokenizer"],[198,31,250,31],[198,32,250,32,"charCode"],[198,40,250,40],[198,41,250,41],[198,42,250,42],[198,47,250,47,"INFINITY"],[198,55,250,55],[198,57,250,57],[199,6,251,8,"tokenizer"],[199,15,251,17],[199,16,251,18,"peek"],[199,20,251,22],[199,21,251,23],[199,22,251,24],[200,4,252,4],[200,5,252,5],[200,11,252,11],[201,6,253,8,"min"],[201,9,253,11],[201,12,253,14,"sign"],[201,16,253,18],[201,19,253,21,"Number"],[201,25,253,27],[201,26,253,28,"scanNumber"],[201,36,253,38],[201,37,253,39,"tokenizer"],[201,46,253,48],[201,47,253,49],[201,48,253,50],[202,4,254,4],[203,4,256,4,"scanSpaces"],[203,14,256,14],[203,15,256,15,"tokenizer"],[203,24,256,24],[203,25,256,25],[204,4,257,4,"tokenizer"],[204,13,257,13],[204,14,257,14,"eat"],[204,17,257,17],[204,18,257,18,"COMMA"],[204,23,257,23],[204,24,257,24],[205,4,258,4,"scanSpaces"],[205,14,258,14],[205,15,258,15,"tokenizer"],[205,24,258,24],[205,25,258,25],[206,4,260,4],[206,8,260,8,"tokenizer"],[206,17,260,17],[206,18,260,18,"charCode"],[206,26,260,26],[206,27,260,27],[206,28,260,28],[206,33,260,33,"INFINITY"],[206,41,260,41],[206,43,260,43],[207,6,261,8,"tokenizer"],[207,15,261,17],[207,16,261,18,"peek"],[207,20,261,22],[207,21,261,23],[207,22,261,24],[208,4,262,4],[208,5,262,5],[208,11,262,11],[209,6,263,8,"sign"],[209,10,263,12],[209,13,263,15],[209,14,263,16],[210,6,265,8],[210,10,265,12,"tokenizer"],[210,19,265,21],[210,20,265,22,"charCode"],[210,28,265,30],[210,29,265,31],[210,30,265,32],[210,35,265,37,"HYPERMINUS"],[210,45,265,47],[210,47,265,49],[211,8,266,12,"tokenizer"],[211,17,266,21],[211,18,266,22,"peek"],[211,22,266,26],[211,23,266,27],[211,24,266,28],[212,8,267,12,"sign"],[212,12,267,16],[212,15,267,19],[212,16,267,20],[212,17,267,21],[213,6,268,8],[214,6,270,8,"max"],[214,9,270,11],[214,12,270,14,"sign"],[214,16,270,18],[214,19,270,21,"Number"],[214,25,270,27],[214,26,270,28,"scanNumber"],[214,36,270,38],[214,37,270,39,"tokenizer"],[214,46,270,48],[214,47,270,49],[214,48,270,50],[215,4,271,4],[216,4,273,4,"tokenizer"],[216,13,273,13],[216,14,273,14,"eat"],[216,17,273,17],[216,18,273,18,"RIGHTSQUAREBRACKET"],[216,36,273,36],[216,37,273,37],[218,4,275,4],[219,4,276,4],[220,4,277,4],[220,8,277,8,"min"],[220,11,277,11],[220,16,277,16],[220,20,277,20],[220,24,277,24,"max"],[220,27,277,27],[220,32,277,32],[220,36,277,36],[220,38,277,38],[221,6,278,8],[221,13,278,15],[221,17,278,19],[222,4,279,4],[223,4,281,4],[223,11,281,11],[224,6,282,8,"type"],[224,10,282,12],[224,12,282,14],[224,19,282,21],[225,6,283,8,"min"],[225,9,283,11],[225,11,283,13,"min"],[225,14,283,16],[226,6,284,8,"max"],[226,9,284,11],[226,11,284,13,"max"],[227,4,285,4],[227,5,285,5],[228,2,286,0],[229,2,288,0],[229,11,288,9,"readType"],[229,19,288,17,"readType"],[229,20,288,18,"tokenizer"],[229,29,288,27],[229,31,288,29],[230,4,289,4],[230,8,289,8,"name"],[230,12,289,12],[231,4,290,4],[231,8,290,8,"opts"],[231,12,290,12],[231,15,290,15],[231,19,290,19],[232,4,292,4,"tokenizer"],[232,13,292,13],[232,14,292,14,"eat"],[232,17,292,17],[232,18,292,18,"LESSTHANSIGN"],[232,30,292,30],[232,31,292,31],[233,4,293,4,"name"],[233,8,293,8],[233,11,293,11,"scanWord"],[233,19,293,19],[233,20,293,20,"tokenizer"],[233,29,293,29],[233,30,293,30],[234,4,295,4],[234,8,295,8,"tokenizer"],[234,17,295,17],[234,18,295,18,"charCode"],[234,26,295,26],[234,27,295,27],[234,28,295,28],[234,33,295,33,"LEFTPARENTHESIS"],[234,48,295,48],[234,52,296,8,"tokenizer"],[234,61,296,17],[234,62,296,18,"nextCharCode"],[234,74,296,30],[234,75,296,31],[234,76,296,32],[234,81,296,37,"RIGHTPARENTHESIS"],[234,97,296,53],[234,99,296,55],[235,6,297,8,"tokenizer"],[235,15,297,17],[235,16,297,18,"pos"],[235,19,297,21],[235,23,297,25],[235,24,297,26],[236,6,298,8,"name"],[236,10,298,12],[236,14,298,16],[236,18,298,20],[237,4,299,4],[238,4,301,4],[238,8,301,8,"tokenizer"],[238,17,301,17],[238,18,301,18,"charCodeAt"],[238,28,301,28],[238,29,301,29,"tokenizer"],[238,38,301,38],[238,39,301,39,"findWsEnd"],[238,48,301,48],[238,49,301,49,"tokenizer"],[238,58,301,58],[238,59,301,59,"pos"],[238,62,301,62],[238,63,301,63],[238,64,301,64],[238,69,301,69,"LEFTSQUAREBRACKET"],[238,86,301,86],[238,88,301,88],[239,6,302,8,"scanSpaces"],[239,16,302,18],[239,17,302,19,"tokenizer"],[239,26,302,28],[239,27,302,29],[240,6,303,8,"opts"],[240,10,303,12],[240,13,303,15,"readTypeRange"],[240,26,303,28],[240,27,303,29,"tokenizer"],[240,36,303,38],[240,37,303,39],[241,4,304,4],[242,4,306,4,"tokenizer"],[242,13,306,13],[242,14,306,14,"eat"],[242,17,306,17],[242,18,306,18,"GREATERTHANSIGN"],[242,33,306,33],[242,34,306,34],[243,4,308,4],[243,11,308,11,"maybeMultiplied"],[243,26,308,26],[243,27,308,27,"tokenizer"],[243,36,308,36],[243,38,308,38],[244,6,309,8,"type"],[244,10,309,12],[244,12,309,14],[244,18,309,20],[245,6,310,8,"name"],[245,10,310,12],[245,12,310,14,"name"],[245,16,310,18],[246,6,311,8,"opts"],[246,10,311,12],[246,12,311,14,"opts"],[247,4,312,4],[247,5,312,5],[247,6,312,6],[248,2,313,0],[249,2,315,0],[249,11,315,9,"readKeywordOrFunction"],[249,32,315,30,"readKeywordOrFunction"],[249,33,315,31,"tokenizer"],[249,42,315,40],[249,44,315,42],[250,4,316,4],[250,8,316,8,"name"],[250,12,316,12],[251,4,318,4,"name"],[251,8,318,8],[251,11,318,11,"scanWord"],[251,19,318,19],[251,20,318,20,"tokenizer"],[251,29,318,29],[251,30,318,30],[252,4,320,4],[252,8,320,8,"tokenizer"],[252,17,320,17],[252,18,320,18,"charCode"],[252,26,320,26],[252,27,320,27],[252,28,320,28],[252,33,320,33,"LEFTPARENTHESIS"],[252,48,320,48],[252,50,320,50],[253,6,321,8,"tokenizer"],[253,15,321,17],[253,16,321,18,"pos"],[253,19,321,21],[253,21,321,23],[254,6,323,8],[254,13,323,15],[255,8,324,12,"type"],[255,12,324,16],[255,14,324,18],[255,24,324,28],[256,8,325,12,"name"],[256,12,325,16],[256,14,325,18,"name"],[257,6,326,8],[257,7,326,9],[258,4,327,4],[259,4,329,4],[259,11,329,11,"maybeMultiplied"],[259,26,329,26],[259,27,329,27,"tokenizer"],[259,36,329,36],[259,38,329,38],[260,6,330,8,"type"],[260,10,330,12],[260,12,330,14],[260,21,330,23],[261,6,331,8,"name"],[261,10,331,12],[261,12,331,14,"name"],[262,4,332,4],[262,5,332,5],[262,6,332,6],[263,2,333,0],[264,2,335,0],[264,11,335,9,"regroupTerms"],[264,23,335,21,"regroupTerms"],[264,24,335,22,"terms"],[264,29,335,27],[264,31,335,29,"combinators"],[264,42,335,40],[264,44,335,42],[265,4,336,4],[265,13,336,13,"createGroup"],[265,24,336,24,"createGroup"],[265,25,336,25,"terms"],[265,30,336,30],[265,32,336,32,"combinator"],[265,42,336,42],[265,44,336,44],[266,6,337,8],[266,13,337,15],[267,8,338,12,"type"],[267,12,338,16],[267,14,338,18],[267,21,338,25],[268,8,339,12,"terms"],[268,13,339,17],[268,15,339,19,"terms"],[268,20,339,24],[269,8,340,12,"combinator"],[269,18,340,22],[269,20,340,24,"combinator"],[269,30,340,34],[270,8,341,12,"disallowEmpty"],[270,21,341,25],[270,23,341,27],[270,28,341,32],[271,8,342,12,"explicit"],[271,16,342,20],[271,18,342,22],[272,6,343,8],[272,7,343,9],[273,4,344,4],[274,4,346,4,"combinators"],[274,15,346,15],[274,18,346,18,"Object"],[274,24,346,24],[274,25,346,25,"keys"],[274,29,346,29],[274,30,346,30,"combinators"],[274,41,346,41],[274,42,346,42],[274,43,346,43,"sort"],[274,47,346,47],[274,48,346,48],[274,58,346,57,"a"],[274,59,346,58],[274,61,346,60,"b"],[274,62,346,61],[274,64,346,63],[275,6,347,8],[275,13,347,15,"COMBINATOR_PRECEDENCE"],[275,34,347,36],[275,35,347,37,"a"],[275,36,347,38],[275,37,347,39],[275,40,347,42,"COMBINATOR_PRECEDENCE"],[275,61,347,63],[275,62,347,64,"b"],[275,63,347,65],[275,64,347,66],[276,4,348,4],[276,5,348,5],[276,6,348,6],[277,4,350,4],[277,11,350,11,"combinators"],[277,22,350,22],[277,23,350,23,"length"],[277,29,350,29],[277,32,350,32],[277,33,350,33],[277,35,350,35],[278,6,351,8],[278,10,351,12,"combinator"],[278,20,351,22],[278,23,351,25,"combinators"],[278,34,351,36],[278,35,351,37,"shift"],[278,40,351,42],[278,41,351,43],[278,42,351,44],[279,6,352,8],[279,11,352,13],[279,15,352,17,"i"],[279,16,352,18],[279,19,352,21],[279,20,352,22],[279,22,352,24,"subgroupStart"],[279,35,352,37],[279,38,352,40],[279,39,352,41],[279,41,352,43,"i"],[279,42,352,44],[279,45,352,47,"terms"],[279,50,352,52],[279,51,352,53,"length"],[279,57,352,59],[279,59,352,61,"i"],[279,60,352,62],[279,62,352,64],[279,64,352,66],[280,8,353,12],[280,12,353,16,"term"],[280,16,353,20],[280,19,353,23,"terms"],[280,24,353,28],[280,25,353,29,"i"],[280,26,353,30],[280,27,353,31],[281,8,354,12],[281,12,354,16,"term"],[281,16,354,20],[281,17,354,21,"type"],[281,21,354,25],[281,26,354,30],[281,38,354,42],[281,40,354,44],[282,10,355,16],[282,14,355,20,"term"],[282,18,355,24],[282,19,355,25,"value"],[282,24,355,30],[282,29,355,35,"combinator"],[282,39,355,45],[282,41,355,47],[283,12,356,20],[283,16,356,24,"subgroupStart"],[283,29,356,37],[283,34,356,42],[283,35,356,43],[283,36,356,44],[283,38,356,46],[284,14,357,24,"subgroupStart"],[284,27,357,37],[284,30,357,40,"i"],[284,31,357,41],[284,34,357,44],[284,35,357,45],[285,12,358,20],[286,12,359,20,"terms"],[286,17,359,25],[286,18,359,26,"splice"],[286,24,359,32],[286,25,359,33,"i"],[286,26,359,34],[286,28,359,36],[286,29,359,37],[286,30,359,38],[287,12,360,20,"i"],[287,13,360,21],[287,15,360,23],[288,10,361,16],[288,11,361,17],[288,17,361,23],[289,12,362,20],[289,16,362,24,"subgroupStart"],[289,29,362,37],[289,34,362,42],[289,35,362,43],[289,36,362,44],[289,40,362,48,"i"],[289,41,362,49],[289,44,362,52,"subgroupStart"],[289,57,362,65],[289,60,362,68],[289,61,362,69],[289,63,362,71],[290,14,363,24,"terms"],[290,19,363,29],[290,20,363,30,"splice"],[290,26,363,36],[290,27,364,28,"subgroupStart"],[290,40,364,41],[290,42,365,28,"i"],[290,43,365,29],[290,46,365,32,"subgroupStart"],[290,59,365,45],[290,61,366,28,"createGroup"],[290,72,366,39],[290,73,366,40,"terms"],[290,78,366,45],[290,79,366,46,"slice"],[290,84,366,51],[290,85,366,52,"subgroupStart"],[290,98,366,65],[290,100,366,67,"i"],[290,101,366,68],[290,102,366,69],[290,104,366,71,"combinator"],[290,114,366,81],[290,115,367,24],[290,116,367,25],[291,14,368,24,"i"],[291,15,368,25],[291,18,368,28,"subgroupStart"],[291,31,368,41],[291,34,368,44],[291,35,368,45],[292,12,369,20],[293,12,370,20,"subgroupStart"],[293,25,370,33],[293,28,370,36],[293,29,370,37],[293,30,370,38],[294,10,371,16],[295,8,372,12],[296,6,373,8],[297,6,375,8],[297,10,375,12,"subgroupStart"],[297,23,375,25],[297,28,375,30],[297,29,375,31],[297,30,375,32],[297,34,375,36,"combinators"],[297,45,375,47],[297,46,375,48,"length"],[297,52,375,54],[297,54,375,56],[298,8,376,12,"terms"],[298,13,376,17],[298,14,376,18,"splice"],[298,20,376,24],[298,21,377,16,"subgroupStart"],[298,34,377,29],[298,36,378,16,"i"],[298,37,378,17],[298,40,378,20,"subgroupStart"],[298,53,378,33],[298,55,379,16,"createGroup"],[298,66,379,27],[298,67,379,28,"terms"],[298,72,379,33],[298,73,379,34,"slice"],[298,78,379,39],[298,79,379,40,"subgroupStart"],[298,92,379,53],[298,94,379,55,"i"],[298,95,379,56],[298,96,379,57],[298,98,379,59,"combinator"],[298,108,379,69],[298,109,380,12],[298,110,380,13],[299,6,381,8],[300,4,382,4],[301,4,384,4],[301,11,384,11,"combinator"],[301,21,384,21],[302,2,385,0],[303,2,387,0],[303,11,387,9,"readImplicitGroup"],[303,28,387,26,"readImplicitGroup"],[303,29,387,27,"tokenizer"],[303,38,387,36],[303,40,387,38],[304,4,388,4],[304,8,388,8,"terms"],[304,13,388,13],[304,16,388,16],[304,18,388,18],[305,4,389,4],[305,8,389,8,"combinators"],[305,19,389,19],[305,22,389,22],[305,23,389,23],[305,24,389,24],[306,4,390,4],[306,8,390,8,"token"],[306,13,390,13],[307,4,391,4],[307,8,391,8,"prevToken"],[307,17,391,17],[307,20,391,20],[307,24,391,24],[308,4,392,4],[308,8,392,8,"prevTokenPos"],[308,20,392,20],[308,23,392,23,"tokenizer"],[308,32,392,32],[308,33,392,33,"pos"],[308,36,392,36],[309,4,394,4],[309,11,394,11,"token"],[309,16,394,16],[309,19,394,19,"peek"],[309,23,394,23],[309,24,394,24,"tokenizer"],[309,33,394,33],[309,34,394,34],[309,36,394,36],[310,6,395,8],[310,10,395,12,"token"],[310,15,395,17],[310,16,395,18,"type"],[310,20,395,22],[310,25,395,27],[310,33,395,35],[310,35,395,37],[311,8,396,12],[311,12,396,16,"token"],[311,17,396,21],[311,18,396,22,"type"],[311,22,396,26],[311,27,396,31],[311,39,396,43],[311,41,396,45],[312,10,397,16],[313,10,398,16],[313,14,398,20,"prevToken"],[313,23,398,29],[313,28,398,34],[313,32,398,38],[313,36,398,42,"prevToken"],[313,45,398,51],[313,46,398,52,"type"],[313,50,398,56],[313,55,398,61],[313,67,398,73],[313,69,398,75],[314,12,399,20,"tokenizer"],[314,21,399,29],[314,22,399,30,"pos"],[314,25,399,33],[314,28,399,36,"prevTokenPos"],[314,40,399,48],[315,12,400,20,"tokenizer"],[315,21,400,29],[315,22,400,30,"error"],[315,27,400,35],[315,28,400,36],[315,51,400,59],[315,52,400,60],[316,10,401,16],[317,10,403,16,"combinators"],[317,21,403,27],[317,22,403,28,"token"],[317,27,403,33],[317,28,403,34,"value"],[317,33,403,39],[317,34,403,40],[317,37,403,43],[317,41,403,47],[318,8,404,12],[318,9,404,13],[318,15,404,19],[318,19,404,23,"prevToken"],[318,28,404,32],[318,33,404,37],[318,37,404,41],[318,41,404,45,"prevToken"],[318,50,404,54],[318,51,404,55,"type"],[318,55,404,59],[318,60,404,64],[318,72,404,76],[318,74,404,78],[319,10,405,16,"combinators"],[319,21,405,27],[319,22,405,28],[319,25,405,31],[319,26,405,32],[319,29,405,35],[319,33,405,39],[319,34,405,40],[319,35,405,42],[320,10,406,16,"terms"],[320,15,406,21],[320,16,406,22,"push"],[320,20,406,26],[320,21,406,27],[321,12,407,20,"type"],[321,16,407,24],[321,18,407,26],[321,30,407,38],[322,12,408,20,"value"],[322,17,408,25],[322,19,408,27],[323,10,409,16],[323,11,409,17],[323,12,409,18],[324,8,410,12],[325,8,412,12,"terms"],[325,13,412,17],[325,14,412,18,"push"],[325,18,412,22],[325,19,412,23,"token"],[325,24,412,28],[325,25,412,29],[326,8,413,12,"prevToken"],[326,17,413,21],[326,20,413,24,"token"],[326,25,413,29],[327,8,414,12,"prevTokenPos"],[327,20,414,24],[327,23,414,27,"tokenizer"],[327,32,414,36],[327,33,414,37,"pos"],[327,36,414,40],[328,6,415,8],[329,4,416,4],[331,4,418,4],[332,4,419,4],[332,8,419,8,"prevToken"],[332,17,419,17],[332,22,419,22],[332,26,419,26],[332,30,419,30,"prevToken"],[332,39,419,39],[332,40,419,40,"type"],[332,44,419,44],[332,49,419,49],[332,61,419,61],[332,63,419,63],[333,6,420,8,"tokenizer"],[333,15,420,17],[333,16,420,18,"pos"],[333,19,420,21],[333,23,420,25,"prevTokenPos"],[333,35,420,37],[334,6,421,8,"tokenizer"],[334,15,421,17],[334,16,421,18,"error"],[334,21,421,23],[334,22,421,24],[334,45,421,47],[334,46,421,48],[335,4,422,4],[336,4,424,4],[336,11,424,11],[337,6,425,8,"type"],[337,10,425,12],[337,12,425,14],[337,19,425,21],[338,6,426,8,"terms"],[338,11,426,13],[338,13,426,15,"terms"],[338,18,426,20],[339,6,427,8,"combinator"],[339,16,427,18],[339,18,427,20,"regroupTerms"],[339,30,427,32],[339,31,427,33,"terms"],[339,36,427,38],[339,38,427,40,"combinators"],[339,49,427,51],[339,50,427,52],[339,54,427,56],[339,57,427,59],[340,6,428,8,"disallowEmpty"],[340,19,428,21],[340,21,428,23],[340,26,428,28],[341,6,429,8,"explicit"],[341,14,429,16],[341,16,429,18],[342,4,430,4],[342,5,430,5],[343,2,431,0],[344,2,433,0],[344,11,433,9,"readGroup"],[344,20,433,18,"readGroup"],[344,21,433,19,"tokenizer"],[344,30,433,28],[344,32,433,30],[345,4,434,4],[345,8,434,8,"result"],[345,14,434,14],[346,4,436,4,"tokenizer"],[346,13,436,13],[346,14,436,14,"eat"],[346,17,436,17],[346,18,436,18,"LEFTSQUAREBRACKET"],[346,35,436,35],[346,36,436,36],[347,4,437,4,"result"],[347,10,437,10],[347,13,437,13,"readImplicitGroup"],[347,30,437,30],[347,31,437,31,"tokenizer"],[347,40,437,40],[347,41,437,41],[348,4,438,4,"tokenizer"],[348,13,438,13],[348,14,438,14,"eat"],[348,17,438,17],[348,18,438,18,"RIGHTSQUAREBRACKET"],[348,36,438,36],[348,37,438,37],[349,4,440,4,"result"],[349,10,440,10],[349,11,440,11,"explicit"],[349,19,440,19],[349,22,440,22],[349,26,440,26],[350,4,442,4],[350,8,442,8,"tokenizer"],[350,17,442,17],[350,18,442,18,"charCode"],[350,26,442,26],[350,27,442,27],[350,28,442,28],[350,33,442,33,"EXCLAMATIONMARK"],[350,48,442,48],[350,50,442,50],[351,6,443,8,"tokenizer"],[351,15,443,17],[351,16,443,18,"pos"],[351,19,443,21],[351,21,443,23],[352,6,444,8,"result"],[352,12,444,14],[352,13,444,15,"disallowEmpty"],[352,26,444,28],[352,29,444,31],[352,33,444,35],[353,4,445,4],[354,4,447,4],[354,11,447,11,"result"],[354,17,447,17],[355,2,448,0],[356,2,450,0],[356,11,450,9,"peek"],[356,15,450,13,"peek"],[356,16,450,14,"tokenizer"],[356,25,450,23],[356,27,450,25],[357,4,451,4],[357,8,451,8,"code"],[357,12,451,12],[357,15,451,15,"tokenizer"],[357,24,451,24],[357,25,451,25,"charCode"],[357,33,451,33],[357,34,451,34],[357,35,451,35],[358,4,453,4],[358,8,453,8,"code"],[358,12,453,12],[358,15,453,15],[358,18,453,18],[358,22,453,22,"NAME_CHAR"],[358,31,453,31],[358,32,453,32,"code"],[358,36,453,36],[358,37,453,37],[358,42,453,42],[358,43,453,43],[358,45,453,45],[359,6,454,8],[359,13,454,15,"readKeywordOrFunction"],[359,34,454,36],[359,35,454,37,"tokenizer"],[359,44,454,46],[359,45,454,47],[360,4,455,4],[361,4,457,4],[361,12,457,12,"code"],[361,16,457,16],[362,6,458,8],[362,11,458,13,"RIGHTSQUAREBRACKET"],[362,29,458,31],[363,8,459,12],[364,8,460,12],[365,6,462,8],[365,11,462,13,"LEFTSQUAREBRACKET"],[365,28,462,30],[366,8,463,12],[366,15,463,19,"maybeMultiplied"],[366,30,463,34],[366,31,463,35,"tokenizer"],[366,40,463,44],[366,42,463,46,"readGroup"],[366,51,463,55],[366,52,463,56,"tokenizer"],[366,61,463,65],[366,62,463,66],[366,63,463,67],[367,6,465,8],[367,11,465,13,"LESSTHANSIGN"],[367,23,465,25],[368,8,466,12],[368,15,466,19,"tokenizer"],[368,24,466,28],[368,25,466,29,"nextCharCode"],[368,37,466,41],[368,38,466,42],[368,39,466,43],[368,44,466,48,"APOSTROPHE"],[368,54,466,58],[368,57,467,18,"readProperty"],[368,69,467,30],[368,70,467,31,"tokenizer"],[368,79,467,40],[368,80,467,41],[368,83,468,18,"readType"],[368,91,468,26],[368,92,468,27,"tokenizer"],[368,101,468,36],[368,102,468,37],[369,6,470,8],[369,11,470,13,"VERTICALLINE"],[369,23,470,25],[370,8,471,12],[370,15,471,19],[371,10,472,16,"type"],[371,14,472,20],[371,16,472,22],[371,28,472,34],[372,10,473,16,"value"],[372,15,473,21],[372,17,473,23,"tokenizer"],[372,26,473,32],[372,27,473,33,"substringToPos"],[372,41,473,47],[372,42,474,20,"tokenizer"],[372,51,474,29],[372,52,474,30,"nextCharCode"],[372,64,474,42],[372,65,474,43],[372,66,474,44],[372,71,474,49,"VERTICALLINE"],[372,83,474,61],[372,86,475,26,"tokenizer"],[372,95,475,35],[372,96,475,36,"pos"],[372,99,475,39],[372,102,475,42],[372,103,475,43],[372,106,476,26,"tokenizer"],[372,115,476,35],[372,116,476,36,"pos"],[372,119,476,39],[372,122,476,42],[372,123,477,16],[373,8,478,12],[373,9,478,13],[374,6,480,8],[374,11,480,13,"AMPERSAND"],[374,20,480,22],[375,8,481,12,"tokenizer"],[375,17,481,21],[375,18,481,22,"pos"],[375,21,481,25],[375,23,481,27],[376,8,482,12,"tokenizer"],[376,17,482,21],[376,18,482,22,"eat"],[376,21,482,25],[376,22,482,26,"AMPERSAND"],[376,31,482,35],[376,32,482,36],[377,8,484,12],[377,15,484,19],[378,10,485,16,"type"],[378,14,485,20],[378,16,485,22],[378,28,485,34],[379,10,486,16,"value"],[379,15,486,21],[379,17,486,23],[380,8,487,12],[380,9,487,13],[381,6,489,8],[381,11,489,13,"COMMA"],[381,16,489,18],[382,8,490,12,"tokenizer"],[382,17,490,21],[382,18,490,22,"pos"],[382,21,490,25],[382,23,490,27],[383,8,491,12],[383,15,491,19],[384,10,492,16,"type"],[384,14,492,20],[384,16,492,22],[385,8,493,12],[385,9,493,13],[386,6,495,8],[386,11,495,13,"APOSTROPHE"],[386,21,495,23],[387,8,496,12],[387,15,496,19,"maybeMultiplied"],[387,30,496,34],[387,31,496,35,"tokenizer"],[387,40,496,44],[387,42,496,46],[388,10,497,16,"type"],[388,14,497,20],[388,16,497,22],[388,24,497,30],[389,10,498,16,"value"],[389,15,498,21],[389,17,498,23,"scanString"],[389,27,498,33],[389,28,498,34,"tokenizer"],[389,37,498,43],[390,8,499,12],[390,9,499,13],[390,10,499,14],[391,6,501,8],[391,11,501,13,"SPACE"],[391,16,501,18],[392,6,502,8],[392,11,502,13,"TAB"],[392,14,502,16],[393,6,503,8],[393,11,503,13,"N"],[393,12,503,14],[394,6,504,8],[394,11,504,13,"R"],[394,12,504,14],[395,6,505,8],[395,11,505,13,"F"],[395,12,505,14],[396,8,506,12],[396,15,506,19],[397,10,507,16,"type"],[397,14,507,20],[397,16,507,22],[397,24,507,30],[398,10,508,16,"value"],[398,15,508,21],[398,17,508,23,"scanSpaces"],[398,27,508,33],[398,28,508,34,"tokenizer"],[398,37,508,43],[399,8,509,12],[399,9,509,13],[400,6,511,8],[400,11,511,13,"COMMERCIALAT"],[400,23,511,25],[401,8,512,12,"code"],[401,12,512,16],[401,15,512,19,"tokenizer"],[401,24,512,28],[401,25,512,29,"nextCharCode"],[401,37,512,41],[401,38,512,42],[401,39,512,43],[402,8,514,12],[402,12,514,16,"code"],[402,16,514,20],[402,19,514,23],[402,22,514,26],[402,26,514,30,"NAME_CHAR"],[402,35,514,39],[402,36,514,40,"code"],[402,40,514,44],[402,41,514,45],[402,46,514,50],[402,47,514,51],[402,49,514,53],[403,10,515,16,"tokenizer"],[403,19,515,25],[403,20,515,26,"pos"],[403,23,515,29],[403,25,515,31],[404,10,516,16],[404,17,516,23],[405,12,517,20,"type"],[405,16,517,24],[405,18,517,26],[405,29,517,37],[406,12,518,20,"name"],[406,16,518,24],[406,18,518,26,"scanWord"],[406,26,518,34],[406,27,518,35,"tokenizer"],[406,36,518,44],[407,10,519,16],[407,11,519,17],[408,8,520,12],[409,8,522,12],[409,15,522,19,"maybeToken"],[409,25,522,29],[409,26,522,30,"tokenizer"],[409,35,522,39],[409,36,522,40],[410,6,524,8],[410,11,524,13,"ASTERISK"],[410,19,524,21],[411,6,525,8],[411,11,525,13,"PLUSSIGN"],[411,19,525,21],[412,6,526,8],[412,11,526,13,"QUESTIONMARK"],[412,23,526,25],[413,6,527,8],[413,11,527,13,"NUMBERSIGN"],[413,21,527,23],[414,6,528,8],[414,11,528,13,"EXCLAMATIONMARK"],[414,26,528,28],[415,8,529,12],[416,8,530,12],[417,6,532,8],[417,11,532,13,"LEFTCURLYBRACKET"],[417,27,532,29],[418,8,533,12],[419,8,534,12],[420,8,535,12,"code"],[420,12,535,16],[420,15,535,19,"tokenizer"],[420,24,535,28],[420,25,535,29,"nextCharCode"],[420,37,535,41],[420,38,535,42],[420,39,535,43],[421,8,537,12],[421,12,537,16,"code"],[421,16,537,20],[421,19,537,23],[421,21,537,25],[421,25,537,29,"code"],[421,29,537,33],[421,32,537,36],[421,34,537,38],[421,36,537,40],[422,10,538,16],[422,17,538,23,"maybeToken"],[422,27,538,33],[422,28,538,34,"tokenizer"],[422,37,538,43],[422,38,538,44],[423,8,539,12],[424,8,541,12],[425,6,543,8],[426,8,544,12],[426,15,544,19,"maybeToken"],[426,25,544,29],[426,26,544,30,"tokenizer"],[426,35,544,39],[426,36,544,40],[427,4,545,4],[428,2,546,0],[429,2,548,0],[429,11,548,9,"parse"],[429,16,548,14,"parse"],[429,17,548,15,"source"],[429,23,548,21],[429,25,548,23],[430,4,549,4],[430,8,549,8,"tokenizer"],[430,17,549,17],[430,20,549,20],[430,25,549,20,"_$$_REQUIRE"],[430,36,549,20],[430,37,549,20,"_dependencyMap"],[430,51,549,20],[430,72,549,34,"source"],[430,78,549,40],[430,79,549,41],[431,4,550,4],[431,8,550,8,"result"],[431,14,550,14],[431,17,550,17,"readImplicitGroup"],[431,34,550,34],[431,35,550,35,"tokenizer"],[431,44,550,44],[431,45,550,45],[432,4,552,4],[432,8,552,8,"tokenizer"],[432,17,552,17],[432,18,552,18,"pos"],[432,21,552,21],[432,26,552,26,"source"],[432,32,552,32],[432,33,552,33,"length"],[432,39,552,39],[432,41,552,41],[433,6,553,8,"tokenizer"],[433,15,553,17],[433,16,553,18,"error"],[433,21,553,23],[433,22,553,24],[433,40,553,42],[433,41,553,43],[434,4,554,4],[436,4,556,4],[437,4,557,4],[437,8,557,8,"result"],[437,14,557,14],[437,15,557,15,"terms"],[437,20,557,20],[437,21,557,21,"length"],[437,27,557,27],[437,32,557,32],[437,33,557,33],[437,37,557,37,"result"],[437,43,557,43],[437,44,557,44,"terms"],[437,49,557,49],[437,50,557,50],[437,51,557,51],[437,52,557,52],[437,53,557,53,"type"],[437,57,557,57],[437,62,557,62],[437,69,557,69],[437,71,557,71],[438,6,558,8,"result"],[438,12,558,14],[438,15,558,17,"result"],[438,21,558,23],[438,22,558,24,"terms"],[438,27,558,29],[438,28,558,30],[438,29,558,31],[438,30,558,32],[439,4,559,4],[440,4,561,4],[440,11,561,11,"result"],[440,17,561,17],[441,2,562,0],[443,2,564,0],[444,2,565,0],[445,2,566,0,"parse"],[445,7,566,5],[445,8,566,6],[445,59,566,57],[445,60,566,58],[446,2,568,0,"module"],[446,8,568,6],[446,9,568,7,"exports"],[446,16,568,14],[446,19,568,17,"parse"],[446,24,568,22],[447,0,568,23],[447,3]],"functionMap":{"names":["<global>","createCharMap$argument_0","createCharMap","scanSpaces","scanWord","scanNumber","scanString","readMultiplierRange","readMultiplier","maybeMultiplied","maybeToken","readProperty","readTypeRange","readType","readKeywordOrFunction","regroupTerms","createGroup","Object.keys.sort$argument_0","readImplicitGroup","readGroup","peek","parse"],"mappings":"AAA;8BC0B;CDE;AEQ;CFM;AGE;CHI;AIE;CJe;AKE;CLe;AME;CNS;AOE;CPuB;AQE;CRkE;ASE;CTS;AUE;CVW;AWE;CXe;AYS;CZiD;AaE;CbyB;AcE;CdkB;AeE;ICC;KDQ;gDEE;KFE;CfqC;AkBE;ClB4C;AmBE;CnBe;AoBE;CpBgG;AqBE;CrBc"}},"type":"js/module"}]}