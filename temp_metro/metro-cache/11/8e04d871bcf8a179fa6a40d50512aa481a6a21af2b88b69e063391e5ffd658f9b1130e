{"dependencies":[{"name":"./util","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":159},"end":{"line":5,"column":30,"index":176}},{"start":{"line":5,"column":13,"index":159},"end":{"line":5,"column":30,"index":176}},{"start":{"line":5,"column":13,"index":159},"end":{"line":5,"column":30,"index":176}},{"start":{"line":5,"column":13,"index":159},"end":{"line":5,"column":30,"index":176}}],"key":"hA8WsniBZrUJ/dmBZgrNdZcEmJ8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Blake2B in pure Javascript\n  // Adapted from the reference implementation in RFC7693\n  // Ported to Javascript by DC - https://github.com/dcposch\n\n  // 64-bit unsigned addition\n  // Sets v[a,a+1] += v[b,b+1]\n  // v should be a Uint32Array\n  function ADD64AA(v, a, b) {\n    var o0 = v[a] + v[b];\n    var o1 = v[a + 1] + v[b + 1];\n    if (o0 >= 0x100000000) {\n      o1++;\n    }\n    v[a] = o0;\n    v[a + 1] = o1;\n  }\n\n  // 64-bit unsigned addition\n  // Sets v[a,a+1] += b\n  // b0 is the low 32 bits of b, b1 represents the high 32 bits\n  function ADD64AC(v, a, b0, b1) {\n    var o0 = v[a] + b0;\n    if (b0 < 0) {\n      o0 += 0x100000000;\n    }\n    var o1 = v[a + 1] + b1;\n    if (o0 >= 0x100000000) {\n      o1++;\n    }\n    v[a] = o0;\n    v[a + 1] = o1;\n  }\n\n  // Little-endian byte access\n  function B2B_GET32(arr, i) {\n    return arr[i] ^ arr[i + 1] << 8 ^ arr[i + 2] << 16 ^ arr[i + 3] << 24;\n  }\n\n  // G Mixing function\n  // The ROTRs are inlined for speed\n  function B2B_G(a, b, c, d, ix, iy) {\n    var x0 = m[ix];\n    var x1 = m[ix + 1];\n    var y0 = m[iy];\n    var y1 = m[iy + 1];\n    ADD64AA(v, a, b); // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n    ADD64AC(v, a, x0, x1); // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n    // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n    var xor0 = v[d] ^ v[a];\n    var xor1 = v[d + 1] ^ v[a + 1];\n    v[d] = xor1;\n    v[d + 1] = xor0;\n    ADD64AA(v, c, d);\n\n    // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n    xor0 = v[b] ^ v[c];\n    xor1 = v[b + 1] ^ v[c + 1];\n    v[b] = xor0 >>> 24 ^ xor1 << 8;\n    v[b + 1] = xor1 >>> 24 ^ xor0 << 8;\n    ADD64AA(v, a, b);\n    ADD64AC(v, a, y0, y1);\n\n    // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n    xor0 = v[d] ^ v[a];\n    xor1 = v[d + 1] ^ v[a + 1];\n    v[d] = xor0 >>> 16 ^ xor1 << 16;\n    v[d + 1] = xor1 >>> 16 ^ xor0 << 16;\n    ADD64AA(v, c, d);\n\n    // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n    xor0 = v[b] ^ v[c];\n    xor1 = v[b + 1] ^ v[c + 1];\n    v[b] = xor1 >>> 31 ^ xor0 << 1;\n    v[b + 1] = xor0 >>> 31 ^ xor1 << 1;\n  }\n\n  // Initialization Vector\n  var BLAKE2B_IV32 = new Uint32Array([0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372, 0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c, 0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19]);\n  var SIGMA8 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3];\n\n  // These are offsets into a uint64 buffer.\n  // Multiply them all by 2 to make them offsets into a uint32 buffer,\n  // because this is Javascript and we don't have uint64s\n  var SIGMA82 = new Uint8Array(SIGMA8.map(function (x) {\n    return x * 2;\n  }));\n\n  // Compression function. 'last' flag indicates last block.\n  // Note we're representing 16 uint64s as 32 uint32s\n  var v = new Uint32Array(32);\n  var m = new Uint32Array(32);\n  function blake2bCompress(ctx, last) {\n    var i = 0;\n\n    // init work variables\n    for (i = 0; i < 16; i++) {\n      v[i] = ctx.h[i];\n      v[i + 16] = BLAKE2B_IV32[i];\n    }\n\n    // low 64 bits of offset\n    v[24] = v[24] ^ ctx.t;\n    v[25] = v[25] ^ ctx.t / 0x100000000;\n    // high 64 bits not supported, offset may not be higher than 2**53-1\n\n    // last block flag set ?\n    if (last) {\n      v[28] = ~v[28];\n      v[29] = ~v[29];\n    }\n\n    // get little-endian words\n    for (i = 0; i < 32; i++) {\n      m[i] = B2B_GET32(ctx.b, 4 * i);\n    }\n\n    // twelve rounds of mixing\n    // uncomment the DebugPrint calls to log the computation\n    // and match the RFC sample documentation\n    // util.debugPrint('          m[16]', m, 64)\n    for (i = 0; i < 12; i++) {\n      // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n      B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1]);\n      B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3]);\n      B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5]);\n      B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7]);\n      B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9]);\n      B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11]);\n      B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13]);\n      B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15]);\n    }\n    // util.debugPrint('   (i=12) v[16]', v, 64)\n\n    for (i = 0; i < 16; i++) {\n      ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16];\n    }\n    // util.debugPrint('h[8]', ctx.h, 64)\n  }\n\n  // reusable parameterBlock\n  var parameterBlock = new Uint8Array([0, 0, 0, 0,\n  //  0: outlen, keylen, fanout, depth\n  0, 0, 0, 0,\n  //  4: leaf length, sequential mode\n  0, 0, 0, 0,\n  //  8: node offset\n  0, 0, 0, 0,\n  // 12: node offset\n  0, 0, 0, 0,\n  // 16: node depth, inner length, rfu\n  0, 0, 0, 0,\n  // 20: rfu\n  0, 0, 0, 0,\n  // 24: rfu\n  0, 0, 0, 0,\n  // 28: rfu\n  0, 0, 0, 0,\n  // 32: salt\n  0, 0, 0, 0,\n  // 36: salt\n  0, 0, 0, 0,\n  // 40: salt\n  0, 0, 0, 0,\n  // 44: salt\n  0, 0, 0, 0,\n  // 48: personal\n  0, 0, 0, 0,\n  // 52: personal\n  0, 0, 0, 0,\n  // 56: personal\n  0, 0, 0, 0 // 60: personal\n  ]);\n\n  // Creates a BLAKE2b hashing context\n  // Requires an output length between 1 and 64 bytes\n  // Takes an optional Uint8Array key\n  // Takes an optinal Uint8Array salt\n  // Takes an optinal Uint8Array personal\n  function blake2bInit(outlen, key, salt, personal) {\n    if (outlen === 0 || outlen > 64) {\n      throw new Error('Illegal output length, expected 0 < length <= 64');\n    }\n    if (key && key.length > 64) {\n      throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64');\n    }\n    if (salt && salt.length !== 16) {\n      throw new Error('Illegal salt, expected Uint8Array with length is 16');\n    }\n    if (personal && personal.length !== 16) {\n      throw new Error('Illegal personal, expected Uint8Array with length is 16');\n    }\n\n    // state, 'param block'\n    var ctx = {\n      b: new Uint8Array(128),\n      h: new Uint32Array(16),\n      t: 0,\n      // input count\n      c: 0,\n      // pointer within buffer\n      outlen: outlen // output length in bytes\n    };\n\n    // initialize parameterBlock before usage\n    parameterBlock.fill(0);\n    parameterBlock[0] = outlen;\n    if (key) parameterBlock[1] = key.length;\n    parameterBlock[2] = 1; // fanout\n    parameterBlock[3] = 1; // depth\n    if (salt) parameterBlock.set(salt, 32);\n    if (personal) parameterBlock.set(personal, 48);\n\n    // initialize hash state\n    for (var i = 0; i < 16; i++) {\n      ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4);\n    }\n\n    // key the hash, if applicable\n    if (key) {\n      blake2bUpdate(ctx, key);\n      // at the end\n      ctx.c = 128;\n    }\n    return ctx;\n  }\n\n  // Updates a BLAKE2b streaming hash\n  // Requires hash context and Uint8Array (byte array)\n  function blake2bUpdate(ctx, input) {\n    for (var i = 0; i < input.length; i++) {\n      if (ctx.c === 128) {\n        // buffer full ?\n        ctx.t += ctx.c; // add counters\n        blake2bCompress(ctx, false); // compress (not last)\n        ctx.c = 0; // counter to zero\n      }\n      ctx.b[ctx.c++] = input[i];\n    }\n  }\n\n  // Completes a BLAKE2b streaming hash\n  // Returns a Uint8Array containing the message digest\n  function blake2bFinal(ctx) {\n    ctx.t += ctx.c; // mark last block offset\n\n    while (ctx.c < 128) {\n      // fill up with zeros\n      ctx.b[ctx.c++] = 0;\n    }\n    blake2bCompress(ctx, true); // final block flag = 1\n\n    // little endian convert and store\n    var out = new Uint8Array(ctx.outlen);\n    for (var i = 0; i < ctx.outlen; i++) {\n      out[i] = ctx.h[i >> 2] >> 8 * (i & 3);\n    }\n    return out;\n  }\n\n  // Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n  //\n  // Returns a n-byte Uint8Array\n  //\n  // Parameters:\n  // - input - the input bytes, as a string, Buffer or Uint8Array\n  // - key - optional key Uint8Array, up to 64 bytes\n  // - outlen - optional output length in bytes, default 64\n  // - salt - optional salt bytes, string, Buffer or Uint8Array\n  // - personal - optional personal bytes, string, Buffer or Uint8Array\n  function blake2b(input, key, outlen, salt, personal) {\n    // preprocess inputs\n    outlen = outlen || 64;\n    input = _$$_REQUIRE(_dependencyMap[0], \"./util\").normalizeInput(input);\n    if (salt) {\n      salt = _$$_REQUIRE(_dependencyMap[0], \"./util\").normalizeInput(salt);\n    }\n    if (personal) {\n      personal = _$$_REQUIRE(_dependencyMap[0], \"./util\").normalizeInput(personal);\n    }\n\n    // do the math\n    var ctx = blake2bInit(outlen, key, salt, personal);\n    blake2bUpdate(ctx, input);\n    return blake2bFinal(ctx);\n  }\n\n  // Computes the BLAKE2B hash of a string or byte array\n  //\n  // Returns an n-byte hash in hex, all lowercase\n  //\n  // Parameters:\n  // - input - the input bytes, as a string, Buffer, or Uint8Array\n  // - key - optional key Uint8Array, up to 64 bytes\n  // - outlen - optional output length in bytes, default 64\n  // - salt - optional salt bytes, string, Buffer or Uint8Array\n  // - personal - optional personal bytes, string, Buffer or Uint8Array\n  function blake2bHex(input, key, outlen, salt, personal) {\n    var output = blake2b(input, key, outlen, salt, personal);\n    return _$$_REQUIRE(_dependencyMap[0], \"./util\").toHex(output);\n  }\n  module.exports = {\n    blake2b: blake2b,\n    blake2bHex: blake2bHex,\n    blake2bInit: blake2bInit,\n    blake2bUpdate: blake2bUpdate,\n    blake2bFinal: blake2bFinal\n  };\n});","lineCount":310,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[6,2,7,0],[7,2,8,0],[8,2,9,0],[9,2,10,0],[9,11,10,9,"ADD64AA"],[9,18,10,16,"ADD64AA"],[9,19,10,18,"v"],[9,20,10,19],[9,22,10,21,"a"],[9,23,10,22],[9,25,10,24,"b"],[9,26,10,25],[9,28,10,27],[10,4,11,2],[10,8,11,8,"o0"],[10,10,11,10],[10,13,11,13,"v"],[10,14,11,14],[10,15,11,15,"a"],[10,16,11,16],[10,17,11,17],[10,20,11,20,"v"],[10,21,11,21],[10,22,11,22,"b"],[10,23,11,23],[10,24,11,24],[11,4,12,2],[11,8,12,6,"o1"],[11,10,12,8],[11,13,12,11,"v"],[11,14,12,12],[11,15,12,13,"a"],[11,16,12,14],[11,19,12,17],[11,20,12,18],[11,21,12,19],[11,24,12,22,"v"],[11,25,12,23],[11,26,12,24,"b"],[11,27,12,25],[11,30,12,28],[11,31,12,29],[11,32,12,30],[12,4,13,2],[12,8,13,6,"o0"],[12,10,13,8],[12,14,13,12],[12,25,13,23],[12,27,13,25],[13,6,14,4,"o1"],[13,8,14,6],[13,10,14,8],[14,4,15,2],[15,4,16,2,"v"],[15,5,16,3],[15,6,16,4,"a"],[15,7,16,5],[15,8,16,6],[15,11,16,9,"o0"],[15,13,16,11],[16,4,17,2,"v"],[16,5,17,3],[16,6,17,4,"a"],[16,7,17,5],[16,10,17,8],[16,11,17,9],[16,12,17,10],[16,15,17,13,"o1"],[16,17,17,15],[17,2,18,0],[19,2,20,0],[20,2,21,0],[21,2,22,0],[22,2,23,0],[22,11,23,9,"ADD64AC"],[22,18,23,16,"ADD64AC"],[22,19,23,18,"v"],[22,20,23,19],[22,22,23,21,"a"],[22,23,23,22],[22,25,23,24,"b0"],[22,27,23,26],[22,29,23,28,"b1"],[22,31,23,30],[22,33,23,32],[23,4,24,2],[23,8,24,6,"o0"],[23,10,24,8],[23,13,24,11,"v"],[23,14,24,12],[23,15,24,13,"a"],[23,16,24,14],[23,17,24,15],[23,20,24,18,"b0"],[23,22,24,20],[24,4,25,2],[24,8,25,6,"b0"],[24,10,25,8],[24,13,25,11],[24,14,25,12],[24,16,25,14],[25,6,26,4,"o0"],[25,8,26,6],[25,12,26,10],[25,23,26,21],[26,4,27,2],[27,4,28,2],[27,8,28,6,"o1"],[27,10,28,8],[27,13,28,11,"v"],[27,14,28,12],[27,15,28,13,"a"],[27,16,28,14],[27,19,28,17],[27,20,28,18],[27,21,28,19],[27,24,28,22,"b1"],[27,26,28,24],[28,4,29,2],[28,8,29,6,"o0"],[28,10,29,8],[28,14,29,12],[28,25,29,23],[28,27,29,25],[29,6,30,4,"o1"],[29,8,30,6],[29,10,30,8],[30,4,31,2],[31,4,32,2,"v"],[31,5,32,3],[31,6,32,4,"a"],[31,7,32,5],[31,8,32,6],[31,11,32,9,"o0"],[31,13,32,11],[32,4,33,2,"v"],[32,5,33,3],[32,6,33,4,"a"],[32,7,33,5],[32,10,33,8],[32,11,33,9],[32,12,33,10],[32,15,33,13,"o1"],[32,17,33,15],[33,2,34,0],[35,2,36,0],[36,2,37,0],[36,11,37,9,"B2B_GET32"],[36,20,37,18,"B2B_GET32"],[36,21,37,20,"arr"],[36,24,37,23],[36,26,37,25,"i"],[36,27,37,26],[36,29,37,28],[37,4,38,2],[37,11,38,9,"arr"],[37,14,38,12],[37,15,38,13,"i"],[37,16,38,14],[37,17,38,15],[37,20,38,19,"arr"],[37,23,38,22],[37,24,38,23,"i"],[37,25,38,24],[37,28,38,27],[37,29,38,28],[37,30,38,29],[37,34,38,33],[37,35,38,35],[37,38,38,39,"arr"],[37,41,38,42],[37,42,38,43,"i"],[37,43,38,44],[37,46,38,47],[37,47,38,48],[37,48,38,49],[37,52,38,53],[37,54,38,56],[37,57,38,60,"arr"],[37,60,38,63],[37,61,38,64,"i"],[37,62,38,65],[37,65,38,68],[37,66,38,69],[37,67,38,70],[37,71,38,74],[37,73,38,77],[38,2,39,0],[40,2,41,0],[41,2,42,0],[42,2,43,0],[42,11,43,9,"B2B_G"],[42,16,43,14,"B2B_G"],[42,17,43,16,"a"],[42,18,43,17],[42,20,43,19,"b"],[42,21,43,20],[42,23,43,22,"c"],[42,24,43,23],[42,26,43,25,"d"],[42,27,43,26],[42,29,43,28,"ix"],[42,31,43,30],[42,33,43,32,"iy"],[42,35,43,34],[42,37,43,36],[43,4,44,2],[43,8,44,8,"x0"],[43,10,44,10],[43,13,44,13,"m"],[43,14,44,14],[43,15,44,15,"ix"],[43,17,44,17],[43,18,44,18],[44,4,45,2],[44,8,45,8,"x1"],[44,10,45,10],[44,13,45,13,"m"],[44,14,45,14],[44,15,45,15,"ix"],[44,17,45,17],[44,20,45,20],[44,21,45,21],[44,22,45,22],[45,4,46,2],[45,8,46,8,"y0"],[45,10,46,10],[45,13,46,13,"m"],[45,14,46,14],[45,15,46,15,"iy"],[45,17,46,17],[45,18,46,18],[46,4,47,2],[46,8,47,8,"y1"],[46,10,47,10],[46,13,47,13,"m"],[46,14,47,14],[46,15,47,15,"iy"],[46,17,47,17],[46,20,47,20],[46,21,47,21],[46,22,47,22],[47,4,49,2,"ADD64AA"],[47,11,49,9],[47,12,49,10,"v"],[47,13,49,11],[47,15,49,13,"a"],[47,16,49,14],[47,18,49,16,"b"],[47,19,49,17],[47,20,49,18],[47,22,49,19],[48,4,50,2,"ADD64AC"],[48,11,50,9],[48,12,50,10,"v"],[48,13,50,11],[48,15,50,13,"a"],[48,16,50,14],[48,18,50,16,"x0"],[48,20,50,18],[48,22,50,20,"x1"],[48,24,50,22],[48,25,50,23],[48,27,50,24],[50,4,52,2],[51,4,53,2],[51,8,53,6,"xor0"],[51,12,53,10],[51,15,53,13,"v"],[51,16,53,14],[51,17,53,15,"d"],[51,18,53,16],[51,19,53,17],[51,22,53,20,"v"],[51,23,53,21],[51,24,53,22,"a"],[51,25,53,23],[51,26,53,24],[52,4,54,2],[52,8,54,6,"xor1"],[52,12,54,10],[52,15,54,13,"v"],[52,16,54,14],[52,17,54,15,"d"],[52,18,54,16],[52,21,54,19],[52,22,54,20],[52,23,54,21],[52,26,54,24,"v"],[52,27,54,25],[52,28,54,26,"a"],[52,29,54,27],[52,32,54,30],[52,33,54,31],[52,34,54,32],[53,4,55,2,"v"],[53,5,55,3],[53,6,55,4,"d"],[53,7,55,5],[53,8,55,6],[53,11,55,9,"xor1"],[53,15,55,13],[54,4,56,2,"v"],[54,5,56,3],[54,6,56,4,"d"],[54,7,56,5],[54,10,56,8],[54,11,56,9],[54,12,56,10],[54,15,56,13,"xor0"],[54,19,56,17],[55,4,58,2,"ADD64AA"],[55,11,58,9],[55,12,58,10,"v"],[55,13,58,11],[55,15,58,13,"c"],[55,16,58,14],[55,18,58,16,"d"],[55,19,58,17],[55,20,58,18],[57,4,60,2],[58,4,61,2,"xor0"],[58,8,61,6],[58,11,61,9,"v"],[58,12,61,10],[58,13,61,11,"b"],[58,14,61,12],[58,15,61,13],[58,18,61,16,"v"],[58,19,61,17],[58,20,61,18,"c"],[58,21,61,19],[58,22,61,20],[59,4,62,2,"xor1"],[59,8,62,6],[59,11,62,9,"v"],[59,12,62,10],[59,13,62,11,"b"],[59,14,62,12],[59,17,62,15],[59,18,62,16],[59,19,62,17],[59,22,62,20,"v"],[59,23,62,21],[59,24,62,22,"c"],[59,25,62,23],[59,28,62,26],[59,29,62,27],[59,30,62,28],[60,4,63,2,"v"],[60,5,63,3],[60,6,63,4,"b"],[60,7,63,5],[60,8,63,6],[60,11,63,10,"xor0"],[60,15,63,14],[60,20,63,19],[60,22,63,21],[60,25,63,26,"xor1"],[60,29,63,30],[60,33,63,34],[60,34,63,36],[61,4,64,2,"v"],[61,5,64,3],[61,6,64,4,"b"],[61,7,64,5],[61,10,64,8],[61,11,64,9],[61,12,64,10],[61,15,64,14,"xor1"],[61,19,64,18],[61,24,64,23],[61,26,64,25],[61,29,64,30,"xor0"],[61,33,64,34],[61,37,64,38],[61,38,64,40],[62,4,66,2,"ADD64AA"],[62,11,66,9],[62,12,66,10,"v"],[62,13,66,11],[62,15,66,13,"a"],[62,16,66,14],[62,18,66,16,"b"],[62,19,66,17],[62,20,66,18],[63,4,67,2,"ADD64AC"],[63,11,67,9],[63,12,67,10,"v"],[63,13,67,11],[63,15,67,13,"a"],[63,16,67,14],[63,18,67,16,"y0"],[63,20,67,18],[63,22,67,20,"y1"],[63,24,67,22],[63,25,67,23],[65,4,69,2],[66,4,70,2,"xor0"],[66,8,70,6],[66,11,70,9,"v"],[66,12,70,10],[66,13,70,11,"d"],[66,14,70,12],[66,15,70,13],[66,18,70,16,"v"],[66,19,70,17],[66,20,70,18,"a"],[66,21,70,19],[66,22,70,20],[67,4,71,2,"xor1"],[67,8,71,6],[67,11,71,9,"v"],[67,12,71,10],[67,13,71,11,"d"],[67,14,71,12],[67,17,71,15],[67,18,71,16],[67,19,71,17],[67,22,71,20,"v"],[67,23,71,21],[67,24,71,22,"a"],[67,25,71,23],[67,28,71,26],[67,29,71,27],[67,30,71,28],[68,4,72,2,"v"],[68,5,72,3],[68,6,72,4,"d"],[68,7,72,5],[68,8,72,6],[68,11,72,10,"xor0"],[68,15,72,14],[68,20,72,19],[68,22,72,21],[68,25,72,26,"xor1"],[68,29,72,30],[68,33,72,34],[68,35,72,37],[69,4,73,2,"v"],[69,5,73,3],[69,6,73,4,"d"],[69,7,73,5],[69,10,73,8],[69,11,73,9],[69,12,73,10],[69,15,73,14,"xor1"],[69,19,73,18],[69,24,73,23],[69,26,73,25],[69,29,73,30,"xor0"],[69,33,73,34],[69,37,73,38],[69,39,73,41],[70,4,75,2,"ADD64AA"],[70,11,75,9],[70,12,75,10,"v"],[70,13,75,11],[70,15,75,13,"c"],[70,16,75,14],[70,18,75,16,"d"],[70,19,75,17],[70,20,75,18],[72,4,77,2],[73,4,78,2,"xor0"],[73,8,78,6],[73,11,78,9,"v"],[73,12,78,10],[73,13,78,11,"b"],[73,14,78,12],[73,15,78,13],[73,18,78,16,"v"],[73,19,78,17],[73,20,78,18,"c"],[73,21,78,19],[73,22,78,20],[74,4,79,2,"xor1"],[74,8,79,6],[74,11,79,9,"v"],[74,12,79,10],[74,13,79,11,"b"],[74,14,79,12],[74,17,79,15],[74,18,79,16],[74,19,79,17],[74,22,79,20,"v"],[74,23,79,21],[74,24,79,22,"c"],[74,25,79,23],[74,28,79,26],[74,29,79,27],[74,30,79,28],[75,4,80,2,"v"],[75,5,80,3],[75,6,80,4,"b"],[75,7,80,5],[75,8,80,6],[75,11,80,10,"xor1"],[75,15,80,14],[75,20,80,19],[75,22,80,21],[75,25,80,26,"xor0"],[75,29,80,30],[75,33,80,34],[75,34,80,36],[76,4,81,2,"v"],[76,5,81,3],[76,6,81,4,"b"],[76,7,81,5],[76,10,81,8],[76,11,81,9],[76,12,81,10],[76,15,81,14,"xor0"],[76,19,81,18],[76,24,81,23],[76,26,81,25],[76,29,81,30,"xor1"],[76,33,81,34],[76,37,81,38],[76,38,81,40],[77,2,82,0],[79,2,84,0],[80,2,85,0],[80,6,85,6,"BLAKE2B_IV32"],[80,18,85,18],[80,21,85,21],[80,25,85,25,"Uint32Array"],[80,36,85,36],[80,37,85,37],[80,38,86,2],[80,48,86,12],[80,50,86,14],[80,60,86,24],[80,62,86,26],[80,72,86,36],[80,74,86,38],[80,84,86,48],[80,86,86,50],[80,96,86,60],[80,98,86,62],[80,108,86,72],[80,110,87,2],[80,120,87,12],[80,122,87,14],[80,132,87,24],[80,134,87,26],[80,144,87,36],[80,146,87,38],[80,156,87,48],[80,158,87,50],[80,168,87,60],[80,170,87,62],[80,180,87,72],[80,182,88,2],[80,192,88,12],[80,194,88,14],[80,204,88,24],[80,206,88,26],[80,216,88,36],[80,218,88,38],[80,228,88,48],[80,229,89,1],[80,230,89,2],[81,2,91,0],[81,6,91,6,"SIGMA8"],[81,12,91,12],[81,15,91,15],[81,16,92,2],[81,17,92,3],[81,19,92,5],[81,20,92,6],[81,22,92,8],[81,23,92,9],[81,25,92,11],[81,26,92,12],[81,28,92,14],[81,29,92,15],[81,31,92,17],[81,32,92,18],[81,34,92,20],[81,35,92,21],[81,37,92,23],[81,38,92,24],[81,40,92,26],[81,41,92,27],[81,43,92,29],[81,44,92,30],[81,46,92,32],[81,48,92,34],[81,50,92,36],[81,52,92,38],[81,54,92,40],[81,56,92,42],[81,58,92,44],[81,60,92,46],[81,62,92,48],[81,64,92,50],[81,66,92,52],[81,68,92,54],[81,70,92,56],[81,72,92,58],[81,74,92,60],[81,76,92,62],[81,78,92,64],[81,79,92,65],[81,81,92,67],[81,82,92,68],[81,84,92,70],[81,85,92,71],[81,87,92,73],[81,89,92,75],[81,91,92,77],[81,93,92,79],[81,95,93,2],[81,96,93,3],[81,98,93,5],[81,99,93,6],[81,101,93,8],[81,103,93,10],[81,105,93,12],[81,106,93,13],[81,108,93,15],[81,109,93,16],[81,111,93,18],[81,113,93,20],[81,115,93,22],[81,116,93,23],[81,118,93,25],[81,119,93,26],[81,121,93,28],[81,122,93,29],[81,124,93,31],[81,126,93,33],[81,128,93,35],[81,129,93,36],[81,131,93,38],[81,133,93,40],[81,135,93,42],[81,136,93,43],[81,138,93,45],[81,139,93,46],[81,141,93,48],[81,142,93,49],[81,144,93,51],[81,146,93,53],[81,148,93,55],[81,150,93,57],[81,152,93,59],[81,154,93,61],[81,156,93,63],[81,158,93,65],[81,160,93,67],[81,161,93,68],[81,163,93,70],[81,164,93,71],[81,166,93,73],[81,167,93,74],[81,169,93,76],[81,170,93,77],[81,172,94,2],[81,173,94,3],[81,175,94,5],[81,176,94,6],[81,178,94,8],[81,179,94,9],[81,181,94,11],[81,182,94,12],[81,184,94,14],[81,185,94,15],[81,187,94,17],[81,188,94,18],[81,190,94,20],[81,192,94,22],[81,194,94,24],[81,196,94,26],[81,198,94,28],[81,200,94,30],[81,202,94,32],[81,204,94,34],[81,206,94,36],[81,207,94,37],[81,209,94,39],[81,210,94,40],[81,212,94,42],[81,213,94,43],[81,215,94,45],[81,217,94,47],[81,219,94,49],[81,220,94,50],[81,222,94,52],[81,223,94,53],[81,225,94,55],[81,227,94,57],[81,229,94,59],[81,230,94,60],[81,232,94,62],[81,233,94,63],[81,235,94,65],[81,236,94,66],[81,238,94,68],[81,239,94,69],[81,241,94,71],[81,242,94,72],[81,244,94,74],[81,245,94,75],[81,247,94,77],[81,248,94,78],[81,250,95,2],[81,252,95,4],[81,254,95,6],[81,256,95,8],[81,258,95,10],[81,260,95,12],[81,262,95,14],[81,263,95,15],[81,265,95,17],[81,267,95,19],[81,269,95,21],[81,271,95,23],[81,273,95,25],[81,274,95,26],[81,276,95,28],[81,277,95,29],[81,279,95,31],[81,280,95,32],[81,282,95,34],[81,284,95,36],[81,286,95,38],[81,287,95,39],[81,289,95,41],[81,291,95,43],[81,293,95,45],[81,294,95,46],[81,296,95,48],[81,298,95,50],[81,300,95,52],[81,301,95,53],[81,303,95,55],[81,305,95,57],[81,307,95,59],[81,308,95,60],[81,310,95,62],[81,311,95,63],[81,313,95,65],[81,314,95,66],[81,316,95,68],[81,318,95,70],[81,320,95,72],[81,321,95,73],[81,323,95,75],[81,324,95,76],[81,326,96,2],[81,328,96,4],[81,330,96,6],[81,332,96,8],[81,334,96,10],[81,335,96,11],[81,337,96,13],[81,338,96,14],[81,340,96,16],[81,342,96,18],[81,344,96,20],[81,345,96,21],[81,347,96,23],[81,348,96,24],[81,350,96,26],[81,352,96,28],[81,354,96,30],[81,356,96,32],[81,358,96,34],[81,360,96,36],[81,362,96,38],[81,363,96,39],[81,365,96,41],[81,367,96,43],[81,369,96,45],[81,370,96,46],[81,372,96,48],[81,373,96,49],[81,375,96,51],[81,376,96,52],[81,378,96,54],[81,379,96,55],[81,381,96,57],[81,382,96,58],[81,384,96,60],[81,385,96,61],[81,387,96,63],[81,388,96,64],[81,390,96,66],[81,392,96,68],[81,394,96,70],[81,396,96,72],[81,398,96,74],[81,400,96,76],[81,402,96,78],[81,403,96,79],[81,405,97,2],[81,407,97,4],[81,409,97,6],[81,411,97,8],[81,413,97,10],[81,414,97,11],[81,416,97,13],[81,417,97,14],[81,419,97,16],[81,420,97,17],[81,422,97,19],[81,423,97,20],[81,425,97,22],[81,426,97,23],[81,428,97,25],[81,430,97,27],[81,432,97,29],[81,433,97,30],[81,435,97,32],[81,436,97,33],[81,438,97,35],[81,439,97,36],[81,441,97,38],[81,442,97,39],[81,444,97,41],[81,446,97,43],[81,448,97,45],[81,449,97,46],[81,451,97,48],[81,453,97,50],[81,455,97,52],[81,457,97,54],[81,459,97,56],[81,460,97,57],[81,462,97,59],[81,464,97,61],[81,466,97,63],[81,467,97,64],[81,469,97,66],[81,470,97,67],[81,472,97,69],[81,473,97,70],[81,475,97,72],[81,477,97,74],[81,479,97,76],[81,480,97,77],[81,482,98,2],[81,484,98,4],[81,486,98,6],[81,487,98,7],[81,489,98,9],[81,490,98,10],[81,492,98,12],[81,493,98,13],[81,495,98,15],[81,497,98,17],[81,499,98,19],[81,500,98,20],[81,502,98,22],[81,504,98,24],[81,506,98,26],[81,507,98,27],[81,509,98,29],[81,510,98,30],[81,512,98,32],[81,513,98,33],[81,515,98,35],[81,516,98,36],[81,518,98,38],[81,519,98,39],[81,521,98,41],[81,522,98,42],[81,524,98,44],[81,525,98,45],[81,527,98,47],[81,529,98,49],[81,531,98,51],[81,533,98,53],[81,535,98,55],[81,536,98,56],[81,538,98,58],[81,540,98,60],[81,542,98,62],[81,543,98,63],[81,545,98,65],[81,547,98,67],[81,549,98,69],[81,551,98,71],[81,553,98,73],[81,554,98,74],[81,556,98,76],[81,557,98,77],[81,559,99,2],[81,560,99,3],[81,562,99,5],[81,563,99,6],[81,565,99,8],[81,566,99,9],[81,568,99,11],[81,569,99,12],[81,571,99,14],[81,572,99,15],[81,574,99,17],[81,575,99,18],[81,577,99,20],[81,578,99,21],[81,580,99,23],[81,581,99,24],[81,583,99,26],[81,584,99,27],[81,586,99,29],[81,588,99,31],[81,590,99,33],[81,592,99,35],[81,594,99,37],[81,596,99,39],[81,598,99,41],[81,600,99,43],[81,602,99,45],[81,604,99,47],[81,606,99,49],[81,608,99,51],[81,610,99,53],[81,612,99,55],[81,614,99,57],[81,616,99,59],[81,618,99,61],[81,619,99,62],[81,621,99,64],[81,622,99,65],[81,624,99,67],[81,625,99,68],[81,627,99,70],[81,629,99,72],[81,631,99,74],[81,633,99,76],[81,635,99,78],[81,636,99,79],[81,638,100,2],[81,639,100,3],[81,641,100,5],[81,643,100,7],[81,645,100,9],[81,646,100,10],[81,648,100,12],[81,649,100,13],[81,651,100,15],[81,653,100,17],[81,655,100,19],[81,656,100,20],[81,658,100,22],[81,659,100,23],[81,661,100,25],[81,662,100,26],[81,663,101,1],[83,2,103,0],[84,2,104,0],[85,2,105,0],[86,2,106,0],[86,6,106,6,"SIGMA82"],[86,13,106,13],[86,16,106,16],[86,20,106,20,"Uint8Array"],[86,30,106,30],[86,31,107,2,"SIGMA8"],[86,37,107,8],[86,38,107,9,"map"],[86,41,107,12],[86,42,107,13],[86,52,107,23,"x"],[86,53,107,24],[86,55,107,26],[87,4,108,4],[87,11,108,11,"x"],[87,12,108,12],[87,15,108,15],[87,16,108,16],[88,2,109,2],[88,3,109,3],[88,4,110,0],[88,5,110,1],[90,2,112,0],[91,2,113,0],[92,2,114,0],[92,6,114,6,"v"],[92,7,114,7],[92,10,114,10],[92,14,114,14,"Uint32Array"],[92,25,114,25],[92,26,114,26],[92,28,114,28],[92,29,114,29],[93,2,115,0],[93,6,115,6,"m"],[93,7,115,7],[93,10,115,10],[93,14,115,14,"Uint32Array"],[93,25,115,25],[93,26,115,26],[93,28,115,28],[93,29,115,29],[94,2,116,0],[94,11,116,9,"blake2bCompress"],[94,26,116,24,"blake2bCompress"],[94,27,116,26,"ctx"],[94,30,116,29],[94,32,116,31,"last"],[94,36,116,35],[94,38,116,37],[95,4,117,2],[95,8,117,6,"i"],[95,9,117,7],[95,12,117,10],[95,13,117,11],[97,4,119,2],[98,4,120,2],[98,9,120,7,"i"],[98,10,120,8],[98,13,120,11],[98,14,120,12],[98,16,120,14,"i"],[98,17,120,15],[98,20,120,18],[98,22,120,20],[98,24,120,22,"i"],[98,25,120,23],[98,27,120,25],[98,29,120,27],[99,6,121,4,"v"],[99,7,121,5],[99,8,121,6,"i"],[99,9,121,7],[99,10,121,8],[99,13,121,11,"ctx"],[99,16,121,14],[99,17,121,15,"h"],[99,18,121,16],[99,19,121,17,"i"],[99,20,121,18],[99,21,121,19],[100,6,122,4,"v"],[100,7,122,5],[100,8,122,6,"i"],[100,9,122,7],[100,12,122,10],[100,14,122,12],[100,15,122,13],[100,18,122,16,"BLAKE2B_IV32"],[100,30,122,28],[100,31,122,29,"i"],[100,32,122,30],[100,33,122,31],[101,4,123,2],[103,4,125,2],[104,4,126,2,"v"],[104,5,126,3],[104,6,126,4],[104,8,126,6],[104,9,126,7],[104,12,126,10,"v"],[104,13,126,11],[104,14,126,12],[104,16,126,14],[104,17,126,15],[104,20,126,18,"ctx"],[104,23,126,21],[104,24,126,22,"t"],[104,25,126,23],[105,4,127,2,"v"],[105,5,127,3],[105,6,127,4],[105,8,127,6],[105,9,127,7],[105,12,127,10,"v"],[105,13,127,11],[105,14,127,12],[105,16,127,14],[105,17,127,15],[105,20,127,19,"ctx"],[105,23,127,22],[105,24,127,23,"t"],[105,25,127,24],[105,28,127,27],[105,39,127,39],[106,4,128,2],[108,4,130,2],[109,4,131,2],[109,8,131,6,"last"],[109,12,131,10],[109,14,131,12],[110,6,132,4,"v"],[110,7,132,5],[110,8,132,6],[110,10,132,8],[110,11,132,9],[110,14,132,12],[110,15,132,13,"v"],[110,16,132,14],[110,17,132,15],[110,19,132,17],[110,20,132,18],[111,6,133,4,"v"],[111,7,133,5],[111,8,133,6],[111,10,133,8],[111,11,133,9],[111,14,133,12],[111,15,133,13,"v"],[111,16,133,14],[111,17,133,15],[111,19,133,17],[111,20,133,18],[112,4,134,2],[114,4,136,2],[115,4,137,2],[115,9,137,7,"i"],[115,10,137,8],[115,13,137,11],[115,14,137,12],[115,16,137,14,"i"],[115,17,137,15],[115,20,137,18],[115,22,137,20],[115,24,137,22,"i"],[115,25,137,23],[115,27,137,25],[115,29,137,27],[116,6,138,4,"m"],[116,7,138,5],[116,8,138,6,"i"],[116,9,138,7],[116,10,138,8],[116,13,138,11,"B2B_GET32"],[116,22,138,20],[116,23,138,21,"ctx"],[116,26,138,24],[116,27,138,25,"b"],[116,28,138,26],[116,30,138,28],[116,31,138,29],[116,34,138,32,"i"],[116,35,138,33],[116,36,138,34],[117,4,139,2],[119,4,141,2],[120,4,142,2],[121,4,143,2],[122,4,144,2],[123,4,145,2],[123,9,145,7,"i"],[123,10,145,8],[123,13,145,11],[123,14,145,12],[123,16,145,14,"i"],[123,17,145,15],[123,20,145,18],[123,22,145,20],[123,24,145,22,"i"],[123,25,145,23],[123,27,145,25],[123,29,145,27],[124,6,146,4],[125,6,147,4,"B2B_G"],[125,11,147,9],[125,12,147,10],[125,13,147,11],[125,15,147,13],[125,16,147,14],[125,18,147,16],[125,20,147,18],[125,22,147,20],[125,24,147,22],[125,26,147,24,"SIGMA82"],[125,33,147,31],[125,34,147,32,"i"],[125,35,147,33],[125,38,147,36],[125,40,147,38],[125,43,147,41],[125,44,147,42],[125,45,147,43],[125,47,147,45,"SIGMA82"],[125,54,147,52],[125,55,147,53,"i"],[125,56,147,54],[125,59,147,57],[125,61,147,59],[125,64,147,62],[125,65,147,63],[125,66,147,64],[125,67,147,65],[126,6,148,4,"B2B_G"],[126,11,148,9],[126,12,148,10],[126,13,148,11],[126,15,148,13],[126,17,148,15],[126,19,148,17],[126,21,148,19],[126,23,148,21],[126,25,148,23],[126,27,148,25,"SIGMA82"],[126,34,148,32],[126,35,148,33,"i"],[126,36,148,34],[126,39,148,37],[126,41,148,39],[126,44,148,42],[126,45,148,43],[126,46,148,44],[126,48,148,46,"SIGMA82"],[126,55,148,53],[126,56,148,54,"i"],[126,57,148,55],[126,60,148,58],[126,62,148,60],[126,65,148,63],[126,66,148,64],[126,67,148,65],[126,68,148,66],[127,6,149,4,"B2B_G"],[127,11,149,9],[127,12,149,10],[127,13,149,11],[127,15,149,13],[127,17,149,15],[127,19,149,17],[127,21,149,19],[127,23,149,21],[127,25,149,23],[127,27,149,25,"SIGMA82"],[127,34,149,32],[127,35,149,33,"i"],[127,36,149,34],[127,39,149,37],[127,41,149,39],[127,44,149,42],[127,45,149,43],[127,46,149,44],[127,48,149,46,"SIGMA82"],[127,55,149,53],[127,56,149,54,"i"],[127,57,149,55],[127,60,149,58],[127,62,149,60],[127,65,149,63],[127,66,149,64],[127,67,149,65],[127,68,149,66],[128,6,150,4,"B2B_G"],[128,11,150,9],[128,12,150,10],[128,13,150,11],[128,15,150,13],[128,17,150,15],[128,19,150,17],[128,21,150,19],[128,23,150,21],[128,25,150,23],[128,27,150,25,"SIGMA82"],[128,34,150,32],[128,35,150,33,"i"],[128,36,150,34],[128,39,150,37],[128,41,150,39],[128,44,150,42],[128,45,150,43],[128,46,150,44],[128,48,150,46,"SIGMA82"],[128,55,150,53],[128,56,150,54,"i"],[128,57,150,55],[128,60,150,58],[128,62,150,60],[128,65,150,63],[128,66,150,64],[128,67,150,65],[128,68,150,66],[129,6,151,4,"B2B_G"],[129,11,151,9],[129,12,151,10],[129,13,151,11],[129,15,151,13],[129,17,151,15],[129,19,151,17],[129,21,151,19],[129,23,151,21],[129,25,151,23],[129,27,151,25,"SIGMA82"],[129,34,151,32],[129,35,151,33,"i"],[129,36,151,34],[129,39,151,37],[129,41,151,39],[129,44,151,42],[129,45,151,43],[129,46,151,44],[129,48,151,46,"SIGMA82"],[129,55,151,53],[129,56,151,54,"i"],[129,57,151,55],[129,60,151,58],[129,62,151,60],[129,65,151,63],[129,66,151,64],[129,67,151,65],[129,68,151,66],[130,6,152,4,"B2B_G"],[130,11,152,9],[130,12,152,10],[130,13,152,11],[130,15,152,13],[130,17,152,15],[130,19,152,17],[130,21,152,19],[130,23,152,21],[130,25,152,23],[130,27,152,25,"SIGMA82"],[130,34,152,32],[130,35,152,33,"i"],[130,36,152,34],[130,39,152,37],[130,41,152,39],[130,44,152,42],[130,46,152,44],[130,47,152,45],[130,49,152,47,"SIGMA82"],[130,56,152,54],[130,57,152,55,"i"],[130,58,152,56],[130,61,152,59],[130,63,152,61],[130,66,152,64],[130,68,152,66],[130,69,152,67],[130,70,152,68],[131,6,153,4,"B2B_G"],[131,11,153,9],[131,12,153,10],[131,13,153,11],[131,15,153,13],[131,17,153,15],[131,19,153,17],[131,21,153,19],[131,23,153,21],[131,25,153,23],[131,27,153,25,"SIGMA82"],[131,34,153,32],[131,35,153,33,"i"],[131,36,153,34],[131,39,153,37],[131,41,153,39],[131,44,153,42],[131,46,153,44],[131,47,153,45],[131,49,153,47,"SIGMA82"],[131,56,153,54],[131,57,153,55,"i"],[131,58,153,56],[131,61,153,59],[131,63,153,61],[131,66,153,64],[131,68,153,66],[131,69,153,67],[131,70,153,68],[132,6,154,4,"B2B_G"],[132,11,154,9],[132,12,154,10],[132,13,154,11],[132,15,154,13],[132,16,154,14],[132,18,154,16],[132,20,154,18],[132,22,154,20],[132,24,154,22],[132,26,154,24,"SIGMA82"],[132,33,154,31],[132,34,154,32,"i"],[132,35,154,33],[132,38,154,36],[132,40,154,38],[132,43,154,41],[132,45,154,43],[132,46,154,44],[132,48,154,46,"SIGMA82"],[132,55,154,53],[132,56,154,54,"i"],[132,57,154,55],[132,60,154,58],[132,62,154,60],[132,65,154,63],[132,67,154,65],[132,68,154,66],[132,69,154,67],[133,4,155,2],[134,4,156,2],[136,4,158,2],[136,9,158,7,"i"],[136,10,158,8],[136,13,158,11],[136,14,158,12],[136,16,158,14,"i"],[136,17,158,15],[136,20,158,18],[136,22,158,20],[136,24,158,22,"i"],[136,25,158,23],[136,27,158,25],[136,29,158,27],[137,6,159,4,"ctx"],[137,9,159,7],[137,10,159,8,"h"],[137,11,159,9],[137,12,159,10,"i"],[137,13,159,11],[137,14,159,12],[137,17,159,15,"ctx"],[137,20,159,18],[137,21,159,19,"h"],[137,22,159,20],[137,23,159,21,"i"],[137,24,159,22],[137,25,159,23],[137,28,159,26,"v"],[137,29,159,27],[137,30,159,28,"i"],[137,31,159,29],[137,32,159,30],[137,35,159,33,"v"],[137,36,159,34],[137,37,159,35,"i"],[137,38,159,36],[137,41,159,39],[137,43,159,41],[137,44,159,42],[138,4,160,2],[139,4,161,2],[140,2,162,0],[142,2,164,0],[143,2,165,0],[143,6,165,6,"parameterBlock"],[143,20,165,20],[143,23,165,23],[143,27,165,27,"Uint8Array"],[143,37,165,37],[143,38,165,38],[143,39,166,2],[143,40,166,3],[143,42,167,2],[143,43,167,3],[143,45,168,2],[143,46,168,3],[143,48,169,2],[143,49,169,3],[144,2,169,5],[145,2,170,2],[145,3,170,3],[145,5,171,2],[145,6,171,3],[145,8,172,2],[145,9,172,3],[145,11,173,2],[145,12,173,3],[146,2,173,5],[147,2,174,2],[147,3,174,3],[147,5,175,2],[147,6,175,3],[147,8,176,2],[147,9,176,3],[147,11,177,2],[147,12,177,3],[148,2,177,5],[149,2,178,2],[149,3,178,3],[149,5,179,2],[149,6,179,3],[149,8,180,2],[149,9,180,3],[149,11,181,2],[149,12,181,3],[150,2,181,5],[151,2,182,2],[151,3,182,3],[151,5,183,2],[151,6,183,3],[151,8,184,2],[151,9,184,3],[151,11,185,2],[151,12,185,3],[152,2,185,5],[153,2,186,2],[153,3,186,3],[153,5,187,2],[153,6,187,3],[153,8,188,2],[153,9,188,3],[153,11,189,2],[153,12,189,3],[154,2,189,5],[155,2,190,2],[155,3,190,3],[155,5,191,2],[155,6,191,3],[155,8,192,2],[155,9,192,3],[155,11,193,2],[155,12,193,3],[156,2,193,5],[157,2,194,2],[157,3,194,3],[157,5,195,2],[157,6,195,3],[157,8,196,2],[157,9,196,3],[157,11,197,2],[157,12,197,3],[158,2,197,5],[159,2,198,2],[159,3,198,3],[159,5,199,2],[159,6,199,3],[159,8,200,2],[159,9,200,3],[159,11,201,2],[159,12,201,3],[160,2,201,5],[161,2,202,2],[161,3,202,3],[161,5,203,2],[161,6,203,3],[161,8,204,2],[161,9,204,3],[161,11,205,2],[161,12,205,3],[162,2,205,5],[163,2,206,2],[163,3,206,3],[163,5,207,2],[163,6,207,3],[163,8,208,2],[163,9,208,3],[163,11,209,2],[163,12,209,3],[164,2,209,5],[165,2,210,2],[165,3,210,3],[165,5,211,2],[165,6,211,3],[165,8,212,2],[165,9,212,3],[165,11,213,2],[165,12,213,3],[166,2,213,5],[167,2,214,2],[167,3,214,3],[167,5,215,2],[167,6,215,3],[167,8,216,2],[167,9,216,3],[167,11,217,2],[167,12,217,3],[168,2,217,5],[169,2,218,2],[169,3,218,3],[169,5,219,2],[169,6,219,3],[169,8,220,2],[169,9,220,3],[169,11,221,2],[169,12,221,3],[170,2,221,5],[171,2,222,2],[171,3,222,3],[171,5,223,2],[171,6,223,3],[171,8,224,2],[171,9,224,3],[171,11,225,2],[171,12,225,3],[172,2,225,5],[173,2,226,2],[173,3,226,3],[173,5,227,2],[173,6,227,3],[173,8,228,2],[173,9,228,3],[173,11,229,2],[173,12,229,3],[173,13,229,4],[174,2,229,4],[174,3,230,1],[174,4,230,2],[176,2,232,0],[177,2,233,0],[178,2,234,0],[179,2,235,0],[180,2,236,0],[181,2,237,0],[181,11,237,9,"blake2bInit"],[181,22,237,20,"blake2bInit"],[181,23,237,22,"outlen"],[181,29,237,28],[181,31,237,30,"key"],[181,34,237,33],[181,36,237,35,"salt"],[181,40,237,39],[181,42,237,41,"personal"],[181,50,237,49],[181,52,237,51],[182,4,238,2],[182,8,238,6,"outlen"],[182,14,238,12],[182,19,238,17],[182,20,238,18],[182,24,238,22,"outlen"],[182,30,238,28],[182,33,238,31],[182,35,238,33],[182,37,238,35],[183,6,239,4],[183,12,239,10],[183,16,239,14,"Error"],[183,21,239,19],[183,22,239,20],[183,72,239,70],[183,73,239,71],[184,4,240,2],[185,4,241,2],[185,8,241,6,"key"],[185,11,241,9],[185,15,241,13,"key"],[185,18,241,16],[185,19,241,17,"length"],[185,25,241,23],[185,28,241,26],[185,30,241,28],[185,32,241,30],[186,6,242,4],[186,12,242,10],[186,16,242,14,"Error"],[186,21,242,19],[186,22,242,20],[186,78,242,76],[186,79,242,77],[187,4,243,2],[188,4,244,2],[188,8,244,6,"salt"],[188,12,244,10],[188,16,244,14,"salt"],[188,20,244,18],[188,21,244,19,"length"],[188,27,244,25],[188,32,244,30],[188,34,244,32],[188,36,244,34],[189,6,245,4],[189,12,245,10],[189,16,245,14,"Error"],[189,21,245,19],[189,22,245,20],[189,75,245,73],[189,76,245,74],[190,4,246,2],[191,4,247,2],[191,8,247,6,"personal"],[191,16,247,14],[191,20,247,18,"personal"],[191,28,247,26],[191,29,247,27,"length"],[191,35,247,33],[191,40,247,38],[191,42,247,40],[191,44,247,42],[192,6,248,4],[192,12,248,10],[192,16,248,14,"Error"],[192,21,248,19],[192,22,248,20],[192,79,248,77],[192,80,248,78],[193,4,249,2],[195,4,251,2],[196,4,252,2],[196,8,252,8,"ctx"],[196,11,252,11],[196,14,252,14],[197,6,253,4,"b"],[197,7,253,5],[197,9,253,7],[197,13,253,11,"Uint8Array"],[197,23,253,21],[197,24,253,22],[197,27,253,25],[197,28,253,26],[198,6,254,4,"h"],[198,7,254,5],[198,9,254,7],[198,13,254,11,"Uint32Array"],[198,24,254,22],[198,25,254,23],[198,27,254,25],[198,28,254,26],[199,6,255,4,"t"],[199,7,255,5],[199,9,255,7],[199,10,255,8],[200,6,255,10],[201,6,256,4,"c"],[201,7,256,5],[201,9,256,7],[201,10,256,8],[202,6,256,10],[203,6,257,4,"outlen"],[203,12,257,10],[203,14,257,12,"outlen"],[203,20,257,18],[203,21,257,19],[204,4,258,2],[204,5,258,3],[206,4,260,2],[207,4,261,2,"parameterBlock"],[207,18,261,16],[207,19,261,17,"fill"],[207,23,261,21],[207,24,261,22],[207,25,261,23],[207,26,261,24],[208,4,262,2,"parameterBlock"],[208,18,262,16],[208,19,262,17],[208,20,262,18],[208,21,262,19],[208,24,262,22,"outlen"],[208,30,262,28],[209,4,263,2],[209,8,263,6,"key"],[209,11,263,9],[209,13,263,11,"parameterBlock"],[209,27,263,25],[209,28,263,26],[209,29,263,27],[209,30,263,28],[209,33,263,31,"key"],[209,36,263,34],[209,37,263,35,"length"],[209,43,263,41],[210,4,264,2,"parameterBlock"],[210,18,264,16],[210,19,264,17],[210,20,264,18],[210,21,264,19],[210,24,264,22],[210,25,264,23],[210,27,264,24],[211,4,265,2,"parameterBlock"],[211,18,265,16],[211,19,265,17],[211,20,265,18],[211,21,265,19],[211,24,265,22],[211,25,265,23],[211,27,265,24],[212,4,266,2],[212,8,266,6,"salt"],[212,12,266,10],[212,14,266,12,"parameterBlock"],[212,28,266,26],[212,29,266,27,"set"],[212,32,266,30],[212,33,266,31,"salt"],[212,37,266,35],[212,39,266,37],[212,41,266,39],[212,42,266,40],[213,4,267,2],[213,8,267,6,"personal"],[213,16,267,14],[213,18,267,16,"parameterBlock"],[213,32,267,30],[213,33,267,31,"set"],[213,36,267,34],[213,37,267,35,"personal"],[213,45,267,43],[213,47,267,45],[213,49,267,47],[213,50,267,48],[215,4,269,2],[216,4,270,2],[216,9,270,7],[216,13,270,11,"i"],[216,14,270,12],[216,17,270,15],[216,18,270,16],[216,20,270,18,"i"],[216,21,270,19],[216,24,270,22],[216,26,270,24],[216,28,270,26,"i"],[216,29,270,27],[216,31,270,29],[216,33,270,31],[217,6,271,4,"ctx"],[217,9,271,7],[217,10,271,8,"h"],[217,11,271,9],[217,12,271,10,"i"],[217,13,271,11],[217,14,271,12],[217,17,271,15,"BLAKE2B_IV32"],[217,29,271,27],[217,30,271,28,"i"],[217,31,271,29],[217,32,271,30],[217,35,271,33,"B2B_GET32"],[217,44,271,42],[217,45,271,43,"parameterBlock"],[217,59,271,57],[217,61,271,59,"i"],[217,62,271,60],[217,65,271,63],[217,66,271,64],[217,67,271,65],[218,4,272,2],[220,4,274,2],[221,4,275,2],[221,8,275,6,"key"],[221,11,275,9],[221,13,275,11],[222,6,276,4,"blake2bUpdate"],[222,19,276,17],[222,20,276,18,"ctx"],[222,23,276,21],[222,25,276,23,"key"],[222,28,276,26],[222,29,276,27],[223,6,277,4],[224,6,278,4,"ctx"],[224,9,278,7],[224,10,278,8,"c"],[224,11,278,9],[224,14,278,12],[224,17,278,15],[225,4,279,2],[226,4,281,2],[226,11,281,9,"ctx"],[226,14,281,12],[227,2,282,0],[229,2,284,0],[230,2,285,0],[231,2,286,0],[231,11,286,9,"blake2bUpdate"],[231,24,286,22,"blake2bUpdate"],[231,25,286,24,"ctx"],[231,28,286,27],[231,30,286,29,"input"],[231,35,286,34],[231,37,286,36],[232,4,287,2],[232,9,287,7],[232,13,287,11,"i"],[232,14,287,12],[232,17,287,15],[232,18,287,16],[232,20,287,18,"i"],[232,21,287,19],[232,24,287,22,"input"],[232,29,287,27],[232,30,287,28,"length"],[232,36,287,34],[232,38,287,36,"i"],[232,39,287,37],[232,41,287,39],[232,43,287,41],[233,6,288,4],[233,10,288,8,"ctx"],[233,13,288,11],[233,14,288,12,"c"],[233,15,288,13],[233,20,288,18],[233,23,288,21],[233,25,288,23],[234,8,289,6],[235,8,290,6,"ctx"],[235,11,290,9],[235,12,290,10,"t"],[235,13,290,11],[235,17,290,15,"ctx"],[235,20,290,18],[235,21,290,19,"c"],[235,22,290,20],[235,24,290,21],[236,8,291,6,"blake2bCompress"],[236,23,291,21],[236,24,291,22,"ctx"],[236,27,291,25],[236,29,291,27],[236,34,291,32],[236,35,291,33],[236,37,291,34],[237,8,292,6,"ctx"],[237,11,292,9],[237,12,292,10,"c"],[237,13,292,11],[237,16,292,14],[237,17,292,15],[237,19,292,16],[238,6,293,4],[239,6,294,4,"ctx"],[239,9,294,7],[239,10,294,8,"b"],[239,11,294,9],[239,12,294,10,"ctx"],[239,15,294,13],[239,16,294,14,"c"],[239,17,294,15],[239,19,294,17],[239,20,294,18],[239,23,294,21,"input"],[239,28,294,26],[239,29,294,27,"i"],[239,30,294,28],[239,31,294,29],[240,4,295,2],[241,2,296,0],[243,2,298,0],[244,2,299,0],[245,2,300,0],[245,11,300,9,"blake2bFinal"],[245,23,300,21,"blake2bFinal"],[245,24,300,23,"ctx"],[245,27,300,26],[245,29,300,28],[246,4,301,2,"ctx"],[246,7,301,5],[246,8,301,6,"t"],[246,9,301,7],[246,13,301,11,"ctx"],[246,16,301,14],[246,17,301,15,"c"],[246,18,301,16],[246,20,301,17],[248,4,303,2],[248,11,303,9,"ctx"],[248,14,303,12],[248,15,303,13,"c"],[248,16,303,14],[248,19,303,17],[248,22,303,20],[248,24,303,22],[249,6,304,4],[250,6,305,4,"ctx"],[250,9,305,7],[250,10,305,8,"b"],[250,11,305,9],[250,12,305,10,"ctx"],[250,15,305,13],[250,16,305,14,"c"],[250,17,305,15],[250,19,305,17],[250,20,305,18],[250,23,305,21],[250,24,305,22],[251,4,306,2],[252,4,307,2,"blake2bCompress"],[252,19,307,17],[252,20,307,18,"ctx"],[252,23,307,21],[252,25,307,23],[252,29,307,27],[252,30,307,28],[252,32,307,29],[254,4,309,2],[255,4,310,2],[255,8,310,8,"out"],[255,11,310,11],[255,14,310,14],[255,18,310,18,"Uint8Array"],[255,28,310,28],[255,29,310,29,"ctx"],[255,32,310,32],[255,33,310,33,"outlen"],[255,39,310,39],[255,40,310,40],[256,4,311,2],[256,9,311,7],[256,13,311,11,"i"],[256,14,311,12],[256,17,311,15],[256,18,311,16],[256,20,311,18,"i"],[256,21,311,19],[256,24,311,22,"ctx"],[256,27,311,25],[256,28,311,26,"outlen"],[256,34,311,32],[256,36,311,34,"i"],[256,37,311,35],[256,39,311,37],[256,41,311,39],[257,6,312,4,"out"],[257,9,312,7],[257,10,312,8,"i"],[257,11,312,9],[257,12,312,10],[257,15,312,13,"ctx"],[257,18,312,16],[257,19,312,17,"h"],[257,20,312,18],[257,21,312,19,"i"],[257,22,312,20],[257,26,312,24],[257,27,312,25],[257,28,312,26],[257,32,312,31],[257,33,312,32],[257,37,312,36,"i"],[257,38,312,37],[257,41,312,40],[257,42,312,41],[257,43,312,43],[258,4,313,2],[259,4,314,2],[259,11,314,9,"out"],[259,14,314,12],[260,2,315,0],[262,2,317,0],[263,2,318,0],[264,2,319,0],[265,2,320,0],[266,2,321,0],[267,2,322,0],[268,2,323,0],[269,2,324,0],[270,2,325,0],[271,2,326,0],[272,2,327,0],[272,11,327,9,"blake2b"],[272,18,327,16,"blake2b"],[272,19,327,18,"input"],[272,24,327,23],[272,26,327,25,"key"],[272,29,327,28],[272,31,327,30,"outlen"],[272,37,327,36],[272,39,327,38,"salt"],[272,43,327,42],[272,45,327,44,"personal"],[272,53,327,52],[272,55,327,54],[273,4,328,2],[274,4,329,2,"outlen"],[274,10,329,8],[274,13,329,11,"outlen"],[274,19,329,17],[274,23,329,21],[274,25,329,23],[275,4,330,2,"input"],[275,9,330,7],[275,12,330,10,"_$$_REQUIRE"],[275,23,330,10],[275,24,330,10,"_dependencyMap"],[275,38,330,10],[275,53,330,15,"normalizeInput"],[275,67,330,29],[275,68,330,30,"input"],[275,73,330,35],[275,74,330,36],[276,4,331,2],[276,8,331,6,"salt"],[276,12,331,10],[276,14,331,12],[277,6,332,4,"salt"],[277,10,332,8],[277,13,332,11,"_$$_REQUIRE"],[277,24,332,11],[277,25,332,11,"_dependencyMap"],[277,39,332,11],[277,54,332,16,"normalizeInput"],[277,68,332,30],[277,69,332,31,"salt"],[277,73,332,35],[277,74,332,36],[278,4,333,2],[279,4,334,2],[279,8,334,6,"personal"],[279,16,334,14],[279,18,334,16],[280,6,335,4,"personal"],[280,14,335,12],[280,17,335,15,"_$$_REQUIRE"],[280,28,335,15],[280,29,335,15,"_dependencyMap"],[280,43,335,15],[280,58,335,20,"normalizeInput"],[280,72,335,34],[280,73,335,35,"personal"],[280,81,335,43],[280,82,335,44],[281,4,336,2],[283,4,338,2],[284,4,339,2],[284,8,339,8,"ctx"],[284,11,339,11],[284,14,339,14,"blake2bInit"],[284,25,339,25],[284,26,339,26,"outlen"],[284,32,339,32],[284,34,339,34,"key"],[284,37,339,37],[284,39,339,39,"salt"],[284,43,339,43],[284,45,339,45,"personal"],[284,53,339,53],[284,54,339,54],[285,4,340,2,"blake2bUpdate"],[285,17,340,15],[285,18,340,16,"ctx"],[285,21,340,19],[285,23,340,21,"input"],[285,28,340,26],[285,29,340,27],[286,4,341,2],[286,11,341,9,"blake2bFinal"],[286,23,341,21],[286,24,341,22,"ctx"],[286,27,341,25],[286,28,341,26],[287,2,342,0],[289,2,344,0],[290,2,345,0],[291,2,346,0],[292,2,347,0],[293,2,348,0],[294,2,349,0],[295,2,350,0],[296,2,351,0],[297,2,352,0],[298,2,353,0],[299,2,354,0],[299,11,354,9,"blake2bHex"],[299,21,354,19,"blake2bHex"],[299,22,354,21,"input"],[299,27,354,26],[299,29,354,28,"key"],[299,32,354,31],[299,34,354,33,"outlen"],[299,40,354,39],[299,42,354,41,"salt"],[299,46,354,45],[299,48,354,47,"personal"],[299,56,354,55],[299,58,354,57],[300,4,355,2],[300,8,355,8,"output"],[300,14,355,14],[300,17,355,17,"blake2b"],[300,24,355,24],[300,25,355,25,"input"],[300,30,355,30],[300,32,355,32,"key"],[300,35,355,35],[300,37,355,37,"outlen"],[300,43,355,43],[300,45,355,45,"salt"],[300,49,355,49],[300,51,355,51,"personal"],[300,59,355,59],[300,60,355,60],[301,4,356,2],[301,11,356,9,"_$$_REQUIRE"],[301,22,356,9],[301,23,356,9,"_dependencyMap"],[301,37,356,9],[301,52,356,14,"toHex"],[301,57,356,19],[301,58,356,20,"output"],[301,64,356,26],[301,65,356,27],[302,2,357,0],[303,2,359,0,"module"],[303,8,359,6],[303,9,359,7,"exports"],[303,16,359,14],[303,19,359,17],[304,4,360,2,"blake2b"],[304,11,360,9],[304,13,360,11,"blake2b"],[304,20,360,18],[305,4,361,2,"blake2bHex"],[305,14,361,12],[305,16,361,14,"blake2bHex"],[305,26,361,24],[306,4,362,2,"blake2bInit"],[306,15,362,13],[306,17,362,15,"blake2bInit"],[306,28,362,26],[307,4,363,2,"blake2bUpdate"],[307,17,363,15],[307,19,363,17,"blake2bUpdate"],[307,32,363,30],[308,4,364,2,"blake2bFinal"],[308,16,364,14],[308,18,364,16,"blake2bFinal"],[309,2,365,0],[309,3,365,1],[310,0,365,1],[310,3]],"functionMap":{"names":["<global>","ADD64AA","ADD64AC","B2B_GET32","B2B_G","SIGMA8.map$argument_0","blake2bCompress","blake2bInit","blake2bUpdate","blake2bFinal","blake2b","blake2bHex"],"mappings":"AAA;ACS;CDQ;AEK;CFW;AGG;CHE;AII;CJuC;aKyB;GLE;AMO;CN8C;AO2E;CP6C;AQI;CRU;ASI;CTe;AUY;CVe;AWY;CXG"}},"type":"js/module"}]}