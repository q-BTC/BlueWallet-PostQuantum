{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":0,"index":3972}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":0,"index":3972}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":0,"index":3972}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":0,"index":3972}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":0,"index":3972}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":156,"column":0,"index":3972}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":41,"index":41}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":130},"end":{"line":5,"column":47,"index":177}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"ecpair","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":89},"end":{"line":3,"column":39,"index":128}}],"key":"u6yWeivdFv15Am3FmwSfeX38wPs="}},{"name":"./legacy-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":178},"end":{"line":6,"column":47,"index":225}}],"key":"wPb6aTWK4taaR1mov6qK3Iqdk1w="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.SegwitBech32Wallet = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[6], \"bitcoinjs-lib\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../../blue_modules/noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var ECPair = (0, _$$_REQUIRE(_dependencyMap[8], \"ecpair\").ECPairFactory)(_noble_ecc.default);\n  var SegwitBech32Wallet = exports.SegwitBech32Wallet = /*#__PURE__*/function (_LegacyWallet) {\n    function SegwitBech32Wallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, SegwitBech32Wallet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, SegwitBech32Wallet, [].concat(args));\n      // @ts-ignore: override\n      _this.type = SegwitBech32Wallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = SegwitBech32Wallet.typeReadable;\n      _this.segwitType = 'p2wpkh';\n      return _this;\n    }\n    (0, _inherits2.default)(SegwitBech32Wallet, _LegacyWallet);\n    return (0, _createClass2.default)(SegwitBech32Wallet, [{\n      key: \"getAddress\",\n      value: function getAddress() {\n        if (this._address) return this._address;\n        var address;\n        try {\n          var keyPair = ECPair.fromWIF(this.secret);\n          if (!keyPair.compressed) {\n            console.warn('only compressed public keys are good for segwit');\n            return false;\n          }\n          address = bitcoin.payments.p2wpkh({\n            pubkey: keyPair.publicKey\n          }).address;\n        } catch (err) {\n          return false;\n        }\n        this._address = address != null ? address : false;\n        return this._address;\n      }\n    }, {\n      key: \"createTransaction\",\n      value: function createTransaction(utxos, targets, feeRate, changeAddress, sequence) {\n        var skipSigning = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n        var masterFingerprint = arguments.length > 6 ? arguments[6] : undefined;\n        if (targets.length === 0) throw new Error('No destination provided');\n        var _this$coinselect = this.coinselect(utxos, targets, feeRate),\n          inputs = _this$coinselect.inputs,\n          outputs = _this$coinselect.outputs,\n          fee = _this$coinselect.fee;\n        sequence = sequence || 0xffffffff; // disable RBF by default\n        var psbt = new bitcoin.Psbt();\n        var c = 0;\n        var values = {};\n        var keyPair = ECPair.fromWIF(this.secret);\n        inputs.forEach(function (input) {\n          values[c] = input.value;\n          c++;\n          var pubkey = keyPair.publicKey;\n          var p2wpkh = bitcoin.payments.p2wpkh({\n            pubkey: pubkey\n          });\n          if (!p2wpkh.output) {\n            throw new Error('Internal error: no p2wpkh.output during createTransaction()');\n          }\n          psbt.addInput({\n            hash: input.txid,\n            index: input.vout,\n            sequence: sequence,\n            witnessUtxo: {\n              script: p2wpkh.output,\n              value: BigInt(input.value)\n            }\n          });\n        });\n        outputs.forEach(function (output) {\n          // if output has no address - this is change output\n          if (!output.address) {\n            output.address = changeAddress;\n          }\n          var outputData = {\n            address: output.address,\n            value: BigInt(output.value)\n          };\n          psbt.addOutput(outputData);\n        });\n        if (!skipSigning) {\n          // skiping signing related stuff\n          for (var cc = 0; cc < c; cc++) {\n            psbt.signInput(cc, keyPair);\n          }\n        }\n        var tx;\n        if (!skipSigning) {\n          tx = psbt.finalizeAllInputs().extractTransaction();\n        }\n        return {\n          tx: tx,\n          inputs: inputs,\n          outputs: outputs,\n          fee: fee,\n          psbt: psbt\n        };\n      }\n    }, {\n      key: \"allowSend\",\n      value: function allowSend() {\n        return true;\n      }\n    }, {\n      key: \"allowSendMax\",\n      value: function allowSendMax() {\n        return true;\n      }\n    }, {\n      key: \"isSegwit\",\n      value: function isSegwit() {\n        return true;\n      }\n    }, {\n      key: \"allowSignVerifyMessage\",\n      value: function allowSignVerifyMessage() {\n        return true;\n      }\n    }], [{\n      key: \"witnessToAddress\",\n      value: function witnessToAddress(witness) {\n        try {\n          var _bitcoin$payments$p2w;\n          var pubkey = Buffer.from(witness, 'hex');\n          return (_bitcoin$payments$p2w = bitcoin.payments.p2wpkh({\n            pubkey: pubkey,\n            network: bitcoin.networks.bitcoin\n          }).address) != null ? _bitcoin$payments$p2w : false;\n        } catch (_) {\n          return false;\n        }\n      }\n\n      /**\n       * Converts script pub key to bech32 address if it can. Returns FALSE if it cant.\n       *\n       * @param scriptPubKey\n       * @returns {boolean|string} Either bech32 address or false\n       */\n    }, {\n      key: \"scriptPubKeyToAddress\",\n      value: function scriptPubKeyToAddress(scriptPubKey) {\n        try {\n          var _bitcoin$payments$p2w2;\n          var scriptPubKey2 = Buffer.from(scriptPubKey, 'hex');\n          return (_bitcoin$payments$p2w2 = bitcoin.payments.p2wpkh({\n            output: scriptPubKey2,\n            network: bitcoin.networks.bitcoin\n          }).address) != null ? _bitcoin$payments$p2w2 : false;\n        } catch (_) {\n          return false;\n        }\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[9], \"./legacy-wallet\").LegacyWallet);\n  SegwitBech32Wallet.type = 'segwitBech32';\n  SegwitBech32Wallet.typeReadable = 'P2 WPKH';\n});","lineCount":178,"map":[[12,2,1,0],[12,6,1,0,"bitcoin"],[12,13,1,0],[12,16,1,0,"_interopRequireWildcard"],[12,39,1,0],[12,40,1,0,"_$$_REQUIRE"],[12,51,1,0],[12,52,1,0,"_dependencyMap"],[12,66,1,0],[13,2,5,0],[13,6,5,0,"_noble_ecc"],[13,16,5,0],[13,19,5,0,"_interopRequireDefault"],[13,41,5,0],[13,42,5,0,"_$$_REQUIRE"],[13,53,5,0],[13,54,5,0,"_dependencyMap"],[13,68,5,0],[14,2,5,47],[14,11,5,47,"_getRequireWildcardCache"],[14,36,5,47,"e"],[14,37,5,47],[14,66,5,47,"WeakMap"],[14,73,5,47],[14,92,5,47,"r"],[14,93,5,47],[14,100,5,47,"WeakMap"],[14,107,5,47],[14,111,5,47,"t"],[14,112,5,47],[14,119,5,47,"WeakMap"],[14,126,5,47],[14,138,5,47,"_getRequireWildcardCache"],[14,162,5,47],[14,174,5,47,"_getRequireWildcardCache"],[14,199,5,47,"e"],[14,200,5,47],[14,211,5,47,"e"],[14,212,5,47],[14,215,5,47,"t"],[14,216,5,47],[14,219,5,47,"r"],[14,220,5,47],[14,225,5,47,"e"],[14,226,5,47],[15,2,5,47],[15,11,5,47,"_interopRequireWildcard"],[15,35,5,47,"e"],[15,36,5,47],[15,38,5,47,"r"],[15,39,5,47],[15,48,5,47,"r"],[15,49,5,47],[15,53,5,47,"e"],[15,54,5,47],[15,58,5,47,"e"],[15,59,5,47],[15,60,5,47,"__esModule"],[15,70,5,47],[15,79,5,47,"e"],[15,80,5,47],[15,95,5,47,"e"],[15,96,5,47],[15,119,5,47,"e"],[15,120,5,47],[15,145,5,47,"e"],[15,146,5,47],[15,157,5,47,"default"],[15,164,5,47],[15,166,5,47,"e"],[15,167,5,47],[15,175,5,47,"t"],[15,176,5,47],[15,179,5,47,"_getRequireWildcardCache"],[15,203,5,47],[15,204,5,47,"r"],[15,205,5,47],[15,212,5,47,"t"],[15,213,5,47],[15,217,5,47,"t"],[15,218,5,47],[15,219,5,47,"has"],[15,222,5,47],[15,223,5,47,"e"],[15,224,5,47],[15,234,5,47,"t"],[15,235,5,47],[15,236,5,47,"get"],[15,239,5,47],[15,240,5,47,"e"],[15,241,5,47],[15,248,5,47,"n"],[15,249,5,47],[15,254,5,47,"__proto__"],[15,263,5,47],[15,273,5,47,"a"],[15,274,5,47],[15,277,5,47,"Object"],[15,283,5,47],[15,284,5,47,"defineProperty"],[15,298,5,47],[15,302,5,47,"Object"],[15,308,5,47],[15,309,5,47,"getOwnPropertyDescriptor"],[15,333,5,47],[15,344,5,47,"u"],[15,345,5,47],[15,349,5,47,"e"],[15,350,5,47],[15,370,5,47,"u"],[15,371,5,47],[15,378,5,47,"hasOwnProperty"],[15,392,5,47],[15,393,5,47,"call"],[15,397,5,47],[15,398,5,47,"e"],[15,399,5,47],[15,401,5,47,"u"],[15,402,5,47],[15,411,5,47,"i"],[15,412,5,47],[15,415,5,47,"a"],[15,416,5,47],[15,419,5,47,"Object"],[15,425,5,47],[15,426,5,47,"getOwnPropertyDescriptor"],[15,450,5,47],[15,451,5,47,"e"],[15,452,5,47],[15,454,5,47,"u"],[15,455,5,47],[15,465,5,47,"i"],[15,466,5,47],[15,471,5,47,"i"],[15,472,5,47],[15,473,5,47,"get"],[15,476,5,47],[15,480,5,47,"i"],[15,481,5,47],[15,482,5,47,"set"],[15,485,5,47],[15,489,5,47,"Object"],[15,495,5,47],[15,496,5,47,"defineProperty"],[15,510,5,47],[15,511,5,47,"n"],[15,512,5,47],[15,514,5,47,"u"],[15,515,5,47],[15,517,5,47,"i"],[15,518,5,47],[15,522,5,47,"n"],[15,523,5,47],[15,524,5,47,"u"],[15,525,5,47],[15,529,5,47,"e"],[15,530,5,47],[15,531,5,47,"u"],[15,532,5,47],[15,544,5,47,"n"],[15,545,5,47],[15,546,5,47,"default"],[15,553,5,47],[15,556,5,47,"e"],[15,557,5,47],[15,559,5,47,"t"],[15,560,5,47],[15,564,5,47,"t"],[15,565,5,47],[15,566,5,47,"set"],[15,569,5,47],[15,570,5,47,"e"],[15,571,5,47],[15,573,5,47,"n"],[15,574,5,47],[15,577,5,47,"n"],[15,578,5,47],[16,2,5,47],[16,11,5,47,"_callSuper"],[16,22,5,47,"t"],[16,23,5,47],[16,25,5,47,"o"],[16,26,5,47],[16,28,5,47,"e"],[16,29,5,47],[16,40,5,47,"o"],[16,41,5,47],[16,48,5,47,"_getPrototypeOf2"],[16,64,5,47],[16,65,5,47,"default"],[16,72,5,47],[16,74,5,47,"o"],[16,75,5,47],[16,82,5,47,"_possibleConstructorReturn2"],[16,109,5,47],[16,110,5,47,"default"],[16,117,5,47],[16,119,5,47,"t"],[16,120,5,47],[16,122,5,47,"_isNativeReflectConstruct"],[16,147,5,47],[16,152,5,47,"Reflect"],[16,159,5,47],[16,160,5,47,"construct"],[16,169,5,47],[16,170,5,47,"o"],[16,171,5,47],[16,173,5,47,"e"],[16,174,5,47],[16,186,5,47,"_getPrototypeOf2"],[16,202,5,47],[16,203,5,47,"default"],[16,210,5,47],[16,212,5,47,"t"],[16,213,5,47],[16,215,5,47,"constructor"],[16,226,5,47],[16,230,5,47,"o"],[16,231,5,47],[16,232,5,47,"apply"],[16,237,5,47],[16,238,5,47,"t"],[16,239,5,47],[16,241,5,47,"e"],[16,242,5,47],[17,2,5,47],[17,11,5,47,"_isNativeReflectConstruct"],[17,37,5,47],[17,51,5,47,"t"],[17,52,5,47],[17,56,5,47,"Boolean"],[17,63,5,47],[17,64,5,47,"prototype"],[17,73,5,47],[17,74,5,47,"valueOf"],[17,81,5,47],[17,82,5,47,"call"],[17,86,5,47],[17,87,5,47,"Reflect"],[17,94,5,47],[17,95,5,47,"construct"],[17,104,5,47],[17,105,5,47,"Boolean"],[17,112,5,47],[17,145,5,47,"t"],[17,146,5,47],[17,159,5,47,"_isNativeReflectConstruct"],[17,184,5,47],[17,196,5,47,"_isNativeReflectConstruct"],[17,222,5,47],[17,235,5,47,"t"],[17,236,5,47],[18,2,9,0],[18,6,9,6,"ECPair"],[18,12,9,12],[18,15,9,15],[18,19,9,15,"ECPairFactory"],[18,49,9,15],[18,50,9,15,"ECPairFactory"],[18,73,9,28],[18,75,9,29,"ecc"],[18,93,9,32],[18,94,9,33],[19,2,9,34],[19,6,11,13,"SegwitBech32Wallet"],[19,24,11,31],[19,27,11,31,"exports"],[19,34,11,31],[19,35,11,31,"SegwitBech32Wallet"],[19,53,11,31],[19,79,11,31,"_LegacyWallet"],[19,92,11,31],[20,4,11,31],[20,13,11,31,"SegwitBech32Wallet"],[20,32,11,31],[21,6,11,31],[21,10,11,31,"_this"],[21,15,11,31],[22,6,11,31],[22,10,11,31,"_classCallCheck2"],[22,26,11,31],[22,27,11,31,"default"],[22,34,11,31],[22,42,11,31,"SegwitBech32Wallet"],[22,60,11,31],[23,6,11,31],[23,15,11,31,"_len"],[23,19,11,31],[23,22,11,31,"arguments"],[23,31,11,31],[23,32,11,31,"length"],[23,38,11,31],[23,40,11,31,"args"],[23,44,11,31],[23,51,11,31,"Array"],[23,56,11,31],[23,57,11,31,"_len"],[23,61,11,31],[23,64,11,31,"_key"],[23,68,11,31],[23,74,11,31,"_key"],[23,78,11,31],[23,81,11,31,"_len"],[23,85,11,31],[23,87,11,31,"_key"],[23,91,11,31],[24,8,11,31,"args"],[24,12,11,31],[24,13,11,31,"_key"],[24,17,11,31],[24,21,11,31,"arguments"],[24,30,11,31],[24,31,11,31,"_key"],[24,35,11,31],[25,6,11,31],[26,6,11,31,"_this"],[26,11,11,31],[26,14,11,31,"_callSuper"],[26,24,11,31],[26,31,11,31,"SegwitBech32Wallet"],[26,49,11,31],[26,54,11,31,"concat"],[26,60,11,31],[26,61,11,31,"args"],[26,65,11,31],[27,6,14,2],[28,6,14,2,"_this"],[28,11,14,2],[28,12,15,18,"type"],[28,16,15,22],[28,19,15,25,"SegwitBech32Wallet"],[28,37,15,43],[28,38,15,44,"type"],[28,42,15,48],[29,6,16,2],[30,6,16,2,"_this"],[30,11,16,2],[30,12,17,18,"typeReadable"],[30,24,17,30],[30,27,17,33,"SegwitBech32Wallet"],[30,45,17,51],[30,46,17,52,"typeReadable"],[30,58,17,64],[31,6,17,64,"_this"],[31,11,17,64],[31,12,18,18,"segwitType"],[31,22,18,28],[31,25,18,31],[31,33,18,39],[32,6,18,39],[32,13,18,39,"_this"],[32,18,18,39],[33,4,18,39],[34,4,18,39],[34,8,18,39,"_inherits2"],[34,18,18,39],[34,19,18,39,"default"],[34,26,18,39],[34,28,18,39,"SegwitBech32Wallet"],[34,46,18,39],[34,48,18,39,"_LegacyWallet"],[34,61,18,39],[35,4,18,39],[35,15,18,39,"_createClass2"],[35,28,18,39],[35,29,18,39,"default"],[35,36,18,39],[35,38,18,39,"SegwitBech32Wallet"],[35,56,18,39],[36,6,18,39,"key"],[36,9,18,39],[37,6,18,39,"value"],[37,11,18,39],[37,13,20,2],[37,22,20,2,"getAddress"],[37,32,20,12,"getAddress"],[37,33,20,12],[37,35,20,31],[38,8,21,4],[38,12,21,8],[38,16,21,12],[38,17,21,13,"_address"],[38,25,21,21],[38,27,21,23],[38,34,21,30],[38,38,21,34],[38,39,21,35,"_address"],[38,47,21,43],[39,8,22,4],[39,12,22,8,"address"],[39,19,22,15],[40,8,23,4],[40,12,23,8],[41,10,24,6],[41,14,24,12,"keyPair"],[41,21,24,19],[41,24,24,22,"ECPair"],[41,30,24,28],[41,31,24,29,"fromWIF"],[41,38,24,36],[41,39,24,37],[41,43,24,41],[41,44,24,42,"secret"],[41,50,24,48],[41,51,24,49],[42,10,25,6],[42,14,25,10],[42,15,25,11,"keyPair"],[42,22,25,18],[42,23,25,19,"compressed"],[42,33,25,29],[42,35,25,31],[43,12,26,8,"console"],[43,19,26,15],[43,20,26,16,"warn"],[43,24,26,20],[43,25,26,21],[43,74,26,70],[43,75,26,71],[44,12,27,8],[44,19,27,15],[44,24,27,20],[45,10,28,6],[46,10,29,6,"address"],[46,17,29,13],[46,20,29,16,"bitcoin"],[46,27,29,23],[46,28,29,24,"payments"],[46,36,29,32],[46,37,29,33,"p2wpkh"],[46,43,29,39],[46,44,29,40],[47,12,30,8,"pubkey"],[47,18,30,14],[47,20,30,16,"keyPair"],[47,27,30,23],[47,28,30,24,"publicKey"],[48,10,31,6],[48,11,31,7],[48,12,31,8],[48,13,31,9,"address"],[48,20,31,16],[49,8,32,4],[49,9,32,5],[49,10,32,6],[49,17,32,13,"err"],[49,20,32,16],[49,22,32,18],[50,10,33,6],[50,17,33,13],[50,22,33,18],[51,8,34,4],[52,8,35,4],[52,12,35,8],[52,13,35,9,"_address"],[52,21,35,17],[52,24,35,20,"address"],[52,31,35,27],[52,42,35,20,"address"],[52,49,35,27],[52,52,35,31],[52,57,35,36],[53,8,37,4],[53,15,37,11],[53,19,37,15],[53,20,37,16,"_address"],[53,28,37,24],[54,6,38,2],[55,4,38,3],[56,6,38,3,"key"],[56,9,38,3],[57,6,38,3,"value"],[57,11,38,3],[57,13,74,2],[57,22,74,2,"createTransaction"],[57,39,74,19,"createTransaction"],[57,40,75,4,"utxos"],[57,45,75,34],[57,47,76,4,"targets"],[57,54,76,31],[57,56,77,4,"feeRate"],[57,63,77,19],[57,65,78,4,"changeAddress"],[57,78,78,25],[57,80,79,4,"sequence"],[57,88,79,20],[57,90,82,29],[58,8,82,29],[58,12,80,4,"skipSigning"],[58,23,80,15],[58,26,80,15,"arguments"],[58,35,80,15],[58,36,80,15,"length"],[58,42,80,15],[58,50,80,15,"arguments"],[58,59,80,15],[58,67,80,15,"undefined"],[58,76,80,15],[58,79,80,15,"arguments"],[58,88,80,15],[58,94,80,18],[58,99,80,23],[59,8,80,23],[59,12,81,4,"masterFingerprint"],[59,29,81,29],[59,32,81,29,"arguments"],[59,41,81,29],[59,42,81,29,"length"],[59,48,81,29],[59,55,81,29,"arguments"],[59,64,81,29],[59,70,81,29,"undefined"],[59,79,81,29],[60,8,83,4],[60,12,83,8,"targets"],[60,19,83,15],[60,20,83,16,"length"],[60,26,83,22],[60,31,83,27],[60,32,83,28],[60,34,83,30],[60,40,83,36],[60,44,83,40,"Error"],[60,49,83,45],[60,50,83,46],[60,75,83,71],[60,76,83,72],[61,8,84,4],[61,12,84,4,"_this$coinselect"],[61,28,84,4],[61,31,84,37],[61,35,84,41],[61,36,84,42,"coinselect"],[61,46,84,52],[61,47,84,53,"utxos"],[61,52,84,58],[61,54,84,60,"targets"],[61,61,84,67],[61,63,84,69,"feeRate"],[61,70,84,76],[61,71,84,77],[62,10,84,12,"inputs"],[62,16,84,18],[62,19,84,18,"_this$coinselect"],[62,35,84,18],[62,36,84,12,"inputs"],[62,42,84,18],[63,10,84,20,"outputs"],[63,17,84,27],[63,20,84,27,"_this$coinselect"],[63,36,84,27],[63,37,84,20,"outputs"],[63,44,84,27],[64,10,84,29,"fee"],[64,13,84,32],[64,16,84,32,"_this$coinselect"],[64,32,84,32],[64,33,84,29,"fee"],[64,36,84,32],[65,8,85,4,"sequence"],[65,16,85,12],[65,19,85,15,"sequence"],[65,27,85,23],[65,31,85,27],[65,41,85,37],[65,42,85,38],[65,43,85,39],[66,8,86,4],[66,12,86,10,"psbt"],[66,16,86,14],[66,19,86,17],[66,23,86,21,"bitcoin"],[66,30,86,28],[66,31,86,29,"Psbt"],[66,35,86,33],[66,36,86,34],[66,37,86,35],[67,8,87,4],[67,12,87,8,"c"],[67,13,87,9],[67,16,87,12],[67,17,87,13],[68,8,88,4],[68,12,88,10,"values"],[68,18,88,40],[68,21,88,43],[68,22,88,44],[68,23,88,45],[69,8,89,4],[69,12,89,10,"keyPair"],[69,19,89,17],[69,22,89,20,"ECPair"],[69,28,89,26],[69,29,89,27,"fromWIF"],[69,36,89,34],[69,37,89,35],[69,41,89,39],[69,42,89,40,"secret"],[69,48,89,46],[69,49,89,47],[70,8,91,4,"inputs"],[70,14,91,10],[70,15,91,11,"forEach"],[70,22,91,18],[70,23,91,19],[70,33,91,19,"input"],[70,38,91,24],[70,40,91,28],[71,10,92,6,"values"],[71,16,92,12],[71,17,92,13,"c"],[71,18,92,14],[71,19,92,15],[71,22,92,18,"input"],[71,27,92,23],[71,28,92,24,"value"],[71,33,92,29],[72,10,93,6,"c"],[72,11,93,7],[72,13,93,9],[73,10,95,6],[73,14,95,12,"pubkey"],[73,20,95,18],[73,23,95,21,"keyPair"],[73,30,95,28],[73,31,95,29,"publicKey"],[73,40,95,38],[74,10,96,6],[74,14,96,12,"p2wpkh"],[74,20,96,18],[74,23,96,21,"bitcoin"],[74,30,96,28],[74,31,96,29,"payments"],[74,39,96,37],[74,40,96,38,"p2wpkh"],[74,46,96,44],[74,47,96,45],[75,12,96,47,"pubkey"],[75,18,96,53],[75,20,96,47,"pubkey"],[76,10,96,54],[76,11,96,55],[76,12,96,56],[77,10,97,6],[77,14,97,10],[77,15,97,11,"p2wpkh"],[77,21,97,17],[77,22,97,18,"output"],[77,28,97,24],[77,30,97,26],[78,12,98,8],[78,18,98,14],[78,22,98,18,"Error"],[78,27,98,23],[78,28,98,24],[78,89,98,85],[78,90,98,86],[79,10,99,6],[80,10,101,6,"psbt"],[80,14,101,10],[80,15,101,11,"addInput"],[80,23,101,19],[80,24,101,20],[81,12,102,8,"hash"],[81,16,102,12],[81,18,102,14,"input"],[81,23,102,19],[81,24,102,20,"txid"],[81,28,102,24],[82,12,103,8,"index"],[82,17,103,13],[82,19,103,15,"input"],[82,24,103,20],[82,25,103,21,"vout"],[82,29,103,25],[83,12,104,8,"sequence"],[83,20,104,16],[83,22,104,8,"sequence"],[83,30,104,16],[84,12,105,8,"witnessUtxo"],[84,23,105,19],[84,25,105,21],[85,14,106,10,"script"],[85,20,106,16],[85,22,106,18,"p2wpkh"],[85,28,106,24],[85,29,106,25,"output"],[85,35,106,31],[86,14,107,10,"value"],[86,19,107,15],[86,21,107,17,"BigInt"],[86,27,107,23],[86,28,107,24,"input"],[86,33,107,29],[86,34,107,30,"value"],[86,39,107,35],[87,12,108,8],[88,10,109,6],[88,11,109,7],[88,12,109,8],[89,8,110,4],[89,9,110,5],[89,10,110,6],[90,8,112,4,"outputs"],[90,15,112,11],[90,16,112,12,"forEach"],[90,23,112,19],[90,24,112,20],[90,34,112,20,"output"],[90,40,112,26],[90,42,112,30],[91,10,113,6],[92,10,114,6],[92,14,114,10],[92,15,114,11,"output"],[92,21,114,17],[92,22,114,18,"address"],[92,29,114,25],[92,31,114,27],[93,12,115,8,"output"],[93,18,115,14],[93,19,115,15,"address"],[93,26,115,22],[93,29,115,25,"changeAddress"],[93,42,115,38],[94,10,116,6],[95,10,118,6],[95,14,118,12,"outputData"],[95,24,118,22],[95,27,118,25],[96,12,119,8,"address"],[96,19,119,15],[96,21,119,17,"output"],[96,27,119,23],[96,28,119,24,"address"],[96,35,119,31],[97,12,120,8,"value"],[97,17,120,13],[97,19,120,15,"BigInt"],[97,25,120,21],[97,26,120,22,"output"],[97,32,120,28],[97,33,120,29,"value"],[97,38,120,34],[98,10,121,6],[98,11,121,7],[99,10,123,6,"psbt"],[99,14,123,10],[99,15,123,11,"addOutput"],[99,24,123,20],[99,25,123,21,"outputData"],[99,35,123,31],[99,36,123,32],[100,8,124,4],[100,9,124,5],[100,10,124,6],[101,8,126,4],[101,12,126,8],[101,13,126,9,"skipSigning"],[101,24,126,20],[101,26,126,22],[102,10,127,6],[103,10,128,6],[103,15,128,11],[103,19,128,15,"cc"],[103,21,128,17],[103,24,128,20],[103,25,128,21],[103,27,128,23,"cc"],[103,29,128,25],[103,32,128,28,"c"],[103,33,128,29],[103,35,128,31,"cc"],[103,37,128,33],[103,39,128,35],[103,41,128,37],[104,12,129,8,"psbt"],[104,16,129,12],[104,17,129,13,"signInput"],[104,26,129,22],[104,27,129,23,"cc"],[104,29,129,25],[104,31,129,27,"keyPair"],[104,38,129,34],[104,39,129,35],[105,10,130,6],[106,8,131,4],[107,8,133,4],[107,12,133,8,"tx"],[107,14,133,10],[108,8,134,4],[108,12,134,8],[108,13,134,9,"skipSigning"],[108,24,134,20],[108,26,134,22],[109,10,135,6,"tx"],[109,12,135,8],[109,15,135,11,"psbt"],[109,19,135,15],[109,20,135,16,"finalizeAllInputs"],[109,37,135,33],[109,38,135,34],[109,39,135,35],[109,40,135,36,"extractTransaction"],[109,58,135,54],[109,59,135,55],[109,60,135,56],[110,8,136,4],[111,8,137,4],[111,15,137,11],[112,10,137,13,"tx"],[112,12,137,15],[112,14,137,13,"tx"],[112,16,137,15],[113,10,137,17,"inputs"],[113,16,137,23],[113,18,137,17,"inputs"],[113,24,137,23],[114,10,137,25,"outputs"],[114,17,137,32],[114,19,137,25,"outputs"],[114,26,137,32],[115,10,137,34,"fee"],[115,13,137,37],[115,15,137,34,"fee"],[115,18,137,37],[116,10,137,39,"psbt"],[116,14,137,43],[116,16,137,39,"psbt"],[117,8,137,44],[117,9,137,45],[118,6,138,2],[119,4,138,3],[120,6,138,3,"key"],[120,9,138,3],[121,6,138,3,"value"],[121,11,138,3],[121,13,140,2],[121,22,140,2,"allowSend"],[121,31,140,11,"allowSend"],[121,32,140,11],[121,34,140,14],[122,8,141,4],[122,15,141,11],[122,19,141,15],[123,6,142,2],[124,4,142,3],[125,6,142,3,"key"],[125,9,142,3],[126,6,142,3,"value"],[126,11,142,3],[126,13,144,2],[126,22,144,2,"allowSendMax"],[126,34,144,14,"allowSendMax"],[126,35,144,14],[126,37,144,17],[127,8,145,4],[127,15,145,11],[127,19,145,15],[128,6,146,2],[129,4,146,3],[130,6,146,3,"key"],[130,9,146,3],[131,6,146,3,"value"],[131,11,146,3],[131,13,148,2],[131,22,148,2,"isSegwit"],[131,30,148,10,"isSegwit"],[131,31,148,10],[131,33,148,13],[132,8,149,4],[132,15,149,11],[132,19,149,15],[133,6,150,2],[134,4,150,3],[135,6,150,3,"key"],[135,9,150,3],[136,6,150,3,"value"],[136,11,150,3],[136,13,152,2],[136,22,152,2,"allowSignVerifyMessage"],[136,44,152,24,"allowSignVerifyMessage"],[136,45,152,24],[136,47,152,27],[137,8,153,4],[137,15,153,11],[137,19,153,15],[138,6,154,2],[139,4,154,3],[140,6,154,3,"key"],[140,9,154,3],[141,6,154,3,"value"],[141,11,154,3],[141,13,40,2],[141,22,40,9,"witnessToAddress"],[141,38,40,25,"witnessToAddress"],[141,39,40,26,"witness"],[141,46,40,41],[141,48,40,59],[142,8,41,4],[142,12,41,8],[143,10,41,8],[143,14,41,8,"_bitcoin$payments$p2w"],[143,35,41,8],[144,10,42,6],[144,14,42,12,"pubkey"],[144,20,42,18],[144,23,42,21,"Buffer"],[144,29,42,27],[144,30,42,28,"from"],[144,34,42,32],[144,35,42,33,"witness"],[144,42,42,40],[144,44,42,42],[144,49,42,47],[144,50,42,48],[145,10,43,6],[145,18,43,6,"_bitcoin$payments$p2w"],[145,39,43,6],[145,42,44,8,"bitcoin"],[145,49,44,15],[145,50,44,16,"payments"],[145,58,44,24],[145,59,44,25,"p2wpkh"],[145,65,44,31],[145,66,44,32],[146,12,45,10,"pubkey"],[146,18,45,16],[146,20,45,10,"pubkey"],[146,26,45,16],[147,12,46,10,"network"],[147,19,46,17],[147,21,46,19,"bitcoin"],[147,28,46,26],[147,29,46,27,"networks"],[147,37,46,35],[147,38,46,36,"bitcoin"],[148,10,47,8],[148,11,47,9],[148,12,47,10],[148,13,47,11,"address"],[148,20,47,18],[148,32,47,18,"_bitcoin$payments$p2w"],[148,53,47,18],[148,56,47,22],[148,61,47,27],[149,8,49,4],[149,9,49,5],[149,10,49,6],[149,17,49,13,"_"],[149,18,49,14],[149,20,49,16],[150,10,50,6],[150,17,50,13],[150,22,50,18],[151,8,51,4],[152,6,52,2],[154,6,54,2],[155,0,55,0],[156,0,56,0],[157,0,57,0],[158,0,58,0],[159,0,59,0],[160,4,54,2],[161,6,54,2,"key"],[161,9,54,2],[162,6,54,2,"value"],[162,11,54,2],[162,13,60,2],[162,22,60,9,"scriptPubKeyToAddress"],[162,43,60,30,"scriptPubKeyToAddress"],[162,44,60,31,"scriptPubKey"],[162,56,60,51],[162,58,60,69],[163,8,61,4],[163,12,61,8],[164,10,61,8],[164,14,61,8,"_bitcoin$payments$p2w2"],[164,36,61,8],[165,10,62,6],[165,14,62,12,"scriptPubKey2"],[165,27,62,25],[165,30,62,28,"Buffer"],[165,36,62,34],[165,37,62,35,"from"],[165,41,62,39],[165,42,62,40,"scriptPubKey"],[165,54,62,52],[165,56,62,54],[165,61,62,59],[165,62,62,60],[166,10,63,6],[166,18,63,6,"_bitcoin$payments$p2w2"],[166,40,63,6],[166,43,64,8,"bitcoin"],[166,50,64,15],[166,51,64,16,"payments"],[166,59,64,24],[166,60,64,25,"p2wpkh"],[166,66,64,31],[166,67,64,32],[167,12,65,10,"output"],[167,18,65,16],[167,20,65,18,"scriptPubKey2"],[167,33,65,31],[168,12,66,10,"network"],[168,19,66,17],[168,21,66,19,"bitcoin"],[168,28,66,26],[168,29,66,27,"networks"],[168,37,66,35],[168,38,66,36,"bitcoin"],[169,10,67,8],[169,11,67,9],[169,12,67,10],[169,13,67,11,"address"],[169,20,67,18],[169,32,67,18,"_bitcoin$payments$p2w2"],[169,54,67,18],[169,57,67,22],[169,62,67,27],[170,8,69,4],[170,9,69,5],[170,10,69,6],[170,17,69,13,"_"],[170,18,69,14],[170,20,69,16],[171,10,70,6],[171,17,70,13],[171,22,70,18],[172,8,71,4],[173,6,72,2],[174,4,72,3],[175,2,72,3],[175,4,11,40,"LegacyWallet"],[175,34,11,40],[175,35,11,40,"LegacyWallet"],[175,66,11,52],[176,2,11,13,"SegwitBech32Wallet"],[176,20,11,31],[176,21,12,18,"type"],[176,25,12,22],[176,28,12,25],[176,42,12,39],[177,2,11,13,"SegwitBech32Wallet"],[177,20,11,31],[177,21,13,18,"typeReadable"],[177,33,13,30],[177,36,13,33],[177,45,13,42],[178,0,13,42],[178,3]],"functionMap":{"names":["<global>","SegwitBech32Wallet","SegwitBech32Wallet#getAddress","SegwitBech32Wallet.witnessToAddress","SegwitBech32Wallet.scriptPubKeyToAddress","SegwitBech32Wallet#createTransaction","inputs.forEach$argument_0","outputs.forEach$argument_0","SegwitBech32Wallet#allowSend","SegwitBech32Wallet#allowSendMax","SegwitBech32Wallet#isSegwit","SegwitBech32Wallet#allowSignVerifyMessage"],"mappings":"AAA;OCU;ECS;GDkB;EEE;GFY;EGQ;GHY;EIE;mBCiB;KDmB;oBEE;KFY;GJc;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVE;CDC"}},"type":"js/module"}]}