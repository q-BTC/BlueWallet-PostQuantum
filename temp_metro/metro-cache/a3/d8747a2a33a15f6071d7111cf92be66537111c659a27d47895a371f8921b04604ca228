{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":993,"column":0,"index":36396}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":993,"column":0,"index":36396}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":993,"column":0,"index":36396}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":993,"column":0,"index":36396}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":993,"column":0,"index":36396}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":69,"index":69}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds="}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":70},"end":{"line":2,"column":37,"index":107}}],"key":"S+LTcEsr9DE4tXbLBAdDMJflQ0A="}},{"name":"react-native-default-preference","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":64,"index":172}}],"key":"ceFTjiQKIRKlgeR83u9c4wI94KE="}},{"name":"react-native-fs","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":173},"end":{"line":4,"column":35,"index":208}}],"key":"v3R0SNBCa9hwH48492uWBtlBiy8="}},{"name":"react-native-keychain","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":209},"end":{"line":5,"column":45,"index":254}}],"key":"mmqohJUW89G0fgKNymzJlRCOuGk="}},{"name":"react-native-secure-key-store","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":255},"end":{"line":6,"column":77,"index":332}}],"key":"x9jm8G8IOzVNZnKbr12wrdC7eWE="}},{"name":"realm","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":333},"end":{"line":7,"column":26,"index":359}}],"key":"yAioITH4buUPQuCDqqIRz6y+RQc="}},{"name":"../blue_modules/encryption","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":361},"end":{"line":9,"column":57,"index":418}}],"key":"lc6R4CyEbIoKNw/70qjrsJ2KfLM="}},{"name":"../components/Alert","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":419},"end":{"line":10,"column":47,"index":466}}],"key":"0xv82G+AqnUqlW1vWUa+qrI08GA="}},{"name":"./rng","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":467},"end":{"line":11,"column":36,"index":503}}],"key":"0LyBd22HB2ieqiaLX64f3lZRwYw="}},{"name":"./wallets/segwit-bech32-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":22,"column":0,"index":1265},"end":{"line":22,"column":68,"index":1333}},{"start":{"line":22,"column":0,"index":1265},"end":{"line":22,"column":68,"index":1333}}],"key":"Nm0e0M4jOSq4xrOBaSJd2atkkcI="}},{"name":"./wallets/segwit-p2sh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":1334},"end":{"line":23,"column":64,"index":1398}},{"start":{"line":23,"column":0,"index":1334},"end":{"line":23,"column":64,"index":1398}}],"key":"RBOjJiGxuWscQxEjeoc6MWAhGwY="}},{"name":"./wallets/watch-only-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":1594},"end":{"line":26,"column":62,"index":1656}},{"start":{"line":26,"column":0,"index":1594},"end":{"line":26,"column":62,"index":1656}}],"key":"cDskXIujj/uGYTKTJW01DpEejcI="}},{"name":"./wallets/hd-legacy-p2pkh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":15,"column":0,"index":747},"end":{"line":15,"column":71,"index":818}},{"start":{"line":15,"column":0,"index":747},"end":{"line":15,"column":71,"index":818}}],"key":"yHPjiShbCUaqSQJVarEOstPUOQM="}},{"name":"./wallets/hd-segwit-p2sh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":18,"column":0,"index":993},"end":{"line":18,"column":69,"index":1062}},{"start":{"line":18,"column":0,"index":993},"end":{"line":18,"column":69,"index":1062}}],"key":"qG9+yulZL2CBfPr2ObkFlghf8HQ="}},{"name":"./wallets/hd-segwit-bech32-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":819},"end":{"line":16,"column":73,"index":892}},{"start":{"line":16,"column":0,"index":819},"end":{"line":16,"column":73,"index":892}},{"start":{"line":16,"column":0,"index":819},"end":{"line":16,"column":73,"index":892}}],"key":"/ViZ4YnkvUIp68BkQVavJQ8biwE="}},{"name":"./wallets/hd-legacy-breadwallet-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":565},"end":{"line":13,"column":83,"index":648}},{"start":{"line":13,"column":0,"index":565},"end":{"line":13,"column":83,"index":648}}],"key":"DNXYPk4Zi5JXcnO1LC4Hp1TQ9bk="}},{"name":"./wallets/hd-legacy-electrum-seed-p2pkh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":649},"end":{"line":14,"column":97,"index":746}},{"start":{"line":14,"column":0,"index":649},"end":{"line":14,"column":97,"index":746}}],"key":"C+v1fXxF/uE1RxcP3NBijze1NwY="}},{"name":"./wallets/hd-segwit-electrum-seed-p2wpkh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":17,"column":0,"index":893},"end":{"line":17,"column":99,"index":992}},{"start":{"line":17,"column":0,"index":893},"end":{"line":17,"column":99,"index":992}}],"key":"a+G5uAi7UsIhEZ0WbAu2n1yZGOc="}},{"name":"./wallets/multisig-hd-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":21,"column":0,"index":1200},"end":{"line":21,"column":64,"index":1264}},{"start":{"line":21,"column":0,"index":1200},"end":{"line":21,"column":64,"index":1264}}],"key":"cudkHx0oR0FPMxACYxVy5KG3UP8="}},{"name":"./wallets/hd-aezeed-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":504},"end":{"line":12,"column":60,"index":564}},{"start":{"line":12,"column":0,"index":504},"end":{"line":12,"column":60,"index":564}}],"key":"Y7MwokDpfmcfUHegZMk3fpjeRV0="}},{"name":"./wallets/slip39-wallets","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":1399},"end":{"line":24,"column":117,"index":1516}},{"start":{"line":24,"column":0,"index":1399},"end":{"line":24,"column":117,"index":1516}},{"start":{"line":24,"column":0,"index":1399},"end":{"line":24,"column":117,"index":1516}},{"start":{"line":24,"column":0,"index":1399},"end":{"line":24,"column":117,"index":1516}},{"start":{"line":24,"column":0,"index":1399},"end":{"line":24,"column":117,"index":1516}},{"start":{"line":24,"column":0,"index":1399},"end":{"line":24,"column":117,"index":1516}}],"key":"V9mWktL1nY5rMufAoIqOA8he3yc="}},{"name":"./wallets/lightning-custodian-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":20,"column":0,"index":1119},"end":{"line":20,"column":80,"index":1199}},{"start":{"line":20,"column":0,"index":1119},"end":{"line":20,"column":80,"index":1199}}],"key":"sT9mn1q5VZKglGjQgGueRejXZGw="}},{"name":"../helpers/lndHub","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":27,"column":0,"index":1657},"end":{"line":27,"column":46,"index":1703}}],"key":"v6gqeHBvYH4pHuay4nLAI2PJipA=","isOptional":true}},{"name":"./wallets/legacy-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":1063},"end":{"line":19,"column":55,"index":1118}},{"start":{"line":19,"column":0,"index":1063},"end":{"line":19,"column":55,"index":1118}}],"key":"/t73oH2/az7z9F1tnU8IAY6BO7A="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BlueApp = void 0;\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n  var _asyncStorage = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@react-native-async-storage/async-storage\"));\n  var _createHash = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"create-hash\"));\n  var _reactNativeDefaultPreference = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react-native-default-preference\"));\n  var _reactNativeFs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"react-native-fs\"));\n  var _reactNativeKeychain = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"react-native-keychain\"));\n  var _reactNativeSecureKeyStore = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react-native-secure-key-store\"));\n  var _realm = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"realm\"));\n  var encryption = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[12], \"../blue_modules/encryption\"));\n  var _Alert = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"../components/Alert\"));\n  var _navigator, _BlueApp;\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var usedBucketNum = false;\n  var savingInProgress = 0; // its both a flag and a counter of attempts to write to disk\n\n  var isReactNative = typeof navigator !== 'undefined' && ((_navigator = navigator) == null ? void 0 : _navigator.product) === 'ReactNative';\n  var BlueApp = exports.BlueApp = /*#__PURE__*/function () {\n    function BlueApp() {\n      var _this = this;\n      (0, _classCallCheck2.default)(this, BlueApp);\n      /**\n       * Wrapper for storage call. Secure store works only in RN environment. AsyncStorage is\n       * used for cli/tests\n       */\n      this.setItem = function (key, value) {\n        if (isReactNative) {\n          return _reactNativeSecureKeyStore.default.set(key, value, {\n            accessible: _reactNativeSecureKeyStore.ACCESSIBLE.WHEN_UNLOCKED_THIS_DEVICE_ONLY\n          });\n        } else {\n          return _asyncStorage.default.setItem(key, value);\n        }\n      };\n      /**\n       * Wrapper for storage call. Secure store works only in RN environment. AsyncStorage is\n       * used for cli/tests\n       */\n      this.getItem = function (key) {\n        if (isReactNative) {\n          return _reactNativeSecureKeyStore.default.get(key);\n        } else {\n          return _asyncStorage.default.getItem(key);\n        }\n      };\n      this.getItemWithFallbackToRealm = /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)(function* (key) {\n          var value;\n          try {\n            return yield _this.getItem(key);\n          } catch (error) {\n            console.warn('error reading', key, error.message);\n            console.warn('fallback to realm');\n            var realmKeyValue = yield _this.openRealmKeyValue();\n            var obj = realmKeyValue.objectForPrimaryKey('KeyValue', key); // search for a realm object with a primary key\n            value = obj == null ? void 0 : obj.value;\n            realmKeyValue.close();\n            if (value) {\n              // @ts-ignore value.length\n              console.warn('successfully recovered', value.length, 'bytes from realm for key', key);\n              return value;\n            }\n            return null;\n          }\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      this.storageIsEncrypted = /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n        var data;\n        try {\n          data = yield _this.getItemWithFallbackToRealm(BlueApp.FLAG_ENCRYPTED);\n        } catch (error) {\n          console.warn('error reading `' + BlueApp.FLAG_ENCRYPTED + '` key:', error.message);\n          return false;\n        }\n        return Boolean(data);\n      });\n      this.isPasswordInUse = /*#__PURE__*/function () {\n        var _ref3 = (0, _asyncToGenerator2.default)(function* (password) {\n          try {\n            var data = yield _this.getItem('data');\n            data = _this.decryptData(data, password);\n            return Boolean(data);\n          } catch (_e) {\n            return false;\n          }\n        });\n        return function (_x2) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n      this.decryptStorage = /*#__PURE__*/function () {\n        var _ref4 = (0, _asyncToGenerator2.default)(function* (password) {\n          if (password === _this.cachedPassword) {\n            _this.cachedPassword = undefined;\n            yield _this.saveToDisk();\n            _this.wallets = [];\n            _this.tx_metadata = {};\n            _this.counterparty_metadata = {};\n            return _this.loadFromDisk();\n          } else {\n            throw new Error('Incorrect password. Please, try again.');\n          }\n        });\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n      this.encryptStorage = /*#__PURE__*/function () {\n        var _ref5 = (0, _asyncToGenerator2.default)(function* (password) {\n          // assuming the storage is not yet encrypted\n          yield _this.saveToDisk();\n          var data = yield _this.getItem('data');\n          // TODO: refactor ^^^ (should not save & load to fetch data)\n\n          var encrypted = encryption.encrypt(data, password);\n          data = [];\n          data.push(encrypted); // putting in array as we might have many buckets with storages\n          data = JSON.stringify(data);\n          _this.cachedPassword = password;\n          yield _this.setItem('data', data);\n          yield _this.setItem(BlueApp.FLAG_ENCRYPTED, '1');\n        });\n        return function (_x4) {\n          return _ref5.apply(this, arguments);\n        };\n      }();\n      /**\n       * Cleans up all current application data (wallets, tx metadata etc)\n       * Encrypts the bucket and saves it storage\n       */\n      this.createFakeStorage = /*#__PURE__*/function () {\n        var _ref6 = (0, _asyncToGenerator2.default)(function* (fakePassword) {\n          usedBucketNum = false; // resetting currently used bucket so we wont overwrite it\n          _this.wallets = [];\n          _this.tx_metadata = {};\n          _this.counterparty_metadata = {};\n          var data = {\n            wallets: [],\n            tx_metadata: {},\n            counterparty_metadata: {}\n          };\n          var buckets = yield _this.getItem('data');\n          buckets = JSON.parse(buckets);\n          buckets.push(encryption.encrypt(JSON.stringify(data), fakePassword));\n          _this.cachedPassword = fakePassword;\n          var bucketsString = JSON.stringify(buckets);\n          yield _this.setItem('data', bucketsString);\n          return (yield _this.getItem('data')) === bucketsString;\n        });\n        return function (_x5) {\n          return _ref6.apply(this, arguments);\n        };\n      }();\n      this.hashIt = function (s) {\n        return (0, _createHash.default)('sha256').update(s).digest().toString('hex');\n      };\n      /**\n       * Lookup wallet in list by it's secret and\n       * remove it from `this.wallets`\n       *\n       * @param wallet {AbstractWallet}\n       */\n      this.deleteWallet = function (wallet) {\n        var ID = wallet.getID();\n        var tempWallets = [];\n        for (var value of _this.wallets) {\n          if (value.getID() === ID) {\n            // the one we should delete\n            // nop\n          } else {\n            // the one we must keep\n            tempWallets.push(value);\n          }\n        }\n        _this.wallets = tempWallets;\n      };\n      /**\n       * For each wallet, fetches balance from remote endpoint.\n       * Use getter for a specific wallet to get actual balance.\n       * Returns void.\n       * If index is present then fetch only from this specific wallet\n       */\n      this.fetchWalletBalances = /*#__PURE__*/function () {\n        var _ref7 = (0, _asyncToGenerator2.default)(function* (index) {\n          console.log('fetchWalletBalances for wallet#', typeof index === 'undefined' ? '(all)' : index);\n          if (index || index === 0) {\n            var c = 0;\n            for (var wallet of _this.wallets) {\n              if (c++ === index) {\n                // Skip non-Bitcoin wallets that use their own infrastructure\n                if ('usesBitcoinInfrastructure' in wallet && !wallet.usesBitcoinInfrastructure()) {\n                  console.log('Skipping non-Bitcoin wallet:', wallet.type);\n                  continue;\n                }\n                yield wallet.fetchBalance();\n              }\n            }\n          } else {\n            for (var _wallet of _this.wallets) {\n              console.log('fetching balance for', _wallet.getLabel());\n              // Skip non-Bitcoin wallets that use their own infrastructure\n              if ('usesBitcoinInfrastructure' in _wallet && !_wallet.usesBitcoinInfrastructure()) {\n                console.log('Skipping non-Bitcoin wallet:', _wallet.type);\n                continue;\n              }\n              yield _wallet.fetchBalance();\n            }\n          }\n        });\n        return function (_x6) {\n          return _ref7.apply(this, arguments);\n        };\n      }();\n      /**\n       * Fetches from remote endpoint all transactions for each wallet.\n       * Returns void.\n       * To access transactions - get them from each respective wallet.\n       * If index is present then fetch only from this specific wallet.\n       *\n       * @param index {Integer} Index of the wallet in this.wallets array,\n       *                        blank to fetch from all wallets\n       * @return {Promise.<void>}\n       */\n      this.fetchWalletTransactions = /*#__PURE__*/function () {\n        var _ref8 = (0, _asyncToGenerator2.default)(function* (index) {\n          console.log('fetchWalletTransactions for wallet#', typeof index === 'undefined' ? '(all)' : index);\n          if (index || index === 0) {\n            var c = 0;\n            for (var wallet of _this.wallets) {\n              if (c++ === index) {\n                // Skip non-Bitcoin wallets that use their own infrastructure\n                if ('usesBitcoinInfrastructure' in wallet && !wallet.usesBitcoinInfrastructure()) {\n                  console.log('Skipping non-Bitcoin wallet:', wallet.type);\n                  continue;\n                }\n                yield wallet.fetchTransactions();\n                if ('fetchPendingTransactions' in wallet) {\n                  yield wallet.fetchPendingTransactions();\n                  yield wallet.fetchUserInvoices();\n                }\n              }\n            }\n          } else {\n            for (var _wallet2 of _this.wallets) {\n              // Skip non-Bitcoin wallets that use their own infrastructure\n              if ('usesBitcoinInfrastructure' in _wallet2 && !_wallet2.usesBitcoinInfrastructure()) {\n                console.log('Skipping non-Bitcoin wallet:', _wallet2.type);\n                continue;\n              }\n              yield _wallet2.fetchTransactions();\n              if ('fetchPendingTransactions' in _wallet2) {\n                yield _wallet2.fetchPendingTransactions();\n                yield _wallet2.fetchUserInvoices();\n              }\n            }\n          }\n        });\n        return function (_x7) {\n          return _ref8.apply(this, arguments);\n        };\n      }();\n      this.fetchSenderPaymentCodes = /*#__PURE__*/function () {\n        var _ref9 = (0, _asyncToGenerator2.default)(function* (index) {\n          console.log('fetchSenderPaymentCodes for wallet#', typeof index === 'undefined' ? '(all)' : index);\n          if (index || index === 0) {\n            var wallet = _this.wallets[index];\n            try {\n              if (!(wallet.allowBIP47() && wallet.isBIP47Enabled() && 'fetchBIP47SenderPaymentCodes' in wallet)) return;\n              yield wallet.fetchBIP47SenderPaymentCodes();\n            } catch (error) {\n              console.error('Failed to fetch sender payment codes for wallet', index, error);\n            }\n          } else {\n            for (var _wallet3 of _this.wallets) {\n              try {\n                if (!(_wallet3.allowBIP47() && _wallet3.isBIP47Enabled() && 'fetchBIP47SenderPaymentCodes' in _wallet3)) continue;\n                yield _wallet3.fetchBIP47SenderPaymentCodes();\n              } catch (error) {\n                console.error('Failed to fetch sender payment codes for wallet', _wallet3.label, error);\n              }\n            }\n          }\n        });\n        return function (_x8) {\n          return _ref9.apply(this, arguments);\n        };\n      }();\n      this.getWallets = function () {\n        return _this.wallets;\n      };\n      /**\n       * Getter for all transactions in all wallets.\n       * But if index is provided - only for wallet with corresponding index\n       *\n       * @param index {number|undefined} Wallet index in this.wallets. Empty (or undef) for all wallets.\n       * @param limit {number} How many txs return, starting from the earliest. Default: all of them.\n       * @param includeWalletsWithHideTransactionsEnabled {boolean} Wallets' _hideTransactionsInWalletsList property determines wether the user wants this wallet's txs hidden from the main list view.\n       */\n      this.getTransactions = function (index) {\n        var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n        var includeWalletsWithHideTransactionsEnabled = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (index || index === 0) {\n          var _txs = [];\n          var c = 0;\n          var _loop = function _loop() {\n              if (c++ === index) {\n                _txs = _txs.concat(wallet.getTransactions());\n                var txsRet = [];\n                var walletID = wallet.getID();\n                var walletPreferredBalanceUnit = wallet.getPreferredBalanceUnit();\n                _txs.map(function (tx) {\n                  return txsRet.push(Object.assign({}, tx, {\n                    walletID: walletID,\n                    walletPreferredBalanceUnit: walletPreferredBalanceUnit\n                  }));\n                });\n                return {\n                  v: txsRet\n                };\n              }\n            },\n            _ret;\n          for (var wallet of _this.wallets) {\n            _ret = _loop();\n            if (_ret) return _ret.v;\n          }\n        }\n        var txs = [];\n        for (var _wallet4 of _this.wallets.filter(function (w) {\n          return includeWalletsWithHideTransactionsEnabled || !w.getHideTransactionsInWalletsList();\n        })) {\n          var walletTransactions = _wallet4.getTransactions();\n          var walletID = _wallet4.getID();\n          var walletPreferredBalanceUnit = _wallet4.getPreferredBalanceUnit();\n          for (var t of walletTransactions) {\n            txs.push(Object.assign({}, t, {\n              walletID: walletID,\n              walletPreferredBalanceUnit: walletPreferredBalanceUnit\n            }));\n          }\n        }\n        return txs.sort(function (a, b) {\n          var bTime = new Date(b.received).getTime();\n          var aTime = new Date(a.received).getTime();\n          return bTime - aTime;\n        }).slice(0, limit);\n      };\n      /**\n       * Getter for a sum of all balances of all wallets\n       */\n      this.getBalance = function () {\n        var finalBalance = 0;\n        for (var wal of _this.wallets) {\n          finalBalance += wal.getBalance();\n        }\n        return finalBalance;\n      };\n      this.isHandoffEnabled = /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n        try {\n          return !!(yield _asyncStorage.default.getItem(BlueApp.HANDOFF_STORAGE_KEY));\n        } catch (_) {}\n        return false;\n      });\n      this.setIsHandoffEnabled = /*#__PURE__*/function () {\n        var _ref1 = (0, _asyncToGenerator2.default)(function* (value) {\n          yield _asyncStorage.default.setItem(BlueApp.HANDOFF_STORAGE_KEY, value ? '1' : '');\n        });\n        return function (_x9) {\n          return _ref1.apply(this, arguments);\n        };\n      }();\n      this.isDoNotTrackEnabled = /*#__PURE__*/(0, _asyncToGenerator2.default)(function* () {\n        try {\n          var keyExists = yield _asyncStorage.default.getItem(BlueApp.DO_NOT_TRACK);\n          if (keyExists !== null) {\n            var _doNotTrackValue = !!keyExists;\n            if (_doNotTrackValue) {\n              yield _reactNativeDefaultPreference.default.set(BlueApp.DO_NOT_TRACK, '1');\n              _asyncStorage.default.removeItem(BlueApp.DO_NOT_TRACK);\n            } else {\n              return Boolean(yield _reactNativeDefaultPreference.default.get(BlueApp.DO_NOT_TRACK));\n            }\n          }\n        } catch (_) {}\n        var doNotTrackValue = yield _reactNativeDefaultPreference.default.get(BlueApp.DO_NOT_TRACK);\n        return doNotTrackValue === '1' || false;\n      });\n      this.setDoNotTrack = /*#__PURE__*/function () {\n        var _ref11 = (0, _asyncToGenerator2.default)(function* (value) {\n          if (value) {\n            yield _reactNativeDefaultPreference.default.set(BlueApp.DO_NOT_TRACK, '1');\n          } else {\n            yield _reactNativeDefaultPreference.default.clear(BlueApp.DO_NOT_TRACK);\n          }\n        });\n        return function (_x0) {\n          return _ref11.apply(this, arguments);\n        };\n      }();\n      /**\n       * Simple async sleeper function\n       */\n      this.sleep = function (ms) {\n        return new Promise(function (resolve) {\n          return setTimeout(resolve, ms);\n        });\n      };\n      this.wallets = [];\n      this.tx_metadata = {};\n      this.counterparty_metadata = {};\n      this.cachedPassword = false;\n    }\n    return (0, _createClass2.default)(BlueApp, [{\n      key: \"migrateKeys\",\n      value: function () {\n        var _migrateKeys = (0, _asyncToGenerator2.default)(function* () {\n          // do not migrate keys if we are not in RN env\n          if (!isReactNative) {\n            return;\n          }\n          for (var key of BlueApp.keys2migrate) {\n            try {\n              var value = yield _reactNativeSecureKeyStore.default.get(key);\n              if (value) {\n                yield _asyncStorage.default.setItem(key, value);\n                yield _reactNativeSecureKeyStore.default.remove(key);\n              }\n            } catch (_) {}\n          }\n        });\n        function migrateKeys() {\n          return _migrateKeys.apply(this, arguments);\n        }\n        return migrateKeys;\n      }()\n    }, {\n      key: \"decryptData\",\n      value:\n      /**\n       * Iterates through all values of `data` trying to\n       * decrypt each one, and returns first one successfully decrypted\n       */\n      function decryptData(data, password) {\n        data = JSON.parse(data);\n        var decrypted;\n        var num = 0;\n        for (var value of data) {\n          decrypted = encryption.decrypt(value, password);\n          if (decrypted) {\n            usedBucketNum = num;\n            return decrypted;\n          }\n          num++;\n        }\n        return false;\n      }\n    }, {\n      key: \"getRealmForTransactions\",\n      value: (\n      /**\n       * Returns instace of the Realm database, which is encrypted either by cached user's password OR default password.\n       * Database file is deterministically derived from encryption key.\n       */\n      function () {\n        var _getRealmForTransactions = (0, _asyncToGenerator2.default)(function* () {\n          var cacheFolderPath = _reactNativeFs.default.CachesDirectoryPath; // Path to cache folder\n          var password = this.hashIt(this.cachedPassword || 'fyegjitkyf[eqjnc.lf');\n          var buf = Buffer.from(this.hashIt(password) + this.hashIt(password), 'hex');\n          var encryptionKey = Int8Array.from(buf);\n          var fileName = this.hashIt(this.hashIt(password)) + '-wallettransactions.realm';\n          var path = `${cacheFolderPath}/${fileName}`; // Use cache folder path\n\n          var schema = [{\n            name: 'WalletTransactions',\n            properties: {\n              walletid: {\n                type: 'string',\n                indexed: true\n              },\n              internal: 'bool?',\n              // true - internal, false - external\n              index: 'int?',\n              tx: 'string' // stringified json\n            }\n          }];\n          // @ts-ignore schema doesn't match Realm's schema type\n          return _realm.default.open({\n            // @ts-ignore schema doesn't match Realm's schema type\n            schema: schema,\n            path: path,\n            encryptionKey: encryptionKey,\n            excludeFromIcloudBackup: true\n          });\n        });\n        function getRealmForTransactions() {\n          return _getRealmForTransactions.apply(this, arguments);\n        }\n        return getRealmForTransactions;\n      }()\n      /**\n       * Returns instace of the Realm database, which is encrypted by random bytes stored in keychain.\n       * Database file is static.\n       *\n       * @returns {Promise<Realm>}\n       */\n      )\n    }, {\n      key: \"openRealmKeyValue\",\n      value: (function () {\n        var _openRealmKeyValue = (0, _asyncToGenerator2.default)(function* () {\n          var cacheFolderPath = _reactNativeFs.default.CachesDirectoryPath; // Path to cache folder\n          var service = 'realm_encryption_key';\n          var password;\n          var credentials = yield _reactNativeKeychain.default.getGenericPassword({\n            service: service\n          });\n          if (credentials) {\n            password = credentials.password;\n          } else {\n            var _buf = yield (0, _$$_REQUIRE(_dependencyMap[14], \"./rng\").randomBytes)(64);\n            password = _buf.toString('hex');\n            yield _reactNativeKeychain.default.setGenericPassword(service, password, {\n              service: service\n            });\n          }\n          var buf = Buffer.from(password, 'hex');\n          var encryptionKey = Int8Array.from(buf);\n          var path = `${cacheFolderPath}/keyvalue.realm`; // Use cache folder path\n\n          var schema = [{\n            name: 'KeyValue',\n            primaryKey: 'key',\n            properties: {\n              key: {\n                type: 'string',\n                indexed: true\n              },\n              value: 'string' // stringified json, or whatever\n            }\n          }];\n          // @ts-ignore schema doesn't match Realm's schema type\n          return _realm.default.open({\n            // @ts-ignore schema doesn't match Realm's schema type\n            schema: schema,\n            path: path,\n            encryptionKey: encryptionKey,\n            excludeFromIcloudBackup: true\n          });\n        });\n        function openRealmKeyValue() {\n          return _openRealmKeyValue.apply(this, arguments);\n        }\n        return openRealmKeyValue;\n      }())\n    }, {\n      key: \"saveToRealmKeyValue\",\n      value: function saveToRealmKeyValue(realmkeyValue, key, value) {\n        realmkeyValue.write(function () {\n          realmkeyValue.create('KeyValue', {\n            key: key,\n            value: value\n          }, _realm.default.UpdateMode.Modified);\n        });\n      }\n\n      /**\n       * Loads from storage all wallets and\n       * maps them to `this.wallets`\n       *\n       * @param password If present means storage must be decrypted before usage\n       * @returns {Promise.<boolean>}\n       */\n    }, {\n      key: \"loadFromDisk\",\n      value: (function () {\n        var _loadFromDisk = (0, _asyncToGenerator2.default)(function* (password) {\n          var _this2 = this;\n          // Wrap inside a try so if anything goes wrong it wont block loadFromDisk from continuing\n          try {\n            yield this.moveRealmFilesToCacheDirectory();\n          } catch (error) {\n            console.warn('moveRealmFilesToCacheDirectory error:', error.message);\n          }\n          var dataRaw = yield this.getItemWithFallbackToRealm('data');\n          if (password) {\n            dataRaw = this.decryptData(dataRaw, password);\n            if (dataRaw) {\n              // password is good, cache it\n              this.cachedPassword = password;\n            }\n          }\n          if (dataRaw !== null) {\n            var realm;\n            try {\n              realm = yield this.getRealmForTransactions();\n            } catch (error) {\n              (0, _Alert.default)({\n                message: error.message\n              });\n            }\n            var data = JSON.parse(dataRaw);\n            if (!data.wallets) return false;\n            var wallets = data.wallets;\n            var _loop2 = function* _loop2() {\n              // deciding which type is wallet and instantiating correct object\n              var tempObj = JSON.parse(key);\n              var unserializedWallet;\n              switch (tempObj.type) {\n                case _$$_REQUIRE(_dependencyMap[15], \"./wallets/segwit-bech32-wallet\").SegwitBech32Wallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[15], \"./wallets/segwit-bech32-wallet\").SegwitBech32Wallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[16], \"./wallets/segwit-p2sh-wallet\").SegwitP2SHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[16], \"./wallets/segwit-p2sh-wallet\").SegwitP2SHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[17], \"./wallets/watch-only-wallet\").WatchOnlyWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[17], \"./wallets/watch-only-wallet\").WatchOnlyWallet.fromJson(key);\n                  unserializedWallet.init();\n                  if (unserializedWallet.isHd() && !unserializedWallet.isXpubValid()) {\n                    return 1; // continue\n                  }\n                  break;\n                case _$$_REQUIRE(_dependencyMap[18], \"./wallets/hd-legacy-p2pkh-wallet\").HDLegacyP2PKHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[18], \"./wallets/hd-legacy-p2pkh-wallet\").HDLegacyP2PKHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[19], \"./wallets/hd-segwit-p2sh-wallet\").HDSegwitP2SHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[19], \"./wallets/hd-segwit-p2sh-wallet\").HDSegwitP2SHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[20], \"./wallets/hd-segwit-bech32-wallet\").HDSegwitBech32Wallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[20], \"./wallets/hd-segwit-bech32-wallet\").HDSegwitBech32Wallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[21], \"./wallets/hd-legacy-breadwallet-wallet\").HDLegacyBreadwalletWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[21], \"./wallets/hd-legacy-breadwallet-wallet\").HDLegacyBreadwalletWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[22], \"./wallets/hd-legacy-electrum-seed-p2pkh-wallet\").HDLegacyElectrumSeedP2PKHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[22], \"./wallets/hd-legacy-electrum-seed-p2pkh-wallet\").HDLegacyElectrumSeedP2PKHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[23], \"./wallets/hd-segwit-electrum-seed-p2wpkh-wallet\").HDSegwitElectrumSeedP2WPKHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[23], \"./wallets/hd-segwit-electrum-seed-p2wpkh-wallet\").HDSegwitElectrumSeedP2WPKHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[24], \"./wallets/multisig-hd-wallet\").MultisigHDWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[24], \"./wallets/multisig-hd-wallet\").MultisigHDWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[25], \"./wallets/hd-aezeed-wallet\").HDAezeedWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[25], \"./wallets/hd-aezeed-wallet\").HDAezeedWallet.fromJson(key);\n                  // migrate password to this.passphrase field\n                  // remove this code somewhere in year 2022\n                  if (unserializedWallet.secret.includes(':')) {\n                    var _unserializedWallet$s = unserializedWallet.secret.split(':'),\n                      _unserializedWallet$s2 = (0, _slicedToArray2.default)(_unserializedWallet$s, 2),\n                      mnemonic = _unserializedWallet$s2[0],\n                      passphrase = _unserializedWallet$s2[1];\n                    unserializedWallet.secret = mnemonic;\n                    unserializedWallet.passphrase = passphrase;\n                  }\n                  break;\n                case _$$_REQUIRE(_dependencyMap[26], \"./wallets/slip39-wallets\").SLIP39SegwitP2SHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[26], \"./wallets/slip39-wallets\").SLIP39SegwitP2SHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[26], \"./wallets/slip39-wallets\").SLIP39LegacyP2PKHWallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[26], \"./wallets/slip39-wallets\").SLIP39LegacyP2PKHWallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[26], \"./wallets/slip39-wallets\").SLIP39SegwitBech32Wallet.type:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[26], \"./wallets/slip39-wallets\").SLIP39SegwitBech32Wallet.fromJson(key);\n                  break;\n                case _$$_REQUIRE(_dependencyMap[27], \"./wallets/lightning-custodian-wallet\").LightningCustodianWallet.type:\n                  {\n                    unserializedWallet = _$$_REQUIRE(_dependencyMap[27], \"./wallets/lightning-custodian-wallet\").LightningCustodianWallet.fromJson(key);\n                    var lndhub = false;\n                    try {\n                      lndhub = yield (0, _$$_REQUIRE(_dependencyMap[28], \"../helpers/lndHub\").getLNDHub)();\n                    } catch (error) {\n                      console.warn(error);\n                    }\n                    if (unserializedWallet.baseURI) {\n                      unserializedWallet.setBaseURI(unserializedWallet.baseURI); // not really necessary, just for the sake of readability\n                      console.log('using saved uri for for ln wallet:', unserializedWallet.baseURI);\n                    } else if (lndhub) {\n                      console.log('using wallet-wide settings ', lndhub, 'for ln wallet');\n                      unserializedWallet.setBaseURI(lndhub);\n                    } else {\n                      console.log('wallet does not have a baseURI. Continuing init...');\n                    }\n                    unserializedWallet.init();\n                    break;\n                  }\n                case 'lightningLdk':\n                  // since ldk wallets are deprecated and removed, we need to handle a case when such wallet still exists in storage\n                  unserializedWallet = new (_$$_REQUIRE(_dependencyMap[20], \"./wallets/hd-segwit-bech32-wallet\").HDSegwitBech32Wallet)();\n                  unserializedWallet.setSecret(tempObj.secret.replace('ldk://', ''));\n                  break;\n                case _$$_REQUIRE(_dependencyMap[29], \"./wallets/legacy-wallet\").LegacyWallet.type:\n                default:\n                  unserializedWallet = _$$_REQUIRE(_dependencyMap[29], \"./wallets/legacy-wallet\").LegacyWallet.fromJson(key);\n                  break;\n              }\n              try {\n                if (realm) _this2.inflateWalletFromRealm(realm, unserializedWallet);\n              } catch (error) {\n                (0, _Alert.default)({\n                  message: error.message\n                });\n              }\n\n              // done\n              var ID = unserializedWallet.getID();\n              if (!_this2.wallets.some(function (wallet) {\n                return wallet.getID() === ID;\n              })) {\n                _this2.wallets.push(unserializedWallet);\n                _this2.tx_metadata = data.tx_metadata;\n                _this2.counterparty_metadata = data.counterparty_metadata;\n              }\n            };\n            for (var key of wallets) {\n              if (yield* _loop2()) continue;\n            }\n            if (realm) realm.close();\n            return true;\n          } else {\n            return false; // failed loading data or loading/decryptin data\n          }\n        });\n        function loadFromDisk(_x1) {\n          return _loadFromDisk.apply(this, arguments);\n        }\n        return loadFromDisk;\n      }())\n    }, {\n      key: \"inflateWalletFromRealm\",\n      value: function inflateWalletFromRealm(realm, walletToInflate) {\n        var transactions = realm.objects('WalletTransactions');\n        var transactionsForWallet = transactions.filtered(`walletid = \"${walletToInflate.getID()}\"`);\n        for (var tx of transactionsForWallet) {\n          if (tx.internal === false) {\n            if ('_hdWalletInstance' in walletToInflate && walletToInflate._hdWalletInstance) {\n              var hd = walletToInflate._hdWalletInstance;\n              hd._txs_by_external_index[tx.index] = hd._txs_by_external_index[tx.index] || [];\n              var transaction = JSON.parse(tx.tx);\n              hd._txs_by_external_index[tx.index].push(transaction);\n            } else {\n              walletToInflate._txs_by_external_index[tx.index] = walletToInflate._txs_by_external_index[tx.index] || [];\n              var _transaction = JSON.parse(tx.tx);\n              walletToInflate._txs_by_external_index[tx.index].push(_transaction);\n            }\n          } else if (tx.internal === true) {\n            if ('_hdWalletInstance' in walletToInflate && walletToInflate._hdWalletInstance) {\n              var _hd = walletToInflate._hdWalletInstance;\n              _hd._txs_by_internal_index[tx.index] = _hd._txs_by_internal_index[tx.index] || [];\n              var _transaction2 = JSON.parse(tx.tx);\n              _hd._txs_by_internal_index[tx.index].push(_transaction2);\n            } else {\n              walletToInflate._txs_by_internal_index[tx.index] = walletToInflate._txs_by_internal_index[tx.index] || [];\n              var _transaction3 = JSON.parse(tx.tx);\n              walletToInflate._txs_by_internal_index[tx.index].push(_transaction3);\n            }\n          } else {\n            if (!Array.isArray(walletToInflate._txs_by_external_index)) walletToInflate._txs_by_external_index = [];\n            walletToInflate._txs_by_external_index = walletToInflate._txs_by_external_index || [];\n            var _transaction4 = JSON.parse(tx.tx);\n            walletToInflate._txs_by_external_index.push(_transaction4);\n          }\n        }\n      }\n    }, {\n      key: \"offloadWalletToRealm\",\n      value: function offloadWalletToRealm(realm, wallet) {\n        var id = wallet.getID();\n        var walletToSave = '_hdWalletInstance' in wallet && wallet._hdWalletInstance || wallet;\n        if (Array.isArray(walletToSave._txs_by_external_index)) {\n          // if this var is an array that means its a single-address wallet class, and this var is a flat array\n          // with transactions\n          realm.write(function () {\n            // cleanup all existing transactions for the wallet first\n            var walletTransactionsToDelete = realm.objects('WalletTransactions').filtered(`walletid = '${id}'`);\n            realm.delete(walletTransactionsToDelete);\n\n            // @ts-ignore walletToSave._txs_by_external_index is array\n            for (var tx of walletToSave._txs_by_external_index) {\n              realm.create('WalletTransactions', {\n                walletid: id,\n                tx: JSON.stringify(tx)\n              }, _realm.default.UpdateMode.Modified);\n            }\n          });\n          return;\n        }\n\n        /// ########################################################################################################\n\n        if (walletToSave._txs_by_external_index) {\n          realm.write(function () {\n            // cleanup all existing transactions for the wallet first\n            var walletTransactionsToDelete = realm.objects('WalletTransactions').filtered(`walletid = '${id}'`);\n            realm.delete(walletTransactionsToDelete);\n\n            // insert new ones:\n            for (var index of Object.keys(walletToSave._txs_by_external_index)) {\n              // @ts-ignore index is number\n              var txs = walletToSave._txs_by_external_index[index];\n              for (var tx of txs) {\n                realm.create('WalletTransactions', {\n                  walletid: id,\n                  internal: false,\n                  index: parseInt(index, 10),\n                  tx: JSON.stringify(tx)\n                }, _realm.default.UpdateMode.Modified);\n              }\n            }\n            for (var _index of Object.keys(walletToSave._txs_by_internal_index)) {\n              // @ts-ignore index is number\n              var _txs2 = walletToSave._txs_by_internal_index[_index];\n              for (var _tx of _txs2) {\n                realm.create('WalletTransactions', {\n                  walletid: id,\n                  internal: true,\n                  index: parseInt(_index, 10),\n                  tx: JSON.stringify(_tx)\n                }, _realm.default.UpdateMode.Modified);\n              }\n            }\n          });\n        }\n      }\n\n      /**\n       * Serializes and saves to storage object data.\n       * If cached password is saved - finds the correct bucket\n       * to save to, encrypts and then saves.\n       *\n       * @returns {Promise} Result of storage save\n       */\n    }, {\n      key: \"saveToDisk\",\n      value: (function () {\n        var _saveToDisk = (0, _asyncToGenerator2.default)(function* () {\n          if (savingInProgress) {\n            console.warn('saveToDisk is in progress');\n            if (++savingInProgress > 10) (0, _Alert.default)({\n              message: 'Critical error. Last actions were not saved'\n            }); // should never happen\n            yield new Promise(function (resolve) {\n              return setTimeout(resolve, 1000 * savingInProgress);\n            }); // sleep\n            return this.saveToDisk();\n          }\n          savingInProgress = 1;\n          try {\n            var walletsToSave = []; // serialized wallets\n            var realm;\n            try {\n              realm = yield this.getRealmForTransactions();\n            } catch (error) {\n              (0, _Alert.default)({\n                message: error.message\n              });\n            }\n            for (var key of this.wallets) {\n              if (typeof key === 'boolean') continue;\n              key.prepareForSerialization();\n              // @ts-ignore wtf is wallet.current? Does it even exist?\n              delete key.current;\n              var keyCloned = Object.assign({}, key); // stripped-down version of a wallet to save to secure keystore\n              if ('_hdWalletInstance' in key) {\n                var k = keyCloned;\n                k._hdWalletInstance = Object.assign({}, key._hdWalletInstance);\n                k._hdWalletInstance._txs_by_external_index = {};\n                k._hdWalletInstance._txs_by_internal_index = {};\n              }\n              if (realm) this.offloadWalletToRealm(realm, key);\n              // stripping down:\n              if (key._txs_by_external_index) {\n                keyCloned._txs_by_external_index = {};\n                keyCloned._txs_by_internal_index = {};\n              }\n              if ('_bip47_instance' in keyCloned) {\n                delete keyCloned._bip47_instance; // since it wont be restored into a proper class instance\n              }\n              walletsToSave.push(JSON.stringify(Object.assign({}, keyCloned, {\n                type: keyCloned.type\n              })));\n            }\n            if (realm) realm.close();\n            var data = {\n              wallets: walletsToSave,\n              tx_metadata: this.tx_metadata,\n              counterparty_metadata: this.counterparty_metadata\n            };\n            if (this.cachedPassword) {\n              // should find the correct bucket, encrypt and then save\n              var buckets = yield this.getItemWithFallbackToRealm('data');\n              buckets = JSON.parse(buckets);\n              var newData = []; // serialized buckets\n              var num = 0;\n              for (var bucket of buckets) {\n                var decrypted = void 0;\n                // if we had `usedBucketNum` during loadFromDisk(), no point to try to decode each bucket to find the one we\n                // need, we just to find bucket with the same index\n                if (usedBucketNum !== false) {\n                  if (num === usedBucketNum) {\n                    decrypted = true;\n                  }\n                  num++;\n                } else {\n                  // we dont have `usedBucketNum` for whatever reason, so lets try to decrypt each bucket after bucket\n                  // till we find the right one\n                  decrypted = encryption.decrypt(bucket, this.cachedPassword);\n                }\n                if (!decrypted) {\n                  // no luck decrypting, its not our bucket\n                  newData.push(bucket);\n                } else {\n                  // decrypted ok, this is our bucket\n                  // we serialize our object's data, encrypt it, and add it to buckets\n                  newData.push(encryption.encrypt(JSON.stringify(data), this.cachedPassword));\n                }\n              }\n              data = newData;\n            }\n            yield this.setItem('data', JSON.stringify(data));\n            yield this.setItem(BlueApp.FLAG_ENCRYPTED, this.cachedPassword ? '1' : '');\n\n            // now, backing up same data in realm:\n            var realmkeyValue = yield this.openRealmKeyValue();\n            this.saveToRealmKeyValue(realmkeyValue, 'data', JSON.stringify(data));\n            this.saveToRealmKeyValue(realmkeyValue, BlueApp.FLAG_ENCRYPTED, this.cachedPassword ? '1' : '');\n            realmkeyValue.close();\n          } catch (error) {\n            console.error('save to disk exception:', error.message);\n            (0, _Alert.default)({\n              message: 'save to disk exception: ' + error.message\n            });\n            if (error.message.includes('Realm file decryption failed')) {\n              console.warn('purging realm key-value database file');\n              this.purgeRealmKeyValueFile();\n            }\n          } finally {\n            savingInProgress = 0;\n          }\n        });\n        function saveToDisk() {\n          return _saveToDisk.apply(this, arguments);\n        }\n        return saveToDisk;\n      }())\n    }, {\n      key: \"purgeRealmKeyValueFile\",\n      value: function purgeRealmKeyValueFile() {\n        var path = 'keyvalue.realm';\n        return _realm.default.deleteFile({\n          path: path\n        });\n      }\n    }, {\n      key: \"moveRealmFilesToCacheDirectory\",\n      value: function () {\n        var _moveRealmFilesToCacheDirectory = (0, _asyncToGenerator2.default)(function* () {\n          var documentPath = _reactNativeFs.default.DocumentDirectoryPath; // Path to documentPath folder\n          var cachePath = _reactNativeFs.default.CachesDirectoryPath; // Path to cachePath folder\n          try {\n            if (!(yield _reactNativeFs.default.exists(documentPath))) return; // If the documentPath directory does not exist, return (nothing to move)\n            var files = yield _reactNativeFs.default.readDir(documentPath); // Read all files in documentPath directory\n            if (Array.isArray(files) && files.length === 0) return; // If there are no files, return (nothing to move)\n            var appRealmFiles = files.filter(function (file) {\n              return file.name.endsWith('.realm') || file.name.endsWith('.realm.lock') || file.name.includes('.realm.management');\n            });\n            for (var file of appRealmFiles) {\n              var filePath = `${documentPath}/${file.name}`;\n              var newFilePath = `${cachePath}/${file.name}`;\n              var fileExists = yield _reactNativeFs.default.exists(filePath); // Check if the file exists\n              var cacheFileExists = yield _reactNativeFs.default.exists(newFilePath); // Check if the file already exists in the cache directory\n\n              if (fileExists) {\n                if (cacheFileExists) {\n                  yield _reactNativeFs.default.unlink(newFilePath); // Delete the file in the cache directory if it exists\n                  console.log(`Existing file removed from cache: ${newFilePath}`);\n                }\n                yield _reactNativeFs.default.moveFile(filePath, newFilePath); // Move the file\n                console.log(`Moved Realm file: ${filePath} to ${newFilePath}`);\n              } else {\n                console.log(`File does not exist: ${filePath}`);\n              }\n            }\n          } catch (error) {\n            console.error('Error moving Realm files:', error);\n            throw new Error(`Error moving Realm files: ${error.message}`);\n          }\n        });\n        function moveRealmFilesToCacheDirectory() {\n          return _moveRealmFilesToCacheDirectory.apply(this, arguments);\n        }\n        return moveRealmFilesToCacheDirectory;\n      }()\n    }], [{\n      key: \"getInstance\",\n      value: function getInstance() {\n        if (!BlueApp._instance) {\n          BlueApp._instance = new BlueApp();\n        }\n        return BlueApp._instance;\n      }\n    }]);\n  }();\n  _BlueApp = BlueApp;\n  BlueApp.FLAG_ENCRYPTED = 'data_encrypted';\n  BlueApp.LNDHUB = 'lndhub';\n  BlueApp.DO_NOT_TRACK = 'donottrack';\n  BlueApp.HANDOFF_STORAGE_KEY = 'HandOff';\n  BlueApp._instance = null;\n  BlueApp.keys2migrate = [_BlueApp.HANDOFF_STORAGE_KEY, _BlueApp.DO_NOT_TRACK];\n});","lineCount":1022,"map":[[11,2,1,0],[11,6,1,0,"_asyncStorage"],[11,19,1,0],[11,22,1,0,"_interopRequireDefault"],[11,44,1,0],[11,45,1,0,"_$$_REQUIRE"],[11,56,1,0],[11,57,1,0,"_dependencyMap"],[11,71,1,0],[12,2,2,0],[12,6,2,0,"_createHash"],[12,17,2,0],[12,20,2,0,"_interopRequireDefault"],[12,42,2,0],[12,43,2,0,"_$$_REQUIRE"],[12,54,2,0],[12,55,2,0,"_dependencyMap"],[12,69,2,0],[13,2,3,0],[13,6,3,0,"_reactNativeDefaultPreference"],[13,35,3,0],[13,38,3,0,"_interopRequireDefault"],[13,60,3,0],[13,61,3,0,"_$$_REQUIRE"],[13,72,3,0],[13,73,3,0,"_dependencyMap"],[13,87,3,0],[14,2,4,0],[14,6,4,0,"_reactNativeFs"],[14,20,4,0],[14,23,4,0,"_interopRequireDefault"],[14,45,4,0],[14,46,4,0,"_$$_REQUIRE"],[14,57,4,0],[14,58,4,0,"_dependencyMap"],[14,72,4,0],[15,2,5,0],[15,6,5,0,"_reactNativeKeychain"],[15,26,5,0],[15,29,5,0,"_interopRequireDefault"],[15,51,5,0],[15,52,5,0,"_$$_REQUIRE"],[15,63,5,0],[15,64,5,0,"_dependencyMap"],[15,78,5,0],[16,2,6,0],[16,6,6,0,"_reactNativeSecureKeyStore"],[16,32,6,0],[16,35,6,0,"_interopRequireWildcard"],[16,58,6,0],[16,59,6,0,"_$$_REQUIRE"],[16,70,6,0],[16,71,6,0,"_dependencyMap"],[16,85,6,0],[17,2,7,0],[17,6,7,0,"_realm"],[17,12,7,0],[17,15,7,0,"_interopRequireDefault"],[17,37,7,0],[17,38,7,0,"_$$_REQUIRE"],[17,49,7,0],[17,50,7,0,"_dependencyMap"],[17,64,7,0],[18,2,9,0],[18,6,9,0,"encryption"],[18,16,9,0],[18,19,9,0,"_interopRequireWildcard"],[18,42,9,0],[18,43,9,0,"_$$_REQUIRE"],[18,54,9,0],[18,55,9,0,"_dependencyMap"],[18,69,9,0],[19,2,10,0],[19,6,10,0,"_Alert"],[19,12,10,0],[19,15,10,0,"_interopRequireDefault"],[19,37,10,0],[19,38,10,0,"_$$_REQUIRE"],[19,49,10,0],[19,50,10,0,"_dependencyMap"],[19,64,10,0],[20,2,10,47],[20,6,10,47,"_navigator"],[20,16,10,47],[20,18,10,47,"_BlueApp"],[20,26,10,47],[21,2,10,47],[21,11,10,47,"_getRequireWildcardCache"],[21,36,10,47,"e"],[21,37,10,47],[21,66,10,47,"WeakMap"],[21,73,10,47],[21,92,10,47,"r"],[21,93,10,47],[21,100,10,47,"WeakMap"],[21,107,10,47],[21,111,10,47,"t"],[21,112,10,47],[21,119,10,47,"WeakMap"],[21,126,10,47],[21,138,10,47,"_getRequireWildcardCache"],[21,162,10,47],[21,174,10,47,"_getRequireWildcardCache"],[21,199,10,47,"e"],[21,200,10,47],[21,211,10,47,"e"],[21,212,10,47],[21,215,10,47,"t"],[21,216,10,47],[21,219,10,47,"r"],[21,220,10,47],[21,225,10,47,"e"],[21,226,10,47],[22,2,10,47],[22,11,10,47,"_interopRequireWildcard"],[22,35,10,47,"e"],[22,36,10,47],[22,38,10,47,"r"],[22,39,10,47],[22,48,10,47,"r"],[22,49,10,47],[22,53,10,47,"e"],[22,54,10,47],[22,58,10,47,"e"],[22,59,10,47],[22,60,10,47,"__esModule"],[22,70,10,47],[22,79,10,47,"e"],[22,80,10,47],[22,95,10,47,"e"],[22,96,10,47],[22,119,10,47,"e"],[22,120,10,47],[22,145,10,47,"e"],[22,146,10,47],[22,157,10,47,"default"],[22,164,10,47],[22,166,10,47,"e"],[22,167,10,47],[22,175,10,47,"t"],[22,176,10,47],[22,179,10,47,"_getRequireWildcardCache"],[22,203,10,47],[22,204,10,47,"r"],[22,205,10,47],[22,212,10,47,"t"],[22,213,10,47],[22,217,10,47,"t"],[22,218,10,47],[22,219,10,47,"has"],[22,222,10,47],[22,223,10,47,"e"],[22,224,10,47],[22,234,10,47,"t"],[22,235,10,47],[22,236,10,47,"get"],[22,239,10,47],[22,240,10,47,"e"],[22,241,10,47],[22,248,10,47,"n"],[22,249,10,47],[22,254,10,47,"__proto__"],[22,263,10,47],[22,273,10,47,"a"],[22,274,10,47],[22,277,10,47,"Object"],[22,283,10,47],[22,284,10,47,"defineProperty"],[22,298,10,47],[22,302,10,47,"Object"],[22,308,10,47],[22,309,10,47,"getOwnPropertyDescriptor"],[22,333,10,47],[22,344,10,47,"u"],[22,345,10,47],[22,349,10,47,"e"],[22,350,10,47],[22,370,10,47,"u"],[22,371,10,47],[22,378,10,47,"hasOwnProperty"],[22,392,10,47],[22,393,10,47,"call"],[22,397,10,47],[22,398,10,47,"e"],[22,399,10,47],[22,401,10,47,"u"],[22,402,10,47],[22,411,10,47,"i"],[22,412,10,47],[22,415,10,47,"a"],[22,416,10,47],[22,419,10,47,"Object"],[22,425,10,47],[22,426,10,47,"getOwnPropertyDescriptor"],[22,450,10,47],[22,451,10,47,"e"],[22,452,10,47],[22,454,10,47,"u"],[22,455,10,47],[22,465,10,47,"i"],[22,466,10,47],[22,471,10,47,"i"],[22,472,10,47],[22,473,10,47,"get"],[22,476,10,47],[22,480,10,47,"i"],[22,481,10,47],[22,482,10,47,"set"],[22,485,10,47],[22,489,10,47,"Object"],[22,495,10,47],[22,496,10,47,"defineProperty"],[22,510,10,47],[22,511,10,47,"n"],[22,512,10,47],[22,514,10,47,"u"],[22,515,10,47],[22,517,10,47,"i"],[22,518,10,47],[22,522,10,47,"n"],[22,523,10,47],[22,524,10,47,"u"],[22,525,10,47],[22,529,10,47,"e"],[22,530,10,47],[22,531,10,47,"u"],[22,532,10,47],[22,544,10,47,"n"],[22,545,10,47],[22,546,10,47,"default"],[22,553,10,47],[22,556,10,47,"e"],[22,557,10,47],[22,559,10,47,"t"],[22,560,10,47],[22,564,10,47,"t"],[22,565,10,47],[22,566,10,47,"set"],[22,569,10,47],[22,570,10,47,"e"],[22,571,10,47],[22,573,10,47,"n"],[22,574,10,47],[22,577,10,47,"n"],[22,578,10,47],[23,2,29,0],[23,6,29,4,"usedBucketNum"],[23,19,29,35],[23,22,29,38],[23,27,29,43],[24,2,30,0],[24,6,30,4,"savingInProgress"],[24,22,30,20],[24,25,30,23],[24,26,30,24],[24,27,30,25],[24,28,30,26],[26,2,66,0],[26,6,66,6,"isReactNative"],[26,19,66,19],[26,22,66,22],[26,29,66,29,"navigator"],[26,38,66,38],[26,43,66,43],[26,54,66,54],[26,58,66,58],[26,60,66,58,"_navigator"],[26,70,66,58],[26,73,66,58,"navigator"],[26,82,66,67],[26,103,66,58,"_navigator"],[26,113,66,58],[26,114,66,69,"product"],[26,121,66,76],[26,127,66,81],[26,140,66,94],[27,2,66,95],[27,6,68,13,"BlueApp"],[27,13,68,20],[27,16,68,20,"exports"],[27,23,68,20],[27,24,68,20,"BlueApp"],[27,31,68,20],[28,4,83,2],[28,13,83,2,"BlueApp"],[28,21,83,2],[28,23,83,16],[29,6,83,16],[29,10,83,16,"_this"],[29,15,83,16],[30,6,83,16],[30,10,83,16,"_classCallCheck2"],[30,26,83,16],[30,27,83,16,"default"],[30,34,83,16],[30,42,83,16,"BlueApp"],[30,49,83,16],[31,6,115,2],[32,0,116,0],[33,0,117,0],[34,0,118,0],[35,6,115,2],[35,11,119,2,"setItem"],[35,18,119,9],[35,21,119,12],[35,31,119,13,"key"],[35,34,119,24],[35,36,119,26,"value"],[35,41,119,36],[35,43,119,55],[36,8,120,4],[36,12,120,8,"isReactNative"],[36,25,120,21],[36,27,120,23],[37,10,121,6],[37,17,121,13,"RNSecureKeyStore"],[37,51,121,29],[37,52,121,30,"set"],[37,55,121,33],[37,56,121,34,"key"],[37,59,121,37],[37,61,121,39,"value"],[37,66,121,44],[37,68,121,46],[38,12,121,48,"accessible"],[38,22,121,58],[38,24,121,60,"ACCESSIBLE"],[38,61,121,70],[38,62,121,71,"WHEN_UNLOCKED_THIS_DEVICE_ONLY"],[39,10,121,102],[39,11,121,103],[39,12,121,104],[40,8,122,4],[40,9,122,5],[40,15,122,11],[41,10,123,6],[41,17,123,13,"AsyncStorage"],[41,38,123,25],[41,39,123,26,"setItem"],[41,46,123,33],[41,47,123,34,"key"],[41,50,123,37],[41,52,123,39,"value"],[41,57,123,44],[41,58,123,45],[42,8,124,4],[43,6,125,2],[43,7,125,3],[44,6,127,2],[45,0,128,0],[46,0,129,0],[47,0,130,0],[48,6,127,2],[48,11,131,2,"getItem"],[48,18,131,9],[48,21,131,12],[48,31,131,13,"key"],[48,34,131,24],[48,36,131,43],[49,8,132,4],[49,12,132,8,"isReactNative"],[49,25,132,21],[49,27,132,23],[50,10,133,6],[50,17,133,13,"RNSecureKeyStore"],[50,51,133,29],[50,52,133,30,"get"],[50,55,133,33],[50,56,133,34,"key"],[50,59,133,37],[50,60,133,38],[51,8,134,4],[51,9,134,5],[51,15,134,11],[52,10,135,6],[52,17,135,13,"AsyncStorage"],[52,38,135,25],[52,39,135,26,"getItem"],[52,46,135,33],[52,47,135,34,"key"],[52,50,135,37],[52,51,135,38],[53,8,136,4],[54,6,137,2],[54,7,137,3],[55,6,137,3],[55,11,139,2,"getItemWithFallbackToRealm"],[55,37,139,28],[56,8,139,28],[56,12,139,28,"_ref"],[56,16,139,28],[56,23,139,28,"_asyncToGenerator2"],[56,41,139,28],[56,42,139,28,"default"],[56,49,139,28],[56,51,139,31],[56,62,139,38,"key"],[56,65,139,49],[56,67,139,75],[57,10,140,4],[57,14,140,8,"value"],[57,19,140,13],[58,10,141,4],[58,14,141,8],[59,12,142,6],[59,25,142,19,"_this"],[59,30,142,23],[59,31,142,24,"getItem"],[59,38,142,31],[59,39,142,32,"key"],[59,42,142,35],[59,43,142,36],[60,10,143,4],[60,11,143,5],[60,12,143,6],[60,19,143,13,"error"],[60,24,143,23],[60,26,143,25],[61,12,144,6,"console"],[61,19,144,13],[61,20,144,14,"warn"],[61,24,144,18],[61,25,144,19],[61,40,144,34],[61,42,144,36,"key"],[61,45,144,39],[61,47,144,41,"error"],[61,52,144,46],[61,53,144,47,"message"],[61,60,144,54],[61,61,144,55],[62,12,145,6,"console"],[62,19,145,13],[62,20,145,14,"warn"],[62,24,145,18],[62,25,145,19],[62,44,145,38],[62,45,145,39],[63,12,146,6],[63,16,146,12,"realmKeyValue"],[63,29,146,25],[63,38,146,34,"_this"],[63,43,146,38],[63,44,146,39,"openRealmKeyValue"],[63,61,146,56],[63,62,146,57],[63,63,146,58],[64,12,147,6],[64,16,147,12,"obj"],[64,19,147,15],[64,22,147,18,"realmKeyValue"],[64,35,147,31],[64,36,147,32,"objectForPrimaryKey"],[64,55,147,51],[64,56,147,52],[64,66,147,62],[64,68,147,64,"key"],[64,71,147,67],[64,72,147,68],[64,73,147,69],[64,74,147,70],[65,12,148,6,"value"],[65,17,148,11],[65,20,148,14,"obj"],[65,23,148,17],[65,43,148,14,"obj"],[65,46,148,17],[65,47,148,19,"value"],[65,52,148,24],[66,12,149,6,"realmKeyValue"],[66,25,149,19],[66,26,149,20,"close"],[66,31,149,25],[66,32,149,26],[66,33,149,27],[67,12,150,6],[67,16,150,10,"value"],[67,21,150,15],[67,23,150,17],[68,14,151,8],[69,14,152,8,"console"],[69,21,152,15],[69,22,152,16,"warn"],[69,26,152,20],[69,27,152,21],[69,51,152,45],[69,53,152,47,"value"],[69,58,152,52],[69,59,152,53,"length"],[69,65,152,59],[69,67,152,61],[69,93,152,87],[69,95,152,89,"key"],[69,98,152,92],[69,99,152,93],[70,14,153,8],[70,21,153,15,"value"],[70,26,153,20],[71,12,154,6],[72,12,155,6],[72,19,155,13],[72,23,155,17],[73,10,156,4],[74,8,157,2],[74,9,157,3],[75,8,157,3],[75,25,157,3,"_x"],[75,27,157,3],[76,10,157,3],[76,17,157,3,"_ref"],[76,21,157,3],[76,22,157,3,"apply"],[76,27,157,3],[76,34,157,3,"arguments"],[76,43,157,3],[77,8,157,3],[78,6,157,3],[79,6,157,3],[79,11,159,2,"storageIsEncrypted"],[79,29,159,20],[79,49,159,20,"_asyncToGenerator2"],[79,67,159,20],[79,68,159,20,"default"],[79,75,159,20],[79,77,159,23],[79,90,159,53],[80,8,160,4],[80,12,160,8,"data"],[80,16,160,12],[81,8,161,4],[81,12,161,8],[82,10,162,6,"data"],[82,14,162,10],[82,23,162,19,"_this"],[82,28,162,23],[82,29,162,24,"getItemWithFallbackToRealm"],[82,55,162,50],[82,56,162,51,"BlueApp"],[82,63,162,58],[82,64,162,59,"FLAG_ENCRYPTED"],[82,78,162,73],[82,79,162,74],[83,8,163,4],[83,9,163,5],[83,10,163,6],[83,17,163,13,"error"],[83,22,163,23],[83,24,163,25],[84,10,164,6,"console"],[84,17,164,13],[84,18,164,14,"warn"],[84,22,164,18],[84,23,164,19],[84,40,164,36],[84,43,164,39,"BlueApp"],[84,50,164,46],[84,51,164,47,"FLAG_ENCRYPTED"],[84,65,164,61],[84,68,164,64],[84,76,164,72],[84,78,164,74,"error"],[84,83,164,79],[84,84,164,80,"message"],[84,91,164,87],[84,92,164,88],[85,10,165,6],[85,17,165,13],[85,22,165,18],[86,8,166,4],[87,8,168,4],[87,15,168,11,"Boolean"],[87,22,168,18],[87,23,168,19,"data"],[87,27,168,23],[87,28,168,24],[88,6,169,2],[88,7,169,3],[89,6,169,3],[89,11,171,2,"isPasswordInUse"],[89,26,171,17],[90,8,171,17],[90,12,171,17,"_ref3"],[90,17,171,17],[90,24,171,17,"_asyncToGenerator2"],[90,42,171,17],[90,43,171,17,"default"],[90,50,171,17],[90,52,171,20],[90,63,171,27,"password"],[90,71,171,43],[90,73,171,48],[91,10,172,4],[91,14,172,8],[92,12,173,6],[92,16,173,10,"data"],[92,20,173,14],[92,29,173,23,"_this"],[92,34,173,27],[92,35,173,28,"getItem"],[92,42,173,35],[92,43,173,36],[92,49,173,42],[92,50,173,43],[93,12,174,6,"data"],[93,16,174,10],[93,19,174,13,"_this"],[93,24,174,17],[93,25,174,18,"decryptData"],[93,36,174,29],[93,37,174,30,"data"],[93,41,174,34],[93,43,174,36,"password"],[93,51,174,44],[93,52,174,45],[94,12,175,6],[94,19,175,13,"Boolean"],[94,26,175,20],[94,27,175,21,"data"],[94,31,175,25],[94,32,175,26],[95,10,176,4],[95,11,176,5],[95,12,176,6],[95,19,176,13,"_e"],[95,21,176,15],[95,23,176,17],[96,12,177,6],[96,19,177,13],[96,24,177,18],[97,10,178,4],[98,8,179,2],[98,9,179,3],[99,8,179,3],[99,25,179,3,"_x2"],[99,28,179,3],[100,10,179,3],[100,17,179,3,"_ref3"],[100,22,179,3],[100,23,179,3,"apply"],[100,28,179,3],[100,35,179,3,"arguments"],[100,44,179,3],[101,8,179,3],[102,6,179,3],[103,6,179,3],[103,11,202,2,"decryptStorage"],[103,25,202,16],[104,8,202,16],[104,12,202,16,"_ref4"],[104,17,202,16],[104,24,202,16,"_asyncToGenerator2"],[104,42,202,16],[104,43,202,16,"default"],[104,50,202,16],[104,52,202,19],[104,63,202,26,"password"],[104,71,202,42],[104,73,202,65],[105,10,203,4],[105,14,203,8,"password"],[105,22,203,16],[105,27,203,21,"_this"],[105,32,203,25],[105,33,203,26,"cachedPassword"],[105,47,203,40],[105,49,203,42],[106,12,204,6,"_this"],[106,17,204,10],[106,18,204,11,"cachedPassword"],[106,32,204,25],[106,35,204,28,"undefined"],[106,44,204,37],[107,12,205,6],[107,18,205,12,"_this"],[107,23,205,16],[107,24,205,17,"saveToDisk"],[107,34,205,27],[107,35,205,28],[107,36,205,29],[108,12,206,6,"_this"],[108,17,206,10],[108,18,206,11,"wallets"],[108,25,206,18],[108,28,206,21],[108,30,206,23],[109,12,207,6,"_this"],[109,17,207,10],[109,18,207,11,"tx_metadata"],[109,29,207,22],[109,32,207,25],[109,33,207,26],[109,34,207,27],[110,12,208,6,"_this"],[110,17,208,10],[110,18,208,11,"counterparty_metadata"],[110,39,208,32],[110,42,208,35],[110,43,208,36],[110,44,208,37],[111,12,209,6],[111,19,209,13,"_this"],[111,24,209,17],[111,25,209,18,"loadFromDisk"],[111,37,209,30],[111,38,209,31],[111,39,209,32],[112,10,210,4],[112,11,210,5],[112,17,210,11],[113,12,211,6],[113,18,211,12],[113,22,211,16,"Error"],[113,27,211,21],[113,28,211,22],[113,68,211,62],[113,69,211,63],[114,10,212,4],[115,8,213,2],[115,9,213,3],[116,8,213,3],[116,25,213,3,"_x3"],[116,28,213,3],[117,10,213,3],[117,17,213,3,"_ref4"],[117,22,213,3],[117,23,213,3,"apply"],[117,28,213,3],[117,35,213,3,"arguments"],[117,44,213,3],[118,8,213,3],[119,6,213,3],[120,6,213,3],[120,11,215,2,"encryptStorage"],[120,25,215,16],[121,8,215,16],[121,12,215,16,"_ref5"],[121,17,215,16],[121,24,215,16,"_asyncToGenerator2"],[121,42,215,16],[121,43,215,16,"default"],[121,50,215,16],[121,52,215,19],[121,63,215,26,"password"],[121,71,215,42],[121,73,215,62],[122,10,216,4],[123,10,217,4],[123,16,217,10,"_this"],[123,21,217,14],[123,22,217,15,"saveToDisk"],[123,32,217,25],[123,33,217,26],[123,34,217,27],[124,10,218,4],[124,14,218,8,"data"],[124,18,218,12],[124,27,218,21,"_this"],[124,32,218,25],[124,33,218,26,"getItem"],[124,40,218,33],[124,41,218,34],[124,47,218,40],[124,48,218,41],[125,10,219,4],[127,10,221,4],[127,14,221,10,"encrypted"],[127,23,221,19],[127,26,221,22,"encryption"],[127,36,221,32],[127,37,221,33,"encrypt"],[127,44,221,40],[127,45,221,41,"data"],[127,49,221,45],[127,51,221,47,"password"],[127,59,221,55],[127,60,221,56],[128,10,222,4,"data"],[128,14,222,8],[128,17,222,11],[128,19,222,13],[129,10,223,4,"data"],[129,14,223,8],[129,15,223,9,"push"],[129,19,223,13],[129,20,223,14,"encrypted"],[129,29,223,23],[129,30,223,24],[129,31,223,25],[129,32,223,26],[130,10,224,4,"data"],[130,14,224,8],[130,17,224,11,"JSON"],[130,21,224,15],[130,22,224,16,"stringify"],[130,31,224,25],[130,32,224,26,"data"],[130,36,224,30],[130,37,224,31],[131,10,225,4,"_this"],[131,15,225,8],[131,16,225,9,"cachedPassword"],[131,30,225,23],[131,33,225,26,"password"],[131,41,225,34],[132,10,226,4],[132,16,226,10,"_this"],[132,21,226,14],[132,22,226,15,"setItem"],[132,29,226,22],[132,30,226,23],[132,36,226,29],[132,38,226,31,"data"],[132,42,226,35],[132,43,226,36],[133,10,227,4],[133,16,227,10,"_this"],[133,21,227,14],[133,22,227,15,"setItem"],[133,29,227,22],[133,30,227,23,"BlueApp"],[133,37,227,30],[133,38,227,31,"FLAG_ENCRYPTED"],[133,52,227,45],[133,54,227,47],[133,57,227,50],[133,58,227,51],[134,8,228,2],[134,9,228,3],[135,8,228,3],[135,25,228,3,"_x4"],[135,28,228,3],[136,10,228,3],[136,17,228,3,"_ref5"],[136,22,228,3],[136,23,228,3,"apply"],[136,28,228,3],[136,35,228,3,"arguments"],[136,44,228,3],[137,8,228,3],[138,6,228,3],[139,6,230,2],[140,0,231,0],[141,0,232,0],[142,0,233,0],[143,6,230,2],[143,11,234,2,"createFakeStorage"],[143,28,234,19],[144,8,234,19],[144,12,234,19,"_ref6"],[144,17,234,19],[144,24,234,19,"_asyncToGenerator2"],[144,42,234,19],[144,43,234,19,"default"],[144,50,234,19],[144,52,234,22],[144,63,234,29,"fakePassword"],[144,75,234,49],[144,77,234,72],[145,10,235,4,"usedBucketNum"],[145,23,235,17],[145,26,235,20],[145,31,235,25],[145,32,235,26],[145,33,235,27],[146,10,236,4,"_this"],[146,15,236,8],[146,16,236,9,"wallets"],[146,23,236,16],[146,26,236,19],[146,28,236,21],[147,10,237,4,"_this"],[147,15,237,8],[147,16,237,9,"tx_metadata"],[147,27,237,20],[147,30,237,23],[147,31,237,24],[147,32,237,25],[148,10,238,4,"_this"],[148,15,238,8],[148,16,238,9,"counterparty_metadata"],[148,37,238,30],[148,40,238,33],[148,41,238,34],[148,42,238,35],[149,10,240,4],[149,14,240,10,"data"],[149,18,240,30],[149,21,240,33],[150,12,241,6,"wallets"],[150,19,241,13],[150,21,241,15],[150,23,241,17],[151,12,242,6,"tx_metadata"],[151,23,242,17],[151,25,242,19],[151,26,242,20],[151,27,242,21],[152,12,243,6,"counterparty_metadata"],[152,33,243,27],[152,35,243,29],[152,36,243,30],[153,10,244,4],[153,11,244,5],[154,10,246,4],[154,14,246,8,"buckets"],[154,21,246,15],[154,30,246,24,"_this"],[154,35,246,28],[154,36,246,29,"getItem"],[154,43,246,36],[154,44,246,37],[154,50,246,43],[154,51,246,44],[155,10,247,4,"buckets"],[155,17,247,11],[155,20,247,14,"JSON"],[155,24,247,18],[155,25,247,19,"parse"],[155,30,247,24],[155,31,247,25,"buckets"],[155,38,247,32],[155,39,247,33],[156,10,248,4,"buckets"],[156,17,248,11],[156,18,248,12,"push"],[156,22,248,16],[156,23,248,17,"encryption"],[156,33,248,27],[156,34,248,28,"encrypt"],[156,41,248,35],[156,42,248,36,"JSON"],[156,46,248,40],[156,47,248,41,"stringify"],[156,56,248,50],[156,57,248,51,"data"],[156,61,248,55],[156,62,248,56],[156,64,248,58,"fakePassword"],[156,76,248,70],[156,77,248,71],[156,78,248,72],[157,10,249,4,"_this"],[157,15,249,8],[157,16,249,9,"cachedPassword"],[157,30,249,23],[157,33,249,26,"fakePassword"],[157,45,249,38],[158,10,250,4],[158,14,250,10,"bucketsString"],[158,27,250,23],[158,30,250,26,"JSON"],[158,34,250,30],[158,35,250,31,"stringify"],[158,44,250,40],[158,45,250,41,"buckets"],[158,52,250,48],[158,53,250,49],[159,10,251,4],[159,16,251,10,"_this"],[159,21,251,14],[159,22,251,15,"setItem"],[159,29,251,22],[159,30,251,23],[159,36,251,29],[159,38,251,31,"bucketsString"],[159,51,251,44],[159,52,251,45],[160,10,252,4],[160,17,252,11],[160,24,252,18,"_this"],[160,29,252,22],[160,30,252,23,"getItem"],[160,37,252,30],[160,38,252,31],[160,44,252,37],[160,45,252,38],[160,51,252,44,"bucketsString"],[160,64,252,57],[161,8,253,2],[161,9,253,3],[162,8,253,3],[162,25,253,3,"_x5"],[162,28,253,3],[163,10,253,3],[163,17,253,3,"_ref6"],[163,22,253,3],[163,23,253,3,"apply"],[163,28,253,3],[163,35,253,3,"arguments"],[163,44,253,3],[164,8,253,3],[165,6,253,3],[166,6,253,3],[166,11,255,2,"hashIt"],[166,17,255,8],[166,20,255,11],[166,30,255,12,"s"],[166,31,255,21],[166,33,255,34],[167,8,256,4],[167,15,256,11],[167,19,256,11,"createHash"],[167,38,256,21],[167,40,256,22],[167,48,256,30],[167,49,256,31],[167,50,256,32,"update"],[167,56,256,38],[167,57,256,39,"s"],[167,58,256,40],[167,59,256,41],[167,60,256,42,"digest"],[167,66,256,48],[167,67,256,49],[167,68,256,50],[167,69,256,51,"toString"],[167,77,256,59],[167,78,256,60],[167,83,256,65],[167,84,256,66],[168,6,257,2],[168,7,257,3],[169,6,492,2],[170,0,493,0],[171,0,494,0],[172,0,495,0],[173,0,496,0],[174,0,497,0],[175,6,492,2],[175,11,498,2,"deleteWallet"],[175,23,498,14],[175,26,498,17],[175,36,498,18,"wallet"],[175,42,498,33],[175,44,498,44],[176,8,499,4],[176,12,499,10,"ID"],[176,14,499,12],[176,17,499,15,"wallet"],[176,23,499,21],[176,24,499,22,"getID"],[176,29,499,27],[176,30,499,28],[176,31,499,29],[177,8,500,4],[177,12,500,10,"tempWallets"],[177,23,500,21],[177,26,500,24],[177,28,500,26],[178,8,502,4],[178,13,502,9],[178,17,502,15,"value"],[178,22,502,20],[178,26,502,24,"_this"],[178,31,502,28],[178,32,502,29,"wallets"],[178,39,502,36],[178,41,502,38],[179,10,503,6],[179,14,503,10,"value"],[179,19,503,15],[179,20,503,16,"getID"],[179,25,503,21],[179,26,503,22],[179,27,503,23],[179,32,503,28,"ID"],[179,34,503,30],[179,36,503,32],[180,12,504,8],[181,12,505,8],[182,10,505,8],[182,11,506,7],[182,17,506,13],[183,12,507,8],[184,12,508,8,"tempWallets"],[184,23,508,19],[184,24,508,20,"push"],[184,28,508,24],[184,29,508,25,"value"],[184,34,508,30],[184,35,508,31],[185,10,509,6],[186,8,510,4],[187,8,511,4,"_this"],[187,13,511,8],[187,14,511,9,"wallets"],[187,21,511,16],[187,24,511,19,"tempWallets"],[187,35,511,30],[188,6,512,2],[188,7,512,3],[189,6,734,2],[190,0,735,0],[191,0,736,0],[192,0,737,0],[193,0,738,0],[194,0,739,0],[195,6,734,2],[195,11,740,2,"fetchWalletBalances"],[195,30,740,21],[196,8,740,21],[196,12,740,21,"_ref7"],[196,17,740,21],[196,24,740,21,"_asyncToGenerator2"],[196,42,740,21],[196,43,740,21,"default"],[196,50,740,21],[196,52,740,24],[196,63,740,31,"index"],[196,68,740,45],[196,70,740,65],[197,10,741,4,"console"],[197,17,741,11],[197,18,741,12,"log"],[197,21,741,15],[197,22,741,16],[197,55,741,49],[197,57,741,51],[197,64,741,58,"index"],[197,69,741,63],[197,74,741,68],[197,85,741,79],[197,88,741,82],[197,95,741,89],[197,98,741,92,"index"],[197,103,741,97],[197,104,741,98],[198,10,742,4],[198,14,742,8,"index"],[198,19,742,13],[198,23,742,17,"index"],[198,28,742,22],[198,33,742,27],[198,34,742,28],[198,36,742,30],[199,12,743,6],[199,16,743,10,"c"],[199,17,743,11],[199,20,743,14],[199,21,743,15],[200,12,744,6],[200,17,744,11],[200,21,744,17,"wallet"],[200,27,744,23],[200,31,744,27,"_this"],[200,36,744,31],[200,37,744,32,"wallets"],[200,44,744,39],[200,46,744,41],[201,14,745,8],[201,18,745,12,"c"],[201,19,745,13],[201,21,745,15],[201,26,745,20,"index"],[201,31,745,25],[201,33,745,27],[202,16,746,10],[203,16,747,10],[203,20,747,14],[203,47,747,41],[203,51,747,45,"wallet"],[203,57,747,51],[203,61,747,55],[203,62,747,56,"wallet"],[203,68,747,62],[203,69,747,63,"usesBitcoinInfrastructure"],[203,94,747,88],[203,95,747,89],[203,96,747,90],[203,98,747,92],[204,18,748,12,"console"],[204,25,748,19],[204,26,748,20,"log"],[204,29,748,23],[204,30,748,24],[204,60,748,54],[204,62,748,56,"wallet"],[204,68,748,62],[204,69,748,63,"type"],[204,73,748,67],[204,74,748,68],[205,18,749,12],[206,16,750,10],[207,16,751,10],[207,22,751,16,"wallet"],[207,28,751,22],[207,29,751,23,"fetchBalance"],[207,41,751,35],[207,42,751,36],[207,43,751,37],[208,14,752,8],[209,12,753,6],[210,10,754,4],[210,11,754,5],[210,17,754,11],[211,12,755,6],[211,17,755,11],[211,21,755,17,"wallet"],[211,28,755,23],[211,32,755,27,"_this"],[211,37,755,31],[211,38,755,32,"wallets"],[211,45,755,39],[211,47,755,41],[212,14,756,8,"console"],[212,21,756,15],[212,22,756,16,"log"],[212,25,756,19],[212,26,756,20],[212,48,756,42],[212,50,756,44,"wallet"],[212,57,756,50],[212,58,756,51,"getLabel"],[212,66,756,59],[212,67,756,60],[212,68,756,61],[212,69,756,62],[213,14,757,8],[214,14,758,8],[214,18,758,12],[214,45,758,39],[214,49,758,43,"wallet"],[214,56,758,49],[214,60,758,53],[214,61,758,54,"wallet"],[214,68,758,60],[214,69,758,61,"usesBitcoinInfrastructure"],[214,94,758,86],[214,95,758,87],[214,96,758,88],[214,98,758,90],[215,16,759,10,"console"],[215,23,759,17],[215,24,759,18,"log"],[215,27,759,21],[215,28,759,22],[215,58,759,52],[215,60,759,54,"wallet"],[215,67,759,60],[215,68,759,61,"type"],[215,72,759,65],[215,73,759,66],[216,16,760,10],[217,14,761,8],[218,14,762,8],[218,20,762,14,"wallet"],[218,27,762,20],[218,28,762,21,"fetchBalance"],[218,40,762,33],[218,41,762,34],[218,42,762,35],[219,12,763,6],[220,10,764,4],[221,8,765,2],[221,9,765,3],[222,8,765,3],[222,25,765,3,"_x6"],[222,28,765,3],[223,10,765,3],[223,17,765,3,"_ref7"],[223,22,765,3],[223,23,765,3,"apply"],[223,28,765,3],[223,35,765,3,"arguments"],[223,44,765,3],[224,8,765,3],[225,6,765,3],[226,6,767,2],[227,0,768,0],[228,0,769,0],[229,0,770,0],[230,0,771,0],[231,0,772,0],[232,0,773,0],[233,0,774,0],[234,0,775,0],[235,0,776,0],[236,6,767,2],[236,11,777,2,"fetchWalletTransactions"],[236,34,777,25],[237,8,777,25],[237,12,777,25,"_ref8"],[237,17,777,25],[237,24,777,25,"_asyncToGenerator2"],[237,42,777,25],[237,43,777,25,"default"],[237,50,777,25],[237,52,777,28],[237,63,777,35,"index"],[237,68,777,49],[237,70,777,54],[238,10,778,4,"console"],[238,17,778,11],[238,18,778,12,"log"],[238,21,778,15],[238,22,778,16],[238,59,778,53],[238,61,778,55],[238,68,778,62,"index"],[238,73,778,67],[238,78,778,72],[238,89,778,83],[238,92,778,86],[238,99,778,93],[238,102,778,96,"index"],[238,107,778,101],[238,108,778,102],[239,10,779,4],[239,14,779,8,"index"],[239,19,779,13],[239,23,779,17,"index"],[239,28,779,22],[239,33,779,27],[239,34,779,28],[239,36,779,30],[240,12,780,6],[240,16,780,10,"c"],[240,17,780,11],[240,20,780,14],[240,21,780,15],[241,12,781,6],[241,17,781,11],[241,21,781,17,"wallet"],[241,27,781,23],[241,31,781,27,"_this"],[241,36,781,31],[241,37,781,32,"wallets"],[241,44,781,39],[241,46,781,41],[242,14,782,8],[242,18,782,12,"c"],[242,19,782,13],[242,21,782,15],[242,26,782,20,"index"],[242,31,782,25],[242,33,782,27],[243,16,783,10],[244,16,784,10],[244,20,784,14],[244,47,784,41],[244,51,784,45,"wallet"],[244,57,784,51],[244,61,784,55],[244,62,784,56,"wallet"],[244,68,784,62],[244,69,784,63,"usesBitcoinInfrastructure"],[244,94,784,88],[244,95,784,89],[244,96,784,90],[244,98,784,92],[245,18,785,12,"console"],[245,25,785,19],[245,26,785,20,"log"],[245,29,785,23],[245,30,785,24],[245,60,785,54],[245,62,785,56,"wallet"],[245,68,785,62],[245,69,785,63,"type"],[245,73,785,67],[245,74,785,68],[246,18,786,12],[247,16,787,10],[248,16,789,10],[248,22,789,16,"wallet"],[248,28,789,22],[248,29,789,23,"fetchTransactions"],[248,46,789,40],[248,47,789,41],[248,48,789,42],[249,16,791,10],[249,20,791,14],[249,46,791,40],[249,50,791,44,"wallet"],[249,56,791,50],[249,58,791,52],[250,18,792,12],[250,24,792,18,"wallet"],[250,30,792,24],[250,31,792,25,"fetchPendingTransactions"],[250,55,792,49],[250,56,792,50],[250,57,792,51],[251,18,793,12],[251,24,793,18,"wallet"],[251,30,793,24],[251,31,793,25,"fetchUserInvoices"],[251,48,793,42],[251,49,793,43],[251,50,793,44],[252,16,794,10],[253,14,795,8],[254,12,796,6],[255,10,797,4],[255,11,797,5],[255,17,797,11],[256,12,798,6],[256,17,798,11],[256,21,798,17,"wallet"],[256,29,798,23],[256,33,798,27,"_this"],[256,38,798,31],[256,39,798,32,"wallets"],[256,46,798,39],[256,48,798,41],[257,14,799,8],[258,14,800,8],[258,18,800,12],[258,45,800,39],[258,49,800,43,"wallet"],[258,57,800,49],[258,61,800,53],[258,62,800,54,"wallet"],[258,70,800,60],[258,71,800,61,"usesBitcoinInfrastructure"],[258,96,800,86],[258,97,800,87],[258,98,800,88],[258,100,800,90],[259,16,801,10,"console"],[259,23,801,17],[259,24,801,18,"log"],[259,27,801,21],[259,28,801,22],[259,58,801,52],[259,60,801,54,"wallet"],[259,68,801,60],[259,69,801,61,"type"],[259,73,801,65],[259,74,801,66],[260,16,802,10],[261,14,803,8],[262,14,805,8],[262,20,805,14,"wallet"],[262,28,805,20],[262,29,805,21,"fetchTransactions"],[262,46,805,38],[262,47,805,39],[262,48,805,40],[263,14,806,8],[263,18,806,12],[263,44,806,38],[263,48,806,42,"wallet"],[263,56,806,48],[263,58,806,50],[264,16,807,10],[264,22,807,16,"wallet"],[264,30,807,22],[264,31,807,23,"fetchPendingTransactions"],[264,55,807,47],[264,56,807,48],[264,57,807,49],[265,16,808,10],[265,22,808,16,"wallet"],[265,30,808,22],[265,31,808,23,"fetchUserInvoices"],[265,48,808,40],[265,49,808,41],[265,50,808,42],[266,14,809,8],[267,12,810,6],[268,10,811,4],[269,8,812,2],[269,9,812,3],[270,8,812,3],[270,25,812,3,"_x7"],[270,28,812,3],[271,10,812,3],[271,17,812,3,"_ref8"],[271,22,812,3],[271,23,812,3,"apply"],[271,28,812,3],[271,35,812,3,"arguments"],[271,44,812,3],[272,8,812,3],[273,6,812,3],[274,6,812,3],[274,11,814,2,"fetchSenderPaymentCodes"],[274,34,814,25],[275,8,814,25],[275,12,814,25,"_ref9"],[275,17,814,25],[275,24,814,25,"_asyncToGenerator2"],[275,42,814,25],[275,43,814,25,"default"],[275,50,814,25],[275,52,814,28],[275,63,814,35,"index"],[275,68,814,49],[275,70,814,54],[276,10,815,4,"console"],[276,17,815,11],[276,18,815,12,"log"],[276,21,815,15],[276,22,815,16],[276,59,815,53],[276,61,815,55],[276,68,815,62,"index"],[276,73,815,67],[276,78,815,72],[276,89,815,83],[276,92,815,86],[276,99,815,93],[276,102,815,96,"index"],[276,107,815,101],[276,108,815,102],[277,10,816,4],[277,14,816,8,"index"],[277,19,816,13],[277,23,816,17,"index"],[277,28,816,22],[277,33,816,27],[277,34,816,28],[277,36,816,30],[278,12,817,6],[278,16,817,12,"wallet"],[278,22,817,18],[278,25,817,21,"_this"],[278,30,817,25],[278,31,817,26,"wallets"],[278,38,817,33],[278,39,817,34,"index"],[278,44,817,39],[278,45,817,40],[279,12,818,6],[279,16,818,10],[280,14,819,8],[280,18,819,12],[280,20,819,14,"wallet"],[280,26,819,20],[280,27,819,21,"allowBIP47"],[280,37,819,31],[280,38,819,32],[280,39,819,33],[280,43,819,37,"wallet"],[280,49,819,43],[280,50,819,44,"isBIP47Enabled"],[280,64,819,58],[280,65,819,59],[280,66,819,60],[280,70,819,64],[280,100,819,94],[280,104,819,98,"wallet"],[280,110,819,104],[280,111,819,105],[280,113,819,107],[281,14,820,8],[281,20,820,14,"wallet"],[281,26,820,20],[281,27,820,21,"fetchBIP47SenderPaymentCodes"],[281,55,820,49],[281,56,820,50],[281,57,820,51],[282,12,821,6],[282,13,821,7],[282,14,821,8],[282,21,821,15,"error"],[282,26,821,20],[282,28,821,22],[283,14,822,8,"console"],[283,21,822,15],[283,22,822,16,"error"],[283,27,822,21],[283,28,822,22],[283,77,822,71],[283,79,822,73,"index"],[283,84,822,78],[283,86,822,80,"error"],[283,91,822,85],[283,92,822,86],[284,12,823,6],[285,10,824,4],[285,11,824,5],[285,17,824,11],[286,12,825,6],[286,17,825,11],[286,21,825,17,"wallet"],[286,29,825,23],[286,33,825,27,"_this"],[286,38,825,31],[286,39,825,32,"wallets"],[286,46,825,39],[286,48,825,41],[287,14,826,8],[287,18,826,12],[288,16,827,10],[288,20,827,14],[288,22,827,16,"wallet"],[288,30,827,22],[288,31,827,23,"allowBIP47"],[288,41,827,33],[288,42,827,34],[288,43,827,35],[288,47,827,39,"wallet"],[288,55,827,45],[288,56,827,46,"isBIP47Enabled"],[288,70,827,60],[288,71,827,61],[288,72,827,62],[288,76,827,66],[288,106,827,96],[288,110,827,100,"wallet"],[288,118,827,106],[288,119,827,107],[288,121,827,109],[289,16,828,10],[289,22,828,16,"wallet"],[289,30,828,22],[289,31,828,23,"fetchBIP47SenderPaymentCodes"],[289,59,828,51],[289,60,828,52],[289,61,828,53],[290,14,829,8],[290,15,829,9],[290,16,829,10],[290,23,829,17,"error"],[290,28,829,22],[290,30,829,24],[291,16,830,10,"console"],[291,23,830,17],[291,24,830,18,"error"],[291,29,830,23],[291,30,830,24],[291,79,830,73],[291,81,830,75,"wallet"],[291,89,830,81],[291,90,830,82,"label"],[291,95,830,87],[291,97,830,89,"error"],[291,102,830,94],[291,103,830,95],[292,14,831,8],[293,12,832,6],[294,10,833,4],[295,8,834,2],[295,9,834,3],[296,8,834,3],[296,25,834,3,"_x8"],[296,28,834,3],[297,10,834,3],[297,17,834,3,"_ref9"],[297,22,834,3],[297,23,834,3,"apply"],[297,28,834,3],[297,35,834,3,"arguments"],[297,44,834,3],[298,8,834,3],[299,6,834,3],[300,6,834,3],[300,11,836,2,"getWallets"],[300,21,836,12],[300,24,836,15],[300,36,836,32],[301,8,837,4],[301,15,837,11,"_this"],[301,20,837,15],[301,21,837,16,"wallets"],[301,28,837,23],[302,6,838,2],[302,7,838,3],[303,6,840,2],[304,0,841,0],[305,0,842,0],[306,0,843,0],[307,0,844,0],[308,0,845,0],[309,0,846,0],[310,0,847,0],[311,6,840,2],[311,11,848,2,"getTransactions"],[311,26,848,17],[311,29,848,20],[311,39,849,4,"index"],[311,44,849,18],[311,46,852,30],[312,8,852,30],[312,12,850,4,"limit"],[312,17,850,17],[312,20,850,17,"arguments"],[312,29,850,17],[312,30,850,17,"length"],[312,36,850,17],[312,44,850,17,"arguments"],[312,53,850,17],[312,61,850,17,"undefined"],[312,70,850,17],[312,73,850,17,"arguments"],[312,82,850,17],[312,88,850,20,"Infinity"],[312,96,850,28],[313,8,850,28],[313,12,851,4,"includeWalletsWithHideTransactionsEnabled"],[313,53,851,54],[313,56,851,54,"arguments"],[313,65,851,54],[313,66,851,54,"length"],[313,72,851,54],[313,80,851,54,"arguments"],[313,89,851,54],[313,97,851,54,"undefined"],[313,106,851,54],[313,109,851,54,"arguments"],[313,118,851,54],[313,124,851,57],[313,129,851,62],[314,8,853,4],[314,12,853,8,"index"],[314,17,853,13],[314,21,853,17,"index"],[314,26,853,22],[314,31,853,27],[314,32,853,28],[314,34,853,30],[315,10,854,6],[315,14,854,10,"txs"],[315,18,854,28],[315,21,854,31],[315,23,854,33],[316,10,855,6],[316,14,855,10,"c"],[316,15,855,11],[316,18,855,14],[316,19,855,15],[317,10,855,16],[317,14,855,16,"_loop"],[317,19,855,16],[317,31,855,16,"_loop"],[317,37,855,16],[317,39,856,41],[318,14,857,8],[318,18,857,12,"c"],[318,19,857,13],[318,21,857,15],[318,26,857,20,"index"],[318,31,857,25],[318,33,857,27],[319,16,858,10,"txs"],[319,20,858,13],[319,23,858,16,"txs"],[319,27,858,19],[319,28,858,20,"concat"],[319,34,858,26],[319,35,858,27,"wallet"],[319,41,858,33],[319,42,858,34,"getTransactions"],[319,57,858,49],[319,58,858,50],[319,59,858,51],[319,60,858,52],[320,16,860,10],[320,20,860,16,"txsRet"],[320,26,860,45],[320,29,860,48],[320,31,860,50],[321,16,861,10],[321,20,861,16,"walletID"],[321,28,861,24],[321,31,861,27,"wallet"],[321,37,861,33],[321,38,861,34,"getID"],[321,43,861,39],[321,44,861,40],[321,45,861,41],[322,16,862,10],[322,20,862,16,"walletPreferredBalanceUnit"],[322,46,862,42],[322,49,862,45,"wallet"],[322,55,862,51],[322,56,862,52,"getPreferredBalanceUnit"],[322,79,862,75],[322,80,862,76],[322,81,862,77],[323,16,863,10,"txs"],[323,20,863,13],[323,21,863,14,"map"],[323,24,863,17],[323,25,863,18],[323,35,863,18,"tx"],[323,37,863,20],[324,18,863,20],[324,25,864,12,"txsRet"],[324,31,864,18],[324,32,864,19,"push"],[324,36,864,23],[324,37,864,23,"Object"],[324,43,864,23],[324,44,864,23,"assign"],[324,50,864,23],[324,55,865,17,"tx"],[324,57,865,19],[325,20,866,14,"walletID"],[325,28,866,22],[325,30,866,14,"walletID"],[325,38,866,22],[326,20,867,14,"walletPreferredBalanceUnit"],[326,46,867,40],[326,48,867,14,"walletPreferredBalanceUnit"],[327,18,867,40],[327,20,868,13],[327,21,868,14],[328,16,868,14],[328,17,869,10],[328,18,869,11],[329,16,869,12],[330,18,869,12,"v"],[330,19,869,12],[330,21,870,17,"txsRet"],[331,16,870,23],[332,14,871,8],[333,12,872,6],[333,13,872,7],[334,12,872,7,"_ret"],[334,16,872,7],[335,10,856,6],[335,15,856,11],[335,19,856,17,"wallet"],[335,25,856,23],[335,29,856,27,"_this"],[335,34,856,31],[335,35,856,32,"wallets"],[335,42,856,39],[336,12,856,39,"_ret"],[336,16,856,39],[336,19,856,39,"_loop"],[336,24,856,39],[337,12,856,39],[337,16,856,39,"_ret"],[337,20,856,39],[337,29,856,39,"_ret"],[337,33,856,39],[337,34,856,39,"v"],[337,35,856,39],[338,10,856,39],[339,8,873,4],[340,8,875,4],[340,12,875,10,"txs"],[340,15,875,36],[340,18,875,39],[340,20,875,41],[341,8,876,4],[341,13,876,9],[341,17,876,15,"wallet"],[341,25,876,21],[341,29,876,25,"_this"],[341,34,876,29],[341,35,876,30,"wallets"],[341,42,876,37],[341,43,876,38,"filter"],[341,49,876,44],[341,50,876,45],[341,60,876,45,"w"],[341,61,876,46],[342,10,876,46],[342,17,876,50,"includeWalletsWithHideTransactionsEnabled"],[342,58,876,91],[342,62,876,95],[342,63,876,96,"w"],[342,64,876,97],[342,65,876,98,"getHideTransactionsInWalletsList"],[342,97,876,130],[342,98,876,131],[342,99,876,132],[343,8,876,132],[343,10,876,133],[343,12,876,135],[344,10,877,6],[344,14,877,12,"walletTransactions"],[344,32,877,45],[344,35,877,48,"wallet"],[344,43,877,54],[344,44,877,55,"getTransactions"],[344,59,877,70],[344,60,877,71],[344,61,877,72],[345,10,878,6],[345,14,878,12,"walletID"],[345,22,878,20],[345,25,878,23,"wallet"],[345,33,878,29],[345,34,878,30,"getID"],[345,39,878,35],[345,40,878,36],[345,41,878,37],[346,10,879,6],[346,14,879,12,"walletPreferredBalanceUnit"],[346,40,879,38],[346,43,879,41,"wallet"],[346,51,879,47],[346,52,879,48,"getPreferredBalanceUnit"],[346,75,879,71],[346,76,879,72],[346,77,879,73],[347,10,880,6],[347,15,880,11],[347,19,880,17,"t"],[347,20,880,18],[347,24,880,22,"walletTransactions"],[347,42,880,40],[347,44,880,42],[348,12,881,8,"txs"],[348,15,881,11],[348,16,881,12,"push"],[348,20,881,16],[348,21,881,16,"Object"],[348,27,881,16],[348,28,881,16,"assign"],[348,34,881,16],[348,39,882,13,"t"],[348,40,882,14],[349,14,883,10,"walletID"],[349,22,883,18],[349,24,883,10,"walletID"],[349,32,883,18],[350,14,884,10,"walletPreferredBalanceUnit"],[350,40,884,36],[350,42,884,10,"walletPreferredBalanceUnit"],[351,12,884,36],[351,14,885,9],[351,15,885,10],[352,10,886,6],[353,8,887,4],[354,8,889,4],[354,15,889,11,"txs"],[354,18,889,14],[354,19,890,7,"sort"],[354,23,890,11],[354,24,890,12],[354,34,890,13,"a"],[354,35,890,14],[354,37,890,16,"b"],[354,38,890,17],[354,40,890,22],[355,10,891,8],[355,14,891,14,"bTime"],[355,19,891,19],[355,22,891,22],[355,26,891,26,"Date"],[355,30,891,30],[355,31,891,31,"b"],[355,32,891,32],[355,33,891,33,"received"],[355,41,891,42],[355,42,891,43],[355,43,891,44,"getTime"],[355,50,891,51],[355,51,891,52],[355,52,891,53],[356,10,892,8],[356,14,892,14,"aTime"],[356,19,892,19],[356,22,892,22],[356,26,892,26,"Date"],[356,30,892,30],[356,31,892,31,"a"],[356,32,892,32],[356,33,892,33,"received"],[356,41,892,42],[356,42,892,43],[356,43,892,44,"getTime"],[356,50,892,51],[356,51,892,52],[356,52,892,53],[357,10,893,8],[357,17,893,15,"bTime"],[357,22,893,20],[357,25,893,23,"aTime"],[357,30,893,28],[358,8,894,6],[358,9,894,7],[358,10,894,8],[358,11,895,7,"slice"],[358,16,895,12],[358,17,895,13],[358,18,895,14],[358,20,895,16,"limit"],[358,25,895,21],[358,26,895,22],[359,6,896,2],[359,7,896,3],[360,6,898,2],[361,0,899,0],[362,0,900,0],[363,6,898,2],[363,11,901,2,"getBalance"],[363,21,901,12],[363,24,901,15],[363,36,901,29],[364,8,902,4],[364,12,902,8,"finalBalance"],[364,24,902,20],[364,27,902,23],[364,28,902,24],[365,8,903,4],[365,13,903,9],[365,17,903,15,"wal"],[365,20,903,18],[365,24,903,22,"_this"],[365,29,903,26],[365,30,903,27,"wallets"],[365,37,903,34],[365,39,903,36],[366,10,904,6,"finalBalance"],[366,22,904,18],[366,26,904,22,"wal"],[366,29,904,25],[366,30,904,26,"getBalance"],[366,40,904,36],[366,41,904,37],[366,42,904,38],[367,8,905,4],[368,8,906,4],[368,15,906,11,"finalBalance"],[368,27,906,23],[369,6,907,2],[369,7,907,3],[370,6,907,3],[370,11,909,2,"isHandoffEnabled"],[370,27,909,18],[370,47,909,18,"_asyncToGenerator2"],[370,65,909,18],[370,66,909,18,"default"],[370,73,909,18],[370,75,909,21],[370,88,909,51],[371,8,910,4],[371,12,910,8],[372,10,911,6],[372,17,911,13],[372,18,911,14],[372,26,911,22,"AsyncStorage"],[372,47,911,34],[372,48,911,35,"getItem"],[372,55,911,42],[372,56,911,43,"BlueApp"],[372,63,911,50],[372,64,911,51,"HANDOFF_STORAGE_KEY"],[372,83,911,70],[372,84,911,71],[372,85,911,72],[373,8,912,4],[373,9,912,5],[373,10,912,6],[373,17,912,13,"_"],[373,18,912,14],[373,20,912,16],[373,21,912,17],[374,8,913,4],[374,15,913,11],[374,20,913,16],[375,6,914,2],[375,7,914,3],[376,6,914,3],[376,11,916,2,"setIsHandoffEnabled"],[376,30,916,21],[377,8,916,21],[377,12,916,21,"_ref1"],[377,17,916,21],[377,24,916,21,"_asyncToGenerator2"],[377,42,916,21],[377,43,916,21,"default"],[377,50,916,21],[377,52,916,24],[377,63,916,31,"value"],[377,68,916,45],[377,70,916,65],[378,10,917,4],[378,16,917,10,"AsyncStorage"],[378,37,917,22],[378,38,917,23,"setItem"],[378,45,917,30],[378,46,917,31,"BlueApp"],[378,53,917,38],[378,54,917,39,"HANDOFF_STORAGE_KEY"],[378,73,917,58],[378,75,917,60,"value"],[378,80,917,65],[378,83,917,68],[378,86,917,71],[378,89,917,74],[378,91,917,76],[378,92,917,77],[379,8,918,2],[379,9,918,3],[380,8,918,3],[380,25,918,3,"_x9"],[380,28,918,3],[381,10,918,3],[381,17,918,3,"_ref1"],[381,22,918,3],[381,23,918,3,"apply"],[381,28,918,3],[381,35,918,3,"arguments"],[381,44,918,3],[382,8,918,3],[383,6,918,3],[384,6,918,3],[384,11,920,2,"isDoNotTrackEnabled"],[384,30,920,21],[384,50,920,21,"_asyncToGenerator2"],[384,68,920,21],[384,69,920,21,"default"],[384,76,920,21],[384,78,920,24],[384,91,920,54],[385,8,921,4],[385,12,921,8],[386,10,922,6],[386,14,922,12,"keyExists"],[386,23,922,21],[386,32,922,30,"AsyncStorage"],[386,53,922,42],[386,54,922,43,"getItem"],[386,61,922,50],[386,62,922,51,"BlueApp"],[386,69,922,58],[386,70,922,59,"DO_NOT_TRACK"],[386,82,922,71],[386,83,922,72],[387,10,923,6],[387,14,923,10,"keyExists"],[387,23,923,19],[387,28,923,24],[387,32,923,28],[387,34,923,30],[388,12,924,8],[388,16,924,14,"doNotTrackValue"],[388,32,924,29],[388,35,924,32],[388,36,924,33],[388,37,924,34,"keyExists"],[388,46,924,43],[389,12,925,8],[389,16,925,12,"doNotTrackValue"],[389,32,925,27],[389,34,925,29],[390,14,926,10],[390,20,926,16,"DefaultPreference"],[390,57,926,33],[390,58,926,34,"set"],[390,61,926,37],[390,62,926,38,"BlueApp"],[390,69,926,45],[390,70,926,46,"DO_NOT_TRACK"],[390,82,926,58],[390,84,926,60],[390,87,926,63],[390,88,926,64],[391,14,927,10,"AsyncStorage"],[391,35,927,22],[391,36,927,23,"removeItem"],[391,46,927,33],[391,47,927,34,"BlueApp"],[391,54,927,41],[391,55,927,42,"DO_NOT_TRACK"],[391,67,927,54],[391,68,927,55],[392,12,928,8],[392,13,928,9],[392,19,928,15],[393,14,929,10],[393,21,929,17,"Boolean"],[393,28,929,24],[393,35,929,31,"DefaultPreference"],[393,72,929,48],[393,73,929,49,"get"],[393,76,929,52],[393,77,929,53,"BlueApp"],[393,84,929,60],[393,85,929,61,"DO_NOT_TRACK"],[393,97,929,73],[393,98,929,74],[393,99,929,75],[394,12,930,8],[395,10,931,6],[396,8,932,4],[396,9,932,5],[396,10,932,6],[396,17,932,13,"_"],[396,18,932,14],[396,20,932,16],[396,21,932,17],[397,8,933,4],[397,12,933,10,"doNotTrackValue"],[397,27,933,25],[397,36,933,34,"DefaultPreference"],[397,73,933,51],[397,74,933,52,"get"],[397,77,933,55],[397,78,933,56,"BlueApp"],[397,85,933,63],[397,86,933,64,"DO_NOT_TRACK"],[397,98,933,76],[397,99,933,77],[398,8,934,4],[398,15,934,11,"doNotTrackValue"],[398,30,934,26],[398,35,934,31],[398,38,934,34],[398,42,934,38],[398,47,934,43],[399,6,935,2],[399,7,935,3],[400,6,935,3],[400,11,937,2,"setDoNotTrack"],[400,24,937,15],[401,8,937,15],[401,12,937,15,"_ref11"],[401,18,937,15],[401,25,937,15,"_asyncToGenerator2"],[401,43,937,15],[401,44,937,15,"default"],[401,51,937,15],[401,53,937,18],[401,64,937,25,"value"],[401,69,937,39],[401,71,937,44],[402,10,938,4],[402,14,938,8,"value"],[402,19,938,13],[402,21,938,15],[403,12,939,6],[403,18,939,12,"DefaultPreference"],[403,55,939,29],[403,56,939,30,"set"],[403,59,939,33],[403,60,939,34,"BlueApp"],[403,67,939,41],[403,68,939,42,"DO_NOT_TRACK"],[403,80,939,54],[403,82,939,56],[403,85,939,59],[403,86,939,60],[404,10,940,4],[404,11,940,5],[404,17,940,11],[405,12,941,6],[405,18,941,12,"DefaultPreference"],[405,55,941,29],[405,56,941,30,"clear"],[405,61,941,35],[405,62,941,36,"BlueApp"],[405,69,941,43],[405,70,941,44,"DO_NOT_TRACK"],[405,82,941,56],[405,83,941,57],[406,10,942,4],[407,8,943,2],[407,9,943,3],[408,8,943,3],[408,25,943,3,"_x0"],[408,28,943,3],[409,10,943,3],[409,17,943,3,"_ref11"],[409,23,943,3],[409,24,943,3,"apply"],[409,29,943,3],[409,36,943,3,"arguments"],[409,45,943,3],[410,8,943,3],[411,6,943,3],[412,6,945,2],[413,0,946,0],[414,0,947,0],[415,6,945,2],[415,11,948,2,"sleep"],[415,16,948,7],[415,19,948,10],[415,29,948,11,"ms"],[415,31,948,21],[415,33,948,41],[416,8,949,4],[416,15,949,11],[416,19,949,15,"Promise"],[416,26,949,22],[416,27,949,23],[416,37,949,23,"resolve"],[416,44,949,30],[417,10,949,30],[417,17,949,34,"setTimeout"],[417,27,949,44],[417,28,949,45,"resolve"],[417,35,949,52],[417,37,949,54,"ms"],[417,39,949,56],[417,40,949,57],[418,8,949,57],[418,10,949,58],[419,6,950,2],[419,7,950,3],[420,6,84,4],[420,10,84,8],[420,11,84,9,"wallets"],[420,18,84,16],[420,21,84,19],[420,23,84,21],[421,6,85,4],[421,10,85,8],[421,11,85,9,"tx_metadata"],[421,22,85,20],[421,25,85,23],[421,26,85,24],[421,27,85,25],[422,6,86,4],[422,10,86,8],[422,11,86,9,"counterparty_metadata"],[422,32,86,30],[422,35,86,33],[422,36,86,34],[422,37,86,35],[423,6,87,4],[423,10,87,8],[423,11,87,9,"cachedPassword"],[423,25,87,23],[423,28,87,26],[423,33,87,31],[424,4,88,2],[425,4,88,3],[425,15,88,3,"_createClass2"],[425,28,88,3],[425,29,88,3,"default"],[425,36,88,3],[425,38,88,3,"BlueApp"],[425,45,88,3],[426,6,88,3,"key"],[426,9,88,3],[427,6,88,3,"value"],[427,11,88,3],[428,8,88,3],[428,12,88,3,"_migrateKeys"],[428,24,88,3],[428,31,88,3,"_asyncToGenerator2"],[428,49,88,3],[428,50,88,3,"default"],[428,57,88,3],[428,59,98,2],[428,72,98,22],[429,10,99,4],[430,10,100,4],[430,14,100,8],[430,15,100,9,"isReactNative"],[430,28,100,22],[430,30,100,24],[431,12,101,6],[432,10,102,4],[433,10,104,4],[433,15,104,9],[433,19,104,15,"key"],[433,22,104,18],[433,26,104,22,"BlueApp"],[433,33,104,29],[433,34,104,30,"keys2migrate"],[433,46,104,42],[433,48,104,44],[434,12,105,6],[434,16,105,10],[435,14,106,8],[435,18,106,14,"value"],[435,23,106,19],[435,32,106,28,"RNSecureKeyStore"],[435,66,106,44],[435,67,106,45,"get"],[435,70,106,48],[435,71,106,49,"key"],[435,74,106,52],[435,75,106,53],[436,14,107,8],[436,18,107,12,"value"],[436,23,107,17],[436,25,107,19],[437,16,108,10],[437,22,108,16,"AsyncStorage"],[437,43,108,28],[437,44,108,29,"setItem"],[437,51,108,36],[437,52,108,37,"key"],[437,55,108,40],[437,57,108,42,"value"],[437,62,108,47],[437,63,108,48],[438,16,109,10],[438,22,109,16,"RNSecureKeyStore"],[438,56,109,32],[438,57,109,33,"remove"],[438,63,109,39],[438,64,109,40,"key"],[438,67,109,43],[438,68,109,44],[439,14,110,8],[440,12,111,6],[440,13,111,7],[440,14,111,8],[440,21,111,15,"_"],[440,22,111,16],[440,24,111,18],[440,25,111,19],[441,10,112,4],[442,8,113,2],[442,9,113,3],[443,8,113,3],[443,17,98,8,"migrateKeys"],[443,28,98,19,"migrateKeys"],[443,29,98,19],[444,10,98,19],[444,17,98,19,"_migrateKeys"],[444,29,98,19],[444,30,98,19,"apply"],[444,35,98,19],[444,42,98,19,"arguments"],[444,51,98,19],[445,8,98,19],[446,8,98,19],[446,15,98,8,"migrateKeys"],[446,26,98,19],[447,6,98,19],[448,4,98,19],[449,6,98,19,"key"],[449,9,98,19],[450,6,98,19,"value"],[450,11,98,19],[451,6,181,2],[452,0,182,0],[453,0,183,0],[454,0,184,0],[455,6,185,2],[455,15,185,2,"decryptData"],[455,26,185,13,"decryptData"],[455,27,185,14,"data"],[455,31,185,26],[455,33,185,28,"password"],[455,41,185,44],[455,43,185,64],[456,8,186,4,"data"],[456,12,186,8],[456,15,186,11,"JSON"],[456,19,186,15],[456,20,186,16,"parse"],[456,25,186,21],[456,26,186,22,"data"],[456,30,186,26],[456,31,186,27],[457,8,187,4],[457,12,187,8,"decrypted"],[457,21,187,17],[458,8,188,4],[458,12,188,8,"num"],[458,15,188,11],[458,18,188,14],[458,19,188,15],[459,8,189,4],[459,13,189,9],[459,17,189,15,"value"],[459,22,189,20],[459,26,189,24,"data"],[459,30,189,28],[459,32,189,30],[460,10,190,6,"decrypted"],[460,19,190,15],[460,22,190,18,"encryption"],[460,32,190,28],[460,33,190,29,"decrypt"],[460,40,190,36],[460,41,190,37,"value"],[460,46,190,42],[460,48,190,44,"password"],[460,56,190,52],[460,57,190,53],[461,10,192,6],[461,14,192,10,"decrypted"],[461,23,192,19],[461,25,192,21],[462,12,193,8,"usedBucketNum"],[462,25,193,21],[462,28,193,24,"num"],[462,31,193,27],[463,12,194,8],[463,19,194,15,"decrypted"],[463,28,194,24],[464,10,195,6],[465,10,196,6,"num"],[465,13,196,9],[465,15,196,11],[466,8,197,4],[467,8,199,4],[467,15,199,11],[467,20,199,16],[468,6,200,2],[469,4,200,3],[470,6,200,3,"key"],[470,9,200,3],[471,6,200,3,"value"],[471,11,200,3],[472,6,259,2],[473,0,260,0],[474,0,261,0],[475,0,262,0],[476,6,259,2],[477,8,259,2],[477,12,259,2,"_getRealmForTransactions"],[477,36,259,2],[477,43,259,2,"_asyncToGenerator2"],[477,61,259,2],[477,62,259,2,"default"],[477,69,259,2],[477,71,263,2],[477,84,263,34],[478,10,264,4],[478,14,264,10,"cacheFolderPath"],[478,29,264,25],[478,32,264,28,"RNFS"],[478,54,264,32],[478,55,264,33,"CachesDirectoryPath"],[478,74,264,52],[478,75,264,53],[478,76,264,54],[479,10,265,4],[479,14,265,10,"password"],[479,22,265,18],[479,25,265,21],[479,29,265,25],[479,30,265,26,"hashIt"],[479,36,265,32],[479,37,265,33],[479,41,265,37],[479,42,265,38,"cachedPassword"],[479,56,265,52],[479,60,265,56],[479,81,265,77],[479,82,265,78],[480,10,266,4],[480,14,266,10,"buf"],[480,17,266,13],[480,20,266,16,"Buffer"],[480,26,266,22],[480,27,266,23,"from"],[480,31,266,27],[480,32,266,28],[480,36,266,32],[480,37,266,33,"hashIt"],[480,43,266,39],[480,44,266,40,"password"],[480,52,266,48],[480,53,266,49],[480,56,266,52],[480,60,266,56],[480,61,266,57,"hashIt"],[480,67,266,63],[480,68,266,64,"password"],[480,76,266,72],[480,77,266,73],[480,79,266,75],[480,84,266,80],[480,85,266,81],[481,10,267,4],[481,14,267,10,"encryptionKey"],[481,27,267,23],[481,30,267,26,"Int8Array"],[481,39,267,35],[481,40,267,36,"from"],[481,44,267,40],[481,45,267,41,"buf"],[481,48,267,44],[481,49,267,45],[482,10,268,4],[482,14,268,10,"fileName"],[482,22,268,18],[482,25,268,21],[482,29,268,25],[482,30,268,26,"hashIt"],[482,36,268,32],[482,37,268,33],[482,41,268,37],[482,42,268,38,"hashIt"],[482,48,268,44],[482,49,268,45,"password"],[482,57,268,53],[482,58,268,54],[482,59,268,55],[482,62,268,58],[482,89,268,85],[483,10,269,4],[483,14,269,10,"path"],[483,18,269,14],[483,21,269,17],[483,24,269,20,"cacheFolderPath"],[483,39,269,35],[483,43,269,39,"fileName"],[483,51,269,47],[483,53,269,49],[483,54,269,50],[483,55,269,51],[485,10,271,4],[485,14,271,10,"schema"],[485,20,271,16],[485,23,271,19],[485,24,272,6],[486,12,273,8,"name"],[486,16,273,12],[486,18,273,14],[486,38,273,34],[487,12,274,8,"properties"],[487,22,274,18],[487,24,274,20],[488,14,275,10,"walletid"],[488,22,275,18],[488,24,275,20],[489,16,275,22,"type"],[489,20,275,26],[489,22,275,28],[489,30,275,36],[490,16,275,38,"indexed"],[490,23,275,45],[490,25,275,47],[491,14,275,52],[491,15,275,53],[492,14,276,10,"internal"],[492,22,276,18],[492,24,276,20],[492,31,276,27],[493,14,276,29],[494,14,277,10,"index"],[494,19,277,15],[494,21,277,17],[494,27,277,23],[495,14,278,10,"tx"],[495,16,278,12],[495,18,278,14],[495,26,278,22],[495,27,278,24],[496,12,279,8],[497,10,280,6],[497,11,280,7],[497,12,281,5],[498,10,282,4],[499,10,283,4],[499,17,283,11,"Realm"],[499,31,283,16],[499,32,283,17,"open"],[499,36,283,21],[499,37,283,22],[500,12,284,6],[501,12,285,6,"schema"],[501,18,285,12],[501,20,285,6,"schema"],[501,26,285,12],[502,12,286,6,"path"],[502,16,286,10],[502,18,286,6,"path"],[502,22,286,10],[503,12,287,6,"encryptionKey"],[503,25,287,19],[503,27,287,6,"encryptionKey"],[503,40,287,19],[504,12,288,6,"excludeFromIcloudBackup"],[504,35,288,29],[504,37,288,31],[505,10,289,4],[505,11,289,5],[505,12,289,6],[506,8,290,2],[506,9,290,3],[507,8,290,3],[507,17,263,8,"getRealmForTransactions"],[507,40,263,31,"getRealmForTransactions"],[507,41,263,31],[508,10,263,31],[508,17,263,31,"_getRealmForTransactions"],[508,41,263,31],[508,42,263,31,"apply"],[508,47,263,31],[508,54,263,31,"arguments"],[508,63,263,31],[509,8,263,31],[510,8,263,31],[510,15,263,8,"getRealmForTransactions"],[510,38,263,31],[511,6,263,31],[512,6,292,2],[513,0,293,0],[514,0,294,0],[515,0,295,0],[516,0,296,0],[517,0,297,0],[518,6,292,2],[519,4,292,2],[520,6,292,2,"key"],[520,9,292,2],[521,6,292,2,"value"],[521,11,292,2],[522,8,292,2],[522,12,292,2,"_openRealmKeyValue"],[522,30,292,2],[522,37,292,2,"_asyncToGenerator2"],[522,55,292,2],[522,56,292,2,"default"],[522,63,292,2],[522,65,298,2],[522,78,298,44],[523,10,299,4],[523,14,299,10,"cacheFolderPath"],[523,29,299,25],[523,32,299,28,"RNFS"],[523,54,299,32],[523,55,299,33,"CachesDirectoryPath"],[523,74,299,52],[523,75,299,53],[523,76,299,54],[524,10,300,4],[524,14,300,10,"service"],[524,21,300,17],[524,24,300,20],[524,46,300,42],[525,10,301,4],[525,14,301,8,"password"],[525,22,301,16],[526,10,302,4],[526,14,302,10,"credentials"],[526,25,302,21],[526,34,302,30,"Keychain"],[526,62,302,38],[526,63,302,39,"getGenericPassword"],[526,81,302,57],[526,82,302,58],[527,12,302,60,"service"],[527,19,302,67],[527,21,302,60,"service"],[528,10,302,68],[528,11,302,69],[528,12,302,70],[529,10,303,4],[529,14,303,8,"credentials"],[529,25,303,19],[529,27,303,21],[530,12,304,6,"password"],[530,20,304,14],[530,23,304,17,"credentials"],[530,34,304,28],[530,35,304,29,"password"],[530,43,304,37],[531,10,305,4],[531,11,305,5],[531,17,305,11],[532,12,306,6],[532,16,306,12,"buf"],[532,20,306,15],[532,29,306,24],[532,33,306,24,"randomBytes"],[532,64,306,24],[532,65,306,24,"randomBytes"],[532,85,306,35],[532,87,306,36],[532,89,306,38],[532,90,306,39],[533,12,307,6,"password"],[533,20,307,14],[533,23,307,17,"buf"],[533,27,307,20],[533,28,307,21,"toString"],[533,36,307,29],[533,37,307,30],[533,42,307,35],[533,43,307,36],[534,12,308,6],[534,18,308,12,"Keychain"],[534,46,308,20],[534,47,308,21,"setGenericPassword"],[534,65,308,39],[534,66,308,40,"service"],[534,73,308,47],[534,75,308,49,"password"],[534,83,308,57],[534,85,308,59],[535,14,308,61,"service"],[535,21,308,68],[535,23,308,61,"service"],[536,12,308,69],[536,13,308,70],[536,14,308,71],[537,10,309,4],[538,10,311,4],[538,14,311,10,"buf"],[538,17,311,13],[538,20,311,16,"Buffer"],[538,26,311,22],[538,27,311,23,"from"],[538,31,311,27],[538,32,311,28,"password"],[538,40,311,36],[538,42,311,38],[538,47,311,43],[538,48,311,44],[539,10,312,4],[539,14,312,10,"encryptionKey"],[539,27,312,23],[539,30,312,26,"Int8Array"],[539,39,312,35],[539,40,312,36,"from"],[539,44,312,40],[539,45,312,41,"buf"],[539,48,312,44],[539,49,312,45],[540,10,313,4],[540,14,313,10,"path"],[540,18,313,14],[540,21,313,17],[540,24,313,20,"cacheFolderPath"],[540,39,313,35],[540,56,313,52],[540,57,313,53],[540,58,313,54],[542,10,315,4],[542,14,315,10,"schema"],[542,20,315,16],[542,23,315,19],[542,24,316,6],[543,12,317,8,"name"],[543,16,317,12],[543,18,317,14],[543,28,317,24],[544,12,318,8,"primaryKey"],[544,22,318,18],[544,24,318,20],[544,29,318,25],[545,12,319,8,"properties"],[545,22,319,18],[545,24,319,20],[546,14,320,10,"key"],[546,17,320,13],[546,19,320,15],[547,16,320,17,"type"],[547,20,320,21],[547,22,320,23],[547,30,320,31],[548,16,320,33,"indexed"],[548,23,320,40],[548,25,320,42],[549,14,320,47],[549,15,320,48],[550,14,321,10,"value"],[550,19,321,15],[550,21,321,17],[550,29,321,25],[550,30,321,27],[551,12,322,8],[552,10,323,6],[552,11,323,7],[552,12,324,5],[553,10,325,4],[554,10,326,4],[554,17,326,11,"Realm"],[554,31,326,16],[554,32,326,17,"open"],[554,36,326,21],[554,37,326,22],[555,12,327,6],[556,12,328,6,"schema"],[556,18,328,12],[556,20,328,6,"schema"],[556,26,328,12],[557,12,329,6,"path"],[557,16,329,10],[557,18,329,6,"path"],[557,22,329,10],[558,12,330,6,"encryptionKey"],[558,25,330,19],[558,27,330,6,"encryptionKey"],[558,40,330,19],[559,12,331,6,"excludeFromIcloudBackup"],[559,35,331,29],[559,37,331,31],[560,10,332,4],[560,11,332,5],[560,12,332,6],[561,8,333,2],[561,9,333,3],[562,8,333,3],[562,17,298,8,"openRealmKeyValue"],[562,34,298,25,"openRealmKeyValue"],[562,35,298,25],[563,10,298,25],[563,17,298,25,"_openRealmKeyValue"],[563,35,298,25],[563,36,298,25,"apply"],[563,41,298,25],[563,48,298,25,"arguments"],[563,57,298,25],[564,8,298,25],[565,8,298,25],[565,15,298,8,"openRealmKeyValue"],[565,32,298,25],[566,6,298,25],[567,4,298,25],[568,6,298,25,"key"],[568,9,298,25],[569,6,298,25,"value"],[569,11,298,25],[569,13,335,2],[569,22,335,2,"saveToRealmKeyValue"],[569,41,335,21,"saveToRealmKeyValue"],[569,42,335,22,"realmkeyValue"],[569,55,335,42],[569,57,335,44,"key"],[569,60,335,55],[569,62,335,57,"value"],[569,67,335,67],[569,69,335,69],[570,8,336,4,"realmkeyValue"],[570,21,336,17],[570,22,336,18,"write"],[570,27,336,23],[570,28,336,24],[570,40,336,30],[571,10,337,6,"realmkeyValue"],[571,23,337,19],[571,24,337,20,"create"],[571,30,337,26],[571,31,338,8],[571,41,338,18],[571,43,339,8],[572,12,340,10,"key"],[572,15,340,13],[572,17,340,10,"key"],[572,20,340,13],[573,12,341,10,"value"],[573,17,341,15],[573,19,341,10,"value"],[574,10,342,8],[574,11,342,9],[574,13,343,8,"Realm"],[574,27,343,13],[574,28,343,14,"UpdateMode"],[574,38,343,24],[574,39,343,25,"Modified"],[574,47,344,6],[574,48,344,7],[575,8,345,4],[575,9,345,5],[575,10,345,6],[576,6,346,2],[578,6,348,2],[579,0,349,0],[580,0,350,0],[581,0,351,0],[582,0,352,0],[583,0,353,0],[584,0,354,0],[585,4,348,2],[586,6,348,2,"key"],[586,9,348,2],[587,6,348,2,"value"],[587,11,348,2],[588,8,348,2],[588,12,348,2,"_loadFromDisk"],[588,25,348,2],[588,32,348,2,"_asyncToGenerator2"],[588,50,348,2],[588,51,348,2,"default"],[588,58,348,2],[588,60,355,2],[588,71,355,21,"password"],[588,79,355,38],[588,81,355,58],[589,10,355,58],[589,14,355,58,"_this2"],[589,20,355,58],[590,10,356,4],[591,10,357,4],[591,14,357,8],[592,12,358,6],[592,18,358,12],[592,22,358,16],[592,23,358,17,"moveRealmFilesToCacheDirectory"],[592,53,358,47],[592,54,358,48],[592,55,358,49],[593,10,359,4],[593,11,359,5],[593,12,359,6],[593,19,359,13,"error"],[593,24,359,23],[593,26,359,25],[594,12,360,6,"console"],[594,19,360,13],[594,20,360,14,"warn"],[594,24,360,18],[594,25,360,19],[594,64,360,58],[594,66,360,60,"error"],[594,71,360,65],[594,72,360,66,"message"],[594,79,360,73],[594,80,360,74],[595,10,361,4],[596,10,362,4],[596,14,362,8,"dataRaw"],[596,21,362,15],[596,30,362,24],[596,34,362,28],[596,35,362,29,"getItemWithFallbackToRealm"],[596,61,362,55],[596,62,362,56],[596,68,362,62],[596,69,362,63],[597,10,363,4],[597,14,363,8,"password"],[597,22,363,16],[597,24,363,18],[598,12,364,6,"dataRaw"],[598,19,364,13],[598,22,364,16],[598,26,364,20],[598,27,364,21,"decryptData"],[598,38,364,32],[598,39,364,33,"dataRaw"],[598,46,364,40],[598,48,364,42,"password"],[598,56,364,50],[598,57,364,51],[599,12,365,6],[599,16,365,10,"dataRaw"],[599,23,365,17],[599,25,365,19],[600,14,366,8],[601,14,367,8],[601,18,367,12],[601,19,367,13,"cachedPassword"],[601,33,367,27],[601,36,367,30,"password"],[601,44,367,38],[602,12,368,6],[603,10,369,4],[604,10,370,4],[604,14,370,8,"dataRaw"],[604,21,370,15],[604,26,370,20],[604,30,370,24],[604,32,370,26],[605,12,371,6],[605,16,371,10,"realm"],[605,21,371,15],[606,12,372,6],[606,16,372,10],[607,14,373,8,"realm"],[607,19,373,13],[607,28,373,22],[607,32,373,26],[607,33,373,27,"getRealmForTransactions"],[607,56,373,50],[607,57,373,51],[607,58,373,52],[608,12,374,6],[608,13,374,7],[608,14,374,8],[608,21,374,15,"error"],[608,26,374,25],[608,28,374,27],[609,14,375,8],[609,18,375,8,"presentAlert"],[609,32,375,20],[609,34,375,21],[610,16,375,23,"message"],[610,23,375,30],[610,25,375,32,"error"],[610,30,375,37],[610,31,375,38,"message"],[611,14,375,46],[611,15,375,47],[611,16,375,48],[612,12,376,6],[613,12,377,6],[613,16,377,12,"data"],[613,20,377,32],[613,23,377,35,"JSON"],[613,27,377,39],[613,28,377,40,"parse"],[613,33,377,45],[613,34,377,46,"dataRaw"],[613,41,377,53],[613,42,377,54],[614,12,378,6],[614,16,378,10],[614,17,378,11,"data"],[614,21,378,15],[614,22,378,16,"wallets"],[614,29,378,23],[614,31,378,25],[614,38,378,32],[614,43,378,37],[615,12,379,6],[615,16,379,12,"wallets"],[615,23,379,19],[615,26,379,22,"data"],[615,30,379,26],[615,31,379,27,"wallets"],[615,38,379,34],[616,12,379,35],[616,16,379,35,"_loop2"],[616,22,379,35],[616,35,379,35,"_loop2"],[616,42,379,35],[616,44,380,33],[617,14,381,8],[618,14,382,8],[618,18,382,14,"tempObj"],[618,25,382,21],[618,28,382,24,"JSON"],[618,32,382,28],[618,33,382,29,"parse"],[618,38,382,34],[618,39,382,35,"key"],[618,42,382,38],[618,43,382,39],[619,14,383,8],[619,18,383,12,"unserializedWallet"],[619,36,383,39],[620,14,384,8],[620,22,384,16,"tempObj"],[620,29,384,23],[620,30,384,24,"type"],[620,34,384,28],[621,16,385,10],[621,21,385,15,"SegwitBech32Wallet"],[621,52,385,15],[621,53,385,15,"SegwitBech32Wallet"],[621,105,385,33],[621,106,385,34,"type"],[621,110,385,38],[622,18,386,12,"unserializedWallet"],[622,36,386,30],[622,39,386,33,"SegwitBech32Wallet"],[622,70,386,33],[622,71,386,33,"SegwitBech32Wallet"],[622,123,386,51],[622,124,386,52,"fromJson"],[622,132,386,60],[622,133,386,61,"key"],[622,136,386,64],[622,137,386,98],[623,18,387,12],[624,16,388,10],[624,21,388,15,"SegwitP2SHWallet"],[624,52,388,15],[624,53,388,15,"SegwitP2SHWallet"],[624,101,388,31],[624,102,388,32,"type"],[624,106,388,36],[625,18,389,12,"unserializedWallet"],[625,36,389,30],[625,39,389,33,"SegwitP2SHWallet"],[625,70,389,33],[625,71,389,33,"SegwitP2SHWallet"],[625,119,389,49],[625,120,389,50,"fromJson"],[625,128,389,58],[625,129,389,59,"key"],[625,132,389,62],[625,133,389,94],[626,18,390,12],[627,16,391,10],[627,21,391,15,"WatchOnlyWallet"],[627,52,391,15],[627,53,391,15,"WatchOnlyWallet"],[627,99,391,30],[627,100,391,31,"type"],[627,104,391,35],[628,18,392,12,"unserializedWallet"],[628,36,392,30],[628,39,392,33,"WatchOnlyWallet"],[628,70,392,33],[628,71,392,33,"WatchOnlyWallet"],[628,117,392,48],[628,118,392,49,"fromJson"],[628,126,392,57],[628,127,392,58,"key"],[628,130,392,61],[628,131,392,92],[629,18,393,12,"unserializedWallet"],[629,36,393,30],[629,37,393,31,"init"],[629,41,393,35],[629,42,393,36],[629,43,393,37],[630,18,394,12],[630,22,394,16,"unserializedWallet"],[630,40,394,34],[630,41,394,35,"isHd"],[630,45,394,39],[630,46,394,40],[630,47,394,41],[630,51,394,45],[630,52,394,46,"unserializedWallet"],[630,70,394,64],[630,71,394,65,"isXpubValid"],[630,82,394,76],[630,83,394,77],[630,84,394,78],[630,86,394,80],[631,20,394,80],[632,18,396,12],[633,18,397,12],[634,16,398,10],[634,21,398,15,"HDLegacyP2PKHWallet"],[634,52,398,15],[634,53,398,15,"HDLegacyP2PKHWallet"],[634,108,398,34],[634,109,398,35,"type"],[634,113,398,39],[635,18,399,12,"unserializedWallet"],[635,36,399,30],[635,39,399,33,"HDLegacyP2PKHWallet"],[635,70,399,33],[635,71,399,33,"HDLegacyP2PKHWallet"],[635,126,399,52],[635,127,399,53,"fromJson"],[635,135,399,61],[635,136,399,62,"key"],[635,139,399,65],[635,140,399,100],[636,18,400,12],[637,16,401,10],[637,21,401,15,"HDSegwitP2SHWallet"],[637,52,401,15],[637,53,401,15,"HDSegwitP2SHWallet"],[637,106,401,33],[637,107,401,34,"type"],[637,111,401,38],[638,18,402,12,"unserializedWallet"],[638,36,402,30],[638,39,402,33,"HDSegwitP2SHWallet"],[638,70,402,33],[638,71,402,33,"HDSegwitP2SHWallet"],[638,124,402,51],[638,125,402,52,"fromJson"],[638,133,402,60],[638,134,402,61,"key"],[638,137,402,64],[638,138,402,98],[639,18,403,12],[640,16,404,10],[640,21,404,15,"HDSegwitBech32Wallet"],[640,52,404,15],[640,53,404,15,"HDSegwitBech32Wallet"],[640,110,404,35],[640,111,404,36,"type"],[640,115,404,40],[641,18,405,12,"unserializedWallet"],[641,36,405,30],[641,39,405,33,"HDSegwitBech32Wallet"],[641,70,405,33],[641,71,405,33,"HDSegwitBech32Wallet"],[641,128,405,53],[641,129,405,54,"fromJson"],[641,137,405,62],[641,138,405,63,"key"],[641,141,405,66],[641,142,405,102],[642,18,406,12],[643,16,407,10],[643,21,407,15,"HDLegacyBreadwalletWallet"],[643,52,407,15],[643,53,407,15,"HDLegacyBreadwalletWallet"],[643,120,407,40],[643,121,407,41,"type"],[643,125,407,45],[644,18,408,12,"unserializedWallet"],[644,36,408,30],[644,39,408,33,"HDLegacyBreadwalletWallet"],[644,70,408,33],[644,71,408,33,"HDLegacyBreadwalletWallet"],[644,138,408,58],[644,139,408,59,"fromJson"],[644,147,408,67],[644,148,408,68,"key"],[644,151,408,71],[644,152,408,112],[645,18,409,12],[646,16,410,10],[646,21,410,15,"HDLegacyElectrumSeedP2PKHWallet"],[646,52,410,15],[646,53,410,15,"HDLegacyElectrumSeedP2PKHWallet"],[646,134,410,46],[646,135,410,47,"type"],[646,139,410,51],[647,18,411,12,"unserializedWallet"],[647,36,411,30],[647,39,411,33,"HDLegacyElectrumSeedP2PKHWallet"],[647,70,411,33],[647,71,411,33,"HDLegacyElectrumSeedP2PKHWallet"],[647,152,411,64],[647,153,411,65,"fromJson"],[647,161,411,73],[647,162,411,74,"key"],[647,165,411,77],[647,166,411,124],[648,18,412,12],[649,16,413,10],[649,21,413,15,"HDSegwitElectrumSeedP2WPKHWallet"],[649,52,413,15],[649,53,413,15,"HDSegwitElectrumSeedP2WPKHWallet"],[649,136,413,47],[649,137,413,48,"type"],[649,141,413,52],[650,18,414,12,"unserializedWallet"],[650,36,414,30],[650,39,414,33,"HDSegwitElectrumSeedP2WPKHWallet"],[650,70,414,33],[650,71,414,33,"HDSegwitElectrumSeedP2WPKHWallet"],[650,154,414,65],[650,155,414,66,"fromJson"],[650,163,414,74],[650,164,414,75,"key"],[650,167,414,78],[650,168,414,126],[651,18,415,12],[652,16,416,10],[652,21,416,15,"MultisigHDWallet"],[652,52,416,15],[652,53,416,15,"MultisigHDWallet"],[652,101,416,31],[652,102,416,32,"type"],[652,106,416,36],[653,18,417,12,"unserializedWallet"],[653,36,417,30],[653,39,417,33,"MultisigHDWallet"],[653,70,417,33],[653,71,417,33,"MultisigHDWallet"],[653,119,417,49],[653,120,417,50,"fromJson"],[653,128,417,58],[653,129,417,59,"key"],[653,132,417,62],[653,133,417,94],[654,18,418,12],[655,16,419,10],[655,21,419,15,"HDAezeedWallet"],[655,52,419,15],[655,53,419,15,"HDAezeedWallet"],[655,97,419,29],[655,98,419,30,"type"],[655,102,419,34],[656,18,420,12,"unserializedWallet"],[656,36,420,30],[656,39,420,33,"HDAezeedWallet"],[656,70,420,33],[656,71,420,33,"HDAezeedWallet"],[656,115,420,47],[656,116,420,48,"fromJson"],[656,124,420,56],[656,125,420,57,"key"],[656,128,420,60],[656,129,420,90],[657,18,421,12],[658,18,422,12],[659,18,423,12],[659,22,423,16,"unserializedWallet"],[659,40,423,34],[659,41,423,35,"secret"],[659,47,423,41],[659,48,423,42,"includes"],[659,56,423,50],[659,57,423,51],[659,60,423,54],[659,61,423,55],[659,63,423,57],[660,20,424,14],[660,24,424,14,"_unserializedWallet$s"],[660,45,424,14],[660,48,424,45,"unserializedWallet"],[660,66,424,63],[660,67,424,64,"secret"],[660,73,424,70],[660,74,424,71,"split"],[660,79,424,76],[660,80,424,77],[660,83,424,80],[660,84,424,81],[661,22,424,81,"_unserializedWallet$s2"],[661,44,424,81],[661,51,424,81,"_slicedToArray2"],[661,66,424,81],[661,67,424,81,"default"],[661,74,424,81],[661,76,424,81,"_unserializedWallet$s"],[661,97,424,81],[662,22,424,21,"mnemonic"],[662,30,424,29],[662,33,424,29,"_unserializedWallet$s2"],[662,55,424,29],[663,22,424,31,"passphrase"],[663,32,424,41],[663,35,424,41,"_unserializedWallet$s2"],[663,57,424,41],[664,20,425,14,"unserializedWallet"],[664,38,425,32],[664,39,425,33,"secret"],[664,45,425,39],[664,48,425,42,"mnemonic"],[664,56,425,50],[665,20,426,14,"unserializedWallet"],[665,38,426,32],[665,39,426,33,"passphrase"],[665,49,426,43],[665,52,426,46,"passphrase"],[665,62,426,56],[666,18,427,12],[667,18,429,12],[668,16,430,10],[668,21,430,15,"SLIP39SegwitP2SHWallet"],[668,52,430,15],[668,53,430,15,"SLIP39SegwitP2SHWallet"],[668,103,430,37],[668,104,430,38,"type"],[668,108,430,42],[669,18,431,12,"unserializedWallet"],[669,36,431,30],[669,39,431,33,"SLIP39SegwitP2SHWallet"],[669,70,431,33],[669,71,431,33,"SLIP39SegwitP2SHWallet"],[669,121,431,55],[669,122,431,56,"fromJson"],[669,130,431,64],[669,131,431,65,"key"],[669,134,431,68],[669,135,431,106],[670,18,432,12],[671,16,433,10],[671,21,433,15,"SLIP39LegacyP2PKHWallet"],[671,52,433,15],[671,53,433,15,"SLIP39LegacyP2PKHWallet"],[671,104,433,38],[671,105,433,39,"type"],[671,109,433,43],[672,18,434,12,"unserializedWallet"],[672,36,434,30],[672,39,434,33,"SLIP39LegacyP2PKHWallet"],[672,70,434,33],[672,71,434,33,"SLIP39LegacyP2PKHWallet"],[672,122,434,56],[672,123,434,57,"fromJson"],[672,131,434,65],[672,132,434,66,"key"],[672,135,434,69],[672,136,434,108],[673,18,435,12],[674,16,436,10],[674,21,436,15,"SLIP39SegwitBech32Wallet"],[674,52,436,15],[674,53,436,15,"SLIP39SegwitBech32Wallet"],[674,105,436,39],[674,106,436,40,"type"],[674,110,436,44],[675,18,437,12,"unserializedWallet"],[675,36,437,30],[675,39,437,33,"SLIP39SegwitBech32Wallet"],[675,70,437,33],[675,71,437,33,"SLIP39SegwitBech32Wallet"],[675,123,437,57],[675,124,437,58,"fromJson"],[675,132,437,66],[675,133,437,67,"key"],[675,136,437,70],[675,137,437,110],[676,18,438,12],[677,16,439,10],[677,21,439,15,"LightningCustodianWallet"],[677,52,439,15],[677,53,439,15,"LightningCustodianWallet"],[677,117,439,39],[677,118,439,40,"type"],[677,122,439,44],[678,18,439,46],[679,20,440,12,"unserializedWallet"],[679,38,440,30],[679,41,440,33,"LightningCustodianWallet"],[679,72,440,33],[679,73,440,33,"LightningCustodianWallet"],[679,137,440,57],[679,138,440,58,"fromJson"],[679,146,440,66],[679,147,440,67,"key"],[679,150,440,70],[679,151,440,110],[680,20,441,12],[680,24,441,16,"lndhub"],[680,30,441,35],[680,33,441,38],[680,38,441,43],[681,20,442,12],[681,24,442,16],[682,22,443,14,"lndhub"],[682,28,443,20],[682,37,443,29],[682,41,443,29,"getLNDHub"],[682,72,443,29],[682,73,443,29,"getLNDHub"],[682,103,443,38],[682,105,443,39],[682,106,443,40],[683,20,444,12],[683,21,444,13],[683,22,444,14],[683,29,444,21,"error"],[683,34,444,26],[683,36,444,28],[684,22,445,14,"console"],[684,29,445,21],[684,30,445,22,"warn"],[684,34,445,26],[684,35,445,27,"error"],[684,40,445,32],[684,41,445,33],[685,20,446,12],[686,20,448,12],[686,24,448,16,"unserializedWallet"],[686,42,448,34],[686,43,448,35,"baseURI"],[686,50,448,42],[686,52,448,44],[687,22,449,14,"unserializedWallet"],[687,40,449,32],[687,41,449,33,"setBaseURI"],[687,51,449,43],[687,52,449,44,"unserializedWallet"],[687,70,449,62],[687,71,449,63,"baseURI"],[687,78,449,70],[687,79,449,71],[687,80,449,72],[687,81,449,73],[688,22,450,14,"console"],[688,29,450,21],[688,30,450,22,"log"],[688,33,450,25],[688,34,450,26],[688,70,450,62],[688,72,450,64,"unserializedWallet"],[688,90,450,82],[688,91,450,83,"baseURI"],[688,98,450,90],[688,99,450,91],[689,20,451,12],[689,21,451,13],[689,27,451,19],[689,31,451,23,"lndhub"],[689,37,451,29],[689,39,451,31],[690,22,452,14,"console"],[690,29,452,21],[690,30,452,22,"log"],[690,33,452,25],[690,34,452,26],[690,63,452,55],[690,65,452,57,"lndhub"],[690,71,452,63],[690,73,452,65],[690,88,452,80],[690,89,452,81],[691,22,453,14,"unserializedWallet"],[691,40,453,32],[691,41,453,33,"setBaseURI"],[691,51,453,43],[691,52,453,44,"lndhub"],[691,58,453,50],[691,59,453,51],[692,20,454,12],[692,21,454,13],[692,27,454,19],[693,22,455,14,"console"],[693,29,455,21],[693,30,455,22,"log"],[693,33,455,25],[693,34,455,26],[693,86,455,78],[693,87,455,79],[694,20,456,12],[695,20,457,12,"unserializedWallet"],[695,38,457,30],[695,39,457,31,"init"],[695,43,457,35],[695,44,457,36],[695,45,457,37],[696,20,458,12],[697,18,459,10],[698,16,460,10],[698,21,460,15],[698,35,460,29],[699,18,461,12],[700,18,462,12,"unserializedWallet"],[700,36,462,30],[700,39,462,33],[700,44,462,37,"HDSegwitBech32Wallet"],[700,75,462,37],[700,76,462,37,"HDSegwitBech32Wallet"],[700,133,462,57],[700,135,462,58],[700,136,462,59],[701,18,463,12,"unserializedWallet"],[701,36,463,30],[701,37,463,31,"setSecret"],[701,46,463,40],[701,47,463,41,"tempObj"],[701,54,463,48],[701,55,463,49,"secret"],[701,61,463,55],[701,62,463,56,"replace"],[701,69,463,63],[701,70,463,64],[701,78,463,72],[701,80,463,74],[701,82,463,76],[701,83,463,77],[701,84,463,78],[702,18,464,12],[703,16,465,10],[703,21,465,15,"LegacyWallet"],[703,52,465,15],[703,53,465,15,"LegacyWallet"],[703,92,465,27],[703,93,465,28,"type"],[703,97,465,32],[704,16,466,10],[705,18,467,12,"unserializedWallet"],[705,36,467,30],[705,39,467,33,"LegacyWallet"],[705,70,467,33],[705,71,467,33,"LegacyWallet"],[705,110,467,45],[705,111,467,46,"fromJson"],[705,119,467,54],[705,120,467,55,"key"],[705,123,467,58],[705,124,467,86],[706,18,468,12],[707,14,469,8],[708,14,471,8],[708,18,471,12],[709,16,472,10],[709,20,472,14,"realm"],[709,25,472,19],[709,27,472,21,"_this2"],[709,33,472,25],[709,34,472,26,"inflateWalletFromRealm"],[709,56,472,48],[709,57,472,49,"realm"],[709,62,472,54],[709,64,472,56,"unserializedWallet"],[709,82,472,74],[709,83,472,75],[710,14,473,8],[710,15,473,9],[710,16,473,10],[710,23,473,17,"error"],[710,28,473,27],[710,30,473,29],[711,16,474,10],[711,20,474,10,"presentAlert"],[711,34,474,22],[711,36,474,23],[712,18,474,25,"message"],[712,25,474,32],[712,27,474,34,"error"],[712,32,474,39],[712,33,474,40,"message"],[713,16,474,48],[713,17,474,49],[713,18,474,50],[714,14,475,8],[716,14,477,8],[717,14,478,8],[717,18,478,14,"ID"],[717,20,478,16],[717,23,478,19,"unserializedWallet"],[717,41,478,37],[717,42,478,38,"getID"],[717,47,478,43],[717,48,478,44],[717,49,478,45],[718,14,479,8],[718,18,479,12],[718,19,479,13,"_this2"],[718,25,479,17],[718,26,479,18,"wallets"],[718,33,479,25],[718,34,479,26,"some"],[718,38,479,30],[718,39,479,31],[718,49,479,31,"wallet"],[718,55,479,37],[719,16,479,37],[719,23,479,41,"wallet"],[719,29,479,47],[719,30,479,48,"getID"],[719,35,479,53],[719,36,479,54],[719,37,479,55],[719,42,479,60,"ID"],[719,44,479,62],[720,14,479,62],[720,16,479,63],[720,18,479,65],[721,16,480,10,"_this2"],[721,22,480,14],[721,23,480,15,"wallets"],[721,30,480,22],[721,31,480,23,"push"],[721,35,480,27],[721,36,480,28,"unserializedWallet"],[721,54,480,46],[721,55,480,47],[722,16,481,10,"_this2"],[722,22,481,14],[722,23,481,15,"tx_metadata"],[722,34,481,26],[722,37,481,29,"data"],[722,41,481,33],[722,42,481,34,"tx_metadata"],[722,53,481,45],[723,16,482,10,"_this2"],[723,22,482,14],[723,23,482,15,"counterparty_metadata"],[723,44,482,36],[723,47,482,39,"data"],[723,51,482,43],[723,52,482,44,"counterparty_metadata"],[723,73,482,65],[724,14,483,8],[725,12,484,6],[725,13,484,7],[726,12,380,6],[726,17,380,11],[726,21,380,17,"key"],[726,24,380,20],[726,28,380,24,"wallets"],[726,35,380,31],[727,14,380,31],[727,25,380,31,"_loop2"],[727,31,380,31],[727,35,395,14],[728,12,395,23],[729,12,485,6],[729,16,485,10,"realm"],[729,21,485,15],[729,23,485,17,"realm"],[729,28,485,22],[729,29,485,23,"close"],[729,34,485,28],[729,35,485,29],[729,36,485,30],[730,12,486,6],[730,19,486,13],[730,23,486,17],[731,10,487,4],[731,11,487,5],[731,17,487,11],[732,12,488,6],[732,19,488,13],[732,24,488,18],[732,25,488,19],[732,26,488,20],[733,10,489,4],[734,8,490,2],[734,9,490,3],[735,8,490,3],[735,17,355,8,"loadFromDisk"],[735,29,355,20,"loadFromDisk"],[735,30,355,20,"_x1"],[735,33,355,20],[736,10,355,20],[736,17,355,20,"_loadFromDisk"],[736,30,355,20],[736,31,355,20,"apply"],[736,36,355,20],[736,43,355,20,"arguments"],[736,52,355,20],[737,8,355,20],[738,8,355,20],[738,15,355,8,"loadFromDisk"],[738,27,355,20],[739,6,355,20],[740,4,355,20],[741,6,355,20,"key"],[741,9,355,20],[742,6,355,20,"value"],[742,11,355,20],[742,13,514,2],[742,22,514,2,"inflateWalletFromRealm"],[742,44,514,24,"inflateWalletFromRealm"],[742,45,514,25,"realm"],[742,50,514,37],[742,52,514,39,"walletToInflate"],[742,67,514,63],[742,69,514,65],[743,8,515,4],[743,12,515,10,"transactions"],[743,24,515,22],[743,27,515,25,"realm"],[743,32,515,30],[743,33,515,31,"objects"],[743,40,515,38],[743,41,515,39],[743,61,515,59],[743,62,515,60],[744,8,516,4],[744,12,516,10,"transactionsForWallet"],[744,33,516,31],[744,36,516,34,"transactions"],[744,48,516,46],[744,49,516,47,"filtered"],[744,57,516,55],[744,58,516,56],[744,73,516,71,"walletToInflate"],[744,88,516,86],[744,89,516,87,"getID"],[744,94,516,92],[744,95,516,93],[744,96,516,94],[744,99,516,97],[744,100,516,132],[745,8,517,4],[745,13,517,9],[745,17,517,15,"tx"],[745,19,517,17],[745,23,517,21,"transactionsForWallet"],[745,44,517,42],[745,46,517,44],[746,10,518,6],[746,14,518,10,"tx"],[746,16,518,12],[746,17,518,13,"internal"],[746,25,518,21],[746,30,518,26],[746,35,518,31],[746,37,518,33],[747,12,519,8],[747,16,519,12],[747,35,519,31],[747,39,519,35,"walletToInflate"],[747,54,519,50],[747,58,519,54,"walletToInflate"],[747,73,519,69],[747,74,519,70,"_hdWalletInstance"],[747,91,519,87],[747,93,519,89],[748,14,520,10],[748,18,520,16,"hd"],[748,20,520,18],[748,23,520,21,"walletToInflate"],[748,38,520,36],[748,39,520,37,"_hdWalletInstance"],[748,56,520,54],[749,14,521,10,"hd"],[749,16,521,12],[749,17,521,13,"_txs_by_external_index"],[749,39,521,35],[749,40,521,36,"tx"],[749,42,521,38],[749,43,521,39,"index"],[749,48,521,44],[749,49,521,45],[749,52,521,48,"hd"],[749,54,521,50],[749,55,521,51,"_txs_by_external_index"],[749,77,521,73],[749,78,521,74,"tx"],[749,80,521,76],[749,81,521,77,"index"],[749,86,521,82],[749,87,521,83],[749,91,521,87],[749,93,521,89],[750,14,522,10],[750,18,522,16,"transaction"],[750,29,522,27],[750,32,522,30,"JSON"],[750,36,522,34],[750,37,522,35,"parse"],[750,42,522,40],[750,43,522,41,"tx"],[750,45,522,43],[750,46,522,44,"tx"],[750,48,522,46],[750,49,522,47],[751,14,523,10,"hd"],[751,16,523,12],[751,17,523,13,"_txs_by_external_index"],[751,39,523,35],[751,40,523,36,"tx"],[751,42,523,38],[751,43,523,39,"index"],[751,48,523,44],[751,49,523,45],[751,50,523,46,"push"],[751,54,523,50],[751,55,523,51,"transaction"],[751,66,523,62],[751,67,523,63],[752,12,524,8],[752,13,524,9],[752,19,524,15],[753,14,525,10,"walletToInflate"],[753,29,525,25],[753,30,525,26,"_txs_by_external_index"],[753,52,525,48],[753,53,525,49,"tx"],[753,55,525,51],[753,56,525,52,"index"],[753,61,525,57],[753,62,525,58],[753,65,525,61,"walletToInflate"],[753,80,525,76],[753,81,525,77,"_txs_by_external_index"],[753,103,525,99],[753,104,525,100,"tx"],[753,106,525,102],[753,107,525,103,"index"],[753,112,525,108],[753,113,525,109],[753,117,525,113],[753,119,525,115],[754,14,526,10],[754,18,526,16,"transaction"],[754,30,526,27],[754,33,526,30,"JSON"],[754,37,526,34],[754,38,526,35,"parse"],[754,43,526,40],[754,44,526,41,"tx"],[754,46,526,43],[754,47,526,44,"tx"],[754,49,526,46],[754,50,526,47],[755,14,527,11,"walletToInflate"],[755,29,527,26],[755,30,527,27,"_txs_by_external_index"],[755,52,527,49],[755,53,527,50,"tx"],[755,55,527,52],[755,56,527,53,"index"],[755,61,527,58],[755,62,527,59],[755,63,527,78,"push"],[755,67,527,82],[755,68,527,83,"transaction"],[755,80,527,94],[755,81,527,95],[756,12,528,8],[757,10,529,6],[757,11,529,7],[757,17,529,13],[757,21,529,17,"tx"],[757,23,529,19],[757,24,529,20,"internal"],[757,32,529,28],[757,37,529,33],[757,41,529,37],[757,43,529,39],[758,12,530,8],[758,16,530,12],[758,35,530,31],[758,39,530,35,"walletToInflate"],[758,54,530,50],[758,58,530,54,"walletToInflate"],[758,73,530,69],[758,74,530,70,"_hdWalletInstance"],[758,91,530,87],[758,93,530,89],[759,14,531,10],[759,18,531,16,"hd"],[759,21,531,18],[759,24,531,21,"walletToInflate"],[759,39,531,36],[759,40,531,37,"_hdWalletInstance"],[759,57,531,54],[760,14,532,10,"hd"],[760,17,532,12],[760,18,532,13,"_txs_by_internal_index"],[760,40,532,35],[760,41,532,36,"tx"],[760,43,532,38],[760,44,532,39,"index"],[760,49,532,44],[760,50,532,45],[760,53,532,48,"hd"],[760,56,532,50],[760,57,532,51,"_txs_by_internal_index"],[760,79,532,73],[760,80,532,74,"tx"],[760,82,532,76],[760,83,532,77,"index"],[760,88,532,82],[760,89,532,83],[760,93,532,87],[760,95,532,89],[761,14,533,10],[761,18,533,16,"transaction"],[761,31,533,27],[761,34,533,30,"JSON"],[761,38,533,34],[761,39,533,35,"parse"],[761,44,533,40],[761,45,533,41,"tx"],[761,47,533,43],[761,48,533,44,"tx"],[761,50,533,46],[761,51,533,47],[762,14,534,10,"hd"],[762,17,534,12],[762,18,534,13,"_txs_by_internal_index"],[762,40,534,35],[762,41,534,36,"tx"],[762,43,534,38],[762,44,534,39,"index"],[762,49,534,44],[762,50,534,45],[762,51,534,46,"push"],[762,55,534,50],[762,56,534,51,"transaction"],[762,69,534,62],[762,70,534,63],[763,12,535,8],[763,13,535,9],[763,19,535,15],[764,14,536,10,"walletToInflate"],[764,29,536,25],[764,30,536,26,"_txs_by_internal_index"],[764,52,536,48],[764,53,536,49,"tx"],[764,55,536,51],[764,56,536,52,"index"],[764,61,536,57],[764,62,536,58],[764,65,536,61,"walletToInflate"],[764,80,536,76],[764,81,536,77,"_txs_by_internal_index"],[764,103,536,99],[764,104,536,100,"tx"],[764,106,536,102],[764,107,536,103,"index"],[764,112,536,108],[764,113,536,109],[764,117,536,113],[764,119,536,115],[765,14,537,10],[765,18,537,16,"transaction"],[765,31,537,27],[765,34,537,30,"JSON"],[765,38,537,34],[765,39,537,35,"parse"],[765,44,537,40],[765,45,537,41,"tx"],[765,47,537,43],[765,48,537,44,"tx"],[765,50,537,46],[765,51,537,47],[766,14,538,11,"walletToInflate"],[766,29,538,26],[766,30,538,27,"_txs_by_internal_index"],[766,52,538,49],[766,53,538,50,"tx"],[766,55,538,52],[766,56,538,53,"index"],[766,61,538,58],[766,62,538,59],[766,63,538,78,"push"],[766,67,538,82],[766,68,538,83,"transaction"],[766,81,538,94],[766,82,538,95],[767,12,539,8],[768,10,540,6],[768,11,540,7],[768,17,540,13],[769,12,541,8],[769,16,541,12],[769,17,541,13,"Array"],[769,22,541,18],[769,23,541,19,"isArray"],[769,30,541,26],[769,31,541,27,"walletToInflate"],[769,46,541,42],[769,47,541,43,"_txs_by_external_index"],[769,69,541,65],[769,70,541,66],[769,72,541,68,"walletToInflate"],[769,87,541,83],[769,88,541,84,"_txs_by_external_index"],[769,110,541,106],[769,113,541,109],[769,115,541,111],[770,12,542,8,"walletToInflate"],[770,27,542,23],[770,28,542,24,"_txs_by_external_index"],[770,50,542,46],[770,53,542,49,"walletToInflate"],[770,68,542,64],[770,69,542,65,"_txs_by_external_index"],[770,91,542,87],[770,95,542,91],[770,97,542,93],[771,12,543,8],[771,16,543,14,"transaction"],[771,29,543,25],[771,32,543,28,"JSON"],[771,36,543,32],[771,37,543,33,"parse"],[771,42,543,38],[771,43,543,39,"tx"],[771,45,543,41],[771,46,543,42,"tx"],[771,48,543,44],[771,49,543,45],[772,12,544,9,"walletToInflate"],[772,27,544,24],[772,28,544,25,"_txs_by_external_index"],[772,50,544,47],[772,51,544,66,"push"],[772,55,544,70],[772,56,544,71,"transaction"],[772,69,544,82],[772,70,544,83],[773,10,545,6],[774,8,546,4],[775,6,547,2],[776,4,547,3],[777,6,547,3,"key"],[777,9,547,3],[778,6,547,3,"value"],[778,11,547,3],[778,13,549,2],[778,22,549,2,"offloadWalletToRealm"],[778,42,549,22,"offloadWalletToRealm"],[778,43,549,23,"realm"],[778,48,549,35],[778,50,549,37,"wallet"],[778,56,549,52],[778,58,549,60],[779,8,550,4],[779,12,550,10,"id"],[779,14,550,12],[779,17,550,15,"wallet"],[779,23,550,21],[779,24,550,22,"getID"],[779,29,550,27],[779,30,550,28],[779,31,550,29],[780,8,551,4],[780,12,551,10,"walletToSave"],[780,24,551,22],[780,27,551,26],[780,46,551,45],[780,50,551,49,"wallet"],[780,56,551,55],[780,60,551,59,"wallet"],[780,66,551,65],[780,67,551,66,"_hdWalletInstance"],[780,84,551,83],[780,88,551,88,"wallet"],[780,94,551,94],[781,8,553,4],[781,12,553,8,"Array"],[781,17,553,13],[781,18,553,14,"isArray"],[781,25,553,21],[781,26,553,22,"walletToSave"],[781,38,553,34],[781,39,553,35,"_txs_by_external_index"],[781,61,553,57],[781,62,553,58],[781,64,553,60],[782,10,554,6],[783,10,555,6],[784,10,556,6,"realm"],[784,15,556,11],[784,16,556,12,"write"],[784,21,556,17],[784,22,556,18],[784,34,556,24],[785,12,557,8],[786,12,558,8],[786,16,558,14,"walletTransactionsToDelete"],[786,42,558,40],[786,45,558,43,"realm"],[786,50,558,48],[786,51,558,49,"objects"],[786,58,558,56],[786,59,558,57],[786,79,558,77],[786,80,558,78],[786,81,558,79,"filtered"],[786,89,558,87],[786,90,558,88],[786,105,558,103,"id"],[786,107,558,105],[786,110,558,108],[786,111,558,109],[787,12,559,8,"realm"],[787,17,559,13],[787,18,559,14,"delete"],[787,24,559,20],[787,25,559,21,"walletTransactionsToDelete"],[787,51,559,47],[787,52,559,48],[789,12,561,8],[790,12,562,8],[790,17,562,13],[790,21,562,19,"tx"],[790,23,562,21],[790,27,562,25,"walletToSave"],[790,39,562,37],[790,40,562,38,"_txs_by_external_index"],[790,62,562,60],[790,64,562,62],[791,14,563,10,"realm"],[791,19,563,15],[791,20,563,16,"create"],[791,26,563,22],[791,27,564,12],[791,47,564,32],[791,49,565,12],[792,16,566,14,"walletid"],[792,24,566,22],[792,26,566,24,"id"],[792,28,566,26],[793,16,567,14,"tx"],[793,18,567,16],[793,20,567,18,"JSON"],[793,24,567,22],[793,25,567,23,"stringify"],[793,34,567,32],[793,35,567,33,"tx"],[793,37,567,35],[794,14,568,12],[794,15,568,13],[794,17,569,12,"Realm"],[794,31,569,17],[794,32,569,18,"UpdateMode"],[794,42,569,28],[794,43,569,29,"Modified"],[794,51,570,10],[794,52,570,11],[795,12,571,8],[796,10,572,6],[796,11,572,7],[796,12,572,8],[797,10,574,6],[798,8,575,4],[800,8,577,4],[802,8,579,4],[802,12,579,8,"walletToSave"],[802,24,579,20],[802,25,579,21,"_txs_by_external_index"],[802,47,579,43],[802,49,579,45],[803,10,580,6,"realm"],[803,15,580,11],[803,16,580,12,"write"],[803,21,580,17],[803,22,580,18],[803,34,580,24],[804,12,581,8],[805,12,582,8],[805,16,582,14,"walletTransactionsToDelete"],[805,42,582,40],[805,45,582,43,"realm"],[805,50,582,48],[805,51,582,49,"objects"],[805,58,582,56],[805,59,582,57],[805,79,582,77],[805,80,582,78],[805,81,582,79,"filtered"],[805,89,582,87],[805,90,582,88],[805,105,582,103,"id"],[805,107,582,105],[805,110,582,108],[805,111,582,109],[806,12,583,8,"realm"],[806,17,583,13],[806,18,583,14,"delete"],[806,24,583,20],[806,25,583,21,"walletTransactionsToDelete"],[806,51,583,47],[806,52,583,48],[808,12,585,8],[809,12,586,8],[809,17,586,13],[809,21,586,19,"index"],[809,26,586,24],[809,30,586,28,"Object"],[809,36,586,34],[809,37,586,35,"keys"],[809,41,586,39],[809,42,586,40,"walletToSave"],[809,54,586,52],[809,55,586,53,"_txs_by_external_index"],[809,77,586,75],[809,78,586,76],[809,80,586,78],[810,14,587,10],[811,14,588,10],[811,18,588,16,"txs"],[811,21,588,19],[811,24,588,22,"walletToSave"],[811,36,588,34],[811,37,588,35,"_txs_by_external_index"],[811,59,588,57],[811,60,588,58,"index"],[811,65,588,63],[811,66,588,64],[812,14,589,10],[812,19,589,15],[812,23,589,21,"tx"],[812,25,589,23],[812,29,589,27,"txs"],[812,32,589,30],[812,34,589,32],[813,16,590,12,"realm"],[813,21,590,17],[813,22,590,18,"create"],[813,28,590,24],[813,29,591,14],[813,49,591,34],[813,51,592,14],[814,18,593,16,"walletid"],[814,26,593,24],[814,28,593,26,"id"],[814,30,593,28],[815,18,594,16,"internal"],[815,26,594,24],[815,28,594,26],[815,33,594,31],[816,18,595,16,"index"],[816,23,595,21],[816,25,595,23,"parseInt"],[816,33,595,31],[816,34,595,32,"index"],[816,39,595,37],[816,41,595,39],[816,43,595,41],[816,44,595,42],[817,18,596,16,"tx"],[817,20,596,18],[817,22,596,20,"JSON"],[817,26,596,24],[817,27,596,25,"stringify"],[817,36,596,34],[817,37,596,35,"tx"],[817,39,596,37],[818,16,597,14],[818,17,597,15],[818,19,598,14,"Realm"],[818,33,598,19],[818,34,598,20,"UpdateMode"],[818,44,598,30],[818,45,598,31,"Modified"],[818,53,599,12],[818,54,599,13],[819,14,600,10],[820,12,601,8],[821,12,603,8],[821,17,603,13],[821,21,603,19,"index"],[821,27,603,24],[821,31,603,28,"Object"],[821,37,603,34],[821,38,603,35,"keys"],[821,42,603,39],[821,43,603,40,"walletToSave"],[821,55,603,52],[821,56,603,53,"_txs_by_internal_index"],[821,78,603,75],[821,79,603,76],[821,81,603,78],[822,14,604,10],[823,14,605,10],[823,18,605,16,"txs"],[823,23,605,19],[823,26,605,22,"walletToSave"],[823,38,605,34],[823,39,605,35,"_txs_by_internal_index"],[823,61,605,57],[823,62,605,58,"index"],[823,68,605,63],[823,69,605,64],[824,14,606,10],[824,19,606,15],[824,23,606,21,"tx"],[824,26,606,23],[824,30,606,27,"txs"],[824,35,606,30],[824,37,606,32],[825,16,607,12,"realm"],[825,21,607,17],[825,22,607,18,"create"],[825,28,607,24],[825,29,608,14],[825,49,608,34],[825,51,609,14],[826,18,610,16,"walletid"],[826,26,610,24],[826,28,610,26,"id"],[826,30,610,28],[827,18,611,16,"internal"],[827,26,611,24],[827,28,611,26],[827,32,611,30],[828,18,612,16,"index"],[828,23,612,21],[828,25,612,23,"parseInt"],[828,33,612,31],[828,34,612,32,"index"],[828,40,612,37],[828,42,612,39],[828,44,612,41],[828,45,612,42],[829,18,613,16,"tx"],[829,20,613,18],[829,22,613,20,"JSON"],[829,26,613,24],[829,27,613,25,"stringify"],[829,36,613,34],[829,37,613,35,"tx"],[829,40,613,37],[830,16,614,14],[830,17,614,15],[830,19,615,14,"Realm"],[830,33,615,19],[830,34,615,20,"UpdateMode"],[830,44,615,30],[830,45,615,31,"Modified"],[830,53,616,12],[830,54,616,13],[831,14,617,10],[832,12,618,8],[833,10,619,6],[833,11,619,7],[833,12,619,8],[834,8,620,4],[835,6,621,2],[837,6,623,2],[838,0,624,0],[839,0,625,0],[840,0,626,0],[841,0,627,0],[842,0,628,0],[843,0,629,0],[844,4,623,2],[845,6,623,2,"key"],[845,9,623,2],[846,6,623,2,"value"],[846,11,623,2],[847,8,623,2],[847,12,623,2,"_saveToDisk"],[847,23,623,2],[847,30,623,2,"_asyncToGenerator2"],[847,48,623,2],[847,49,623,2,"default"],[847,56,623,2],[847,58,630,2],[847,71,630,36],[848,10,631,4],[848,14,631,8,"savingInProgress"],[848,30,631,24],[848,32,631,26],[849,12,632,6,"console"],[849,19,632,13],[849,20,632,14,"warn"],[849,24,632,18],[849,25,632,19],[849,52,632,46],[849,53,632,47],[850,12,633,6],[850,16,633,10],[850,18,633,12,"savingInProgress"],[850,34,633,28],[850,37,633,31],[850,39,633,33],[850,41,633,35],[850,45,633,35,"presentAlert"],[850,59,633,47],[850,61,633,48],[851,14,633,50,"message"],[851,21,633,57],[851,23,633,59],[852,12,633,105],[852,13,633,106],[852,14,633,107],[852,15,633,108],[852,16,633,109],[853,12,634,6],[853,18,634,12],[853,22,634,16,"Promise"],[853,29,634,23],[853,30,634,24],[853,40,634,24,"resolve"],[853,47,634,31],[854,14,634,31],[854,21,634,35,"setTimeout"],[854,31,634,45],[854,32,634,46,"resolve"],[854,39,634,53],[854,41,634,55],[854,45,634,59],[854,48,634,62,"savingInProgress"],[854,64,634,78],[854,65,634,79],[855,12,634,79],[855,14,634,80],[855,15,634,81],[855,16,634,82],[856,12,635,6],[856,19,635,13],[856,23,635,17],[856,24,635,18,"saveToDisk"],[856,34,635,28],[856,35,635,29],[856,36,635,30],[857,10,636,4],[858,10,637,4,"savingInProgress"],[858,26,637,20],[858,29,637,23],[858,30,637,24],[859,10,639,4],[859,14,639,8],[860,12,640,6],[860,16,640,12,"walletsToSave"],[860,29,640,35],[860,32,640,38],[860,34,640,40],[860,35,640,41],[860,36,640,42],[861,12,641,6],[861,16,641,10,"realm"],[861,21,641,15],[862,12,642,6],[862,16,642,10],[863,14,643,8,"realm"],[863,19,643,13],[863,28,643,22],[863,32,643,26],[863,33,643,27,"getRealmForTransactions"],[863,56,643,50],[863,57,643,51],[863,58,643,52],[864,12,644,6],[864,13,644,7],[864,14,644,8],[864,21,644,15,"error"],[864,26,644,25],[864,28,644,27],[865,14,645,8],[865,18,645,8,"presentAlert"],[865,32,645,20],[865,34,645,21],[866,16,645,23,"message"],[866,23,645,30],[866,25,645,32,"error"],[866,30,645,37],[866,31,645,38,"message"],[867,14,645,46],[867,15,645,47],[867,16,645,48],[868,12,646,6],[869,12,647,6],[869,17,647,11],[869,21,647,17,"key"],[869,24,647,20],[869,28,647,24],[869,32,647,28],[869,33,647,29,"wallets"],[869,40,647,36],[869,42,647,38],[870,14,648,8],[870,18,648,12],[870,25,648,19,"key"],[870,28,648,22],[870,33,648,27],[870,42,648,36],[870,44,648,38],[871,14,649,8,"key"],[871,17,649,11],[871,18,649,12,"prepareForSerialization"],[871,41,649,35],[871,42,649,36],[871,43,649,37],[872,14,650,8],[873,14,651,8],[873,21,651,15,"key"],[873,24,651,18],[873,25,651,19,"current"],[873,32,651,26],[874,14,652,8],[874,18,652,14,"keyCloned"],[874,27,652,23],[874,30,652,26,"Object"],[874,36,652,32],[874,37,652,33,"assign"],[874,43,652,39],[874,44,652,40],[874,45,652,41],[874,46,652,42],[874,48,652,44,"key"],[874,51,652,47],[874,52,652,48],[874,53,652,49],[874,54,652,50],[875,14,653,8],[875,18,653,12],[875,37,653,31],[875,41,653,35,"key"],[875,44,653,38],[875,46,653,40],[876,16,654,10],[876,20,654,16,"k"],[876,21,654,17],[876,24,654,20,"keyCloned"],[876,33,654,54],[877,16,655,10,"k"],[877,17,655,11],[877,18,655,12,"_hdWalletInstance"],[877,35,655,29],[877,38,655,32,"Object"],[877,44,655,38],[877,45,655,39,"assign"],[877,51,655,45],[877,52,655,46],[877,53,655,47],[877,54,655,48],[877,56,655,50,"key"],[877,59,655,53],[877,60,655,54,"_hdWalletInstance"],[877,77,655,71],[877,78,655,72],[878,16,656,10,"k"],[878,17,656,11],[878,18,656,12,"_hdWalletInstance"],[878,35,656,29],[878,36,656,30,"_txs_by_external_index"],[878,58,656,52],[878,61,656,55],[878,62,656,56],[878,63,656,57],[879,16,657,10,"k"],[879,17,657,11],[879,18,657,12,"_hdWalletInstance"],[879,35,657,29],[879,36,657,30,"_txs_by_internal_index"],[879,58,657,52],[879,61,657,55],[879,62,657,56],[879,63,657,57],[880,14,658,8],[881,14,659,8],[881,18,659,12,"realm"],[881,23,659,17],[881,25,659,19],[881,29,659,23],[881,30,659,24,"offloadWalletToRealm"],[881,50,659,44],[881,51,659,45,"realm"],[881,56,659,50],[881,58,659,52,"key"],[881,61,659,55],[881,62,659,56],[882,14,660,8],[883,14,661,8],[883,18,661,12,"key"],[883,21,661,15],[883,22,661,16,"_txs_by_external_index"],[883,44,661,38],[883,46,661,40],[884,16,662,10,"keyCloned"],[884,25,662,19],[884,26,662,20,"_txs_by_external_index"],[884,48,662,42],[884,51,662,45],[884,52,662,46],[884,53,662,47],[885,16,663,10,"keyCloned"],[885,25,663,19],[885,26,663,20,"_txs_by_internal_index"],[885,48,663,42],[885,51,663,45],[885,52,663,46],[885,53,663,47],[886,14,664,8],[887,14,666,8],[887,18,666,12],[887,35,666,29],[887,39,666,33,"keyCloned"],[887,48,666,42],[887,50,666,44],[888,16,667,10],[888,23,667,17,"keyCloned"],[888,32,667,26],[888,33,667,27,"_bip47_instance"],[888,48,667,42],[888,49,667,43],[888,50,667,44],[889,14,668,8],[890,14,670,8,"walletsToSave"],[890,27,670,21],[890,28,670,22,"push"],[890,32,670,26],[890,33,670,27,"JSON"],[890,37,670,31],[890,38,670,32,"stringify"],[890,47,670,41],[890,48,670,41,"Object"],[890,54,670,41],[890,55,670,41,"assign"],[890,61,670,41],[890,66,670,47,"keyCloned"],[890,75,670,56],[891,16,670,58,"type"],[891,20,670,62],[891,22,670,64,"keyCloned"],[891,31,670,73],[891,32,670,74,"type"],[892,14,670,78],[892,16,670,80],[892,17,670,81],[892,18,670,82],[893,12,671,6],[894,12,672,6],[894,16,672,10,"realm"],[894,21,672,15],[894,23,672,17,"realm"],[894,28,672,22],[894,29,672,23,"close"],[894,34,672,28],[894,35,672,29],[894,36,672,30],[895,12,674,6],[895,16,674,10,"data"],[895,20,674,41],[895,23,674,100],[896,14,675,8,"wallets"],[896,21,675,15],[896,23,675,17,"walletsToSave"],[896,36,675,30],[897,14,676,8,"tx_metadata"],[897,25,676,19],[897,27,676,21],[897,31,676,25],[897,32,676,26,"tx_metadata"],[897,43,676,37],[898,14,677,8,"counterparty_metadata"],[898,35,677,29],[898,37,677,31],[898,41,677,35],[898,42,677,36,"counterparty_metadata"],[899,12,678,6],[899,13,678,7],[900,12,680,6],[900,16,680,10],[900,20,680,14],[900,21,680,15,"cachedPassword"],[900,35,680,29],[900,37,680,31],[901,14,681,8],[902,14,682,8],[902,18,682,12,"buckets"],[902,25,682,19],[902,34,682,28],[902,38,682,32],[902,39,682,33,"getItemWithFallbackToRealm"],[902,65,682,59],[902,66,682,60],[902,72,682,66],[902,73,682,67],[903,14,683,8,"buckets"],[903,21,683,15],[903,24,683,18,"JSON"],[903,28,683,22],[903,29,683,23,"parse"],[903,34,683,28],[903,35,683,29,"buckets"],[903,42,683,36],[903,43,683,37],[904,14,684,8],[904,18,684,14,"newData"],[904,25,684,31],[904,28,684,34],[904,30,684,36],[904,31,684,37],[904,32,684,38],[905,14,685,8],[905,18,685,12,"num"],[905,21,685,15],[905,24,685,18],[905,25,685,19],[906,14,686,8],[906,19,686,13],[906,23,686,19,"bucket"],[906,29,686,25],[906,33,686,29,"buckets"],[906,40,686,36],[906,42,686,38],[907,16,687,10],[907,20,687,14,"decrypted"],[907,29,687,23],[908,16,688,10],[909,16,689,10],[910,16,690,10],[910,20,690,14,"usedBucketNum"],[910,33,690,27],[910,38,690,32],[910,43,690,37],[910,45,690,39],[911,18,691,12],[911,22,691,16,"num"],[911,25,691,19],[911,30,691,24,"usedBucketNum"],[911,43,691,37],[911,45,691,39],[912,20,692,14,"decrypted"],[912,29,692,23],[912,32,692,26],[912,36,692,30],[913,18,693,12],[914,18,694,12,"num"],[914,21,694,15],[914,23,694,17],[915,16,695,10],[915,17,695,11],[915,23,695,17],[916,18,696,12],[917,18,697,12],[918,18,698,12,"decrypted"],[918,27,698,21],[918,30,698,24,"encryption"],[918,40,698,34],[918,41,698,35,"decrypt"],[918,48,698,42],[918,49,698,43,"bucket"],[918,55,698,49],[918,57,698,51],[918,61,698,55],[918,62,698,56,"cachedPassword"],[918,76,698,70],[918,77,698,71],[919,16,699,10],[920,16,701,10],[920,20,701,14],[920,21,701,15,"decrypted"],[920,30,701,24],[920,32,701,26],[921,18,702,12],[922,18,703,12,"newData"],[922,25,703,19],[922,26,703,20,"push"],[922,30,703,24],[922,31,703,25,"bucket"],[922,37,703,31],[922,38,703,32],[923,16,704,10],[923,17,704,11],[923,23,704,17],[924,18,705,12],[925,18,706,12],[926,18,707,12,"newData"],[926,25,707,19],[926,26,707,20,"push"],[926,30,707,24],[926,31,707,25,"encryption"],[926,41,707,35],[926,42,707,36,"encrypt"],[926,49,707,43],[926,50,707,44,"JSON"],[926,54,707,48],[926,55,707,49,"stringify"],[926,64,707,58],[926,65,707,59,"data"],[926,69,707,63],[926,70,707,64],[926,72,707,66],[926,76,707,70],[926,77,707,71,"cachedPassword"],[926,91,707,85],[926,92,707,86],[926,93,707,87],[927,16,708,10],[928,14,709,8],[929,14,711,8,"data"],[929,18,711,12],[929,21,711,15,"newData"],[929,28,711,22],[930,12,712,6],[931,12,714,6],[931,18,714,12],[931,22,714,16],[931,23,714,17,"setItem"],[931,30,714,24],[931,31,714,25],[931,37,714,31],[931,39,714,33,"JSON"],[931,43,714,37],[931,44,714,38,"stringify"],[931,53,714,47],[931,54,714,48,"data"],[931,58,714,52],[931,59,714,53],[931,60,714,54],[932,12,715,6],[932,18,715,12],[932,22,715,16],[932,23,715,17,"setItem"],[932,30,715,24],[932,31,715,25,"BlueApp"],[932,38,715,32],[932,39,715,33,"FLAG_ENCRYPTED"],[932,53,715,47],[932,55,715,49],[932,59,715,53],[932,60,715,54,"cachedPassword"],[932,74,715,68],[932,77,715,71],[932,80,715,74],[932,83,715,77],[932,85,715,79],[932,86,715,80],[934,12,717,6],[935,12,718,6],[935,16,718,12,"realmkeyValue"],[935,29,718,25],[935,38,718,34],[935,42,718,38],[935,43,718,39,"openRealmKeyValue"],[935,60,718,56],[935,61,718,57],[935,62,718,58],[936,12,719,6],[936,16,719,10],[936,17,719,11,"saveToRealmKeyValue"],[936,36,719,30],[936,37,719,31,"realmkeyValue"],[936,50,719,44],[936,52,719,46],[936,58,719,52],[936,60,719,54,"JSON"],[936,64,719,58],[936,65,719,59,"stringify"],[936,74,719,68],[936,75,719,69,"data"],[936,79,719,73],[936,80,719,74],[936,81,719,75],[937,12,720,6],[937,16,720,10],[937,17,720,11,"saveToRealmKeyValue"],[937,36,720,30],[937,37,720,31,"realmkeyValue"],[937,50,720,44],[937,52,720,46,"BlueApp"],[937,59,720,53],[937,60,720,54,"FLAG_ENCRYPTED"],[937,74,720,68],[937,76,720,70],[937,80,720,74],[937,81,720,75,"cachedPassword"],[937,95,720,89],[937,98,720,92],[937,101,720,95],[937,104,720,98],[937,106,720,100],[937,107,720,101],[938,12,721,6,"realmkeyValue"],[938,25,721,19],[938,26,721,20,"close"],[938,31,721,25],[938,32,721,26],[938,33,721,27],[939,10,722,4],[939,11,722,5],[939,12,722,6],[939,19,722,13,"error"],[939,24,722,23],[939,26,722,25],[940,12,723,6,"console"],[940,19,723,13],[940,20,723,14,"error"],[940,25,723,19],[940,26,723,20],[940,51,723,45],[940,53,723,47,"error"],[940,58,723,52],[940,59,723,53,"message"],[940,66,723,60],[940,67,723,61],[941,12,724,6],[941,16,724,6,"presentAlert"],[941,30,724,18],[941,32,724,19],[942,14,724,21,"message"],[942,21,724,28],[942,23,724,30],[942,49,724,56],[942,52,724,59,"error"],[942,57,724,64],[942,58,724,65,"message"],[943,12,724,73],[943,13,724,74],[943,14,724,75],[944,12,725,6],[944,16,725,10,"error"],[944,21,725,15],[944,22,725,16,"message"],[944,29,725,23],[944,30,725,24,"includes"],[944,38,725,32],[944,39,725,33],[944,69,725,63],[944,70,725,64],[944,72,725,66],[945,14,726,8,"console"],[945,21,726,15],[945,22,726,16,"warn"],[945,26,726,20],[945,27,726,21],[945,66,726,60],[945,67,726,61],[946,14,727,8],[946,18,727,12],[946,19,727,13,"purgeRealmKeyValueFile"],[946,41,727,35],[946,42,727,36],[946,43,727,37],[947,12,728,6],[948,10,729,4],[948,11,729,5],[948,20,729,14],[949,12,730,6,"savingInProgress"],[949,28,730,22],[949,31,730,25],[949,32,730,26],[950,10,731,4],[951,8,732,2],[951,9,732,3],[952,8,732,3],[952,17,630,8,"saveToDisk"],[952,27,630,18,"saveToDisk"],[952,28,630,18],[953,10,630,18],[953,17,630,18,"_saveToDisk"],[953,28,630,18],[953,29,630,18,"apply"],[953,34,630,18],[953,41,630,18,"arguments"],[953,50,630,18],[954,8,630,18],[955,8,630,18],[955,15,630,8,"saveToDisk"],[955,25,630,18],[956,6,630,18],[957,4,630,18],[958,6,630,18,"key"],[958,9,630,18],[959,6,630,18,"value"],[959,11,630,18],[959,13,952,2],[959,22,952,2,"purgeRealmKeyValueFile"],[959,44,952,24,"purgeRealmKeyValueFile"],[959,45,952,24],[959,47,952,27],[960,8,953,4],[960,12,953,10,"path"],[960,16,953,14],[960,19,953,17],[960,35,953,33],[961,8,954,4],[961,15,954,11,"Realm"],[961,29,954,16],[961,30,954,17,"deleteFile"],[961,40,954,27],[961,41,954,28],[962,10,955,6,"path"],[962,14,955,10],[962,16,955,6,"path"],[963,8,956,4],[963,9,956,5],[963,10,956,6],[964,6,957,2],[965,4,957,3],[966,6,957,3,"key"],[966,9,957,3],[967,6,957,3,"value"],[967,11,957,3],[968,8,957,3],[968,12,957,3,"_moveRealmFilesToCacheDirectory"],[968,43,957,3],[968,50,957,3,"_asyncToGenerator2"],[968,68,957,3],[968,69,957,3,"default"],[968,76,957,3],[968,78,959,2],[968,91,959,41],[969,10,960,4],[969,14,960,10,"documentPath"],[969,26,960,22],[969,29,960,25,"RNFS"],[969,51,960,29],[969,52,960,30,"DocumentDirectoryPath"],[969,73,960,51],[969,74,960,52],[969,75,960,53],[970,10,961,4],[970,14,961,10,"cachePath"],[970,23,961,19],[970,26,961,22,"RNFS"],[970,48,961,26],[970,49,961,27,"CachesDirectoryPath"],[970,68,961,46],[970,69,961,47],[970,70,961,48],[971,10,962,4],[971,14,962,8],[972,12,963,6],[972,16,963,10],[972,24,963,18,"RNFS"],[972,46,963,22],[972,47,963,23,"exists"],[972,53,963,29],[972,54,963,30,"documentPath"],[972,66,963,42],[972,67,963,43],[972,68,963,44],[972,70,963,46],[972,77,963,53],[972,78,963,54],[973,12,964,6],[973,16,964,12,"files"],[973,21,964,17],[973,30,964,26,"RNFS"],[973,52,964,30],[973,53,964,31,"readDir"],[973,60,964,38],[973,61,964,39,"documentPath"],[973,73,964,51],[973,74,964,52],[973,75,964,53],[973,76,964,54],[974,12,965,6],[974,16,965,10,"Array"],[974,21,965,15],[974,22,965,16,"isArray"],[974,29,965,23],[974,30,965,24,"files"],[974,35,965,29],[974,36,965,30],[974,40,965,34,"files"],[974,45,965,39],[974,46,965,40,"length"],[974,52,965,46],[974,57,965,51],[974,58,965,52],[974,60,965,54],[974,67,965,61],[974,68,965,62],[975,12,966,6],[975,16,966,12,"appRealmFiles"],[975,29,966,25],[975,32,966,28,"files"],[975,37,966,33],[975,38,966,34,"filter"],[975,44,966,40],[975,45,967,8],[975,55,967,8,"file"],[975,59,967,12],[976,14,967,12],[976,21,967,16,"file"],[976,25,967,20],[976,26,967,21,"name"],[976,30,967,25],[976,31,967,26,"endsWith"],[976,39,967,34],[976,40,967,35],[976,48,967,43],[976,49,967,44],[976,53,967,48,"file"],[976,57,967,52],[976,58,967,53,"name"],[976,62,967,57],[976,63,967,58,"endsWith"],[976,71,967,66],[976,72,967,67],[976,85,967,80],[976,86,967,81],[976,90,967,85,"file"],[976,94,967,89],[976,95,967,90,"name"],[976,99,967,94],[976,100,967,95,"includes"],[976,108,967,103],[976,109,967,104],[976,128,967,123],[976,129,967,124],[977,12,967,124],[977,13,968,6],[977,14,968,7],[978,12,970,6],[978,17,970,11],[978,21,970,17,"file"],[978,25,970,21],[978,29,970,25,"appRealmFiles"],[978,42,970,38],[978,44,970,40],[979,14,971,8],[979,18,971,14,"filePath"],[979,26,971,22],[979,29,971,25],[979,32,971,28,"documentPath"],[979,44,971,40],[979,48,971,44,"file"],[979,52,971,48],[979,53,971,49,"name"],[979,57,971,53],[979,59,971,55],[980,14,972,8],[980,18,972,14,"newFilePath"],[980,29,972,25],[980,32,972,28],[980,35,972,31,"cachePath"],[980,44,972,40],[980,48,972,44,"file"],[980,52,972,48],[980,53,972,49,"name"],[980,57,972,53],[980,59,972,55],[981,14,973,8],[981,18,973,14,"fileExists"],[981,28,973,24],[981,37,973,33,"RNFS"],[981,59,973,37],[981,60,973,38,"exists"],[981,66,973,44],[981,67,973,45,"filePath"],[981,75,973,53],[981,76,973,54],[981,77,973,55],[981,78,973,56],[982,14,974,8],[982,18,974,14,"cacheFileExists"],[982,33,974,29],[982,42,974,38,"RNFS"],[982,64,974,42],[982,65,974,43,"exists"],[982,71,974,49],[982,72,974,50,"newFilePath"],[982,83,974,61],[982,84,974,62],[982,85,974,63],[982,86,974,64],[984,14,976,8],[984,18,976,12,"fileExists"],[984,28,976,22],[984,30,976,24],[985,16,977,10],[985,20,977,14,"cacheFileExists"],[985,35,977,29],[985,37,977,31],[986,18,978,12],[986,24,978,18,"RNFS"],[986,46,978,22],[986,47,978,23,"unlink"],[986,53,978,29],[986,54,978,30,"newFilePath"],[986,65,978,41],[986,66,978,42],[986,67,978,43],[986,68,978,44],[987,18,979,12,"console"],[987,25,979,19],[987,26,979,20,"log"],[987,29,979,23],[987,30,979,24],[987,67,979,61,"newFilePath"],[987,78,979,72],[987,80,979,74],[987,81,979,75],[988,16,980,10],[989,16,981,10],[989,22,981,16,"RNFS"],[989,44,981,20],[989,45,981,21,"moveFile"],[989,53,981,29],[989,54,981,30,"filePath"],[989,62,981,38],[989,64,981,40,"newFilePath"],[989,75,981,51],[989,76,981,52],[989,77,981,53],[989,78,981,54],[990,16,982,10,"console"],[990,23,982,17],[990,24,982,18,"log"],[990,27,982,21],[990,28,982,22],[990,49,982,43,"filePath"],[990,57,982,51],[990,64,982,58,"newFilePath"],[990,75,982,69],[990,77,982,71],[990,78,982,72],[991,14,983,8],[991,15,983,9],[991,21,983,15],[992,16,984,10,"console"],[992,23,984,17],[992,24,984,18,"log"],[992,27,984,21],[992,28,984,22],[992,52,984,46,"filePath"],[992,60,984,54],[992,62,984,56],[992,63,984,57],[993,14,985,8],[994,12,986,6],[995,10,987,4],[995,11,987,5],[995,12,987,6],[995,19,987,13,"error"],[995,24,987,18],[995,26,987,20],[996,12,988,6,"console"],[996,19,988,13],[996,20,988,14,"error"],[996,25,988,19],[996,26,988,20],[996,53,988,47],[996,55,988,49,"error"],[996,60,988,54],[996,61,988,55],[997,12,989,6],[997,18,989,12],[997,22,989,16,"Error"],[997,27,989,21],[997,28,989,22],[997,57,989,52,"error"],[997,62,989,57],[997,63,989,68,"message"],[997,70,989,75],[997,72,989,77],[997,73,989,78],[998,10,990,4],[999,8,991,2],[999,9,991,3],[1000,8,991,3],[1000,17,959,8,"moveRealmFilesToCacheDirectory"],[1000,47,959,38,"moveRealmFilesToCacheDirectory"],[1000,48,959,38],[1001,10,959,38],[1001,17,959,38,"_moveRealmFilesToCacheDirectory"],[1001,48,959,38],[1001,49,959,38,"apply"],[1001,54,959,38],[1001,61,959,38,"arguments"],[1001,70,959,38],[1002,8,959,38],[1003,8,959,38],[1003,15,959,8,"moveRealmFilesToCacheDirectory"],[1003,45,959,38],[1004,6,959,38],[1005,4,959,38],[1006,6,959,38,"key"],[1006,9,959,38],[1007,6,959,38,"value"],[1007,11,959,38],[1007,13,90,2],[1007,22,90,9,"getInstance"],[1007,33,90,20,"getInstance"],[1007,34,90,20],[1007,36,90,32],[1008,8,91,4],[1008,12,91,8],[1008,13,91,9,"BlueApp"],[1008,20,91,16],[1008,21,91,17,"_instance"],[1008,30,91,26],[1008,32,91,28],[1009,10,92,6,"BlueApp"],[1009,17,92,13],[1009,18,92,14,"_instance"],[1009,27,92,23],[1009,30,92,26],[1009,34,92,30,"BlueApp"],[1009,41,92,37],[1009,42,92,38],[1009,43,92,39],[1010,8,93,4],[1011,8,95,4],[1011,15,95,11,"BlueApp"],[1011,22,95,18],[1011,23,95,19,"_instance"],[1011,32,95,28],[1012,6,96,2],[1013,4,96,3],[1014,2,96,3],[1015,2,96,3,"_BlueApp"],[1015,10,96,3],[1015,13,68,13,"BlueApp"],[1015,20,68,20],[1016,2,68,13,"BlueApp"],[1016,9,68,20],[1016,10,69,9,"FLAG_ENCRYPTED"],[1016,24,69,23],[1016,27,69,26],[1016,43,69,42],[1017,2,68,13,"BlueApp"],[1017,9,68,20],[1017,10,70,9,"LNDHUB"],[1017,16,70,15],[1017,19,70,18],[1017,27,70,26],[1018,2,68,13,"BlueApp"],[1018,9,68,20],[1018,10,71,9,"DO_NOT_TRACK"],[1018,22,71,21],[1018,25,71,24],[1018,37,71,36],[1019,2,68,13,"BlueApp"],[1019,9,68,20],[1019,10,72,9,"HANDOFF_STORAGE_KEY"],[1019,29,72,28],[1019,32,72,31],[1019,41,72,40],[1020,2,68,13,"BlueApp"],[1020,9,68,20],[1020,10,74,17,"_instance"],[1020,19,74,26],[1020,22,74,45],[1020,26,74,49],[1021,2,68,13,"BlueApp"],[1021,9,68,20],[1021,10,76,9,"keys2migrate"],[1021,22,76,21],[1021,25,76,24],[1021,26,76,25,"BlueApp"],[1021,34,76,32],[1021,35,76,33,"HANDOFF_STORAGE_KEY"],[1021,54,76,52],[1021,56,76,54,"BlueApp"],[1021,64,76,61],[1021,65,76,62,"DO_NOT_TRACK"],[1021,77,76,74],[1021,78,76,75],[1022,0,76,75],[1022,3]],"functionMap":{"names":["<global>","BlueApp","BlueApp#constructor","BlueApp.getInstance","BlueApp#migrateKeys","BlueApp#setItem","BlueApp#getItem","BlueApp#getItemWithFallbackToRealm","BlueApp#storageIsEncrypted","BlueApp#isPasswordInUse","BlueApp#decryptData","BlueApp#decryptStorage","BlueApp#encryptStorage","BlueApp#createFakeStorage","BlueApp#hashIt","BlueApp#getRealmForTransactions","BlueApp#openRealmKeyValue","BlueApp#saveToRealmKeyValue","realmkeyValue.write$argument_0","BlueApp#loadFromDisk","wallets.some$argument_0","BlueApp#deleteWallet","BlueApp#inflateWalletFromRealm","BlueApp#offloadWalletToRealm","realm.write$argument_0","BlueApp#saveToDisk","Promise$argument_0","BlueApp#fetchWalletBalances","BlueApp#fetchWalletTransactions","BlueApp#fetchSenderPaymentCodes","BlueApp#getWallets","BlueApp#getTransactions","txs.map$argument_0","wallets.filter$argument_0","txs.sort$argument_0","BlueApp#getBalance","BlueApp#isHandoffEnabled","BlueApp#setIsHandoffEnabled","BlueApp#isDoNotTrackEnabled","BlueApp#setDoNotTrack","BlueApp#sleep","BlueApp#purgeRealmKeyValueFile","BlueApp#moveRealmFilesToCacheDirectory","files.filter$argument_0"],"mappings":"AAA;OCmE;ECe;GDK;EEE;GFM;EGE;GHe;YIM;GJM;YKM;GLM;+BME;GNkB;uBOE;GPU;oBQE;GRQ;ESM;GTe;mBUE;GVW;mBWE;GXa;sBYM;GZmB;WaE;GbE;EcM;Gd2B;EeQ;GfmC;EgBE;wBCC;KDS;GhBC;EkBS;+BC4H,+BD;GlBW;iBoBQ;GpBc;EqBE;GrBiC;EsBE;kBCO;ODgB;kBCQ;ODuC;GtBE;EwBS;wBCI,uDD;GxBkG;wB0BQ;G1ByB;4B2BY;G3BmC;4B4BE;G5BoB;e6BE;G7BE;oB8BU;kBCe;cDK;6CEQ,uFF;YGc;OHI;G9BE;ekCK;GlCM;qBmCE;GnCK;wBoCE;GpCE;wBqCE;GrCe;kBsCE;GtCM;UuCK;uBdC,kCc;GvCC;EwCE;GxCK;EyCE;QCQ,oHD;GzCwB;CDC"}},"type":"js/module"}]}