{"dependencies":[{"name":"./generated/encode-html.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":39,"index":313},"end":{"line":7,"column":76,"index":350}}],"key":"7o20x/Cq81Hhs34VJdGpQbgDXkE="}},{"name":"./escape.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":18,"index":371},"end":{"line":8,"column":40,"index":393}},{"start":{"line":8,"column":18,"index":371},"end":{"line":8,"column":40,"index":393}}],"key":"9VodjIK1dTkJhqr37ij4XDGLn1Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encodeNonAsciiHTML = exports.encodeHTML = void 0;\n  var encode_html_js_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0], \"./generated/encode-html.js\"));\n  var htmlReplacer = /[\\t\\n!-,./:-@[-`\\f{-}$\\x80-\\uFFFF]/g;\n  /**\n   * Encodes all characters in the input using HTML entities. This includes\n   * characters that are valid ASCII characters in HTML documents, such as `#`.\n   *\n   * To get a more compact output, consider using the `encodeNonAsciiHTML`\n   * function, which will only encode characters that are not valid in HTML\n   * documents, as well as non-ASCII characters.\n   *\n   * If a character has no equivalent entity, a numeric hexadecimal reference\n   * (eg. `&#xfc;`) will be used.\n   */\n  function encodeHTML(data) {\n    return encodeHTMLTrieRe(htmlReplacer, data);\n  }\n  exports.encodeHTML = encodeHTML;\n  /**\n   * Encodes all non-ASCII characters, as well as characters not valid in HTML\n   * documents using HTML entities. This function will not encode characters that\n   * are valid in HTML documents, such as `#`.\n   *\n   * If a character has no equivalent entity, a numeric hexadecimal reference\n   * (eg. `&#xfc;`) will be used.\n   */\n  function encodeNonAsciiHTML(data) {\n    return encodeHTMLTrieRe(_$$_REQUIRE(_dependencyMap[1], \"./escape.js\").xmlReplacer, data);\n  }\n  exports.encodeNonAsciiHTML = encodeNonAsciiHTML;\n  function encodeHTMLTrieRe(regExp, str) {\n    var ret = \"\";\n    var lastIdx = 0;\n    var match;\n    while ((match = regExp.exec(str)) !== null) {\n      var i = match.index;\n      ret += str.substring(lastIdx, i);\n      var char = str.charCodeAt(i);\n      var next = encode_html_js_1.default.get(char);\n      if (typeof next === \"object\") {\n        // We are in a branch. Try to match the next char.\n        if (i + 1 < str.length) {\n          var nextChar = str.charCodeAt(i + 1);\n          var value = typeof next.n === \"number\" ? next.n === nextChar ? next.o : undefined : next.n.get(nextChar);\n          if (value !== undefined) {\n            ret += value;\n            lastIdx = regExp.lastIndex += 1;\n            continue;\n          }\n        }\n        next = next.v;\n      }\n      // We might have a tree node without a value; skip and use a numeric entity.\n      if (next !== undefined) {\n        ret += next;\n        lastIdx = i + 1;\n      } else {\n        var cp = (0, _$$_REQUIRE(_dependencyMap[1], \"./escape.js\").getCodePoint)(str, i);\n        ret += \"&#x\".concat(cp.toString(16), \";\");\n        // Increase by 1 if we have a surrogate pair\n        lastIdx = regExp.lastIndex += Number(cp !== char);\n      }\n    }\n    return ret + str.substr(lastIdx);\n  }\n});","lineCount":77,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"encodeNonAsciiHTML"],[12,28,6,26],[12,31,6,29,"exports"],[12,38,6,36],[12,39,6,37,"encodeHTML"],[12,49,6,47],[12,52,6,50],[12,57,6,55],[12,58,6,56],[13,2,7,0],[13,6,7,4,"encode_html_js_1"],[13,22,7,20],[13,25,7,23,"__importDefault"],[13,40,7,38],[13,41,7,39,"require"],[13,52,7,46],[13,53,7,46,"_dependencyMap"],[13,67,7,46],[13,100,7,75],[13,101,7,76],[13,102,7,77],[14,2,9,0],[14,6,9,4,"htmlReplacer"],[14,18,9,16],[14,21,9,19],[14,58,9,56],[15,2,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,0,14,0],[20,0,15,0],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,0,20,0],[26,2,21,0],[26,11,21,9,"encodeHTML"],[26,21,21,19,"encodeHTML"],[26,22,21,20,"data"],[26,26,21,24],[26,28,21,26],[27,4,22,4],[27,11,22,11,"encodeHTMLTrieRe"],[27,27,22,27],[27,28,22,28,"htmlReplacer"],[27,40,22,40],[27,42,22,42,"data"],[27,46,22,46],[27,47,22,47],[28,2,23,0],[29,2,24,0,"exports"],[29,9,24,7],[29,10,24,8,"encodeHTML"],[29,20,24,18],[29,23,24,21,"encodeHTML"],[29,33,24,31],[30,2,25,0],[31,0,26,0],[32,0,27,0],[33,0,28,0],[34,0,29,0],[35,0,30,0],[36,0,31,0],[37,0,32,0],[38,2,33,0],[38,11,33,9,"encodeNonAsciiHTML"],[38,29,33,27,"encodeNonAsciiHTML"],[38,30,33,28,"data"],[38,34,33,32],[38,36,33,34],[39,4,34,4],[39,11,34,11,"encodeHTMLTrieRe"],[39,27,34,27],[39,28,34,28,"_$$_REQUIRE"],[39,39,34,28],[39,40,34,28,"_dependencyMap"],[39,54,34,28],[39,74,34,40,"xmlReplacer"],[39,85,34,51],[39,87,34,53,"data"],[39,91,34,57],[39,92,34,58],[40,2,35,0],[41,2,36,0,"exports"],[41,9,36,7],[41,10,36,8,"encodeNonAsciiHTML"],[41,28,36,26],[41,31,36,29,"encodeNonAsciiHTML"],[41,49,36,47],[42,2,37,0],[42,11,37,9,"encodeHTMLTrieRe"],[42,27,37,25,"encodeHTMLTrieRe"],[42,28,37,26,"regExp"],[42,34,37,32],[42,36,37,34,"str"],[42,39,37,37],[42,41,37,39],[43,4,38,4],[43,8,38,8,"ret"],[43,11,38,11],[43,14,38,14],[43,16,38,16],[44,4,39,4],[44,8,39,8,"lastIdx"],[44,15,39,15],[44,18,39,18],[44,19,39,19],[45,4,40,4],[45,8,40,8,"match"],[45,13,40,13],[46,4,41,4],[46,11,41,11],[46,12,41,12,"match"],[46,17,41,17],[46,20,41,20,"regExp"],[46,26,41,26],[46,27,41,27,"exec"],[46,31,41,31],[46,32,41,32,"str"],[46,35,41,35],[46,36,41,36],[46,42,41,42],[46,46,41,46],[46,48,41,48],[47,6,42,8],[47,10,42,12,"i"],[47,11,42,13],[47,14,42,16,"match"],[47,19,42,21],[47,20,42,22,"index"],[47,25,42,27],[48,6,43,8,"ret"],[48,9,43,11],[48,13,43,15,"str"],[48,16,43,18],[48,17,43,19,"substring"],[48,26,43,28],[48,27,43,29,"lastIdx"],[48,34,43,36],[48,36,43,38,"i"],[48,37,43,39],[48,38,43,40],[49,6,44,8],[49,10,44,12,"char"],[49,14,44,16],[49,17,44,19,"str"],[49,20,44,22],[49,21,44,23,"charCodeAt"],[49,31,44,33],[49,32,44,34,"i"],[49,33,44,35],[49,34,44,36],[50,6,45,8],[50,10,45,12,"next"],[50,14,45,16],[50,17,45,19,"encode_html_js_1"],[50,33,45,35],[50,34,45,36,"default"],[50,41,45,43],[50,42,45,44,"get"],[50,45,45,47],[50,46,45,48,"char"],[50,50,45,52],[50,51,45,53],[51,6,46,8],[51,10,46,12],[51,17,46,19,"next"],[51,21,46,23],[51,26,46,28],[51,34,46,36],[51,36,46,38],[52,8,47,12],[53,8,48,12],[53,12,48,16,"i"],[53,13,48,17],[53,16,48,20],[53,17,48,21],[53,20,48,24,"str"],[53,23,48,27],[53,24,48,28,"length"],[53,30,48,34],[53,32,48,36],[54,10,49,16],[54,14,49,20,"nextChar"],[54,22,49,28],[54,25,49,31,"str"],[54,28,49,34],[54,29,49,35,"charCodeAt"],[54,39,49,45],[54,40,49,46,"i"],[54,41,49,47],[54,44,49,50],[54,45,49,51],[54,46,49,52],[55,10,50,16],[55,14,50,20,"value"],[55,19,50,25],[55,22,50,28],[55,29,50,35,"next"],[55,33,50,39],[55,34,50,40,"n"],[55,35,50,41],[55,40,50,46],[55,48,50,54],[55,51,51,22,"next"],[55,55,51,26],[55,56,51,27,"n"],[55,57,51,28],[55,62,51,33,"nextChar"],[55,70,51,41],[55,73,52,26,"next"],[55,77,52,30],[55,78,52,31,"o"],[55,79,52,32],[55,82,53,26,"undefined"],[55,91,53,35],[55,94,54,22,"next"],[55,98,54,26],[55,99,54,27,"n"],[55,100,54,28],[55,101,54,29,"get"],[55,104,54,32],[55,105,54,33,"nextChar"],[55,113,54,41],[55,114,54,42],[56,10,55,16],[56,14,55,20,"value"],[56,19,55,25],[56,24,55,30,"undefined"],[56,33,55,39],[56,35,55,41],[57,12,56,20,"ret"],[57,15,56,23],[57,19,56,27,"value"],[57,24,56,32],[58,12,57,20,"lastIdx"],[58,19,57,27],[58,22,57,30,"regExp"],[58,28,57,36],[58,29,57,37,"lastIndex"],[58,38,57,46],[58,42,57,50],[58,43,57,51],[59,12,58,20],[60,10,59,16],[61,8,60,12],[62,8,61,12,"next"],[62,12,61,16],[62,15,61,19,"next"],[62,19,61,23],[62,20,61,24,"v"],[62,21,61,25],[63,6,62,8],[64,6,63,8],[65,6,64,8],[65,10,64,12,"next"],[65,14,64,16],[65,19,64,21,"undefined"],[65,28,64,30],[65,30,64,32],[66,8,65,12,"ret"],[66,11,65,15],[66,15,65,19,"next"],[66,19,65,23],[67,8,66,12,"lastIdx"],[67,15,66,19],[67,18,66,22,"i"],[67,19,66,23],[67,22,66,26],[67,23,66,27],[68,6,67,8],[68,7,67,9],[68,13,68,13],[69,8,69,12],[69,12,69,16,"cp"],[69,14,69,18],[69,17,69,21],[69,18,69,22],[69,19,69,23],[69,21,69,25,"_$$_REQUIRE"],[69,32,69,25],[69,33,69,25,"_dependencyMap"],[69,47,69,25],[69,67,69,37,"getCodePoint"],[69,79,69,49],[69,81,69,51,"str"],[69,84,69,54],[69,86,69,56,"i"],[69,87,69,57],[69,88,69,58],[70,8,70,12,"ret"],[70,11,70,15],[70,15,70,19],[70,20,70,24],[70,21,70,25,"concat"],[70,27,70,31],[70,28,70,32,"cp"],[70,30,70,34],[70,31,70,35,"toString"],[70,39,70,43],[70,40,70,44],[70,42,70,46],[70,43,70,47],[70,45,70,49],[70,48,70,52],[70,49,70,53],[71,8,71,12],[72,8,72,12,"lastIdx"],[72,15,72,19],[72,18,72,22,"regExp"],[72,24,72,28],[72,25,72,29,"lastIndex"],[72,34,72,38],[72,38,72,42,"Number"],[72,44,72,48],[72,45,72,49,"cp"],[72,47,72,51],[72,52,72,56,"char"],[72,56,72,60],[72,57,72,61],[73,6,73,8],[74,4,74,4],[75,4,75,4],[75,11,75,11,"ret"],[75,14,75,14],[75,17,75,17,"str"],[75,20,75,20],[75,21,75,21,"substr"],[75,27,75,27],[75,28,75,28,"lastIdx"],[75,35,75,35],[75,36,75,36],[76,2,76,0],[77,0,76,1],[77,3]],"functionMap":{"names":["<global>","<anonymous>","encodeHTML","encodeNonAsciiHTML","encodeHTMLTrieRe"],"mappings":"AAA;wDCC;CDE;AEiB;CFE;AGU;CHE;AIE;CJuC"}},"type":"js/module"}]}