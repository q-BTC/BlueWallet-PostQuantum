{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":17,"index":162},"end":{"line":7,"column":33,"index":178}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":5,"column":13,"index":88},"end":{"line":5,"column":25,"index":100}},{"start":{"line":6,"column":21,"index":123},"end":{"line":6,"column":41,"index":143}},{"start":{"line":6,"column":21,"index":123},"end":{"line":6,"column":41,"index":143}},{"start":{"line":6,"column":21,"index":123},"end":{"line":6,"column":41,"index":143}},{"start":{"line":6,"column":21,"index":123},"end":{"line":6,"column":41,"index":143}},{"start":{"line":4,"column":12,"index":54},"end":{"line":4,"column":31,"index":73}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /**\n  * @param {EDDSA} eddsa - eddsa instance\n  * @param {Array<Bytes>|Object} sig -\n  * @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n  * @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n  * @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n  * @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n  */\n  function Signature(eddsa, sig) {\n    this.eddsa = eddsa;\n    if (typeof sig !== 'object') sig = _$$_REQUIRE(_dependencyMap[0], \"../utils\").parseBytes(sig);\n    if (Array.isArray(sig)) {\n      _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(sig.length === eddsa.encodingLength * 2, 'Signature has invalid size');\n      sig = {\n        R: sig.slice(0, eddsa.encodingLength),\n        S: sig.slice(eddsa.encodingLength)\n      };\n    }\n    _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(sig.R && sig.S, 'Signature without R or S');\n    if (eddsa.isPoint(sig.R)) this._R = sig.R;\n    if (sig.S instanceof _$$_REQUIRE(_dependencyMap[1], \"bn.js\")) this._S = sig.S;\n    this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n    this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n  }\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(Signature, 'S', function S() {\n    return this.eddsa.decodeInt(this.Sencoded());\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(Signature, 'R', function R() {\n    return this.eddsa.decodePoint(this.Rencoded());\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(Signature, 'Rencoded', function Rencoded() {\n    return this.eddsa.encodePoint(this.R());\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(Signature, 'Sencoded', function Sencoded() {\n    return this.eddsa.encodeInt(this.S());\n  });\n  Signature.prototype.toBytes = function toBytes() {\n    return this.Rencoded().concat(this.Sencoded());\n  };\n  Signature.prototype.toHex = function toHex() {\n    return _$$_REQUIRE(_dependencyMap[0], \"../utils\").encode(this.toBytes(), 'hex').toUpperCase();\n  };\n  module.exports = Signature;\n});","lineCount":47,"map":[[2,2,1,0],[2,14,1,12],[4,2,9,0],[5,0,10,0],[6,0,11,0],[7,0,12,0],[8,0,13,0],[9,0,14,0],[10,0,15,0],[11,0,16,0],[12,2,17,0],[12,11,17,9,"Signature"],[12,20,17,18,"Signature"],[12,21,17,19,"eddsa"],[12,26,17,24],[12,28,17,26,"sig"],[12,31,17,29],[12,33,17,31],[13,4,18,2],[13,8,18,6],[13,9,18,7,"eddsa"],[13,14,18,12],[13,17,18,15,"eddsa"],[13,22,18,20],[14,4,20,2],[14,8,20,6],[14,15,20,13,"sig"],[14,18,20,16],[14,23,20,21],[14,31,20,29],[14,33,21,4,"sig"],[14,36,21,7],[14,39,21,10,"_$$_REQUIRE"],[14,50,21,10],[14,51,21,10,"_dependencyMap"],[14,65,21,10],[14,82,21,10,"parseBytes"],[14,92,21,10],[14,93,21,21,"sig"],[14,96,21,24],[14,97,21,25],[15,4,23,2],[15,8,23,6,"Array"],[15,13,23,11],[15,14,23,12,"isArray"],[15,21,23,19],[15,22,23,20,"sig"],[15,25,23,23],[15,26,23,24],[15,28,23,26],[16,6,24,4,"_$$_REQUIRE"],[16,17,24,4],[16,18,24,4,"_dependencyMap"],[16,32,24,4],[16,49,24,4,"assert"],[16,55,24,4],[16,56,24,11,"sig"],[16,59,24,14],[16,60,24,15,"length"],[16,66,24,21],[16,71,24,26,"eddsa"],[16,76,24,31],[16,77,24,32,"encodingLength"],[16,91,24,46],[16,94,24,49],[16,95,24,50],[16,97,24,52],[16,125,24,80],[16,126,24,81],[17,6,25,4,"sig"],[17,9,25,7],[17,12,25,10],[18,8,26,6,"R"],[18,9,26,7],[18,11,26,9,"sig"],[18,14,26,12],[18,15,26,13,"slice"],[18,20,26,18],[18,21,26,19],[18,22,26,20],[18,24,26,22,"eddsa"],[18,29,26,27],[18,30,26,28,"encodingLength"],[18,44,26,42],[18,45,26,43],[19,8,27,6,"S"],[19,9,27,7],[19,11,27,9,"sig"],[19,14,27,12],[19,15,27,13,"slice"],[19,20,27,18],[19,21,27,19,"eddsa"],[19,26,27,24],[19,27,27,25,"encodingLength"],[19,41,27,39],[20,6,28,4],[20,7,28,5],[21,4,29,2],[22,4,31,2,"_$$_REQUIRE"],[22,15,31,2],[22,16,31,2,"_dependencyMap"],[22,30,31,2],[22,47,31,2,"assert"],[22,53,31,2],[22,54,31,9,"sig"],[22,57,31,12],[22,58,31,13,"R"],[22,59,31,14],[22,63,31,18,"sig"],[22,66,31,21],[22,67,31,22,"S"],[22,68,31,23],[22,70,31,25],[22,96,31,51],[22,97,31,52],[23,4,33,2],[23,8,33,6,"eddsa"],[23,13,33,11],[23,14,33,12,"isPoint"],[23,21,33,19],[23,22,33,20,"sig"],[23,25,33,23],[23,26,33,24,"R"],[23,27,33,25],[23,28,33,26],[23,30,34,4],[23,34,34,8],[23,35,34,9,"_R"],[23,37,34,11],[23,40,34,14,"sig"],[23,43,34,17],[23,44,34,18,"R"],[23,45,34,19],[24,4,35,2],[24,8,35,6,"sig"],[24,11,35,9],[24,12,35,10,"S"],[24,13,35,11],[24,25,35,11,"_$$_REQUIRE"],[24,36,35,11],[24,37,35,11,"_dependencyMap"],[24,51,35,11],[24,64,35,25],[24,66,36,4],[24,70,36,8],[24,71,36,9,"_S"],[24,73,36,11],[24,76,36,14,"sig"],[24,79,36,17],[24,80,36,18,"S"],[24,81,36,19],[25,4,38,2],[25,8,38,6],[25,9,38,7,"_Rencoded"],[25,18,38,16],[25,21,38,19,"Array"],[25,26,38,24],[25,27,38,25,"isArray"],[25,34,38,32],[25,35,38,33,"sig"],[25,38,38,36],[25,39,38,37,"R"],[25,40,38,38],[25,41,38,39],[25,44,38,42,"sig"],[25,47,38,45],[25,48,38,46,"R"],[25,49,38,47],[25,52,38,50,"sig"],[25,55,38,53],[25,56,38,54,"Rencoded"],[25,64,38,62],[26,4,39,2],[26,8,39,6],[26,9,39,7,"_Sencoded"],[26,18,39,16],[26,21,39,19,"Array"],[26,26,39,24],[26,27,39,25,"isArray"],[26,34,39,32],[26,35,39,33,"sig"],[26,38,39,36],[26,39,39,37,"S"],[26,40,39,38],[26,41,39,39],[26,44,39,42,"sig"],[26,47,39,45],[26,48,39,46,"S"],[26,49,39,47],[26,52,39,50,"sig"],[26,55,39,53],[26,56,39,54,"Sencoded"],[26,64,39,62],[27,2,40,0],[28,2,42,0,"_$$_REQUIRE"],[28,13,42,0],[28,14,42,0,"_dependencyMap"],[28,28,42,0],[28,45,42,0,"cachedProperty"],[28,59,42,0],[28,60,42,15,"Signature"],[28,69,42,24],[28,71,42,26],[28,74,42,29],[28,76,42,31],[28,85,42,40,"S"],[28,86,42,41,"S"],[28,87,42,41],[28,89,42,44],[29,4,43,2],[29,11,43,9],[29,15,43,13],[29,16,43,14,"eddsa"],[29,21,43,19],[29,22,43,20,"decodeInt"],[29,31,43,29],[29,32,43,30],[29,36,43,34],[29,37,43,35,"Sencoded"],[29,45,43,43],[29,46,43,44],[29,47,43,45],[29,48,43,46],[30,2,44,0],[30,3,44,1],[30,4,44,2],[31,2,46,0,"_$$_REQUIRE"],[31,13,46,0],[31,14,46,0,"_dependencyMap"],[31,28,46,0],[31,45,46,0,"cachedProperty"],[31,59,46,0],[31,60,46,15,"Signature"],[31,69,46,24],[31,71,46,26],[31,74,46,29],[31,76,46,31],[31,85,46,40,"R"],[31,86,46,41,"R"],[31,87,46,41],[31,89,46,44],[32,4,47,2],[32,11,47,9],[32,15,47,13],[32,16,47,14,"eddsa"],[32,21,47,19],[32,22,47,20,"decodePoint"],[32,33,47,31],[32,34,47,32],[32,38,47,36],[32,39,47,37,"Rencoded"],[32,47,47,45],[32,48,47,46],[32,49,47,47],[32,50,47,48],[33,2,48,0],[33,3,48,1],[33,4,48,2],[34,2,50,0,"_$$_REQUIRE"],[34,13,50,0],[34,14,50,0,"_dependencyMap"],[34,28,50,0],[34,45,50,0,"cachedProperty"],[34,59,50,0],[34,60,50,15,"Signature"],[34,69,50,24],[34,71,50,26],[34,81,50,36],[34,83,50,38],[34,92,50,47,"Rencoded"],[34,100,50,55,"Rencoded"],[34,101,50,55],[34,103,50,58],[35,4,51,2],[35,11,51,9],[35,15,51,13],[35,16,51,14,"eddsa"],[35,21,51,19],[35,22,51,20,"encodePoint"],[35,33,51,31],[35,34,51,32],[35,38,51,36],[35,39,51,37,"R"],[35,40,51,38],[35,41,51,39],[35,42,51,40],[35,43,51,41],[36,2,52,0],[36,3,52,1],[36,4,52,2],[37,2,54,0,"_$$_REQUIRE"],[37,13,54,0],[37,14,54,0,"_dependencyMap"],[37,28,54,0],[37,45,54,0,"cachedProperty"],[37,59,54,0],[37,60,54,15,"Signature"],[37,69,54,24],[37,71,54,26],[37,81,54,36],[37,83,54,38],[37,92,54,47,"Sencoded"],[37,100,54,55,"Sencoded"],[37,101,54,55],[37,103,54,58],[38,4,55,2],[38,11,55,9],[38,15,55,13],[38,16,55,14,"eddsa"],[38,21,55,19],[38,22,55,20,"encodeInt"],[38,31,55,29],[38,32,55,30],[38,36,55,34],[38,37,55,35,"S"],[38,38,55,36],[38,39,55,37],[38,40,55,38],[38,41,55,39],[39,2,56,0],[39,3,56,1],[39,4,56,2],[40,2,58,0,"Signature"],[40,11,58,9],[40,12,58,10,"prototype"],[40,21,58,19],[40,22,58,20,"toBytes"],[40,29,58,27],[40,32,58,30],[40,41,58,39,"toBytes"],[40,48,58,46,"toBytes"],[40,49,58,46],[40,51,58,49],[41,4,59,2],[41,11,59,9],[41,15,59,13],[41,16,59,14,"Rencoded"],[41,24,59,22],[41,25,59,23],[41,26,59,24],[41,27,59,25,"concat"],[41,33,59,31],[41,34,59,32],[41,38,59,36],[41,39,59,37,"Sencoded"],[41,47,59,45],[41,48,59,46],[41,49,59,47],[41,50,59,48],[42,2,60,0],[42,3,60,1],[43,2,62,0,"Signature"],[43,11,62,9],[43,12,62,10,"prototype"],[43,21,62,19],[43,22,62,20,"toHex"],[43,27,62,25],[43,30,62,28],[43,39,62,37,"toHex"],[43,44,62,42,"toHex"],[43,45,62,42],[43,47,62,45],[44,4,63,2],[44,11,63,9,"_$$_REQUIRE"],[44,22,63,9],[44,23,63,9,"_dependencyMap"],[44,37,63,9],[44,54,63,15,"encode"],[44,60,63,21],[44,61,63,22],[44,65,63,26],[44,66,63,27,"toBytes"],[44,73,63,34],[44,74,63,35],[44,75,63,36],[44,77,63,38],[44,82,63,43],[44,83,63,44],[44,84,63,45,"toUpperCase"],[44,95,63,56],[44,96,63,57],[44,97,63,58],[45,2,64,0],[45,3,64,1],[46,2,66,0,"module"],[46,8,66,6],[46,9,66,7,"exports"],[46,16,66,14],[46,19,66,17,"Signature"],[46,28,66,26],[47,0,66,27],[47,3]],"functionMap":{"names":["<global>","Signature","S","R","Rencoded","Sencoded","toBytes","toHex"],"mappings":"AAA;ACgB;CDuB;+BEE;CFE;+BGE;CHE;sCIE;CJE;sCKE;CLE;8BME;CNE;4BOE;CPE"}},"type":"js/module"}]}