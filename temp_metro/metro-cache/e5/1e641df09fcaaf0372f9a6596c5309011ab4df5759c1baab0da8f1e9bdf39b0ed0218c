{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3450}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3450}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3450}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3450}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3450}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":110,"column":0,"index":3450}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":52,"index":67}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"./Socket","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":110},"end":{"line":5,"column":30,"index":140}}],"key":"cfgE9Yw/a8X/959IwBnhH3A68To="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[6], \"react-native\");\n  var _Socket2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./Socket\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var Sockets = _reactNative.NativeModules.TcpSockets;\n  /**\n   * @typedef {object} TLSSocketOptions\n   * @property {any} [ca]\n   * @property {any} [key]\n   * @property {any} [cert]\n   * @property {string} [androidKeyStore]\n   * @property {string} [certAlias]\n   * @property {string} [keyAlias]\n   * @property {string[]} [resolvedKeys]\n   *\n   * @extends {Socket}\n   */\n  var TLSSocket = exports.default = /*#__PURE__*/function (_Socket) {\n    /**\n     * @param {Socket} socket Any instance of `Socket`.\n     * @param {TLSSocketOptions} [options] Options for the TLS socket.\n     */\n    function TLSSocket(socket) {\n      var _this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      (0, _classCallCheck2.default)(this, TLSSocket);\n      _this = _callSuper(this, TLSSocket);\n      /** @private */\n      _this._options = Object.assign({}, options);\n      TLSSocket.resolveAssetIfNeeded(_this._options, 'ca');\n      TLSSocket.resolveAssetIfNeeded(_this._options, 'key');\n      TLSSocket.resolveAssetIfNeeded(_this._options, 'cert');\n\n      /** @private */\n      _this._socket = socket;\n      // @ts-ignore\n      _this._setId(_this._socket._id);\n      _this._startTLS();\n      if (socket.pending || socket.connecting) socket.once('connect', function () {\n        return _this._initialize();\n      });else _this._initialize();\n      return _this;\n    }\n\n    /**\n     * @private\n     */\n    (0, _inherits2.default)(TLSSocket, _Socket);\n    return (0, _createClass2.default)(TLSSocket, [{\n      key: \"_initialize\",\n      value: function _initialize() {\n        var _this$_socket$_errorL,\n          _this2 = this;\n        // Avoid calling twice destroy() if an error occurs\n        (_this$_socket$_errorL = this._socket._errorListener) == null || _this$_socket$_errorL.remove();\n        this.on('error', function (error) {\n          return _this2._socket.emit('error', error);\n        });\n        this._setConnected({\n          // @ts-ignore\n          localAddress: this._socket.localAddress,\n          // @ts-ignore\n          localPort: this._socket.localPort,\n          // @ts-ignore\n          remoteAddress: this._socket.remoteAddress,\n          // @ts-ignore\n          remotePort: this._socket.remotePort,\n          // @ts-ignore\n          remoteFamily: this._socket.remoteFamily\n        });\n      }\n\n      /**\n       * @private\n       */\n    }, {\n      key: \"_startTLS\",\n      value: function _startTLS() {\n        Sockets.startTLS(this._id, this._options);\n      }\n\n      /**\n       * Checks if a certificate identity exists in the keychain\n       * @param {object} options Object containing the identity aliases\n       * @param {string} [options.androidKeyStore] The android keystore type\n       * @param {string} [options.certAlias] The certificate alias\n       * @param {string} [options.keyAlias] The key alias\n       * @returns {Promise<boolean>} Promise resolving to true if identity exists\n       */\n    }, {\n      key: \"getCertificate\",\n      value: function getCertificate() {\n        return Sockets.getCertificate(this._id);\n      }\n    }, {\n      key: \"getPeerCertificate\",\n      value: function getPeerCertificate() {\n        return Sockets.getPeerCertificate(this._id);\n      }\n\n      /**\n       * @private\n       * Resolves the asset source if necessary and registers the resolved key.\n       * @param {TLSSocketOptions} options The options object containing the source to be resolved.\n       * @param {'ca' | 'key' | 'cert'} key The key name being resolved.\n       */\n    }], [{\n      key: \"hasIdentity\",\n      value: function hasIdentity() {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n        return Sockets.hasIdentity({\n          androidKeyStore: options.androidKeyStore,\n          certAlias: options.certAlias,\n          keyAlias: options.keyAlias\n        });\n      }\n    }, {\n      key: \"resolveAssetIfNeeded\",\n      value: function resolveAssetIfNeeded(options, key) {\n        var source = options[key];\n        if (source && typeof source !== 'string') {\n          if (!options.resolvedKeys) {\n            options.resolvedKeys = [];\n          }\n          options.resolvedKeys.push(key);\n          options[key] = _reactNative.Image.resolveAssetSource(source).uri;\n        }\n      }\n    }]);\n  }(_Socket2.default);\n});","lineCount":144,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"_$$_REQUIRE"],[4,42,1,13],[4,43,1,13,"_dependencyMap"],[4,57,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,1,13],[9,6,1,13,"_classCallCheck2"],[9,22,1,13],[9,25,1,13,"_interopRequireDefault"],[9,47,1,13],[9,48,1,13,"_$$_REQUIRE"],[9,59,1,13],[9,60,1,13,"_dependencyMap"],[9,74,1,13],[10,2,1,13],[10,6,1,13,"_createClass2"],[10,19,1,13],[10,22,1,13,"_interopRequireDefault"],[10,44,1,13],[10,45,1,13,"_$$_REQUIRE"],[10,56,1,13],[10,57,1,13,"_dependencyMap"],[10,71,1,13],[11,2,1,13],[11,6,1,13,"_possibleConstructorReturn2"],[11,33,1,13],[11,36,1,13,"_interopRequireDefault"],[11,58,1,13],[11,59,1,13,"_$$_REQUIRE"],[11,70,1,13],[11,71,1,13,"_dependencyMap"],[11,85,1,13],[12,2,1,13],[12,6,1,13,"_getPrototypeOf2"],[12,22,1,13],[12,25,1,13,"_interopRequireDefault"],[12,47,1,13],[12,48,1,13,"_$$_REQUIRE"],[12,59,1,13],[12,60,1,13,"_dependencyMap"],[12,74,1,13],[13,2,1,13],[13,6,1,13,"_inherits2"],[13,16,1,13],[13,19,1,13,"_interopRequireDefault"],[13,41,1,13],[13,42,1,13,"_$$_REQUIRE"],[13,53,1,13],[13,54,1,13,"_dependencyMap"],[13,68,1,13],[14,2,3,0],[14,6,3,0,"_reactNative"],[14,18,3,0],[14,21,3,0,"_$$_REQUIRE"],[14,32,3,0],[14,33,3,0,"_dependencyMap"],[14,47,3,0],[15,2,5,0],[15,6,5,0,"_Socket2"],[15,14,5,0],[15,17,5,0,"_interopRequireDefault"],[15,39,5,0],[15,40,5,0,"_$$_REQUIRE"],[15,51,5,0],[15,52,5,0,"_dependencyMap"],[15,66,5,0],[16,2,5,30],[16,11,5,30,"_callSuper"],[16,22,5,30,"t"],[16,23,5,30],[16,25,5,30,"o"],[16,26,5,30],[16,28,5,30,"e"],[16,29,5,30],[16,40,5,30,"o"],[16,41,5,30],[16,48,5,30,"_getPrototypeOf2"],[16,64,5,30],[16,65,5,30,"default"],[16,72,5,30],[16,74,5,30,"o"],[16,75,5,30],[16,82,5,30,"_possibleConstructorReturn2"],[16,109,5,30],[16,110,5,30,"default"],[16,117,5,30],[16,119,5,30,"t"],[16,120,5,30],[16,122,5,30,"_isNativeReflectConstruct"],[16,147,5,30],[16,152,5,30,"Reflect"],[16,159,5,30],[16,160,5,30,"construct"],[16,169,5,30],[16,170,5,30,"o"],[16,171,5,30],[16,173,5,30,"e"],[16,174,5,30],[16,186,5,30,"_getPrototypeOf2"],[16,202,5,30],[16,203,5,30,"default"],[16,210,5,30],[16,212,5,30,"t"],[16,213,5,30],[16,215,5,30,"constructor"],[16,226,5,30],[16,230,5,30,"o"],[16,231,5,30],[16,232,5,30,"apply"],[16,237,5,30],[16,238,5,30,"t"],[16,239,5,30],[16,241,5,30,"e"],[16,242,5,30],[17,2,5,30],[17,11,5,30,"_isNativeReflectConstruct"],[17,37,5,30],[17,51,5,30,"t"],[17,52,5,30],[17,56,5,30,"Boolean"],[17,63,5,30],[17,64,5,30,"prototype"],[17,73,5,30],[17,74,5,30,"valueOf"],[17,81,5,30],[17,82,5,30,"call"],[17,86,5,30],[17,87,5,30,"Reflect"],[17,94,5,30],[17,95,5,30,"construct"],[17,104,5,30],[17,105,5,30,"Boolean"],[17,112,5,30],[17,145,5,30,"t"],[17,146,5,30],[17,159,5,30,"_isNativeReflectConstruct"],[17,184,5,30],[17,196,5,30,"_isNativeReflectConstruct"],[17,222,5,30],[17,235,5,30,"t"],[17,236,5,30],[18,2,4,0],[18,6,4,6,"Sockets"],[18,13,4,13],[18,16,4,16,"NativeModules"],[18,42,4,29],[18,43,4,30,"TcpSockets"],[18,53,4,40],[19,2,7,0],[20,0,8,0],[21,0,9,0],[22,0,10,0],[23,0,11,0],[24,0,12,0],[25,0,13,0],[26,0,14,0],[27,0,15,0],[28,0,16,0],[29,0,17,0],[30,0,18,0],[31,2,7,0],[31,6,19,21,"TLSSocket"],[31,15,19,30],[31,18,19,30,"exports"],[31,25,19,30],[31,26,19,30,"default"],[31,33,19,30],[31,59,19,30,"_Socket"],[31,66,19,30],[32,4,20,4],[33,0,21,0],[34,0,22,0],[35,0,23,0],[36,4,24,4],[36,13,24,4,"TLSSocket"],[36,23,24,16,"socket"],[36,29,24,22],[36,31,24,38],[37,6,24,38],[37,10,24,38,"_this"],[37,15,24,38],[38,6,24,38],[38,10,24,24,"options"],[38,17,24,31],[38,20,24,31,"arguments"],[38,29,24,31],[38,30,24,31,"length"],[38,36,24,31],[38,44,24,31,"arguments"],[38,53,24,31],[38,61,24,31,"undefined"],[38,70,24,31],[38,73,24,31,"arguments"],[38,82,24,31],[38,88,24,34],[38,89,24,35],[38,90,24,36],[39,6,24,36],[39,10,24,36,"_classCallCheck2"],[39,26,24,36],[39,27,24,36,"default"],[39,34,24,36],[39,42,24,36,"TLSSocket"],[39,51,24,36],[40,6,25,8,"_this"],[40,11,25,8],[40,14,25,8,"_callSuper"],[40,24,25,8],[40,31,25,8,"TLSSocket"],[40,40,25,8],[41,6,26,8],[42,6,27,8,"_this"],[42,11,27,8],[42,12,27,13,"_options"],[42,20,27,21],[42,23,27,21,"Object"],[42,29,27,21],[42,30,27,21,"assign"],[42,36,27,21],[42,41,27,29,"options"],[42,48,27,36],[42,49,27,38],[43,6,28,8,"TLSSocket"],[43,15,28,17],[43,16,28,18,"resolveAssetIfNeeded"],[43,36,28,38],[43,37,28,39,"_this"],[43,42,28,39],[43,43,28,44,"_options"],[43,51,28,52],[43,53,28,54],[43,57,28,58],[43,58,28,59],[44,6,29,8,"TLSSocket"],[44,15,29,17],[44,16,29,18,"resolveAssetIfNeeded"],[44,36,29,38],[44,37,29,39,"_this"],[44,42,29,39],[44,43,29,44,"_options"],[44,51,29,52],[44,53,29,54],[44,58,29,59],[44,59,29,60],[45,6,30,8,"TLSSocket"],[45,15,30,17],[45,16,30,18,"resolveAssetIfNeeded"],[45,36,30,38],[45,37,30,39,"_this"],[45,42,30,39],[45,43,30,44,"_options"],[45,51,30,52],[45,53,30,54],[45,59,30,60],[45,60,30,61],[47,6,32,8],[48,6,33,8,"_this"],[48,11,33,8],[48,12,33,13,"_socket"],[48,19,33,20],[48,22,33,23,"socket"],[48,28,33,29],[49,6,34,8],[50,6,35,8,"_this"],[50,11,35,8],[50,12,35,13,"_setId"],[50,18,35,19],[50,19,35,20,"_this"],[50,24,35,20],[50,25,35,25,"_socket"],[50,32,35,32],[50,33,35,33,"_id"],[50,36,35,36],[50,37,35,37],[51,6,36,8,"_this"],[51,11,36,8],[51,12,36,13,"_startTLS"],[51,21,36,22],[51,22,36,23],[51,23,36,24],[52,6,37,8],[52,10,37,12,"socket"],[52,16,37,18],[52,17,37,19,"pending"],[52,24,37,26],[52,28,37,30,"socket"],[52,34,37,36],[52,35,37,37,"connecting"],[52,45,37,47],[52,47,37,49,"socket"],[52,53,37,55],[52,54,37,56,"once"],[52,58,37,60],[52,59,37,61],[52,68,37,70],[52,70,37,72],[53,8,37,72],[53,15,37,78,"_this"],[53,20,37,78],[53,21,37,83,"_initialize"],[53,32,37,94],[53,33,37,95],[53,34,37,96],[54,6,37,96],[54,8,37,97],[54,9,37,98],[54,14,38,13,"_this"],[54,19,38,13],[54,20,38,18,"_initialize"],[54,31,38,29],[54,32,38,30],[54,33,38,31],[55,6,38,32],[55,13,38,32,"_this"],[55,18,38,32],[56,4,39,4],[58,4,41,4],[59,0,42,0],[60,0,43,0],[61,4,41,4],[61,8,41,4,"_inherits2"],[61,18,41,4],[61,19,41,4,"default"],[61,26,41,4],[61,28,41,4,"TLSSocket"],[61,37,41,4],[61,39,41,4,"_Socket"],[61,46,41,4],[62,4,41,4],[62,15,41,4,"_createClass2"],[62,28,41,4],[62,29,41,4,"default"],[62,36,41,4],[62,38,41,4,"TLSSocket"],[62,47,41,4],[63,6,41,4,"key"],[63,9,41,4],[64,6,41,4,"value"],[64,11,41,4],[64,13,44,4],[64,22,44,4,"_initialize"],[64,33,44,15,"_initialize"],[64,34,44,15],[64,36,44,18],[65,8,44,18],[65,12,44,18,"_this$_socket$_errorL"],[65,33,44,18],[66,10,44,18,"_this2"],[66,16,44,18],[67,8,45,8],[68,8,46,8],[68,9,46,8,"_this$_socket$_errorL"],[68,30,46,8],[68,37,46,12],[68,38,46,13,"_socket"],[68,45,46,20],[68,46,46,21,"_errorListener"],[68,60,46,35],[68,73,46,8,"_this$_socket$_errorL"],[68,94,46,8],[68,95,46,37,"remove"],[68,101,46,43],[68,102,46,44],[68,103,46,45],[69,8,47,8],[69,12,47,12],[69,13,47,13,"on"],[69,15,47,15],[69,16,47,16],[69,23,47,23],[69,25,47,25],[69,35,47,26,"error"],[69,40,47,31],[70,10,47,31],[70,17,47,36,"_this2"],[70,23,47,40],[70,24,47,41,"_socket"],[70,31,47,48],[70,32,47,49,"emit"],[70,36,47,53],[70,37,47,54],[70,44,47,61],[70,46,47,63,"error"],[70,51,47,68],[70,52,47,69],[71,8,47,69],[71,10,47,70],[72,8,48,8],[72,12,48,12],[72,13,48,13,"_setConnected"],[72,26,48,26],[72,27,48,27],[73,10,49,12],[74,10,50,12,"localAddress"],[74,22,50,24],[74,24,50,26],[74,28,50,30],[74,29,50,31,"_socket"],[74,36,50,38],[74,37,50,39,"localAddress"],[74,49,50,51],[75,10,51,12],[76,10,52,12,"localPort"],[76,19,52,21],[76,21,52,23],[76,25,52,27],[76,26,52,28,"_socket"],[76,33,52,35],[76,34,52,36,"localPort"],[76,43,52,45],[77,10,53,12],[78,10,54,12,"remoteAddress"],[78,23,54,25],[78,25,54,27],[78,29,54,31],[78,30,54,32,"_socket"],[78,37,54,39],[78,38,54,40,"remoteAddress"],[78,51,54,53],[79,10,55,12],[80,10,56,12,"remotePort"],[80,20,56,22],[80,22,56,24],[80,26,56,28],[80,27,56,29,"_socket"],[80,34,56,36],[80,35,56,37,"remotePort"],[80,45,56,47],[81,10,57,12],[82,10,58,12,"remoteFamily"],[82,22,58,24],[82,24,58,26],[82,28,58,30],[82,29,58,31,"_socket"],[82,36,58,38],[82,37,58,39,"remoteFamily"],[83,8,59,8],[83,9,59,9],[83,10,59,10],[84,6,60,4],[86,6,62,4],[87,0,63,0],[88,0,64,0],[89,4,62,4],[90,6,62,4,"key"],[90,9,62,4],[91,6,62,4,"value"],[91,11,62,4],[91,13,65,4],[91,22,65,4,"_startTLS"],[91,31,65,13,"_startTLS"],[91,32,65,13],[91,34,65,16],[92,8,66,8,"Sockets"],[92,15,66,15],[92,16,66,16,"startTLS"],[92,24,66,24],[92,25,66,25],[92,29,66,29],[92,30,66,30,"_id"],[92,33,66,33],[92,35,66,35],[92,39,66,39],[92,40,66,40,"_options"],[92,48,66,48],[92,49,66,49],[93,6,67,4],[95,6,69,4],[96,0,70,0],[97,0,71,0],[98,0,72,0],[99,0,73,0],[100,0,74,0],[101,0,75,0],[102,0,76,0],[103,4,69,4],[104,6,69,4,"key"],[104,9,69,4],[105,6,69,4,"value"],[105,11,69,4],[105,13,85,4],[105,22,85,4,"getCertificate"],[105,36,85,18,"getCertificate"],[105,37,85,18],[105,39,85,21],[106,8,86,8],[106,15,86,15,"Sockets"],[106,22,86,22],[106,23,86,23,"getCertificate"],[106,37,86,37],[106,38,86,38],[106,42,86,42],[106,43,86,43,"_id"],[106,46,86,46],[106,47,86,47],[107,6,87,4],[108,4,87,5],[109,6,87,5,"key"],[109,9,87,5],[110,6,87,5,"value"],[110,11,87,5],[110,13,89,4],[110,22,89,4,"getPeerCertificate"],[110,40,89,22,"getPeerCertificate"],[110,41,89,22],[110,43,89,25],[111,8,90,8],[111,15,90,15,"Sockets"],[111,22,90,22],[111,23,90,23,"getPeerCertificate"],[111,41,90,41],[111,42,90,42],[111,46,90,46],[111,47,90,47,"_id"],[111,50,90,50],[111,51,90,51],[112,6,91,4],[114,6,93,4],[115,0,94,0],[116,0,95,0],[117,0,96,0],[118,0,97,0],[119,0,98,0],[120,4,93,4],[121,6,93,4,"key"],[121,9,93,4],[122,6,93,4,"value"],[122,11,93,4],[122,13,77,4],[122,22,77,11,"hasIdentity"],[122,33,77,22,"hasIdentity"],[122,34,77,22],[122,36,77,37],[123,8,77,37],[123,12,77,23,"options"],[123,19,77,30],[123,22,77,30,"arguments"],[123,31,77,30],[123,32,77,30,"length"],[123,38,77,30],[123,46,77,30,"arguments"],[123,55,77,30],[123,63,77,30,"undefined"],[123,72,77,30],[123,75,77,30,"arguments"],[123,84,77,30],[123,90,77,33],[123,91,77,34],[123,92,77,35],[124,8,78,8],[124,15,78,15,"Sockets"],[124,22,78,22],[124,23,78,23,"hasIdentity"],[124,34,78,34],[124,35,78,35],[125,10,79,12,"androidKeyStore"],[125,25,79,27],[125,27,79,29,"options"],[125,34,79,36],[125,35,79,37,"androidKeyStore"],[125,50,79,52],[126,10,80,12,"certAlias"],[126,19,80,21],[126,21,80,23,"options"],[126,28,80,30],[126,29,80,31,"certAlias"],[126,38,80,40],[127,10,81,12,"keyAlias"],[127,18,81,20],[127,20,81,22,"options"],[127,27,81,29],[127,28,81,30,"keyAlias"],[128,8,82,8],[128,9,82,9],[128,10,82,10],[129,6,83,4],[130,4,83,5],[131,6,83,5,"key"],[131,9,83,5],[132,6,83,5,"value"],[132,11,83,5],[132,13,99,4],[132,22,99,11,"resolveAssetIfNeeded"],[132,42,99,31,"resolveAssetIfNeeded"],[132,43,99,32,"options"],[132,50,99,39],[132,52,99,41,"key"],[132,55,99,44],[132,57,99,46],[133,8,100,8],[133,12,100,14,"source"],[133,18,100,20],[133,21,100,23,"options"],[133,28,100,30],[133,29,100,31,"key"],[133,32,100,34],[133,33,100,35],[134,8,101,8],[134,12,101,12,"source"],[134,18,101,18],[134,22,101,22],[134,29,101,29,"source"],[134,35,101,35],[134,40,101,40],[134,48,101,48],[134,50,101,50],[135,10,102,12],[135,14,102,16],[135,15,102,17,"options"],[135,22,102,24],[135,23,102,25,"resolvedKeys"],[135,35,102,37],[135,37,102,39],[136,12,103,16,"options"],[136,19,103,23],[136,20,103,24,"resolvedKeys"],[136,32,103,36],[136,35,103,39],[136,37,103,41],[137,10,104,12],[138,10,105,12,"options"],[138,17,105,19],[138,18,105,20,"resolvedKeys"],[138,30,105,32],[138,31,105,33,"push"],[138,35,105,37],[138,36,105,38,"key"],[138,39,105,41],[138,40,105,42],[139,10,106,12,"options"],[139,17,106,19],[139,18,106,20,"key"],[139,21,106,23],[139,22,106,24],[139,25,106,27,"Image"],[139,43,106,32],[139,44,106,33,"resolveAssetSource"],[139,62,106,51],[139,63,106,52,"source"],[139,69,106,58],[139,70,106,59],[139,71,106,60,"uri"],[139,74,106,63],[140,8,107,8],[141,6,108,4],[142,4,108,5],[143,2,108,5],[143,4,19,39,"Socket"],[143,20,19,45],[144,0,19,45],[144,3]],"functionMap":{"names":["<global>","TLSSocket","constructor","socket.once$argument_1","_initialize","on$argument_1","_startTLS","hasIdentity","getCertificate","getPeerCertificate","resolveAssetIfNeeded"],"mappings":"AAA;eCkB;ICK;wECa,wBD;KDE;IGK;yBCG,4CD;KHa;IKK;KLE;IMU;KNM;IOE;KPE;IQE;KRE;ISQ;KTS;CDC"}},"type":"js/module"}]}