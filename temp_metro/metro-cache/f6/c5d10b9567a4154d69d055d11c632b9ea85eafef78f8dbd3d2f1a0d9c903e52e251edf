{"dependencies":[{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":92},"end":{"line":5,"column":33,"index":108}},{"start":{"line":5,"column":17,"index":92},"end":{"line":5,"column":33,"index":108}},{"start":{"line":6,"column":21,"index":131},"end":{"line":6,"column":41,"index":151}},{"start":{"line":6,"column":21,"index":131},"end":{"line":6,"column":41,"index":151}},{"start":{"line":6,"column":21,"index":131},"end":{"line":6,"column":41,"index":151}},{"start":{"line":6,"column":21,"index":131},"end":{"line":6,"column":41,"index":151}},{"start":{"line":6,"column":21,"index":131},"end":{"line":6,"column":41,"index":151}},{"start":{"line":6,"column":21,"index":131},"end":{"line":6,"column":41,"index":151}},{"start":{"line":4,"column":13,"index":61},"end":{"line":4,"column":25,"index":73}},{"start":{"line":4,"column":13,"index":61},"end":{"line":4,"column":25,"index":73}},{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":31,"index":46}},{"start":{"line":3,"column":12,"index":27},"end":{"line":3,"column":31,"index":46}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /**\n  * @param {EDDSA} eddsa - instance\n  * @param {Object} params - public/private key parameters\n  *\n  * @param {Array<Byte>} [params.secret] - secret seed bytes\n  * @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n  * @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n  *\n  */\n  function KeyPair(eddsa, params) {\n    this.eddsa = eddsa;\n    this._secret = _$$_REQUIRE(_dependencyMap[0], \"../utils\").parseBytes(params.secret);\n    if (eddsa.isPoint(params.pub)) this._pub = params.pub;else this._pubBytes = _$$_REQUIRE(_dependencyMap[0], \"../utils\").parseBytes(params.pub);\n  }\n  KeyPair.fromPublic = function fromPublic(eddsa, pub) {\n    if (pub instanceof KeyPair) return pub;\n    return new KeyPair(eddsa, {\n      pub: pub\n    });\n  };\n  KeyPair.fromSecret = function fromSecret(eddsa, secret) {\n    if (secret instanceof KeyPair) return secret;\n    return new KeyPair(eddsa, {\n      secret: secret\n    });\n  };\n  KeyPair.prototype.secret = function secret() {\n    return this._secret;\n  };\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n    return this.eddsa.encodePoint(this.pub());\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(KeyPair, 'pub', function pub() {\n    if (this._pubBytes) return this.eddsa.decodePoint(this._pubBytes);\n    return this.eddsa.g.mul(this.priv());\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(KeyPair, 'privBytes', function privBytes() {\n    var eddsa = this.eddsa;\n    var hash = this.hash();\n    var lastIx = eddsa.encodingLength - 1;\n    var a = hash.slice(0, eddsa.encodingLength);\n    a[0] &= 248;\n    a[lastIx] &= 127;\n    a[lastIx] |= 64;\n    return a;\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(KeyPair, 'priv', function priv() {\n    return this.eddsa.decodeInt(this.privBytes());\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(KeyPair, 'hash', function hash() {\n    return this.eddsa.hash().update(this.secret()).digest();\n  });\n  _$$_REQUIRE(_dependencyMap[0], \"../utils\").cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n    return this.hash().slice(this.eddsa.encodingLength);\n  });\n  KeyPair.prototype.sign = function sign(message) {\n    _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(this._secret, 'KeyPair can only verify');\n    return this.eddsa.sign(message, this);\n  };\n  KeyPair.prototype.verify = function verify(message, sig) {\n    return this.eddsa.verify(message, sig, this);\n  };\n  KeyPair.prototype.getSecret = function getSecret(enc) {\n    _$$_REQUIRE(_dependencyMap[0], \"../utils\").assert(this._secret, 'KeyPair is public only');\n    return _$$_REQUIRE(_dependencyMap[0], \"../utils\").encode(this.secret(), enc);\n  };\n  KeyPair.prototype.getPublic = function getPublic(enc) {\n    return _$$_REQUIRE(_dependencyMap[0], \"../utils\").encode(this.pubBytes(), enc);\n  };\n  module.exports = KeyPair;\n});","lineCount":74,"map":[[2,2,1,0],[2,14,1,12],[4,2,8,0],[5,0,9,0],[6,0,10,0],[7,0,11,0],[8,0,12,0],[9,0,13,0],[10,0,14,0],[11,0,15,0],[12,0,16,0],[13,2,17,0],[13,11,17,9,"KeyPair"],[13,18,17,16,"KeyPair"],[13,19,17,17,"eddsa"],[13,24,17,22],[13,26,17,24,"params"],[13,32,17,30],[13,34,17,32],[14,4,18,2],[14,8,18,6],[14,9,18,7,"eddsa"],[14,14,18,12],[14,17,18,15,"eddsa"],[14,22,18,20],[15,4,19,2],[15,8,19,6],[15,9,19,7,"_secret"],[15,16,19,14],[15,19,19,17,"_$$_REQUIRE"],[15,30,19,17],[15,31,19,17,"_dependencyMap"],[15,45,19,17],[15,62,19,17,"parseBytes"],[15,72,19,17],[15,73,19,28,"params"],[15,79,19,34],[15,80,19,35,"secret"],[15,86,19,41],[15,87,19,42],[16,4,20,2],[16,8,20,6,"eddsa"],[16,13,20,11],[16,14,20,12,"isPoint"],[16,21,20,19],[16,22,20,20,"params"],[16,28,20,26],[16,29,20,27,"pub"],[16,32,20,30],[16,33,20,31],[16,35,21,4],[16,39,21,8],[16,40,21,9,"_pub"],[16,44,21,13],[16,47,21,16,"params"],[16,53,21,22],[16,54,21,23,"pub"],[16,57,21,26],[16,58,21,27],[16,63,23,4],[16,67,23,8],[16,68,23,9,"_pubBytes"],[16,77,23,18],[16,80,23,21,"_$$_REQUIRE"],[16,91,23,21],[16,92,23,21,"_dependencyMap"],[16,106,23,21],[16,123,23,21,"parseBytes"],[16,133,23,21],[16,134,23,32,"params"],[16,140,23,38],[16,141,23,39,"pub"],[16,144,23,42],[16,145,23,43],[17,2,24,0],[18,2,26,0,"KeyPair"],[18,9,26,7],[18,10,26,8,"fromPublic"],[18,20,26,18],[18,23,26,21],[18,32,26,30,"fromPublic"],[18,42,26,40,"fromPublic"],[18,43,26,41,"eddsa"],[18,48,26,46],[18,50,26,48,"pub"],[18,53,26,51],[18,55,26,53],[19,4,27,2],[19,8,27,6,"pub"],[19,11,27,9],[19,23,27,21,"KeyPair"],[19,30,27,28],[19,32,28,4],[19,39,28,11,"pub"],[19,42,28,14],[20,4,29,2],[20,11,29,9],[20,15,29,13,"KeyPair"],[20,22,29,20],[20,23,29,21,"eddsa"],[20,28,29,26],[20,30,29,28],[21,6,29,30,"pub"],[21,9,29,33],[21,11,29,35,"pub"],[22,4,29,39],[22,5,29,40],[22,6,29,41],[23,2,30,0],[23,3,30,1],[24,2,32,0,"KeyPair"],[24,9,32,7],[24,10,32,8,"fromSecret"],[24,20,32,18],[24,23,32,21],[24,32,32,30,"fromSecret"],[24,42,32,40,"fromSecret"],[24,43,32,41,"eddsa"],[24,48,32,46],[24,50,32,48,"secret"],[24,56,32,54],[24,58,32,56],[25,4,33,2],[25,8,33,6,"secret"],[25,14,33,12],[25,26,33,24,"KeyPair"],[25,33,33,31],[25,35,34,4],[25,42,34,11,"secret"],[25,48,34,17],[26,4,35,2],[26,11,35,9],[26,15,35,13,"KeyPair"],[26,22,35,20],[26,23,35,21,"eddsa"],[26,28,35,26],[26,30,35,28],[27,6,35,30,"secret"],[27,12,35,36],[27,14,35,38,"secret"],[28,4,35,45],[28,5,35,46],[28,6,35,47],[29,2,36,0],[29,3,36,1],[30,2,38,0,"KeyPair"],[30,9,38,7],[30,10,38,8,"prototype"],[30,19,38,17],[30,20,38,18,"secret"],[30,26,38,24],[30,29,38,27],[30,38,38,36,"secret"],[30,44,38,42,"secret"],[30,45,38,42],[30,47,38,45],[31,4,39,2],[31,11,39,9],[31,15,39,13],[31,16,39,14,"_secret"],[31,23,39,21],[32,2,40,0],[32,3,40,1],[33,2,42,0,"_$$_REQUIRE"],[33,13,42,0],[33,14,42,0,"_dependencyMap"],[33,28,42,0],[33,45,42,0,"cachedProperty"],[33,59,42,0],[33,60,42,15,"KeyPair"],[33,67,42,22],[33,69,42,24],[33,79,42,34],[33,81,42,36],[33,90,42,45,"pubBytes"],[33,98,42,53,"pubBytes"],[33,99,42,53],[33,101,42,56],[34,4,43,2],[34,11,43,9],[34,15,43,13],[34,16,43,14,"eddsa"],[34,21,43,19],[34,22,43,20,"encodePoint"],[34,33,43,31],[34,34,43,32],[34,38,43,36],[34,39,43,37,"pub"],[34,42,43,40],[34,43,43,41],[34,44,43,42],[34,45,43,43],[35,2,44,0],[35,3,44,1],[35,4,44,2],[36,2,46,0,"_$$_REQUIRE"],[36,13,46,0],[36,14,46,0,"_dependencyMap"],[36,28,46,0],[36,45,46,0,"cachedProperty"],[36,59,46,0],[36,60,46,15,"KeyPair"],[36,67,46,22],[36,69,46,24],[36,74,46,29],[36,76,46,31],[36,85,46,40,"pub"],[36,88,46,43,"pub"],[36,89,46,43],[36,91,46,46],[37,4,47,2],[37,8,47,6],[37,12,47,10],[37,13,47,11,"_pubBytes"],[37,22,47,20],[37,24,48,4],[37,31,48,11],[37,35,48,15],[37,36,48,16,"eddsa"],[37,41,48,21],[37,42,48,22,"decodePoint"],[37,53,48,33],[37,54,48,34],[37,58,48,38],[37,59,48,39,"_pubBytes"],[37,68,48,48],[37,69,48,49],[38,4,49,2],[38,11,49,9],[38,15,49,13],[38,16,49,14,"eddsa"],[38,21,49,19],[38,22,49,20,"g"],[38,23,49,21],[38,24,49,22,"mul"],[38,27,49,25],[38,28,49,26],[38,32,49,30],[38,33,49,31,"priv"],[38,37,49,35],[38,38,49,36],[38,39,49,37],[38,40,49,38],[39,2,50,0],[39,3,50,1],[39,4,50,2],[40,2,52,0,"_$$_REQUIRE"],[40,13,52,0],[40,14,52,0,"_dependencyMap"],[40,28,52,0],[40,45,52,0,"cachedProperty"],[40,59,52,0],[40,60,52,15,"KeyPair"],[40,67,52,22],[40,69,52,24],[40,80,52,35],[40,82,52,37],[40,91,52,46,"privBytes"],[40,100,52,55,"privBytes"],[40,101,52,55],[40,103,52,58],[41,4,53,2],[41,8,53,6,"eddsa"],[41,13,53,11],[41,16,53,14],[41,20,53,18],[41,21,53,19,"eddsa"],[41,26,53,24],[42,4,54,2],[42,8,54,6,"hash"],[42,12,54,10],[42,15,54,13],[42,19,54,17],[42,20,54,18,"hash"],[42,24,54,22],[42,25,54,23],[42,26,54,24],[43,4,55,2],[43,8,55,6,"lastIx"],[43,14,55,12],[43,17,55,15,"eddsa"],[43,22,55,20],[43,23,55,21,"encodingLength"],[43,37,55,35],[43,40,55,38],[43,41,55,39],[44,4,57,2],[44,8,57,6,"a"],[44,9,57,7],[44,12,57,10,"hash"],[44,16,57,14],[44,17,57,15,"slice"],[44,22,57,20],[44,23,57,21],[44,24,57,22],[44,26,57,24,"eddsa"],[44,31,57,29],[44,32,57,30,"encodingLength"],[44,46,57,44],[44,47,57,45],[45,4,58,2,"a"],[45,5,58,3],[45,6,58,4],[45,7,58,5],[45,8,58,6],[45,12,58,10],[45,15,58,13],[46,4,59,2,"a"],[46,5,59,3],[46,6,59,4,"lastIx"],[46,12,59,10],[46,13,59,11],[46,17,59,15],[46,20,59,18],[47,4,60,2,"a"],[47,5,60,3],[47,6,60,4,"lastIx"],[47,12,60,10],[47,13,60,11],[47,17,60,15],[47,19,60,17],[48,4,62,2],[48,11,62,9,"a"],[48,12,62,10],[49,2,63,0],[49,3,63,1],[49,4,63,2],[50,2,65,0,"_$$_REQUIRE"],[50,13,65,0],[50,14,65,0,"_dependencyMap"],[50,28,65,0],[50,45,65,0,"cachedProperty"],[50,59,65,0],[50,60,65,15,"KeyPair"],[50,67,65,22],[50,69,65,24],[50,75,65,30],[50,77,65,32],[50,86,65,41,"priv"],[50,90,65,45,"priv"],[50,91,65,45],[50,93,65,48],[51,4,66,2],[51,11,66,9],[51,15,66,13],[51,16,66,14,"eddsa"],[51,21,66,19],[51,22,66,20,"decodeInt"],[51,31,66,29],[51,32,66,30],[51,36,66,34],[51,37,66,35,"privBytes"],[51,46,66,44],[51,47,66,45],[51,48,66,46],[51,49,66,47],[52,2,67,0],[52,3,67,1],[52,4,67,2],[53,2,69,0,"_$$_REQUIRE"],[53,13,69,0],[53,14,69,0,"_dependencyMap"],[53,28,69,0],[53,45,69,0,"cachedProperty"],[53,59,69,0],[53,60,69,15,"KeyPair"],[53,67,69,22],[53,69,69,24],[53,75,69,30],[53,77,69,32],[53,86,69,41,"hash"],[53,90,69,45,"hash"],[53,91,69,45],[53,93,69,48],[54,4,70,2],[54,11,70,9],[54,15,70,13],[54,16,70,14,"eddsa"],[54,21,70,19],[54,22,70,20,"hash"],[54,26,70,24],[54,27,70,25],[54,28,70,26],[54,29,70,27,"update"],[54,35,70,33],[54,36,70,34],[54,40,70,38],[54,41,70,39,"secret"],[54,47,70,45],[54,48,70,46],[54,49,70,47],[54,50,70,48],[54,51,70,49,"digest"],[54,57,70,55],[54,58,70,56],[54,59,70,57],[55,2,71,0],[55,3,71,1],[55,4,71,2],[56,2,73,0,"_$$_REQUIRE"],[56,13,73,0],[56,14,73,0,"_dependencyMap"],[56,28,73,0],[56,45,73,0,"cachedProperty"],[56,59,73,0],[56,60,73,15,"KeyPair"],[56,67,73,22],[56,69,73,24],[56,84,73,39],[56,86,73,41],[56,95,73,50,"messagePrefix"],[56,108,73,63,"messagePrefix"],[56,109,73,63],[56,111,73,66],[57,4,74,2],[57,11,74,9],[57,15,74,13],[57,16,74,14,"hash"],[57,20,74,18],[57,21,74,19],[57,22,74,20],[57,23,74,21,"slice"],[57,28,74,26],[57,29,74,27],[57,33,74,31],[57,34,74,32,"eddsa"],[57,39,74,37],[57,40,74,38,"encodingLength"],[57,54,74,52],[57,55,74,53],[58,2,75,0],[58,3,75,1],[58,4,75,2],[59,2,77,0,"KeyPair"],[59,9,77,7],[59,10,77,8,"prototype"],[59,19,77,17],[59,20,77,18,"sign"],[59,24,77,22],[59,27,77,25],[59,36,77,34,"sign"],[59,40,77,38,"sign"],[59,41,77,39,"message"],[59,48,77,46],[59,50,77,48],[60,4,78,2,"_$$_REQUIRE"],[60,15,78,2],[60,16,78,2,"_dependencyMap"],[60,30,78,2],[60,47,78,2,"assert"],[60,53,78,2],[60,54,78,9],[60,58,78,13],[60,59,78,14,"_secret"],[60,66,78,21],[60,68,78,23],[60,93,78,48],[60,94,78,49],[61,4,79,2],[61,11,79,9],[61,15,79,13],[61,16,79,14,"eddsa"],[61,21,79,19],[61,22,79,20,"sign"],[61,26,79,24],[61,27,79,25,"message"],[61,34,79,32],[61,36,79,34],[61,40,79,38],[61,41,79,39],[62,2,80,0],[62,3,80,1],[63,2,82,0,"KeyPair"],[63,9,82,7],[63,10,82,8,"prototype"],[63,19,82,17],[63,20,82,18,"verify"],[63,26,82,24],[63,29,82,27],[63,38,82,36,"verify"],[63,44,82,42,"verify"],[63,45,82,43,"message"],[63,52,82,50],[63,54,82,52,"sig"],[63,57,82,55],[63,59,82,57],[64,4,83,2],[64,11,83,9],[64,15,83,13],[64,16,83,14,"eddsa"],[64,21,83,19],[64,22,83,20,"verify"],[64,28,83,26],[64,29,83,27,"message"],[64,36,83,34],[64,38,83,36,"sig"],[64,41,83,39],[64,43,83,41],[64,47,83,45],[64,48,83,46],[65,2,84,0],[65,3,84,1],[66,2,86,0,"KeyPair"],[66,9,86,7],[66,10,86,8,"prototype"],[66,19,86,17],[66,20,86,18,"getSecret"],[66,29,86,27],[66,32,86,30],[66,41,86,39,"getSecret"],[66,50,86,48,"getSecret"],[66,51,86,49,"enc"],[66,54,86,52],[66,56,86,54],[67,4,87,2,"_$$_REQUIRE"],[67,15,87,2],[67,16,87,2,"_dependencyMap"],[67,30,87,2],[67,47,87,2,"assert"],[67,53,87,2],[67,54,87,9],[67,58,87,13],[67,59,87,14,"_secret"],[67,66,87,21],[67,68,87,23],[67,92,87,47],[67,93,87,48],[68,4,88,2],[68,11,88,9,"_$$_REQUIRE"],[68,22,88,9],[68,23,88,9,"_dependencyMap"],[68,37,88,9],[68,54,88,15,"encode"],[68,60,88,21],[68,61,88,22],[68,65,88,26],[68,66,88,27,"secret"],[68,72,88,33],[68,73,88,34],[68,74,88,35],[68,76,88,37,"enc"],[68,79,88,40],[68,80,88,41],[69,2,89,0],[69,3,89,1],[70,2,91,0,"KeyPair"],[70,9,91,7],[70,10,91,8,"prototype"],[70,19,91,17],[70,20,91,18,"getPublic"],[70,29,91,27],[70,32,91,30],[70,41,91,39,"getPublic"],[70,50,91,48,"getPublic"],[70,51,91,49,"enc"],[70,54,91,52],[70,56,91,54],[71,4,92,2],[71,11,92,9,"_$$_REQUIRE"],[71,22,92,9],[71,23,92,9,"_dependencyMap"],[71,37,92,9],[71,54,92,15,"encode"],[71,60,92,21],[71,61,92,22],[71,65,92,26],[71,66,92,27,"pubBytes"],[71,74,92,35],[71,75,92,36],[71,76,92,37],[71,78,92,39,"enc"],[71,81,92,42],[71,82,92,43],[72,2,93,0],[72,3,93,1],[73,2,95,0,"module"],[73,8,95,6],[73,9,95,7,"exports"],[73,16,95,14],[73,19,95,17,"KeyPair"],[73,26,95,24],[74,0,95,25],[74,3]],"functionMap":{"names":["<global>","KeyPair","fromPublic","fromSecret","secret","pubBytes","pub","privBytes","priv","hash","messagePrefix","sign","verify","getSecret","getPublic"],"mappings":"AAA;ACgB;CDO;qBEE;CFI;qBGE;CHI;2BIE;CJE;oCKE;CLE;+BME;CNI;qCOE;CPW;gCQE;CRE;gCSE;CTE;yCUE;CVE;yBWE;CXG;2BYE;CZE;8BaE;CbG;8BcE;CdE"}},"type":"js/module"}]}