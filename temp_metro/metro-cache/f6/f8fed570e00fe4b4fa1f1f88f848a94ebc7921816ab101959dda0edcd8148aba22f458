{"dependencies":[{"name":"parse-asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":16,"index":224},"end":{"line":7,"column":37,"index":245}},{"start":{"line":7,"column":16,"index":224},"end":{"line":7,"column":37,"index":245}}],"key":"COzMkWIbbKvXpM5KBuLue1rYJxE="}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":9,"index":157},"end":{"line":5,"column":25,"index":173}},{"start":{"line":5,"column":9,"index":157},"end":{"line":5,"column":25,"index":173}},{"start":{"line":5,"column":9,"index":157},"end":{"line":5,"column":25,"index":173}},{"start":{"line":5,"column":9,"index":157},"end":{"line":5,"column":25,"index":173}},{"start":{"line":5,"column":9,"index":157},"end":{"line":5,"column":25,"index":173}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"./curves.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":260},"end":{"line":8,"column":37,"index":284}}],"key":"asYIj/9Lslhm8Hnwqpi8fA5Jt4c="}},{"name":"elliptic","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":9,"index":184},"end":{"line":6,"column":31,"index":206}}],"key":"h6RIsoF9GgRhyZAr3TXxz6R4meA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\n  function verify(sig, hash, key, signType, tag) {\n    var pub = _$$_REQUIRE(_dependencyMap[0], \"parse-asn1\")(key);\n    if (pub.type === 'ec') {\n      // rsa keys can be interpreted as ecdsa ones in openssl\n      if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') {\n        throw new Error('wrong public key type');\n      }\n      return ecVerify(sig, hash, pub);\n    } else if (pub.type === 'dsa') {\n      if (signType !== 'dsa') {\n        throw new Error('wrong public key type');\n      }\n      return dsaVerify(sig, hash, pub);\n    }\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') {\n      throw new Error('wrong public key type');\n    }\n    hash = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([tag, hash]);\n    var len = pub.modulus.byteLength();\n    var pad = [1];\n    var padNum = 0;\n    while (hash.length + pad.length + 2 < len) {\n      pad.push(0xff);\n      padNum += 1;\n    }\n    pad.push(0x00);\n    var i = -1;\n    while (++i < hash.length) {\n      pad.push(hash[i]);\n    }\n    pad = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from(pad);\n    var red = _$$_REQUIRE(_dependencyMap[2], \"bn.js\").mont(pub.modulus);\n    sig = new (_$$_REQUIRE(_dependencyMap[2], \"bn.js\"))(sig).toRed(red);\n    sig = sig.redPow(new (_$$_REQUIRE(_dependencyMap[2], \"bn.js\"))(pub.publicExponent));\n    sig = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from(sig.fromRed().toArray());\n    var out = padNum < 8 ? 1 : 0;\n    len = Math.min(sig.length, pad.length);\n    if (sig.length !== pad.length) {\n      out = 1;\n    }\n    i = -1;\n    while (++i < len) {\n      out |= sig[i] ^ pad[i];\n    }\n    return out === 0;\n  }\n  function ecVerify(sig, hash, pub) {\n    var curveId = _$$_REQUIRE(_dependencyMap[3], \"./curves.json\")[pub.data.algorithm.curve.join('.')];\n    if (!curveId) {\n      throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'));\n    }\n    var curve = new (_$$_REQUIRE(_dependencyMap[4], \"elliptic\").ec)(curveId);\n    var pubkey = pub.data.subjectPrivateKey.data;\n    return curve.verify(hash, sig, pubkey);\n  }\n  function dsaVerify(sig, hash, pub) {\n    var p = pub.data.p;\n    var q = pub.data.q;\n    var g = pub.data.g;\n    var y = pub.data.pub_key;\n    var unpacked = _$$_REQUIRE(_dependencyMap[0], \"parse-asn1\").signature.decode(sig, 'der');\n    var s = unpacked.s;\n    var r = unpacked.r;\n    checkValue(s, q);\n    checkValue(r, q);\n    var montp = _$$_REQUIRE(_dependencyMap[2], \"bn.js\").mont(p);\n    var w = s.invm(q);\n    var v = g.toRed(montp).redPow(new (_$$_REQUIRE(_dependencyMap[2], \"bn.js\"))(hash).mul(w).mod(q)).fromRed().mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed()).mod(p).mod(q);\n    return v.cmp(r) === 0;\n  }\n  function checkValue(b, q) {\n    if (b.cmpn(0) <= 0) {\n      throw new Error('invalid sig');\n    }\n    if (b.cmp(q) >= 0) {\n      throw new Error('invalid sig');\n    }\n  }\n  module.exports = verify;\n});","lineCount":84,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,10,0],[5,11,10,9,"verify"],[5,17,10,15,"verify"],[5,18,10,16,"sig"],[5,21,10,19],[5,23,10,21,"hash"],[5,27,10,25],[5,29,10,27,"key"],[5,32,10,30],[5,34,10,32,"signType"],[5,42,10,40],[5,44,10,42,"tag"],[5,47,10,45],[5,49,10,47],[6,4,11,2],[6,8,11,6,"pub"],[6,11,11,9],[6,14,11,12,"_$$_REQUIRE"],[6,25,11,12],[6,26,11,12,"_dependencyMap"],[6,40,11,12],[6,59,11,22,"key"],[6,62,11,25],[6,63,11,26],[7,4,12,2],[7,8,12,6,"pub"],[7,11,12,9],[7,12,12,10,"type"],[7,16,12,14],[7,21,12,19],[7,25,12,23],[7,27,12,25],[8,6,13,4],[9,6,14,4],[9,10,14,8,"signType"],[9,18,14,16],[9,23,14,21],[9,30,14,28],[9,34,14,32,"signType"],[9,42,14,40],[9,47,14,45],[9,58,14,56],[9,60,14,58],[10,8,14,60],[10,14,14,66],[10,18,14,70,"Error"],[10,23,14,75],[10,24,14,76],[10,47,14,99],[10,48,14,100],[11,6,14,102],[12,6,15,4],[12,13,15,11,"ecVerify"],[12,21,15,19],[12,22,15,20,"sig"],[12,25,15,23],[12,27,15,25,"hash"],[12,31,15,29],[12,33,15,31,"pub"],[12,36,15,34],[12,37,15,35],[13,4,16,2],[13,5,16,3],[13,11,16,9],[13,15,16,13,"pub"],[13,18,16,16],[13,19,16,17,"type"],[13,23,16,21],[13,28,16,26],[13,33,16,31],[13,35,16,33],[14,6,17,4],[14,10,17,8,"signType"],[14,18,17,16],[14,23,17,21],[14,28,17,26],[14,30,17,28],[15,8,17,30],[15,14,17,36],[15,18,17,40,"Error"],[15,23,17,45],[15,24,17,46],[15,47,17,69],[15,48,17,70],[16,6,17,72],[17,6,18,4],[17,13,18,11,"dsaVerify"],[17,22,18,20],[17,23,18,21,"sig"],[17,26,18,24],[17,28,18,26,"hash"],[17,32,18,30],[17,34,18,32,"pub"],[17,37,18,35],[17,38,18,36],[18,4,19,2],[19,4,20,2],[19,8,20,6,"signType"],[19,16,20,14],[19,21,20,19],[19,26,20,24],[19,30,20,28,"signType"],[19,38,20,36],[19,43,20,41],[19,54,20,52],[19,56,20,54],[20,6,20,56],[20,12,20,62],[20,16,20,66,"Error"],[20,21,20,71],[20,22,20,72],[20,45,20,95],[20,46,20,96],[21,4,20,98],[22,4,22,2,"hash"],[22,8,22,6],[22,11,22,9,"_$$_REQUIRE"],[22,22,22,9],[22,23,22,9,"_dependencyMap"],[22,37,22,9],[22,57,22,9,"Buffer"],[22,63,22,9],[22,64,22,16,"concat"],[22,70,22,22],[22,71,22,23],[22,72,22,24,"tag"],[22,75,22,27],[22,77,22,29,"hash"],[22,81,22,33],[22,82,22,34],[22,83,22,35],[23,4,23,2],[23,8,23,6,"len"],[23,11,23,9],[23,14,23,12,"pub"],[23,17,23,15],[23,18,23,16,"modulus"],[23,25,23,23],[23,26,23,24,"byteLength"],[23,36,23,34],[23,37,23,35],[23,38,23,36],[24,4,24,2],[24,8,24,6,"pad"],[24,11,24,9],[24,14,24,12],[24,15,24,13],[24,16,24,14],[24,17,24,15],[25,4,25,2],[25,8,25,6,"padNum"],[25,14,25,12],[25,17,25,15],[25,18,25,16],[26,4,26,2],[26,11,26,9,"hash"],[26,15,26,13],[26,16,26,14,"length"],[26,22,26,20],[26,25,26,23,"pad"],[26,28,26,26],[26,29,26,27,"length"],[26,35,26,33],[26,38,26,36],[26,39,26,37],[26,42,26,40,"len"],[26,45,26,43],[26,47,26,45],[27,6,27,4,"pad"],[27,9,27,7],[27,10,27,8,"push"],[27,14,27,12],[27,15,27,13],[27,19,27,17],[27,20,27,18],[28,6,28,4,"padNum"],[28,12,28,10],[28,16,28,14],[28,17,28,15],[29,4,29,2],[30,4,30,2,"pad"],[30,7,30,5],[30,8,30,6,"push"],[30,12,30,10],[30,13,30,11],[30,17,30,15],[30,18,30,16],[31,4,31,2],[31,8,31,6,"i"],[31,9,31,7],[31,12,31,10],[31,13,31,11],[31,14,31,12],[32,4,32,2],[32,11,32,9],[32,13,32,11,"i"],[32,14,32,12],[32,17,32,15,"hash"],[32,21,32,19],[32,22,32,20,"length"],[32,28,32,26],[32,30,32,28],[33,6,33,4,"pad"],[33,9,33,7],[33,10,33,8,"push"],[33,14,33,12],[33,15,33,13,"hash"],[33,19,33,17],[33,20,33,18,"i"],[33,21,33,19],[33,22,33,20],[33,23,33,21],[34,4,34,2],[35,4,35,2,"pad"],[35,7,35,5],[35,10,35,8,"_$$_REQUIRE"],[35,21,35,8],[35,22,35,8,"_dependencyMap"],[35,36,35,8],[35,56,35,8,"Buffer"],[35,62,35,8],[35,63,35,15,"from"],[35,67,35,19],[35,68,35,20,"pad"],[35,71,35,23],[35,72,35,24],[36,4,36,2],[36,8,36,6,"red"],[36,11,36,9],[36,14,36,12,"_$$_REQUIRE"],[36,25,36,12],[36,26,36,12,"_dependencyMap"],[36,40,36,12],[36,54,36,15,"mont"],[36,58,36,19],[36,59,36,20,"pub"],[36,62,36,23],[36,63,36,24,"modulus"],[36,70,36,31],[36,71,36,32],[37,4,37,2,"sig"],[37,7,37,5],[37,10,37,8],[37,15,37,8,"_$$_REQUIRE"],[37,26,37,8],[37,27,37,8,"_dependencyMap"],[37,41,37,8],[37,56,37,15,"sig"],[37,59,37,18],[37,60,37,19],[37,61,37,20,"toRed"],[37,66,37,25],[37,67,37,26,"red"],[37,70,37,29],[37,71,37,30],[38,4,39,2,"sig"],[38,7,39,5],[38,10,39,8,"sig"],[38,13,39,11],[38,14,39,12,"redPow"],[38,20,39,18],[38,21,39,19],[38,26,39,19,"_$$_REQUIRE"],[38,37,39,19],[38,38,39,19,"_dependencyMap"],[38,52,39,19],[38,67,39,26,"pub"],[38,70,39,29],[38,71,39,30,"publicExponent"],[38,85,39,44],[38,86,39,45],[38,87,39,46],[39,4,40,2,"sig"],[39,7,40,5],[39,10,40,8,"_$$_REQUIRE"],[39,21,40,8],[39,22,40,8,"_dependencyMap"],[39,36,40,8],[39,56,40,8,"Buffer"],[39,62,40,8],[39,63,40,15,"from"],[39,67,40,19],[39,68,40,20,"sig"],[39,71,40,23],[39,72,40,24,"fromRed"],[39,79,40,31],[39,80,40,32],[39,81,40,33],[39,82,40,34,"toArray"],[39,89,40,41],[39,90,40,42],[39,91,40,43],[39,92,40,44],[40,4,41,2],[40,8,41,6,"out"],[40,11,41,9],[40,14,41,12,"padNum"],[40,20,41,18],[40,23,41,21],[40,24,41,22],[40,27,41,25],[40,28,41,26],[40,31,41,29],[40,32,41,30],[41,4,42,2,"len"],[41,7,42,5],[41,10,42,8,"Math"],[41,14,42,12],[41,15,42,13,"min"],[41,18,42,16],[41,19,42,17,"sig"],[41,22,42,20],[41,23,42,21,"length"],[41,29,42,27],[41,31,42,29,"pad"],[41,34,42,32],[41,35,42,33,"length"],[41,41,42,39],[41,42,42,40],[42,4,43,2],[42,8,43,6,"sig"],[42,11,43,9],[42,12,43,10,"length"],[42,18,43,16],[42,23,43,21,"pad"],[42,26,43,24],[42,27,43,25,"length"],[42,33,43,31],[42,35,43,33],[43,6,43,35,"out"],[43,9,43,38],[43,12,43,41],[43,13,43,42],[44,4,43,44],[45,4,45,2,"i"],[45,5,45,3],[45,8,45,6],[45,9,45,7],[45,10,45,8],[46,4,46,2],[46,11,46,9],[46,13,46,11,"i"],[46,14,46,12],[46,17,46,15,"len"],[46,20,46,18],[46,22,46,20],[47,6,46,22,"out"],[47,9,46,25],[47,13,46,29,"sig"],[47,16,46,32],[47,17,46,33,"i"],[47,18,46,34],[47,19,46,35],[47,22,46,38,"pad"],[47,25,46,41],[47,26,46,42,"i"],[47,27,46,43],[47,28,46,44],[48,4,46,46],[49,4,47,2],[49,11,47,9,"out"],[49,14,47,12],[49,19,47,17],[49,20,47,18],[50,2,48,0],[51,2,50,0],[51,11,50,9,"ecVerify"],[51,19,50,17,"ecVerify"],[51,20,50,18,"sig"],[51,23,50,21],[51,25,50,23,"hash"],[51,29,50,27],[51,31,50,29,"pub"],[51,34,50,32],[51,36,50,34],[52,4,51,2],[52,8,51,6,"curveId"],[52,15,51,13],[52,18,51,16,"_$$_REQUIRE"],[52,29,51,16],[52,30,51,16,"_dependencyMap"],[52,44,51,16],[52,66,51,23,"pub"],[52,69,51,26],[52,70,51,27,"data"],[52,74,51,31],[52,75,51,32,"algorithm"],[52,84,51,41],[52,85,51,42,"curve"],[52,90,51,47],[52,91,51,48,"join"],[52,95,51,52],[52,96,51,53],[52,99,51,56],[52,100,51,57],[52,101,51,58],[53,4,52,2],[53,8,52,6],[53,9,52,7,"curveId"],[53,16,52,14],[53,18,52,16],[54,6,52,18],[54,12,52,24],[54,16,52,28,"Error"],[54,21,52,33],[54,22,52,34],[54,38,52,50],[54,41,52,53,"pub"],[54,44,52,56],[54,45,52,57,"data"],[54,49,52,61],[54,50,52,62,"algorithm"],[54,59,52,71],[54,60,52,72,"curve"],[54,65,52,77],[54,66,52,78,"join"],[54,70,52,82],[54,71,52,83],[54,74,52,86],[54,75,52,87],[54,76,52,88],[55,4,52,90],[56,4,54,2],[56,8,54,6,"curve"],[56,13,54,11],[56,16,54,14],[56,21,54,14,"_$$_REQUIRE"],[56,32,54,14],[56,33,54,14,"_dependencyMap"],[56,47,54,14],[56,64,54,14,"ec"],[56,66,54,14],[56,68,54,21,"curveId"],[56,75,54,28],[56,76,54,29],[57,4,55,2],[57,8,55,6,"pubkey"],[57,14,55,12],[57,17,55,15,"pub"],[57,20,55,18],[57,21,55,19,"data"],[57,25,55,23],[57,26,55,24,"subjectPrivateKey"],[57,43,55,41],[57,44,55,42,"data"],[57,48,55,46],[58,4,57,2],[58,11,57,9,"curve"],[58,16,57,14],[58,17,57,15,"verify"],[58,23,57,21],[58,24,57,22,"hash"],[58,28,57,26],[58,30,57,28,"sig"],[58,33,57,31],[58,35,57,33,"pubkey"],[58,41,57,39],[58,42,57,40],[59,2,58,0],[60,2,60,0],[60,11,60,9,"dsaVerify"],[60,20,60,18,"dsaVerify"],[60,21,60,19,"sig"],[60,24,60,22],[60,26,60,24,"hash"],[60,30,60,28],[60,32,60,30,"pub"],[60,35,60,33],[60,37,60,35],[61,4,61,2],[61,8,61,6,"p"],[61,9,61,7],[61,12,61,10,"pub"],[61,15,61,13],[61,16,61,14,"data"],[61,20,61,18],[61,21,61,19,"p"],[61,22,61,20],[62,4,62,2],[62,8,62,6,"q"],[62,9,62,7],[62,12,62,10,"pub"],[62,15,62,13],[62,16,62,14,"data"],[62,20,62,18],[62,21,62,19,"q"],[62,22,62,20],[63,4,63,2],[63,8,63,6,"g"],[63,9,63,7],[63,12,63,10,"pub"],[63,15,63,13],[63,16,63,14,"data"],[63,20,63,18],[63,21,63,19,"g"],[63,22,63,20],[64,4,64,2],[64,8,64,6,"y"],[64,9,64,7],[64,12,64,10,"pub"],[64,15,64,13],[64,16,64,14,"data"],[64,20,64,18],[64,21,64,19,"pub_key"],[64,28,64,26],[65,4,65,2],[65,8,65,6,"unpacked"],[65,16,65,14],[65,19,65,17,"_$$_REQUIRE"],[65,30,65,17],[65,31,65,17,"_dependencyMap"],[65,45,65,17],[65,64,65,27,"signature"],[65,73,65,36],[65,74,65,37,"decode"],[65,80,65,43],[65,81,65,44,"sig"],[65,84,65,47],[65,86,65,49],[65,91,65,54],[65,92,65,55],[66,4,66,2],[66,8,66,6,"s"],[66,9,66,7],[66,12,66,10,"unpacked"],[66,20,66,18],[66,21,66,19,"s"],[66,22,66,20],[67,4,67,2],[67,8,67,6,"r"],[67,9,67,7],[67,12,67,10,"unpacked"],[67,20,67,18],[67,21,67,19,"r"],[67,22,67,20],[68,4,68,2,"checkValue"],[68,14,68,12],[68,15,68,13,"s"],[68,16,68,14],[68,18,68,16,"q"],[68,19,68,17],[68,20,68,18],[69,4,69,2,"checkValue"],[69,14,69,12],[69,15,69,13,"r"],[69,16,69,14],[69,18,69,16,"q"],[69,19,69,17],[69,20,69,18],[70,4,70,2],[70,8,70,6,"montp"],[70,13,70,11],[70,16,70,14,"_$$_REQUIRE"],[70,27,70,14],[70,28,70,14,"_dependencyMap"],[70,42,70,14],[70,56,70,17,"mont"],[70,60,70,21],[70,61,70,22,"p"],[70,62,70,23],[70,63,70,24],[71,4,71,2],[71,8,71,6,"w"],[71,9,71,7],[71,12,71,10,"s"],[71,13,71,11],[71,14,71,12,"invm"],[71,18,71,16],[71,19,71,17,"q"],[71,20,71,18],[71,21,71,19],[72,4,72,2],[72,8,72,6,"v"],[72,9,72,7],[72,12,72,10,"g"],[72,13,72,11],[72,14,72,12,"toRed"],[72,19,72,17],[72,20,72,18,"montp"],[72,25,72,23],[72,26,72,24],[72,27,73,5,"redPow"],[72,33,73,11],[72,34,73,12],[72,39,73,12,"_$$_REQUIRE"],[72,50,73,12],[72,51,73,12,"_dependencyMap"],[72,65,73,12],[72,80,73,19,"hash"],[72,84,73,23],[72,85,73,24],[72,86,73,25,"mul"],[72,89,73,28],[72,90,73,29,"w"],[72,91,73,30],[72,92,73,31],[72,93,73,32,"mod"],[72,96,73,35],[72,97,73,36,"q"],[72,98,73,37],[72,99,73,38],[72,100,73,39],[72,101,74,5,"fromRed"],[72,108,74,12],[72,109,74,13],[72,110,74,14],[72,111,75,5,"mul"],[72,114,75,8],[72,115,75,9,"y"],[72,116,75,10],[72,117,75,11,"toRed"],[72,122,75,16],[72,123,75,17,"montp"],[72,128,75,22],[72,129,75,23],[72,130,75,24,"redPow"],[72,136,75,30],[72,137,75,31,"r"],[72,138,75,32],[72,139,75,33,"mul"],[72,142,75,36],[72,143,75,37,"w"],[72,144,75,38],[72,145,75,39],[72,146,75,40,"mod"],[72,149,75,43],[72,150,75,44,"q"],[72,151,75,45],[72,152,75,46],[72,153,75,47],[72,154,75,48,"fromRed"],[72,161,75,55],[72,162,75,56],[72,163,75,57],[72,164,75,58],[72,165,76,5,"mod"],[72,168,76,8],[72,169,76,9,"p"],[72,170,76,10],[72,171,76,11],[72,172,77,5,"mod"],[72,175,77,8],[72,176,77,9,"q"],[72,177,77,10],[72,178,77,11],[73,4,78,2],[73,11,78,9,"v"],[73,12,78,10],[73,13,78,11,"cmp"],[73,16,78,14],[73,17,78,15,"r"],[73,18,78,16],[73,19,78,17],[73,24,78,22],[73,25,78,23],[74,2,79,0],[75,2,81,0],[75,11,81,9,"checkValue"],[75,21,81,19,"checkValue"],[75,22,81,20,"b"],[75,23,81,21],[75,25,81,23,"q"],[75,26,81,24],[75,28,81,26],[76,4,82,2],[76,8,82,6,"b"],[76,9,82,7],[76,10,82,8,"cmpn"],[76,14,82,12],[76,15,82,13],[76,16,82,14],[76,17,82,15],[76,21,82,19],[76,22,82,20],[76,24,82,22],[77,6,82,24],[77,12,82,30],[77,16,82,34,"Error"],[77,21,82,39],[77,22,82,40],[77,35,82,53],[77,36,82,54],[78,4,82,56],[79,4,83,2],[79,8,83,6,"b"],[79,9,83,7],[79,10,83,8,"cmp"],[79,13,83,11],[79,14,83,12,"q"],[79,15,83,13],[79,16,83,14],[79,20,83,18],[79,21,83,19],[79,23,83,21],[80,6,83,23],[80,12,83,29],[80,16,83,33,"Error"],[80,21,83,38],[80,22,83,39],[80,35,83,52],[80,36,83,53],[81,4,83,55],[82,2,84,0],[83,2,86,0,"module"],[83,8,86,6],[83,9,86,7,"exports"],[83,16,86,14],[83,19,86,17,"verify"],[83,25,86,23],[84,0,86,24],[84,3]],"functionMap":{"names":["<global>","verify","ecVerify","dsaVerify","checkValue"],"mappings":"AAA;ACS;CDsC;AEE;CFQ;AGE;CHmB;AIE;CJG"}},"type":"js/module"}]}