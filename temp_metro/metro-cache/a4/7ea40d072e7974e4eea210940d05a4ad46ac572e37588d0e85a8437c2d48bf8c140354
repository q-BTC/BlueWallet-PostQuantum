{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":88,"column":0,"index":1686}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":88,"column":0,"index":1686}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/wrapAsyncGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":88,"column":0,"index":1686}}],"key":"NV7M0GAEWUGvIKMnZy5Y7CrLwN8="}},{"name":"@babel/runtime/helpers/awaitAsyncGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":88,"column":0,"index":1686}}],"key":"WZI4BLbsoFmfGv92jc0fZy7RWkQ="}},{"name":"@babel/runtime/helpers/asyncGeneratorDelegate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":88,"column":0,"index":1686}}],"key":"8SoQTgNnDOFflm3kw5qN1ZnDGHs="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.trackStream = exports.streamChunk = exports.readBytes = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _wrapAsyncGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/wrapAsyncGenerator\"));\n  var _awaitAsyncGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/awaitAsyncGenerator\"));\n  var _asyncGeneratorDelegate2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/asyncGeneratorDelegate\"));\n  function _asyncIterator(r) { var n, t, o, e = 2; for (\"undefined\" != typeof Symbol && (t = Symbol.asyncIterator, o = Symbol.iterator); e--;) { if (t && null != (n = r[t])) return n.call(r); if (o && null != (n = r[o])) return new AsyncFromSyncIterator(n.call(r)); t = \"@@asyncIterator\", o = \"@@iterator\"; } throw new TypeError(\"Object is not async iterable\"); }\n  function AsyncFromSyncIterator(r) { function AsyncFromSyncIteratorContinuation(r) { if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\")); var n = r.done; return Promise.resolve(r.value).then(function (r) { return { value: r, done: n }; }); } return AsyncFromSyncIterator = function AsyncFromSyncIterator(r) { this.s = r, this.n = r.next; }, AsyncFromSyncIterator.prototype = { s: null, n: null, next: function next() { return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments)); }, return: function _return(r) { var n = this.s.return; return void 0 === n ? Promise.resolve({ value: r, done: !0 }) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); }, throw: function _throw(r) { var n = this.s.return; return void 0 === n ? Promise.reject(r) : AsyncFromSyncIteratorContinuation(n.apply(this.s, arguments)); } }, new AsyncFromSyncIterator(r); }\n  var streamChunk = exports.streamChunk = function* streamChunk(chunk, chunkSize) {\n    var len = chunk.byteLength;\n    if (!chunkSize || len < chunkSize) {\n      yield chunk;\n      return;\n    }\n    var pos = 0;\n    var end;\n    while (pos < len) {\n      end = pos + chunkSize;\n      yield chunk.slice(pos, end);\n      pos = end;\n    }\n  };\n  var readBytes = exports.readBytes = /*#__PURE__*/function () {\n    var _ref = (0, _wrapAsyncGenerator2.default)(function* (iterable, chunkSize) {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(readStream(iterable)), _step; _iteratorAbruptCompletion = !(_step = yield (0, _awaitAsyncGenerator2.default)(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          var chunk = _step.value;\n          {\n            yield* (0, _asyncGeneratorDelegate2.default)(_asyncIterator(streamChunk(chunk, chunkSize)), _awaitAsyncGenerator2.default);\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield (0, _awaitAsyncGenerator2.default)(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    });\n    return function readBytes(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var readStream = /*#__PURE__*/function () {\n    var _ref2 = (0, _wrapAsyncGenerator2.default)(function* (stream) {\n      if (stream[Symbol.asyncIterator]) {\n        yield* (0, _asyncGeneratorDelegate2.default)(_asyncIterator(stream), _awaitAsyncGenerator2.default);\n        return;\n      }\n      var reader = stream.getReader();\n      try {\n        for (;;) {\n          var _yield$_awaitAsyncGen = yield (0, _awaitAsyncGenerator2.default)(reader.read()),\n            done = _yield$_awaitAsyncGen.done,\n            value = _yield$_awaitAsyncGen.value;\n          if (done) {\n            break;\n          }\n          yield value;\n        }\n      } finally {\n        yield (0, _awaitAsyncGenerator2.default)(reader.cancel());\n      }\n    });\n    return function readStream(_x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var trackStream = exports.trackStream = function trackStream(stream, chunkSize, onProgress, onFinish) {\n    var iterator = readBytes(stream, chunkSize);\n    var bytes = 0;\n    var done;\n    var _onFinish = function _onFinish(e) {\n      if (!done) {\n        done = true;\n        onFinish && onFinish(e);\n      }\n    };\n    return new ReadableStream({\n      pull: function () {\n        var _pull = (0, _asyncToGenerator2.default)(function* (controller) {\n          try {\n            var _yield$iterator$next = yield iterator.next(),\n              _done = _yield$iterator$next.done,\n              value = _yield$iterator$next.value;\n            if (_done) {\n              _onFinish();\n              controller.close();\n              return;\n            }\n            var len = value.byteLength;\n            if (onProgress) {\n              var loadedBytes = bytes += len;\n              onProgress(loadedBytes);\n            }\n            controller.enqueue(new Uint8Array(value));\n          } catch (err) {\n            _onFinish(err);\n            throw err;\n          }\n        });\n        function pull(_x4) {\n          return _pull.apply(this, arguments);\n        }\n        return pull;\n      }(),\n      cancel: function cancel(reason) {\n        _onFinish(reason);\n        return iterator.return();\n      }\n    }, {\n      highWaterMark: 2\n    });\n  };\n});","lineCount":129,"map":[[13,2,2,7],[13,6,2,13,"streamChunk"],[13,17,2,24],[13,20,2,24,"exports"],[13,27,2,24],[13,28,2,24,"streamChunk"],[13,39,2,24],[13,42,2,27],[13,52,2,13,"streamChunk"],[13,63,2,24,"streamChunk"],[13,64,2,38,"chunk"],[13,69,2,43],[13,71,2,45,"chunkSize"],[13,80,2,54],[13,82,2,56],[14,4,3,2],[14,8,3,6,"len"],[14,11,3,9],[14,14,3,12,"chunk"],[14,19,3,17],[14,20,3,18,"byteLength"],[14,30,3,28],[15,4,5,2],[15,8,5,6],[15,9,5,7,"chunkSize"],[15,18,5,16],[15,22,5,20,"len"],[15,25,5,23],[15,28,5,26,"chunkSize"],[15,37,5,35],[15,39,5,37],[16,6,6,4],[16,12,6,10,"chunk"],[16,17,6,15],[17,6,7,4],[18,4,8,2],[19,4,10,2],[19,8,10,6,"pos"],[19,11,10,9],[19,14,10,12],[19,15,10,13],[20,4,11,2],[20,8,11,6,"end"],[20,11,11,9],[21,4,13,2],[21,11,13,9,"pos"],[21,14,13,12],[21,17,13,15,"len"],[21,20,13,18],[21,22,13,20],[22,6,14,4,"end"],[22,9,14,7],[22,12,14,10,"pos"],[22,15,14,13],[22,18,14,16,"chunkSize"],[22,27,14,25],[23,6,15,4],[23,12,15,10,"chunk"],[23,17,15,15],[23,18,15,16,"slice"],[23,23,15,21],[23,24,15,22,"pos"],[23,27,15,25],[23,29,15,27,"end"],[23,32,15,30],[23,33,15,31],[24,6,16,4,"pos"],[24,9,16,7],[24,12,16,10,"end"],[24,15,16,13],[25,4,17,2],[26,2,18,0],[26,3,18,1],[27,2,20,7],[27,6,20,13,"readBytes"],[27,15,20,22],[27,18,20,22,"exports"],[27,25,20,22],[27,26,20,22,"readBytes"],[27,35,20,22],[28,4,20,22],[28,8,20,22,"_ref"],[28,12,20,22],[28,19,20,22,"_wrapAsyncGenerator2"],[28,39,20,22],[28,40,20,22,"default"],[28,47,20,22],[28,49,20,25],[28,60,20,42,"iterable"],[28,68,20,50],[28,70,20,52,"chunkSize"],[28,79,20,61],[28,81,20,63],[29,6,20,63],[29,10,20,63,"_iteratorAbruptCompletion"],[29,35,20,63],[30,6,20,63],[30,10,20,63,"_didIteratorError"],[30,27,20,63],[31,6,20,63],[31,10,20,63,"_iteratorError"],[31,24,20,63],[32,6,20,63],[33,8,21,2],[33,17,21,2,"_iterator"],[33,26,21,2],[33,29,21,2,"_asyncIterator"],[33,43,21,2],[33,44,21,28,"readStream"],[33,54,21,38],[33,55,21,39,"iterable"],[33,63,21,47],[33,64,21,48],[33,67,21,48,"_step"],[33,72,21,48],[33,74,21,48,"_iteratorAbruptCompletion"],[33,99,21,48],[33,104,21,48,"_step"],[33,109,21,48],[33,122,21,48,"_awaitAsyncGenerator2"],[33,143,21,48],[33,144,21,48,"default"],[33,151,21,48],[33,153,21,48,"_iterator"],[33,162,21,48],[33,163,21,48,"next"],[33,167,21,48],[33,172,21,48,"done"],[33,176,21,48],[33,178,21,48,"_iteratorAbruptCompletion"],[33,203,21,48],[33,213,21,50],[34,10,21,50],[34,14,21,19,"chunk"],[34,19,21,24],[34,22,21,24,"_step"],[34,27,21,24],[34,28,21,24,"value"],[34,33,21,24],[35,10,21,24],[36,12,22,4],[36,23,22,4,"_asyncGeneratorDelegate2"],[36,47,22,4],[36,48,22,4,"default"],[36,55,22,4],[36,57,22,4,"_asyncIterator"],[36,71,22,4],[36,72,22,11,"streamChunk"],[36,83,22,22],[36,84,22,23,"chunk"],[36,89,22,28],[36,91,22,30,"chunkSize"],[36,100,22,39],[36,101,22,40],[36,104,22,40,"_awaitAsyncGenerator2"],[36,125,22,40],[36,126,22,40,"default"],[36,133,22,40],[37,10,22,41],[38,8,23,2],[39,6,23,3],[39,15,23,3,"err"],[39,18,23,3],[40,8,23,3,"_didIteratorError"],[40,25,23,3],[41,8,23,3,"_iteratorError"],[41,22,23,3],[41,25,23,3,"err"],[41,28,23,3],[42,6,23,3],[43,8,23,3],[44,10,23,3],[44,14,23,3,"_iteratorAbruptCompletion"],[44,39,23,3],[44,43,23,3,"_iterator"],[44,52,23,3],[44,53,23,3,"return"],[44,59,23,3],[45,12,23,3],[45,22,23,3,"_awaitAsyncGenerator2"],[45,43,23,3],[45,44,23,3,"default"],[45,51,23,3],[45,53,23,3,"_iterator"],[45,62,23,3],[45,63,23,3,"return"],[45,69,23,3],[46,10,23,3],[47,8,23,3],[48,10,23,3],[48,14,23,3,"_didIteratorError"],[48,31,23,3],[49,12,23,3],[49,18,23,3,"_iteratorError"],[49,32,23,3],[50,10,23,3],[51,8,23,3],[52,6,23,3],[53,4,24,0],[53,5,24,1],[54,4,24,1],[54,20,20,13,"readBytes"],[54,29,20,22,"readBytes"],[54,30,20,22,"_x"],[54,32,20,22],[54,34,20,22,"_x2"],[54,37,20,22],[55,6,20,22],[55,13,20,22,"_ref"],[55,17,20,22],[55,18,20,22,"apply"],[55,23,20,22],[55,30,20,22,"arguments"],[55,39,20,22],[56,4,20,22],[57,2,20,22],[57,5,24,1],[58,2,26,0],[58,6,26,6,"readStream"],[58,16,26,16],[59,4,26,16],[59,8,26,16,"_ref2"],[59,13,26,16],[59,20,26,16,"_wrapAsyncGenerator2"],[59,40,26,16],[59,41,26,16,"default"],[59,48,26,16],[59,50,26,19],[59,61,26,36,"stream"],[59,67,26,42],[59,69,26,44],[60,6,27,2],[60,10,27,6,"stream"],[60,16,27,12],[60,17,27,13,"Symbol"],[60,23,27,19],[60,24,27,20,"asyncIterator"],[60,37,27,33],[60,38,27,34],[60,40,27,36],[61,8,28,4],[61,19,28,4,"_asyncGeneratorDelegate2"],[61,43,28,4],[61,44,28,4,"default"],[61,51,28,4],[61,53,28,4,"_asyncIterator"],[61,67,28,4],[61,68,28,11,"stream"],[61,74,28,17],[61,77,28,17,"_awaitAsyncGenerator2"],[61,98,28,17],[61,99,28,17,"default"],[61,106,28,17],[62,8,29,4],[63,6,30,2],[64,6,32,2],[64,10,32,8,"reader"],[64,16,32,14],[64,19,32,17,"stream"],[64,25,32,23],[64,26,32,24,"getReader"],[64,35,32,33],[64,36,32,34],[64,37,32,35],[65,6,33,2],[65,10,33,6],[66,8,34,4],[66,17,34,13],[67,10,35,6],[67,14,35,6,"_yield$_awaitAsyncGen"],[67,35,35,6],[67,48,35,6,"_awaitAsyncGenerator2"],[67,69,35,6],[67,70,35,6,"default"],[67,77,35,6],[67,79,35,34,"reader"],[67,85,35,40],[67,86,35,41,"read"],[67,90,35,45],[67,91,35,46],[67,92,35,47],[68,12,35,13,"done"],[68,16,35,17],[68,19,35,17,"_yield$_awaitAsyncGen"],[68,40,35,17],[68,41,35,13,"done"],[68,45,35,17],[69,12,35,19,"value"],[69,17,35,24],[69,20,35,24,"_yield$_awaitAsyncGen"],[69,41,35,24],[69,42,35,19,"value"],[69,47,35,24],[70,10,36,6],[70,14,36,10,"done"],[70,18,36,14],[70,20,36,16],[71,12,37,8],[72,10,38,6],[73,10,39,6],[73,16,39,12,"value"],[73,21,39,17],[74,8,40,4],[75,6,41,2],[75,7,41,3],[75,16,41,12],[76,8,42,4],[76,18,42,4,"_awaitAsyncGenerator2"],[76,39,42,4],[76,40,42,4,"default"],[76,47,42,4],[76,49,42,10,"reader"],[76,55,42,16],[76,56,42,17,"cancel"],[76,62,42,23],[76,63,42,24],[76,64,42,25],[77,6,43,2],[78,4,44,0],[78,5,44,1],[79,4,44,1],[79,20,26,6,"readStream"],[79,30,26,16,"readStream"],[79,31,26,16,"_x3"],[79,34,26,16],[80,6,26,16],[80,13,26,16,"_ref2"],[80,18,26,16],[80,19,26,16,"apply"],[80,24,26,16],[80,31,26,16,"arguments"],[80,40,26,16],[81,4,26,16],[82,2,26,16],[82,5,44,1],[83,2,46,7],[83,6,46,13,"trackStream"],[83,17,46,24],[83,20,46,24,"exports"],[83,27,46,24],[83,28,46,24,"trackStream"],[83,39,46,24],[83,42,46,27],[83,51,46,13,"trackStream"],[83,62,46,24,"trackStream"],[83,63,46,28,"stream"],[83,69,46,34],[83,71,46,36,"chunkSize"],[83,80,46,45],[83,82,46,47,"onProgress"],[83,92,46,57],[83,94,46,59,"onFinish"],[83,102,46,67],[83,104,46,72],[84,4,47,2],[84,8,47,8,"iterator"],[84,16,47,16],[84,19,47,19,"readBytes"],[84,28,47,28],[84,29,47,29,"stream"],[84,35,47,35],[84,37,47,37,"chunkSize"],[84,46,47,46],[84,47,47,47],[85,4,49,2],[85,8,49,6,"bytes"],[85,13,49,11],[85,16,49,14],[85,17,49,15],[86,4,50,2],[86,8,50,6,"done"],[86,12,50,10],[87,4,51,2],[87,8,51,6,"_onFinish"],[87,17,51,15],[87,20,51,18],[87,29,51,6,"_onFinish"],[87,38,51,15,"_onFinish"],[87,39,51,19,"e"],[87,40,51,20],[87,42,51,25],[88,6,52,4],[88,10,52,8],[88,11,52,9,"done"],[88,15,52,13],[88,17,52,15],[89,8,53,6,"done"],[89,12,53,10],[89,15,53,13],[89,19,53,17],[90,8,54,6,"onFinish"],[90,16,54,14],[90,20,54,18,"onFinish"],[90,28,54,26],[90,29,54,27,"e"],[90,30,54,28],[90,31,54,29],[91,6,55,4],[92,4,56,2],[92,5,56,3],[93,4,58,2],[93,11,58,9],[93,15,58,13,"ReadableStream"],[93,29,58,27],[93,30,58,28],[94,6,59,10,"pull"],[94,10,59,14],[95,8,59,14],[95,12,59,14,"_pull"],[95,17,59,14],[95,24,59,14,"_asyncToGenerator2"],[95,42,59,14],[95,43,59,14,"default"],[95,50,59,14],[95,63,59,15,"controller"],[95,73,59,25],[95,75,59,27],[96,10,60,6],[96,14,60,10],[97,12,61,8],[97,16,61,8,"_yield$iterator$next"],[97,36,61,8],[97,45,61,36,"iterator"],[97,53,61,44],[97,54,61,45,"next"],[97,58,61,49],[97,59,61,50],[97,60,61,51],[98,14,61,15,"done"],[98,19,61,19],[98,22,61,19,"_yield$iterator$next"],[98,42,61,19],[98,43,61,15,"done"],[98,47,61,19],[99,14,61,21,"value"],[99,19,61,26],[99,22,61,26,"_yield$iterator$next"],[99,42,61,26],[99,43,61,21,"value"],[99,48,61,26],[100,12,63,8],[100,16,63,12,"done"],[100,21,63,16],[100,23,63,18],[101,14,64,9,"_onFinish"],[101,23,64,18],[101,24,64,19],[101,25,64,20],[102,14,65,10,"controller"],[102,24,65,20],[102,25,65,21,"close"],[102,30,65,26],[102,31,65,27],[102,32,65,28],[103,14,66,10],[104,12,67,8],[105,12,69,8],[105,16,69,12,"len"],[105,19,69,15],[105,22,69,18,"value"],[105,27,69,23],[105,28,69,24,"byteLength"],[105,38,69,34],[106,12,70,8],[106,16,70,12,"onProgress"],[106,26,70,22],[106,28,70,24],[107,14,71,10],[107,18,71,14,"loadedBytes"],[107,29,71,25],[107,32,71,28,"bytes"],[107,37,71,33],[107,41,71,37,"len"],[107,44,71,40],[108,14,72,10,"onProgress"],[108,24,72,20],[108,25,72,21,"loadedBytes"],[108,36,72,32],[108,37,72,33],[109,12,73,8],[110,12,74,8,"controller"],[110,22,74,18],[110,23,74,19,"enqueue"],[110,30,74,26],[110,31,74,27],[110,35,74,31,"Uint8Array"],[110,45,74,41],[110,46,74,42,"value"],[110,51,74,47],[110,52,74,48],[110,53,74,49],[111,10,75,6],[111,11,75,7],[111,12,75,8],[111,19,75,15,"err"],[111,22,75,18],[111,24,75,20],[112,12,76,8,"_onFinish"],[112,21,76,17],[112,22,76,18,"err"],[112,25,76,21],[112,26,76,22],[113,12,77,8],[113,18,77,14,"err"],[113,21,77,17],[114,10,78,6],[115,8,79,4],[115,9,79,5],[116,8,79,5],[116,17,59,10,"pull"],[116,21,59,14,"pull"],[116,22,59,14,"_x4"],[116,25,59,14],[117,10,59,14],[117,17,59,14,"_pull"],[117,22,59,14],[117,23,59,14,"apply"],[117,28,59,14],[117,35,59,14,"arguments"],[117,44,59,14],[118,8,59,14],[119,8,59,14],[119,15,59,10,"pull"],[119,19,59,14],[120,6,59,14],[121,6,80,4,"cancel"],[121,12,80,10],[121,23,80,4,"cancel"],[121,29,80,10,"cancel"],[121,30,80,11,"reason"],[121,36,80,17],[121,38,80,19],[122,8,81,6,"_onFinish"],[122,17,81,15],[122,18,81,16,"reason"],[122,24,81,22],[122,25,81,23],[123,8,82,6],[123,15,82,13,"iterator"],[123,23,82,21],[123,24,82,22,"return"],[123,30,82,28],[123,31,82,29],[123,32,82,30],[124,6,83,4],[125,4,84,2],[125,5,84,3],[125,7,84,5],[126,6,85,4,"highWaterMark"],[126,19,85,17],[126,21,85,19],[127,4,86,2],[127,5,86,3],[127,6,86,4],[128,2,87,0],[128,3,87,1],[129,0,87,1],[129,3]],"functionMap":{"names":["<global>","streamChunk","readBytes","readStream","trackStream","_onFinish","ReadableStream$argument_0.pull","ReadableStream$argument_0.cancel"],"mappings":"AAA;2BCC;CDgB;yBEE;CFI;mBGE;CHkB;2BIE;kBCK;GDK;IEG;KFoB;IGC;KHG;CJI"}},"type":"js/module"}]}