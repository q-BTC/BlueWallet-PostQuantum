{"dependencies":[{"name":"../assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":17,"index":884},"end":{"line":21,"column":37,"index":904}}],"key":"EqNBW+769mc/j/kMnDe9BBrECKc="}},{"name":"./default","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":18,"index":924},"end":{"line":22,"column":38,"index":944}}],"key":"iPTl0M+oayNC54YVqh6VuhyHdo4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2024 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createObjectPropertyAccessor = void 0;\n  function createEmbeddedSet(_ref) {\n    var toBinding = _ref.typeHelpers.toBinding,\n      columnKey = _ref.columnKey;\n    return function (obj, value) {\n      // Asking for the toBinding will create the object and link it to the parent in one operation.\n      // Thus, no need to actually set the value on the `obj` unless it's an optional null value.\n      var bindingValue = toBinding(value, {\n        createObj: function createObj() {\n          return [obj.createAndSetLinkedObject(columnKey), true];\n        }\n      });\n      // No need to destructure `optional` and check that it's `true` in this condition before setting\n      // it to null as objects are always optional. The condition is placed after the invocation of\n      // `toBinding()` in order to leave the type conversion responsibility to `toBinding()`.\n      if (bindingValue === null) {\n        obj.setAny(columnKey, bindingValue);\n      }\n    };\n  }\n  /** @internal */\n  function createObjectPropertyAccessor(options) {\n    var columnKey = options.columnKey,\n      fromBinding = options.typeHelpers.fromBinding,\n      embedded = options.embedded;\n    (0, _$$_REQUIRE(_dependencyMap[0], \"../assert\").assert)(options.optional, \"Objects are always nullable\");\n    var _ref2 = (0, _$$_REQUIRE(_dependencyMap[1], \"./default\").createDefaultPropertyAccessor)(options),\n      defaultSet = _ref2.set;\n    return {\n      get: function get(obj) {\n        return fromBinding(obj.getLinkedObject(columnKey));\n      },\n      set: embedded ? createEmbeddedSet(options) : defaultSet\n    };\n  }\n  exports.createObjectPropertyAccessor = createObjectPropertyAccessor;\n});","lineCount":60,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,19,0,"Object"],[21,8,19,6],[21,9,19,7,"defineProperty"],[21,23,19,21],[21,24,19,22,"exports"],[21,31,19,29],[21,33,19,31],[21,45,19,43],[21,47,19,45],[22,4,19,47,"value"],[22,9,19,52],[22,11,19,54],[23,2,19,59],[23,3,19,60],[23,4,19,61],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"createObjectPropertyAccessor"],[24,38,20,36],[24,41,20,39],[24,46,20,44],[24,47,20,45],[25,2,23,0],[25,11,23,9,"createEmbeddedSet"],[25,28,23,26,"createEmbeddedSet"],[25,29,23,26,"_ref"],[25,33,23,26],[25,35,23,70],[26,4,23,70],[26,8,23,44,"toBinding"],[26,17,23,53],[26,20,23,53,"_ref"],[26,24,23,53],[26,25,23,29,"typeHelpers"],[26,36,23,40],[26,37,23,44,"toBinding"],[26,46,23,53],[27,6,23,57,"columnKey"],[27,15,23,66],[27,18,23,66,"_ref"],[27,22,23,66],[27,23,23,57,"columnKey"],[27,32,23,66],[28,4,24,4],[28,11,24,11],[28,21,24,12,"obj"],[28,24,24,15],[28,26,24,17,"value"],[28,31,24,22],[28,33,24,27],[29,6,25,8],[30,6,26,8],[31,6,27,8],[31,10,27,14,"bindingValue"],[31,22,27,26],[31,25,27,29,"toBinding"],[31,34,27,38],[31,35,27,39,"value"],[31,40,27,44],[31,42,27,46],[32,8,27,48,"createObj"],[32,17,27,57],[32,19,27,59],[32,28,27,48,"createObj"],[32,37,27,57,"createObj"],[32,38,27,57],[33,10,27,57],[33,17,27,65],[33,18,27,66,"obj"],[33,21,27,69],[33,22,27,70,"createAndSetLinkedObject"],[33,46,27,94],[33,47,27,95,"columnKey"],[33,56,27,104],[33,57,27,105],[33,59,27,107],[33,63,27,111],[33,64,27,112],[34,8,27,112],[35,6,27,113],[35,7,27,114],[35,8,27,115],[36,6,28,8],[37,6,29,8],[38,6,30,8],[39,6,31,8],[39,10,31,12,"bindingValue"],[39,22,31,24],[39,27,31,29],[39,31,31,33],[39,33,31,35],[40,8,32,12,"obj"],[40,11,32,15],[40,12,32,16,"setAny"],[40,18,32,22],[40,19,32,23,"columnKey"],[40,28,32,32],[40,30,32,34,"bindingValue"],[40,42,32,46],[40,43,32,47],[41,6,33,8],[42,4,34,4],[42,5,34,5],[43,2,35,0],[44,2,36,0],[45,2,37,0],[45,11,37,9,"createObjectPropertyAccessor"],[45,39,37,37,"createObjectPropertyAccessor"],[45,40,37,38,"options"],[45,47,37,45],[45,49,37,47],[46,4,38,4],[46,8,38,12,"columnKey"],[46,17,38,21],[46,20,38,67,"options"],[46,27,38,74],[46,28,38,12,"columnKey"],[46,37,38,21],[47,6,38,38,"fromBinding"],[47,17,38,49],[47,20,38,67,"options"],[47,27,38,74],[47,28,38,23,"typeHelpers"],[47,39,38,34],[47,40,38,38,"fromBinding"],[47,51,38,49],[48,6,38,53,"embedded"],[48,14,38,61],[48,17,38,67,"options"],[48,24,38,74],[48,25,38,53,"embedded"],[48,33,38,61],[49,4,39,4],[49,5,39,5],[49,6,39,6],[49,8,39,8,"_$$_REQUIRE"],[49,19,39,8],[49,20,39,8,"_dependencyMap"],[49,34,39,8],[49,52,39,17,"assert"],[49,58,39,23],[49,60,39,25,"options"],[49,67,39,32],[49,68,39,33,"optional"],[49,76,39,41],[49,78,39,43],[49,107,39,72],[49,108,39,73],[50,4,40,4],[50,8,40,4,"_ref2"],[50,13,40,4],[50,16,40,32],[50,17,40,33],[50,18,40,34],[50,20,40,36,"_$$_REQUIRE"],[50,31,40,36],[50,32,40,36,"_dependencyMap"],[50,46,40,36],[50,64,40,46,"createDefaultPropertyAccessor"],[50,93,40,75],[50,95,40,77,"options"],[50,102,40,84],[50,103,40,85],[51,6,40,17,"defaultSet"],[51,16,40,27],[51,19,40,27,"_ref2"],[51,24,40,27],[51,25,40,12,"set"],[51,28,40,15],[52,4,41,4],[52,11,41,11],[53,6,42,8,"get"],[53,9,42,11],[53,20,42,8,"get"],[53,23,42,11,"get"],[53,24,42,12,"obj"],[53,27,42,15],[53,29,42,17],[54,8,43,12],[54,15,43,19,"fromBinding"],[54,26,43,30],[54,27,43,31,"obj"],[54,30,43,34],[54,31,43,35,"getLinkedObject"],[54,46,43,50],[54,47,43,51,"columnKey"],[54,56,43,60],[54,57,43,61],[54,58,43,62],[55,6,44,8],[55,7,44,9],[56,6,45,8,"set"],[56,9,45,11],[56,11,45,13,"embedded"],[56,19,45,21],[56,22,45,24,"createEmbeddedSet"],[56,39,45,41],[56,40,45,42,"options"],[56,47,45,49],[56,48,45,50],[56,51,45,53,"defaultSet"],[57,4,46,4],[57,5,46,5],[58,2,47,0],[59,2,48,0,"exports"],[59,9,48,7],[59,10,48,8,"createObjectPropertyAccessor"],[59,38,48,36],[59,41,48,39,"createObjectPropertyAccessor"],[59,69,48,67],[60,0,48,68],[60,3]],"functionMap":{"names":["<global>","createEmbeddedSet","<anonymous>","toBinding$argument_1.createObj","createObjectPropertyAccessor","get"],"mappings":"AAA;ACsB;WCC;2DCG,qDD;KDO;CDC;AIE;QCK;SDE;CJG"}},"type":"js/module"}]}