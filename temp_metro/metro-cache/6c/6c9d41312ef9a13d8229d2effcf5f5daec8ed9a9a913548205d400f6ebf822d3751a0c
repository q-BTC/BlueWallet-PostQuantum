{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}},{"name":"../node/Raw","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":14,"index":58},"end":{"line":2,"column":41,"index":85}}],"key":"DbWkpLTWu8li2zyU9ASc2oOuNf8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var COMMA = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comma;\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n\n  // var( <ident> , <value>? )\n  module.exports = function () {\n    var children = this.createList();\n    this.scanner.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n    this.scanner.skipSC();\n    if (this.scanner.tokenType === COMMA) {\n      children.push(this.Operator());\n      var startIndex = this.scanner.tokenIndex;\n      var value = this.parseCustomProperty ? this.Value(null) : this.Raw(this.scanner.tokenIndex, _$$_REQUIRE(_dependencyMap[1], \"../node/Raw\").mode.exclamationMarkOrSemicolon, false);\n      if (value.type === 'Value' && value.children.isEmpty()) {\n        for (var offset = startIndex - this.scanner.tokenIndex; offset <= 0; offset++) {\n          if (this.scanner.lookupType(offset) === WHITESPACE) {\n            value.children.appendData({\n              type: 'WhiteSpace',\n              loc: null,\n              value: ' '\n            });\n            break;\n          }\n        }\n      }\n      children.push(value);\n    }\n    return children;\n  };\n});","lineCount":33,"map":[[2,2,4,0],[2,6,4,4,"COMMA"],[2,11,4,9],[2,14,4,12,"_$$_REQUIRE"],[2,25,4,12],[2,26,4,12,"_dependencyMap"],[2,40,4,12],[2,64,4,12,"TYPE"],[2,68,4,12],[2,69,4,17,"Comma"],[2,74,4,22],[3,2,5,0],[3,6,5,4,"WHITESPACE"],[3,16,5,14],[3,19,5,17,"_$$_REQUIRE"],[3,30,5,17],[3,31,5,17,"_dependencyMap"],[3,45,5,17],[3,69,5,17,"TYPE"],[3,73,5,17],[3,74,5,22,"WhiteSpace"],[3,84,5,32],[5,2,7,0],[6,2,8,0,"module"],[6,8,8,6],[6,9,8,7,"exports"],[6,16,8,14],[6,19,8,17],[6,31,8,28],[7,4,9,4],[7,8,9,8,"children"],[7,16,9,16],[7,19,9,19],[7,23,9,23],[7,24,9,24,"createList"],[7,34,9,34],[7,35,9,35],[7,36,9,36],[8,4,11,4],[8,8,11,8],[8,9,11,9,"scanner"],[8,16,11,16],[8,17,11,17,"skipSC"],[8,23,11,23],[8,24,11,24],[8,25,11,25],[10,4,13,4],[11,4,14,4,"children"],[11,12,14,12],[11,13,14,13,"push"],[11,17,14,17],[11,18,14,18],[11,22,14,22],[11,23,14,23,"Identifier"],[11,33,14,33],[11,34,14,34],[11,35,14,35],[11,36,14,36],[12,4,16,4],[12,8,16,8],[12,9,16,9,"scanner"],[12,16,16,16],[12,17,16,17,"skipSC"],[12,23,16,23],[12,24,16,24],[12,25,16,25],[13,4,18,4],[13,8,18,8],[13,12,18,12],[13,13,18,13,"scanner"],[13,20,18,20],[13,21,18,21,"tokenType"],[13,30,18,30],[13,35,18,35,"COMMA"],[13,40,18,40],[13,42,18,42],[14,6,19,8,"children"],[14,14,19,16],[14,15,19,17,"push"],[14,19,19,21],[14,20,19,22],[14,24,19,26],[14,25,19,27,"Operator"],[14,33,19,35],[14,34,19,36],[14,35,19,37],[14,36,19,38],[15,6,21,8],[15,10,21,14,"startIndex"],[15,20,21,24],[15,23,21,27],[15,27,21,31],[15,28,21,32,"scanner"],[15,35,21,39],[15,36,21,40,"tokenIndex"],[15,46,21,50],[16,6,22,8],[16,10,22,14,"value"],[16,15,22,19],[16,18,22,22],[16,22,22,26],[16,23,22,27,"parseCustomProperty"],[16,42,22,46],[16,45,23,14],[16,49,23,18],[16,50,23,19,"Value"],[16,55,23,24],[16,56,23,25],[16,60,23,29],[16,61,23,30],[16,64,24,14],[16,68,24,18],[16,69,24,19,"Raw"],[16,72,24,22],[16,73,24,23],[16,77,24,27],[16,78,24,28,"scanner"],[16,85,24,35],[16,86,24,36,"tokenIndex"],[16,96,24,46],[16,98,24,48,"_$$_REQUIRE"],[16,109,24,48],[16,110,24,48,"_dependencyMap"],[16,124,24,48],[16,144,24,48,"mode"],[16,148,24,48],[16,149,24,56,"exclamationMarkOrSemicolon"],[16,175,24,82],[16,177,24,84],[16,182,24,89],[16,183,24,90],[17,6,26,8],[17,10,26,12,"value"],[17,15,26,17],[17,16,26,18,"type"],[17,20,26,22],[17,25,26,27],[17,32,26,34],[17,36,26,38,"value"],[17,41,26,43],[17,42,26,44,"children"],[17,50,26,52],[17,51,26,53,"isEmpty"],[17,58,26,60],[17,59,26,61],[17,60,26,62],[17,62,26,64],[18,8,27,12],[18,13,27,17],[18,17,27,21,"offset"],[18,23,27,27],[18,26,27,30,"startIndex"],[18,36,27,40],[18,39,27,43],[18,43,27,47],[18,44,27,48,"scanner"],[18,51,27,55],[18,52,27,56,"tokenIndex"],[18,62,27,66],[18,64,27,68,"offset"],[18,70,27,74],[18,74,27,78],[18,75,27,79],[18,77,27,81,"offset"],[18,83,27,87],[18,85,27,89],[18,87,27,91],[19,10,28,16],[19,14,28,20],[19,18,28,24],[19,19,28,25,"scanner"],[19,26,28,32],[19,27,28,33,"lookupType"],[19,37,28,43],[19,38,28,44,"offset"],[19,44,28,50],[19,45,28,51],[19,50,28,56,"WHITESPACE"],[19,60,28,66],[19,62,28,68],[20,12,29,20,"value"],[20,17,29,25],[20,18,29,26,"children"],[20,26,29,34],[20,27,29,35,"appendData"],[20,37,29,45],[20,38,29,46],[21,14,30,24,"type"],[21,18,30,28],[21,20,30,30],[21,32,30,42],[22,14,31,24,"loc"],[22,17,31,27],[22,19,31,29],[22,23,31,33],[23,14,32,24,"value"],[23,19,32,29],[23,21,32,31],[24,12,33,20],[24,13,33,21],[24,14,33,22],[25,12,34,20],[26,10,35,16],[27,8,36,12],[28,6,37,8],[29,6,39,8,"children"],[29,14,39,16],[29,15,39,17,"push"],[29,19,39,21],[29,20,39,22,"value"],[29,25,39,27],[29,26,39,28],[30,4,40,4],[31,4,42,4],[31,11,42,11,"children"],[31,19,42,19],[32,2,43,0],[32,3,43,1],[33,0,43,2],[33,3]],"functionMap":{"names":["<global>","module.exports"],"mappings":"AAA;iBCO;CDmC"}},"type":"js/module"}]}