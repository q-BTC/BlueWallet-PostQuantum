{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var EOF = 0;\n\n  // https://drafts.csswg.org/css-syntax-3/\n  // ยง 4.2. Definitions\n\n  // digit\n  // A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\n  function isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n  }\n\n  // hex digit\n  // A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n  // or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\n  function isHexDigit(code) {\n    return isDigit(code) ||\n    // 0 .. 9\n    code >= 0x0041 && code <= 0x0046 ||\n    // A .. F\n    code >= 0x0061 && code <= 0x0066 // a .. f\n    ;\n  }\n\n  // uppercase letter\n  // A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\n  function isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n  }\n\n  // lowercase letter\n  // A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\n  function isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n  }\n\n  // letter\n  // An uppercase letter or a lowercase letter.\n  function isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n  }\n\n  // non-ASCII code point\n  // A code point with a value equal to or greater than U+0080 <control>.\n  function isNonAscii(code) {\n    return code >= 0x0080;\n  }\n\n  // name-start code point\n  // A letter, a non-ASCII code point, or U+005F LOW LINE (_).\n  function isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n  }\n\n  // name code point\n  // A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\n  function isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n  }\n\n  // non-printable code point\n  // A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n  // or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\n  function isNonPrintable(code) {\n    return code >= 0x0000 && code <= 0x0008 || code === 0x000B || code >= 0x000E && code <= 0x001F || code === 0x007F;\n  }\n\n  // newline\n  // U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n  // as they are converted to U+000A LINE FEED during preprocessing.\n  // TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\n  function isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n  }\n\n  // whitespace\n  // A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\n  function isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n  }\n\n  // ยง 4.3.8. Check if two code points are a valid escape\n  function isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n      return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n      return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n  }\n\n  // ยง 4.3.9. Check if three code points would start an identifier\n  function isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n      // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n      // or the second and third code points are a valid escape, return true. Otherwise, return false.\n      return isNameStart(second) || second === 0x002D || isValidEscape(second, third);\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n      // Return true.\n      return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n      // If the first and second code points are a valid escape, return true. Otherwise, return false.\n      return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n  }\n\n  // ยง 4.3.10. Check if three code points would start a number\n  function isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n      // If the second code point is a digit, return true.\n      if (isDigit(second)) {\n        return 2;\n      }\n\n      // Otherwise, if the second code point is a U+002E FULL STOP (.)\n      // and the third code point is a digit, return true.\n      // Otherwise, return false.\n      return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n      // If the second code point is a digit, return true. Otherwise, return false.\n      return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n      // Return true.\n      return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n  }\n\n  //\n  // Misc\n  //\n\n  // detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\n  function isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n      return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n      return 1;\n    }\n    return 0;\n  }\n\n  // Fast code category\n  //\n  // https://drafts.csswg.org/css-syntax/#tokenizer-definitions\n  // > non-ASCII code point\n  // >   A code point with a value equal to or greater than U+0080 <control>\n  // > name-start code point\n  // >   A letter, a non-ASCII code point, or U+005F LOW LINE (_).\n  // > name code point\n  // >   A name-start code point, a digit, or U+002D HYPHEN-MINUS (-)\n  // That means only ASCII code points has a special meaning and we define a maps for 0..127 codes only\n  var CATEGORY = new Array(0x80);\n  charCodeCategory.Eof = 0x80;\n  charCodeCategory.WhiteSpace = 0x82;\n  charCodeCategory.Digit = 0x83;\n  charCodeCategory.NameStart = 0x84;\n  charCodeCategory.NonPrintable = 0x85;\n  for (var i = 0; i < CATEGORY.length; i++) {\n    switch (true) {\n      case isWhiteSpace(i):\n        CATEGORY[i] = charCodeCategory.WhiteSpace;\n        break;\n      case isDigit(i):\n        CATEGORY[i] = charCodeCategory.Digit;\n        break;\n      case isNameStart(i):\n        CATEGORY[i] = charCodeCategory.NameStart;\n        break;\n      case isNonPrintable(i):\n        CATEGORY[i] = charCodeCategory.NonPrintable;\n        break;\n      default:\n        CATEGORY[i] = i || charCodeCategory.Eof;\n    }\n  }\n  function charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : charCodeCategory.NameStart;\n  }\n  ;\n  module.exports = {\n    isDigit: isDigit,\n    isHexDigit: isHexDigit,\n    isUppercaseLetter: isUppercaseLetter,\n    isLowercaseLetter: isLowercaseLetter,\n    isLetter: isLetter,\n    isNonAscii: isNonAscii,\n    isNameStart: isNameStart,\n    isName: isName,\n    isNonPrintable: isNonPrintable,\n    isNewline: isNewline,\n    isWhiteSpace: isWhiteSpace,\n    isValidEscape: isValidEscape,\n    isIdentifierStart: isIdentifierStart,\n    isNumberStart: isNumberStart,\n    isBOM: isBOM,\n    charCodeCategory: charCodeCategory\n  };\n});","lineCount":235,"map":[[2,2,1,0],[2,6,1,4,"EOF"],[2,9,1,7],[2,12,1,10],[2,13,1,11],[4,2,3,0],[5,2,4,0],[7,2,6,0],[8,2,7,0],[9,2,8,0],[9,11,8,9,"isDigit"],[9,18,8,16,"isDigit"],[9,19,8,17,"code"],[9,23,8,21],[9,25,8,23],[10,4,9,4],[10,11,9,11,"code"],[10,15,9,15],[10,19,9,19],[10,25,9,25],[10,29,9,29,"code"],[10,33,9,33],[10,37,9,37],[10,43,9,43],[11,2,10,0],[13,2,12,0],[14,2,13,0],[15,2,14,0],[16,2,15,0],[16,11,15,9,"isHexDigit"],[16,21,15,19,"isHexDigit"],[16,22,15,20,"code"],[16,26,15,24],[16,28,15,26],[17,4,16,4],[17,11,17,8,"isDigit"],[17,18,17,15],[17,19,17,16,"code"],[17,23,17,20],[17,24,17,21],[18,4,17,25],[19,4,18,9,"code"],[19,8,18,13],[19,12,18,17],[19,18,18,23],[19,22,18,27,"code"],[19,26,18,31],[19,30,18,35],[19,36,18,42],[20,4,18,46],[21,4,19,9,"code"],[21,8,19,13],[21,12,19,17],[21,18,19,23],[21,22,19,27,"code"],[21,26,19,31],[21,30,19,35],[21,36,19,42],[21,37,19,46],[22,4,19,46],[23,2,21,0],[25,2,23,0],[26,2,24,0],[27,2,25,0],[27,11,25,9,"isUppercaseLetter"],[27,28,25,26,"isUppercaseLetter"],[27,29,25,27,"code"],[27,33,25,31],[27,35,25,33],[28,4,26,4],[28,11,26,11,"code"],[28,15,26,15],[28,19,26,19],[28,25,26,25],[28,29,26,29,"code"],[28,33,26,33],[28,37,26,37],[28,43,26,43],[29,2,27,0],[31,2,29,0],[32,2,30,0],[33,2,31,0],[33,11,31,9,"isLowercaseLetter"],[33,28,31,26,"isLowercaseLetter"],[33,29,31,27,"code"],[33,33,31,31],[33,35,31,33],[34,4,32,4],[34,11,32,11,"code"],[34,15,32,15],[34,19,32,19],[34,25,32,25],[34,29,32,29,"code"],[34,33,32,33],[34,37,32,37],[34,43,32,43],[35,2,33,0],[37,2,35,0],[38,2,36,0],[39,2,37,0],[39,11,37,9,"isLetter"],[39,19,37,17,"isLetter"],[39,20,37,18,"code"],[39,24,37,22],[39,26,37,24],[40,4,38,4],[40,11,38,11,"isUppercaseLetter"],[40,28,38,28],[40,29,38,29,"code"],[40,33,38,33],[40,34,38,34],[40,38,38,38,"isLowercaseLetter"],[40,55,38,55],[40,56,38,56,"code"],[40,60,38,60],[40,61,38,61],[41,2,39,0],[43,2,41,0],[44,2,42,0],[45,2,43,0],[45,11,43,9,"isNonAscii"],[45,21,43,19,"isNonAscii"],[45,22,43,20,"code"],[45,26,43,24],[45,28,43,26],[46,4,44,4],[46,11,44,11,"code"],[46,15,44,15],[46,19,44,19],[46,25,44,25],[47,2,45,0],[49,2,47,0],[50,2,48,0],[51,2,49,0],[51,11,49,9,"isNameStart"],[51,22,49,20,"isNameStart"],[51,23,49,21,"code"],[51,27,49,25],[51,29,49,27],[52,4,50,4],[52,11,50,11,"isLetter"],[52,19,50,19],[52,20,50,20,"code"],[52,24,50,24],[52,25,50,25],[52,29,50,29,"isNonAscii"],[52,39,50,39],[52,40,50,40,"code"],[52,44,50,44],[52,45,50,45],[52,49,50,49,"code"],[52,53,50,53],[52,58,50,58],[52,64,50,64],[53,2,51,0],[55,2,53,0],[56,2,54,0],[57,2,55,0],[57,11,55,9,"isName"],[57,17,55,15,"isName"],[57,18,55,16,"code"],[57,22,55,20],[57,24,55,22],[58,4,56,4],[58,11,56,11,"isNameStart"],[58,22,56,22],[58,23,56,23,"code"],[58,27,56,27],[58,28,56,28],[58,32,56,32,"isDigit"],[58,39,56,39],[58,40,56,40,"code"],[58,44,56,44],[58,45,56,45],[58,49,56,49,"code"],[58,53,56,53],[58,58,56,58],[58,64,56,64],[59,2,57,0],[61,2,59,0],[62,2,60,0],[63,2,61,0],[64,2,62,0],[64,11,62,9,"isNonPrintable"],[64,25,62,23,"isNonPrintable"],[64,26,62,24,"code"],[64,30,62,28],[64,32,62,30],[65,4,63,4],[65,11,64,9,"code"],[65,15,64,13],[65,19,64,17],[65,25,64,23],[65,29,64,27,"code"],[65,33,64,31],[65,37,64,35],[65,43,64,41],[65,47,65,9,"code"],[65,51,65,13],[65,56,65,18],[65,62,65,25],[65,66,66,9,"code"],[65,70,66,13],[65,74,66,17],[65,80,66,23],[65,84,66,27,"code"],[65,88,66,31],[65,92,66,35],[65,98,66,42],[65,102,67,9,"code"],[65,106,67,13],[65,111,67,18],[65,117,67,25],[66,2,69,0],[68,2,71,0],[69,2,72,0],[70,2,73,0],[71,2,74,0],[72,2,75,0],[72,11,75,9,"isNewline"],[72,20,75,18,"isNewline"],[72,21,75,19,"code"],[72,25,75,23],[72,27,75,25],[73,4,76,4],[73,11,76,11,"code"],[73,15,76,15],[73,20,76,20],[73,26,76,26],[73,30,76,30,"code"],[73,34,76,34],[73,39,76,39],[73,45,76,45],[73,49,76,49,"code"],[73,53,76,53],[73,58,76,58],[73,64,76,64],[74,2,77,0],[76,2,79,0],[77,2,80,0],[78,2,81,0],[78,11,81,9,"isWhiteSpace"],[78,23,81,21,"isWhiteSpace"],[78,24,81,22,"code"],[78,28,81,26],[78,30,81,28],[79,4,82,4],[79,11,82,11,"isNewline"],[79,20,82,20],[79,21,82,21,"code"],[79,25,82,25],[79,26,82,26],[79,30,82,30,"code"],[79,34,82,34],[79,39,82,39],[79,45,82,45],[79,49,82,49,"code"],[79,53,82,53],[79,58,82,58],[79,64,82,64],[80,2,83,0],[82,2,85,0],[83,2,86,0],[83,11,86,9,"isValidEscape"],[83,24,86,22,"isValidEscape"],[83,25,86,23,"first"],[83,30,86,28],[83,32,86,30,"second"],[83,38,86,36],[83,40,86,38],[84,4,87,4],[85,4,88,4],[85,8,88,8,"first"],[85,13,88,13],[85,18,88,18],[85,24,88,24],[85,26,88,26],[86,6,89,8],[86,13,89,15],[86,18,89,20],[87,4,90,4],[89,4,92,4],[90,4,93,4],[90,8,93,8,"isNewline"],[90,17,93,17],[90,18,93,18,"second"],[90,24,93,24],[90,25,93,25],[90,29,93,29,"second"],[90,35,93,35],[90,40,93,40,"EOF"],[90,43,93,43],[90,45,93,45],[91,6,94,8],[91,13,94,15],[91,18,94,20],[92,4,95,4],[94,4,97,4],[95,4,98,4],[95,11,98,11],[95,15,98,15],[96,2,99,0],[98,2,101,0],[99,2,102,0],[99,11,102,9,"isIdentifierStart"],[99,28,102,26,"isIdentifierStart"],[99,29,102,27,"first"],[99,34,102,32],[99,36,102,34,"second"],[99,42,102,40],[99,44,102,42,"third"],[99,49,102,47],[99,51,102,49],[100,4,103,4],[102,4,105,4],[103,4,106,4],[103,8,106,8,"first"],[103,13,106,13],[103,18,106,18],[103,24,106,24],[103,26,106,26],[104,6,107,8],[105,6,108,8],[106,6,109,8],[106,13,110,12,"isNameStart"],[106,24,110,23],[106,25,110,24,"second"],[106,31,110,30],[106,32,110,31],[106,36,111,12,"second"],[106,42,111,18],[106,47,111,23],[106,53,111,29],[106,57,112,12,"isValidEscape"],[106,70,112,25],[106,71,112,26,"second"],[106,77,112,32],[106,79,112,34,"third"],[106,84,112,39],[106,85,112,40],[107,4,114,4],[109,4,116,4],[110,4,117,4],[110,8,117,8,"isNameStart"],[110,19,117,19],[110,20,117,20,"first"],[110,25,117,25],[110,26,117,26],[110,28,117,28],[111,6,118,8],[112,6,119,8],[112,13,119,15],[112,17,119,19],[113,4,120,4],[115,4,122,4],[116,4,123,4],[116,8,123,8,"first"],[116,13,123,13],[116,18,123,18],[116,24,123,24],[116,26,123,26],[117,6,124,8],[118,6,125,8],[118,13,125,15,"isValidEscape"],[118,26,125,28],[118,27,125,29,"first"],[118,32,125,34],[118,34,125,36,"second"],[118,40,125,42],[118,41,125,43],[119,4,126,4],[121,4,128,4],[122,4,129,4],[123,4,130,4],[123,11,130,11],[123,16,130,16],[124,2,131,0],[126,2,133,0],[127,2,134,0],[127,11,134,9,"isNumberStart"],[127,24,134,22,"isNumberStart"],[127,25,134,23,"first"],[127,30,134,28],[127,32,134,30,"second"],[127,38,134,36],[127,40,134,38,"third"],[127,45,134,43],[127,47,134,45],[128,4,135,4],[130,4,137,4],[131,4,138,4],[132,4,139,4],[132,8,139,8,"first"],[132,13,139,13],[132,18,139,18],[132,24,139,24],[132,28,139,28,"first"],[132,33,139,33],[132,38,139,38],[132,44,139,44],[132,46,139,46],[133,6,140,8],[134,6,141,8],[134,10,141,12,"isDigit"],[134,17,141,19],[134,18,141,20,"second"],[134,24,141,26],[134,25,141,27],[134,27,141,29],[135,8,142,12],[135,15,142,19],[135,16,142,20],[136,6,143,8],[138,6,145,8],[139,6,146,8],[140,6,147,8],[141,6,148,8],[141,13,148,15,"second"],[141,19,148,21],[141,24,148,26],[141,30,148,32],[141,34,148,36,"isDigit"],[141,41,148,43],[141,42,148,44,"third"],[141,47,148,49],[141,48,148,50],[141,51,148,53],[141,52,148,54],[141,55,148,57],[141,56,148,58],[142,4,149,4],[144,4,151,4],[145,4,152,4],[145,8,152,8,"first"],[145,13,152,13],[145,18,152,18],[145,24,152,24],[145,26,152,26],[146,6,153,8],[147,6,154,8],[147,13,154,15,"isDigit"],[147,20,154,22],[147,21,154,23,"second"],[147,27,154,29],[147,28,154,30],[147,31,154,33],[147,32,154,34],[147,35,154,37],[147,36,154,38],[148,4,155,4],[150,4,157,4],[151,4,158,4],[151,8,158,8,"isDigit"],[151,15,158,15],[151,16,158,16,"first"],[151,21,158,21],[151,22,158,22],[151,24,158,24],[152,6,159,8],[153,6,160,8],[153,13,160,15],[153,14,160,16],[154,4,161,4],[156,4,163,4],[157,4,164,4],[158,4,165,4],[158,11,165,11],[158,12,165,12],[159,2,166,0],[161,2,168,0],[162,2,169,0],[163,2,170,0],[165,2,172,0],[166,2,173,0],[166,11,173,9,"isBOM"],[166,16,173,14,"isBOM"],[166,17,173,15,"code"],[166,21,173,19],[166,23,173,21],[167,4,174,4],[168,4,175,4],[168,8,175,8,"code"],[168,12,175,12],[168,17,175,17],[168,23,175,23],[168,25,175,25],[169,6,176,8],[169,13,176,15],[169,14,176,16],[170,4,177,4],[172,4,179,4],[173,4,180,4],[173,8,180,8,"code"],[173,12,180,12],[173,17,180,17],[173,23,180,23],[173,25,180,25],[174,6,181,8],[174,13,181,15],[174,14,181,16],[175,4,182,4],[176,4,184,4],[176,11,184,11],[176,12,184,12],[177,2,185,0],[179,2,187,0],[180,2,188,0],[181,2,189,0],[182,2,190,0],[183,2,191,0],[184,2,192,0],[185,2,193,0],[186,2,194,0],[187,2,195,0],[188,2,196,0],[189,2,197,0],[189,6,197,4,"CATEGORY"],[189,14,197,12],[189,17,197,15],[189,21,197,19,"Array"],[189,26,197,24],[189,27,197,25],[189,31,197,29],[189,32,197,30],[190,2,198,0,"charCodeCategory"],[190,18,198,16],[190,19,198,17,"Eof"],[190,22,198,20],[190,25,198,23],[190,29,198,27],[191,2,199,0,"charCodeCategory"],[191,18,199,16],[191,19,199,17,"WhiteSpace"],[191,29,199,27],[191,32,199,30],[191,36,199,34],[192,2,200,0,"charCodeCategory"],[192,18,200,16],[192,19,200,17,"Digit"],[192,24,200,22],[192,27,200,25],[192,31,200,29],[193,2,201,0,"charCodeCategory"],[193,18,201,16],[193,19,201,17,"NameStart"],[193,28,201,26],[193,31,201,29],[193,35,201,33],[194,2,202,0,"charCodeCategory"],[194,18,202,16],[194,19,202,17,"NonPrintable"],[194,31,202,29],[194,34,202,32],[194,38,202,36],[195,2,204,0],[195,7,204,5],[195,11,204,9,"i"],[195,12,204,10],[195,15,204,13],[195,16,204,14],[195,18,204,16,"i"],[195,19,204,17],[195,22,204,20,"CATEGORY"],[195,30,204,28],[195,31,204,29,"length"],[195,37,204,35],[195,39,204,37,"i"],[195,40,204,38],[195,42,204,40],[195,44,204,42],[196,4,205,4],[196,12,205,12],[196,16,205,16],[197,6,206,8],[197,11,206,13,"isWhiteSpace"],[197,23,206,25],[197,24,206,26,"i"],[197,25,206,27],[197,26,206,28],[198,8,207,12,"CATEGORY"],[198,16,207,20],[198,17,207,21,"i"],[198,18,207,22],[198,19,207,23],[198,22,207,26,"charCodeCategory"],[198,38,207,42],[198,39,207,43,"WhiteSpace"],[198,49,207,53],[199,8,208,12],[200,6,210,8],[200,11,210,13,"isDigit"],[200,18,210,20],[200,19,210,21,"i"],[200,20,210,22],[200,21,210,23],[201,8,211,12,"CATEGORY"],[201,16,211,20],[201,17,211,21,"i"],[201,18,211,22],[201,19,211,23],[201,22,211,26,"charCodeCategory"],[201,38,211,42],[201,39,211,43,"Digit"],[201,44,211,48],[202,8,212,12],[203,6,214,8],[203,11,214,13,"isNameStart"],[203,22,214,24],[203,23,214,25,"i"],[203,24,214,26],[203,25,214,27],[204,8,215,12,"CATEGORY"],[204,16,215,20],[204,17,215,21,"i"],[204,18,215,22],[204,19,215,23],[204,22,215,26,"charCodeCategory"],[204,38,215,42],[204,39,215,43,"NameStart"],[204,48,215,52],[205,8,216,12],[206,6,218,8],[206,11,218,13,"isNonPrintable"],[206,25,218,27],[206,26,218,28,"i"],[206,27,218,29],[206,28,218,30],[207,8,219,12,"CATEGORY"],[207,16,219,20],[207,17,219,21,"i"],[207,18,219,22],[207,19,219,23],[207,22,219,26,"charCodeCategory"],[207,38,219,42],[207,39,219,43,"NonPrintable"],[207,51,219,55],[208,8,220,12],[209,6,222,8],[210,8,223,12,"CATEGORY"],[210,16,223,20],[210,17,223,21,"i"],[210,18,223,22],[210,19,223,23],[210,22,223,26,"i"],[210,23,223,27],[210,27,223,31,"charCodeCategory"],[210,43,223,47],[210,44,223,48,"Eof"],[210,47,223,51],[211,4,224,4],[212,2,225,0],[213,2,227,0],[213,11,227,9,"charCodeCategory"],[213,27,227,25,"charCodeCategory"],[213,28,227,26,"code"],[213,32,227,30],[213,34,227,32],[214,4,228,4],[214,11,228,11,"code"],[214,15,228,15],[214,18,228,18],[214,22,228,22],[214,25,228,25,"CATEGORY"],[214,33,228,33],[214,34,228,34,"code"],[214,38,228,38],[214,39,228,39],[214,42,228,42,"charCodeCategory"],[214,58,228,58],[214,59,228,59,"NameStart"],[214,68,228,68],[215,2,229,0],[216,2,229,1],[217,2,231,0,"module"],[217,8,231,6],[217,9,231,7,"exports"],[217,16,231,14],[217,19,231,17],[218,4,232,4,"isDigit"],[218,11,232,11],[218,13,232,13,"isDigit"],[218,20,232,20],[219,4,233,4,"isHexDigit"],[219,14,233,14],[219,16,233,16,"isHexDigit"],[219,26,233,26],[220,4,234,4,"isUppercaseLetter"],[220,21,234,21],[220,23,234,23,"isUppercaseLetter"],[220,40,234,40],[221,4,235,4,"isLowercaseLetter"],[221,21,235,21],[221,23,235,23,"isLowercaseLetter"],[221,40,235,40],[222,4,236,4,"isLetter"],[222,12,236,12],[222,14,236,14,"isLetter"],[222,22,236,22],[223,4,237,4,"isNonAscii"],[223,14,237,14],[223,16,237,16,"isNonAscii"],[223,26,237,26],[224,4,238,4,"isNameStart"],[224,15,238,15],[224,17,238,17,"isNameStart"],[224,28,238,28],[225,4,239,4,"isName"],[225,10,239,10],[225,12,239,12,"isName"],[225,18,239,18],[226,4,240,4,"isNonPrintable"],[226,18,240,18],[226,20,240,20,"isNonPrintable"],[226,34,240,34],[227,4,241,4,"isNewline"],[227,13,241,13],[227,15,241,15,"isNewline"],[227,24,241,24],[228,4,242,4,"isWhiteSpace"],[228,16,242,16],[228,18,242,18,"isWhiteSpace"],[228,30,242,30],[229,4,243,4,"isValidEscape"],[229,17,243,17],[229,19,243,19,"isValidEscape"],[229,32,243,32],[230,4,244,4,"isIdentifierStart"],[230,21,244,21],[230,23,244,23,"isIdentifierStart"],[230,40,244,40],[231,4,245,4,"isNumberStart"],[231,17,245,17],[231,19,245,19,"isNumberStart"],[231,32,245,32],[232,4,247,4,"isBOM"],[232,9,247,9],[232,11,247,11,"isBOM"],[232,16,247,16],[233,4,248,4,"charCodeCategory"],[233,20,248,20],[233,22,248,22,"charCodeCategory"],[234,2,249,0],[234,3,249,1],[235,0,249,2],[235,3]],"functionMap":{"names":["<global>","isDigit","isHexDigit","isUppercaseLetter","isLowercaseLetter","isLetter","isNonAscii","isNameStart","isName","isNonPrintable","isNewline","isWhiteSpace","isValidEscape","isIdentifierStart","isNumberStart","isBOM","charCodeCategory"],"mappings":"AAA;ACO;CDE;AEK;CFM;AGI;CHE;AII;CJE;AKI;CLE;AMI;CNE;AOI;CPE;AQI;CRE;ASK;CTO;AUM;CVE;AWI;CXE;AYG;CZa;AaG;Cb6B;AcG;CdgC;AeO;CfY;AgB0C;ChBE"}},"type":"js/module"}]}