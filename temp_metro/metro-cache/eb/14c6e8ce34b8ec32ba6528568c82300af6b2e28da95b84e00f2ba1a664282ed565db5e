{"dependencies":[{"name":"../binding","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}},{"start":{"line":21,"column":18,"index":904},"end":{"line":21,"column":39,"index":925}}],"key":"PNnuyjjxgoVhr2iud9oB5p5GzrA="}},{"name":"../indirect","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":19,"index":985},"end":{"line":23,"column":41,"index":1007}},{"start":{"line":23,"column":19,"index":985},"end":{"line":23,"column":41,"index":1007}},{"start":{"line":23,"column":19,"index":985},"end":{"line":23,"column":41,"index":1007}},{"start":{"line":23,"column":19,"index":985},"end":{"line":23,"column":41,"index":1007}},{"start":{"line":23,"column":19,"index":985},"end":{"line":23,"column":41,"index":1007}}],"key":"YcIxxttZukaXUzCreGQftriG5Ys="}},{"name":"../symbols","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":18,"index":1288},"end":{"line":29,"column":39,"index":1309}},{"start":{"line":29,"column":18,"index":1288},"end":{"line":29,"column":39,"index":1309}}],"key":"3CZ+hECOvK0ZPlUSD2ccOzUD5Bo="}},{"name":"../assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":17,"index":944},"end":{"line":22,"column":37,"index":964}}],"key":"EqNBW+769mc/j/kMnDe9BBrECKc="}},{"name":"../Counter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":18,"index":1198},"end":{"line":27,"column":39,"index":1219}}],"key":"xFTUa+m//NeFRZ/uahlDReXVQck="}},{"name":"../GeoSpatial","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":21,"index":1154},"end":{"line":26,"column":45,"index":1178}},{"start":{"line":26,"column":21,"index":1154},"end":{"line":26,"column":45,"index":1178}},{"start":{"line":26,"column":21,"index":1154},"end":{"line":26,"column":45,"index":1178}},{"start":{"line":26,"column":21,"index":1154},"end":{"line":26,"column":45,"index":1178}},{"start":{"line":26,"column":21,"index":1154},"end":{"line":26,"column":45,"index":1178}},{"start":{"line":26,"column":21,"index":1154},"end":{"line":26,"column":45,"index":1178}}],"key":"lvYBs7E7piGV0cGyiwBO5oCYDcY="}},{"name":"./array-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":30,"column":23,"index":1334},"end":{"line":30,"column":48,"index":1359}}],"key":"rcZAfWN3ulRZmu45nFOBeas36Ek="}},{"name":"../TypeHelpers","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":28,"column":22,"index":1243},"end":{"line":28,"column":47,"index":1268}},{"start":{"line":28,"column":22,"index":1243},"end":{"line":28,"column":47,"index":1268}}],"key":"FUIiAPXXq4uBh40x8ll/V/L5jCM="}},{"name":"../collection-accessors/List","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":15,"index":1092},"end":{"line":25,"column":54,"index":1131}}],"key":"ABImGFaI3op3Xkzi/coDKRlVE1U="}},{"name":"../collection-accessors/Dictionary","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":21,"index":1030},"end":{"line":24,"column":66,"index":1075}}],"key":"olUrkMcfqNmUY22OZaJApT0rwyI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2024 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createMixedTypeHelpers = exports.mixedToBinding = void 0;\n  // TODO: Consider testing for expected object instance types and throw something similar to the legacy SDK:\n  // \"Only Realm instances are supported.\" (which should probably have been \"RealmObject\")\n  // instead of relying on the binding to throw.\n  /**\n   * Convert an SDK value to a Binding value representation.\n   * @param realm The Realm used.\n   * @param value The value to convert.\n   * @param options Options needed.\n   * @param options.isQueryArg Whether the value to convert is a query argument used\n   *  for `OrderedCollection.filtered()`. If so, this will be validated differently.\n   * @returns The `MixedArg` binding representation.\n   * @internal\n   */\n  function mixedToBinding(realm, value) {\n    var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        isQueryArg: false\n      },\n      isQueryArg = _ref.isQueryArg;\n    var displayedType = isQueryArg ? \"a query argument\" : \"a Mixed value\";\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\" || value === null) {\n      // Fast track pass through for the most commonly used types\n      return value;\n    } else if (value === undefined) {\n      return null;\n    } else if (value instanceof Date) {\n      return _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Timestamp.fromDate(value);\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[1], \"../indirect\").indirect.Object) {\n      if (value.objectSchema().embedded) {\n        throw new Error(`Using an embedded object (${value.constructor.name}) as ${displayedType} is not supported.`);\n      }\n      var otherRealm = value[_$$_REQUIRE(_dependencyMap[2], \"../symbols\").OBJECT_REALM].internal;\n      _$$_REQUIRE(_dependencyMap[3], \"../assert\").assert.isSameRealm(realm, otherRealm, \"Realm object is from another Realm\");\n      return value[_$$_REQUIRE(_dependencyMap[2], \"../symbols\").OBJECT_INTERNAL];\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[1], \"../indirect\").indirect.Set || value instanceof Set) {\n      throw new Error(`Using a ${value.constructor.name} as ${displayedType} is not supported.`);\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[4], \"../Counter\").Counter) {\n      var errMessage = `Using a Counter as ${displayedType} is not supported.`;\n      errMessage += isQueryArg ? \" Use 'Counter.value'.\" : \"\";\n      throw new Error(errMessage);\n    } else {\n      if (isQueryArg) {\n        if (value instanceof _$$_REQUIRE(_dependencyMap[1], \"../indirect\").indirect.Collection || Array.isArray(value)) {\n          throw new Error(`Using a ${value.constructor.name} as a query argument is not supported.`);\n        }\n        // Geospatial types can currently only be used when querying and\n        // are not yet supported as standalone data types in the schema.\n        if (typeof value === \"object\") {\n          if ((0, _$$_REQUIRE(_dependencyMap[5], \"../GeoSpatial\").isGeoCircle)(value)) {\n            return (0, _$$_REQUIRE(_dependencyMap[5], \"../GeoSpatial\").circleToBindingGeospatial)(value);\n          } else if ((0, _$$_REQUIRE(_dependencyMap[5], \"../GeoSpatial\").isGeoBox)(value)) {\n            return (0, _$$_REQUIRE(_dependencyMap[5], \"../GeoSpatial\").boxToBindingGeospatial)(value);\n          } else if ((0, _$$_REQUIRE(_dependencyMap[5], \"../GeoSpatial\").isGeoPolygon)(value)) {\n            return (0, _$$_REQUIRE(_dependencyMap[5], \"../GeoSpatial\").polygonToBindingGeospatial)(value);\n          }\n        }\n      }\n      // Convert typed arrays to an `ArrayBuffer`\n      for (var TypedArray of _$$_REQUIRE(_dependencyMap[6], \"./array-buffer\").TYPED_ARRAY_CONSTRUCTORS) {\n        if (value instanceof TypedArray) {\n          return value.buffer.slice(value.byteOffset, value.byteOffset + value.byteLength);\n        }\n      }\n      // Rely on the binding for any other value\n      return value;\n    }\n  }\n  exports.mixedToBinding = mixedToBinding;\n  /** @internal */\n  function mixedFromBinding(options, value) {\n    var realm = options.realm,\n      getClassHelpers = options.getClassHelpers;\n    if (_$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Int64.isInt(value)) {\n      return _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Int64.intToNum(value);\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Timestamp) {\n      return value.toDate();\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Float) {\n      return value.value;\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.ObjLink) {\n      var table = _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Helpers.getTable(realm.internal, value.tableKey);\n      var linkedObj = table.getObject(value.objKey);\n      var _getClassHelpers = getClassHelpers(value.tableKey),\n        wrapObject = _getClassHelpers.wrapObject;\n      return wrapObject(linkedObj);\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.List) {\n      var mixedType = 9 /* binding.PropertyType.Mixed */;\n      var typeHelpers = (0, _$$_REQUIRE(_dependencyMap[7], \"../TypeHelpers\").getTypeHelpers)(mixedType, options);\n      return new (_$$_REQUIRE(_dependencyMap[1], \"../indirect\").indirect.List)(realm, value, (0, _$$_REQUIRE(_dependencyMap[8], \"../collection-accessors/List\").createListAccessor)({\n        realm: realm,\n        typeHelpers: typeHelpers,\n        itemType: mixedType\n      }), typeHelpers);\n    } else if (value instanceof _$$_REQUIRE(_dependencyMap[0], \"../binding\").binding.Dictionary) {\n      var _mixedType = 9 /* binding.PropertyType.Mixed */;\n      var _typeHelpers = (0, _$$_REQUIRE(_dependencyMap[7], \"../TypeHelpers\").getTypeHelpers)(_mixedType, options);\n      return new (_$$_REQUIRE(_dependencyMap[1], \"../indirect\").indirect.Dictionary)(realm, value, (0, _$$_REQUIRE(_dependencyMap[9], \"../collection-accessors/Dictionary\").createDictionaryAccessor)({\n        realm: realm,\n        typeHelpers: _typeHelpers,\n        itemType: _mixedType\n      }), _typeHelpers);\n    } else {\n      return value;\n    }\n  }\n  /** @internal */\n  function createMixedTypeHelpers(options) {\n    return {\n      toBinding: mixedToBinding.bind(null, options.realm.internal),\n      fromBinding: mixedFromBinding.bind(null, options)\n    };\n  }\n  exports.createMixedTypeHelpers = createMixedTypeHelpers;\n});","lineCount":136,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,19,0,"Object"],[21,8,19,6],[21,9,19,7,"defineProperty"],[21,23,19,21],[21,24,19,22,"exports"],[21,31,19,29],[21,33,19,31],[21,45,19,43],[21,47,19,45],[22,4,19,47,"value"],[22,9,19,52],[22,11,19,54],[23,2,19,59],[23,3,19,60],[23,4,19,61],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"createMixedTypeHelpers"],[24,32,20,30],[24,35,20,33,"exports"],[24,42,20,40],[24,43,20,41,"mixedToBinding"],[24,57,20,55],[24,60,20,58],[24,65,20,63],[24,66,20,64],[25,2,31,0],[26,2,32,0],[27,2,33,0],[28,2,34,0],[29,0,35,0],[30,0,36,0],[31,0,37,0],[32,0,38,0],[33,0,39,0],[34,0,40,0],[35,0,41,0],[36,0,42,0],[37,0,43,0],[38,2,44,0],[38,11,44,9,"mixedToBinding"],[38,25,44,23,"mixedToBinding"],[38,26,44,24,"realm"],[38,31,44,29],[38,33,44,31,"value"],[38,38,44,36],[38,40,44,78],[39,4,44,78],[39,8,44,78,"_ref"],[39,12,44,78],[39,15,44,78,"arguments"],[39,24,44,78],[39,25,44,78,"length"],[39,31,44,78],[39,39,44,78,"arguments"],[39,48,44,78],[39,56,44,78,"undefined"],[39,65,44,78],[39,68,44,78,"arguments"],[39,77,44,78],[39,83,44,55],[40,8,44,57,"isQueryArg"],[40,18,44,67],[40,20,44,69],[41,6,44,75],[41,7,44,76],[42,6,44,40,"isQueryArg"],[42,16,44,50],[42,19,44,50,"_ref"],[42,23,44,50],[42,24,44,40,"isQueryArg"],[42,34,44,50],[43,4,45,4],[43,8,45,10,"displayedType"],[43,21,45,23],[43,24,45,26,"isQueryArg"],[43,34,45,36],[43,37,45,39],[43,55,45,57],[43,58,45,60],[43,73,45,75],[44,4,46,4],[44,8,46,8],[44,15,46,15,"value"],[44,20,46,20],[44,25,46,25],[44,33,46,33],[44,37,46,37],[44,44,46,44,"value"],[44,49,46,49],[44,54,46,54],[44,62,46,62],[44,66,46,66],[44,73,46,73,"value"],[44,78,46,78],[44,83,46,83],[44,92,46,92],[44,96,46,96,"value"],[44,101,46,101],[44,106,46,106],[44,110,46,110],[44,112,46,112],[45,6,47,8],[46,6,48,8],[46,13,48,15,"value"],[46,18,48,20],[47,4,49,4],[47,5,49,5],[47,11,50,9],[47,15,50,13,"value"],[47,20,50,18],[47,25,50,23,"undefined"],[47,34,50,32],[47,36,50,34],[48,6,51,8],[48,13,51,15],[48,17,51,19],[49,4,52,4],[49,5,52,5],[49,11,53,9],[49,15,53,13,"value"],[49,20,53,18],[49,32,53,30,"Date"],[49,36,53,34],[49,38,53,36],[50,6,54,8],[50,13,54,15,"_$$_REQUIRE"],[50,24,54,15],[50,25,54,15,"_dependencyMap"],[50,39,54,15],[50,58,54,25,"binding"],[50,65,54,32],[50,66,54,33,"Timestamp"],[50,75,54,42],[50,76,54,43,"fromDate"],[50,84,54,51],[50,85,54,52,"value"],[50,90,54,57],[50,91,54,58],[51,4,55,4],[51,5,55,5],[51,11,56,9],[51,15,56,13,"value"],[51,20,56,18],[51,32,56,30,"_$$_REQUIRE"],[51,43,56,30],[51,44,56,30,"_dependencyMap"],[51,58,56,30],[51,78,56,41,"indirect"],[51,86,56,49],[51,87,56,50,"Object"],[51,93,56,56],[51,95,56,58],[52,6,57,8],[52,10,57,12,"value"],[52,15,57,17],[52,16,57,18,"objectSchema"],[52,28,57,30],[52,29,57,31],[52,30,57,32],[52,31,57,33,"embedded"],[52,39,57,41],[52,41,57,43],[53,8,58,12],[53,14,58,18],[53,18,58,22,"Error"],[53,23,58,27],[53,24,58,28],[53,53,58,57,"value"],[53,58,58,62],[53,59,58,63,"constructor"],[53,70,58,74],[53,71,58,75,"name"],[53,75,58,79],[53,83,58,87,"displayedType"],[53,96,58,100],[53,116,58,120],[53,117,58,121],[54,6,59,8],[55,6,60,8],[55,10,60,14,"otherRealm"],[55,20,60,24],[55,23,60,27,"value"],[55,28,60,32],[55,29,60,33,"_$$_REQUIRE"],[55,40,60,33],[55,41,60,33,"_dependencyMap"],[55,55,60,33],[55,74,60,43,"OBJECT_REALM"],[55,86,60,55],[55,87,60,56],[55,88,60,57,"internal"],[55,96,60,65],[56,6,61,8,"_$$_REQUIRE"],[56,17,61,8],[56,18,61,8,"_dependencyMap"],[56,32,61,8],[56,50,61,17,"assert"],[56,56,61,23],[56,57,61,24,"isSameRealm"],[56,68,61,35],[56,69,61,36,"realm"],[56,74,61,41],[56,76,61,43,"otherRealm"],[56,86,61,53],[56,88,61,55],[56,124,61,91],[56,125,61,92],[57,6,62,8],[57,13,62,15,"value"],[57,18,62,20],[57,19,62,21,"_$$_REQUIRE"],[57,30,62,21],[57,31,62,21,"_dependencyMap"],[57,45,62,21],[57,64,62,31,"OBJECT_INTERNAL"],[57,79,62,46],[57,80,62,47],[58,4,63,4],[58,5,63,5],[58,11,64,9],[58,15,64,13,"value"],[58,20,64,18],[58,32,64,30,"_$$_REQUIRE"],[58,43,64,30],[58,44,64,30,"_dependencyMap"],[58,58,64,30],[58,78,64,41,"indirect"],[58,86,64,49],[58,87,64,50,"Set"],[58,90,64,53],[58,94,64,57,"value"],[58,99,64,62],[58,111,64,74,"Set"],[58,114,64,77],[58,116,64,79],[59,6,65,8],[59,12,65,14],[59,16,65,18,"Error"],[59,21,65,23],[59,22,65,24],[59,33,65,35,"value"],[59,38,65,40],[59,39,65,41,"constructor"],[59,50,65,52],[59,51,65,53,"name"],[59,55,65,57],[59,62,65,64,"displayedType"],[59,75,65,77],[59,95,65,97],[59,96,65,98],[60,4,66,4],[60,5,66,5],[60,11,67,9],[60,15,67,13,"value"],[60,20,67,18],[60,32,67,30,"_$$_REQUIRE"],[60,43,67,30],[60,44,67,30,"_dependencyMap"],[60,58,67,30],[60,77,67,40,"Counter"],[60,84,67,47],[60,86,67,49],[61,6,68,8],[61,10,68,12,"errMessage"],[61,20,68,22],[61,23,68,25],[61,45,68,47,"displayedType"],[61,58,68,60],[61,78,68,80],[62,6,69,8,"errMessage"],[62,16,69,18],[62,20,69,22,"isQueryArg"],[62,30,69,32],[62,33,69,35],[62,56,69,58],[62,59,69,61],[62,61,69,63],[63,6,70,8],[63,12,70,14],[63,16,70,18,"Error"],[63,21,70,23],[63,22,70,24,"errMessage"],[63,32,70,34],[63,33,70,35],[64,4,71,4],[64,5,71,5],[64,11,72,9],[65,6,73,8],[65,10,73,12,"isQueryArg"],[65,20,73,22],[65,22,73,24],[66,8,74,12],[66,12,74,16,"value"],[66,17,74,21],[66,29,74,33,"_$$_REQUIRE"],[66,40,74,33],[66,41,74,33,"_dependencyMap"],[66,55,74,33],[66,75,74,44,"indirect"],[66,83,74,52],[66,84,74,53,"Collection"],[66,94,74,63],[66,98,74,67,"Array"],[66,103,74,72],[66,104,74,73,"isArray"],[66,111,74,80],[66,112,74,81,"value"],[66,117,74,86],[66,118,74,87],[66,120,74,89],[67,10,75,16],[67,16,75,22],[67,20,75,26,"Error"],[67,25,75,31],[67,26,75,32],[67,37,75,43,"value"],[67,42,75,48],[67,43,75,49,"constructor"],[67,54,75,60],[67,55,75,61,"name"],[67,59,75,65],[67,99,75,105],[67,100,75,106],[68,8,76,12],[69,8,77,12],[70,8,78,12],[71,8,79,12],[71,12,79,16],[71,19,79,23,"value"],[71,24,79,28],[71,29,79,33],[71,37,79,41],[71,39,79,43],[72,10,80,16],[72,14,80,20],[72,15,80,21],[72,16,80,22],[72,18,80,24,"_$$_REQUIRE"],[72,29,80,24],[72,30,80,24,"_dependencyMap"],[72,44,80,24],[72,66,80,37,"isGeoCircle"],[72,77,80,48],[72,79,80,50,"value"],[72,84,80,55],[72,85,80,56],[72,87,80,58],[73,12,81,20],[73,19,81,27],[73,20,81,28],[73,21,81,29],[73,23,81,31,"_$$_REQUIRE"],[73,34,81,31],[73,35,81,31,"_dependencyMap"],[73,49,81,31],[73,71,81,44,"circleToBindingGeospatial"],[73,96,81,69],[73,98,81,71,"value"],[73,103,81,76],[73,104,81,77],[74,10,82,16],[74,11,82,17],[74,17,83,21],[74,21,83,25],[74,22,83,26],[74,23,83,27],[74,25,83,29,"_$$_REQUIRE"],[74,36,83,29],[74,37,83,29,"_dependencyMap"],[74,51,83,29],[74,73,83,42,"isGeoBox"],[74,81,83,50],[74,83,83,52,"value"],[74,88,83,57],[74,89,83,58],[74,91,83,60],[75,12,84,20],[75,19,84,27],[75,20,84,28],[75,21,84,29],[75,23,84,31,"_$$_REQUIRE"],[75,34,84,31],[75,35,84,31,"_dependencyMap"],[75,49,84,31],[75,71,84,44,"boxToBindingGeospatial"],[75,93,84,66],[75,95,84,68,"value"],[75,100,84,73],[75,101,84,74],[76,10,85,16],[76,11,85,17],[76,17,86,21],[76,21,86,25],[76,22,86,26],[76,23,86,27],[76,25,86,29,"_$$_REQUIRE"],[76,36,86,29],[76,37,86,29,"_dependencyMap"],[76,51,86,29],[76,73,86,42,"isGeoPolygon"],[76,85,86,54],[76,87,86,56,"value"],[76,92,86,61],[76,93,86,62],[76,95,86,64],[77,12,87,20],[77,19,87,27],[77,20,87,28],[77,21,87,29],[77,23,87,31,"_$$_REQUIRE"],[77,34,87,31],[77,35,87,31,"_dependencyMap"],[77,49,87,31],[77,71,87,44,"polygonToBindingGeospatial"],[77,97,87,70],[77,99,87,72,"value"],[77,104,87,77],[77,105,87,78],[78,10,88,16],[79,8,89,12],[80,6,90,8],[81,6,91,8],[82,6,92,8],[82,11,92,13],[82,15,92,19,"TypedArray"],[82,25,92,29],[82,29,92,33,"_$$_REQUIRE"],[82,40,92,33],[82,41,92,33,"_dependencyMap"],[82,55,92,33],[82,78,92,48,"TYPED_ARRAY_CONSTRUCTORS"],[82,102,92,72],[82,104,92,74],[83,8,93,12],[83,12,93,16,"value"],[83,17,93,21],[83,29,93,33,"TypedArray"],[83,39,93,43],[83,41,93,45],[84,10,94,16],[84,17,94,23,"value"],[84,22,94,28],[84,23,94,29,"buffer"],[84,29,94,35],[84,30,94,36,"slice"],[84,35,94,41],[84,36,94,42,"value"],[84,41,94,47],[84,42,94,48,"byteOffset"],[84,52,94,58],[84,54,94,60,"value"],[84,59,94,65],[84,60,94,66,"byteOffset"],[84,70,94,76],[84,73,94,79,"value"],[84,78,94,84],[84,79,94,85,"byteLength"],[84,89,94,95],[84,90,94,96],[85,8,95,12],[86,6,96,8],[87,6,97,8],[88,6,98,8],[88,13,98,15,"value"],[88,18,98,20],[89,4,99,4],[90,2,100,0],[91,2,101,0,"exports"],[91,9,101,7],[91,10,101,8,"mixedToBinding"],[91,24,101,22],[91,27,101,25,"mixedToBinding"],[91,41,101,39],[92,2,102,0],[93,2,103,0],[93,11,103,9,"mixedFromBinding"],[93,27,103,25,"mixedFromBinding"],[93,28,103,26,"options"],[93,35,103,33],[93,37,103,35,"value"],[93,42,103,40],[93,44,103,42],[94,4,104,4],[94,8,104,12,"realm"],[94,13,104,17],[94,16,104,39,"options"],[94,23,104,46],[94,24,104,12,"realm"],[94,29,104,17],[95,6,104,19,"getClassHelpers"],[95,21,104,34],[95,24,104,39,"options"],[95,31,104,46],[95,32,104,19,"getClassHelpers"],[95,47,104,34],[96,4,105,4],[96,8,105,8,"_$$_REQUIRE"],[96,19,105,8],[96,20,105,8,"_dependencyMap"],[96,34,105,8],[96,53,105,18,"binding"],[96,60,105,25],[96,61,105,26,"Int64"],[96,66,105,31],[96,67,105,32,"isInt"],[96,72,105,37],[96,73,105,38,"value"],[96,78,105,43],[96,79,105,44],[96,81,105,46],[97,6,106,8],[97,13,106,15,"_$$_REQUIRE"],[97,24,106,15],[97,25,106,15,"_dependencyMap"],[97,39,106,15],[97,58,106,25,"binding"],[97,65,106,32],[97,66,106,33,"Int64"],[97,71,106,38],[97,72,106,39,"intToNum"],[97,80,106,47],[97,81,106,48,"value"],[97,86,106,53],[97,87,106,54],[98,4,107,4],[98,5,107,5],[98,11,108,9],[98,15,108,13,"value"],[98,20,108,18],[98,32,108,30,"_$$_REQUIRE"],[98,43,108,30],[98,44,108,30,"_dependencyMap"],[98,58,108,30],[98,77,108,40,"binding"],[98,84,108,47],[98,85,108,48,"Timestamp"],[98,94,108,57],[98,96,108,59],[99,6,109,8],[99,13,109,15,"value"],[99,18,109,20],[99,19,109,21,"toDate"],[99,25,109,27],[99,26,109,28],[99,27,109,29],[100,4,110,4],[100,5,110,5],[100,11,111,9],[100,15,111,13,"value"],[100,20,111,18],[100,32,111,30,"_$$_REQUIRE"],[100,43,111,30],[100,44,111,30,"_dependencyMap"],[100,58,111,30],[100,77,111,40,"binding"],[100,84,111,47],[100,85,111,48,"Float"],[100,90,111,53],[100,92,111,55],[101,6,112,8],[101,13,112,15,"value"],[101,18,112,20],[101,19,112,21,"value"],[101,24,112,26],[102,4,113,4],[102,5,113,5],[102,11,114,9],[102,15,114,13,"value"],[102,20,114,18],[102,32,114,30,"_$$_REQUIRE"],[102,43,114,30],[102,44,114,30,"_dependencyMap"],[102,58,114,30],[102,77,114,40,"binding"],[102,84,114,47],[102,85,114,48,"ObjLink"],[102,92,114,55],[102,94,114,57],[103,6,115,8],[103,10,115,14,"table"],[103,15,115,19],[103,18,115,22,"_$$_REQUIRE"],[103,29,115,22],[103,30,115,22,"_dependencyMap"],[103,44,115,22],[103,63,115,32,"binding"],[103,70,115,39],[103,71,115,40,"Helpers"],[103,78,115,47],[103,79,115,48,"getTable"],[103,87,115,56],[103,88,115,57,"realm"],[103,93,115,62],[103,94,115,63,"internal"],[103,102,115,71],[103,104,115,73,"value"],[103,109,115,78],[103,110,115,79,"tableKey"],[103,118,115,87],[103,119,115,88],[104,6,116,8],[104,10,116,14,"linkedObj"],[104,19,116,23],[104,22,116,26,"table"],[104,27,116,31],[104,28,116,32,"getObject"],[104,37,116,41],[104,38,116,42,"value"],[104,43,116,47],[104,44,116,48,"objKey"],[104,50,116,54],[104,51,116,55],[105,6,117,8],[105,10,117,8,"_getClassHelpers"],[105,26,117,8],[105,29,117,31,"getClassHelpers"],[105,44,117,46],[105,45,117,47,"value"],[105,50,117,52],[105,51,117,53,"tableKey"],[105,59,117,61],[105,60,117,62],[106,8,117,16,"wrapObject"],[106,18,117,26],[106,21,117,26,"_getClassHelpers"],[106,37,117,26],[106,38,117,16,"wrapObject"],[106,48,117,26],[107,6,118,8],[107,13,118,15,"wrapObject"],[107,23,118,25],[107,24,118,26,"linkedObj"],[107,33,118,35],[107,34,118,36],[108,4,119,4],[108,5,119,5],[108,11,120,9],[108,15,120,13,"value"],[108,20,120,18],[108,32,120,30,"_$$_REQUIRE"],[108,43,120,30],[108,44,120,30,"_dependencyMap"],[108,58,120,30],[108,77,120,40,"binding"],[108,84,120,47],[108,85,120,48,"List"],[108,89,120,52],[108,91,120,54],[109,6,121,8],[109,10,121,14,"mixedType"],[109,19,121,23],[109,22,121,26],[109,23,121,27],[109,24,121,28],[110,6,122,8],[110,10,122,14,"typeHelpers"],[110,21,122,25],[110,24,122,28],[110,25,122,29],[110,26,122,30],[110,28,122,32,"_$$_REQUIRE"],[110,39,122,32],[110,40,122,32,"_dependencyMap"],[110,54,122,32],[110,77,122,46,"getTypeHelpers"],[110,91,122,60],[110,93,122,62,"mixedType"],[110,102,122,71],[110,104,122,73,"options"],[110,111,122,80],[110,112,122,81],[111,6,123,8],[111,13,123,15],[111,18,123,19,"_$$_REQUIRE"],[111,29,123,19],[111,30,123,19,"_dependencyMap"],[111,44,123,19],[111,64,123,30,"indirect"],[111,72,123,38],[111,73,123,39,"List"],[111,77,123,43],[111,79,123,44,"realm"],[111,84,123,49],[111,86,123,51,"value"],[111,91,123,56],[111,93,123,58],[111,94,123,59],[111,95,123,60],[111,97,123,62,"_$$_REQUIRE"],[111,108,123,62],[111,109,123,62,"_dependencyMap"],[111,123,123,62],[111,160,123,69,"createListAccessor"],[111,178,123,87],[111,180,123,89],[112,8,123,91,"realm"],[112,13,123,96],[112,15,123,91,"realm"],[112,20,123,96],[113,8,123,98,"typeHelpers"],[113,19,123,109],[113,21,123,98,"typeHelpers"],[113,32,123,109],[114,8,123,111,"itemType"],[114,16,123,119],[114,18,123,121,"mixedType"],[115,6,123,131],[115,7,123,132],[115,8,123,133],[115,10,123,135,"typeHelpers"],[115,21,123,146],[115,22,123,147],[116,4,124,4],[116,5,124,5],[116,11,125,9],[116,15,125,13,"value"],[116,20,125,18],[116,32,125,30,"_$$_REQUIRE"],[116,43,125,30],[116,44,125,30,"_dependencyMap"],[116,58,125,30],[116,77,125,40,"binding"],[116,84,125,47],[116,85,125,48,"Dictionary"],[116,95,125,58],[116,97,125,60],[117,6,126,8],[117,10,126,14,"mixedType"],[117,20,126,23],[117,23,126,26],[117,24,126,27],[117,25,126,28],[118,6,127,8],[118,10,127,14,"typeHelpers"],[118,22,127,25],[118,25,127,28],[118,26,127,29],[118,27,127,30],[118,29,127,32,"_$$_REQUIRE"],[118,40,127,32],[118,41,127,32,"_dependencyMap"],[118,55,127,32],[118,78,127,46,"getTypeHelpers"],[118,92,127,60],[118,94,127,62,"mixedType"],[118,104,127,71],[118,106,127,73,"options"],[118,113,127,80],[118,114,127,81],[119,6,128,8],[119,13,128,15],[119,18,128,19,"_$$_REQUIRE"],[119,29,128,19],[119,30,128,19,"_dependencyMap"],[119,44,128,19],[119,64,128,30,"indirect"],[119,72,128,38],[119,73,128,39,"Dictionary"],[119,83,128,49],[119,85,128,50,"realm"],[119,90,128,55],[119,92,128,57,"value"],[119,97,128,62],[119,99,128,64],[119,100,128,65],[119,101,128,66],[119,103,128,68,"_$$_REQUIRE"],[119,114,128,68],[119,115,128,68,"_dependencyMap"],[119,129,128,68],[119,172,128,81,"createDictionaryAccessor"],[119,196,128,105],[119,198,128,107],[120,8,128,109,"realm"],[120,13,128,114],[120,15,128,109,"realm"],[120,20,128,114],[121,8,128,116,"typeHelpers"],[121,19,128,127],[121,21,128,116,"typeHelpers"],[121,33,128,127],[122,8,128,129,"itemType"],[122,16,128,137],[122,18,128,139,"mixedType"],[123,6,128,149],[123,7,128,150],[123,8,128,151],[123,10,128,153,"typeHelpers"],[123,22,128,164],[123,23,128,165],[124,4,129,4],[124,5,129,5],[124,11,130,9],[125,6,131,8],[125,13,131,15,"value"],[125,18,131,20],[126,4,132,4],[127,2,133,0],[128,2,134,0],[129,2,135,0],[129,11,135,9,"createMixedTypeHelpers"],[129,33,135,31,"createMixedTypeHelpers"],[129,34,135,32,"options"],[129,41,135,39],[129,43,135,41],[130,4,136,4],[130,11,136,11],[131,6,137,8,"toBinding"],[131,15,137,17],[131,17,137,19,"mixedToBinding"],[131,31,137,33],[131,32,137,34,"bind"],[131,36,137,38],[131,37,137,39],[131,41,137,43],[131,43,137,45,"options"],[131,50,137,52],[131,51,137,53,"realm"],[131,56,137,58],[131,57,137,59,"internal"],[131,65,137,67],[131,66,137,68],[132,6,138,8,"fromBinding"],[132,17,138,19],[132,19,138,21,"mixedFromBinding"],[132,35,138,37],[132,36,138,38,"bind"],[132,40,138,42],[132,41,138,43],[132,45,138,47],[132,47,138,49,"options"],[132,54,138,56],[133,4,139,4],[133,5,139,5],[134,2,140,0],[135,2,141,0,"exports"],[135,9,141,7],[135,10,141,8,"createMixedTypeHelpers"],[135,32,141,30],[135,35,141,33,"createMixedTypeHelpers"],[135,57,141,55],[136,0,141,56],[136,3]],"functionMap":{"names":["<global>","mixedToBinding","mixedFromBinding","createMixedTypeHelpers"],"mappings":"AAA;AC2C;CDwD;AEG;CF8B;AGE;CHK"}},"type":"js/module"}]}