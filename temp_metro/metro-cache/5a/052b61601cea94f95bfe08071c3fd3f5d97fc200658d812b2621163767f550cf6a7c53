{"dependencies":[{"name":"sha.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":33,"index":520},"end":{"line":7,"column":50,"index":537}}],"key":"VT8g97hvtDqAKV1FwSt0QYmWZ3s="}},{"name":"crc","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":554},"end":{"line":8,"column":28,"index":568}},{"start":{"line":8,"column":14,"index":554},"end":{"line":8,"column":28,"index":568}}],"key":"G477oLpa41CW9zHM02FkvdUEbek="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.bufferXOR = exports.setDifference = exports.arrayContains = exports.arraysEqual = exports.hasPrefix = exports.isURType = exports.intToBytes = exports.toUint32 = exports.getCRCHex = exports.getCRC = exports.split = exports.partition = exports.sha256Hash = void 0;\n  var sha_js_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0], \"sha.js\"));\n  var sha256Hash = function sha256Hash(data) {\n    return sha_js_1.default('sha256').update(data).digest();\n  };\n  exports.sha256Hash = sha256Hash;\n  var partition = function partition(s, n) {\n    return s.match(new RegExp('.{1,' + n + '}', 'g')) || [s];\n  };\n  exports.partition = partition;\n  var split = function split(s, length) {\n    return [s.slice(0, -length), s.slice(-length)];\n  };\n  exports.split = split;\n  var getCRC = function getCRC(message) {\n    return _$$_REQUIRE(_dependencyMap[1], \"crc\").crc32(message);\n  };\n  exports.getCRC = getCRC;\n  var getCRCHex = function getCRCHex(message) {\n    return _$$_REQUIRE(_dependencyMap[1], \"crc\").crc32(message).toString(16).padStart(8, '0');\n  };\n  exports.getCRCHex = getCRCHex;\n  var toUint32 = function toUint32(number) {\n    return number >>> 0;\n  };\n  exports.toUint32 = toUint32;\n  var intToBytes = function intToBytes(num) {\n    var arr = new ArrayBuffer(4); // an Int32 takes 4 bytes\n    var view = new DataView(arr);\n    view.setUint32(0, num, false); // byteOffset = 0; litteEndian = false\n    return Buffer.from(arr);\n  };\n  exports.intToBytes = intToBytes;\n  var isURType = function isURType(type) {\n    return type.split('').every(function (_, index) {\n      var c = type.charCodeAt(index);\n      if ('a'.charCodeAt(0) <= c && c <= 'z'.charCodeAt(0)) return true;\n      if ('0'.charCodeAt(0) <= c && c <= '9'.charCodeAt(0)) return true;\n      if (c === '-'.charCodeAt(0)) return true;\n      return false;\n    });\n  };\n  exports.isURType = isURType;\n  var hasPrefix = function hasPrefix(s, prefix) {\n    return s.indexOf(prefix) === 0;\n  };\n  exports.hasPrefix = hasPrefix;\n  var arraysEqual = function arraysEqual(ar1, ar2) {\n    if (ar1.length !== ar2.length) {\n      return false;\n    }\n    return ar1.every(function (el) {\n      return ar2.includes(el);\n    });\n  };\n  exports.arraysEqual = arraysEqual;\n  /**\n   * Checks if ar1 contains all elements of ar2\n   * @param ar1 the outer array\n   * @param ar2 the array to be contained in ar1\n   */\n  var arrayContains = function arrayContains(ar1, ar2) {\n    return ar2.every(function (v) {\n      return ar1.includes(v);\n    });\n  };\n  exports.arrayContains = arrayContains;\n  /**\n   * Returns the difference array of  `ar1` - `ar2`\n   */\n  var setDifference = function setDifference(ar1, ar2) {\n    return ar1.filter(function (x) {\n      return ar2.indexOf(x) < 0;\n    });\n  };\n  exports.setDifference = setDifference;\n  var bufferXOR = function bufferXOR(a, b) {\n    var length = Math.max(a.length, b.length);\n    var buffer = Buffer.allocUnsafe(length);\n    for (var i = 0; i < length; ++i) {\n      buffer[i] = a[i] ^ b[i];\n    }\n    return buffer;\n  };\n  exports.bufferXOR = bufferXOR;\n});","lineCount":97,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"bufferXOR"],[12,19,6,17],[12,22,6,20,"exports"],[12,29,6,27],[12,30,6,28,"setDifference"],[12,43,6,41],[12,46,6,44,"exports"],[12,53,6,51],[12,54,6,52,"arrayContains"],[12,67,6,65],[12,70,6,68,"exports"],[12,77,6,75],[12,78,6,76,"arraysEqual"],[12,89,6,87],[12,92,6,90,"exports"],[12,99,6,97],[12,100,6,98,"hasPrefix"],[12,109,6,107],[12,112,6,110,"exports"],[12,119,6,117],[12,120,6,118,"isURType"],[12,128,6,126],[12,131,6,129,"exports"],[12,138,6,136],[12,139,6,137,"intToBytes"],[12,149,6,147],[12,152,6,150,"exports"],[12,159,6,157],[12,160,6,158,"toUint32"],[12,168,6,166],[12,171,6,169,"exports"],[12,178,6,176],[12,179,6,177,"getCRCHex"],[12,188,6,186],[12,191,6,189,"exports"],[12,198,6,196],[12,199,6,197,"getCRC"],[12,205,6,203],[12,208,6,206,"exports"],[12,215,6,213],[12,216,6,214,"split"],[12,221,6,219],[12,224,6,222,"exports"],[12,231,6,229],[12,232,6,230,"partition"],[12,241,6,239],[12,244,6,242,"exports"],[12,251,6,249],[12,252,6,250,"sha256Hash"],[12,262,6,260],[12,265,6,263],[12,270,6,268],[12,271,6,269],[13,2,7,0],[13,6,7,6,"sha_js_1"],[13,14,7,14],[13,17,7,17,"__importDefault"],[13,32,7,32],[13,33,7,33,"require"],[13,44,7,40],[13,45,7,40,"_dependencyMap"],[13,59,7,40],[13,72,7,49],[13,73,7,50],[13,74,7,51],[14,2,9,0],[14,6,9,6,"sha256Hash"],[14,16,9,16],[14,19,9,19],[14,28,9,6,"sha256Hash"],[14,38,9,16,"sha256Hash"],[14,39,9,20,"data"],[14,43,9,24],[15,4,9,24],[15,11,9,29,"sha_js_1"],[15,19,9,37],[15,20,9,38,"default"],[15,27,9,45],[15,28,9,46],[15,36,9,54],[15,37,9,55],[15,38,9,56,"update"],[15,44,9,62],[15,45,9,63,"data"],[15,49,9,67],[15,50,9,68],[15,51,9,69,"digest"],[15,57,9,75],[15,58,9,76],[15,59,9,77],[16,2,9,77],[17,2,10,0,"exports"],[17,9,10,7],[17,10,10,8,"sha256Hash"],[17,20,10,18],[17,23,10,21,"sha256Hash"],[17,33,10,31],[18,2,11,0],[18,6,11,6,"partition"],[18,15,11,15],[18,18,11,18],[18,27,11,6,"partition"],[18,36,11,15,"partition"],[18,37,11,19,"s"],[18,38,11,20],[18,40,11,22,"n"],[18,41,11,23],[19,4,11,23],[19,11,11,28,"s"],[19,12,11,29],[19,13,11,30,"match"],[19,18,11,35],[19,19,11,36],[19,23,11,40,"RegExp"],[19,29,11,46],[19,30,11,47],[19,36,11,53],[19,39,11,56,"n"],[19,40,11,57],[19,43,11,60],[19,46,11,63],[19,48,11,65],[19,51,11,68],[19,52,11,69],[19,53,11,70],[19,57,11,74],[19,58,11,75,"s"],[19,59,11,76],[19,60,11,77],[20,2,11,77],[21,2,12,0,"exports"],[21,9,12,7],[21,10,12,8,"partition"],[21,19,12,17],[21,22,12,20,"partition"],[21,31,12,29],[22,2,13,0],[22,6,13,6,"split"],[22,11,13,11],[22,14,13,14],[22,23,13,6,"split"],[22,28,13,11,"split"],[22,29,13,15,"s"],[22,30,13,16],[22,32,13,18,"length"],[22,38,13,24],[23,4,13,24],[23,11,13,29],[23,12,13,30,"s"],[23,13,13,31],[23,14,13,32,"slice"],[23,19,13,37],[23,20,13,38],[23,21,13,39],[23,23,13,41],[23,24,13,42,"length"],[23,30,13,48],[23,31,13,49],[23,33,13,51,"s"],[23,34,13,52],[23,35,13,53,"slice"],[23,40,13,58],[23,41,13,59],[23,42,13,60,"length"],[23,48,13,66],[23,49,13,67],[23,50,13,68],[24,2,13,68],[25,2,14,0,"exports"],[25,9,14,7],[25,10,14,8,"split"],[25,15,14,13],[25,18,14,16,"split"],[25,23,14,21],[26,2,15,0],[26,6,15,6,"getCRC"],[26,12,15,12],[26,15,15,15],[26,24,15,6,"getCRC"],[26,30,15,12,"getCRC"],[26,31,15,16,"message"],[26,38,15,23],[27,4,15,23],[27,11,15,28,"_$$_REQUIRE"],[27,22,15,28],[27,23,15,28,"_dependencyMap"],[27,37,15,28],[27,49,15,34,"crc32"],[27,54,15,39],[27,55,15,40,"message"],[27,62,15,47],[27,63,15,48],[28,2,15,48],[29,2,16,0,"exports"],[29,9,16,7],[29,10,16,8,"getCRC"],[29,16,16,14],[29,19,16,17,"getCRC"],[29,25,16,23],[30,2,17,0],[30,6,17,6,"getCRCHex"],[30,15,17,15],[30,18,17,18],[30,27,17,6,"getCRCHex"],[30,36,17,15,"getCRCHex"],[30,37,17,19,"message"],[30,44,17,26],[31,4,17,26],[31,11,17,31,"_$$_REQUIRE"],[31,22,17,31],[31,23,17,31,"_dependencyMap"],[31,37,17,31],[31,49,17,37,"crc32"],[31,54,17,42],[31,55,17,43,"message"],[31,62,17,50],[31,63,17,51],[31,64,17,52,"toString"],[31,72,17,60],[31,73,17,61],[31,75,17,63],[31,76,17,64],[31,77,17,65,"padStart"],[31,85,17,73],[31,86,17,74],[31,87,17,75],[31,89,17,77],[31,92,17,80],[31,93,17,81],[32,2,17,81],[33,2,18,0,"exports"],[33,9,18,7],[33,10,18,8,"getCRCHex"],[33,19,18,17],[33,22,18,20,"getCRCHex"],[33,31,18,29],[34,2,19,0],[34,6,19,6,"toUint32"],[34,14,19,14],[34,17,19,17],[34,26,19,6,"toUint32"],[34,34,19,14,"toUint32"],[34,35,19,18,"number"],[34,41,19,24],[35,4,19,24],[35,11,19,29,"number"],[35,17,19,35],[35,22,19,40],[35,23,19,41],[36,2,19,41],[37,2,20,0,"exports"],[37,9,20,7],[37,10,20,8,"toUint32"],[37,18,20,16],[37,21,20,19,"toUint32"],[37,29,20,27],[38,2,21,0],[38,6,21,6,"intToBytes"],[38,16,21,16],[38,19,21,19],[38,28,21,6,"intToBytes"],[38,38,21,16,"intToBytes"],[38,39,21,20,"num"],[38,42,21,23],[38,44,21,28],[39,4,22,4],[39,8,22,10,"arr"],[39,11,22,13],[39,14,22,16],[39,18,22,20,"ArrayBuffer"],[39,29,22,31],[39,30,22,32],[39,31,22,33],[39,32,22,34],[39,33,22,35],[39,34,22,36],[40,4,23,4],[40,8,23,10,"view"],[40,12,23,14],[40,15,23,17],[40,19,23,21,"DataView"],[40,27,23,29],[40,28,23,30,"arr"],[40,31,23,33],[40,32,23,34],[41,4,24,4,"view"],[41,8,24,8],[41,9,24,9,"setUint32"],[41,18,24,18],[41,19,24,19],[41,20,24,20],[41,22,24,22,"num"],[41,25,24,25],[41,27,24,27],[41,32,24,32],[41,33,24,33],[41,34,24,34],[41,35,24,35],[42,4,25,4],[42,11,25,11,"Buffer"],[42,17,25,17],[42,18,25,18,"from"],[42,22,25,22],[42,23,25,23,"arr"],[42,26,25,26],[42,27,25,27],[43,2,26,0],[43,3,26,1],[44,2,27,0,"exports"],[44,9,27,7],[44,10,27,8,"intToBytes"],[44,20,27,18],[44,23,27,21,"intToBytes"],[44,33,27,31],[45,2,28,0],[45,6,28,6,"isURType"],[45,14,28,14],[45,17,28,17],[45,26,28,6,"isURType"],[45,34,28,14,"isURType"],[45,35,28,18,"type"],[45,39,28,22],[45,41,28,27],[46,4,29,4],[46,11,29,11,"type"],[46,15,29,15],[46,16,29,16,"split"],[46,21,29,21],[46,22,29,22],[46,24,29,24],[46,25,29,25],[46,26,29,26,"every"],[46,31,29,31],[46,32,29,32],[46,42,29,33,"_"],[46,43,29,34],[46,45,29,36,"index"],[46,50,29,41],[46,52,29,46],[47,6,30,8],[47,10,30,12,"c"],[47,11,30,13],[47,14,30,16,"type"],[47,18,30,20],[47,19,30,21,"charCodeAt"],[47,29,30,31],[47,30,30,32,"index"],[47,35,30,37],[47,36,30,38],[48,6,31,8],[48,10,31,12],[48,13,31,15],[48,14,31,16,"charCodeAt"],[48,24,31,26],[48,25,31,27],[48,26,31,28],[48,27,31,29],[48,31,31,33,"c"],[48,32,31,34],[48,36,31,38,"c"],[48,37,31,39],[48,41,31,43],[48,44,31,46],[48,45,31,47,"charCodeAt"],[48,55,31,57],[48,56,31,58],[48,57,31,59],[48,58,31,60],[48,60,32,12],[48,67,32,19],[48,71,32,23],[49,6,33,8],[49,10,33,12],[49,13,33,15],[49,14,33,16,"charCodeAt"],[49,24,33,26],[49,25,33,27],[49,26,33,28],[49,27,33,29],[49,31,33,33,"c"],[49,32,33,34],[49,36,33,38,"c"],[49,37,33,39],[49,41,33,43],[49,44,33,46],[49,45,33,47,"charCodeAt"],[49,55,33,57],[49,56,33,58],[49,57,33,59],[49,58,33,60],[49,60,34,12],[49,67,34,19],[49,71,34,23],[50,6,35,8],[50,10,35,12,"c"],[50,11,35,13],[50,16,35,18],[50,19,35,21],[50,20,35,22,"charCodeAt"],[50,30,35,32],[50,31,35,33],[50,32,35,34],[50,33,35,35],[50,35,36,12],[50,42,36,19],[50,46,36,23],[51,6,37,8],[51,13,37,15],[51,18,37,20],[52,4,38,4],[52,5,38,5],[52,6,38,6],[53,2,39,0],[53,3,39,1],[54,2,40,0,"exports"],[54,9,40,7],[54,10,40,8,"isURType"],[54,18,40,16],[54,21,40,19,"isURType"],[54,29,40,27],[55,2,41,0],[55,6,41,6,"hasPrefix"],[55,15,41,15],[55,18,41,18],[55,27,41,6,"hasPrefix"],[55,36,41,15,"hasPrefix"],[55,37,41,19,"s"],[55,38,41,20],[55,40,41,22,"prefix"],[55,46,41,28],[56,4,41,28],[56,11,41,33,"s"],[56,12,41,34],[56,13,41,35,"indexOf"],[56,20,41,42],[56,21,41,43,"prefix"],[56,27,41,49],[56,28,41,50],[56,33,41,55],[56,34,41,56],[57,2,41,56],[58,2,42,0,"exports"],[58,9,42,7],[58,10,42,8,"hasPrefix"],[58,19,42,17],[58,22,42,20,"hasPrefix"],[58,31,42,29],[59,2,43,0],[59,6,43,6,"arraysEqual"],[59,17,43,17],[59,20,43,20],[59,29,43,6,"arraysEqual"],[59,40,43,17,"arraysEqual"],[59,41,43,21,"ar1"],[59,44,43,24],[59,46,43,26,"ar2"],[59,49,43,29],[59,51,43,34],[60,4,44,4],[60,8,44,8,"ar1"],[60,11,44,11],[60,12,44,12,"length"],[60,18,44,18],[60,23,44,23,"ar2"],[60,26,44,26],[60,27,44,27,"length"],[60,33,44,33],[60,35,44,35],[61,6,45,8],[61,13,45,15],[61,18,45,20],[62,4,46,4],[63,4,47,4],[63,11,47,11,"ar1"],[63,14,47,14],[63,15,47,15,"every"],[63,20,47,20],[63,21,47,21],[63,31,47,21,"el"],[63,33,47,23],[64,6,47,23],[64,13,47,27,"ar2"],[64,16,47,30],[64,17,47,31,"includes"],[64,25,47,39],[64,26,47,40,"el"],[64,28,47,42],[64,29,47,43],[65,4,47,43],[65,6,47,44],[66,2,48,0],[66,3,48,1],[67,2,49,0,"exports"],[67,9,49,7],[67,10,49,8,"arraysEqual"],[67,21,49,19],[67,24,49,22,"arraysEqual"],[67,35,49,33],[68,2,50,0],[69,0,51,0],[70,0,52,0],[71,0,53,0],[72,0,54,0],[73,2,55,0],[73,6,55,6,"arrayContains"],[73,19,55,19],[73,22,55,22],[73,31,55,6,"arrayContains"],[73,44,55,19,"arrayContains"],[73,45,55,23,"ar1"],[73,48,55,26],[73,50,55,28,"ar2"],[73,53,55,31],[73,55,55,36],[74,4,56,4],[74,11,56,11,"ar2"],[74,14,56,14],[74,15,56,15,"every"],[74,20,56,20],[74,21,56,21],[74,31,56,21,"v"],[74,32,56,22],[75,6,56,22],[75,13,56,26,"ar1"],[75,16,56,29],[75,17,56,30,"includes"],[75,25,56,38],[75,26,56,39,"v"],[75,27,56,40],[75,28,56,41],[76,4,56,41],[76,6,56,42],[77,2,57,0],[77,3,57,1],[78,2,58,0,"exports"],[78,9,58,7],[78,10,58,8,"arrayContains"],[78,23,58,21],[78,26,58,24,"arrayContains"],[78,39,58,37],[79,2,59,0],[80,0,60,0],[81,0,61,0],[82,2,62,0],[82,6,62,6,"setDifference"],[82,19,62,19],[82,22,62,22],[82,31,62,6,"setDifference"],[82,44,62,19,"setDifference"],[82,45,62,23,"ar1"],[82,48,62,26],[82,50,62,28,"ar2"],[82,53,62,31],[82,55,62,36],[83,4,63,4],[83,11,63,11,"ar1"],[83,14,63,14],[83,15,63,15,"filter"],[83,21,63,21],[83,22,63,22],[83,32,63,22,"x"],[83,33,63,23],[84,6,63,23],[84,13,63,27,"ar2"],[84,16,63,30],[84,17,63,31,"indexOf"],[84,24,63,38],[84,25,63,39,"x"],[84,26,63,40],[84,27,63,41],[84,30,63,44],[84,31,63,45],[85,4,63,45],[85,6,63,46],[86,2,64,0],[86,3,64,1],[87,2,65,0,"exports"],[87,9,65,7],[87,10,65,8,"setDifference"],[87,23,65,21],[87,26,65,24,"setDifference"],[87,39,65,37],[88,2,66,0],[88,6,66,6,"bufferXOR"],[88,15,66,15],[88,18,66,18],[88,27,66,6,"bufferXOR"],[88,36,66,15,"bufferXOR"],[88,37,66,19,"a"],[88,38,66,20],[88,40,66,22,"b"],[88,41,66,23],[88,43,66,28],[89,4,67,4],[89,8,67,10,"length"],[89,14,67,16],[89,17,67,19,"Math"],[89,21,67,23],[89,22,67,24,"max"],[89,25,67,27],[89,26,67,28,"a"],[89,27,67,29],[89,28,67,30,"length"],[89,34,67,36],[89,36,67,38,"b"],[89,37,67,39],[89,38,67,40,"length"],[89,44,67,46],[89,45,67,47],[90,4,68,4],[90,8,68,10,"buffer"],[90,14,68,16],[90,17,68,19,"Buffer"],[90,23,68,25],[90,24,68,26,"allocUnsafe"],[90,35,68,37],[90,36,68,38,"length"],[90,42,68,44],[90,43,68,45],[91,4,69,4],[91,9,69,9],[91,13,69,13,"i"],[91,14,69,14],[91,17,69,17],[91,18,69,18],[91,20,69,20,"i"],[91,21,69,21],[91,24,69,24,"length"],[91,30,69,30],[91,32,69,32],[91,34,69,34,"i"],[91,35,69,35],[91,37,69,37],[92,6,70,8,"buffer"],[92,12,70,14],[92,13,70,15,"i"],[92,14,70,16],[92,15,70,17],[92,18,70,20,"a"],[92,19,70,21],[92,20,70,22,"i"],[92,21,70,23],[92,22,70,24],[92,25,70,27,"b"],[92,26,70,28],[92,27,70,29,"i"],[92,28,70,30],[92,29,70,31],[93,4,71,4],[94,4,72,4],[94,11,72,11,"buffer"],[94,17,72,17],[95,2,73,0],[95,3,73,1],[96,2,74,0,"exports"],[96,9,74,7],[96,10,74,8,"bufferXOR"],[96,19,74,17],[96,22,74,20,"bufferXOR"],[96,31,74,29],[97,0,74,30],[97,3]],"functionMap":{"names":["<global>","<anonymous>","sha256Hash","partition","split","getCRC","getCRCHex","toUint32","intToBytes","isURType","type.split.every$argument_0","hasPrefix","arraysEqual","ar1.every$argument_0","arrayContains","ar2.every$argument_0","setDifference","ar1.filter$argument_0","bufferXOR"],"mappings":"AAA;wDCC;CDE;mBEK,0DF;kBGE,2DH;cIE,sDJ;eKE,iCL;kBME,+DN;iBOE,wBP;mBQE;CRK;iBSE;gCCC;KDS;CTC;kBWE,sCX;oBYE;qBCI,sBD;CZC;sBcO;qBCC,oBD;CdC;sBgBK;sBCC,uBD;ChBC;kBkBE;ClBO"}},"type":"js/module"}]}