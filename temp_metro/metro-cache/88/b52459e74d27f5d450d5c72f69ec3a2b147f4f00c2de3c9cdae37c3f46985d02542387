{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":54,"column":0,"index":1748}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"./bip32Derivation","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":24,"index":139},"end":{"line":4,"column":52,"index":167}}],"key":"2ry0EtJTXBhyb7dWF/MthTiIpXs="}},{"name":"../varint","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":36,"index":113}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":36,"index":113}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":36,"index":113}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":36,"index":113}}],"key":"1bBJazE+W4YcbkQUTfZHqYfl454="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var isValidBIP340Key = function isValidBIP340Key(pubkey) {\n    return pubkey.length === 32;\n  };\n  function makeConverter(TYPE_BYTE) {\n    var parent = _$$_REQUIRE(_dependencyMap[1], \"./bip32Derivation\").makeConverter(TYPE_BYTE, isValidBIP340Key);\n    function decode(keyVal) {\n      var nHashes = _$$_REQUIRE(_dependencyMap[2], \"../varint\").decode(keyVal.value);\n      var nHashesLen = _$$_REQUIRE(_dependencyMap[2], \"../varint\").encodingLength(nHashes);\n      var base = parent.decode({\n        key: keyVal.key,\n        value: keyVal.value.slice(nHashesLen + nHashes * 32)\n      });\n      var leafHashes = new Array(nHashes);\n      for (var i = 0, _offset = nHashesLen; i < nHashes; i++, _offset += 32) {\n        leafHashes[i] = keyVal.value.slice(_offset, _offset + 32);\n      }\n      return Object.assign({}, base, {\n        leafHashes: leafHashes\n      });\n    }\n    function encode(data) {\n      var base = parent.encode(data);\n      var nHashesLen = _$$_REQUIRE(_dependencyMap[2], \"../varint\").encodingLength(data.leafHashes.length);\n      var nHashesBuf = Buffer.allocUnsafe(nHashesLen);\n      _$$_REQUIRE(_dependencyMap[2], \"../varint\").encode(data.leafHashes.length, nHashesBuf);\n      var value = Buffer.concat([nHashesBuf].concat(_toConsumableArray(data.leafHashes), [base.value]));\n      return Object.assign({}, base, {\n        value: value\n      });\n    }\n    var expected = '{ ' + 'masterFingerprint: Buffer; ' + 'pubkey: Buffer; ' + 'path: string; ' + 'leafHashes: Buffer[]; ' + '}';\n    function check(data) {\n      return Array.isArray(data.leafHashes) && data.leafHashes.every(function (leafHash) {\n        return Buffer.isBuffer(leafHash) && leafHash.length === 32;\n      }) && parent.check(data);\n    }\n    return {\n      decode: decode,\n      encode: encode,\n      check: check,\n      expected: expected,\n      canAddToArray: parent.canAddToArray\n    };\n  }\n  exports.makeConverter = makeConverter;\n});","lineCount":53,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,5,0],[8,6,5,6,"isValidBIP340Key"],[8,22,5,22],[8,25,5,25],[8,34,5,6,"isValidBIP340Key"],[8,50,5,22,"isValidBIP340Key"],[8,51,5,25,"pubkey"],[8,57,5,31],[9,4,5,31],[9,11,5,35,"pubkey"],[9,17,5,41],[9,18,5,42,"length"],[9,24,5,48],[9,29,5,53],[9,31,5,55],[10,2,5,55],[11,2,6,0],[11,11,6,9,"makeConverter"],[11,24,6,22,"makeConverter"],[11,25,6,23,"TYPE_BYTE"],[11,34,6,32],[11,36,6,34],[12,4,7,2],[12,8,7,8,"parent"],[12,14,7,14],[12,17,7,17,"_$$_REQUIRE"],[12,28,7,17],[12,29,7,17,"_dependencyMap"],[12,43,7,17],[12,69,7,33,"makeConverter"],[12,82,7,46],[12,83,7,47,"TYPE_BYTE"],[12,92,7,56],[12,94,7,58,"isValidBIP340Key"],[12,110,7,74],[12,111,7,75],[13,4,8,2],[13,13,8,11,"decode"],[13,19,8,17,"decode"],[13,20,8,18,"keyVal"],[13,26,8,24],[13,28,8,26],[14,6,9,4],[14,10,9,10,"nHashes"],[14,17,9,17],[14,20,9,20,"_$$_REQUIRE"],[14,31,9,20],[14,32,9,20,"_dependencyMap"],[14,46,9,20],[14,64,9,28,"decode"],[14,70,9,34],[14,71,9,35,"keyVal"],[14,77,9,41],[14,78,9,42,"value"],[14,83,9,47],[14,84,9,48],[15,6,10,4],[15,10,10,10,"nHashesLen"],[15,20,10,20],[15,23,10,23,"_$$_REQUIRE"],[15,34,10,23],[15,35,10,23,"_dependencyMap"],[15,49,10,23],[15,67,10,31,"encodingLength"],[15,81,10,45],[15,82,10,46,"nHashes"],[15,89,10,53],[15,90,10,54],[16,6,11,4],[16,10,11,10,"base"],[16,14,11,14],[16,17,11,17,"parent"],[16,23,11,23],[16,24,11,24,"decode"],[16,30,11,30],[16,31,11,31],[17,8,12,6,"key"],[17,11,12,9],[17,13,12,11,"keyVal"],[17,19,12,17],[17,20,12,18,"key"],[17,23,12,21],[18,8,13,6,"value"],[18,13,13,11],[18,15,13,13,"keyVal"],[18,21,13,19],[18,22,13,20,"value"],[18,27,13,25],[18,28,13,26,"slice"],[18,33,13,31],[18,34,13,32,"nHashesLen"],[18,44,13,42],[18,47,13,45,"nHashes"],[18,54,13,52],[18,57,13,55],[18,59,13,57],[19,6,14,4],[19,7,14,5],[19,8,14,6],[20,6,15,4],[20,10,15,10,"leafHashes"],[20,20,15,20],[20,23,15,23],[20,27,15,27,"Array"],[20,32,15,32],[20,33,15,33,"nHashes"],[20,40,15,40],[20,41,15,41],[21,6,16,4],[21,11,16,9],[21,15,16,13,"i"],[21,16,16,14],[21,19,16,17],[21,20,16,18],[21,22,16,20,"_offset"],[21,29,16,27],[21,32,16,30,"nHashesLen"],[21,42,16,40],[21,44,16,42,"i"],[21,45,16,43],[21,48,16,46,"nHashes"],[21,55,16,53],[21,57,16,55,"i"],[21,58,16,56],[21,60,16,58],[21,62,16,60,"_offset"],[21,69,16,67],[21,73,16,71],[21,75,16,73],[21,77,16,75],[22,8,17,6,"leafHashes"],[22,18,17,16],[22,19,17,17,"i"],[22,20,17,18],[22,21,17,19],[22,24,17,22,"keyVal"],[22,30,17,28],[22,31,17,29,"value"],[22,36,17,34],[22,37,17,35,"slice"],[22,42,17,40],[22,43,17,41,"_offset"],[22,50,17,48],[22,52,17,50,"_offset"],[22,59,17,57],[22,62,17,60],[22,64,17,62],[22,65,17,63],[23,6,18,4],[24,6,19,4],[24,13,19,11,"Object"],[24,19,19,17],[24,20,19,18,"assign"],[24,26,19,24],[24,27,19,25],[24,28,19,26],[24,29,19,27],[24,31,19,29,"base"],[24,35,19,33],[24,37,19,35],[25,8,19,37,"leafHashes"],[25,18,19,47],[25,20,19,37,"leafHashes"],[26,6,19,48],[26,7,19,49],[26,8,19,50],[27,4,20,2],[28,4,21,2],[28,13,21,11,"encode"],[28,19,21,17,"encode"],[28,20,21,18,"data"],[28,24,21,22],[28,26,21,24],[29,6,22,4],[29,10,22,10,"base"],[29,14,22,14],[29,17,22,17,"parent"],[29,23,22,23],[29,24,22,24,"encode"],[29,30,22,30],[29,31,22,31,"data"],[29,35,22,35],[29,36,22,36],[30,6,23,4],[30,10,23,10,"nHashesLen"],[30,20,23,20],[30,23,23,23,"_$$_REQUIRE"],[30,34,23,23],[30,35,23,23,"_dependencyMap"],[30,49,23,23],[30,67,23,31,"encodingLength"],[30,81,23,45],[30,82,23,46,"data"],[30,86,23,50],[30,87,23,51,"leafHashes"],[30,97,23,61],[30,98,23,62,"length"],[30,104,23,68],[30,105,23,69],[31,6,24,4],[31,10,24,10,"nHashesBuf"],[31,20,24,20],[31,23,24,23,"Buffer"],[31,29,24,29],[31,30,24,30,"allocUnsafe"],[31,41,24,41],[31,42,24,42,"nHashesLen"],[31,52,24,52],[31,53,24,53],[32,6,25,4,"_$$_REQUIRE"],[32,17,25,4],[32,18,25,4,"_dependencyMap"],[32,32,25,4],[32,50,25,12,"encode"],[32,56,25,18],[32,57,25,19,"data"],[32,61,25,23],[32,62,25,24,"leafHashes"],[32,72,25,34],[32,73,25,35,"length"],[32,79,25,41],[32,81,25,43,"nHashesBuf"],[32,91,25,53],[32,92,25,54],[33,6,26,4],[33,10,26,10,"value"],[33,15,26,15],[33,18,26,18,"Buffer"],[33,24,26,24],[33,25,26,25,"concat"],[33,31,26,31],[33,33,26,33,"nHashesBuf"],[33,43,26,43],[33,45,26,43,"concat"],[33,51,26,43],[33,52,26,43,"_toConsumableArray"],[33,70,26,43],[33,71,26,48,"data"],[33,75,26,52],[33,76,26,53,"leafHashes"],[33,86,26,63],[33,90,26,65,"base"],[33,94,26,69],[33,95,26,70,"value"],[33,100,26,75],[33,102,26,76],[33,103,26,77],[34,6,27,4],[34,13,27,11,"Object"],[34,19,27,17],[34,20,27,18,"assign"],[34,26,27,24],[34,27,27,25],[34,28,27,26],[34,29,27,27],[34,31,27,29,"base"],[34,35,27,33],[34,37,27,35],[35,8,27,37,"value"],[35,13,27,42],[35,15,27,37,"value"],[36,6,27,43],[36,7,27,44],[36,8,27,45],[37,4,28,2],[38,4,29,2],[38,8,29,8,"expected"],[38,16,29,16],[38,19,30,4],[38,23,30,8],[38,26,31,4],[38,55,31,33],[38,58,32,4],[38,76,32,22],[38,79,33,4],[38,95,33,20],[38,98,34,4],[38,122,34,28],[38,125,35,4],[38,128,35,7],[39,4,36,2],[39,13,36,11,"check"],[39,18,36,16,"check"],[39,19,36,17,"data"],[39,23,36,21],[39,25,36,23],[40,6,37,4],[40,13,38,6,"Array"],[40,18,38,11],[40,19,38,12,"isArray"],[40,26,38,19],[40,27,38,20,"data"],[40,31,38,24],[40,32,38,25,"leafHashes"],[40,42,38,35],[40,43,38,36],[40,47,39,6,"data"],[40,51,39,10],[40,52,39,11,"leafHashes"],[40,62,39,21],[40,63,39,22,"every"],[40,68,39,27],[40,69,40,8],[40,79,40,8,"leafHash"],[40,87,40,16],[41,8,40,16],[41,15,40,20,"Buffer"],[41,21,40,26],[41,22,40,27,"isBuffer"],[41,30,40,35],[41,31,40,36,"leafHash"],[41,39,40,44],[41,40,40,45],[41,44,40,49,"leafHash"],[41,52,40,57],[41,53,40,58,"length"],[41,59,40,64],[41,64,40,69],[41,66,40,71],[42,6,40,71],[42,7,41,6],[42,8,41,7],[42,12,42,6,"parent"],[42,18,42,12],[42,19,42,13,"check"],[42,24,42,18],[42,25,42,19,"data"],[42,29,42,23],[42,30,42,24],[43,4,44,2],[44,4,45,2],[44,11,45,9],[45,6,46,4,"decode"],[45,12,46,10],[45,14,46,4,"decode"],[45,20,46,10],[46,6,47,4,"encode"],[46,12,47,10],[46,14,47,4,"encode"],[46,20,47,10],[47,6,48,4,"check"],[47,11,48,9],[47,13,48,4,"check"],[47,18,48,9],[48,6,49,4,"expected"],[48,14,49,12],[48,16,49,4,"expected"],[48,24,49,12],[49,6,50,4,"canAddToArray"],[49,19,50,17],[49,21,50,19,"parent"],[49,27,50,25],[49,28,50,26,"canAddToArray"],[50,4,51,2],[50,5,51,3],[51,2,52,0],[52,2,53,0,"exports"],[52,9,53,7],[52,10,53,8,"makeConverter"],[52,23,53,21],[52,26,53,24,"makeConverter"],[52,39,53,37],[53,0,53,38],[53,3]],"functionMap":{"names":["<global>","isValidBIP340Key","makeConverter","decode","encode","check","data.leafHashes.every$argument_0"],"mappings":"AAA;yBCI,8BD;AEC;ECE;GDY;EEC;GFO;EGQ;QCI,+DD;GHI;CFQ"}},"type":"js/module"}]}