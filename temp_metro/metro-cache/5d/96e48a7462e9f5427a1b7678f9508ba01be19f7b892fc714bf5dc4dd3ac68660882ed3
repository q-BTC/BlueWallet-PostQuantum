{"dependencies":[{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}},{"start":{"line":7,"column":11,"index":184},"end":{"line":7,"column":27,"index":200}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"bech32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}},{"start":{"line":4,"column":15,"index":71},"end":{"line":4,"column":32,"index":88}}],"key":"ugm55roL35z1WKOi63WbzCYR5fI="}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":19,"index":33},"end":{"line":3,"column":41,"index":55}}],"key":"7Wxhpesb6O8KtkMXbqnF6GdF3fo="}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}},{"start":{"line":6,"column":15,"index":143},"end":{"line":6,"column":44,"index":172}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":25,"index":226},"end":{"line":8,"column":57,"index":258}},{"start":{"line":8,"column":25,"index":226},"end":{"line":8,"column":57,"index":258}},{"start":{"line":8,"column":25,"index":226},"end":{"line":8,"column":57,"index":258}},{"start":{"line":8,"column":25,"index":226},"end":{"line":8,"column":57,"index":258}},{"start":{"line":8,"column":25,"index":226},"end":{"line":8,"column":57,"index":258}}],"key":"PV1IDhC/8j/Z7SyCy2R2SKCUYnk="}},{"name":"lodash/cloneDeep","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":18,"index":277},"end":{"line":9,"column":45,"index":304}},{"start":{"line":9,"column":18,"index":277},"end":{"line":9,"column":45,"index":304}}],"key":"4ouDR+tMG26QEunYI+6kTsjZMDU="}},{"name":"secp256k1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":18,"index":107},"end":{"line":5,"column":38,"index":127}},{"start":{"line":5,"column":18,"index":107},"end":{"line":5,"column":38,"index":127}},{"start":{"line":5,"column":18,"index":107},"end":{"line":5,"column":38,"index":127}},{"start":{"line":5,"column":18,"index":107},"end":{"line":5,"column":38,"index":127}},{"start":{"line":5,"column":18,"index":107},"end":{"line":5,"column":38,"index":127}},{"start":{"line":5,"column":18,"index":107},"end":{"line":5,"column":38,"index":127}}],"key":"NgEpSq2GdmBi4a5dIwplK90Jy68="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // defaults for encode; default timestamp is current time at call\n  var DEFAULTNETWORK = {\n    // default network is bitcoin\n    bech32: 'bc',\n    pubKeyHash: 0x00,\n    scriptHash: 0x05,\n    validWitnessVersions: [0, 1]\n  };\n  var TESTNETWORK = {\n    bech32: 'tb',\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    validWitnessVersions: [0, 1]\n  };\n  var REGTESTNETWORK = {\n    bech32: 'bcrt',\n    pubKeyHash: 0x6f,\n    scriptHash: 0xc4,\n    validWitnessVersions: [0, 1]\n  };\n  var SIMNETWORK = {\n    bech32: 'sb',\n    pubKeyHash: 0x3f,\n    scriptHash: 0x7b,\n    validWitnessVersions: [0, 1]\n  };\n  var DEFAULTEXPIRETIME = 3600;\n  var DEFAULTCLTVEXPIRY = 9;\n  var DEFAULTDESCRIPTION = '';\n  var DEFAULTFEATUREBITS = {\n    word_length: 4,\n    // last bit set default is 15\n    var_onion_optin: {\n      required: false,\n      supported: true\n    },\n    payment_secret: {\n      required: false,\n      supported: true\n    }\n  };\n  var FEATUREBIT_ORDER = ['option_data_loss_protect', 'initial_routing_sync', 'option_upfront_shutdown_script', 'gossip_queries', 'var_onion_optin', 'gossip_queries_ex', 'option_static_remotekey', 'payment_secret', 'basic_mpp', 'option_support_large_channel'];\n  var DIVISORS = {\n    m: new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e3, 10),\n    u: new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e6, 10),\n    n: new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e9, 10),\n    p: new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e12, 10)\n  };\n  var MAX_MILLISATS = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))('2100000000000000000', 10);\n  var MILLISATS_PER_BTC = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e11, 10);\n  var MILLISATS_PER_MILLIBTC = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e8, 10);\n  var MILLISATS_PER_MICROBTC = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e5, 10);\n  var MILLISATS_PER_NANOBTC = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1e2, 10);\n  var PICOBTC_PER_MILLISATS = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(10, 10);\n  var TAGCODES = {\n    payment_hash: 1,\n    payment_secret: 16,\n    description: 13,\n    payee_node_key: 19,\n    purpose_commit_hash: 23,\n    // commit to longer descriptions (like a website)\n    expire_time: 6,\n    // default: 3600 (1 hour)\n    min_final_cltv_expiry: 24,\n    // default: 9\n    fallback_address: 9,\n    routing_info: 3,\n    // for extra routing info (private etc.)\n    feature_bits: 5\n  };\n\n  // reverse the keys and values of TAGCODES and insert into TAGNAMES\n  var TAGNAMES = {};\n  for (var i = 0, keys = Object.keys(TAGCODES); i < keys.length; i++) {\n    var currentName = keys[i];\n    var currentCode = TAGCODES[keys[i]].toString();\n    TAGNAMES[currentCode] = currentName;\n  }\n  var TAGENCODERS = {\n    payment_hash: hexToWord,\n    // 256 bits\n    payment_secret: hexToWord,\n    // 256 bits\n    description: textToWord,\n    // string variable length\n    payee_node_key: hexToWord,\n    // 264 bits\n    purpose_commit_hash: purposeCommitEncoder,\n    // 256 bits\n    expire_time: intBEToWords,\n    // default: 3600 (1 hour)\n    min_final_cltv_expiry: intBEToWords,\n    // default: 9\n    fallback_address: fallbackAddressEncoder,\n    routing_info: routingInfoEncoder,\n    // for extra routing info (private etc.)\n    feature_bits: featureBitsEncoder\n  };\n  var TAGPARSERS = {\n    1: function _(words) {\n      return wordsToBuffer(words, true).toString('hex');\n    },\n    // 256 bits\n    16: function _(words) {\n      return wordsToBuffer(words, true).toString('hex');\n    },\n    // 256 bits\n    13: function _(words) {\n      return wordsToBuffer(words, true).toString('utf8');\n    },\n    // string variable length\n    19: function _(words) {\n      return wordsToBuffer(words, true).toString('hex');\n    },\n    // 264 bits\n    23: function _(words) {\n      return wordsToBuffer(words, true).toString('hex');\n    },\n    // 256 bits\n    6: wordsToIntBE,\n    // default: 3600 (1 hour)\n    24: wordsToIntBE,\n    // default: 9\n    9: fallbackAddressParser,\n    3: routingInfoParser,\n    // for extra routing info (private etc.)\n    5: featureBitsParser // keep feature bits as array of 5 bit words\n  };\n  var unknownTagName = 'unknownTag';\n  function unknownEncoder(data) {\n    data.words = _$$_REQUIRE(_dependencyMap[1], \"bech32\").decode(data.words, Number.MAX_SAFE_INTEGER).words;\n    return data;\n  }\n  function getUnknownParser(tagCode) {\n    return function (words) {\n      return {\n        tagCode: parseInt(tagCode),\n        words: _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode('unknown', words, Number.MAX_SAFE_INTEGER)\n      };\n    };\n  }\n  function wordsToIntBE(words) {\n    return words.reverse().reduce(function (total, item, index) {\n      return total + item * Math.pow(32, index);\n    }, 0);\n  }\n  function intBEToWords(intBE, bits) {\n    var words = [];\n    if (bits === undefined) bits = 5;\n    intBE = Math.floor(intBE);\n    if (intBE === 0) return [0];\n    while (intBE > 0) {\n      words.push(intBE & Math.pow(2, bits) - 1);\n      intBE = Math.floor(intBE / Math.pow(2, bits));\n    }\n    return words.reverse();\n  }\n  function sha256(data) {\n    return _$$_REQUIRE(_dependencyMap[2], \"create-hash\")('sha256').update(data).digest();\n  }\n  function convert(data, inBits, outBits) {\n    var value = 0;\n    var bits = 0;\n    var maxV = (1 << outBits) - 1;\n    var result = [];\n    for (var _i = 0; _i < data.length; ++_i) {\n      value = value << inBits | data[_i];\n      bits += inBits;\n      while (bits >= outBits) {\n        bits -= outBits;\n        result.push(value >> bits & maxV);\n      }\n    }\n    if (bits > 0) {\n      result.push(value << outBits - bits & maxV);\n    }\n    return result;\n  }\n  function wordsToBuffer(words, trim) {\n    var buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(convert(words, 5, 8, true));\n    if (trim && words.length * 5 % 8 !== 0) {\n      buffer = buffer.slice(0, -1);\n    }\n    return buffer;\n  }\n  function hexToBuffer(hex) {\n    if (hex !== undefined && (typeof hex === 'string' || hex instanceof String) && hex.match(/^([a-zA-Z0-9]{2})*$/)) {\n      return _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(hex, 'hex');\n    }\n    return hex;\n  }\n  function textToBuffer(text) {\n    return _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(text, 'utf8');\n  }\n  function hexToWord(hex) {\n    var buffer = hexToBuffer(hex);\n    return _$$_REQUIRE(_dependencyMap[1], \"bech32\").toWords(buffer);\n  }\n  function textToWord(text) {\n    var buffer = textToBuffer(text);\n    var words = _$$_REQUIRE(_dependencyMap[1], \"bech32\").toWords(buffer);\n    return words;\n  }\n\n  // see encoder for details\n  function fallbackAddressParser(words, network) {\n    var version = words[0];\n    words = words.slice(1);\n    var addressHash = wordsToBuffer(words, true);\n    var address = null;\n    switch (version) {\n      case 17:\n        address = _$$_REQUIRE(_dependencyMap[4], \"bitcoinjs-lib\").address.toBase58Check(addressHash, network.pubKeyHash);\n        break;\n      case 18:\n        address = _$$_REQUIRE(_dependencyMap[4], \"bitcoinjs-lib\").address.toBase58Check(addressHash, network.scriptHash);\n        break;\n      case 0:\n      case 1:\n        address = _$$_REQUIRE(_dependencyMap[4], \"bitcoinjs-lib\").address.toBech32(addressHash, version, network.bech32);\n        break;\n    }\n    return {\n      code: version,\n      address: address,\n      addressHash: addressHash.toString('hex')\n    };\n  }\n\n  // the code is the witness version OR 17 for P2PKH OR 18 for P2SH\n  // anything besides code 17 or 18 should be bech32 or bech32m encoded address.\n  // 1 word for the code, and right pad with 0 if necessary for the addressHash\n  // (address parsing for encode is done in the encode function)\n  function fallbackAddressEncoder(data, network) {\n    return [data.code].concat(hexToWord(data.addressHash));\n  }\n\n  // first convert from words to buffer, trimming padding where necessary\n  // parse in 51 byte chunks. See encoder for details.\n  function routingInfoParser(words) {\n    var routes = [];\n    var pubkey, shortChannelId, feeBaseMSats, feeProportionalMillionths, cltvExpiryDelta;\n    var routesBuffer = wordsToBuffer(words, true);\n    while (routesBuffer.length > 0) {\n      pubkey = routesBuffer.slice(0, 33).toString('hex'); // 33 bytes\n      shortChannelId = routesBuffer.slice(33, 41).toString('hex'); // 8 bytes\n      feeBaseMSats = parseInt(routesBuffer.slice(41, 45).toString('hex'), 16); // 4 bytes\n      feeProportionalMillionths = parseInt(routesBuffer.slice(45, 49).toString('hex'), 16); // 4 bytes\n      cltvExpiryDelta = parseInt(routesBuffer.slice(49, 51).toString('hex'), 16); // 2 bytes\n\n      routesBuffer = routesBuffer.slice(51);\n      routes.push({\n        pubkey: pubkey,\n        short_channel_id: shortChannelId,\n        fee_base_msat: feeBaseMSats,\n        fee_proportional_millionths: feeProportionalMillionths,\n        cltv_expiry_delta: cltvExpiryDelta\n      });\n    }\n    return routes;\n  }\n  function featureBitsParser(words) {\n    var bools = words.slice().reverse().map(function (word) {\n      return [!!(word & 1), !!(word & 2), !!(word & 4), !!(word & 8), !!(word & 16)];\n    }).reduce(function (finalArr, itemArr) {\n      return finalArr.concat(itemArr);\n    }, []);\n    while (bools.length < FEATUREBIT_ORDER.length * 2) {\n      bools.push(false);\n    }\n    var featureBits = {\n      word_length: words.length\n    };\n    FEATUREBIT_ORDER.forEach(function (featureName, index) {\n      featureBits[featureName] = {\n        required: bools[index * 2],\n        supported: bools[index * 2 + 1]\n      };\n    });\n    if (bools.length > FEATUREBIT_ORDER.length * 2) {\n      var extraBits = bools.slice(FEATUREBIT_ORDER.length * 2);\n      featureBits.extra_bits = {\n        start_bit: FEATUREBIT_ORDER.length * 2,\n        bits: extraBits,\n        has_required: extraBits.reduce(function (result, bit, index) {\n          return index % 2 !== 0 ? result || false : result || bit;\n        }, false)\n      };\n    } else {\n      featureBits.extra_bits = {\n        start_bit: FEATUREBIT_ORDER.length * 2,\n        bits: [],\n        has_required: false\n      };\n    }\n    return featureBits;\n  }\n  function featureBitsEncoder(featureBits) {\n    var wordsLength = featureBits.word_length;\n    var bools = [];\n    FEATUREBIT_ORDER.forEach(function (featureName) {\n      bools.push(!!(featureBits[featureName] || {}).required);\n      bools.push(!!(featureBits[featureName] || {}).supported);\n    });\n    // Make sure that only minimal number of bits is encoded\n    while (bools[bools.length - 1] === false) {\n      bools.pop();\n    }\n    while (bools.length % 5 !== 0) {\n      bools.push(false);\n    }\n    if (featureBits.extra_bits && Array.isArray(featureBits.extra_bits.bits) && featureBits.extra_bits.bits.length > 0) {\n      while (bools.length < featureBits.extra_bits.start_bit) {\n        bools.push(false);\n      }\n      bools = bools.concat(featureBits.extra_bits.bits);\n    }\n    if (wordsLength !== undefined && bools.length / 5 > wordsLength) {\n      throw new Error('word_length is too small to contain all featureBits');\n    } else if (wordsLength === undefined) {\n      wordsLength = Math.ceil(bools.length / 5);\n    }\n    return new Array(wordsLength).fill(0).map(function (_, index) {\n      return bools[index * 5 + 4] << 4 | bools[index * 5 + 3] << 3 | bools[index * 5 + 2] << 2 | bools[index * 5 + 1] << 1 | bools[index * 5] << 0;\n    }).reverse();\n  }\n\n  // routing info is encoded first as a large buffer\n  // 51 bytes for each channel\n  // 33 byte pubkey, 8 byte short_channel_id, 4 byte millisatoshi base fee (left padded)\n  // 4 byte fee proportional millionths and a 2 byte left padded CLTV expiry delta.\n  // after encoding these 51 byte chunks and concatenating them\n  // convert to words right padding 0 bits.\n  function routingInfoEncoder(datas) {\n    var buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from([]);\n    datas.forEach(function (data) {\n      buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([buffer, hexToBuffer(data.pubkey)]);\n      buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([buffer, hexToBuffer(data.short_channel_id)]);\n      buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([buffer, _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from([0, 0, 0].concat(intBEToWords(data.fee_base_msat, 8)).slice(-4))]);\n      buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([buffer, _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from([0, 0, 0].concat(intBEToWords(data.fee_proportional_millionths, 8)).slice(-4))]);\n      buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([buffer, _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from([0].concat(intBEToWords(data.cltv_expiry_delta, 8)).slice(-2))]);\n    });\n    return hexToWord(buffer);\n  }\n\n  // if text, return the sha256 hash of the text as words.\n  // if hex, return the words representation of that data.\n  function purposeCommitEncoder(data) {\n    var buffer;\n    if (data !== undefined && (typeof data === 'string' || data instanceof String)) {\n      if (data.match(/^([a-zA-Z0-9]{2})*$/)) {\n        buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(data, 'hex');\n      } else {\n        buffer = sha256(_$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(data, 'utf8'));\n      }\n    } else {\n      throw new Error('purpose or purpose commit must be a string or hex string');\n    }\n    return _$$_REQUIRE(_dependencyMap[1], \"bech32\").toWords(buffer);\n  }\n  function tagsItems(tags, tagName) {\n    var tag = tags.filter(function (item) {\n      return item.tagName === tagName;\n    });\n    var data = tag.length > 0 ? tag[0].data : null;\n    return data;\n  }\n  function tagsContainItem(tags, tagName) {\n    return tagsItems(tags, tagName) !== null;\n  }\n  function orderKeys(unorderedObj, forDecode) {\n    var orderedObj = {};\n    Object.keys(unorderedObj).sort().forEach(function (key) {\n      orderedObj[key] = unorderedObj[key];\n    });\n    if (forDecode === true) {\n      var cacheName = '__tagsObject_cache';\n      Object.defineProperty(orderedObj, 'tagsObject', {\n        get: function get() {\n          if (!this[cacheName]) {\n            Object.defineProperty(this, cacheName, {\n              value: getTagsObject(this.tags)\n            });\n          }\n          return this[cacheName];\n        }\n      });\n    }\n    return orderedObj;\n  }\n  function satToHrp(satoshis) {\n    if (!satoshis.toString().match(/^\\d+$/)) {\n      throw new Error('satoshis must be an integer');\n    }\n    var millisatoshisBN = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(satoshis, 10);\n    return millisatToHrp(millisatoshisBN.mul(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1000, 10)));\n  }\n  function millisatToHrp(millisatoshis) {\n    if (!millisatoshis.toString().match(/^\\d+$/)) {\n      throw new Error('millisatoshis must be an integer');\n    }\n    var millisatoshisBN = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(millisatoshis, 10);\n    var millisatoshisString = millisatoshisBN.toString(10);\n    var millisatoshisLength = millisatoshisString.length;\n    var divisorString, valueString;\n    if (millisatoshisLength > 11 && /0{11}$/.test(millisatoshisString)) {\n      divisorString = '';\n      valueString = millisatoshisBN.div(MILLISATS_PER_BTC).toString(10);\n    } else if (millisatoshisLength > 8 && /0{8}$/.test(millisatoshisString)) {\n      divisorString = 'm';\n      valueString = millisatoshisBN.div(MILLISATS_PER_MILLIBTC).toString(10);\n    } else if (millisatoshisLength > 5 && /0{5}$/.test(millisatoshisString)) {\n      divisorString = 'u';\n      valueString = millisatoshisBN.div(MILLISATS_PER_MICROBTC).toString(10);\n    } else if (millisatoshisLength > 2 && /0{2}$/.test(millisatoshisString)) {\n      divisorString = 'n';\n      valueString = millisatoshisBN.div(MILLISATS_PER_NANOBTC).toString(10);\n    } else {\n      divisorString = 'p';\n      valueString = millisatoshisBN.mul(PICOBTC_PER_MILLISATS).toString(10);\n    }\n    return valueString + divisorString;\n  }\n  function hrpToSat(hrpString, outputString) {\n    var millisatoshisBN = hrpToMillisat(hrpString, false);\n    if (!millisatoshisBN.mod(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1000, 10)).eq(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(0, 10))) {\n      throw new Error('Amount is outside of valid range');\n    }\n    var result = millisatoshisBN.div(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(1000, 10));\n    return outputString ? result.toString() : result;\n  }\n  function hrpToMillisat(hrpString, outputString) {\n    var divisor, value;\n    if (hrpString.slice(-1).match(/^[munp]$/)) {\n      divisor = hrpString.slice(-1);\n      value = hrpString.slice(0, -1);\n    } else if (hrpString.slice(-1).match(/^[^munp0-9]$/)) {\n      throw new Error('Not a valid multiplier for the amount');\n    } else {\n      value = hrpString;\n    }\n    if (!value.match(/^\\d+$/)) throw new Error('Not a valid human readable amount');\n    var valueBN = new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(value, 10);\n    var millisatoshisBN = divisor ? valueBN.mul(MILLISATS_PER_BTC).div(DIVISORS[divisor]) : valueBN.mul(MILLISATS_PER_BTC);\n    if (divisor === 'p' && !valueBN.mod(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(10, 10)).eq(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(0, 10)) || millisatoshisBN.gt(MAX_MILLISATS)) {\n      throw new Error('Amount is outside of valid range');\n    }\n    return outputString ? millisatoshisBN.toString() : millisatoshisBN;\n  }\n  function sign(inputPayReqObj, inputPrivateKey) {\n    var payReqObj = _$$_REQUIRE(_dependencyMap[5], \"lodash/cloneDeep\")(inputPayReqObj);\n    var privateKey = hexToBuffer(inputPrivateKey);\n    if (payReqObj.complete && payReqObj.paymentRequest) return payReqObj;\n    if (privateKey === undefined || privateKey.length !== 32 || !_$$_REQUIRE(_dependencyMap[6], \"secp256k1\").privateKeyVerify(privateKey)) {\n      throw new Error('privateKey must be a 32 byte Buffer and valid private key');\n    }\n    var nodePublicKey, tagNodePublicKey;\n    // If there is a payee_node_key tag convert to buffer\n    if (tagsContainItem(payReqObj.tags, TAGNAMES['19'])) {\n      tagNodePublicKey = hexToBuffer(tagsItems(payReqObj.tags, TAGNAMES['19']));\n    }\n    // If there is payeeNodeKey attribute, convert to buffer\n    if (payReqObj.payeeNodeKey) {\n      nodePublicKey = hexToBuffer(payReqObj.payeeNodeKey);\n    }\n    // If they are not equal throw an error\n    if (nodePublicKey && tagNodePublicKey && !tagNodePublicKey.equals(nodePublicKey)) {\n      throw new Error('payee node key tag and payeeNodeKey attribute must match');\n    }\n\n    // make sure if either exist they are in nodePublicKey\n    nodePublicKey = tagNodePublicKey || nodePublicKey;\n    var publicKey = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(_$$_REQUIRE(_dependencyMap[6], \"secp256k1\").publicKeyCreate(privateKey));\n\n    // Check if pubkey matches for private key\n    if (nodePublicKey && !publicKey.equals(nodePublicKey)) {\n      throw new Error('The private key given is not the private key of the node public key given');\n    }\n    var words = _$$_REQUIRE(_dependencyMap[1], \"bech32\").decode(payReqObj.wordsTemp, Number.MAX_SAFE_INTEGER).words;\n\n    // the preimage for the signing data is the buffer of the prefix concatenated\n    // with the buffer conversion of the data words excluding the signature\n    // (right padded with 0 bits)\n    var toSign = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([_$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(payReqObj.prefix, 'utf8'), wordsToBuffer(words)]);\n    // single SHA256 hash for the signature\n    var payReqHash = sha256(toSign);\n\n    // signature is 64 bytes (32 byte r value and 32 byte s value concatenated)\n    // PLUS one extra byte appended to the right with the recoveryID in [0,1,2,3]\n    // Then convert to 5 bit words with right padding 0 bits.\n    var sigObj = _$$_REQUIRE(_dependencyMap[6], \"secp256k1\").ecdsaSign(payReqHash, privateKey);\n    sigObj.signature = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(sigObj.signature);\n    var sigWords = hexToWord(sigObj.signature.toString('hex') + '0' + sigObj.recid);\n\n    // append signature words to the words, mark as complete, and add the payreq\n    payReqObj.payeeNodeKey = publicKey.toString('hex');\n    payReqObj.signature = sigObj.signature.toString('hex');\n    payReqObj.recoveryFlag = sigObj.recid;\n    payReqObj.wordsTemp = _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode('temp', words.concat(sigWords), Number.MAX_SAFE_INTEGER);\n    payReqObj.complete = true;\n    payReqObj.paymentRequest = _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode(payReqObj.prefix, words.concat(sigWords), Number.MAX_SAFE_INTEGER);\n    return orderKeys(payReqObj);\n  }\n  function encode(inputData, addDefaults) {\n    // we don't want to affect the data being passed in, so we copy the object\n    var data = _$$_REQUIRE(_dependencyMap[5], \"lodash/cloneDeep\")(inputData);\n\n    // by default we will add default values to description, expire time, and min cltv\n    if (addDefaults === undefined) addDefaults = true;\n    var canReconstruct = !(data.signature === undefined || data.recoveryFlag === undefined);\n\n    // if no cointype is defined, set to testnet\n    var coinTypeObj;\n    if (data.network === undefined && !canReconstruct) {\n      data.network = DEFAULTNETWORK;\n      coinTypeObj = DEFAULTNETWORK;\n    } else if (data.network === undefined && canReconstruct) {\n      throw new Error('Need network for proper payment request reconstruction');\n    } else {\n      // if the coinType is not a valid name of a network in bitcoinjs-lib, fail\n      if (!data.network.bech32 || data.network.pubKeyHash === undefined || data.network.scriptHash === undefined || !Array.isArray(data.network.validWitnessVersions)) throw new Error('Invalid network');\n      coinTypeObj = data.network;\n    }\n\n    // use current time as default timestamp (seconds)\n    if (data.timestamp === undefined && !canReconstruct) {\n      data.timestamp = Math.floor(new Date().getTime() / 1000);\n    } else if (data.timestamp === undefined && canReconstruct) {\n      throw new Error('Need timestamp for proper payment request reconstruction');\n    }\n    if (data.tags === undefined) throw new Error('Payment Requests need tags array');\n\n    // If no payment hash, fail\n    if (!tagsContainItem(data.tags, TAGNAMES['1'])) {\n      throw new Error('Lightning Payment Request needs a payment hash');\n    }\n    // If no feature bits when payment secret is found, fail\n    if (tagsContainItem(data.tags, TAGNAMES['16'])) {\n      if (!tagsContainItem(data.tags, TAGNAMES['5'])) {\n        if (addDefaults) {\n          data.tags.push({\n            tagName: TAGNAMES['5'],\n            data: DEFAULTFEATUREBITS\n          });\n        } else {\n          throw new Error('Payment request requires feature bits with at least payment secret support flagged if payment secret is included');\n        }\n      } else {\n        var fB = tagsItems(data.tags, TAGNAMES['5']);\n        if (!fB.payment_secret || !fB.payment_secret.supported && !fB.payment_secret.required) {\n          throw new Error('Payment request requires feature bits with at least payment secret support flagged if payment secret is included');\n        }\n      }\n    }\n    // If no description or purpose commit hash/message, fail\n    if (!tagsContainItem(data.tags, TAGNAMES['13']) && !tagsContainItem(data.tags, TAGNAMES['23'])) {\n      if (addDefaults) {\n        data.tags.push({\n          tagName: TAGNAMES['13'],\n          data: DEFAULTDESCRIPTION\n        });\n      } else {\n        throw new Error('Payment request requires description or purpose commit hash');\n      }\n    }\n\n    // If a description exists, check to make sure the buffer isn't greater than\n    // 639 bytes long, since 639 * 8 / 5 = 1023 words (5 bit) when padded\n    if (tagsContainItem(data.tags, TAGNAMES['13']) && _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(tagsItems(data.tags, TAGNAMES['13']), 'utf8').length > 639) {\n      throw new Error('Description is too long: Max length 639 bytes');\n    }\n\n    // if there's no expire time, and it is not reconstructing (must have private key)\n    // default to adding a 3600 second expire time (1 hour)\n    if (!tagsContainItem(data.tags, TAGNAMES['6']) && !canReconstruct && addDefaults) {\n      data.tags.push({\n        tagName: TAGNAMES['6'],\n        data: DEFAULTEXPIRETIME\n      });\n    }\n\n    // if there's no minimum cltv time, and it is not reconstructing (must have private key)\n    // default to adding a 9 block minimum cltv time (90 minutes for bitcoin)\n    if (!tagsContainItem(data.tags, TAGNAMES['24']) && !canReconstruct && addDefaults) {\n      data.tags.push({\n        tagName: TAGNAMES['24'],\n        data: DEFAULTCLTVEXPIRY\n      });\n    }\n    var nodePublicKey, tagNodePublicKey;\n    // If there is a payee_node_key tag convert to buffer\n    if (tagsContainItem(data.tags, TAGNAMES['19'])) tagNodePublicKey = hexToBuffer(tagsItems(data.tags, TAGNAMES['19']));\n    // If there is payeeNodeKey attribute, convert to buffer\n    if (data.payeeNodeKey) nodePublicKey = hexToBuffer(data.payeeNodeKey);\n    if (nodePublicKey && tagNodePublicKey && !tagNodePublicKey.equals(nodePublicKey)) {\n      throw new Error('payeeNodeKey and tag payee node key do not match');\n    }\n    // in case we have one or the other, make sure it's in nodePublicKey\n    nodePublicKey = nodePublicKey || tagNodePublicKey;\n    if (nodePublicKey) data.payeeNodeKey = nodePublicKey.toString('hex');\n    var code, addressHash, address;\n    // If there is a fallback address tag we must check it is valid\n    if (tagsContainItem(data.tags, TAGNAMES['9'])) {\n      var addrData = tagsItems(data.tags, TAGNAMES['9']);\n      // Most people will just provide address so Hash and code will be undefined here\n      address = addrData.address;\n      addressHash = addrData.addressHash;\n      code = addrData.code;\n      if (addressHash === undefined || code === undefined) {\n        var bech32addr, base58addr;\n        try {\n          bech32addr = _$$_REQUIRE(_dependencyMap[4], \"bitcoinjs-lib\").address.fromBech32(address);\n          addressHash = bech32addr.data;\n          code = bech32addr.version;\n        } catch (e) {\n          try {\n            base58addr = _$$_REQUIRE(_dependencyMap[4], \"bitcoinjs-lib\").address.fromBase58Check(address);\n            if (base58addr.version === coinTypeObj.pubKeyHash) {\n              code = 17;\n            } else if (base58addr.version === coinTypeObj.scriptHash) {\n              code = 18;\n            }\n            addressHash = base58addr.hash;\n          } catch (f) {\n            throw new Error('Fallback address type is unknown');\n          }\n        }\n        if (bech32addr && !(bech32addr.version in coinTypeObj.validWitnessVersions)) {\n          throw new Error('Fallback address witness version is unknown');\n        }\n        if (bech32addr && bech32addr.prefix !== coinTypeObj.bech32) {\n          throw new Error('Fallback address network type does not match payment request network type');\n        }\n        if (base58addr && base58addr.version !== coinTypeObj.pubKeyHash && base58addr.version !== coinTypeObj.scriptHash) {\n          throw new Error('Fallback address version (base58) is unknown or the network type is incorrect');\n        }\n\n        // FIXME: If addressHash or code is missing, add them to the original Object\n        // after parsing the address value... this changes the actual attributes of the data object.\n        // Not very clean.\n        // Without this, a person can not specify a fallback address tag with only the address key.\n        addrData.addressHash = addressHash.toString('hex');\n        addrData.code = code;\n      }\n    }\n\n    // If there is route info tag, check that each route has all 4 necessary info\n    if (tagsContainItem(data.tags, TAGNAMES['3'])) {\n      var routingInfo = tagsItems(data.tags, TAGNAMES['3']);\n      routingInfo.forEach(function (route) {\n        if (route.pubkey === undefined || route.short_channel_id === undefined || route.fee_base_msat === undefined || route.fee_proportional_millionths === undefined || route.cltv_expiry_delta === undefined) {\n          throw new Error('Routing info is incomplete');\n        }\n        if (!_$$_REQUIRE(_dependencyMap[6], \"secp256k1\").publicKeyVerify(hexToBuffer(route.pubkey))) {\n          throw new Error('Routing info pubkey is not a valid pubkey');\n        }\n        var shortId = hexToBuffer(route.short_channel_id);\n        if (!(shortId instanceof _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer) || shortId.length !== 8) {\n          throw new Error('Routing info short channel id must be 8 bytes');\n        }\n        if (typeof route.fee_base_msat !== 'number' || Math.floor(route.fee_base_msat) !== route.fee_base_msat) {\n          throw new Error('Routing info fee base msat is not an integer');\n        }\n        if (typeof route.fee_proportional_millionths !== 'number' || Math.floor(route.fee_proportional_millionths) !== route.fee_proportional_millionths) {\n          throw new Error('Routing info fee proportional millionths is not an integer');\n        }\n        if (typeof route.cltv_expiry_delta !== 'number' || Math.floor(route.cltv_expiry_delta) !== route.cltv_expiry_delta) {\n          throw new Error('Routing info cltv expiry delta is not an integer');\n        }\n      });\n    }\n    var prefix = 'ln';\n    prefix += coinTypeObj.bech32;\n    var hrpString;\n    // calculate the smallest possible integer (removing zeroes) and add the best\n    // divisor (m = milli, u = micro, n = nano, p = pico)\n    if (data.millisatoshis && data.satoshis) {\n      hrpString = millisatToHrp(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(data.millisatoshis, 10));\n      var hrpStringSat = satToHrp(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(data.satoshis, 10));\n      if (hrpStringSat !== hrpString) {\n        throw new Error('satoshis and millisatoshis do not match');\n      }\n    } else if (data.millisatoshis) {\n      hrpString = millisatToHrp(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(data.millisatoshis, 10));\n    } else if (data.satoshis) {\n      hrpString = satToHrp(new (_$$_REQUIRE(_dependencyMap[0], \"bn.js\"))(data.satoshis, 10));\n    } else {\n      hrpString = '';\n    }\n\n    // bech32 human readable part is lnbc2500m (ln + coinbech32 + satoshis (optional))\n    // lnbc or lntb would be valid as well. (no value specified)\n    prefix += hrpString;\n\n    // timestamp converted to 5 bit number array (left padded with 0 bits, NOT right padded)\n    var timestampWords = intBEToWords(data.timestamp);\n    while (timestampWords.length < 7) {\n      timestampWords.unshift(0);\n    }\n    var tags = data.tags;\n    var tagWords = [];\n    tags.forEach(function (tag) {\n      var possibleTagNames = Object.keys(TAGENCODERS);\n      if (canReconstruct) possibleTagNames.push(unknownTagName);\n      // check if the tagName exists in the encoders object, if not throw Error.\n      if (possibleTagNames.indexOf(tag.tagName) === -1) {\n        throw new Error('Unknown tag key: ' + tag.tagName);\n      }\n      var words;\n      if (tag.tagName !== unknownTagName) {\n        // each tag starts with 1 word code for the tag\n        tagWords.push(TAGCODES[tag.tagName]);\n        var encoder = TAGENCODERS[tag.tagName];\n        words = encoder(tag.data);\n      } else {\n        var result = unknownEncoder(tag.data);\n        tagWords.push(result.tagCode);\n        words = result.words;\n      }\n      // after the tag code, 2 words are used to store the length (in 5 bit words) of the tag data\n      // (also left padded, most integers are left padded while buffers are right padded)\n      tagWords = tagWords.concat([0].concat(intBEToWords(words.length)).slice(-2));\n      // then append the tag data words\n      tagWords = tagWords.concat(words);\n    });\n\n    // the data part of the bech32 is TIMESTAMP || TAGS || SIGNATURE\n    // currently dataWords = TIMESTAMP || TAGS\n    var dataWords = timestampWords.concat(tagWords);\n\n    // the preimage for the signing data is the buffer of the prefix concatenated\n    // with the buffer conversion of the data words excluding the signature\n    // (right padded with 0 bits)\n    var toSign = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([_$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(prefix, 'utf8'), _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(convert(dataWords, 5, 8))]);\n    // single SHA256 hash for the signature\n    var payReqHash = sha256(toSign);\n\n    // signature is 64 bytes (32 byte r value and 32 byte s value concatenated)\n    // PLUS one extra byte appended to the right with the recoveryID in [0,1,2,3]\n    // Then convert to 5 bit words with right padding 0 bits.\n    var sigWords;\n    if (canReconstruct) {\n      /* Since BOLT11 does not require a payee_node_key tag in the specs,\n      most parsers will have to recover the pubkey from the signature\n      To ensure the tag data has been provided in the right order etc.\n      we should check that the data we got and the node key given match when\n      reconstructing a payment request from given signature and recoveryID.\n      However, if a privatekey is given, the caller is the privkey owner.\n      Earlier we check if the private key matches the payee node key IF they\n      gave one. */\n      if (nodePublicKey) {\n        var recoveredPubkey = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(_$$_REQUIRE(_dependencyMap[6], \"secp256k1\").ecdsaRecover(_$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(data.signature, 'hex'), data.recoveryFlag, payReqHash, true));\n        if (nodePublicKey && !nodePublicKey.equals(recoveredPubkey)) {\n          throw new Error('Signature, message, and recoveryID did not produce the same pubkey as payeeNodeKey');\n        }\n        sigWords = hexToWord(data.signature + '0' + data.recoveryFlag);\n      } else {\n        throw new Error('Reconstruction with signature and recoveryID requires payeeNodeKey to verify correctness of input data.');\n      }\n    }\n    if (sigWords) dataWords = dataWords.concat(sigWords);\n    if (tagsContainItem(data.tags, TAGNAMES['6'])) {\n      data.timeExpireDate = data.timestamp + tagsItems(data.tags, TAGNAMES['6']);\n      data.timeExpireDateString = new Date(data.timeExpireDate * 1000).toISOString();\n    }\n    data.timestampString = new Date(data.timestamp * 1000).toISOString();\n    data.complete = !!sigWords;\n    data.paymentRequest = data.complete ? _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode(prefix, dataWords, Number.MAX_SAFE_INTEGER) : '';\n    data.prefix = prefix;\n    data.wordsTemp = _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode('temp', dataWords, Number.MAX_SAFE_INTEGER);\n\n    // payment requests get pretty long. Nothing in the spec says anything about length.\n    // Even though bech32 loses error correction power over 1023 characters.\n    return orderKeys(data);\n  }\n\n  // decode will only have extra comments that aren't covered in encode comments.\n  // also if anything is hard to read I'll comment.\n  function decode(paymentRequest, network) {\n    if (typeof paymentRequest !== 'string') throw new Error('Lightning Payment Request must be string');\n    if (paymentRequest.slice(0, 2).toLowerCase() !== 'ln') throw new Error('Not a proper lightning payment request');\n    var decoded = _$$_REQUIRE(_dependencyMap[1], \"bech32\").decode(paymentRequest, Number.MAX_SAFE_INTEGER);\n    paymentRequest = paymentRequest.toLowerCase();\n    var prefix = decoded.prefix;\n    var words = decoded.words;\n\n    // signature is always 104 words on the end\n    // cutting off at the beginning helps since there's no way to tell\n    // ahead of time how many tags there are.\n    var sigWords = words.slice(-104);\n    // grabbing a copy of the words for later, words will be sliced as we parse.\n    var wordsNoSig = words.slice(0, -104);\n    words = words.slice(0, -104);\n    var sigBuffer = wordsToBuffer(sigWords, true);\n    var recoveryFlag = sigBuffer.slice(-1)[0];\n    sigBuffer = sigBuffer.slice(0, -1);\n    if (!(recoveryFlag in [0, 1, 2, 3]) || sigBuffer.length !== 64) {\n      throw new Error('Signature is missing or incorrect');\n    }\n\n    // Without reverse lookups, can't say that the multipier at the end must\n    // have a number before it, so instead we parse, and if the second group\n    // doesn't have anything, there's a good chance the last letter of the\n    // coin type got captured by the third group, so just re-regex without\n    // the number.\n    var prefixMatches = prefix.match(/^ln(\\S+?)(\\d*)([a-zA-Z]?)$/);\n    if (prefixMatches && !prefixMatches[2]) prefixMatches = prefix.match(/^ln(\\S+)$/);\n    if (!prefixMatches) {\n      throw new Error('Not a proper lightning payment request');\n    }\n    var bech32Prefix = prefixMatches[1];\n    var coinNetwork;\n    if (!network) {\n      switch (bech32Prefix) {\n        case DEFAULTNETWORK.bech32:\n          coinNetwork = DEFAULTNETWORK;\n          break;\n        case TESTNETWORK.bech32:\n          coinNetwork = TESTNETWORK;\n          break;\n        case REGTESTNETWORK.bech32:\n          coinNetwork = REGTESTNETWORK;\n          break;\n        case SIMNETWORK.bech32:\n          coinNetwork = SIMNETWORK;\n          break;\n      }\n    } else {\n      if (network.bech32 === undefined || network.pubKeyHash === undefined || network.scriptHash === undefined || !Array.isArray(network.validWitnessVersions)) throw new Error('Invalid network');\n      coinNetwork = network;\n    }\n    if (!coinNetwork || coinNetwork.bech32 !== bech32Prefix) {\n      throw new Error('Unknown coin bech32 prefix');\n    }\n    var value = prefixMatches[2];\n    var satoshis, millisatoshis, removeSatoshis;\n    if (value) {\n      var divisor = prefixMatches[3];\n      try {\n        satoshis = parseInt(hrpToSat(value + divisor, true));\n      } catch (e) {\n        satoshis = null;\n        removeSatoshis = true;\n      }\n      millisatoshis = hrpToMillisat(value + divisor, true);\n    } else {\n      satoshis = null;\n      millisatoshis = null;\n    }\n\n    // reminder: left padded 0 bits\n    var timestamp = wordsToIntBE(words.slice(0, 7));\n    var timestampString = new Date(timestamp * 1000).toISOString();\n    words = words.slice(7); // trim off the left 7 words\n\n    var tags = [];\n    var tagName, parser, tagLength, tagWords;\n    // we have no tag count to go on, so just keep hacking off words\n    // until we have none.\n    while (words.length > 0) {\n      var tagCode = words[0].toString();\n      tagName = TAGNAMES[tagCode] || unknownTagName;\n      parser = TAGPARSERS[tagCode] || getUnknownParser(tagCode);\n      words = words.slice(1);\n      tagLength = wordsToIntBE(words.slice(0, 2));\n      words = words.slice(2);\n      tagWords = words.slice(0, tagLength);\n      words = words.slice(tagLength);\n\n      // See: parsers for more comments\n      tags.push({\n        tagName: tagName,\n        data: parser(tagWords, coinNetwork) // only fallback address needs coinNetwork\n      });\n    }\n    var timeExpireDate, timeExpireDateString;\n    // be kind and provide an absolute expiration date.\n    // good for logs\n    if (tagsContainItem(tags, TAGNAMES['6'])) {\n      timeExpireDate = timestamp + tagsItems(tags, TAGNAMES['6']);\n      timeExpireDateString = new Date(timeExpireDate * 1000).toISOString();\n    }\n    var toSign = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat([_$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(prefix, 'utf8'), _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(convert(wordsNoSig, 5, 8))]);\n    var payReqHash = sha256(toSign);\n    var sigPubkey = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(_$$_REQUIRE(_dependencyMap[6], \"secp256k1\").ecdsaRecover(sigBuffer, recoveryFlag, payReqHash, true));\n    if (tagsContainItem(tags, TAGNAMES['19']) && tagsItems(tags, TAGNAMES['19']) !== sigPubkey.toString('hex')) {\n      throw new Error('Lightning Payment Request signature pubkey does not match payee pubkey');\n    }\n    var finalResult = {\n      paymentRequest: paymentRequest,\n      complete: true,\n      prefix: prefix,\n      wordsTemp: _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode('temp', wordsNoSig.concat(sigWords), Number.MAX_SAFE_INTEGER),\n      network: coinNetwork,\n      satoshis: satoshis,\n      millisatoshis: millisatoshis,\n      timestamp: timestamp,\n      timestampString: timestampString,\n      payeeNodeKey: sigPubkey.toString('hex'),\n      signature: sigBuffer.toString('hex'),\n      recoveryFlag: recoveryFlag,\n      tags: tags\n    };\n    if (removeSatoshis) {\n      delete finalResult.satoshis;\n    }\n    if (timeExpireDate) {\n      finalResult = Object.assign(finalResult, {\n        timeExpireDate: timeExpireDate,\n        timeExpireDateString: timeExpireDateString\n      });\n    }\n    return orderKeys(finalResult, true);\n  }\n  function getTagsObject(tags) {\n    var result = {};\n    tags.forEach(function (tag) {\n      if (tag.tagName === unknownTagName) {\n        if (!result.unknownTags) {\n          result.unknownTags = [];\n        }\n        result.unknownTags.push(tag.data);\n      } else {\n        result[tag.tagName] = tag.data;\n      }\n    });\n    return result;\n  }\n  module.exports = {\n    encode: encode,\n    decode: decode,\n    sign: sign,\n    satToHrp: satToHrp,\n    millisatToHrp: millisatToHrp,\n    hrpToSat: hrpToSat,\n    hrpToMillisat: hrpToMillisat\n  };\n});","lineCount":941,"map":[[2,2,1,0],[2,14,1,12],[4,2,11,0],[5,2,12,0],[5,6,12,6,"DEFAULTNETWORK"],[5,20,12,20],[5,23,12,23],[6,4,13,2],[7,4,14,2,"bech32"],[7,10,14,8],[7,12,14,10],[7,16,14,14],[8,4,15,2,"pubKeyHash"],[8,14,15,12],[8,16,15,14],[8,20,15,18],[9,4,16,2,"scriptHash"],[9,14,16,12],[9,16,16,14],[9,20,16,18],[10,4,17,2,"validWitnessVersions"],[10,24,17,22],[10,26,17,24],[10,27,17,25],[10,28,17,26],[10,30,17,28],[10,31,17,29],[11,2,18,0],[11,3,18,1],[12,2,19,0],[12,6,19,6,"TESTNETWORK"],[12,17,19,17],[12,20,19,20],[13,4,20,2,"bech32"],[13,10,20,8],[13,12,20,10],[13,16,20,14],[14,4,21,2,"pubKeyHash"],[14,14,21,12],[14,16,21,14],[14,20,21,18],[15,4,22,2,"scriptHash"],[15,14,22,12],[15,16,22,14],[15,20,22,18],[16,4,23,2,"validWitnessVersions"],[16,24,23,22],[16,26,23,24],[16,27,23,25],[16,28,23,26],[16,30,23,28],[16,31,23,29],[17,2,24,0],[17,3,24,1],[18,2,25,0],[18,6,25,6,"REGTESTNETWORK"],[18,20,25,20],[18,23,25,23],[19,4,26,2,"bech32"],[19,10,26,8],[19,12,26,10],[19,18,26,16],[20,4,27,2,"pubKeyHash"],[20,14,27,12],[20,16,27,14],[20,20,27,18],[21,4,28,2,"scriptHash"],[21,14,28,12],[21,16,28,14],[21,20,28,18],[22,4,29,2,"validWitnessVersions"],[22,24,29,22],[22,26,29,24],[22,27,29,25],[22,28,29,26],[22,30,29,28],[22,31,29,29],[23,2,30,0],[23,3,30,1],[24,2,31,0],[24,6,31,6,"SIMNETWORK"],[24,16,31,16],[24,19,31,19],[25,4,32,2,"bech32"],[25,10,32,8],[25,12,32,10],[25,16,32,14],[26,4,33,2,"pubKeyHash"],[26,14,33,12],[26,16,33,14],[26,20,33,18],[27,4,34,2,"scriptHash"],[27,14,34,12],[27,16,34,14],[27,20,34,18],[28,4,35,2,"validWitnessVersions"],[28,24,35,22],[28,26,35,24],[28,27,35,25],[28,28,35,26],[28,30,35,28],[28,31,35,29],[29,2,36,0],[29,3,36,1],[30,2,37,0],[30,6,37,6,"DEFAULTEXPIRETIME"],[30,23,37,23],[30,26,37,26],[30,30,37,30],[31,2,38,0],[31,6,38,6,"DEFAULTCLTVEXPIRY"],[31,23,38,23],[31,26,38,26],[31,27,38,27],[32,2,39,0],[32,6,39,6,"DEFAULTDESCRIPTION"],[32,24,39,24],[32,27,39,27],[32,29,39,29],[33,2,40,0],[33,6,40,6,"DEFAULTFEATUREBITS"],[33,24,40,24],[33,27,40,27],[34,4,41,2,"word_length"],[34,15,41,13],[34,17,41,15],[34,18,41,16],[35,4,41,18],[36,4,42,2,"var_onion_optin"],[36,19,42,17],[36,21,42,19],[37,6,43,4,"required"],[37,14,43,12],[37,16,43,14],[37,21,43,19],[38,6,44,4,"supported"],[38,15,44,13],[38,17,44,15],[39,4,45,2],[39,5,45,3],[40,4,46,2,"payment_secret"],[40,18,46,16],[40,20,46,18],[41,6,47,4,"required"],[41,14,47,12],[41,16,47,14],[41,21,47,19],[42,6,48,4,"supported"],[42,15,48,13],[42,17,48,15],[43,4,49,2],[44,2,50,0],[44,3,50,1],[45,2,52,0],[45,6,52,6,"FEATUREBIT_ORDER"],[45,22,52,22],[45,25,52,25],[45,26,53,2],[45,52,53,28],[45,54,54,2],[45,76,54,24],[45,78,55,2],[45,110,55,34],[45,112,56,2],[45,128,56,18],[45,130,57,2],[45,147,57,19],[45,149,58,2],[45,168,58,21],[45,170,59,2],[45,195,59,27],[45,197,60,2],[45,213,60,18],[45,215,61,2],[45,226,61,13],[45,228,62,2],[45,258,62,32],[45,259,63,1],[46,2,65,0],[46,6,65,6,"DIVISORS"],[46,14,65,14],[46,17,65,17],[47,4,66,2,"m"],[47,5,66,3],[47,7,66,5],[47,12,66,5,"_$$_REQUIRE"],[47,23,66,5],[47,24,66,5,"_dependencyMap"],[47,38,66,5],[47,53,66,12],[47,56,66,15],[47,58,66,17],[47,60,66,19],[47,61,66,20],[48,4,67,2,"u"],[48,5,67,3],[48,7,67,5],[48,12,67,5,"_$$_REQUIRE"],[48,23,67,5],[48,24,67,5,"_dependencyMap"],[48,38,67,5],[48,53,67,12],[48,56,67,15],[48,58,67,17],[48,60,67,19],[48,61,67,20],[49,4,68,2,"n"],[49,5,68,3],[49,7,68,5],[49,12,68,5,"_$$_REQUIRE"],[49,23,68,5],[49,24,68,5,"_dependencyMap"],[49,38,68,5],[49,53,68,12],[49,56,68,15],[49,58,68,17],[49,60,68,19],[49,61,68,20],[50,4,69,2,"p"],[50,5,69,3],[50,7,69,5],[50,12,69,5,"_$$_REQUIRE"],[50,23,69,5],[50,24,69,5,"_dependencyMap"],[50,38,69,5],[50,53,69,12],[50,57,69,16],[50,59,69,18],[50,61,69,20],[51,2,70,0],[51,3,70,1],[52,2,72,0],[52,6,72,6,"MAX_MILLISATS"],[52,19,72,19],[52,22,72,22],[52,27,72,22,"_$$_REQUIRE"],[52,38,72,22],[52,39,72,22,"_dependencyMap"],[52,53,72,22],[52,68,72,29],[52,89,72,50],[52,91,72,52],[52,93,72,54],[52,94,72,55],[53,2,74,0],[53,6,74,6,"MILLISATS_PER_BTC"],[53,23,74,23],[53,26,74,26],[53,31,74,26,"_$$_REQUIRE"],[53,42,74,26],[53,43,74,26,"_dependencyMap"],[53,57,74,26],[53,72,74,33],[53,76,74,37],[53,78,74,39],[53,80,74,41],[53,81,74,42],[54,2,75,0],[54,6,75,6,"MILLISATS_PER_MILLIBTC"],[54,28,75,28],[54,31,75,31],[54,36,75,31,"_$$_REQUIRE"],[54,47,75,31],[54,48,75,31,"_dependencyMap"],[54,62,75,31],[54,77,75,38],[54,80,75,41],[54,82,75,43],[54,84,75,45],[54,85,75,46],[55,2,76,0],[55,6,76,6,"MILLISATS_PER_MICROBTC"],[55,28,76,28],[55,31,76,31],[55,36,76,31,"_$$_REQUIRE"],[55,47,76,31],[55,48,76,31,"_dependencyMap"],[55,62,76,31],[55,77,76,38],[55,80,76,41],[55,82,76,43],[55,84,76,45],[55,85,76,46],[56,2,77,0],[56,6,77,6,"MILLISATS_PER_NANOBTC"],[56,27,77,27],[56,30,77,30],[56,35,77,30,"_$$_REQUIRE"],[56,46,77,30],[56,47,77,30,"_dependencyMap"],[56,61,77,30],[56,76,77,37],[56,79,77,40],[56,81,77,42],[56,83,77,44],[56,84,77,45],[57,2,78,0],[57,6,78,6,"PICOBTC_PER_MILLISATS"],[57,27,78,27],[57,30,78,30],[57,35,78,30,"_$$_REQUIRE"],[57,46,78,30],[57,47,78,30,"_dependencyMap"],[57,61,78,30],[57,76,78,37],[57,78,78,39],[57,80,78,41],[57,82,78,43],[57,83,78,44],[58,2,80,0],[58,6,80,6,"TAGCODES"],[58,14,80,14],[58,17,80,17],[59,4,81,2,"payment_hash"],[59,16,81,14],[59,18,81,16],[59,19,81,17],[60,4,82,2,"payment_secret"],[60,18,82,16],[60,20,82,18],[60,22,82,20],[61,4,83,2,"description"],[61,15,83,13],[61,17,83,15],[61,19,83,17],[62,4,84,2,"payee_node_key"],[62,18,84,16],[62,20,84,18],[62,22,84,20],[63,4,85,2,"purpose_commit_hash"],[63,23,85,21],[63,25,85,23],[63,27,85,25],[64,4,85,27],[65,4,86,2,"expire_time"],[65,15,86,13],[65,17,86,15],[65,18,86,16],[66,4,86,18],[67,4,87,2,"min_final_cltv_expiry"],[67,25,87,23],[67,27,87,25],[67,29,87,27],[68,4,87,29],[69,4,88,2,"fallback_address"],[69,20,88,18],[69,22,88,20],[69,23,88,21],[70,4,89,2,"routing_info"],[70,16,89,14],[70,18,89,16],[70,19,89,17],[71,4,89,19],[72,4,90,2,"feature_bits"],[72,16,90,14],[72,18,90,16],[73,2,91,0],[73,3,91,1],[75,2,93,0],[76,2,94,0],[76,6,94,6,"TAGNAMES"],[76,14,94,14],[76,17,94,17],[76,18,94,18],[76,19,94,19],[77,2,95,0],[77,7,95,5],[77,11,95,9,"i"],[77,12,95,10],[77,15,95,13],[77,16,95,14],[77,18,95,16,"keys"],[77,22,95,20],[77,25,95,23,"Object"],[77,31,95,29],[77,32,95,30,"keys"],[77,36,95,34],[77,37,95,35,"TAGCODES"],[77,45,95,43],[77,46,95,44],[77,48,95,46,"i"],[77,49,95,47],[77,52,95,50,"keys"],[77,56,95,54],[77,57,95,55,"length"],[77,63,95,61],[77,65,95,63,"i"],[77,66,95,64],[77,68,95,66],[77,70,95,68],[78,4,96,2],[78,8,96,8,"currentName"],[78,19,96,19],[78,22,96,22,"keys"],[78,26,96,26],[78,27,96,27,"i"],[78,28,96,28],[78,29,96,29],[79,4,97,2],[79,8,97,8,"currentCode"],[79,19,97,19],[79,22,97,22,"TAGCODES"],[79,30,97,30],[79,31,97,31,"keys"],[79,35,97,35],[79,36,97,36,"i"],[79,37,97,37],[79,38,97,38],[79,39,97,39],[79,40,97,40,"toString"],[79,48,97,48],[79,49,97,49],[79,50,97,50],[80,4,98,2,"TAGNAMES"],[80,12,98,10],[80,13,98,11,"currentCode"],[80,24,98,22],[80,25,98,23],[80,28,98,26,"currentName"],[80,39,98,37],[81,2,99,0],[82,2,101,0],[82,6,101,6,"TAGENCODERS"],[82,17,101,17],[82,20,101,20],[83,4,102,2,"payment_hash"],[83,16,102,14],[83,18,102,16,"hexToWord"],[83,27,102,25],[84,4,102,27],[85,4,103,2,"payment_secret"],[85,18,103,16],[85,20,103,18,"hexToWord"],[85,29,103,27],[86,4,103,29],[87,4,104,2,"description"],[87,15,104,13],[87,17,104,15,"textToWord"],[87,27,104,25],[88,4,104,27],[89,4,105,2,"payee_node_key"],[89,18,105,16],[89,20,105,18,"hexToWord"],[89,29,105,27],[90,4,105,29],[91,4,106,2,"purpose_commit_hash"],[91,23,106,21],[91,25,106,23,"purposeCommitEncoder"],[91,45,106,43],[92,4,106,45],[93,4,107,2,"expire_time"],[93,15,107,13],[93,17,107,15,"intBEToWords"],[93,29,107,27],[94,4,107,29],[95,4,108,2,"min_final_cltv_expiry"],[95,25,108,23],[95,27,108,25,"intBEToWords"],[95,39,108,37],[96,4,108,39],[97,4,109,2,"fallback_address"],[97,20,109,18],[97,22,109,20,"fallbackAddressEncoder"],[97,44,109,42],[98,4,110,2,"routing_info"],[98,16,110,14],[98,18,110,16,"routingInfoEncoder"],[98,36,110,34],[99,4,110,36],[100,4,111,2,"feature_bits"],[100,16,111,14],[100,18,111,16,"featureBitsEncoder"],[101,2,112,0],[101,3,112,1],[102,2,114,0],[102,6,114,6,"TAGPARSERS"],[102,16,114,16],[102,19,114,19],[103,4,115,2],[103,5,115,3],[103,7,115,5],[103,16,115,2,"_"],[103,17,115,3,"_"],[103,18,115,6,"words"],[103,23,115,11],[104,6,115,11],[104,13,115,16,"wordsToBuffer"],[104,26,115,29],[104,27,115,30,"words"],[104,32,115,35],[104,34,115,37],[104,38,115,41],[104,39,115,42],[104,40,115,43,"toString"],[104,48,115,51],[104,49,115,52],[104,54,115,57],[104,55,115,58],[105,4,115,58],[106,4,115,60],[107,4,116,2],[107,6,116,4],[107,8,116,6],[107,17,116,2,"_"],[107,18,116,4,"_"],[107,19,116,7,"words"],[107,24,116,12],[108,6,116,12],[108,13,116,17,"wordsToBuffer"],[108,26,116,30],[108,27,116,31,"words"],[108,32,116,36],[108,34,116,38],[108,38,116,42],[108,39,116,43],[108,40,116,44,"toString"],[108,48,116,52],[108,49,116,53],[108,54,116,58],[108,55,116,59],[109,4,116,59],[110,4,116,61],[111,4,117,2],[111,6,117,4],[111,8,117,6],[111,17,117,2,"_"],[111,18,117,4,"_"],[111,19,117,7,"words"],[111,24,117,12],[112,6,117,12],[112,13,117,17,"wordsToBuffer"],[112,26,117,30],[112,27,117,31,"words"],[112,32,117,36],[112,34,117,38],[112,38,117,42],[112,39,117,43],[112,40,117,44,"toString"],[112,48,117,52],[112,49,117,53],[112,55,117,59],[112,56,117,60],[113,4,117,60],[114,4,117,62],[115,4,118,2],[115,6,118,4],[115,8,118,6],[115,17,118,2,"_"],[115,18,118,4,"_"],[115,19,118,7,"words"],[115,24,118,12],[116,6,118,12],[116,13,118,17,"wordsToBuffer"],[116,26,118,30],[116,27,118,31,"words"],[116,32,118,36],[116,34,118,38],[116,38,118,42],[116,39,118,43],[116,40,118,44,"toString"],[116,48,118,52],[116,49,118,53],[116,54,118,58],[116,55,118,59],[117,4,118,59],[118,4,118,61],[119,4,119,2],[119,6,119,4],[119,8,119,6],[119,17,119,2,"_"],[119,18,119,4,"_"],[119,19,119,7,"words"],[119,24,119,12],[120,6,119,12],[120,13,119,17,"wordsToBuffer"],[120,26,119,30],[120,27,119,31,"words"],[120,32,119,36],[120,34,119,38],[120,38,119,42],[120,39,119,43],[120,40,119,44,"toString"],[120,48,119,52],[120,49,119,53],[120,54,119,58],[120,55,119,59],[121,4,119,59],[122,4,119,61],[123,4,120,2],[123,5,120,3],[123,7,120,5,"wordsToIntBE"],[123,19,120,17],[124,4,120,19],[125,4,121,2],[125,6,121,4],[125,8,121,6,"wordsToIntBE"],[125,20,121,18],[126,4,121,20],[127,4,122,2],[127,5,122,3],[127,7,122,5,"fallbackAddressParser"],[127,28,122,26],[128,4,123,2],[128,5,123,3],[128,7,123,5,"routingInfoParser"],[128,24,123,22],[129,4,123,24],[130,4,124,2],[130,5,124,3],[130,7,124,5,"featureBitsParser"],[130,24,124,22],[130,25,124,23],[131,2,125,0],[131,3,125,1],[132,2,127,0],[132,6,127,6,"unknownTagName"],[132,20,127,20],[132,23,127,23],[132,35,127,35],[133,2,129,0],[133,11,129,9,"unknownEncoder"],[133,25,129,23,"unknownEncoder"],[133,26,129,25,"data"],[133,30,129,29],[133,32,129,31],[134,4,130,2,"data"],[134,8,130,6],[134,9,130,7,"words"],[134,14,130,12],[134,17,130,15,"_$$_REQUIRE"],[134,28,130,15],[134,29,130,15,"_dependencyMap"],[134,43,130,15],[134,58,130,22,"decode"],[134,64,130,28],[134,65,130,29,"data"],[134,69,130,33],[134,70,130,34,"words"],[134,75,130,39],[134,77,130,41,"Number"],[134,83,130,47],[134,84,130,48,"MAX_SAFE_INTEGER"],[134,100,130,64],[134,101,130,65],[134,102,130,66,"words"],[134,107,130,71],[135,4,131,2],[135,11,131,9,"data"],[135,15,131,13],[136,2,132,0],[137,2,134,0],[137,11,134,9,"getUnknownParser"],[137,27,134,25,"getUnknownParser"],[137,28,134,27,"tagCode"],[137,35,134,34],[137,37,134,36],[138,4,135,2],[138,11,135,9],[138,21,135,10,"words"],[138,26,135,15],[139,6,135,15],[139,13,135,21],[140,8,136,4,"tagCode"],[140,15,136,11],[140,17,136,13,"parseInt"],[140,25,136,21],[140,26,136,22,"tagCode"],[140,33,136,29],[140,34,136,30],[141,8,137,4,"words"],[141,13,137,9],[141,15,137,11,"_$$_REQUIRE"],[141,26,137,11],[141,27,137,11,"_dependencyMap"],[141,41,137,11],[141,56,137,18,"encode"],[141,62,137,24],[141,63,137,25],[141,72,137,34],[141,74,137,36,"words"],[141,79,137,41],[141,81,137,43,"Number"],[141,87,137,49],[141,88,137,50,"MAX_SAFE_INTEGER"],[141,104,137,66],[142,6,138,2],[142,7,138,3],[143,4,138,3],[143,5,138,4],[144,2,139,0],[145,2,141,0],[145,11,141,9,"wordsToIntBE"],[145,23,141,21,"wordsToIntBE"],[145,24,141,23,"words"],[145,29,141,28],[145,31,141,30],[146,4,142,2],[146,11,142,9,"words"],[146,16,142,14],[146,17,142,15,"reverse"],[146,24,142,22],[146,25,142,23],[146,26,142,24],[146,27,142,25,"reduce"],[146,33,142,31],[146,34,142,32],[146,44,142,33,"total"],[146,49,142,38],[146,51,142,40,"item"],[146,55,142,44],[146,57,142,46,"index"],[146,62,142,51],[146,64,142,56],[147,6,143,4],[147,13,143,11,"total"],[147,18,143,16],[147,21,143,19,"item"],[147,25,143,23],[147,28,143,26,"Math"],[147,32,143,30],[147,33,143,31,"pow"],[147,36,143,34],[147,37,143,35],[147,39,143,37],[147,41,143,39,"index"],[147,46,143,44],[147,47,143,45],[148,4,144,2],[148,5,144,3],[148,7,144,5],[148,8,144,6],[148,9,144,7],[149,2,145,0],[150,2,147,0],[150,11,147,9,"intBEToWords"],[150,23,147,21,"intBEToWords"],[150,24,147,23,"intBE"],[150,29,147,28],[150,31,147,30,"bits"],[150,35,147,34],[150,37,147,36],[151,4,148,2],[151,8,148,8,"words"],[151,13,148,13],[151,16,148,16],[151,18,148,18],[152,4,149,2],[152,8,149,6,"bits"],[152,12,149,10],[152,17,149,15,"undefined"],[152,26,149,24],[152,28,149,26,"bits"],[152,32,149,30],[152,35,149,33],[152,36,149,34],[153,4,150,2,"intBE"],[153,9,150,7],[153,12,150,10,"Math"],[153,16,150,14],[153,17,150,15,"floor"],[153,22,150,20],[153,23,150,21,"intBE"],[153,28,150,26],[153,29,150,27],[154,4,151,2],[154,8,151,6,"intBE"],[154,13,151,11],[154,18,151,16],[154,19,151,17],[154,21,151,19],[154,28,151,26],[154,29,151,27],[154,30,151,28],[154,31,151,29],[155,4,152,2],[155,11,152,9,"intBE"],[155,16,152,14],[155,19,152,17],[155,20,152,18],[155,22,152,20],[156,6,153,4,"words"],[156,11,153,9],[156,12,153,10,"push"],[156,16,153,14],[156,17,153,15,"intBE"],[156,22,153,20],[156,25,153,24,"Math"],[156,29,153,28],[156,30,153,29,"pow"],[156,33,153,32],[156,34,153,33],[156,35,153,34],[156,37,153,36,"bits"],[156,41,153,40],[156,42,153,41],[156,45,153,44],[156,46,153,46],[156,47,153,47],[157,6,154,4,"intBE"],[157,11,154,9],[157,14,154,12,"Math"],[157,18,154,16],[157,19,154,17,"floor"],[157,24,154,22],[157,25,154,23,"intBE"],[157,30,154,28],[157,33,154,31,"Math"],[157,37,154,35],[157,38,154,36,"pow"],[157,41,154,39],[157,42,154,40],[157,43,154,41],[157,45,154,43,"bits"],[157,49,154,47],[157,50,154,48],[157,51,154,49],[158,4,155,2],[159,4,156,2],[159,11,156,9,"words"],[159,16,156,14],[159,17,156,15,"reverse"],[159,24,156,22],[159,25,156,23],[159,26,156,24],[160,2,157,0],[161,2,159,0],[161,11,159,9,"sha256"],[161,17,159,15,"sha256"],[161,18,159,17,"data"],[161,22,159,21],[161,24,159,23],[162,4,160,2],[162,11,160,9,"_$$_REQUIRE"],[162,22,160,9],[162,23,160,9,"_dependencyMap"],[162,37,160,9],[162,57,160,20],[162,65,160,28],[162,66,160,29],[162,67,160,30,"update"],[162,73,160,36],[162,74,160,37,"data"],[162,78,160,41],[162,79,160,42],[162,80,160,43,"digest"],[162,86,160,49],[162,87,160,50],[162,88,160,51],[163,2,161,0],[164,2,163,0],[164,11,163,9,"convert"],[164,18,163,16,"convert"],[164,19,163,18,"data"],[164,23,163,22],[164,25,163,24,"inBits"],[164,31,163,30],[164,33,163,32,"outBits"],[164,40,163,39],[164,42,163,41],[165,4,164,2],[165,8,164,6,"value"],[165,13,164,11],[165,16,164,14],[165,17,164,15],[166,4,165,2],[166,8,165,6,"bits"],[166,12,165,10],[166,15,165,13],[166,16,165,14],[167,4,166,2],[167,8,166,8,"maxV"],[167,12,166,12],[167,15,166,15],[167,16,166,16],[167,17,166,17],[167,21,166,21,"outBits"],[167,28,166,28],[167,32,166,32],[167,33,166,33],[168,4,168,2],[168,8,168,8,"result"],[168,14,168,14],[168,17,168,17],[168,19,168,19],[169,4,169,2],[169,9,169,7],[169,13,169,11,"i"],[169,15,169,12],[169,18,169,15],[169,19,169,16],[169,21,169,18,"i"],[169,23,169,19],[169,26,169,22,"data"],[169,30,169,26],[169,31,169,27,"length"],[169,37,169,33],[169,39,169,35],[169,41,169,37,"i"],[169,43,169,38],[169,45,169,40],[170,6,170,4,"value"],[170,11,170,9],[170,14,170,13,"value"],[170,19,170,18],[170,23,170,22,"inBits"],[170,29,170,28],[170,32,170,32,"data"],[170,36,170,36],[170,37,170,37,"i"],[170,39,170,38],[170,40,170,39],[171,6,171,4,"bits"],[171,10,171,8],[171,14,171,12,"inBits"],[171,20,171,18],[172,6,173,4],[172,13,173,11,"bits"],[172,17,173,15],[172,21,173,19,"outBits"],[172,28,173,26],[172,30,173,28],[173,8,174,6,"bits"],[173,12,174,10],[173,16,174,14,"outBits"],[173,23,174,21],[174,8,175,6,"result"],[174,14,175,12],[174,15,175,13,"push"],[174,19,175,17],[174,20,175,19,"value"],[174,25,175,24],[174,29,175,28,"bits"],[174,33,175,32],[174,36,175,36,"maxV"],[174,40,175,40],[174,41,175,41],[175,6,176,4],[176,4,177,2],[177,4,179,2],[177,8,179,6,"bits"],[177,12,179,10],[177,15,179,13],[177,16,179,14],[177,18,179,16],[178,6,180,4,"result"],[178,12,180,10],[178,13,180,11,"push"],[178,17,180,15],[178,18,180,17,"value"],[178,23,180,22],[178,27,180,27,"outBits"],[178,34,180,34],[178,37,180,37,"bits"],[178,41,180,42],[178,44,180,46,"maxV"],[178,48,180,50],[178,49,180,51],[179,4,181,2],[180,4,183,2],[180,11,183,9,"result"],[180,17,183,15],[181,2,184,0],[182,2,186,0],[182,11,186,9,"wordsToBuffer"],[182,24,186,22,"wordsToBuffer"],[182,25,186,24,"words"],[182,30,186,29],[182,32,186,31,"trim"],[182,36,186,35],[182,38,186,37],[183,4,187,2],[183,8,187,6,"buffer"],[183,14,187,12],[183,17,187,15,"_$$_REQUIRE"],[183,28,187,15],[183,29,187,15,"_dependencyMap"],[183,43,187,15],[183,63,187,15,"Buffer"],[183,69,187,15],[183,70,187,22,"from"],[183,74,187,26],[183,75,187,27,"convert"],[183,82,187,34],[183,83,187,35,"words"],[183,88,187,40],[183,90,187,42],[183,91,187,43],[183,93,187,45],[183,94,187,46],[183,96,187,48],[183,100,187,52],[183,101,187,53],[183,102,187,54],[184,4,188,2],[184,8,188,6,"trim"],[184,12,188,10],[184,16,188,14,"words"],[184,21,188,19],[184,22,188,20,"length"],[184,28,188,26],[184,31,188,29],[184,32,188,30],[184,35,188,33],[184,36,188,34],[184,41,188,39],[184,42,188,40],[184,44,188,42],[185,6,189,4,"buffer"],[185,12,189,10],[185,15,189,13,"buffer"],[185,21,189,19],[185,22,189,20,"slice"],[185,27,189,25],[185,28,189,26],[185,29,189,27],[185,31,189,29],[185,32,189,30],[185,33,189,31],[185,34,189,32],[186,4,190,2],[187,4,191,2],[187,11,191,9,"buffer"],[187,17,191,15],[188,2,192,0],[189,2,194,0],[189,11,194,9,"hexToBuffer"],[189,22,194,20,"hexToBuffer"],[189,23,194,22,"hex"],[189,26,194,25],[189,28,194,27],[190,4,195,2],[190,8,195,6,"hex"],[190,11,195,9],[190,16,195,14,"undefined"],[190,25,195,23],[190,30,196,7],[190,37,196,14,"hex"],[190,40,196,17],[190,45,196,22],[190,53,196,30],[190,57,196,34,"hex"],[190,60,196,37],[190,72,196,49,"String"],[190,78,196,55],[190,79,196,56],[190,83,197,6,"hex"],[190,86,197,9],[190,87,197,10,"match"],[190,92,197,15],[190,93,197,16],[190,114,197,37],[190,115,197,38],[190,117,197,40],[191,6,198,4],[191,13,198,11,"_$$_REQUIRE"],[191,24,198,11],[191,25,198,11,"_dependencyMap"],[191,39,198,11],[191,59,198,11,"Buffer"],[191,65,198,11],[191,66,198,18,"from"],[191,70,198,22],[191,71,198,23,"hex"],[191,74,198,26],[191,76,198,28],[191,81,198,33],[191,82,198,34],[192,4,199,2],[193,4,200,2],[193,11,200,9,"hex"],[193,14,200,12],[194,2,201,0],[195,2,203,0],[195,11,203,9,"textToBuffer"],[195,23,203,21,"textToBuffer"],[195,24,203,23,"text"],[195,28,203,27],[195,30,203,29],[196,4,204,2],[196,11,204,9,"_$$_REQUIRE"],[196,22,204,9],[196,23,204,9,"_dependencyMap"],[196,37,204,9],[196,57,204,9,"Buffer"],[196,63,204,9],[196,64,204,16,"from"],[196,68,204,20],[196,69,204,21,"text"],[196,73,204,25],[196,75,204,27],[196,81,204,33],[196,82,204,34],[197,2,205,0],[198,2,207,0],[198,11,207,9,"hexToWord"],[198,20,207,18,"hexToWord"],[198,21,207,20,"hex"],[198,24,207,23],[198,26,207,25],[199,4,208,2],[199,8,208,8,"buffer"],[199,14,208,14],[199,17,208,17,"hexToBuffer"],[199,28,208,28],[199,29,208,29,"hex"],[199,32,208,32],[199,33,208,33],[200,4,209,2],[200,11,209,9,"_$$_REQUIRE"],[200,22,209,9],[200,23,209,9,"_dependencyMap"],[200,37,209,9],[200,52,209,16,"toWords"],[200,59,209,23],[200,60,209,24,"buffer"],[200,66,209,30],[200,67,209,31],[201,2,210,0],[202,2,212,0],[202,11,212,9,"textToWord"],[202,21,212,19,"textToWord"],[202,22,212,21,"text"],[202,26,212,25],[202,28,212,27],[203,4,213,2],[203,8,213,8,"buffer"],[203,14,213,14],[203,17,213,17,"textToBuffer"],[203,29,213,29],[203,30,213,30,"text"],[203,34,213,34],[203,35,213,35],[204,4,214,2],[204,8,214,8,"words"],[204,13,214,13],[204,16,214,16,"_$$_REQUIRE"],[204,27,214,16],[204,28,214,16,"_dependencyMap"],[204,42,214,16],[204,57,214,23,"toWords"],[204,64,214,30],[204,65,214,31,"buffer"],[204,71,214,37],[204,72,214,38],[205,4,215,2],[205,11,215,9,"words"],[205,16,215,14],[206,2,216,0],[208,2,218,0],[209,2,219,0],[209,11,219,9,"fallbackAddressParser"],[209,32,219,30,"fallbackAddressParser"],[209,33,219,32,"words"],[209,38,219,37],[209,40,219,39,"network"],[209,47,219,46],[209,49,219,48],[210,4,220,2],[210,8,220,8,"version"],[210,15,220,15],[210,18,220,18,"words"],[210,23,220,23],[210,24,220,24],[210,25,220,25],[210,26,220,26],[211,4,221,2,"words"],[211,9,221,7],[211,12,221,10,"words"],[211,17,221,15],[211,18,221,16,"slice"],[211,23,221,21],[211,24,221,22],[211,25,221,23],[211,26,221,24],[212,4,223,2],[212,8,223,8,"addressHash"],[212,19,223,19],[212,22,223,22,"wordsToBuffer"],[212,35,223,35],[212,36,223,36,"words"],[212,41,223,41],[212,43,223,43],[212,47,223,47],[212,48,223,48],[213,4,225,2],[213,8,225,6,"address"],[213,15,225,13],[213,18,225,16],[213,22,225,20],[214,4,227,2],[214,12,227,10,"version"],[214,19,227,17],[215,6,228,4],[215,11,228,9],[215,13,228,11],[216,8,229,6,"address"],[216,15,229,13],[216,18,229,16,"_$$_REQUIRE"],[216,29,229,16],[216,30,229,16,"_dependencyMap"],[216,44,229,16],[216,66,229,16,"address"],[216,73,229,16],[216,74,229,33,"toBase58Check"],[216,87,229,46],[216,88,229,47,"addressHash"],[216,99,229,58],[216,101,229,60,"network"],[216,108,229,67],[216,109,229,68,"pubKeyHash"],[216,119,229,78],[216,120,229,79],[217,8,230,6],[218,6,231,4],[218,11,231,9],[218,13,231,11],[219,8,232,6,"address"],[219,15,232,13],[219,18,232,16,"_$$_REQUIRE"],[219,29,232,16],[219,30,232,16,"_dependencyMap"],[219,44,232,16],[219,66,232,16,"address"],[219,73,232,16],[219,74,232,33,"toBase58Check"],[219,87,232,46],[219,88,232,47,"addressHash"],[219,99,232,58],[219,101,232,60,"network"],[219,108,232,67],[219,109,232,68,"scriptHash"],[219,119,232,78],[219,120,232,79],[220,8,233,6],[221,6,234,4],[221,11,234,9],[221,12,234,10],[222,6,235,4],[222,11,235,9],[222,12,235,10],[223,8,236,6,"address"],[223,15,236,13],[223,18,236,16,"_$$_REQUIRE"],[223,29,236,16],[223,30,236,16,"_dependencyMap"],[223,44,236,16],[223,66,236,16,"address"],[223,73,236,16],[223,74,236,33,"toBech32"],[223,82,236,41],[223,83,236,42,"addressHash"],[223,94,236,53],[223,96,236,55,"version"],[223,103,236,62],[223,105,236,64,"network"],[223,112,236,71],[223,113,236,72,"bech32"],[223,119,236,78],[223,120,236,79],[224,8,237,6],[225,4,238,2],[226,4,240,2],[226,11,240,9],[227,6,241,4,"code"],[227,10,241,8],[227,12,241,10,"version"],[227,19,241,17],[228,6,242,4,"address"],[228,13,242,11],[228,15,242,4,"address"],[228,22,242,11],[229,6,243,4,"addressHash"],[229,17,243,15],[229,19,243,17,"addressHash"],[229,30,243,28],[229,31,243,29,"toString"],[229,39,243,37],[229,40,243,38],[229,45,243,43],[230,4,244,2],[230,5,244,3],[231,2,245,0],[233,2,247,0],[234,2,248,0],[235,2,249,0],[236,2,250,0],[237,2,251,0],[237,11,251,9,"fallbackAddressEncoder"],[237,33,251,31,"fallbackAddressEncoder"],[237,34,251,33,"data"],[237,38,251,37],[237,40,251,39,"network"],[237,47,251,46],[237,49,251,48],[238,4,252,2],[238,11,252,9],[238,12,252,10,"data"],[238,16,252,14],[238,17,252,15,"code"],[238,21,252,19],[238,22,252,20],[238,23,252,21,"concat"],[238,29,252,27],[238,30,252,28,"hexToWord"],[238,39,252,37],[238,40,252,38,"data"],[238,44,252,42],[238,45,252,43,"addressHash"],[238,56,252,54],[238,57,252,55],[238,58,252,56],[239,2,253,0],[241,2,255,0],[242,2,256,0],[243,2,257,0],[243,11,257,9,"routingInfoParser"],[243,28,257,26,"routingInfoParser"],[243,29,257,28,"words"],[243,34,257,33],[243,36,257,35],[244,4,258,2],[244,8,258,8,"routes"],[244,14,258,14],[244,17,258,17],[244,19,258,19],[245,4,259,2],[245,8,259,6,"pubkey"],[245,14,259,12],[245,16,259,14,"shortChannelId"],[245,30,259,28],[245,32,259,30,"feeBaseMSats"],[245,44,259,42],[245,46,259,44,"feeProportionalMillionths"],[245,71,259,69],[245,73,259,71,"cltvExpiryDelta"],[245,88,259,86],[246,4,260,2],[246,8,260,6,"routesBuffer"],[246,20,260,18],[246,23,260,21,"wordsToBuffer"],[246,36,260,34],[246,37,260,35,"words"],[246,42,260,40],[246,44,260,42],[246,48,260,46],[246,49,260,47],[247,4,261,2],[247,11,261,9,"routesBuffer"],[247,23,261,21],[247,24,261,22,"length"],[247,30,261,28],[247,33,261,31],[247,34,261,32],[247,36,261,34],[248,6,262,4,"pubkey"],[248,12,262,10],[248,15,262,13,"routesBuffer"],[248,27,262,25],[248,28,262,26,"slice"],[248,33,262,31],[248,34,262,32],[248,35,262,33],[248,37,262,35],[248,39,262,37],[248,40,262,38],[248,41,262,39,"toString"],[248,49,262,47],[248,50,262,48],[248,55,262,53],[248,56,262,54],[248,58,262,55],[249,6,263,4,"shortChannelId"],[249,20,263,18],[249,23,263,21,"routesBuffer"],[249,35,263,33],[249,36,263,34,"slice"],[249,41,263,39],[249,42,263,40],[249,44,263,42],[249,46,263,44],[249,48,263,46],[249,49,263,47],[249,50,263,48,"toString"],[249,58,263,56],[249,59,263,57],[249,64,263,62],[249,65,263,63],[249,67,263,64],[250,6,264,4,"feeBaseMSats"],[250,18,264,16],[250,21,264,19,"parseInt"],[250,29,264,27],[250,30,264,28,"routesBuffer"],[250,42,264,40],[250,43,264,41,"slice"],[250,48,264,46],[250,49,264,47],[250,51,264,49],[250,53,264,51],[250,55,264,53],[250,56,264,54],[250,57,264,55,"toString"],[250,65,264,63],[250,66,264,64],[250,71,264,69],[250,72,264,70],[250,74,264,72],[250,76,264,74],[250,77,264,75],[250,79,264,76],[251,6,265,4,"feeProportionalMillionths"],[251,31,265,29],[251,34,265,32,"parseInt"],[251,42,265,40],[251,43,265,41,"routesBuffer"],[251,55,265,53],[251,56,265,54,"slice"],[251,61,265,59],[251,62,265,60],[251,64,265,62],[251,66,265,64],[251,68,265,66],[251,69,265,67],[251,70,265,68,"toString"],[251,78,265,76],[251,79,265,77],[251,84,265,82],[251,85,265,83],[251,87,265,85],[251,89,265,87],[251,90,265,88],[251,92,265,89],[252,6,266,4,"cltvExpiryDelta"],[252,21,266,19],[252,24,266,22,"parseInt"],[252,32,266,30],[252,33,266,31,"routesBuffer"],[252,45,266,43],[252,46,266,44,"slice"],[252,51,266,49],[252,52,266,50],[252,54,266,52],[252,56,266,54],[252,58,266,56],[252,59,266,57],[252,60,266,58,"toString"],[252,68,266,66],[252,69,266,67],[252,74,266,72],[252,75,266,73],[252,77,266,75],[252,79,266,77],[252,80,266,78],[252,82,266,79],[254,6,268,4,"routesBuffer"],[254,18,268,16],[254,21,268,19,"routesBuffer"],[254,33,268,31],[254,34,268,32,"slice"],[254,39,268,37],[254,40,268,38],[254,42,268,40],[254,43,268,41],[255,6,270,4,"routes"],[255,12,270,10],[255,13,270,11,"push"],[255,17,270,15],[255,18,270,16],[256,8,271,6,"pubkey"],[256,14,271,12],[256,16,271,6,"pubkey"],[256,22,271,12],[257,8,272,6,"short_channel_id"],[257,24,272,22],[257,26,272,24,"shortChannelId"],[257,40,272,38],[258,8,273,6,"fee_base_msat"],[258,21,273,19],[258,23,273,21,"feeBaseMSats"],[258,35,273,33],[259,8,274,6,"fee_proportional_millionths"],[259,35,274,33],[259,37,274,35,"feeProportionalMillionths"],[259,62,274,60],[260,8,275,6,"cltv_expiry_delta"],[260,25,275,23],[260,27,275,25,"cltvExpiryDelta"],[261,6,276,4],[261,7,276,5],[261,8,276,6],[262,4,277,2],[263,4,278,2],[263,11,278,9,"routes"],[263,17,278,15],[264,2,279,0],[265,2,281,0],[265,11,281,9,"featureBitsParser"],[265,28,281,26,"featureBitsParser"],[265,29,281,28,"words"],[265,34,281,33],[265,36,281,35],[266,4,282,2],[266,8,282,8,"bools"],[266,13,282,13],[266,16,282,16,"words"],[266,21,282,21],[266,22,282,22,"slice"],[266,27,282,27],[266,28,282,28],[266,29,282,29],[266,30,282,30,"reverse"],[266,37,282,37],[266,38,282,38],[266,39,282,39],[266,40,282,40,"map"],[266,43,282,43],[266,44,282,44],[266,54,282,44,"word"],[266,58,282,48],[267,6,282,48],[267,13,283,4],[267,14,284,6],[267,15,284,7],[267,17,284,9,"word"],[267,21,284,13],[267,24,284,16],[267,25,284,19],[267,26,284,20],[267,28,285,6],[267,29,285,7],[267,31,285,9,"word"],[267,35,285,13],[267,38,285,16],[267,39,285,20],[267,40,285,21],[267,42,286,6],[267,43,286,7],[267,45,286,9,"word"],[267,49,286,13],[267,52,286,16],[267,53,286,21],[267,54,286,22],[267,56,287,6],[267,57,287,7],[267,59,287,9,"word"],[267,63,287,13],[267,66,287,16],[267,67,287,22],[267,68,287,23],[267,70,288,6],[267,71,288,7],[267,73,288,9,"word"],[267,77,288,13],[267,80,288,16],[267,82,288,23],[267,83,288,24],[267,84,289,5],[268,4,289,5],[268,5,290,2],[268,6,290,3],[268,7,290,4,"reduce"],[268,13,290,10],[268,14,290,11],[268,24,290,12,"finalArr"],[268,32,290,20],[268,34,290,22,"itemArr"],[268,41,290,29],[269,6,290,29],[269,13,290,34,"finalArr"],[269,21,290,42],[269,22,290,43,"concat"],[269,28,290,49],[269,29,290,50,"itemArr"],[269,36,290,57],[269,37,290,58],[270,4,290,58],[270,7,290,60],[270,9,290,62],[270,10,290,63],[271,4,291,2],[271,11,291,9,"bools"],[271,16,291,14],[271,17,291,15,"length"],[271,23,291,21],[271,26,291,24,"FEATUREBIT_ORDER"],[271,42,291,40],[271,43,291,41,"length"],[271,49,291,47],[271,52,291,50],[271,53,291,51],[271,55,291,53],[272,6,292,4,"bools"],[272,11,292,9],[272,12,292,10,"push"],[272,16,292,14],[272,17,292,15],[272,22,292,20],[272,23,292,21],[273,4,293,2],[274,4,294,2],[274,8,294,8,"featureBits"],[274,19,294,19],[274,22,294,22],[275,6,295,4,"word_length"],[275,17,295,15],[275,19,295,17,"words"],[275,24,295,22],[275,25,295,23,"length"],[276,4,296,2],[276,5,296,3],[277,4,297,2,"FEATUREBIT_ORDER"],[277,20,297,18],[277,21,297,19,"forEach"],[277,28,297,26],[277,29,297,27],[277,39,297,28,"featureName"],[277,50,297,39],[277,52,297,41,"index"],[277,57,297,46],[277,59,297,51],[278,6,298,4,"featureBits"],[278,17,298,15],[278,18,298,16,"featureName"],[278,29,298,27],[278,30,298,28],[278,33,298,31],[279,8,299,6,"required"],[279,16,299,14],[279,18,299,16,"bools"],[279,23,299,21],[279,24,299,22,"index"],[279,29,299,27],[279,32,299,30],[279,33,299,31],[279,34,299,32],[280,8,300,6,"supported"],[280,17,300,15],[280,19,300,17,"bools"],[280,24,300,22],[280,25,300,23,"index"],[280,30,300,28],[280,33,300,31],[280,34,300,32],[280,37,300,35],[280,38,300,36],[281,6,301,4],[281,7,301,5],[282,4,302,2],[282,5,302,3],[282,6,302,4],[283,4,303,2],[283,8,303,6,"bools"],[283,13,303,11],[283,14,303,12,"length"],[283,20,303,18],[283,23,303,21,"FEATUREBIT_ORDER"],[283,39,303,37],[283,40,303,38,"length"],[283,46,303,44],[283,49,303,47],[283,50,303,48],[283,52,303,50],[284,6,304,4],[284,10,304,10,"extraBits"],[284,19,304,19],[284,22,304,22,"bools"],[284,27,304,27],[284,28,304,28,"slice"],[284,33,304,33],[284,34,304,34,"FEATUREBIT_ORDER"],[284,50,304,50],[284,51,304,51,"length"],[284,57,304,57],[284,60,304,60],[284,61,304,61],[284,62,304,62],[285,6,305,4,"featureBits"],[285,17,305,15],[285,18,305,16,"extra_bits"],[285,28,305,26],[285,31,305,29],[286,8,306,6,"start_bit"],[286,17,306,15],[286,19,306,17,"FEATUREBIT_ORDER"],[286,35,306,33],[286,36,306,34,"length"],[286,42,306,40],[286,45,306,43],[286,46,306,44],[287,8,307,6,"bits"],[287,12,307,10],[287,14,307,12,"extraBits"],[287,23,307,21],[288,8,308,6,"has_required"],[288,20,308,18],[288,22,308,20,"extraBits"],[288,31,308,29],[288,32,308,30,"reduce"],[288,38,308,36],[288,39,309,8],[288,49,309,9,"result"],[288,55,309,15],[288,57,309,17,"bit"],[288,60,309,20],[288,62,309,22,"index"],[288,67,309,27],[289,10,309,27],[289,17,310,10,"index"],[289,22,310,15],[289,25,310,18],[289,26,310,19],[289,31,310,24],[289,32,310,25],[289,35,311,14,"result"],[289,41,311,20],[289,45,311,24],[289,50,311,29],[289,53,312,14,"result"],[289,59,312,20],[289,63,312,24,"bit"],[289,66,312,27],[290,8,312,27],[290,11,313,8],[290,16,314,6],[291,6,315,4],[291,7,315,5],[292,4,316,2],[292,5,316,3],[292,11,316,9],[293,6,317,4,"featureBits"],[293,17,317,15],[293,18,317,16,"extra_bits"],[293,28,317,26],[293,31,317,29],[294,8,318,6,"start_bit"],[294,17,318,15],[294,19,318,17,"FEATUREBIT_ORDER"],[294,35,318,33],[294,36,318,34,"length"],[294,42,318,40],[294,45,318,43],[294,46,318,44],[295,8,319,6,"bits"],[295,12,319,10],[295,14,319,12],[295,16,319,14],[296,8,320,6,"has_required"],[296,20,320,18],[296,22,320,20],[297,6,321,4],[297,7,321,5],[298,4,322,2],[299,4,323,2],[299,11,323,9,"featureBits"],[299,22,323,20],[300,2,324,0],[301,2,326,0],[301,11,326,9,"featureBitsEncoder"],[301,29,326,27,"featureBitsEncoder"],[301,30,326,29,"featureBits"],[301,41,326,40],[301,43,326,42],[302,4,327,2],[302,8,327,6,"wordsLength"],[302,19,327,17],[302,22,327,20,"featureBits"],[302,33,327,31],[302,34,327,32,"word_length"],[302,45,327,43],[303,4,328,2],[303,8,328,6,"bools"],[303,13,328,11],[303,16,328,14],[303,18,328,16],[304,4,329,2,"FEATUREBIT_ORDER"],[304,20,329,18],[304,21,329,19,"forEach"],[304,28,329,26],[304,29,329,27],[304,39,329,27,"featureName"],[304,50,329,38],[304,52,329,42],[305,6,330,4,"bools"],[305,11,330,9],[305,12,330,10,"push"],[305,16,330,14],[305,17,330,15],[305,18,330,16],[305,19,330,17],[305,20,330,18,"featureBits"],[305,31,330,29],[305,32,330,30,"featureName"],[305,43,330,41],[305,44,330,42],[305,48,330,46],[305,49,330,47],[305,50,330,48],[305,52,330,50,"required"],[305,60,330,58],[305,61,330,59],[306,6,331,4,"bools"],[306,11,331,9],[306,12,331,10,"push"],[306,16,331,14],[306,17,331,15],[306,18,331,16],[306,19,331,17],[306,20,331,18,"featureBits"],[306,31,331,29],[306,32,331,30,"featureName"],[306,43,331,41],[306,44,331,42],[306,48,331,46],[306,49,331,47],[306,50,331,48],[306,52,331,50,"supported"],[306,61,331,59],[306,62,331,60],[307,4,332,2],[307,5,332,3],[307,6,332,4],[308,4,333,2],[309,4,334,2],[309,11,334,9,"bools"],[309,16,334,14],[309,17,334,15,"bools"],[309,22,334,20],[309,23,334,21,"length"],[309,29,334,27],[309,32,334,30],[309,33,334,31],[309,34,334,32],[309,39,334,37],[309,44,334,42],[309,46,334,44],[310,6,335,4,"bools"],[310,11,335,9],[310,12,335,10,"pop"],[310,15,335,13],[310,16,335,14],[310,17,335,15],[311,4,336,2],[312,4,337,2],[312,11,337,9,"bools"],[312,16,337,14],[312,17,337,15,"length"],[312,23,337,21],[312,26,337,24],[312,27,337,25],[312,32,337,30],[312,33,337,31],[312,35,337,33],[313,6,338,4,"bools"],[313,11,338,9],[313,12,338,10,"push"],[313,16,338,14],[313,17,338,15],[313,22,338,20],[313,23,338,21],[314,4,339,2],[315,4,340,2],[315,8,341,4,"featureBits"],[315,19,341,15],[315,20,341,16,"extra_bits"],[315,30,341,26],[315,34,342,4,"Array"],[315,39,342,9],[315,40,342,10,"isArray"],[315,47,342,17],[315,48,342,18,"featureBits"],[315,59,342,29],[315,60,342,30,"extra_bits"],[315,70,342,40],[315,71,342,41,"bits"],[315,75,342,45],[315,76,342,46],[315,80,343,4,"featureBits"],[315,91,343,15],[315,92,343,16,"extra_bits"],[315,102,343,26],[315,103,343,27,"bits"],[315,107,343,31],[315,108,343,32,"length"],[315,114,343,38],[315,117,343,41],[315,118,343,42],[315,120,344,4],[316,6,345,4],[316,13,345,11,"bools"],[316,18,345,16],[316,19,345,17,"length"],[316,25,345,23],[316,28,345,26,"featureBits"],[316,39,345,37],[316,40,345,38,"extra_bits"],[316,50,345,48],[316,51,345,49,"start_bit"],[316,60,345,58],[316,62,345,60],[317,8,346,6,"bools"],[317,13,346,11],[317,14,346,12,"push"],[317,18,346,16],[317,19,346,17],[317,24,346,22],[317,25,346,23],[318,6,347,4],[319,6,348,4,"bools"],[319,11,348,9],[319,14,348,12,"bools"],[319,19,348,17],[319,20,348,18,"concat"],[319,26,348,24],[319,27,348,25,"featureBits"],[319,38,348,36],[319,39,348,37,"extra_bits"],[319,49,348,47],[319,50,348,48,"bits"],[319,54,348,52],[319,55,348,53],[320,4,349,2],[321,4,350,2],[321,8,350,6,"wordsLength"],[321,19,350,17],[321,24,350,22,"undefined"],[321,33,350,31],[321,37,350,35,"bools"],[321,42,350,40],[321,43,350,41,"length"],[321,49,350,47],[321,52,350,50],[321,53,350,51],[321,56,350,54,"wordsLength"],[321,67,350,65],[321,69,350,67],[322,6,351,4],[322,12,351,10],[322,16,351,14,"Error"],[322,21,351,19],[322,22,351,20],[322,75,351,73],[322,76,351,74],[323,4,352,2],[323,5,352,3],[323,11,352,9],[323,15,352,13,"wordsLength"],[323,26,352,24],[323,31,352,29,"undefined"],[323,40,352,38],[323,42,352,40],[324,6,353,4,"wordsLength"],[324,17,353,15],[324,20,353,18,"Math"],[324,24,353,22],[324,25,353,23,"ceil"],[324,29,353,27],[324,30,353,28,"bools"],[324,35,353,33],[324,36,353,34,"length"],[324,42,353,40],[324,45,353,43],[324,46,353,44],[324,47,353,45],[325,4,354,2],[326,4,355,2],[326,11,355,9],[326,15,355,13,"Array"],[326,20,355,18],[326,21,355,19,"wordsLength"],[326,32,355,30],[326,33,355,31],[326,34,355,32,"fill"],[326,38,355,36],[326,39,355,37],[326,40,355,38],[326,41,355,39],[326,42,355,40,"map"],[326,45,355,43],[326,46,355,44],[326,56,355,45,"_"],[326,57,355,46],[326,59,355,48,"index"],[326,64,355,53],[327,6,355,53],[327,13,356,4,"bools"],[327,18,356,9],[327,19,356,10,"index"],[327,24,356,15],[327,27,356,18],[327,28,356,19],[327,31,356,22],[327,32,356,23],[327,33,356,24],[327,37,356,28],[327,38,356,29],[327,41,357,4,"bools"],[327,46,357,9],[327,47,357,10,"index"],[327,52,357,15],[327,55,357,18],[327,56,357,19],[327,59,357,22],[327,60,357,23],[327,61,357,24],[327,65,357,28],[327,66,357,29],[327,69,358,4,"bools"],[327,74,358,9],[327,75,358,10,"index"],[327,80,358,15],[327,83,358,18],[327,84,358,19],[327,87,358,22],[327,88,358,23],[327,89,358,24],[327,93,358,28],[327,94,358,29],[327,97,359,4,"bools"],[327,102,359,9],[327,103,359,10,"index"],[327,108,359,15],[327,111,359,18],[327,112,359,19],[327,115,359,22],[327,116,359,23],[327,117,359,24],[327,121,359,28],[327,122,359,29],[327,125,360,4,"bools"],[327,130,360,9],[327,131,360,10,"index"],[327,136,360,15],[327,139,360,18],[327,140,360,19],[327,141,360,20],[327,145,360,24],[327,146,360,25],[328,4,360,25],[328,5,361,2],[328,6,361,3],[328,7,361,4,"reverse"],[328,14,361,11],[328,15,361,12],[328,16,361,13],[329,2,362,0],[331,2,364,0],[332,2,365,0],[333,2,366,0],[334,2,367,0],[335,2,368,0],[336,2,369,0],[337,2,370,0],[337,11,370,9,"routingInfoEncoder"],[337,29,370,27,"routingInfoEncoder"],[337,30,370,29,"datas"],[337,35,370,34],[337,37,370,36],[338,4,371,2],[338,8,371,6,"buffer"],[338,14,371,12],[338,17,371,15,"_$$_REQUIRE"],[338,28,371,15],[338,29,371,15,"_dependencyMap"],[338,43,371,15],[338,63,371,15,"Buffer"],[338,69,371,15],[338,70,371,22,"from"],[338,74,371,26],[338,75,371,27],[338,77,371,29],[338,78,371,30],[339,4,372,2,"datas"],[339,9,372,7],[339,10,372,8,"forEach"],[339,17,372,15],[339,18,372,16],[339,28,372,16,"data"],[339,32,372,20],[339,34,372,24],[340,6,373,4,"buffer"],[340,12,373,10],[340,15,373,13,"_$$_REQUIRE"],[340,26,373,13],[340,27,373,13,"_dependencyMap"],[340,41,373,13],[340,61,373,13,"Buffer"],[340,67,373,13],[340,68,373,20,"concat"],[340,74,373,26],[340,75,373,27],[340,76,373,28,"buffer"],[340,82,373,34],[340,84,373,36,"hexToBuffer"],[340,95,373,47],[340,96,373,48,"data"],[340,100,373,52],[340,101,373,53,"pubkey"],[340,107,373,59],[340,108,373,60],[340,109,373,61],[340,110,373,62],[341,6,374,4,"buffer"],[341,12,374,10],[341,15,374,13,"_$$_REQUIRE"],[341,26,374,13],[341,27,374,13,"_dependencyMap"],[341,41,374,13],[341,61,374,13,"Buffer"],[341,67,374,13],[341,68,374,20,"concat"],[341,74,374,26],[341,75,374,27],[341,76,374,28,"buffer"],[341,82,374,34],[341,84,374,36,"hexToBuffer"],[341,95,374,47],[341,96,374,48,"data"],[341,100,374,52],[341,101,374,53,"short_channel_id"],[341,117,374,69],[341,118,374,70],[341,119,374,71],[341,120,374,72],[342,6,375,4,"buffer"],[342,12,375,10],[342,15,375,13,"_$$_REQUIRE"],[342,26,375,13],[342,27,375,13,"_dependencyMap"],[342,41,375,13],[342,61,375,13,"Buffer"],[342,67,375,13],[342,68,375,20,"concat"],[342,74,375,26],[342,75,375,27],[342,76,375,28,"buffer"],[342,82,375,34],[342,84,375,36,"_$$_REQUIRE"],[342,95,375,36],[342,96,375,36,"_dependencyMap"],[342,110,375,36],[342,130,375,36,"Buffer"],[342,136,375,36],[342,137,375,43,"from"],[342,141,375,47],[342,142,375,48],[342,143,375,49],[342,144,375,50],[342,146,375,52],[342,147,375,53],[342,149,375,55],[342,150,375,56],[342,151,375,57],[342,152,375,58,"concat"],[342,158,375,64],[342,159,375,65,"intBEToWords"],[342,171,375,77],[342,172,375,78,"data"],[342,176,375,82],[342,177,375,83,"fee_base_msat"],[342,190,375,96],[342,192,375,98],[342,193,375,99],[342,194,375,100],[342,195,375,101],[342,196,375,102,"slice"],[342,201,375,107],[342,202,375,108],[342,203,375,109],[342,204,375,110],[342,205,375,111],[342,206,375,112],[342,207,375,113],[342,208,375,114],[343,6,376,4,"buffer"],[343,12,376,10],[343,15,376,13,"_$$_REQUIRE"],[343,26,376,13],[343,27,376,13,"_dependencyMap"],[343,41,376,13],[343,61,376,13,"Buffer"],[343,67,376,13],[343,68,376,20,"concat"],[343,74,376,26],[343,75,376,27],[343,76,376,28,"buffer"],[343,82,376,34],[343,84,376,36,"_$$_REQUIRE"],[343,95,376,36],[343,96,376,36,"_dependencyMap"],[343,110,376,36],[343,130,376,36,"Buffer"],[343,136,376,36],[343,137,376,43,"from"],[343,141,376,47],[343,142,376,48],[343,143,376,49],[343,144,376,50],[343,146,376,52],[343,147,376,53],[343,149,376,55],[343,150,376,56],[343,151,376,57],[343,152,376,58,"concat"],[343,158,376,64],[343,159,376,65,"intBEToWords"],[343,171,376,77],[343,172,376,78,"data"],[343,176,376,82],[343,177,376,83,"fee_proportional_millionths"],[343,204,376,110],[343,206,376,112],[343,207,376,113],[343,208,376,114],[343,209,376,115],[343,210,376,116,"slice"],[343,215,376,121],[343,216,376,122],[343,217,376,123],[343,218,376,124],[343,219,376,125],[343,220,376,126],[343,221,376,127],[343,222,376,128],[344,6,377,4,"buffer"],[344,12,377,10],[344,15,377,13,"_$$_REQUIRE"],[344,26,377,13],[344,27,377,13,"_dependencyMap"],[344,41,377,13],[344,61,377,13,"Buffer"],[344,67,377,13],[344,68,377,20,"concat"],[344,74,377,26],[344,75,377,27],[344,76,377,28,"buffer"],[344,82,377,34],[344,84,377,36,"_$$_REQUIRE"],[344,95,377,36],[344,96,377,36,"_dependencyMap"],[344,110,377,36],[344,130,377,36,"Buffer"],[344,136,377,36],[344,137,377,43,"from"],[344,141,377,47],[344,142,377,48],[344,143,377,49],[344,144,377,50],[344,145,377,51],[344,146,377,52,"concat"],[344,152,377,58],[344,153,377,59,"intBEToWords"],[344,165,377,71],[344,166,377,72,"data"],[344,170,377,76],[344,171,377,77,"cltv_expiry_delta"],[344,188,377,94],[344,190,377,96],[344,191,377,97],[344,192,377,98],[344,193,377,99],[344,194,377,100,"slice"],[344,199,377,105],[344,200,377,106],[344,201,377,107],[344,202,377,108],[344,203,377,109],[344,204,377,110],[344,205,377,111],[344,206,377,112],[345,4,378,2],[345,5,378,3],[345,6,378,4],[346,4,379,2],[346,11,379,9,"hexToWord"],[346,20,379,18],[346,21,379,19,"buffer"],[346,27,379,25],[346,28,379,26],[347,2,380,0],[349,2,382,0],[350,2,383,0],[351,2,384,0],[351,11,384,9,"purposeCommitEncoder"],[351,31,384,29,"purposeCommitEncoder"],[351,32,384,31,"data"],[351,36,384,35],[351,38,384,37],[352,4,385,2],[352,8,385,6,"buffer"],[352,14,385,12],[353,4,386,2],[353,8,386,6,"data"],[353,12,386,10],[353,17,386,15,"undefined"],[353,26,386,24],[353,31,386,29],[353,38,386,36,"data"],[353,42,386,40],[353,47,386,45],[353,55,386,53],[353,59,386,57,"data"],[353,63,386,61],[353,75,386,73,"String"],[353,81,386,79],[353,82,386,80],[353,84,386,82],[354,6,387,4],[354,10,387,8,"data"],[354,14,387,12],[354,15,387,13,"match"],[354,20,387,18],[354,21,387,19],[354,42,387,40],[354,43,387,41],[354,45,387,43],[355,8,388,6,"buffer"],[355,14,388,12],[355,17,388,15,"_$$_REQUIRE"],[355,28,388,15],[355,29,388,15,"_dependencyMap"],[355,43,388,15],[355,63,388,15,"Buffer"],[355,69,388,15],[355,70,388,22,"from"],[355,74,388,26],[355,75,388,27,"data"],[355,79,388,31],[355,81,388,33],[355,86,388,38],[355,87,388,39],[356,6,389,4],[356,7,389,5],[356,13,389,11],[357,8,390,6,"buffer"],[357,14,390,12],[357,17,390,15,"sha256"],[357,23,390,21],[357,24,390,22,"_$$_REQUIRE"],[357,35,390,22],[357,36,390,22,"_dependencyMap"],[357,50,390,22],[357,70,390,22,"Buffer"],[357,76,390,22],[357,77,390,29,"from"],[357,81,390,33],[357,82,390,34,"data"],[357,86,390,38],[357,88,390,40],[357,94,390,46],[357,95,390,47],[357,96,390,48],[358,6,391,4],[359,4,392,2],[359,5,392,3],[359,11,392,9],[360,6,393,4],[360,12,393,10],[360,16,393,14,"Error"],[360,21,393,19],[360,22,393,20],[360,80,393,78],[360,81,393,79],[361,4,394,2],[362,4,395,2],[362,11,395,9,"_$$_REQUIRE"],[362,22,395,9],[362,23,395,9,"_dependencyMap"],[362,37,395,9],[362,52,395,16,"toWords"],[362,59,395,23],[362,60,395,24,"buffer"],[362,66,395,30],[362,67,395,31],[363,2,396,0],[364,2,398,0],[364,11,398,9,"tagsItems"],[364,20,398,18,"tagsItems"],[364,21,398,20,"tags"],[364,25,398,24],[364,27,398,26,"tagName"],[364,34,398,33],[364,36,398,35],[365,4,399,2],[365,8,399,8,"tag"],[365,11,399,11],[365,14,399,14,"tags"],[365,18,399,18],[365,19,399,19,"filter"],[365,25,399,25],[365,26,399,26],[365,36,399,26,"item"],[365,40,399,30],[366,6,399,30],[366,13,399,34,"item"],[366,17,399,38],[366,18,399,39,"tagName"],[366,25,399,46],[366,30,399,51,"tagName"],[366,37,399,58],[367,4,399,58],[367,6,399,59],[368,4,400,2],[368,8,400,8,"data"],[368,12,400,12],[368,15,400,15,"tag"],[368,18,400,18],[368,19,400,19,"length"],[368,25,400,25],[368,28,400,28],[368,29,400,29],[368,32,400,32,"tag"],[368,35,400,35],[368,36,400,36],[368,37,400,37],[368,38,400,38],[368,39,400,39,"data"],[368,43,400,43],[368,46,400,46],[368,50,400,50],[369,4,401,2],[369,11,401,9,"data"],[369,15,401,13],[370,2,402,0],[371,2,404,0],[371,11,404,9,"tagsContainItem"],[371,26,404,24,"tagsContainItem"],[371,27,404,26,"tags"],[371,31,404,30],[371,33,404,32,"tagName"],[371,40,404,39],[371,42,404,41],[372,4,405,2],[372,11,405,9,"tagsItems"],[372,20,405,18],[372,21,405,19,"tags"],[372,25,405,23],[372,27,405,25,"tagName"],[372,34,405,32],[372,35,405,33],[372,40,405,38],[372,44,405,42],[373,2,406,0],[374,2,408,0],[374,11,408,9,"orderKeys"],[374,20,408,18,"orderKeys"],[374,21,408,20,"unorderedObj"],[374,33,408,32],[374,35,408,34,"forDecode"],[374,44,408,43],[374,46,408,45],[375,4,409,2],[375,8,409,8,"orderedObj"],[375,18,409,18],[375,21,409,21],[375,22,409,22],[375,23,409,23],[376,4,410,2,"Object"],[376,10,410,8],[376,11,410,9,"keys"],[376,15,410,13],[376,16,410,14,"unorderedObj"],[376,28,410,26],[376,29,410,27],[376,30,410,28,"sort"],[376,34,410,32],[376,35,410,33],[376,36,410,34],[376,37,410,35,"forEach"],[376,44,410,42],[376,45,410,43],[376,55,410,44,"key"],[376,58,410,47],[376,60,410,52],[377,6,411,4,"orderedObj"],[377,16,411,14],[377,17,411,15,"key"],[377,20,411,18],[377,21,411,19],[377,24,411,22,"unorderedObj"],[377,36,411,34],[377,37,411,35,"key"],[377,40,411,38],[377,41,411,39],[378,4,412,2],[378,5,412,3],[378,6,412,4],[379,4,413,2],[379,8,413,6,"forDecode"],[379,17,413,15],[379,22,413,20],[379,26,413,24],[379,28,413,26],[380,6,414,4],[380,10,414,10,"cacheName"],[380,19,414,19],[380,22,414,22],[380,42,414,42],[381,6,415,4,"Object"],[381,12,415,10],[381,13,415,11,"defineProperty"],[381,27,415,25],[381,28,415,26,"orderedObj"],[381,38,415,36],[381,40,415,38],[381,52,415,50],[381,54,415,52],[382,8,416,6,"get"],[382,11,416,9],[382,22,416,6,"get"],[382,25,416,9,"get"],[382,26,416,9],[382,28,416,13],[383,10,417,8],[383,14,417,12],[383,15,417,13],[383,19,417,17],[383,20,417,18,"cacheName"],[383,29,417,27],[383,30,417,28],[383,32,417,30],[384,12,418,10,"Object"],[384,18,418,16],[384,19,418,17,"defineProperty"],[384,33,418,31],[384,34,418,32],[384,38,418,36],[384,40,418,38,"cacheName"],[384,49,418,47],[384,51,418,49],[385,14,419,12,"value"],[385,19,419,17],[385,21,419,19,"getTagsObject"],[385,34,419,32],[385,35,419,33],[385,39,419,37],[385,40,419,38,"tags"],[385,44,419,42],[386,12,420,10],[386,13,420,11],[386,14,420,12],[387,10,421,8],[388,10,422,8],[388,17,422,15],[388,21,422,19],[388,22,422,20,"cacheName"],[388,31,422,29],[388,32,422,30],[389,8,423,6],[390,6,424,4],[390,7,424,5],[390,8,424,6],[391,4,425,2],[392,4,426,2],[392,11,426,9,"orderedObj"],[392,21,426,19],[393,2,427,0],[394,2,429,0],[394,11,429,9,"satToHrp"],[394,19,429,17,"satToHrp"],[394,20,429,19,"satoshis"],[394,28,429,27],[394,30,429,29],[395,4,430,2],[395,8,430,6],[395,9,430,7,"satoshis"],[395,17,430,15],[395,18,430,16,"toString"],[395,26,430,24],[395,27,430,25],[395,28,430,26],[395,29,430,27,"match"],[395,34,430,32],[395,35,430,33],[395,42,430,40],[395,43,430,41],[395,45,430,43],[396,6,431,4],[396,12,431,10],[396,16,431,14,"Error"],[396,21,431,19],[396,22,431,20],[396,51,431,49],[396,52,431,50],[397,4,432,2],[398,4,433,2],[398,8,433,8,"millisatoshisBN"],[398,23,433,23],[398,26,433,26],[398,31,433,26,"_$$_REQUIRE"],[398,42,433,26],[398,43,433,26,"_dependencyMap"],[398,57,433,26],[398,72,433,33,"satoshis"],[398,80,433,41],[398,82,433,43],[398,84,433,45],[398,85,433,46],[399,4,434,2],[399,11,434,9,"millisatToHrp"],[399,24,434,22],[399,25,434,23,"millisatoshisBN"],[399,40,434,38],[399,41,434,39,"mul"],[399,44,434,42],[399,45,434,43],[399,50,434,43,"_$$_REQUIRE"],[399,61,434,43],[399,62,434,43,"_dependencyMap"],[399,76,434,43],[399,91,434,50],[399,95,434,54],[399,97,434,56],[399,99,434,58],[399,100,434,59],[399,101,434,60],[399,102,434,61],[400,2,435,0],[401,2,437,0],[401,11,437,9,"millisatToHrp"],[401,24,437,22,"millisatToHrp"],[401,25,437,24,"millisatoshis"],[401,38,437,37],[401,40,437,39],[402,4,438,2],[402,8,438,6],[402,9,438,7,"millisatoshis"],[402,22,438,20],[402,23,438,21,"toString"],[402,31,438,29],[402,32,438,30],[402,33,438,31],[402,34,438,32,"match"],[402,39,438,37],[402,40,438,38],[402,47,438,45],[402,48,438,46],[402,50,438,48],[403,6,439,4],[403,12,439,10],[403,16,439,14,"Error"],[403,21,439,19],[403,22,439,20],[403,56,439,54],[403,57,439,55],[404,4,440,2],[405,4,441,2],[405,8,441,8,"millisatoshisBN"],[405,23,441,23],[405,26,441,26],[405,31,441,26,"_$$_REQUIRE"],[405,42,441,26],[405,43,441,26,"_dependencyMap"],[405,57,441,26],[405,72,441,33,"millisatoshis"],[405,85,441,46],[405,87,441,48],[405,89,441,50],[405,90,441,51],[406,4,442,2],[406,8,442,8,"millisatoshisString"],[406,27,442,27],[406,30,442,30,"millisatoshisBN"],[406,45,442,45],[406,46,442,46,"toString"],[406,54,442,54],[406,55,442,55],[406,57,442,57],[406,58,442,58],[407,4,443,2],[407,8,443,8,"millisatoshisLength"],[407,27,443,27],[407,30,443,30,"millisatoshisString"],[407,49,443,49],[407,50,443,50,"length"],[407,56,443,56],[408,4,444,2],[408,8,444,6,"divisorString"],[408,21,444,19],[408,23,444,21,"valueString"],[408,34,444,32],[409,4,445,2],[409,8,445,6,"millisatoshisLength"],[409,27,445,25],[409,30,445,28],[409,32,445,30],[409,36,445,34],[409,44,445,42],[409,45,445,43,"test"],[409,49,445,47],[409,50,445,48,"millisatoshisString"],[409,69,445,67],[409,70,445,68],[409,72,445,70],[410,6,446,4,"divisorString"],[410,19,446,17],[410,22,446,20],[410,24,446,22],[411,6,447,4,"valueString"],[411,17,447,15],[411,20,447,18,"millisatoshisBN"],[411,35,447,33],[411,36,447,34,"div"],[411,39,447,37],[411,40,447,38,"MILLISATS_PER_BTC"],[411,57,447,55],[411,58,447,56],[411,59,447,57,"toString"],[411,67,447,65],[411,68,447,66],[411,70,447,68],[411,71,447,69],[412,4,448,2],[412,5,448,3],[412,11,448,9],[412,15,448,13,"millisatoshisLength"],[412,34,448,32],[412,37,448,35],[412,38,448,36],[412,42,448,40],[412,49,448,47],[412,50,448,48,"test"],[412,54,448,52],[412,55,448,53,"millisatoshisString"],[412,74,448,72],[412,75,448,73],[412,77,448,75],[413,6,449,4,"divisorString"],[413,19,449,17],[413,22,449,20],[413,25,449,23],[414,6,450,4,"valueString"],[414,17,450,15],[414,20,450,18,"millisatoshisBN"],[414,35,450,33],[414,36,450,34,"div"],[414,39,450,37],[414,40,450,38,"MILLISATS_PER_MILLIBTC"],[414,62,450,60],[414,63,450,61],[414,64,450,62,"toString"],[414,72,450,70],[414,73,450,71],[414,75,450,73],[414,76,450,74],[415,4,451,2],[415,5,451,3],[415,11,451,9],[415,15,451,13,"millisatoshisLength"],[415,34,451,32],[415,37,451,35],[415,38,451,36],[415,42,451,40],[415,49,451,47],[415,50,451,48,"test"],[415,54,451,52],[415,55,451,53,"millisatoshisString"],[415,74,451,72],[415,75,451,73],[415,77,451,75],[416,6,452,4,"divisorString"],[416,19,452,17],[416,22,452,20],[416,25,452,23],[417,6,453,4,"valueString"],[417,17,453,15],[417,20,453,18,"millisatoshisBN"],[417,35,453,33],[417,36,453,34,"div"],[417,39,453,37],[417,40,453,38,"MILLISATS_PER_MICROBTC"],[417,62,453,60],[417,63,453,61],[417,64,453,62,"toString"],[417,72,453,70],[417,73,453,71],[417,75,453,73],[417,76,453,74],[418,4,454,2],[418,5,454,3],[418,11,454,9],[418,15,454,13,"millisatoshisLength"],[418,34,454,32],[418,37,454,35],[418,38,454,36],[418,42,454,40],[418,49,454,47],[418,50,454,48,"test"],[418,54,454,52],[418,55,454,53,"millisatoshisString"],[418,74,454,72],[418,75,454,73],[418,77,454,75],[419,6,455,4,"divisorString"],[419,19,455,17],[419,22,455,20],[419,25,455,23],[420,6,456,4,"valueString"],[420,17,456,15],[420,20,456,18,"millisatoshisBN"],[420,35,456,33],[420,36,456,34,"div"],[420,39,456,37],[420,40,456,38,"MILLISATS_PER_NANOBTC"],[420,61,456,59],[420,62,456,60],[420,63,456,61,"toString"],[420,71,456,69],[420,72,456,70],[420,74,456,72],[420,75,456,73],[421,4,457,2],[421,5,457,3],[421,11,457,9],[422,6,458,4,"divisorString"],[422,19,458,17],[422,22,458,20],[422,25,458,23],[423,6,459,4,"valueString"],[423,17,459,15],[423,20,459,18,"millisatoshisBN"],[423,35,459,33],[423,36,459,34,"mul"],[423,39,459,37],[423,40,459,38,"PICOBTC_PER_MILLISATS"],[423,61,459,59],[423,62,459,60],[423,63,459,61,"toString"],[423,71,459,69],[423,72,459,70],[423,74,459,72],[423,75,459,73],[424,4,460,2],[425,4,461,2],[425,11,461,9,"valueString"],[425,22,461,20],[425,25,461,23,"divisorString"],[425,38,461,36],[426,2,462,0],[427,2,464,0],[427,11,464,9,"hrpToSat"],[427,19,464,17,"hrpToSat"],[427,20,464,19,"hrpString"],[427,29,464,28],[427,31,464,30,"outputString"],[427,43,464,42],[427,45,464,44],[428,4,465,2],[428,8,465,8,"millisatoshisBN"],[428,23,465,23],[428,26,465,26,"hrpToMillisat"],[428,39,465,39],[428,40,465,40,"hrpString"],[428,49,465,49],[428,51,465,51],[428,56,465,56],[428,57,465,57],[429,4,466,2],[429,8,466,6],[429,9,466,7,"millisatoshisBN"],[429,24,466,22],[429,25,466,23,"mod"],[429,28,466,26],[429,29,466,27],[429,34,466,27,"_$$_REQUIRE"],[429,45,466,27],[429,46,466,27,"_dependencyMap"],[429,60,466,27],[429,75,466,34],[429,79,466,38],[429,81,466,40],[429,83,466,42],[429,84,466,43],[429,85,466,44],[429,86,466,45,"eq"],[429,88,466,47],[429,89,466,48],[429,94,466,48,"_$$_REQUIRE"],[429,105,466,48],[429,106,466,48,"_dependencyMap"],[429,120,466,48],[429,135,466,55],[429,136,466,56],[429,138,466,58],[429,140,466,60],[429,141,466,61],[429,142,466,62],[429,144,466,64],[430,6,467,4],[430,12,467,10],[430,16,467,14,"Error"],[430,21,467,19],[430,22,467,20],[430,56,467,54],[430,57,467,55],[431,4,468,2],[432,4,469,2],[432,8,469,8,"result"],[432,14,469,14],[432,17,469,17,"millisatoshisBN"],[432,32,469,32],[432,33,469,33,"div"],[432,36,469,36],[432,37,469,37],[432,42,469,37,"_$$_REQUIRE"],[432,53,469,37],[432,54,469,37,"_dependencyMap"],[432,68,469,37],[432,83,469,44],[432,87,469,48],[432,89,469,50],[432,91,469,52],[432,92,469,53],[432,93,469,54],[433,4,470,2],[433,11,470,9,"outputString"],[433,23,470,21],[433,26,470,24,"result"],[433,32,470,30],[433,33,470,31,"toString"],[433,41,470,39],[433,42,470,40],[433,43,470,41],[433,46,470,44,"result"],[433,52,470,50],[434,2,471,0],[435,2,473,0],[435,11,473,9,"hrpToMillisat"],[435,24,473,22,"hrpToMillisat"],[435,25,473,24,"hrpString"],[435,34,473,33],[435,36,473,35,"outputString"],[435,48,473,47],[435,50,473,49],[436,4,474,2],[436,8,474,6,"divisor"],[436,15,474,13],[436,17,474,15,"value"],[436,22,474,20],[437,4,475,2],[437,8,475,6,"hrpString"],[437,17,475,15],[437,18,475,16,"slice"],[437,23,475,21],[437,24,475,22],[437,25,475,23],[437,26,475,24],[437,27,475,25],[437,28,475,26,"match"],[437,33,475,31],[437,34,475,32],[437,44,475,42],[437,45,475,43],[437,47,475,45],[438,6,476,4,"divisor"],[438,13,476,11],[438,16,476,14,"hrpString"],[438,25,476,23],[438,26,476,24,"slice"],[438,31,476,29],[438,32,476,30],[438,33,476,31],[438,34,476,32],[438,35,476,33],[439,6,477,4,"value"],[439,11,477,9],[439,14,477,12,"hrpString"],[439,23,477,21],[439,24,477,22,"slice"],[439,29,477,27],[439,30,477,28],[439,31,477,29],[439,33,477,31],[439,34,477,32],[439,35,477,33],[439,36,477,34],[440,4,478,2],[440,5,478,3],[440,11,478,9],[440,15,478,13,"hrpString"],[440,24,478,22],[440,25,478,23,"slice"],[440,30,478,28],[440,31,478,29],[440,32,478,30],[440,33,478,31],[440,34,478,32],[440,35,478,33,"match"],[440,40,478,38],[440,41,478,39],[440,55,478,53],[440,56,478,54],[440,58,478,56],[441,6,479,4],[441,12,479,10],[441,16,479,14,"Error"],[441,21,479,19],[441,22,479,20],[441,61,479,59],[441,62,479,60],[442,4,480,2],[442,5,480,3],[442,11,480,9],[443,6,481,4,"value"],[443,11,481,9],[443,14,481,12,"hrpString"],[443,23,481,21],[444,4,482,2],[445,4,484,2],[445,8,484,6],[445,9,484,7,"value"],[445,14,484,12],[445,15,484,13,"match"],[445,20,484,18],[445,21,484,19],[445,28,484,26],[445,29,484,27],[445,31,484,29],[445,37,484,35],[445,41,484,39,"Error"],[445,46,484,44],[445,47,484,45],[445,82,484,80],[445,83,484,81],[446,4,486,2],[446,8,486,8,"valueBN"],[446,15,486,15],[446,18,486,18],[446,23,486,18,"_$$_REQUIRE"],[446,34,486,18],[446,35,486,18,"_dependencyMap"],[446,49,486,18],[446,64,486,25,"value"],[446,69,486,30],[446,71,486,32],[446,73,486,34],[446,74,486,35],[447,4,488,2],[447,8,488,8,"millisatoshisBN"],[447,23,488,23],[447,26,488,26,"divisor"],[447,33,488,33],[447,36,489,6,"valueBN"],[447,43,489,13],[447,44,489,14,"mul"],[447,47,489,17],[447,48,489,18,"MILLISATS_PER_BTC"],[447,65,489,35],[447,66,489,36],[447,67,489,37,"div"],[447,70,489,40],[447,71,489,41,"DIVISORS"],[447,79,489,49],[447,80,489,50,"divisor"],[447,87,489,57],[447,88,489,58],[447,89,489,59],[447,92,490,6,"valueBN"],[447,99,490,13],[447,100,490,14,"mul"],[447,103,490,17],[447,104,490,18,"MILLISATS_PER_BTC"],[447,121,490,35],[447,122,490,36],[448,4,492,2],[448,8,492,8,"divisor"],[448,15,492,15],[448,20,492,20],[448,23,492,23],[448,27,492,27],[448,28,492,28,"valueBN"],[448,35,492,35],[448,36,492,36,"mod"],[448,39,492,39],[448,40,492,40],[448,45,492,40,"_$$_REQUIRE"],[448,56,492,40],[448,57,492,40,"_dependencyMap"],[448,71,492,40],[448,86,492,47],[448,88,492,49],[448,90,492,51],[448,92,492,53],[448,93,492,54],[448,94,492,55],[448,95,492,56,"eq"],[448,97,492,58],[448,98,492,59],[448,103,492,59,"_$$_REQUIRE"],[448,114,492,59],[448,115,492,59,"_dependencyMap"],[448,129,492,59],[448,144,492,66],[448,145,492,67],[448,147,492,69],[448,149,492,71],[448,150,492,72],[448,151,492,73],[448,155,493,6,"millisatoshisBN"],[448,170,493,21],[448,171,493,22,"gt"],[448,173,493,24],[448,174,493,25,"MAX_MILLISATS"],[448,187,493,38],[448,188,493,39],[448,190,493,42],[449,6,494,4],[449,12,494,10],[449,16,494,14,"Error"],[449,21,494,19],[449,22,494,20],[449,56,494,54],[449,57,494,55],[450,4,495,2],[451,4,497,2],[451,11,497,9,"outputString"],[451,23,497,21],[451,26,497,24,"millisatoshisBN"],[451,41,497,39],[451,42,497,40,"toString"],[451,50,497,48],[451,51,497,49],[451,52,497,50],[451,55,497,53,"millisatoshisBN"],[451,70,497,68],[452,2,498,0],[453,2,500,0],[453,11,500,9,"sign"],[453,15,500,13,"sign"],[453,16,500,15,"inputPayReqObj"],[453,30,500,29],[453,32,500,31,"inputPrivateKey"],[453,47,500,46],[453,49,500,48],[454,4,501,2],[454,8,501,8,"payReqObj"],[454,17,501,17],[454,20,501,20,"_$$_REQUIRE"],[454,31,501,20],[454,32,501,20,"_dependencyMap"],[454,46,501,20],[454,71,501,30,"inputPayReqObj"],[454,85,501,44],[454,86,501,45],[455,4,502,2],[455,8,502,8,"privateKey"],[455,18,502,18],[455,21,502,21,"hexToBuffer"],[455,32,502,32],[455,33,502,33,"inputPrivateKey"],[455,48,502,48],[455,49,502,49],[456,4,503,2],[456,8,503,6,"payReqObj"],[456,17,503,15],[456,18,503,16,"complete"],[456,26,503,24],[456,30,503,28,"payReqObj"],[456,39,503,37],[456,40,503,38,"paymentRequest"],[456,54,503,52],[456,56,503,54],[456,63,503,61,"payReqObj"],[456,72,503,70],[457,4,505,2],[457,8,505,6,"privateKey"],[457,18,505,16],[457,23,505,21,"undefined"],[457,32,505,30],[457,36,505,34,"privateKey"],[457,46,505,44],[457,47,505,45,"length"],[457,53,505,51],[457,58,505,56],[457,60,505,58],[457,64,506,6],[457,65,506,7,"_$$_REQUIRE"],[457,76,506,7],[457,77,506,7,"_dependencyMap"],[457,91,506,7],[457,109,506,17,"privateKeyVerify"],[457,125,506,33],[457,126,506,34,"privateKey"],[457,136,506,44],[457,137,506,45],[457,139,506,47],[458,6,507,4],[458,12,507,10],[458,16,507,14,"Error"],[458,21,507,19],[458,22,507,20],[458,81,507,79],[458,82,507,80],[459,4,508,2],[460,4,510,2],[460,8,510,6,"nodePublicKey"],[460,21,510,19],[460,23,510,21,"tagNodePublicKey"],[460,39,510,37],[461,4,511,2],[462,4,512,2],[462,8,512,6,"tagsContainItem"],[462,23,512,21],[462,24,512,22,"payReqObj"],[462,33,512,31],[462,34,512,32,"tags"],[462,38,512,36],[462,40,512,38,"TAGNAMES"],[462,48,512,46],[462,49,512,47],[462,53,512,51],[462,54,512,52],[462,55,512,53],[462,57,512,55],[463,6,513,4,"tagNodePublicKey"],[463,22,513,20],[463,25,513,23,"hexToBuffer"],[463,36,513,34],[463,37,513,35,"tagsItems"],[463,46,513,44],[463,47,513,45,"payReqObj"],[463,56,513,54],[463,57,513,55,"tags"],[463,61,513,59],[463,63,513,61,"TAGNAMES"],[463,71,513,69],[463,72,513,70],[463,76,513,74],[463,77,513,75],[463,78,513,76],[463,79,513,77],[464,4,514,2],[465,4,515,2],[466,4,516,2],[466,8,516,6,"payReqObj"],[466,17,516,15],[466,18,516,16,"payeeNodeKey"],[466,30,516,28],[466,32,516,30],[467,6,517,4,"nodePublicKey"],[467,19,517,17],[467,22,517,20,"hexToBuffer"],[467,33,517,31],[467,34,517,32,"payReqObj"],[467,43,517,41],[467,44,517,42,"payeeNodeKey"],[467,56,517,54],[467,57,517,55],[468,4,518,2],[469,4,519,2],[470,4,520,2],[470,8,520,6,"nodePublicKey"],[470,21,520,19],[470,25,520,23,"tagNodePublicKey"],[470,41,520,39],[470,45,520,43],[470,46,520,44,"tagNodePublicKey"],[470,62,520,60],[470,63,520,61,"equals"],[470,69,520,67],[470,70,520,68,"nodePublicKey"],[470,83,520,81],[470,84,520,82],[470,86,520,84],[471,6,521,4],[471,12,521,10],[471,16,521,14,"Error"],[471,21,521,19],[471,22,521,20],[471,80,521,78],[471,81,521,79],[472,4,522,2],[474,4,524,2],[475,4,525,2,"nodePublicKey"],[475,17,525,15],[475,20,525,18,"tagNodePublicKey"],[475,36,525,34],[475,40,525,38,"nodePublicKey"],[475,53,525,51],[476,4,527,2],[476,8,527,8,"publicKey"],[476,17,527,17],[476,20,527,20,"_$$_REQUIRE"],[476,31,527,20],[476,32,527,20,"_dependencyMap"],[476,46,527,20],[476,66,527,20,"Buffer"],[476,72,527,20],[476,73,527,27,"from"],[476,77,527,31],[476,78,527,32,"_$$_REQUIRE"],[476,89,527,32],[476,90,527,32,"_dependencyMap"],[476,104,527,32],[476,122,527,42,"publicKeyCreate"],[476,137,527,57],[476,138,527,58,"privateKey"],[476,148,527,68],[476,149,527,69],[476,150,527,70],[478,4,529,2],[479,4,530,2],[479,8,530,6,"nodePublicKey"],[479,21,530,19],[479,25,530,23],[479,26,530,24,"publicKey"],[479,35,530,33],[479,36,530,34,"equals"],[479,42,530,40],[479,43,530,41,"nodePublicKey"],[479,56,530,54],[479,57,530,55],[479,59,530,57],[480,6,531,4],[480,12,531,10],[480,16,531,14,"Error"],[480,21,531,19],[480,22,531,20],[480,97,531,95],[480,98,531,96],[481,4,532,2],[482,4,534,2],[482,8,534,8,"words"],[482,13,534,13],[482,16,534,16,"_$$_REQUIRE"],[482,27,534,16],[482,28,534,16,"_dependencyMap"],[482,42,534,16],[482,57,534,23,"decode"],[482,63,534,29],[482,64,534,30,"payReqObj"],[482,73,534,39],[482,74,534,40,"wordsTemp"],[482,83,534,49],[482,85,534,51,"Number"],[482,91,534,57],[482,92,534,58,"MAX_SAFE_INTEGER"],[482,108,534,74],[482,109,534,75],[482,110,534,76,"words"],[482,115,534,81],[484,4,536,2],[485,4,537,2],[486,4,538,2],[487,4,539,2],[487,8,539,8,"toSign"],[487,14,539,14],[487,17,539,17,"_$$_REQUIRE"],[487,28,539,17],[487,29,539,17,"_dependencyMap"],[487,43,539,17],[487,63,539,17,"Buffer"],[487,69,539,17],[487,70,539,24,"concat"],[487,76,539,30],[487,77,539,31],[487,78,539,32,"_$$_REQUIRE"],[487,89,539,32],[487,90,539,32,"_dependencyMap"],[487,104,539,32],[487,124,539,32,"Buffer"],[487,130,539,32],[487,131,539,39,"from"],[487,135,539,43],[487,136,539,44,"payReqObj"],[487,145,539,53],[487,146,539,54,"prefix"],[487,152,539,60],[487,154,539,62],[487,160,539,68],[487,161,539,69],[487,163,539,71,"wordsToBuffer"],[487,176,539,84],[487,177,539,85,"words"],[487,182,539,90],[487,183,539,91],[487,184,539,92],[487,185,539,93],[488,4,540,2],[489,4,541,2],[489,8,541,8,"payReqHash"],[489,18,541,18],[489,21,541,21,"sha256"],[489,27,541,27],[489,28,541,28,"toSign"],[489,34,541,34],[489,35,541,35],[491,4,543,2],[492,4,544,2],[493,4,545,2],[494,4,546,2],[494,8,546,8,"sigObj"],[494,14,546,14],[494,17,546,17,"_$$_REQUIRE"],[494,28,546,17],[494,29,546,17,"_dependencyMap"],[494,43,546,17],[494,61,546,27,"ecdsaSign"],[494,70,546,36],[494,71,546,37,"payReqHash"],[494,81,546,47],[494,83,546,49,"privateKey"],[494,93,546,59],[494,94,546,60],[495,4,547,2,"sigObj"],[495,10,547,8],[495,11,547,9,"signature"],[495,20,547,18],[495,23,547,21,"_$$_REQUIRE"],[495,34,547,21],[495,35,547,21,"_dependencyMap"],[495,49,547,21],[495,69,547,21,"Buffer"],[495,75,547,21],[495,76,547,28,"from"],[495,80,547,32],[495,81,547,33,"sigObj"],[495,87,547,39],[495,88,547,40,"signature"],[495,97,547,49],[495,98,547,50],[496,4,548,2],[496,8,548,8,"sigWords"],[496,16,548,16],[496,19,548,19,"hexToWord"],[496,28,548,28],[496,29,548,29,"sigObj"],[496,35,548,35],[496,36,548,36,"signature"],[496,45,548,45],[496,46,548,46,"toString"],[496,54,548,54],[496,55,548,55],[496,60,548,60],[496,61,548,61],[496,64,548,64],[496,67,548,67],[496,70,548,70,"sigObj"],[496,76,548,76],[496,77,548,77,"recid"],[496,82,548,82],[496,83,548,83],[498,4,550,2],[499,4,551,2,"payReqObj"],[499,13,551,11],[499,14,551,12,"payeeNodeKey"],[499,26,551,24],[499,29,551,27,"publicKey"],[499,38,551,36],[499,39,551,37,"toString"],[499,47,551,45],[499,48,551,46],[499,53,551,51],[499,54,551,52],[500,4,552,2,"payReqObj"],[500,13,552,11],[500,14,552,12,"signature"],[500,23,552,21],[500,26,552,24,"sigObj"],[500,32,552,30],[500,33,552,31,"signature"],[500,42,552,40],[500,43,552,41,"toString"],[500,51,552,49],[500,52,552,50],[500,57,552,55],[500,58,552,56],[501,4,553,2,"payReqObj"],[501,13,553,11],[501,14,553,12,"recoveryFlag"],[501,26,553,24],[501,29,553,27,"sigObj"],[501,35,553,33],[501,36,553,34,"recid"],[501,41,553,39],[502,4,554,2,"payReqObj"],[502,13,554,11],[502,14,554,12,"wordsTemp"],[502,23,554,21],[502,26,554,24,"_$$_REQUIRE"],[502,37,554,24],[502,38,554,24,"_dependencyMap"],[502,52,554,24],[502,67,554,31,"encode"],[502,73,554,37],[502,74,554,38],[502,80,554,44],[502,82,554,46,"words"],[502,87,554,51],[502,88,554,52,"concat"],[502,94,554,58],[502,95,554,59,"sigWords"],[502,103,554,67],[502,104,554,68],[502,106,554,70,"Number"],[502,112,554,76],[502,113,554,77,"MAX_SAFE_INTEGER"],[502,129,554,93],[502,130,554,94],[503,4,555,2,"payReqObj"],[503,13,555,11],[503,14,555,12,"complete"],[503,22,555,20],[503,25,555,23],[503,29,555,27],[504,4,556,2,"payReqObj"],[504,13,556,11],[504,14,556,12,"paymentRequest"],[504,28,556,26],[504,31,556,29,"_$$_REQUIRE"],[504,42,556,29],[504,43,556,29,"_dependencyMap"],[504,57,556,29],[504,72,556,36,"encode"],[504,78,556,42],[504,79,556,43,"payReqObj"],[504,88,556,52],[504,89,556,53,"prefix"],[504,95,556,59],[504,97,556,61,"words"],[504,102,556,66],[504,103,556,67,"concat"],[504,109,556,73],[504,110,556,74,"sigWords"],[504,118,556,82],[504,119,556,83],[504,121,556,85,"Number"],[504,127,556,91],[504,128,556,92,"MAX_SAFE_INTEGER"],[504,144,556,108],[504,145,556,109],[505,4,558,2],[505,11,558,9,"orderKeys"],[505,20,558,18],[505,21,558,19,"payReqObj"],[505,30,558,28],[505,31,558,29],[506,2,559,0],[507,2,561,0],[507,11,561,9,"encode"],[507,17,561,15,"encode"],[507,18,561,17,"inputData"],[507,27,561,26],[507,29,561,28,"addDefaults"],[507,40,561,39],[507,42,561,41],[508,4,562,2],[509,4,563,2],[509,8,563,8,"data"],[509,12,563,12],[509,15,563,15,"_$$_REQUIRE"],[509,26,563,15],[509,27,563,15,"_dependencyMap"],[509,41,563,15],[509,66,563,25,"inputData"],[509,75,563,34],[509,76,563,35],[511,4,565,2],[512,4,566,2],[512,8,566,6,"addDefaults"],[512,19,566,17],[512,24,566,22,"undefined"],[512,33,566,31],[512,35,566,33,"addDefaults"],[512,46,566,44],[512,49,566,47],[512,53,566,51],[513,4,568,2],[513,8,568,8,"canReconstruct"],[513,22,568,22],[513,25,568,25],[513,27,568,27,"data"],[513,31,568,31],[513,32,568,32,"signature"],[513,41,568,41],[513,46,568,46,"undefined"],[513,55,568,55],[513,59,568,59,"data"],[513,63,568,63],[513,64,568,64,"recoveryFlag"],[513,76,568,76],[513,81,568,81,"undefined"],[513,90,568,90],[513,91,568,91],[515,4,570,2],[516,4,571,2],[516,8,571,6,"coinTypeObj"],[516,19,571,17],[517,4,572,2],[517,8,572,6,"data"],[517,12,572,10],[517,13,572,11,"network"],[517,20,572,18],[517,25,572,23,"undefined"],[517,34,572,32],[517,38,572,36],[517,39,572,37,"canReconstruct"],[517,53,572,51],[517,55,572,53],[518,6,573,4,"data"],[518,10,573,8],[518,11,573,9,"network"],[518,18,573,16],[518,21,573,19,"DEFAULTNETWORK"],[518,35,573,33],[519,6,574,4,"coinTypeObj"],[519,17,574,15],[519,20,574,18,"DEFAULTNETWORK"],[519,34,574,32],[520,4,575,2],[520,5,575,3],[520,11,575,9],[520,15,575,13,"data"],[520,19,575,17],[520,20,575,18,"network"],[520,27,575,25],[520,32,575,30,"undefined"],[520,41,575,39],[520,45,575,43,"canReconstruct"],[520,59,575,57],[520,61,575,59],[521,6,576,4],[521,12,576,10],[521,16,576,14,"Error"],[521,21,576,19],[521,22,576,20],[521,78,576,76],[521,79,576,77],[522,4,577,2],[522,5,577,3],[522,11,577,9],[523,6,578,4],[524,6,579,4],[524,10,580,6],[524,11,580,7,"data"],[524,15,580,11],[524,16,580,12,"network"],[524,23,580,19],[524,24,580,20,"bech32"],[524,30,580,26],[524,34,581,6,"data"],[524,38,581,10],[524,39,581,11,"network"],[524,46,581,18],[524,47,581,19,"pubKeyHash"],[524,57,581,29],[524,62,581,34,"undefined"],[524,71,581,43],[524,75,582,6,"data"],[524,79,582,10],[524,80,582,11,"network"],[524,87,582,18],[524,88,582,19,"scriptHash"],[524,98,582,29],[524,103,582,34,"undefined"],[524,112,582,43],[524,116,583,6],[524,117,583,7,"Array"],[524,122,583,12],[524,123,583,13,"isArray"],[524,130,583,20],[524,131,583,21,"data"],[524,135,583,25],[524,136,583,26,"network"],[524,143,583,33],[524,144,583,34,"validWitnessVersions"],[524,164,583,54],[524,165,583,55],[524,167,584,6],[524,173,584,12],[524,177,584,16,"Error"],[524,182,584,21],[524,183,584,22],[524,200,584,39],[524,201,584,40],[525,6,585,4,"coinTypeObj"],[525,17,585,15],[525,20,585,18,"data"],[525,24,585,22],[525,25,585,23,"network"],[525,32,585,30],[526,4,586,2],[528,4,588,2],[529,4,589,2],[529,8,589,6,"data"],[529,12,589,10],[529,13,589,11,"timestamp"],[529,22,589,20],[529,27,589,25,"undefined"],[529,36,589,34],[529,40,589,38],[529,41,589,39,"canReconstruct"],[529,55,589,53],[529,57,589,55],[530,6,590,4,"data"],[530,10,590,8],[530,11,590,9,"timestamp"],[530,20,590,18],[530,23,590,21,"Math"],[530,27,590,25],[530,28,590,26,"floor"],[530,33,590,31],[530,34,590,32],[530,38,590,36,"Date"],[530,42,590,40],[530,43,590,41],[530,44,590,42],[530,45,590,43,"getTime"],[530,52,590,50],[530,53,590,51],[530,54,590,52],[530,57,590,55],[530,61,590,59],[530,62,590,60],[531,4,591,2],[531,5,591,3],[531,11,591,9],[531,15,591,13,"data"],[531,19,591,17],[531,20,591,18,"timestamp"],[531,29,591,27],[531,34,591,32,"undefined"],[531,43,591,41],[531,47,591,45,"canReconstruct"],[531,61,591,59],[531,63,591,61],[532,6,592,4],[532,12,592,10],[532,16,592,14,"Error"],[532,21,592,19],[532,22,592,20],[532,80,592,78],[532,81,592,79],[533,4,593,2],[534,4,595,2],[534,8,595,6,"data"],[534,12,595,10],[534,13,595,11,"tags"],[534,17,595,15],[534,22,595,20,"undefined"],[534,31,595,29],[534,33,595,31],[534,39,595,37],[534,43,595,41,"Error"],[534,48,595,46],[534,49,595,47],[534,83,595,81],[534,84,595,82],[536,4,597,2],[537,4,598,2],[537,8,598,6],[537,9,598,7,"tagsContainItem"],[537,24,598,22],[537,25,598,23,"data"],[537,29,598,27],[537,30,598,28,"tags"],[537,34,598,32],[537,36,598,34,"TAGNAMES"],[537,44,598,42],[537,45,598,43],[537,48,598,46],[537,49,598,47],[537,50,598,48],[537,52,598,50],[538,6,599,4],[538,12,599,10],[538,16,599,14,"Error"],[538,21,599,19],[538,22,599,20],[538,70,599,68],[538,71,599,69],[539,4,600,2],[540,4,601,2],[541,4,602,2],[541,8,602,6,"tagsContainItem"],[541,23,602,21],[541,24,602,22,"data"],[541,28,602,26],[541,29,602,27,"tags"],[541,33,602,31],[541,35,602,33,"TAGNAMES"],[541,43,602,41],[541,44,602,42],[541,48,602,46],[541,49,602,47],[541,50,602,48],[541,52,602,50],[542,6,603,4],[542,10,603,8],[542,11,603,9,"tagsContainItem"],[542,26,603,24],[542,27,603,25,"data"],[542,31,603,29],[542,32,603,30,"tags"],[542,36,603,34],[542,38,603,36,"TAGNAMES"],[542,46,603,44],[542,47,603,45],[542,50,603,48],[542,51,603,49],[542,52,603,50],[542,54,603,52],[543,8,604,6],[543,12,604,10,"addDefaults"],[543,23,604,21],[543,25,604,23],[544,10,605,8,"data"],[544,14,605,12],[544,15,605,13,"tags"],[544,19,605,17],[544,20,605,18,"push"],[544,24,605,22],[544,25,605,23],[545,12,606,10,"tagName"],[545,19,606,17],[545,21,606,19,"TAGNAMES"],[545,29,606,27],[545,30,606,28],[545,33,606,31],[545,34,606,32],[546,12,607,10,"data"],[546,16,607,14],[546,18,607,16,"DEFAULTFEATUREBITS"],[547,10,608,8],[547,11,608,9],[547,12,608,10],[548,8,609,6],[548,9,609,7],[548,15,609,13],[549,10,610,8],[549,16,610,14],[549,20,610,18,"Error"],[549,25,610,23],[549,26,610,24],[549,140,610,138],[549,141,610,139],[550,8,611,6],[551,6,612,4],[551,7,612,5],[551,13,612,11],[552,8,613,6],[552,12,613,12,"fB"],[552,14,613,14],[552,17,613,17,"tagsItems"],[552,26,613,26],[552,27,613,27,"data"],[552,31,613,31],[552,32,613,32,"tags"],[552,36,613,36],[552,38,613,38,"TAGNAMES"],[552,46,613,46],[552,47,613,47],[552,50,613,50],[552,51,613,51],[552,52,613,52],[553,8,614,6],[553,12,614,10],[553,13,614,11,"fB"],[553,15,614,13],[553,16,614,14,"payment_secret"],[553,30,614,28],[553,34,614,33],[553,35,614,34,"fB"],[553,37,614,36],[553,38,614,37,"payment_secret"],[553,52,614,51],[553,53,614,52,"supported"],[553,62,614,61],[553,66,614,65],[553,67,614,66,"fB"],[553,69,614,68],[553,70,614,69,"payment_secret"],[553,84,614,83],[553,85,614,84,"required"],[553,93,614,93],[553,95,614,95],[554,10,615,8],[554,16,615,14],[554,20,615,18,"Error"],[554,25,615,23],[554,26,615,24],[554,140,615,138],[554,141,615,139],[555,8,616,6],[556,6,617,4],[557,4,618,2],[558,4,619,2],[559,4,620,2],[559,8,620,6],[559,9,620,7,"tagsContainItem"],[559,24,620,22],[559,25,620,23,"data"],[559,29,620,27],[559,30,620,28,"tags"],[559,34,620,32],[559,36,620,34,"TAGNAMES"],[559,44,620,42],[559,45,620,43],[559,49,620,47],[559,50,620,48],[559,51,620,49],[559,55,620,53],[559,56,620,54,"tagsContainItem"],[559,71,620,69],[559,72,620,70,"data"],[559,76,620,74],[559,77,620,75,"tags"],[559,81,620,79],[559,83,620,81,"TAGNAMES"],[559,91,620,89],[559,92,620,90],[559,96,620,94],[559,97,620,95],[559,98,620,96],[559,100,620,98],[560,6,621,4],[560,10,621,8,"addDefaults"],[560,21,621,19],[560,23,621,21],[561,8,622,6,"data"],[561,12,622,10],[561,13,622,11,"tags"],[561,17,622,15],[561,18,622,16,"push"],[561,22,622,20],[561,23,622,21],[562,10,623,8,"tagName"],[562,17,623,15],[562,19,623,17,"TAGNAMES"],[562,27,623,25],[562,28,623,26],[562,32,623,30],[562,33,623,31],[563,10,624,8,"data"],[563,14,624,12],[563,16,624,14,"DEFAULTDESCRIPTION"],[564,8,625,6],[564,9,625,7],[564,10,625,8],[565,6,626,4],[565,7,626,5],[565,13,626,11],[566,8,627,6],[566,14,627,12],[566,18,627,16,"Error"],[566,23,627,21],[566,24,627,22],[566,85,627,83],[566,86,627,84],[567,6,628,4],[568,4,629,2],[570,4,631,2],[571,4,632,2],[572,4,633,2],[572,8,633,6,"tagsContainItem"],[572,23,633,21],[572,24,633,22,"data"],[572,28,633,26],[572,29,633,27,"tags"],[572,33,633,31],[572,35,633,33,"TAGNAMES"],[572,43,633,41],[572,44,633,42],[572,48,633,46],[572,49,633,47],[572,50,633,48],[572,54,634,6,"_$$_REQUIRE"],[572,65,634,6],[572,66,634,6,"_dependencyMap"],[572,80,634,6],[572,100,634,6,"Buffer"],[572,106,634,6],[572,107,634,13,"from"],[572,111,634,17],[572,112,634,18,"tagsItems"],[572,121,634,27],[572,122,634,28,"data"],[572,126,634,32],[572,127,634,33,"tags"],[572,131,634,37],[572,133,634,39,"TAGNAMES"],[572,141,634,47],[572,142,634,48],[572,146,634,52],[572,147,634,53],[572,148,634,54],[572,150,634,56],[572,156,634,62],[572,157,634,63],[572,158,634,64,"length"],[572,164,634,70],[572,167,634,73],[572,170,634,76],[572,172,634,78],[573,6,635,4],[573,12,635,10],[573,16,635,14,"Error"],[573,21,635,19],[573,22,635,20],[573,69,635,67],[573,70,635,68],[574,4,636,2],[576,4,638,2],[577,4,639,2],[578,4,640,2],[578,8,640,6],[578,9,640,7,"tagsContainItem"],[578,24,640,22],[578,25,640,23,"data"],[578,29,640,27],[578,30,640,28,"tags"],[578,34,640,32],[578,36,640,34,"TAGNAMES"],[578,44,640,42],[578,45,640,43],[578,48,640,46],[578,49,640,47],[578,50,640,48],[578,54,640,52],[578,55,640,53,"canReconstruct"],[578,69,640,67],[578,73,640,71,"addDefaults"],[578,84,640,82],[578,86,640,84],[579,6,641,4,"data"],[579,10,641,8],[579,11,641,9,"tags"],[579,15,641,13],[579,16,641,14,"push"],[579,20,641,18],[579,21,641,19],[580,8,642,6,"tagName"],[580,15,642,13],[580,17,642,15,"TAGNAMES"],[580,25,642,23],[580,26,642,24],[580,29,642,27],[580,30,642,28],[581,8,643,6,"data"],[581,12,643,10],[581,14,643,12,"DEFAULTEXPIRETIME"],[582,6,644,4],[582,7,644,5],[582,8,644,6],[583,4,645,2],[585,4,647,2],[586,4,648,2],[587,4,649,2],[587,8,649,6],[587,9,649,7,"tagsContainItem"],[587,24,649,22],[587,25,649,23,"data"],[587,29,649,27],[587,30,649,28,"tags"],[587,34,649,32],[587,36,649,34,"TAGNAMES"],[587,44,649,42],[587,45,649,43],[587,49,649,47],[587,50,649,48],[587,51,649,49],[587,55,649,53],[587,56,649,54,"canReconstruct"],[587,70,649,68],[587,74,649,72,"addDefaults"],[587,85,649,83],[587,87,649,85],[588,6,650,4,"data"],[588,10,650,8],[588,11,650,9,"tags"],[588,15,650,13],[588,16,650,14,"push"],[588,20,650,18],[588,21,650,19],[589,8,651,6,"tagName"],[589,15,651,13],[589,17,651,15,"TAGNAMES"],[589,25,651,23],[589,26,651,24],[589,30,651,28],[589,31,651,29],[590,8,652,6,"data"],[590,12,652,10],[590,14,652,12,"DEFAULTCLTVEXPIRY"],[591,6,653,4],[591,7,653,5],[591,8,653,6],[592,4,654,2],[593,4,656,2],[593,8,656,6,"nodePublicKey"],[593,21,656,19],[593,23,656,21,"tagNodePublicKey"],[593,39,656,37],[594,4,657,2],[595,4,658,2],[595,8,658,6,"tagsContainItem"],[595,23,658,21],[595,24,658,22,"data"],[595,28,658,26],[595,29,658,27,"tags"],[595,33,658,31],[595,35,658,33,"TAGNAMES"],[595,43,658,41],[595,44,658,42],[595,48,658,46],[595,49,658,47],[595,50,658,48],[595,52,658,50,"tagNodePublicKey"],[595,68,658,66],[595,71,658,69,"hexToBuffer"],[595,82,658,80],[595,83,658,81,"tagsItems"],[595,92,658,90],[595,93,658,91,"data"],[595,97,658,95],[595,98,658,96,"tags"],[595,102,658,100],[595,104,658,102,"TAGNAMES"],[595,112,658,110],[595,113,658,111],[595,117,658,115],[595,118,658,116],[595,119,658,117],[595,120,658,118],[596,4,659,2],[597,4,660,2],[597,8,660,6,"data"],[597,12,660,10],[597,13,660,11,"payeeNodeKey"],[597,25,660,23],[597,27,660,25,"nodePublicKey"],[597,40,660,38],[597,43,660,41,"hexToBuffer"],[597,54,660,52],[597,55,660,53,"data"],[597,59,660,57],[597,60,660,58,"payeeNodeKey"],[597,72,660,70],[597,73,660,71],[598,4,661,2],[598,8,661,6,"nodePublicKey"],[598,21,661,19],[598,25,661,23,"tagNodePublicKey"],[598,41,661,39],[598,45,661,43],[598,46,661,44,"tagNodePublicKey"],[598,62,661,60],[598,63,661,61,"equals"],[598,69,661,67],[598,70,661,68,"nodePublicKey"],[598,83,661,81],[598,84,661,82],[598,86,661,84],[599,6,662,4],[599,12,662,10],[599,16,662,14,"Error"],[599,21,662,19],[599,22,662,20],[599,72,662,70],[599,73,662,71],[600,4,663,2],[601,4,664,2],[602,4,665,2,"nodePublicKey"],[602,17,665,15],[602,20,665,18,"nodePublicKey"],[602,33,665,31],[602,37,665,35,"tagNodePublicKey"],[602,53,665,51],[603,4,666,2],[603,8,666,6,"nodePublicKey"],[603,21,666,19],[603,23,666,21,"data"],[603,27,666,25],[603,28,666,26,"payeeNodeKey"],[603,40,666,38],[603,43,666,41,"nodePublicKey"],[603,56,666,54],[603,57,666,55,"toString"],[603,65,666,63],[603,66,666,64],[603,71,666,69],[603,72,666,70],[604,4,668,2],[604,8,668,6,"code"],[604,12,668,10],[604,14,668,12,"addressHash"],[604,25,668,23],[604,27,668,25,"address"],[604,34,668,32],[605,4,669,2],[606,4,670,2],[606,8,670,6,"tagsContainItem"],[606,23,670,21],[606,24,670,22,"data"],[606,28,670,26],[606,29,670,27,"tags"],[606,33,670,31],[606,35,670,33,"TAGNAMES"],[606,43,670,41],[606,44,670,42],[606,47,670,45],[606,48,670,46],[606,49,670,47],[606,51,670,49],[607,6,671,4],[607,10,671,10,"addrData"],[607,18,671,18],[607,21,671,21,"tagsItems"],[607,30,671,30],[607,31,671,31,"data"],[607,35,671,35],[607,36,671,36,"tags"],[607,40,671,40],[607,42,671,42,"TAGNAMES"],[607,50,671,50],[607,51,671,51],[607,54,671,54],[607,55,671,55],[607,56,671,56],[608,6,672,4],[609,6,673,4,"address"],[609,13,673,11],[609,16,673,14,"addrData"],[609,24,673,22],[609,25,673,23,"address"],[609,32,673,30],[610,6,674,4,"addressHash"],[610,17,674,15],[610,20,674,18,"addrData"],[610,28,674,26],[610,29,674,27,"addressHash"],[610,40,674,38],[611,6,675,4,"code"],[611,10,675,8],[611,13,675,11,"addrData"],[611,21,675,19],[611,22,675,20,"code"],[611,26,675,24],[612,6,677,4],[612,10,677,8,"addressHash"],[612,21,677,19],[612,26,677,24,"undefined"],[612,35,677,33],[612,39,677,37,"code"],[612,43,677,41],[612,48,677,46,"undefined"],[612,57,677,55],[612,59,677,57],[613,8,678,6],[613,12,678,10,"bech32addr"],[613,22,678,20],[613,24,678,22,"base58addr"],[613,34,678,32],[614,8,679,6],[614,12,679,10],[615,10,680,8,"bech32addr"],[615,20,680,18],[615,23,680,21,"_$$_REQUIRE"],[615,34,680,21],[615,35,680,21,"_dependencyMap"],[615,49,680,21],[615,71,680,21,"address"],[615,78,680,21],[615,79,680,38,"fromBech32"],[615,89,680,48],[615,90,680,49,"address"],[615,97,680,56],[615,98,680,57],[616,10,681,8,"addressHash"],[616,21,681,19],[616,24,681,22,"bech32addr"],[616,34,681,32],[616,35,681,33,"data"],[616,39,681,37],[617,10,682,8,"code"],[617,14,682,12],[617,17,682,15,"bech32addr"],[617,27,682,25],[617,28,682,26,"version"],[617,35,682,33],[618,8,683,6],[618,9,683,7],[618,10,683,8],[618,17,683,15,"e"],[618,18,683,16],[618,20,683,18],[619,10,684,8],[619,14,684,12],[620,12,685,10,"base58addr"],[620,22,685,20],[620,25,685,23,"_$$_REQUIRE"],[620,36,685,23],[620,37,685,23,"_dependencyMap"],[620,51,685,23],[620,73,685,23,"address"],[620,80,685,23],[620,81,685,40,"fromBase58Check"],[620,96,685,55],[620,97,685,56,"address"],[620,104,685,63],[620,105,685,64],[621,12,686,10],[621,16,686,14,"base58addr"],[621,26,686,24],[621,27,686,25,"version"],[621,34,686,32],[621,39,686,37,"coinTypeObj"],[621,50,686,48],[621,51,686,49,"pubKeyHash"],[621,61,686,59],[621,63,686,61],[622,14,687,12,"code"],[622,18,687,16],[622,21,687,19],[622,23,687,21],[623,12,688,10],[623,13,688,11],[623,19,688,17],[623,23,688,21,"base58addr"],[623,33,688,31],[623,34,688,32,"version"],[623,41,688,39],[623,46,688,44,"coinTypeObj"],[623,57,688,55],[623,58,688,56,"scriptHash"],[623,68,688,66],[623,70,688,68],[624,14,689,12,"code"],[624,18,689,16],[624,21,689,19],[624,23,689,21],[625,12,690,10],[626,12,691,10,"addressHash"],[626,23,691,21],[626,26,691,24,"base58addr"],[626,36,691,34],[626,37,691,35,"hash"],[626,41,691,39],[627,10,692,8],[627,11,692,9],[627,12,692,10],[627,19,692,17,"f"],[627,20,692,18],[627,22,692,20],[628,12,693,10],[628,18,693,16],[628,22,693,20,"Error"],[628,27,693,25],[628,28,693,26],[628,62,693,60],[628,63,693,61],[629,10,694,8],[630,8,695,6],[631,8,696,6],[631,12,696,10,"bech32addr"],[631,22,696,20],[631,26,696,24],[631,28,696,26,"bech32addr"],[631,38,696,36],[631,39,696,37,"version"],[631,46,696,44],[631,50,696,48,"coinTypeObj"],[631,61,696,59],[631,62,696,60,"validWitnessVersions"],[631,82,696,80],[631,83,696,81],[631,85,696,83],[632,10,697,8],[632,16,697,14],[632,20,697,18,"Error"],[632,25,697,23],[632,26,697,24],[632,71,697,69],[632,72,697,70],[633,8,698,6],[634,8,699,6],[634,12,699,10,"bech32addr"],[634,22,699,20],[634,26,699,24,"bech32addr"],[634,36,699,34],[634,37,699,35,"prefix"],[634,43,699,41],[634,48,699,46,"coinTypeObj"],[634,59,699,57],[634,60,699,58,"bech32"],[634,66,699,64],[634,68,699,66],[635,10,700,8],[635,16,700,14],[635,20,700,18,"Error"],[635,25,700,23],[635,26,700,24],[635,101,700,99],[635,102,700,100],[636,8,701,6],[637,8,702,6],[637,12,702,10,"base58addr"],[637,22,702,20],[637,26,702,24,"base58addr"],[637,36,702,34],[637,37,702,35,"version"],[637,44,702,42],[637,49,702,47,"coinTypeObj"],[637,60,702,58],[637,61,702,59,"pubKeyHash"],[637,71,702,69],[637,75,703,10,"base58addr"],[637,85,703,20],[637,86,703,21,"version"],[637,93,703,28],[637,98,703,33,"coinTypeObj"],[637,109,703,44],[637,110,703,45,"scriptHash"],[637,120,703,55],[637,122,703,57],[638,10,704,8],[638,16,704,14],[638,20,704,18,"Error"],[638,25,704,23],[638,26,704,24],[638,105,704,103],[638,106,704,104],[639,8,705,6],[641,8,707,6],[642,8,708,6],[643,8,709,6],[644,8,710,6],[645,8,711,6,"addrData"],[645,16,711,14],[645,17,711,15,"addressHash"],[645,28,711,26],[645,31,711,29,"addressHash"],[645,42,711,40],[645,43,711,41,"toString"],[645,51,711,49],[645,52,711,50],[645,57,711,55],[645,58,711,56],[646,8,712,6,"addrData"],[646,16,712,14],[646,17,712,15,"code"],[646,21,712,19],[646,24,712,22,"code"],[646,28,712,26],[647,6,713,4],[648,4,714,2],[650,4,716,2],[651,4,717,2],[651,8,717,6,"tagsContainItem"],[651,23,717,21],[651,24,717,22,"data"],[651,28,717,26],[651,29,717,27,"tags"],[651,33,717,31],[651,35,717,33,"TAGNAMES"],[651,43,717,41],[651,44,717,42],[651,47,717,45],[651,48,717,46],[651,49,717,47],[651,51,717,49],[652,6,718,4],[652,10,718,10,"routingInfo"],[652,21,718,21],[652,24,718,24,"tagsItems"],[652,33,718,33],[652,34,718,34,"data"],[652,38,718,38],[652,39,718,39,"tags"],[652,43,718,43],[652,45,718,45,"TAGNAMES"],[652,53,718,53],[652,54,718,54],[652,57,718,57],[652,58,718,58],[652,59,718,59],[653,6,719,4,"routingInfo"],[653,17,719,15],[653,18,719,16,"forEach"],[653,25,719,23],[653,26,719,24],[653,36,719,24,"route"],[653,41,719,29],[653,43,719,33],[654,8,720,6],[654,12,720,10,"route"],[654,17,720,15],[654,18,720,16,"pubkey"],[654,24,720,22],[654,29,720,27,"undefined"],[654,38,720,36],[654,42,721,8,"route"],[654,47,721,13],[654,48,721,14,"short_channel_id"],[654,64,721,30],[654,69,721,35,"undefined"],[654,78,721,44],[654,82,722,8,"route"],[654,87,722,13],[654,88,722,14,"fee_base_msat"],[654,101,722,27],[654,106,722,32,"undefined"],[654,115,722,41],[654,119,723,8,"route"],[654,124,723,13],[654,125,723,14,"fee_proportional_millionths"],[654,152,723,41],[654,157,723,46,"undefined"],[654,166,723,55],[654,170,724,8,"route"],[654,175,724,13],[654,176,724,14,"cltv_expiry_delta"],[654,193,724,31],[654,198,724,36,"undefined"],[654,207,724,45],[654,209,724,47],[655,10,725,8],[655,16,725,14],[655,20,725,18,"Error"],[655,25,725,23],[655,26,725,24],[655,54,725,52],[655,55,725,53],[656,8,726,6],[657,8,727,6],[657,12,727,10],[657,13,727,11,"_$$_REQUIRE"],[657,24,727,11],[657,25,727,11,"_dependencyMap"],[657,39,727,11],[657,57,727,21,"publicKeyVerify"],[657,72,727,36],[657,73,727,37,"hexToBuffer"],[657,84,727,48],[657,85,727,49,"route"],[657,90,727,54],[657,91,727,55,"pubkey"],[657,97,727,61],[657,98,727,62],[657,99,727,63],[657,101,727,65],[658,10,728,8],[658,16,728,14],[658,20,728,18,"Error"],[658,25,728,23],[658,26,728,24],[658,69,728,67],[658,70,728,68],[659,8,729,6],[660,8,730,6],[660,12,730,12,"shortId"],[660,19,730,19],[660,22,730,22,"hexToBuffer"],[660,33,730,33],[660,34,730,34,"route"],[660,39,730,39],[660,40,730,40,"short_channel_id"],[660,56,730,56],[660,57,730,57],[661,8,731,6],[661,12,731,10],[661,14,731,12,"shortId"],[661,21,731,19],[661,33,731,19,"_$$_REQUIRE"],[661,44,731,19],[661,45,731,19,"_dependencyMap"],[661,59,731,19],[661,79,731,19,"Buffer"],[661,85,731,37],[661,86,731,38],[661,90,731,42,"shortId"],[661,97,731,49],[661,98,731,50,"length"],[661,104,731,56],[661,109,731,61],[661,110,731,62],[661,112,731,64],[662,10,732,8],[662,16,732,14],[662,20,732,18,"Error"],[662,25,732,23],[662,26,732,24],[662,73,732,71],[662,74,732,72],[663,8,733,6],[664,8,734,6],[664,12,734,10],[664,19,734,17,"route"],[664,24,734,22],[664,25,734,23,"fee_base_msat"],[664,38,734,36],[664,43,734,41],[664,51,734,49],[664,55,735,8,"Math"],[664,59,735,12],[664,60,735,13,"floor"],[664,65,735,18],[664,66,735,19,"route"],[664,71,735,24],[664,72,735,25,"fee_base_msat"],[664,85,735,38],[664,86,735,39],[664,91,735,44,"route"],[664,96,735,49],[664,97,735,50,"fee_base_msat"],[664,110,735,63],[664,112,735,65],[665,10,736,8],[665,16,736,14],[665,20,736,18,"Error"],[665,25,736,23],[665,26,736,24],[665,72,736,70],[665,73,736,71],[666,8,737,6],[667,8,738,6],[667,12,738,10],[667,19,738,17,"route"],[667,24,738,22],[667,25,738,23,"fee_proportional_millionths"],[667,52,738,50],[667,57,738,55],[667,65,738,63],[667,69,739,8,"Math"],[667,73,739,12],[667,74,739,13,"floor"],[667,79,739,18],[667,80,739,19,"route"],[667,85,739,24],[667,86,739,25,"fee_proportional_millionths"],[667,113,739,52],[667,114,739,53],[667,119,739,58,"route"],[667,124,739,63],[667,125,739,64,"fee_proportional_millionths"],[667,152,739,91],[667,154,739,93],[668,10,740,8],[668,16,740,14],[668,20,740,18,"Error"],[668,25,740,23],[668,26,740,24],[668,86,740,84],[668,87,740,85],[669,8,741,6],[670,8,742,6],[670,12,742,10],[670,19,742,17,"route"],[670,24,742,22],[670,25,742,23,"cltv_expiry_delta"],[670,42,742,40],[670,47,742,45],[670,55,742,53],[670,59,743,8,"Math"],[670,63,743,12],[670,64,743,13,"floor"],[670,69,743,18],[670,70,743,19,"route"],[670,75,743,24],[670,76,743,25,"cltv_expiry_delta"],[670,93,743,42],[670,94,743,43],[670,99,743,48,"route"],[670,104,743,53],[670,105,743,54,"cltv_expiry_delta"],[670,122,743,71],[670,124,743,73],[671,10,744,8],[671,16,744,14],[671,20,744,18,"Error"],[671,25,744,23],[671,26,744,24],[671,76,744,74],[671,77,744,75],[672,8,745,6],[673,6,746,4],[673,7,746,5],[673,8,746,6],[674,4,747,2],[675,4,749,2],[675,8,749,6,"prefix"],[675,14,749,12],[675,17,749,15],[675,21,749,19],[676,4,750,2,"prefix"],[676,10,750,8],[676,14,750,12,"coinTypeObj"],[676,25,750,23],[676,26,750,24,"bech32"],[676,32,750,30],[677,4,752,2],[677,8,752,6,"hrpString"],[677,17,752,15],[678,4,753,2],[679,4,754,2],[680,4,755,2],[680,8,755,6,"data"],[680,12,755,10],[680,13,755,11,"millisatoshis"],[680,26,755,24],[680,30,755,28,"data"],[680,34,755,32],[680,35,755,33,"satoshis"],[680,43,755,41],[680,45,755,43],[681,6,756,4,"hrpString"],[681,15,756,13],[681,18,756,16,"millisatToHrp"],[681,31,756,29],[681,32,756,30],[681,37,756,30,"_$$_REQUIRE"],[681,48,756,30],[681,49,756,30,"_dependencyMap"],[681,63,756,30],[681,78,756,37,"data"],[681,82,756,41],[681,83,756,42,"millisatoshis"],[681,96,756,55],[681,98,756,57],[681,100,756,59],[681,101,756,60],[681,102,756,61],[682,6,757,4],[682,10,757,10,"hrpStringSat"],[682,22,757,22],[682,25,757,25,"satToHrp"],[682,33,757,33],[682,34,757,34],[682,39,757,34,"_$$_REQUIRE"],[682,50,757,34],[682,51,757,34,"_dependencyMap"],[682,65,757,34],[682,80,757,41,"data"],[682,84,757,45],[682,85,757,46,"satoshis"],[682,93,757,54],[682,95,757,56],[682,97,757,58],[682,98,757,59],[682,99,757,60],[683,6,758,4],[683,10,758,8,"hrpStringSat"],[683,22,758,20],[683,27,758,25,"hrpString"],[683,36,758,34],[683,38,758,36],[684,8,759,6],[684,14,759,12],[684,18,759,16,"Error"],[684,23,759,21],[684,24,759,22],[684,65,759,63],[684,66,759,64],[685,6,760,4],[686,4,761,2],[686,5,761,3],[686,11,761,9],[686,15,761,13,"data"],[686,19,761,17],[686,20,761,18,"millisatoshis"],[686,33,761,31],[686,35,761,33],[687,6,762,4,"hrpString"],[687,15,762,13],[687,18,762,16,"millisatToHrp"],[687,31,762,29],[687,32,762,30],[687,37,762,30,"_$$_REQUIRE"],[687,48,762,30],[687,49,762,30,"_dependencyMap"],[687,63,762,30],[687,78,762,37,"data"],[687,82,762,41],[687,83,762,42,"millisatoshis"],[687,96,762,55],[687,98,762,57],[687,100,762,59],[687,101,762,60],[687,102,762,61],[688,4,763,2],[688,5,763,3],[688,11,763,9],[688,15,763,13,"data"],[688,19,763,17],[688,20,763,18,"satoshis"],[688,28,763,26],[688,30,763,28],[689,6,764,4,"hrpString"],[689,15,764,13],[689,18,764,16,"satToHrp"],[689,26,764,24],[689,27,764,25],[689,32,764,25,"_$$_REQUIRE"],[689,43,764,25],[689,44,764,25,"_dependencyMap"],[689,58,764,25],[689,73,764,32,"data"],[689,77,764,36],[689,78,764,37,"satoshis"],[689,86,764,45],[689,88,764,47],[689,90,764,49],[689,91,764,50],[689,92,764,51],[690,4,765,2],[690,5,765,3],[690,11,765,9],[691,6,766,4,"hrpString"],[691,15,766,13],[691,18,766,16],[691,20,766,18],[692,4,767,2],[694,4,769,2],[695,4,770,2],[696,4,771,2,"prefix"],[696,10,771,8],[696,14,771,12,"hrpString"],[696,23,771,21],[698,4,773,2],[699,4,774,2],[699,8,774,8,"timestampWords"],[699,22,774,22],[699,25,774,25,"intBEToWords"],[699,37,774,37],[699,38,774,38,"data"],[699,42,774,42],[699,43,774,43,"timestamp"],[699,52,774,52],[699,53,774,53],[700,4,775,2],[700,11,775,9,"timestampWords"],[700,25,775,23],[700,26,775,24,"length"],[700,32,775,30],[700,35,775,33],[700,36,775,34],[700,38,775,36],[701,6,776,4,"timestampWords"],[701,20,776,18],[701,21,776,19,"unshift"],[701,28,776,26],[701,29,776,27],[701,30,776,28],[701,31,776,29],[702,4,777,2],[703,4,779,2],[703,8,779,8,"tags"],[703,12,779,12],[703,15,779,15,"data"],[703,19,779,19],[703,20,779,20,"tags"],[703,24,779,24],[704,4,780,2],[704,8,780,6,"tagWords"],[704,16,780,14],[704,19,780,17],[704,21,780,19],[705,4,781,2,"tags"],[705,8,781,6],[705,9,781,7,"forEach"],[705,16,781,14],[705,17,781,15],[705,27,781,15,"tag"],[705,30,781,18],[705,32,781,22],[706,6,782,4],[706,10,782,10,"possibleTagNames"],[706,26,782,26],[706,29,782,29,"Object"],[706,35,782,35],[706,36,782,36,"keys"],[706,40,782,40],[706,41,782,41,"TAGENCODERS"],[706,52,782,52],[706,53,782,53],[707,6,783,4],[707,10,783,8,"canReconstruct"],[707,24,783,22],[707,26,783,24,"possibleTagNames"],[707,42,783,40],[707,43,783,41,"push"],[707,47,783,45],[707,48,783,46,"unknownTagName"],[707,62,783,60],[707,63,783,61],[708,6,784,4],[709,6,785,4],[709,10,785,8,"possibleTagNames"],[709,26,785,24],[709,27,785,25,"indexOf"],[709,34,785,32],[709,35,785,33,"tag"],[709,38,785,36],[709,39,785,37,"tagName"],[709,46,785,44],[709,47,785,45],[709,52,785,50],[709,53,785,51],[709,54,785,52],[709,56,785,54],[710,8,786,6],[710,14,786,12],[710,18,786,16,"Error"],[710,23,786,21],[710,24,786,22],[710,43,786,41],[710,46,786,44,"tag"],[710,49,786,47],[710,50,786,48,"tagName"],[710,57,786,55],[710,58,786,56],[711,6,787,4],[712,6,789,4],[712,10,789,8,"words"],[712,15,789,13],[713,6,790,4],[713,10,790,8,"tag"],[713,13,790,11],[713,14,790,12,"tagName"],[713,21,790,19],[713,26,790,24,"unknownTagName"],[713,40,790,38],[713,42,790,40],[714,8,791,6],[715,8,792,6,"tagWords"],[715,16,792,14],[715,17,792,15,"push"],[715,21,792,19],[715,22,792,20,"TAGCODES"],[715,30,792,28],[715,31,792,29,"tag"],[715,34,792,32],[715,35,792,33,"tagName"],[715,42,792,40],[715,43,792,41],[715,44,792,42],[716,8,794,6],[716,12,794,12,"encoder"],[716,19,794,19],[716,22,794,22,"TAGENCODERS"],[716,33,794,33],[716,34,794,34,"tag"],[716,37,794,37],[716,38,794,38,"tagName"],[716,45,794,45],[716,46,794,46],[717,8,795,6,"words"],[717,13,795,11],[717,16,795,14,"encoder"],[717,23,795,21],[717,24,795,22,"tag"],[717,27,795,25],[717,28,795,26,"data"],[717,32,795,30],[717,33,795,31],[718,6,796,4],[718,7,796,5],[718,13,796,11],[719,8,797,6],[719,12,797,12,"result"],[719,18,797,18],[719,21,797,21,"unknownEncoder"],[719,35,797,35],[719,36,797,36,"tag"],[719,39,797,39],[719,40,797,40,"data"],[719,44,797,44],[719,45,797,45],[720,8,798,6,"tagWords"],[720,16,798,14],[720,17,798,15,"push"],[720,21,798,19],[720,22,798,20,"result"],[720,28,798,26],[720,29,798,27,"tagCode"],[720,36,798,34],[720,37,798,35],[721,8,799,6,"words"],[721,13,799,11],[721,16,799,14,"result"],[721,22,799,20],[721,23,799,21,"words"],[721,28,799,26],[722,6,800,4],[723,6,801,4],[724,6,802,4],[725,6,803,4,"tagWords"],[725,14,803,12],[725,17,803,15,"tagWords"],[725,25,803,23],[725,26,803,24,"concat"],[725,32,803,30],[725,33,803,31],[725,34,803,32],[725,35,803,33],[725,36,803,34],[725,37,803,35,"concat"],[725,43,803,41],[725,44,803,42,"intBEToWords"],[725,56,803,54],[725,57,803,55,"words"],[725,62,803,60],[725,63,803,61,"length"],[725,69,803,67],[725,70,803,68],[725,71,803,69],[725,72,803,70,"slice"],[725,77,803,75],[725,78,803,76],[725,79,803,77],[725,80,803,78],[725,81,803,79],[725,82,803,80],[726,6,804,4],[727,6,805,4,"tagWords"],[727,14,805,12],[727,17,805,15,"tagWords"],[727,25,805,23],[727,26,805,24,"concat"],[727,32,805,30],[727,33,805,31,"words"],[727,38,805,36],[727,39,805,37],[728,4,806,2],[728,5,806,3],[728,6,806,4],[730,4,808,2],[731,4,809,2],[732,4,810,2],[732,8,810,6,"dataWords"],[732,17,810,15],[732,20,810,18,"timestampWords"],[732,34,810,32],[732,35,810,33,"concat"],[732,41,810,39],[732,42,810,40,"tagWords"],[732,50,810,48],[732,51,810,49],[734,4,812,2],[735,4,813,2],[736,4,814,2],[737,4,815,2],[737,8,815,8,"toSign"],[737,14,815,14],[737,17,815,17,"_$$_REQUIRE"],[737,28,815,17],[737,29,815,17,"_dependencyMap"],[737,43,815,17],[737,63,815,17,"Buffer"],[737,69,815,17],[737,70,815,24,"concat"],[737,76,815,30],[737,77,815,31],[737,78,815,32,"_$$_REQUIRE"],[737,89,815,32],[737,90,815,32,"_dependencyMap"],[737,104,815,32],[737,124,815,32,"Buffer"],[737,130,815,32],[737,131,815,39,"from"],[737,135,815,43],[737,136,815,44,"prefix"],[737,142,815,50],[737,144,815,52],[737,150,815,58],[737,151,815,59],[737,153,815,61,"_$$_REQUIRE"],[737,164,815,61],[737,165,815,61,"_dependencyMap"],[737,179,815,61],[737,199,815,61,"Buffer"],[737,205,815,61],[737,206,815,68,"from"],[737,210,815,72],[737,211,815,73,"convert"],[737,218,815,80],[737,219,815,81,"dataWords"],[737,228,815,90],[737,230,815,92],[737,231,815,93],[737,233,815,95],[737,234,815,96],[737,235,815,97],[737,236,815,98],[737,237,815,99],[737,238,815,100],[738,4,816,2],[739,4,817,2],[739,8,817,8,"payReqHash"],[739,18,817,18],[739,21,817,21,"sha256"],[739,27,817,27],[739,28,817,28,"toSign"],[739,34,817,34],[739,35,817,35],[741,4,819,2],[742,4,820,2],[743,4,821,2],[744,4,822,2],[744,8,822,6,"sigWords"],[744,16,822,14],[745,4,823,2],[745,8,823,6,"canReconstruct"],[745,22,823,20],[745,24,823,22],[746,6,824,4],[747,0,825,0],[748,0,826,0],[749,0,827,0],[750,0,828,0],[751,0,829,0],[752,0,830,0],[753,0,831,0],[754,6,832,4],[754,10,832,8,"nodePublicKey"],[754,23,832,21],[754,25,832,23],[755,8,833,6],[755,12,833,12,"recoveredPubkey"],[755,27,833,27],[755,30,833,30,"_$$_REQUIRE"],[755,41,833,30],[755,42,833,30,"_dependencyMap"],[755,56,833,30],[755,76,833,30,"Buffer"],[755,82,833,30],[755,83,833,37,"from"],[755,87,833,41],[755,88,833,42,"_$$_REQUIRE"],[755,99,833,42],[755,100,833,42,"_dependencyMap"],[755,114,833,42],[755,132,833,52,"ecdsaRecover"],[755,144,833,64],[755,145,833,65,"_$$_REQUIRE"],[755,156,833,65],[755,157,833,65,"_dependencyMap"],[755,171,833,65],[755,191,833,65,"Buffer"],[755,197,833,65],[755,198,833,72,"from"],[755,202,833,76],[755,203,833,77,"data"],[755,207,833,81],[755,208,833,82,"signature"],[755,217,833,91],[755,219,833,93],[755,224,833,98],[755,225,833,99],[755,227,833,101,"data"],[755,231,833,105],[755,232,833,106,"recoveryFlag"],[755,244,833,118],[755,246,833,120,"payReqHash"],[755,256,833,130],[755,258,833,132],[755,262,833,136],[755,263,833,137],[755,264,833,138],[756,8,834,6],[756,12,834,10,"nodePublicKey"],[756,25,834,23],[756,29,834,27],[756,30,834,28,"nodePublicKey"],[756,43,834,41],[756,44,834,42,"equals"],[756,50,834,48],[756,51,834,49,"recoveredPubkey"],[756,66,834,64],[756,67,834,65],[756,69,834,67],[757,10,835,8],[757,16,835,14],[757,20,835,18,"Error"],[757,25,835,23],[757,26,835,24],[757,110,835,108],[757,111,835,109],[758,8,836,6],[759,8,837,6,"sigWords"],[759,16,837,14],[759,19,837,17,"hexToWord"],[759,28,837,26],[759,29,837,27,"data"],[759,33,837,31],[759,34,837,32,"signature"],[759,43,837,41],[759,46,837,44],[759,49,837,47],[759,52,837,50,"data"],[759,56,837,54],[759,57,837,55,"recoveryFlag"],[759,69,837,67],[759,70,837,68],[760,6,838,4],[760,7,838,5],[760,13,838,11],[761,8,839,6],[761,14,839,12],[761,18,839,16,"Error"],[761,23,839,21],[761,24,839,22],[761,129,839,127],[761,130,839,128],[762,6,840,4],[763,4,841,2],[764,4,843,2],[764,8,843,6,"sigWords"],[764,16,843,14],[764,18,843,16,"dataWords"],[764,27,843,25],[764,30,843,28,"dataWords"],[764,39,843,37],[764,40,843,38,"concat"],[764,46,843,44],[764,47,843,45,"sigWords"],[764,55,843,53],[764,56,843,54],[765,4,845,2],[765,8,845,6,"tagsContainItem"],[765,23,845,21],[765,24,845,22,"data"],[765,28,845,26],[765,29,845,27,"tags"],[765,33,845,31],[765,35,845,33,"TAGNAMES"],[765,43,845,41],[765,44,845,42],[765,47,845,45],[765,48,845,46],[765,49,845,47],[765,51,845,49],[766,6,846,4,"data"],[766,10,846,8],[766,11,846,9,"timeExpireDate"],[766,25,846,23],[766,28,846,26,"data"],[766,32,846,30],[766,33,846,31,"timestamp"],[766,42,846,40],[766,45,846,43,"tagsItems"],[766,54,846,52],[766,55,846,53,"data"],[766,59,846,57],[766,60,846,58,"tags"],[766,64,846,62],[766,66,846,64,"TAGNAMES"],[766,74,846,72],[766,75,846,73],[766,78,846,76],[766,79,846,77],[766,80,846,78],[767,6,847,4,"data"],[767,10,847,8],[767,11,847,9,"timeExpireDateString"],[767,31,847,29],[767,34,847,32],[767,38,847,36,"Date"],[767,42,847,40],[767,43,847,41,"data"],[767,47,847,45],[767,48,847,46,"timeExpireDate"],[767,62,847,60],[767,65,847,63],[767,69,847,67],[767,70,847,68],[767,71,847,69,"toISOString"],[767,82,847,80],[767,83,847,81],[767,84,847,82],[768,4,848,2],[769,4,849,2,"data"],[769,8,849,6],[769,9,849,7,"timestampString"],[769,24,849,22],[769,27,849,25],[769,31,849,29,"Date"],[769,35,849,33],[769,36,849,34,"data"],[769,40,849,38],[769,41,849,39,"timestamp"],[769,50,849,48],[769,53,849,51],[769,57,849,55],[769,58,849,56],[769,59,849,57,"toISOString"],[769,70,849,68],[769,71,849,69],[769,72,849,70],[770,4,850,2,"data"],[770,8,850,6],[770,9,850,7,"complete"],[770,17,850,15],[770,20,850,18],[770,21,850,19],[770,22,850,20,"sigWords"],[770,30,850,28],[771,4,851,2,"data"],[771,8,851,6],[771,9,851,7,"paymentRequest"],[771,23,851,21],[771,26,851,24,"data"],[771,30,851,28],[771,31,851,29,"complete"],[771,39,851,37],[771,42,851,40,"_$$_REQUIRE"],[771,53,851,40],[771,54,851,40,"_dependencyMap"],[771,68,851,40],[771,83,851,47,"encode"],[771,89,851,53],[771,90,851,54,"prefix"],[771,96,851,60],[771,98,851,62,"dataWords"],[771,107,851,71],[771,109,851,73,"Number"],[771,115,851,79],[771,116,851,80,"MAX_SAFE_INTEGER"],[771,132,851,96],[771,133,851,97],[771,136,851,100],[771,138,851,102],[772,4,852,2,"data"],[772,8,852,6],[772,9,852,7,"prefix"],[772,15,852,13],[772,18,852,16,"prefix"],[772,24,852,22],[773,4,853,2,"data"],[773,8,853,6],[773,9,853,7,"wordsTemp"],[773,18,853,16],[773,21,853,19,"_$$_REQUIRE"],[773,32,853,19],[773,33,853,19,"_dependencyMap"],[773,47,853,19],[773,62,853,26,"encode"],[773,68,853,32],[773,69,853,33],[773,75,853,39],[773,77,853,41,"dataWords"],[773,86,853,50],[773,88,853,52,"Number"],[773,94,853,58],[773,95,853,59,"MAX_SAFE_INTEGER"],[773,111,853,75],[773,112,853,76],[775,4,855,2],[776,4,856,2],[777,4,857,2],[777,11,857,9,"orderKeys"],[777,20,857,18],[777,21,857,19,"data"],[777,25,857,23],[777,26,857,24],[778,2,858,0],[780,2,860,0],[781,2,861,0],[782,2,862,0],[782,11,862,9,"decode"],[782,17,862,15,"decode"],[782,18,862,17,"paymentRequest"],[782,32,862,31],[782,34,862,33,"network"],[782,41,862,40],[782,43,862,42],[783,4,863,2],[783,8,863,6],[783,15,863,13,"paymentRequest"],[783,29,863,27],[783,34,863,32],[783,42,863,40],[783,44,863,42],[783,50,863,48],[783,54,863,52,"Error"],[783,59,863,57],[783,60,863,58],[783,102,863,100],[783,103,863,101],[784,4,864,2],[784,8,864,6,"paymentRequest"],[784,22,864,20],[784,23,864,21,"slice"],[784,28,864,26],[784,29,864,27],[784,30,864,28],[784,32,864,30],[784,33,864,31],[784,34,864,32],[784,35,864,33,"toLowerCase"],[784,46,864,44],[784,47,864,45],[784,48,864,46],[784,53,864,51],[784,57,864,55],[784,59,864,57],[784,65,864,63],[784,69,864,67,"Error"],[784,74,864,72],[784,75,864,73],[784,115,864,113],[784,116,864,114],[785,4,865,2],[785,8,865,8,"decoded"],[785,15,865,15],[785,18,865,18,"_$$_REQUIRE"],[785,29,865,18],[785,30,865,18,"_dependencyMap"],[785,44,865,18],[785,59,865,25,"decode"],[785,65,865,31],[785,66,865,32,"paymentRequest"],[785,80,865,46],[785,82,865,48,"Number"],[785,88,865,54],[785,89,865,55,"MAX_SAFE_INTEGER"],[785,105,865,71],[785,106,865,72],[786,4,866,2,"paymentRequest"],[786,18,866,16],[786,21,866,19,"paymentRequest"],[786,35,866,33],[786,36,866,34,"toLowerCase"],[786,47,866,45],[786,48,866,46],[786,49,866,47],[787,4,867,2],[787,8,867,8,"prefix"],[787,14,867,14],[787,17,867,17,"decoded"],[787,24,867,24],[787,25,867,25,"prefix"],[787,31,867,31],[788,4,868,2],[788,8,868,6,"words"],[788,13,868,11],[788,16,868,14,"decoded"],[788,23,868,21],[788,24,868,22,"words"],[788,29,868,27],[790,4,870,2],[791,4,871,2],[792,4,872,2],[793,4,873,2],[793,8,873,8,"sigWords"],[793,16,873,16],[793,19,873,19,"words"],[793,24,873,24],[793,25,873,25,"slice"],[793,30,873,30],[793,31,873,31],[793,32,873,32],[793,35,873,35],[793,36,873,36],[794,4,874,2],[795,4,875,2],[795,8,875,8,"wordsNoSig"],[795,18,875,18],[795,21,875,21,"words"],[795,26,875,26],[795,27,875,27,"slice"],[795,32,875,32],[795,33,875,33],[795,34,875,34],[795,36,875,36],[795,37,875,37],[795,40,875,40],[795,41,875,41],[796,4,876,2,"words"],[796,9,876,7],[796,12,876,10,"words"],[796,17,876,15],[796,18,876,16,"slice"],[796,23,876,21],[796,24,876,22],[796,25,876,23],[796,27,876,25],[796,28,876,26],[796,31,876,29],[796,32,876,30],[797,4,878,2],[797,8,878,6,"sigBuffer"],[797,17,878,15],[797,20,878,18,"wordsToBuffer"],[797,33,878,31],[797,34,878,32,"sigWords"],[797,42,878,40],[797,44,878,42],[797,48,878,46],[797,49,878,47],[798,4,879,2],[798,8,879,8,"recoveryFlag"],[798,20,879,20],[798,23,879,23,"sigBuffer"],[798,32,879,32],[798,33,879,33,"slice"],[798,38,879,38],[798,39,879,39],[798,40,879,40],[798,41,879,41],[798,42,879,42],[798,43,879,43],[798,44,879,44],[798,45,879,45],[799,4,880,2,"sigBuffer"],[799,13,880,11],[799,16,880,14,"sigBuffer"],[799,25,880,23],[799,26,880,24,"slice"],[799,31,880,29],[799,32,880,30],[799,33,880,31],[799,35,880,33],[799,36,880,34],[799,37,880,35],[799,38,880,36],[800,4,882,2],[800,8,882,6],[800,10,882,8,"recoveryFlag"],[800,22,882,20],[800,26,882,24],[800,27,882,25],[800,28,882,26],[800,30,882,28],[800,31,882,29],[800,33,882,31],[800,34,882,32],[800,36,882,34],[800,37,882,35],[800,38,882,36],[800,39,882,37],[800,43,882,41,"sigBuffer"],[800,52,882,50],[800,53,882,51,"length"],[800,59,882,57],[800,64,882,62],[800,66,882,64],[800,68,882,66],[801,6,883,4],[801,12,883,10],[801,16,883,14,"Error"],[801,21,883,19],[801,22,883,20],[801,57,883,55],[801,58,883,56],[802,4,884,2],[804,4,886,2],[805,4,887,2],[806,4,888,2],[807,4,889,2],[808,4,890,2],[809,4,891,2],[809,8,891,6,"prefixMatches"],[809,21,891,19],[809,24,891,22,"prefix"],[809,30,891,28],[809,31,891,29,"match"],[809,36,891,34],[809,37,891,35],[809,65,891,63],[809,66,891,64],[810,4,892,2],[810,8,892,6,"prefixMatches"],[810,21,892,19],[810,25,892,23],[810,26,892,24,"prefixMatches"],[810,39,892,37],[810,40,892,38],[810,41,892,39],[810,42,892,40],[810,44,892,42,"prefixMatches"],[810,57,892,55],[810,60,892,58,"prefix"],[810,66,892,64],[810,67,892,65,"match"],[810,72,892,70],[810,73,892,71],[810,84,892,82],[810,85,892,83],[811,4,893,2],[811,8,893,6],[811,9,893,7,"prefixMatches"],[811,22,893,20],[811,24,893,22],[812,6,894,4],[812,12,894,10],[812,16,894,14,"Error"],[812,21,894,19],[812,22,894,20],[812,62,894,60],[812,63,894,61],[813,4,895,2],[814,4,897,2],[814,8,897,8,"bech32Prefix"],[814,20,897,20],[814,23,897,23,"prefixMatches"],[814,36,897,36],[814,37,897,37],[814,38,897,38],[814,39,897,39],[815,4,898,2],[815,8,898,6,"coinNetwork"],[815,19,898,17],[816,4,899,2],[816,8,899,6],[816,9,899,7,"network"],[816,16,899,14],[816,18,899,16],[817,6,900,4],[817,14,900,12,"bech32Prefix"],[817,26,900,24],[818,8,901,6],[818,13,901,11,"DEFAULTNETWORK"],[818,27,901,25],[818,28,901,26,"bech32"],[818,34,901,32],[819,10,902,8,"coinNetwork"],[819,21,902,19],[819,24,902,22,"DEFAULTNETWORK"],[819,38,902,36],[820,10,903,8],[821,8,904,6],[821,13,904,11,"TESTNETWORK"],[821,24,904,22],[821,25,904,23,"bech32"],[821,31,904,29],[822,10,905,8,"coinNetwork"],[822,21,905,19],[822,24,905,22,"TESTNETWORK"],[822,35,905,33],[823,10,906,8],[824,8,907,6],[824,13,907,11,"REGTESTNETWORK"],[824,27,907,25],[824,28,907,26,"bech32"],[824,34,907,32],[825,10,908,8,"coinNetwork"],[825,21,908,19],[825,24,908,22,"REGTESTNETWORK"],[825,38,908,36],[826,10,909,8],[827,8,910,6],[827,13,910,11,"SIMNETWORK"],[827,23,910,21],[827,24,910,22,"bech32"],[827,30,910,28],[828,10,911,8,"coinNetwork"],[828,21,911,19],[828,24,911,22,"SIMNETWORK"],[828,34,911,32],[829,10,912,8],[830,6,913,4],[831,4,914,2],[831,5,914,3],[831,11,914,9],[832,6,915,4],[832,10,916,6,"network"],[832,17,916,13],[832,18,916,14,"bech32"],[832,24,916,20],[832,29,916,25,"undefined"],[832,38,916,34],[832,42,917,6,"network"],[832,49,917,13],[832,50,917,14,"pubKeyHash"],[832,60,917,24],[832,65,917,29,"undefined"],[832,74,917,38],[832,78,918,6,"network"],[832,85,918,13],[832,86,918,14,"scriptHash"],[832,96,918,24],[832,101,918,29,"undefined"],[832,110,918,38],[832,114,919,6],[832,115,919,7,"Array"],[832,120,919,12],[832,121,919,13,"isArray"],[832,128,919,20],[832,129,919,21,"network"],[832,136,919,28],[832,137,919,29,"validWitnessVersions"],[832,157,919,49],[832,158,919,50],[832,160,920,6],[832,166,920,12],[832,170,920,16,"Error"],[832,175,920,21],[832,176,920,22],[832,193,920,39],[832,194,920,40],[833,6,921,4,"coinNetwork"],[833,17,921,15],[833,20,921,18,"network"],[833,27,921,25],[834,4,922,2],[835,4,923,2],[835,8,923,6],[835,9,923,7,"coinNetwork"],[835,20,923,18],[835,24,923,22,"coinNetwork"],[835,35,923,33],[835,36,923,34,"bech32"],[835,42,923,40],[835,47,923,45,"bech32Prefix"],[835,59,923,57],[835,61,923,59],[836,6,924,4],[836,12,924,10],[836,16,924,14,"Error"],[836,21,924,19],[836,22,924,20],[836,50,924,48],[836,51,924,49],[837,4,925,2],[838,4,927,2],[838,8,927,8,"value"],[838,13,927,13],[838,16,927,16,"prefixMatches"],[838,29,927,29],[838,30,927,30],[838,31,927,31],[838,32,927,32],[839,4,928,2],[839,8,928,6,"satoshis"],[839,16,928,14],[839,18,928,16,"millisatoshis"],[839,31,928,29],[839,33,928,31,"removeSatoshis"],[839,47,928,45],[840,4,929,2],[840,8,929,6,"value"],[840,13,929,11],[840,15,929,13],[841,6,930,4],[841,10,930,10,"divisor"],[841,17,930,17],[841,20,930,20,"prefixMatches"],[841,33,930,33],[841,34,930,34],[841,35,930,35],[841,36,930,36],[842,6,931,4],[842,10,931,8],[843,8,932,6,"satoshis"],[843,16,932,14],[843,19,932,17,"parseInt"],[843,27,932,25],[843,28,932,26,"hrpToSat"],[843,36,932,34],[843,37,932,35,"value"],[843,42,932,40],[843,45,932,43,"divisor"],[843,52,932,50],[843,54,932,52],[843,58,932,56],[843,59,932,57],[843,60,932,58],[844,6,933,4],[844,7,933,5],[844,8,933,6],[844,15,933,13,"e"],[844,16,933,14],[844,18,933,16],[845,8,934,6,"satoshis"],[845,16,934,14],[845,19,934,17],[845,23,934,21],[846,8,935,6,"removeSatoshis"],[846,22,935,20],[846,25,935,23],[846,29,935,27],[847,6,936,4],[848,6,937,4,"millisatoshis"],[848,19,937,17],[848,22,937,20,"hrpToMillisat"],[848,35,937,33],[848,36,937,34,"value"],[848,41,937,39],[848,44,937,42,"divisor"],[848,51,937,49],[848,53,937,51],[848,57,937,55],[848,58,937,56],[849,4,938,2],[849,5,938,3],[849,11,938,9],[850,6,939,4,"satoshis"],[850,14,939,12],[850,17,939,15],[850,21,939,19],[851,6,940,4,"millisatoshis"],[851,19,940,17],[851,22,940,20],[851,26,940,24],[852,4,941,2],[854,4,943,2],[855,4,944,2],[855,8,944,8,"timestamp"],[855,17,944,17],[855,20,944,20,"wordsToIntBE"],[855,32,944,32],[855,33,944,33,"words"],[855,38,944,38],[855,39,944,39,"slice"],[855,44,944,44],[855,45,944,45],[855,46,944,46],[855,48,944,48],[855,49,944,49],[855,50,944,50],[855,51,944,51],[856,4,945,2],[856,8,945,8,"timestampString"],[856,23,945,23],[856,26,945,26],[856,30,945,30,"Date"],[856,34,945,34],[856,35,945,35,"timestamp"],[856,44,945,44],[856,47,945,47],[856,51,945,51],[856,52,945,52],[856,53,945,53,"toISOString"],[856,64,945,64],[856,65,945,65],[856,66,945,66],[857,4,946,2,"words"],[857,9,946,7],[857,12,946,10,"words"],[857,17,946,15],[857,18,946,16,"slice"],[857,23,946,21],[857,24,946,22],[857,25,946,23],[857,26,946,24],[857,28,946,25],[859,4,948,2],[859,8,948,8,"tags"],[859,12,948,12],[859,15,948,15],[859,17,948,17],[860,4,949,2],[860,8,949,6,"tagName"],[860,15,949,13],[860,17,949,15,"parser"],[860,23,949,21],[860,25,949,23,"tagLength"],[860,34,949,32],[860,36,949,34,"tagWords"],[860,44,949,42],[861,4,950,2],[862,4,951,2],[863,4,952,2],[863,11,952,9,"words"],[863,16,952,14],[863,17,952,15,"length"],[863,23,952,21],[863,26,952,24],[863,27,952,25],[863,29,952,27],[864,6,953,4],[864,10,953,10,"tagCode"],[864,17,953,17],[864,20,953,20,"words"],[864,25,953,25],[864,26,953,26],[864,27,953,27],[864,28,953,28],[864,29,953,29,"toString"],[864,37,953,37],[864,38,953,38],[864,39,953,39],[865,6,954,4,"tagName"],[865,13,954,11],[865,16,954,14,"TAGNAMES"],[865,24,954,22],[865,25,954,23,"tagCode"],[865,32,954,30],[865,33,954,31],[865,37,954,35,"unknownTagName"],[865,51,954,49],[866,6,955,4,"parser"],[866,12,955,10],[866,15,955,13,"TAGPARSERS"],[866,25,955,23],[866,26,955,24,"tagCode"],[866,33,955,31],[866,34,955,32],[866,38,955,36,"getUnknownParser"],[866,54,955,52],[866,55,955,53,"tagCode"],[866,62,955,60],[866,63,955,61],[867,6,956,4,"words"],[867,11,956,9],[867,14,956,12,"words"],[867,19,956,17],[867,20,956,18,"slice"],[867,25,956,23],[867,26,956,24],[867,27,956,25],[867,28,956,26],[868,6,958,4,"tagLength"],[868,15,958,13],[868,18,958,16,"wordsToIntBE"],[868,30,958,28],[868,31,958,29,"words"],[868,36,958,34],[868,37,958,35,"slice"],[868,42,958,40],[868,43,958,41],[868,44,958,42],[868,46,958,44],[868,47,958,45],[868,48,958,46],[868,49,958,47],[869,6,959,4,"words"],[869,11,959,9],[869,14,959,12,"words"],[869,19,959,17],[869,20,959,18,"slice"],[869,25,959,23],[869,26,959,24],[869,27,959,25],[869,28,959,26],[870,6,961,4,"tagWords"],[870,14,961,12],[870,17,961,15,"words"],[870,22,961,20],[870,23,961,21,"slice"],[870,28,961,26],[870,29,961,27],[870,30,961,28],[870,32,961,30,"tagLength"],[870,41,961,39],[870,42,961,40],[871,6,962,4,"words"],[871,11,962,9],[871,14,962,12,"words"],[871,19,962,17],[871,20,962,18,"slice"],[871,25,962,23],[871,26,962,24,"tagLength"],[871,35,962,33],[871,36,962,34],[873,6,964,4],[874,6,965,4,"tags"],[874,10,965,8],[874,11,965,9,"push"],[874,15,965,13],[874,16,965,14],[875,8,966,6,"tagName"],[875,15,966,13],[875,17,966,6,"tagName"],[875,24,966,13],[876,8,967,6,"data"],[876,12,967,10],[876,14,967,12,"parser"],[876,20,967,18],[876,21,967,19,"tagWords"],[876,29,967,27],[876,31,967,29,"coinNetwork"],[876,42,967,40],[876,43,967,41],[876,44,967,42],[877,6,968,4],[877,7,968,5],[877,8,968,6],[878,4,969,2],[879,4,971,2],[879,8,971,6,"timeExpireDate"],[879,22,971,20],[879,24,971,22,"timeExpireDateString"],[879,44,971,42],[880,4,972,2],[881,4,973,2],[882,4,974,2],[882,8,974,6,"tagsContainItem"],[882,23,974,21],[882,24,974,22,"tags"],[882,28,974,26],[882,30,974,28,"TAGNAMES"],[882,38,974,36],[882,39,974,37],[882,42,974,40],[882,43,974,41],[882,44,974,42],[882,46,974,44],[883,6,975,4,"timeExpireDate"],[883,20,975,18],[883,23,975,21,"timestamp"],[883,32,975,30],[883,35,975,33,"tagsItems"],[883,44,975,42],[883,45,975,43,"tags"],[883,49,975,47],[883,51,975,49,"TAGNAMES"],[883,59,975,57],[883,60,975,58],[883,63,975,61],[883,64,975,62],[883,65,975,63],[884,6,976,4,"timeExpireDateString"],[884,26,976,24],[884,29,976,27],[884,33,976,31,"Date"],[884,37,976,35],[884,38,976,36,"timeExpireDate"],[884,52,976,50],[884,55,976,53],[884,59,976,57],[884,60,976,58],[884,61,976,59,"toISOString"],[884,72,976,70],[884,73,976,71],[884,74,976,72],[885,4,977,2],[886,4,979,2],[886,8,979,8,"toSign"],[886,14,979,14],[886,17,979,17,"_$$_REQUIRE"],[886,28,979,17],[886,29,979,17,"_dependencyMap"],[886,43,979,17],[886,63,979,17,"Buffer"],[886,69,979,17],[886,70,979,24,"concat"],[886,76,979,30],[886,77,979,31],[886,78,979,32,"_$$_REQUIRE"],[886,89,979,32],[886,90,979,32,"_dependencyMap"],[886,104,979,32],[886,124,979,32,"Buffer"],[886,130,979,32],[886,131,979,39,"from"],[886,135,979,43],[886,136,979,44,"prefix"],[886,142,979,50],[886,144,979,52],[886,150,979,58],[886,151,979,59],[886,153,979,61,"_$$_REQUIRE"],[886,164,979,61],[886,165,979,61,"_dependencyMap"],[886,179,979,61],[886,199,979,61,"Buffer"],[886,205,979,61],[886,206,979,68,"from"],[886,210,979,72],[886,211,979,73,"convert"],[886,218,979,80],[886,219,979,81,"wordsNoSig"],[886,229,979,91],[886,231,979,93],[886,232,979,94],[886,234,979,96],[886,235,979,97],[886,236,979,98],[886,237,979,99],[886,238,979,100],[886,239,979,101],[887,4,980,2],[887,8,980,8,"payReqHash"],[887,18,980,18],[887,21,980,21,"sha256"],[887,27,980,27],[887,28,980,28,"toSign"],[887,34,980,34],[887,35,980,35],[888,4,981,2],[888,8,981,8,"sigPubkey"],[888,17,981,17],[888,20,981,20,"_$$_REQUIRE"],[888,31,981,20],[888,32,981,20,"_dependencyMap"],[888,46,981,20],[888,66,981,20,"Buffer"],[888,72,981,20],[888,73,981,27,"from"],[888,77,981,31],[888,78,981,32,"_$$_REQUIRE"],[888,89,981,32],[888,90,981,32,"_dependencyMap"],[888,104,981,32],[888,122,981,42,"ecdsaRecover"],[888,134,981,54],[888,135,981,55,"sigBuffer"],[888,144,981,64],[888,146,981,66,"recoveryFlag"],[888,158,981,78],[888,160,981,80,"payReqHash"],[888,170,981,90],[888,172,981,92],[888,176,981,96],[888,177,981,97],[888,178,981,98],[889,4,982,2],[889,8,982,6,"tagsContainItem"],[889,23,982,21],[889,24,982,22,"tags"],[889,28,982,26],[889,30,982,28,"TAGNAMES"],[889,38,982,36],[889,39,982,37],[889,43,982,41],[889,44,982,42],[889,45,982,43],[889,49,982,47,"tagsItems"],[889,58,982,56],[889,59,982,57,"tags"],[889,63,982,61],[889,65,982,63,"TAGNAMES"],[889,73,982,71],[889,74,982,72],[889,78,982,76],[889,79,982,77],[889,80,982,78],[889,85,982,83,"sigPubkey"],[889,94,982,92],[889,95,982,93,"toString"],[889,103,982,101],[889,104,982,102],[889,109,982,107],[889,110,982,108],[889,112,982,110],[890,6,983,4],[890,12,983,10],[890,16,983,14,"Error"],[890,21,983,19],[890,22,983,20],[890,94,983,92],[890,95,983,93],[891,4,984,2],[892,4,986,2],[892,8,986,6,"finalResult"],[892,19,986,17],[892,22,986,20],[893,6,987,4,"paymentRequest"],[893,20,987,18],[893,22,987,4,"paymentRequest"],[893,36,987,18],[894,6,988,4,"complete"],[894,14,988,12],[894,16,988,14],[894,20,988,18],[895,6,989,4,"prefix"],[895,12,989,10],[895,14,989,4,"prefix"],[895,20,989,10],[896,6,990,4,"wordsTemp"],[896,15,990,13],[896,17,990,15,"_$$_REQUIRE"],[896,28,990,15],[896,29,990,15,"_dependencyMap"],[896,43,990,15],[896,58,990,22,"encode"],[896,64,990,28],[896,65,990,29],[896,71,990,35],[896,73,990,37,"wordsNoSig"],[896,83,990,47],[896,84,990,48,"concat"],[896,90,990,54],[896,91,990,55,"sigWords"],[896,99,990,63],[896,100,990,64],[896,102,990,66,"Number"],[896,108,990,72],[896,109,990,73,"MAX_SAFE_INTEGER"],[896,125,990,89],[896,126,990,90],[897,6,991,4,"network"],[897,13,991,11],[897,15,991,13,"coinNetwork"],[897,26,991,24],[898,6,992,4,"satoshis"],[898,14,992,12],[898,16,992,4,"satoshis"],[898,24,992,12],[899,6,993,4,"millisatoshis"],[899,19,993,17],[899,21,993,4,"millisatoshis"],[899,34,993,17],[900,6,994,4,"timestamp"],[900,15,994,13],[900,17,994,4,"timestamp"],[900,26,994,13],[901,6,995,4,"timestampString"],[901,21,995,19],[901,23,995,4,"timestampString"],[901,38,995,19],[902,6,996,4,"payeeNodeKey"],[902,18,996,16],[902,20,996,18,"sigPubkey"],[902,29,996,27],[902,30,996,28,"toString"],[902,38,996,36],[902,39,996,37],[902,44,996,42],[902,45,996,43],[903,6,997,4,"signature"],[903,15,997,13],[903,17,997,15,"sigBuffer"],[903,26,997,24],[903,27,997,25,"toString"],[903,35,997,33],[903,36,997,34],[903,41,997,39],[903,42,997,40],[904,6,998,4,"recoveryFlag"],[904,18,998,16],[904,20,998,4,"recoveryFlag"],[904,32,998,16],[905,6,999,4,"tags"],[905,10,999,8],[905,12,999,4,"tags"],[906,4,1000,2],[906,5,1000,3],[907,4,1002,2],[907,8,1002,6,"removeSatoshis"],[907,22,1002,20],[907,24,1002,22],[908,6,1003,4],[908,13,1003,11,"finalResult"],[908,24,1003,22],[908,25,1003,23,"satoshis"],[908,33,1003,31],[909,4,1004,2],[910,4,1006,2],[910,8,1006,6,"timeExpireDate"],[910,22,1006,20],[910,24,1006,22],[911,6,1007,4,"finalResult"],[911,17,1007,15],[911,20,1007,18,"Object"],[911,26,1007,24],[911,27,1007,25,"assign"],[911,33,1007,31],[911,34,1007,32,"finalResult"],[911,45,1007,43],[911,47,1007,45],[912,8,1007,47,"timeExpireDate"],[912,22,1007,61],[912,24,1007,47,"timeExpireDate"],[912,38,1007,61],[913,8,1007,63,"timeExpireDateString"],[913,28,1007,83],[913,30,1007,63,"timeExpireDateString"],[914,6,1007,84],[914,7,1007,85],[914,8,1007,86],[915,4,1008,2],[916,4,1010,2],[916,11,1010,9,"orderKeys"],[916,20,1010,18],[916,21,1010,19,"finalResult"],[916,32,1010,30],[916,34,1010,32],[916,38,1010,36],[916,39,1010,37],[917,2,1011,0],[918,2,1013,0],[918,11,1013,9,"getTagsObject"],[918,24,1013,22,"getTagsObject"],[918,25,1013,24,"tags"],[918,29,1013,28],[918,31,1013,30],[919,4,1014,2],[919,8,1014,8,"result"],[919,14,1014,14],[919,17,1014,17],[919,18,1014,18],[919,19,1014,19],[920,4,1015,2,"tags"],[920,8,1015,6],[920,9,1015,7,"forEach"],[920,16,1015,14],[920,17,1015,15],[920,27,1015,15,"tag"],[920,30,1015,18],[920,32,1015,22],[921,6,1016,4],[921,10,1016,8,"tag"],[921,13,1016,11],[921,14,1016,12,"tagName"],[921,21,1016,19],[921,26,1016,24,"unknownTagName"],[921,40,1016,38],[921,42,1016,40],[922,8,1017,6],[922,12,1017,10],[922,13,1017,11,"result"],[922,19,1017,17],[922,20,1017,18,"unknownTags"],[922,31,1017,29],[922,33,1017,31],[923,10,1018,8,"result"],[923,16,1018,14],[923,17,1018,15,"unknownTags"],[923,28,1018,26],[923,31,1018,29],[923,33,1018,31],[924,8,1019,6],[925,8,1020,6,"result"],[925,14,1020,12],[925,15,1020,13,"unknownTags"],[925,26,1020,24],[925,27,1020,25,"push"],[925,31,1020,29],[925,32,1020,30,"tag"],[925,35,1020,33],[925,36,1020,34,"data"],[925,40,1020,38],[925,41,1020,39],[926,6,1021,4],[926,7,1021,5],[926,13,1021,11],[927,8,1022,6,"result"],[927,14,1022,12],[927,15,1022,13,"tag"],[927,18,1022,16],[927,19,1022,17,"tagName"],[927,26,1022,24],[927,27,1022,25],[927,30,1022,28,"tag"],[927,33,1022,31],[927,34,1022,32,"data"],[927,38,1022,36],[928,6,1023,4],[929,4,1024,2],[929,5,1024,3],[929,6,1024,4],[930,4,1026,2],[930,11,1026,9,"result"],[930,17,1026,15],[931,2,1027,0],[932,2,1029,0,"module"],[932,8,1029,6],[932,9,1029,7,"exports"],[932,16,1029,14],[932,19,1029,17],[933,4,1030,2,"encode"],[933,10,1030,8],[933,12,1030,2,"encode"],[933,18,1030,8],[934,4,1031,2,"decode"],[934,10,1031,8],[934,12,1031,2,"decode"],[934,18,1031,8],[935,4,1032,2,"sign"],[935,8,1032,6],[935,10,1032,2,"sign"],[935,14,1032,6],[936,4,1033,2,"satToHrp"],[936,12,1033,10],[936,14,1033,2,"satToHrp"],[936,22,1033,10],[937,4,1034,2,"millisatToHrp"],[937,17,1034,15],[937,19,1034,2,"millisatToHrp"],[937,32,1034,15],[938,4,1035,2,"hrpToSat"],[938,12,1035,10],[938,14,1035,2,"hrpToSat"],[938,22,1035,10],[939,4,1036,2,"hrpToMillisat"],[939,17,1036,15],[939,19,1036,2,"hrpToMillisat"],[940,2,1037,0],[940,3,1037,1],[941,0,1037,1],[941,3]],"functionMap":{"names":["<global>","TAGPARSERS._","unknownEncoder","getUnknownParser","<anonymous>","wordsToIntBE","words.reverse.reduce$argument_0","intBEToWords","sha256","convert","wordsToBuffer","hexToBuffer","textToBuffer","hexToWord","textToWord","fallbackAddressParser","fallbackAddressEncoder","routingInfoParser","featureBitsParser","words.slice.reverse.map$argument_0","words.slice.reverse.map.reduce$argument_0","FEATUREBIT_ORDER.forEach$argument_0","extraBits.reduce$argument_0","featureBitsEncoder","Array.fill.map$argument_0","routingInfoEncoder","datas.forEach$argument_0","purposeCommitEncoder","tagsItems","tags.filter$argument_0","tagsContainItem","orderKeys","Object.keys.sort.forEach$argument_0","Object.defineProperty$argument_2.get","satToHrp","millisatToHrp","hrpToSat","hrpToMillisat","sign","encode","routingInfo.forEach$argument_0","tags.forEach$argument_0","decode","getTagsObject"],"mappings":"AAA;KCkH,qDD;MCC,qDD;MCC,sDD;MCC,qDD;MCC,qDD;AEU;CFG;AGE;SCC;IDG;CHC;AKE;gCCC;GDE;CLC;AOE;CPU;AQE;CRE;ASE;CTqB;AUE;CVM;AWE;CXO;AYE;CZE;AaE;CbG;AcE;CdI;AeG;Cf0B;AgBM;ChBE;AiBI;CjBsB;AkBE;4CCC;KDO;WEC,+CF;2BGO;GHK;QIO;2BJG;ClBY;AuBE;2BFG;GEG;4CCuB;yBDK;CvBE;AyBQ;gBCE;GDM;CzBE;A2BI;C3BY;A4BE;0BCC,gCD;C5BG;A8BE;C9BE;A+BE;2CCE;GDE;MEI;OFO;C/BI;AkCE;ClCM;AmCE;CnCyB;AoCE;CpCO;AqCE;CrCyB;AsCE;CtC2D;AuCE;wBC8J;KD2B;eEmC;GFyB;CvCoD;A0CI;C1CqJ;A2CE;eFE;GES;C3CG"}},"type":"js/module"}]}