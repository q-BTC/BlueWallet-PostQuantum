{"dependencies":[{"name":"buffer-xor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":10,"index":53},"end":{"line":2,"column":31,"index":74}}],"key":"loeSrW6/3vzsFLRxgE5dDkO1O/w="}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function encryptStart(self, data, decrypt) {\n    var len = data.length;\n    var out = _$$_REQUIRE(_dependencyMap[0], \"buffer-xor\")(data, self._cache);\n    self._cache = self._cache.slice(len);\n    self._prev = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([self._prev, decrypt ? data : out]);\n    return out;\n  }\n  exports.encrypt = function (self, data, decrypt) {\n    var out = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.allocUnsafe(0);\n    var len;\n    while (data.length) {\n      if (self._cache.length === 0) {\n        self._cache = self._cipher.encryptBlock(self._prev);\n        self._prev = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.allocUnsafe(0);\n      }\n      if (self._cache.length <= data.length) {\n        len = self._cache.length;\n        out = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)]);\n        data = data.slice(len);\n      } else {\n        out = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([out, encryptStart(self, data, decrypt)]);\n        break;\n      }\n    }\n    return out;\n  };\n});","lineCount":28,"map":[[2,2,4,0],[2,11,4,9,"encryptStart"],[2,23,4,21,"encryptStart"],[2,24,4,23,"self"],[2,28,4,27],[2,30,4,29,"data"],[2,34,4,33],[2,36,4,35,"decrypt"],[2,43,4,42],[2,45,4,44],[3,4,5,2],[3,8,5,6,"len"],[3,11,5,9],[3,14,5,12,"data"],[3,18,5,16],[3,19,5,17,"length"],[3,25,5,23],[4,4,6,2],[4,8,6,6,"out"],[4,11,6,9],[4,14,6,12,"_$$_REQUIRE"],[4,25,6,12],[4,26,6,12,"_dependencyMap"],[4,40,6,12],[4,59,6,16,"data"],[4,63,6,20],[4,65,6,22,"self"],[4,69,6,26],[4,70,6,27,"_cache"],[4,76,6,33],[4,77,6,34],[5,4,7,2,"self"],[5,8,7,6],[5,9,7,7,"_cache"],[5,15,7,13],[5,18,7,16,"self"],[5,22,7,20],[5,23,7,21,"_cache"],[5,29,7,27],[5,30,7,28,"slice"],[5,35,7,33],[5,36,7,34,"len"],[5,39,7,37],[5,40,7,38],[6,4,8,2,"self"],[6,8,8,6],[6,9,8,7,"_prev"],[6,14,8,12],[6,17,8,15,"_$$_REQUIRE"],[6,28,8,15],[6,29,8,15,"_dependencyMap"],[6,43,8,15],[6,63,8,15,"Buffer"],[6,69,8,15],[6,70,8,22,"concat"],[6,76,8,28],[6,77,8,29],[6,78,8,30,"self"],[6,82,8,34],[6,83,8,35,"_prev"],[6,88,8,40],[6,90,8,42,"decrypt"],[6,97,8,49],[6,100,8,52,"data"],[6,104,8,56],[6,107,8,59,"out"],[6,110,8,62],[6,111,8,63],[6,112,8,64],[7,4,9,2],[7,11,9,9,"out"],[7,14,9,12],[8,2,10,0],[9,2,12,0,"exports"],[9,9,12,7],[9,10,12,8,"encrypt"],[9,17,12,15],[9,20,12,18],[9,30,12,28,"self"],[9,34,12,32],[9,36,12,34,"data"],[9,40,12,38],[9,42,12,40,"decrypt"],[9,49,12,47],[9,51,12,49],[10,4,13,2],[10,8,13,6,"out"],[10,11,13,9],[10,14,13,12,"_$$_REQUIRE"],[10,25,13,12],[10,26,13,12,"_dependencyMap"],[10,40,13,12],[10,60,13,12,"Buffer"],[10,66,13,12],[10,67,13,19,"allocUnsafe"],[10,78,13,30],[10,79,13,31],[10,80,13,32],[10,81,13,33],[11,4,14,2],[11,8,14,6,"len"],[11,11,14,9],[12,4,16,2],[12,11,16,9,"data"],[12,15,16,13],[12,16,16,14,"length"],[12,22,16,20],[12,24,16,22],[13,6,17,4],[13,10,17,8,"self"],[13,14,17,12],[13,15,17,13,"_cache"],[13,21,17,19],[13,22,17,20,"length"],[13,28,17,26],[13,33,17,31],[13,34,17,32],[13,36,17,34],[14,8,18,6,"self"],[14,12,18,10],[14,13,18,11,"_cache"],[14,19,18,17],[14,22,18,20,"self"],[14,26,18,24],[14,27,18,25,"_cipher"],[14,34,18,32],[14,35,18,33,"encryptBlock"],[14,47,18,45],[14,48,18,46,"self"],[14,52,18,50],[14,53,18,51,"_prev"],[14,58,18,56],[14,59,18,57],[15,8,19,6,"self"],[15,12,19,10],[15,13,19,11,"_prev"],[15,18,19,16],[15,21,19,19,"_$$_REQUIRE"],[15,32,19,19],[15,33,19,19,"_dependencyMap"],[15,47,19,19],[15,67,19,19,"Buffer"],[15,73,19,19],[15,74,19,26,"allocUnsafe"],[15,85,19,37],[15,86,19,38],[15,87,19,39],[15,88,19,40],[16,6,20,4],[17,6,22,4],[17,10,22,8,"self"],[17,14,22,12],[17,15,22,13,"_cache"],[17,21,22,19],[17,22,22,20,"length"],[17,28,22,26],[17,32,22,30,"data"],[17,36,22,34],[17,37,22,35,"length"],[17,43,22,41],[17,45,22,43],[18,8,23,6,"len"],[18,11,23,9],[18,14,23,12,"self"],[18,18,23,16],[18,19,23,17,"_cache"],[18,25,23,23],[18,26,23,24,"length"],[18,32,23,30],[19,8,24,6,"out"],[19,11,24,9],[19,14,24,12,"_$$_REQUIRE"],[19,25,24,12],[19,26,24,12,"_dependencyMap"],[19,40,24,12],[19,60,24,12,"Buffer"],[19,66,24,12],[19,67,24,19,"concat"],[19,73,24,25],[19,74,24,26],[19,75,24,27,"out"],[19,78,24,30],[19,80,24,32,"encryptStart"],[19,92,24,44],[19,93,24,45,"self"],[19,97,24,49],[19,99,24,51,"data"],[19,103,24,55],[19,104,24,56,"slice"],[19,109,24,61],[19,110,24,62],[19,111,24,63],[19,113,24,65,"len"],[19,116,24,68],[19,117,24,69],[19,119,24,71,"decrypt"],[19,126,24,78],[19,127,24,79],[19,128,24,80],[19,129,24,81],[20,8,25,6,"data"],[20,12,25,10],[20,15,25,13,"data"],[20,19,25,17],[20,20,25,18,"slice"],[20,25,25,23],[20,26,25,24,"len"],[20,29,25,27],[20,30,25,28],[21,6,26,4],[21,7,26,5],[21,13,26,11],[22,8,27,6,"out"],[22,11,27,9],[22,14,27,12,"_$$_REQUIRE"],[22,25,27,12],[22,26,27,12,"_dependencyMap"],[22,40,27,12],[22,60,27,12,"Buffer"],[22,66,27,12],[22,67,27,19,"concat"],[22,73,27,25],[22,74,27,26],[22,75,27,27,"out"],[22,78,27,30],[22,80,27,32,"encryptStart"],[22,92,27,44],[22,93,27,45,"self"],[22,97,27,49],[22,99,27,51,"data"],[22,103,27,55],[22,105,27,57,"decrypt"],[22,112,27,64],[22,113,27,65],[22,114,27,66],[22,115,27,67],[23,8,28,6],[24,6,29,4],[25,4,30,2],[26,4,32,2],[26,11,32,9,"out"],[26,14,32,12],[27,2,33,0],[27,3,33,1],[28,0,33,1],[28,3]],"functionMap":{"names":["<global>","encryptStart","exports.encrypt"],"mappings":"AAA;ACG;CDM;kBEE;CFqB"}},"type":"js/module"}]}