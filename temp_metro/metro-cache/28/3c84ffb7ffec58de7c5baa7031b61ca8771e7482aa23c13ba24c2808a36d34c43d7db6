{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":47,"column":40,"index":1659}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":47,"column":40,"index":1659}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"../assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":17,"index":868},"end":{"line":21,"column":37,"index":888}},{"start":{"line":21,"column":17,"index":868},"end":{"line":21,"column":37,"index":888}},{"start":{"line":21,"column":17,"index":868},"end":{"line":21,"column":37,"index":888}},{"start":{"line":21,"column":17,"index":868},"end":{"line":21,"column":37,"index":888}}],"key":"EqNBW+769mc/j/kMnDe9BBrECKc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2024 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.NativeBigInt = void 0;\n  var NativeBigInt = /*#__PURE__*/function () {\n    function NativeBigInt() {\n      _classCallCheck(this, NativeBigInt);\n    }\n    return _createClass(NativeBigInt, null, [{\n      key: \"add\",\n      value: function add(a, b) {\n        (0, _$$_REQUIRE(_dependencyMap[2], \"../assert\").assert)(typeof a === \"bigint\");\n        (0, _$$_REQUIRE(_dependencyMap[2], \"../assert\").assert)(typeof b === \"bigint\");\n        return a + b;\n      }\n    }, {\n      key: \"equals\",\n      value: function equals(a, b) {\n        (0, _$$_REQUIRE(_dependencyMap[2], \"../assert\").assert)(typeof a === \"bigint\");\n        (0, _$$_REQUIRE(_dependencyMap[2], \"../assert\").assert)(typeof b === \"bigint\" || typeof b === \"number\" || typeof b === \"string\");\n        return a == b; // using == rather than === to support number and string RHS!\n      }\n    }, {\n      key: \"isInt\",\n      value: function isInt(a) {\n        return typeof a === \"bigint\";\n      }\n    }, {\n      key: \"numToInt\",\n      value: function numToInt(a) {\n        return BigInt(a);\n      }\n    }, {\n      key: \"strToInt\",\n      value: function strToInt(a) {\n        return BigInt(a);\n      }\n    }, {\n      key: \"intToNum\",\n      value: function intToNum(a) {\n        return Number(a);\n      }\n    }]);\n  }();\n  exports.NativeBigInt = NativeBigInt;\n});","lineCount":68,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,18,0],[21,6,18,0,"_classCallCheck"],[21,21,18,0],[21,24,18,0,"_$$_REQUIRE"],[21,35,18,0],[21,36,18,0,"_dependencyMap"],[21,50,18,0],[22,2,18,0],[22,6,18,0,"_createClass"],[22,18,18,0],[22,21,18,0,"_$$_REQUIRE"],[22,32,18,0],[22,33,18,0,"_dependencyMap"],[22,47,18,0],[23,2,19,0,"Object"],[23,8,19,6],[23,9,19,7,"defineProperty"],[23,23,19,21],[23,24,19,22,"exports"],[23,31,19,29],[23,33,19,31],[23,45,19,43],[23,47,19,45],[24,4,19,47,"value"],[24,9,19,52],[24,11,19,54],[25,2,19,59],[25,3,19,60],[25,4,19,61],[26,2,20,0,"exports"],[26,9,20,7],[26,10,20,8,"NativeBigInt"],[26,22,20,20],[26,25,20,23],[26,30,20,28],[26,31,20,29],[27,2,20,30],[27,6,22,6,"NativeBigInt"],[27,18,22,18],[28,4,22,18],[28,13,22,18,"NativeBigInt"],[28,26,22,18],[29,6,22,18,"_classCallCheck"],[29,21,22,18],[29,28,22,18,"NativeBigInt"],[29,40,22,18],[30,4,22,18],[31,4,22,18],[31,11,22,18,"_createClass"],[31,23,22,18],[31,24,22,18,"NativeBigInt"],[31,36,22,18],[32,6,22,18,"key"],[32,9,22,18],[33,6,22,18,"value"],[33,11,22,18],[33,13,23,4],[33,22,23,11,"add"],[33,25,23,14,"add"],[33,26,23,15,"a"],[33,27,23,16],[33,29,23,18,"b"],[33,30,23,19],[33,32,23,21],[34,8,24,8],[34,9,24,9],[34,10,24,10],[34,12,24,12,"_$$_REQUIRE"],[34,23,24,12],[34,24,24,12,"_dependencyMap"],[34,38,24,12],[34,56,24,21,"assert"],[34,62,24,27],[34,64,24,29],[34,71,24,36,"a"],[34,72,24,37],[34,77,24,42],[34,85,24,50],[34,86,24,51],[35,8,25,8],[35,9,25,9],[35,10,25,10],[35,12,25,12,"_$$_REQUIRE"],[35,23,25,12],[35,24,25,12,"_dependencyMap"],[35,38,25,12],[35,56,25,21,"assert"],[35,62,25,27],[35,64,25,29],[35,71,25,36,"b"],[35,72,25,37],[35,77,25,42],[35,85,25,50],[35,86,25,51],[36,8,26,8],[36,15,26,16,"a"],[36,16,26,17],[36,19,26,20,"b"],[36,20,26,21],[37,6,27,4],[38,4,27,5],[39,6,27,5,"key"],[39,9,27,5],[40,6,27,5,"value"],[40,11,27,5],[40,13,28,4],[40,22,28,11,"equals"],[40,28,28,17,"equals"],[40,29,28,18,"a"],[40,30,28,19],[40,32,28,21,"b"],[40,33,28,22],[40,35,28,24],[41,8,29,8],[41,9,29,9],[41,10,29,10],[41,12,29,12,"_$$_REQUIRE"],[41,23,29,12],[41,24,29,12,"_dependencyMap"],[41,38,29,12],[41,56,29,21,"assert"],[41,62,29,27],[41,64,29,29],[41,71,29,36,"a"],[41,72,29,37],[41,77,29,42],[41,85,29,50],[41,86,29,51],[42,8,30,8],[42,9,30,9],[42,10,30,10],[42,12,30,12,"_$$_REQUIRE"],[42,23,30,12],[42,24,30,12,"_dependencyMap"],[42,38,30,12],[42,56,30,21,"assert"],[42,62,30,27],[42,64,30,29],[42,71,30,36,"b"],[42,72,30,37],[42,77,30,42],[42,85,30,50],[42,89,30,54],[42,96,30,61,"b"],[42,97,30,62],[42,102,30,67],[42,110,30,75],[42,114,30,79],[42,121,30,86,"b"],[42,122,30,87],[42,127,30,92],[42,135,30,100],[42,136,30,101],[43,8,31,8],[43,15,31,15,"a"],[43,16,31,16],[43,20,31,20,"b"],[43,21,31,21],[43,22,31,22],[43,23,31,23],[44,6,32,4],[45,4,32,5],[46,6,32,5,"key"],[46,9,32,5],[47,6,32,5,"value"],[47,11,32,5],[47,13,33,4],[47,22,33,11,"isInt"],[47,27,33,16,"isInt"],[47,28,33,17,"a"],[47,29,33,18],[47,31,33,20],[48,8,34,8],[48,15,34,15],[48,22,34,22,"a"],[48,23,34,23],[48,28,34,28],[48,36,34,36],[49,6,35,4],[50,4,35,5],[51,6,35,5,"key"],[51,9,35,5],[52,6,35,5,"value"],[52,11,35,5],[52,13,36,4],[52,22,36,11,"numToInt"],[52,30,36,19,"numToInt"],[52,31,36,20,"a"],[52,32,36,21],[52,34,36,23],[53,8,37,8],[53,15,37,15,"BigInt"],[53,21,37,21],[53,22,37,22,"a"],[53,23,37,23],[53,24,37,24],[54,6,38,4],[55,4,38,5],[56,6,38,5,"key"],[56,9,38,5],[57,6,38,5,"value"],[57,11,38,5],[57,13,39,4],[57,22,39,11,"strToInt"],[57,30,39,19,"strToInt"],[57,31,39,20,"a"],[57,32,39,21],[57,34,39,23],[58,8,40,8],[58,15,40,15,"BigInt"],[58,21,40,21],[58,22,40,22,"a"],[58,23,40,23],[58,24,40,24],[59,6,41,4],[60,4,41,5],[61,6,41,5,"key"],[61,9,41,5],[62,6,41,5,"value"],[62,11,41,5],[62,13,42,4],[62,22,42,11,"intToNum"],[62,30,42,19,"intToNum"],[62,31,42,20,"a"],[62,32,42,21],[62,34,42,23],[63,8,43,8],[63,15,43,15,"Number"],[63,21,43,21],[63,22,43,22,"a"],[63,23,43,23],[63,24,43,24],[64,6,44,4],[65,4,44,5],[66,2,44,5],[67,2,46,0,"exports"],[67,9,46,7],[67,10,46,8,"NativeBigInt"],[67,22,46,20],[67,25,46,23,"NativeBigInt"],[67,37,46,35],[68,0,46,36],[68,3]],"functionMap":{"names":["<global>","NativeBigInt","add","equals","isInt","numToInt","strToInt","intToNum"],"mappings":"AAA;ACqB;ICC;KDI;IEC;KFI;IGC;KHE;IIC;KJE;IKC;KLE;IMC;KNE;CDC"}},"type":"js/module"}]}