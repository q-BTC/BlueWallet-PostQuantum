{"dependencies":[{"name":"../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":179},"end":{"line":5,"column":29,"index":195}},{"start":{"line":4,"column":14,"index":147},"end":{"line":4,"column":31,"index":164}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":3,"column":17,"index":111},"end":{"line":3,"column":37,"index":131}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":2,"column":24,"index":65},"end":{"line":2,"column":51,"index":92}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":6,"column":20,"index":217},"end":{"line":6,"column":43,"index":240}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":6,"column":20,"index":217},"end":{"line":6,"column":43,"index":240}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":4,"column":14,"index":147},"end":{"line":4,"column":31,"index":164}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}},{"start":{"line":7,"column":11,"index":253},"end":{"line":7,"column":25,"index":267}}],"key":"CeLPNCNjt8y0xnwsIyTQzXoUUj0="}},{"name":"./generic-an-plus-b","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":283},"end":{"line":8,"column":44,"index":313}}],"key":"K5hdYEPur0ApTgd250CgagK+ze4="}},{"name":"./generic-urange","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":13,"index":328},"end":{"line":9,"column":40,"index":355}}],"key":"Fq7odR/f9C0xMKbpnUiNyUapARw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var cssWideKeywords = ['unset', 'initial', 'inherit'];\n  var calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\n\n  // https://www.w3.org/TR/css-values-3/#lengths\n  var LENGTH = {\n    // absolute length units\n    'px': true,\n    'mm': true,\n    'cm': true,\n    'in': true,\n    'pt': true,\n    'pc': true,\n    'q': true,\n    // relative length units\n    'em': true,\n    'ex': true,\n    'ch': true,\n    'rem': true,\n    // viewport-percentage lengths\n    'vh': true,\n    'vw': true,\n    'vmin': true,\n    'vmax': true,\n    'vm': true\n  };\n  var ANGLE = {\n    'deg': true,\n    'grad': true,\n    'rad': true,\n    'turn': true\n  };\n  var TIME = {\n    's': true,\n    'ms': true\n  };\n  var FREQUENCY = {\n    'hz': true,\n    'khz': true\n  };\n\n  // https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\n  var RESOLUTION = {\n    'dpi': true,\n    'dpcm': true,\n    'dppx': true,\n    'x': true // https://github.com/w3c/csswg-drafts/issues/461\n  };\n\n  // https://drafts.csswg.org/css-grid/#fr-unit\n  var FLEX = {\n    'fr': true\n  };\n\n  // https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\n  var DECIBEL = {\n    'db': true\n  };\n\n  // https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\n  var SEMITONES = {\n    'st': true\n  };\n\n  // safe char code getter\n  function charCode(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n  }\n  function eqStr(actual, expected) {\n    return _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpStr(actual, 0, actual.length, expected);\n  }\n  function eqStrAny(actual, expected) {\n    for (var i = 0; i < expected.length; i++) {\n      if (eqStr(actual, expected[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // IE postfix hack, i.e. 123\\0 or 123px\\9\n  function isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n      return false;\n    }\n    return str.charCodeAt(offset) === 0x005C &&\n    // U+005C REVERSE SOLIDUS (\\)\n    _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isDigit(str.charCodeAt(offset + 1));\n  }\n  function outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n      var num = Number(numEnd !== undefined && numEnd !== value.length ? value.substr(0, numEnd) : value);\n      if (isNaN(num)) {\n        return true;\n      }\n      if (opts.min !== null && num < opts.min) {\n        return true;\n      }\n      if (opts.max !== null && num > opts.max) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function consumeFunction(token, getNextToken) {\n    var startIdx = token.index;\n    var length = 0;\n\n    // balanced token consuming\n    do {\n      length++;\n      if (token.balance <= startIdx) {\n        break;\n      }\n    } while (token = getNextToken(length));\n    return length;\n  }\n\n  // TODO: implement\n  // can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n  // https://drafts.csswg.org/css-values/#calc-notation\n  function calc(next) {\n    return function (token, getNextToken, opts) {\n      if (token === null) {\n        return 0;\n      }\n      if (token.type === _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\n        return consumeFunction(token, getNextToken);\n      }\n      return next(token, getNextToken, opts);\n    };\n  }\n  function tokenType(expectedTokenType) {\n    return function (token) {\n      if (token === null || token.type !== expectedTokenType) {\n        return 0;\n      }\n      return 1;\n    };\n  }\n  function func(name) {\n    name = name + '(';\n    return function (token, getNextToken) {\n      if (token !== null && eqStr(token.value, name)) {\n        return consumeFunction(token, getNextToken);\n      }\n      return 0;\n    };\n  }\n\n  // =========================\n  // Complex types\n  //\n\n  // https://drafts.csswg.org/css-values-4/#custom-idents\n  // 4.2. Author-defined Identifiers: the <custom-ident> type\n  // Some properties accept arbitrary author-defined identifiers as a component value.\n  // This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n  // that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n  //\n  // See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\n  function customIdent(token) {\n    if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident) {\n      return 0;\n    }\n    var name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n      return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n      return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n  }\n\n  // https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n  // A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n  // The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n  // that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n  // NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\n  function customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident) {\n      return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n      return 0;\n    }\n    return 1;\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  // The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n  // In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n  // letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\n  function hexColor(token) {\n    if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Hash) {\n      return 0;\n    }\n    var length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n      return 0;\n    }\n    for (var i = 1; i < length; i++) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isHexDigit(token.value.charCodeAt(i))) {\n        return 0;\n      }\n    }\n    return 1;\n  }\n  function idSelector(token) {\n    if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Hash) {\n      return 0;\n    }\n    if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n      return 0;\n    }\n    return 1;\n  }\n\n  // https://drafts.csswg.org/css-syntax/#any-value\n  // It represents the entirety of what a valid declaration can have as its value.\n  function declarationValue(token, getNextToken) {\n    if (!token) {\n      return 0;\n    }\n    var length = 0;\n    var level = 0;\n    var startIdx = token.index;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan: do {\n      switch (token.type) {\n        // ... does not contain <bad-string-token>, <bad-url-token>,\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.BadString:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.BadUrl:\n          break scan;\n\n        // ... unmatched <)-token>, <]-token>, or <}-token>,\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightCurlyBracket:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightParenthesis:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightSquareBracket:\n          if (token.balance > token.index || token.balance < startIdx) {\n            break scan;\n          }\n          level--;\n          break;\n\n        // ... or top-level <semicolon-token> tokens\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Semicolon:\n          if (level === 0) {\n            break scan;\n          }\n          break;\n\n        // ... or <delim-token> tokens with a value of \"!\"\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Delim:\n          if (token.value === '!' && level === 0) {\n            break scan;\n          }\n          break;\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Function:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.LeftParenthesis:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.LeftSquareBracket:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.LeftCurlyBracket:\n          level++;\n          break;\n      }\n      length++;\n\n      // until balance closing\n      if (token.balance <= startIdx) {\n        break;\n      }\n    } while (token = getNextToken(length));\n    return length;\n  }\n\n  // https://drafts.csswg.org/css-syntax/#any-value\n  // The <any-value> production is identical to <declaration-value>, but also\n  // allows top-level <semicolon-token> tokens and <delim-token> tokens\n  // with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\n  function anyValue(token, getNextToken) {\n    if (!token) {\n      return 0;\n    }\n    var startIdx = token.index;\n    var length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan: do {\n      switch (token.type) {\n        // ... does not contain <bad-string-token>, <bad-url-token>,\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.BadString:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.BadUrl:\n          break scan;\n\n        // ... unmatched <)-token>, <]-token>, or <}-token>,\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightCurlyBracket:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightParenthesis:\n        case _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightSquareBracket:\n          if (token.balance > token.index || token.balance < startIdx) {\n            break scan;\n          }\n          break;\n      }\n      length++;\n\n      // until balance closing\n      if (token.balance <= startIdx) {\n        break;\n      }\n    } while (token = getNextToken(length));\n    return length;\n  }\n\n  // =========================\n  // Dimensions\n  //\n\n  function dimension(type) {\n    return function (token, getNextToken, opts) {\n      if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Dimension) {\n        return 0;\n      }\n      var numberEnd = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").consumeNumber(token.value, 0);\n\n      // check unit\n      if (type !== null) {\n        // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n        var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n        var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset) ? token.value.substr(numberEnd) : token.value.substring(numberEnd, reverseSolidusOffset);\n        if (type.hasOwnProperty(unit.toLowerCase()) === false) {\n          return 0;\n        }\n      }\n\n      // check range if specified\n      if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n      }\n      return 1;\n    };\n  }\n\n  // =========================\n  // Percentage\n  //\n\n  // §5.5. Percentages: the <percentage> type\n  // https://drafts.csswg.org/css-values-4/#percentages\n  function percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Percentage) {\n      return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n      return 0;\n    }\n    return 1;\n  }\n\n  // =========================\n  // Numeric\n  //\n\n  // https://drafts.csswg.org/css-values-4/#numbers\n  // The value <zero> represents a literal number with the value 0. Expressions that merely\n  // evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n  // only literal <number-token>s do.\n  function zero(next) {\n    if (typeof next !== 'function') {\n      next = function next() {\n        return 0;\n      };\n    }\n    return function (token, getNextToken, opts) {\n      if (token !== null && token.type === _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Number) {\n        if (Number(token.value) === 0) {\n          return 1;\n        }\n      }\n      return next(token, getNextToken, opts);\n    };\n  }\n\n  // § 5.3. Real Numbers: the <number> type\n  // https://drafts.csswg.org/css-values-4/#numbers\n  // Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n  // ... It corresponds to the <number-token> production\n  function number(token, getNextToken, opts) {\n    if (token === null) {\n      return 0;\n    }\n    var numberEnd = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").consumeNumber(token.value, 0);\n    var isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n      return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n      return 0;\n    }\n    return 1;\n  }\n\n  // §5.2. Integers: the <integer> type\n  // https://drafts.csswg.org/css-values-4/#integers\n  function integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Number) {\n      return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    var i = token.value.charCodeAt(0) === 0x002B ||\n    // U+002B PLUS SIGN (+)\n    token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isDigit(token.value.charCodeAt(i))) {\n        return 0;\n      }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n      return 0;\n    }\n    return 1;\n  }\n  module.exports = {\n    // token types\n    'ident-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident),\n    'function-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Function),\n    'at-keyword-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.AtKeyword),\n    'hash-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Hash),\n    'string-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.String),\n    'bad-string-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.BadString),\n    'url-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Url),\n    'bad-url-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.BadUrl),\n    'delim-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Delim),\n    'number-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Number),\n    'percentage-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Percentage),\n    'dimension-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Dimension),\n    'whitespace-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.WhiteSpace),\n    'CDO-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.CDO),\n    'CDC-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.CDC),\n    'colon-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Colon),\n    'semicolon-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Semicolon),\n    'comma-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Comma),\n    '[-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.LeftSquareBracket),\n    ']-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightSquareBracket),\n    '(-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.LeftParenthesis),\n    ')-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightParenthesis),\n    '{-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.LeftCurlyBracket),\n    '}-token': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.RightCurlyBracket),\n    // token type aliases\n    'string': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.String),\n    'ident': tokenType(_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident),\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector,\n    // element( <id-selector> )\n    'an-plus-b': _$$_REQUIRE(_dependencyMap[1], \"./generic-an-plus-b\"),\n    'urange': _$$_REQUIRE(_dependencyMap[2], \"./generic-urange\"),\n    'declaration-value': declarationValue,\n    'any-value': anyValue,\n    // dimensions\n    'dimension': calc(dimension(null)),\n    'angle': calc(dimension(ANGLE)),\n    'decibel': calc(dimension(DECIBEL)),\n    'frequency': calc(dimension(FREQUENCY)),\n    'flex': calc(dimension(FLEX)),\n    'length': calc(zero(dimension(LENGTH))),\n    'resolution': calc(dimension(RESOLUTION)),\n    'semitones': calc(dimension(SEMITONES)),\n    'time': calc(dimension(TIME)),\n    // percentage\n    'percentage': calc(percentage),\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n    // old IE stuff\n    '-ms-legacy-expression': func('expression')\n  };\n});","lineCount":511,"map":[[2,2,11,0],[2,6,11,4,"cssWideKeywords"],[2,21,11,19],[2,24,11,22],[2,25,11,23],[2,32,11,30],[2,34,11,32],[2,43,11,41],[2,45,11,43],[2,54,11,52],[2,55,11,53],[3,2,12,0],[3,6,12,4,"calcFunctionNames"],[3,23,12,21],[3,26,12,24],[3,27,12,25],[3,34,12,32],[3,36,12,34],[3,48,12,46],[3,50,12,48],[3,65,12,63],[3,66,12,64],[5,2,14,0],[6,2,15,0],[6,6,15,4,"LENGTH"],[6,12,15,10],[6,15,15,13],[7,4,16,4],[8,4,17,4],[8,8,17,8],[8,10,17,10],[8,14,17,14],[9,4,18,4],[9,8,18,8],[9,10,18,10],[9,14,18,14],[10,4,19,4],[10,8,19,8],[10,10,19,10],[10,14,19,14],[11,4,20,4],[11,8,20,8],[11,10,20,10],[11,14,20,14],[12,4,21,4],[12,8,21,8],[12,10,21,10],[12,14,21,14],[13,4,22,4],[13,8,22,8],[13,10,22,10],[13,14,22,14],[14,4,23,4],[14,7,23,7],[14,9,23,9],[14,13,23,13],[15,4,25,4],[16,4,26,4],[16,8,26,8],[16,10,26,10],[16,14,26,14],[17,4,27,4],[17,8,27,8],[17,10,27,10],[17,14,27,14],[18,4,28,4],[18,8,28,8],[18,10,28,10],[18,14,28,14],[19,4,29,4],[19,9,29,9],[19,11,29,11],[19,15,29,15],[20,4,31,4],[21,4,32,4],[21,8,32,8],[21,10,32,10],[21,14,32,14],[22,4,33,4],[22,8,33,8],[22,10,33,10],[22,14,33,14],[23,4,34,4],[23,10,34,10],[23,12,34,12],[23,16,34,16],[24,4,35,4],[24,10,35,10],[24,12,35,12],[24,16,35,16],[25,4,36,4],[25,8,36,8],[25,10,36,10],[26,2,37,0],[26,3,37,1],[27,2,39,0],[27,6,39,4,"ANGLE"],[27,11,39,9],[27,14,39,12],[28,4,40,4],[28,9,40,9],[28,11,40,11],[28,15,40,15],[29,4,41,4],[29,10,41,10],[29,12,41,12],[29,16,41,16],[30,4,42,4],[30,9,42,9],[30,11,42,11],[30,15,42,15],[31,4,43,4],[31,10,43,10],[31,12,43,12],[32,2,44,0],[32,3,44,1],[33,2,46,0],[33,6,46,4,"TIME"],[33,10,46,8],[33,13,46,11],[34,4,47,4],[34,7,47,7],[34,9,47,9],[34,13,47,13],[35,4,48,4],[35,8,48,8],[35,10,48,10],[36,2,49,0],[36,3,49,1],[37,2,51,0],[37,6,51,4,"FREQUENCY"],[37,15,51,13],[37,18,51,16],[38,4,52,4],[38,8,52,8],[38,10,52,10],[38,14,52,14],[39,4,53,4],[39,9,53,9],[39,11,53,11],[40,2,54,0],[40,3,54,1],[42,2,56,0],[43,2,57,0],[43,6,57,4,"RESOLUTION"],[43,16,57,14],[43,19,57,17],[44,4,58,4],[44,9,58,9],[44,11,58,11],[44,15,58,15],[45,4,59,4],[45,10,59,10],[45,12,59,12],[45,16,59,16],[46,4,60,4],[46,10,60,10],[46,12,60,12],[46,16,60,16],[47,4,61,4],[47,7,61,7],[47,9,61,9],[47,13,61,13],[47,14,61,19],[48,2,62,0],[48,3,62,1],[50,2,64,0],[51,2,65,0],[51,6,65,4,"FLEX"],[51,10,65,8],[51,13,65,11],[52,4,66,4],[52,8,66,8],[52,10,66,10],[53,2,67,0],[53,3,67,1],[55,2,69,0],[56,2,70,0],[56,6,70,4,"DECIBEL"],[56,13,70,11],[56,16,70,14],[57,4,71,4],[57,8,71,8],[57,10,71,10],[58,2,72,0],[58,3,72,1],[60,2,74,0],[61,2,75,0],[61,6,75,4,"SEMITONES"],[61,15,75,13],[61,18,75,16],[62,4,76,4],[62,8,76,8],[62,10,76,10],[63,2,77,0],[63,3,77,1],[65,2,79,0],[66,2,80,0],[66,11,80,9,"charCode"],[66,19,80,17,"charCode"],[66,20,80,18,"str"],[66,23,80,21],[66,25,80,23,"index"],[66,30,80,28],[66,32,80,30],[67,4,81,4],[67,11,81,11,"index"],[67,16,81,16],[67,19,81,19,"str"],[67,22,81,22],[67,23,81,23,"length"],[67,29,81,29],[67,32,81,32,"str"],[67,35,81,35],[67,36,81,36,"charCodeAt"],[67,46,81,46],[67,47,81,47,"index"],[67,52,81,52],[67,53,81,53],[67,56,81,56],[67,57,81,57],[68,2,82,0],[69,2,84,0],[69,11,84,9,"eqStr"],[69,16,84,14,"eqStr"],[69,17,84,15,"actual"],[69,23,84,21],[69,25,84,23,"expected"],[69,33,84,31],[69,35,84,33],[70,4,85,4],[70,11,85,11,"_$$_REQUIRE"],[70,22,85,11],[70,23,85,11,"_dependencyMap"],[70,37,85,11],[70,58,85,11,"cmpStr"],[70,64,85,11],[70,65,85,18,"actual"],[70,71,85,24],[70,73,85,26],[70,74,85,27],[70,76,85,29,"actual"],[70,82,85,35],[70,83,85,36,"length"],[70,89,85,42],[70,91,85,44,"expected"],[70,99,85,52],[70,100,85,53],[71,2,86,0],[72,2,88,0],[72,11,88,9,"eqStrAny"],[72,19,88,17,"eqStrAny"],[72,20,88,18,"actual"],[72,26,88,24],[72,28,88,26,"expected"],[72,36,88,34],[72,38,88,36],[73,4,89,4],[73,9,89,9],[73,13,89,13,"i"],[73,14,89,14],[73,17,89,17],[73,18,89,18],[73,20,89,20,"i"],[73,21,89,21],[73,24,89,24,"expected"],[73,32,89,32],[73,33,89,33,"length"],[73,39,89,39],[73,41,89,41,"i"],[73,42,89,42],[73,44,89,44],[73,46,89,46],[74,6,90,8],[74,10,90,12,"eqStr"],[74,15,90,17],[74,16,90,18,"actual"],[74,22,90,24],[74,24,90,26,"expected"],[74,32,90,34],[74,33,90,35,"i"],[74,34,90,36],[74,35,90,37],[74,36,90,38],[74,38,90,40],[75,8,91,12],[75,15,91,19],[75,19,91,23],[76,6,92,8],[77,4,93,4],[78,4,95,4],[78,11,95,11],[78,16,95,16],[79,2,96,0],[81,2,98,0],[82,2,99,0],[82,11,99,9,"isPostfixIeHack"],[82,26,99,24,"isPostfixIeHack"],[82,27,99,25,"str"],[82,30,99,28],[82,32,99,30,"offset"],[82,38,99,36],[82,40,99,38],[83,4,100,4],[83,8,100,8,"offset"],[83,14,100,14],[83,19,100,19,"str"],[83,22,100,22],[83,23,100,23,"length"],[83,29,100,29],[83,32,100,32],[83,33,100,33],[83,35,100,35],[84,6,101,8],[84,13,101,15],[84,18,101,20],[85,4,102,4],[86,4,104,4],[86,11,105,8,"str"],[86,14,105,11],[86,15,105,12,"charCodeAt"],[86,25,105,22],[86,26,105,23,"offset"],[86,32,105,29],[86,33,105,30],[86,38,105,35],[86,44,105,41],[87,4,105,46],[88,4,106,8,"_$$_REQUIRE"],[88,15,106,8],[88,16,106,8,"_dependencyMap"],[88,30,106,8],[88,51,106,8,"isDigit"],[88,58,106,8],[88,59,106,16,"str"],[88,62,106,19],[88,63,106,20,"charCodeAt"],[88,73,106,30],[88,74,106,31,"offset"],[88,80,106,37],[88,83,106,40],[88,84,106,41],[88,85,106,42],[88,86,106,43],[89,2,108,0],[90,2,110,0],[90,11,110,9,"outOfRange"],[90,21,110,19,"outOfRange"],[90,22,110,20,"opts"],[90,26,110,24],[90,28,110,26,"value"],[90,33,110,31],[90,35,110,33,"numEnd"],[90,41,110,39],[90,43,110,41],[91,4,111,4],[91,8,111,8,"opts"],[91,12,111,12],[91,16,111,16,"opts"],[91,20,111,20],[91,21,111,21,"type"],[91,25,111,25],[91,30,111,30],[91,37,111,37],[91,39,111,39],[92,6,112,8],[92,10,112,12,"num"],[92,13,112,15],[92,16,112,18,"Number"],[92,22,112,24],[92,23,113,12,"numEnd"],[92,29,113,18],[92,34,113,23,"undefined"],[92,43,113,32],[92,47,113,36,"numEnd"],[92,53,113,42],[92,58,113,47,"value"],[92,63,113,52],[92,64,113,53,"length"],[92,70,113,59],[92,73,114,18,"value"],[92,78,114,23],[92,79,114,24,"substr"],[92,85,114,30],[92,86,114,31],[92,87,114,32],[92,89,114,34,"numEnd"],[92,95,114,40],[92,96,114,41],[92,99,115,18,"value"],[92,104,116,8],[92,105,116,9],[93,6,118,8],[93,10,118,12,"isNaN"],[93,15,118,17],[93,16,118,18,"num"],[93,19,118,21],[93,20,118,22],[93,22,118,24],[94,8,119,12],[94,15,119,19],[94,19,119,23],[95,6,120,8],[96,6,122,8],[96,10,122,12,"opts"],[96,14,122,16],[96,15,122,17,"min"],[96,18,122,20],[96,23,122,25],[96,27,122,29],[96,31,122,33,"num"],[96,34,122,36],[96,37,122,39,"opts"],[96,41,122,43],[96,42,122,44,"min"],[96,45,122,47],[96,47,122,49],[97,8,123,12],[97,15,123,19],[97,19,123,23],[98,6,124,8],[99,6,126,8],[99,10,126,12,"opts"],[99,14,126,16],[99,15,126,17,"max"],[99,18,126,20],[99,23,126,25],[99,27,126,29],[99,31,126,33,"num"],[99,34,126,36],[99,37,126,39,"opts"],[99,41,126,43],[99,42,126,44,"max"],[99,45,126,47],[99,47,126,49],[100,8,127,12],[100,15,127,19],[100,19,127,23],[101,6,128,8],[102,4,129,4],[103,4,131,4],[103,11,131,11],[103,16,131,16],[104,2,132,0],[105,2,134,0],[105,11,134,9,"consumeFunction"],[105,26,134,24,"consumeFunction"],[105,27,134,25,"token"],[105,32,134,30],[105,34,134,32,"getNextToken"],[105,46,134,44],[105,48,134,46],[106,4,135,4],[106,8,135,8,"startIdx"],[106,16,135,16],[106,19,135,19,"token"],[106,24,135,24],[106,25,135,25,"index"],[106,30,135,30],[107,4,136,4],[107,8,136,8,"length"],[107,14,136,14],[107,17,136,17],[107,18,136,18],[109,4,138,4],[110,4,139,4],[110,7,139,7],[111,6,140,8,"length"],[111,12,140,14],[111,14,140,16],[112,6,142,8],[112,10,142,12,"token"],[112,15,142,17],[112,16,142,18,"balance"],[112,23,142,25],[112,27,142,29,"startIdx"],[112,35,142,37],[112,37,142,39],[113,8,143,12],[114,6,144,8],[115,4,145,4],[115,5,145,5],[115,13,145,13,"token"],[115,18,145,18],[115,21,145,21,"getNextToken"],[115,33,145,33],[115,34,145,34,"length"],[115,40,145,40],[115,41,145,41],[116,4,147,4],[116,11,147,11,"length"],[116,17,147,17],[117,2,148,0],[119,2,150,0],[120,2,151,0],[121,2,152,0],[122,2,153,0],[122,11,153,9,"calc"],[122,15,153,13,"calc"],[122,16,153,14,"next"],[122,20,153,18],[122,22,153,20],[123,4,154,4],[123,11,154,11],[123,21,154,20,"token"],[123,26,154,25],[123,28,154,27,"getNextToken"],[123,40,154,39],[123,42,154,41,"opts"],[123,46,154,45],[123,48,154,47],[124,6,155,8],[124,10,155,12,"token"],[124,15,155,17],[124,20,155,22],[124,24,155,26],[124,26,155,28],[125,8,156,12],[125,15,156,19],[125,16,156,20],[126,6,157,8],[127,6,159,8],[127,10,159,12,"token"],[127,15,159,17],[127,16,159,18,"type"],[127,20,159,22],[127,25,159,27,"_$$_REQUIRE"],[127,36,159,27],[127,37,159,27,"_dependencyMap"],[127,51,159,27],[127,72,159,27,"TYPE"],[127,76,159,27],[127,77,159,32,"Function"],[127,85,159,40],[127,89,159,44,"eqStrAny"],[127,97,159,52],[127,98,159,53,"token"],[127,103,159,58],[127,104,159,59,"value"],[127,109,159,64],[127,111,159,66,"calcFunctionNames"],[127,128,159,83],[127,129,159,84],[127,131,159,86],[128,8,160,12],[128,15,160,19,"consumeFunction"],[128,30,160,34],[128,31,160,35,"token"],[128,36,160,40],[128,38,160,42,"getNextToken"],[128,50,160,54],[128,51,160,55],[129,6,161,8],[130,6,163,8],[130,13,163,15,"next"],[130,17,163,19],[130,18,163,20,"token"],[130,23,163,25],[130,25,163,27,"getNextToken"],[130,37,163,39],[130,39,163,41,"opts"],[130,43,163,45],[130,44,163,46],[131,4,164,4],[131,5,164,5],[132,2,165,0],[133,2,167,0],[133,11,167,9,"tokenType"],[133,20,167,18,"tokenType"],[133,21,167,19,"expectedTokenType"],[133,38,167,36],[133,40,167,38],[134,4,168,4],[134,11,168,11],[134,21,168,20,"token"],[134,26,168,25],[134,28,168,27],[135,6,169,8],[135,10,169,12,"token"],[135,15,169,17],[135,20,169,22],[135,24,169,26],[135,28,169,30,"token"],[135,33,169,35],[135,34,169,36,"type"],[135,38,169,40],[135,43,169,45,"expectedTokenType"],[135,60,169,62],[135,62,169,64],[136,8,170,12],[136,15,170,19],[136,16,170,20],[137,6,171,8],[138,6,173,8],[138,13,173,15],[138,14,173,16],[139,4,174,4],[139,5,174,5],[140,2,175,0],[141,2,177,0],[141,11,177,9,"func"],[141,15,177,13,"func"],[141,16,177,14,"name"],[141,20,177,18],[141,22,177,20],[142,4,178,4,"name"],[142,8,178,8],[142,11,178,11,"name"],[142,15,178,15],[142,18,178,18],[142,21,178,21],[143,4,180,4],[143,11,180,11],[143,21,180,20,"token"],[143,26,180,25],[143,28,180,27,"getNextToken"],[143,40,180,39],[143,42,180,41],[144,6,181,8],[144,10,181,12,"token"],[144,15,181,17],[144,20,181,22],[144,24,181,26],[144,28,181,30,"eqStr"],[144,33,181,35],[144,34,181,36,"token"],[144,39,181,41],[144,40,181,42,"value"],[144,45,181,47],[144,47,181,49,"name"],[144,51,181,53],[144,52,181,54],[144,54,181,56],[145,8,182,12],[145,15,182,19,"consumeFunction"],[145,30,182,34],[145,31,182,35,"token"],[145,36,182,40],[145,38,182,42,"getNextToken"],[145,50,182,54],[145,51,182,55],[146,6,183,8],[147,6,185,8],[147,13,185,15],[147,14,185,16],[148,4,186,4],[148,5,186,5],[149,2,187,0],[151,2,189,0],[152,2,190,0],[153,2,191,0],[155,2,193,0],[156,2,194,0],[157,2,195,0],[158,2,196,0],[159,2,197,0],[160,2,198,0],[161,2,199,0],[162,2,200,0],[162,11,200,9,"customIdent"],[162,22,200,20,"customIdent"],[162,23,200,21,"token"],[162,28,200,26],[162,30,200,28],[163,4,201,4],[163,8,201,8,"token"],[163,13,201,13],[163,18,201,18],[163,22,201,22],[163,26,201,26,"token"],[163,31,201,31],[163,32,201,32,"type"],[163,36,201,36],[163,41,201,41,"_$$_REQUIRE"],[163,52,201,41],[163,53,201,41,"_dependencyMap"],[163,67,201,41],[163,88,201,41,"TYPE"],[163,92,201,41],[163,93,201,46,"Ident"],[163,98,201,51],[163,100,201,53],[164,6,202,8],[164,13,202,15],[164,14,202,16],[165,4,203,4],[166,4,205,4],[166,8,205,8,"name"],[166,12,205,12],[166,15,205,15,"token"],[166,20,205,20],[166,21,205,21,"value"],[166,26,205,26],[166,27,205,27,"toLowerCase"],[166,38,205,38],[166,39,205,39],[166,40,205,40],[168,4,207,4],[169,4,208,4],[169,8,208,8,"eqStrAny"],[169,16,208,16],[169,17,208,17,"name"],[169,21,208,21],[169,23,208,23,"cssWideKeywords"],[169,38,208,38],[169,39,208,39],[169,41,208,41],[170,6,209,8],[170,13,209,15],[170,14,209,16],[171,4,210,4],[173,4,212,4],[174,4,213,4],[174,8,213,8,"eqStr"],[174,13,213,13],[174,14,213,14,"name"],[174,18,213,18],[174,20,213,20],[174,29,213,29],[174,30,213,30],[174,32,213,32],[175,6,214,8],[175,13,214,15],[175,14,214,16],[176,4,215,4],[178,4,217,4],[179,4,218,4],[180,4,219,4],[181,4,220,4],[182,4,221,4],[184,4,223,4],[184,11,223,11],[184,12,223,12],[185,2,224,0],[187,2,226,0],[188,2,227,0],[189,2,228,0],[190,2,229,0],[191,2,230,0],[192,2,231,0],[192,11,231,9,"customPropertyName"],[192,29,231,27,"customPropertyName"],[192,30,231,28,"token"],[192,35,231,33],[192,37,231,35],[193,4,232,4],[194,4,233,4],[194,8,233,8,"token"],[194,13,233,13],[194,18,233,18],[194,22,233,22],[194,26,233,26,"token"],[194,31,233,31],[194,32,233,32,"type"],[194,36,233,36],[194,41,233,41,"_$$_REQUIRE"],[194,52,233,41],[194,53,233,41,"_dependencyMap"],[194,67,233,41],[194,88,233,41,"TYPE"],[194,92,233,41],[194,93,233,46,"Ident"],[194,98,233,51],[194,100,233,53],[195,6,234,8],[195,13,234,15],[195,14,234,16],[196,4,235,4],[198,4,237,4],[199,4,238,4],[199,8,238,8,"charCode"],[199,16,238,16],[199,17,238,17,"token"],[199,22,238,22],[199,23,238,23,"value"],[199,28,238,28],[199,30,238,30],[199,31,238,31],[199,32,238,32],[199,37,238,37],[199,43,238,43],[199,47,238,47,"charCode"],[199,55,238,55],[199,56,238,56,"token"],[199,61,238,61],[199,62,238,62,"value"],[199,67,238,67],[199,69,238,69],[199,70,238,70],[199,71,238,71],[199,76,238,76],[199,82,238,82],[199,84,238,84],[200,6,239,8],[200,13,239,15],[200,14,239,16],[201,4,240,4],[202,4,242,4],[202,11,242,11],[202,12,242,12],[203,2,243,0],[205,2,245,0],[206,2,246,0],[207,2,247,0],[208,2,248,0],[209,2,249,0],[209,11,249,9,"hexColor"],[209,19,249,17,"hexColor"],[209,20,249,18,"token"],[209,25,249,23],[209,27,249,25],[210,4,250,4],[210,8,250,8,"token"],[210,13,250,13],[210,18,250,18],[210,22,250,22],[210,26,250,26,"token"],[210,31,250,31],[210,32,250,32,"type"],[210,36,250,36],[210,41,250,41,"_$$_REQUIRE"],[210,52,250,41],[210,53,250,41,"_dependencyMap"],[210,67,250,41],[210,88,250,41,"TYPE"],[210,92,250,41],[210,93,250,46,"Hash"],[210,97,250,50],[210,99,250,52],[211,6,251,8],[211,13,251,15],[211,14,251,16],[212,4,252,4],[213,4,254,4],[213,8,254,8,"length"],[213,14,254,14],[213,17,254,17,"token"],[213,22,254,22],[213,23,254,23,"value"],[213,28,254,28],[213,29,254,29,"length"],[213,35,254,35],[215,4,256,4],[216,4,257,4],[216,8,257,8,"length"],[216,14,257,14],[216,19,257,19],[216,20,257,20],[216,24,257,24,"length"],[216,30,257,30],[216,35,257,35],[216,36,257,36],[216,40,257,40,"length"],[216,46,257,46],[216,51,257,51],[216,52,257,52],[216,56,257,56,"length"],[216,62,257,62],[216,67,257,67],[216,68,257,68],[216,70,257,70],[217,6,258,8],[217,13,258,15],[217,14,258,16],[218,4,259,4],[219,4,261,4],[219,9,261,9],[219,13,261,13,"i"],[219,14,261,14],[219,17,261,17],[219,18,261,18],[219,20,261,20,"i"],[219,21,261,21],[219,24,261,24,"length"],[219,30,261,30],[219,32,261,32,"i"],[219,33,261,33],[219,35,261,35],[219,37,261,37],[220,6,262,8],[220,10,262,12],[220,11,262,13,"_$$_REQUIRE"],[220,22,262,13],[220,23,262,13,"_dependencyMap"],[220,37,262,13],[220,58,262,13,"isHexDigit"],[220,68,262,13],[220,69,262,24,"token"],[220,74,262,29],[220,75,262,30,"value"],[220,80,262,35],[220,81,262,36,"charCodeAt"],[220,91,262,46],[220,92,262,47,"i"],[220,93,262,48],[220,94,262,49],[220,95,262,50],[220,97,262,52],[221,8,263,12],[221,15,263,19],[221,16,263,20],[222,6,264,8],[223,4,265,4],[224,4,267,4],[224,11,267,11],[224,12,267,12],[225,2,268,0],[226,2,270,0],[226,11,270,9,"idSelector"],[226,21,270,19,"idSelector"],[226,22,270,20,"token"],[226,27,270,25],[226,29,270,27],[227,4,271,4],[227,8,271,8,"token"],[227,13,271,13],[227,18,271,18],[227,22,271,22],[227,26,271,26,"token"],[227,31,271,31],[227,32,271,32,"type"],[227,36,271,36],[227,41,271,41,"_$$_REQUIRE"],[227,52,271,41],[227,53,271,41,"_dependencyMap"],[227,67,271,41],[227,88,271,41,"TYPE"],[227,92,271,41],[227,93,271,46,"Hash"],[227,97,271,50],[227,99,271,52],[228,6,272,8],[228,13,272,15],[228,14,272,16],[229,4,273,4],[230,4,275,4],[230,8,275,8],[230,9,275,9,"_$$_REQUIRE"],[230,20,275,9],[230,21,275,9,"_dependencyMap"],[230,35,275,9],[230,56,275,9,"isIdentifierStart"],[230,73,275,9],[230,74,275,27,"charCode"],[230,82,275,35],[230,83,275,36,"token"],[230,88,275,41],[230,89,275,42,"value"],[230,94,275,47],[230,96,275,49],[230,97,275,50],[230,98,275,51],[230,100,275,53,"charCode"],[230,108,275,61],[230,109,275,62,"token"],[230,114,275,67],[230,115,275,68,"value"],[230,120,275,73],[230,122,275,75],[230,123,275,76],[230,124,275,77],[230,126,275,79,"charCode"],[230,134,275,87],[230,135,275,88,"token"],[230,140,275,93],[230,141,275,94,"value"],[230,146,275,99],[230,148,275,101],[230,149,275,102],[230,150,275,103],[230,151,275,104],[230,153,275,106],[231,6,276,8],[231,13,276,15],[231,14,276,16],[232,4,277,4],[233,4,279,4],[233,11,279,11],[233,12,279,12],[234,2,280,0],[236,2,282,0],[237,2,283,0],[238,2,284,0],[238,11,284,9,"declarationValue"],[238,27,284,25,"declarationValue"],[238,28,284,26,"token"],[238,33,284,31],[238,35,284,33,"getNextToken"],[238,47,284,45],[238,49,284,47],[239,4,285,4],[239,8,285,8],[239,9,285,9,"token"],[239,14,285,14],[239,16,285,16],[240,6,286,8],[240,13,286,15],[240,14,286,16],[241,4,287,4],[242,4,289,4],[242,8,289,8,"length"],[242,14,289,14],[242,17,289,17],[242,18,289,18],[243,4,290,4],[243,8,290,8,"level"],[243,13,290,13],[243,16,290,16],[243,17,290,17],[244,4,291,4],[244,8,291,8,"startIdx"],[244,16,291,16],[244,19,291,19,"token"],[244,24,291,24],[244,25,291,25,"index"],[244,30,291,30],[246,4,293,4],[247,4,294,4],[248,4,295,4,"scan"],[248,8,295,8],[248,10,296,4],[248,13,296,7],[249,6,297,8],[249,14,297,16,"token"],[249,19,297,21],[249,20,297,22,"type"],[249,24,297,26],[250,8,298,12],[251,8,299,12],[251,13,299,17,"_$$_REQUIRE"],[251,24,299,17],[251,25,299,17,"_dependencyMap"],[251,39,299,17],[251,60,299,17,"TYPE"],[251,64,299,17],[251,65,299,22,"BadString"],[251,74,299,31],[252,8,300,12],[252,13,300,17,"_$$_REQUIRE"],[252,24,300,17],[252,25,300,17,"_dependencyMap"],[252,39,300,17],[252,60,300,17,"TYPE"],[252,64,300,17],[252,65,300,22,"BadUrl"],[252,71,300,28],[253,10,301,16],[253,16,301,22,"scan"],[253,20,301,26],[255,8,303,12],[256,8,304,12],[256,13,304,17,"_$$_REQUIRE"],[256,24,304,17],[256,25,304,17,"_dependencyMap"],[256,39,304,17],[256,60,304,17,"TYPE"],[256,64,304,17],[256,65,304,22,"RightCurlyBracket"],[256,82,304,39],[257,8,305,12],[257,13,305,17,"_$$_REQUIRE"],[257,24,305,17],[257,25,305,17,"_dependencyMap"],[257,39,305,17],[257,60,305,17,"TYPE"],[257,64,305,17],[257,65,305,22,"RightParenthesis"],[257,81,305,38],[258,8,306,12],[258,13,306,17,"_$$_REQUIRE"],[258,24,306,17],[258,25,306,17,"_dependencyMap"],[258,39,306,17],[258,60,306,17,"TYPE"],[258,64,306,17],[258,65,306,22,"RightSquareBracket"],[258,83,306,40],[259,10,307,16],[259,14,307,20,"token"],[259,19,307,25],[259,20,307,26,"balance"],[259,27,307,33],[259,30,307,36,"token"],[259,35,307,41],[259,36,307,42,"index"],[259,41,307,47],[259,45,307,51,"token"],[259,50,307,56],[259,51,307,57,"balance"],[259,58,307,64],[259,61,307,67,"startIdx"],[259,69,307,75],[259,71,307,77],[260,12,308,20],[260,18,308,26,"scan"],[260,22,308,30],[261,10,309,16],[262,10,311,16,"level"],[262,15,311,21],[262,17,311,23],[263,10,312,16],[265,8,314,12],[266,8,315,12],[266,13,315,17,"_$$_REQUIRE"],[266,24,315,17],[266,25,315,17,"_dependencyMap"],[266,39,315,17],[266,60,315,17,"TYPE"],[266,64,315,17],[266,65,315,22,"Semicolon"],[266,74,315,31],[267,10,316,16],[267,14,316,20,"level"],[267,19,316,25],[267,24,316,30],[267,25,316,31],[267,27,316,33],[268,12,317,20],[268,18,317,26,"scan"],[268,22,317,30],[269,10,318,16],[270,10,320,16],[272,8,322,12],[273,8,323,12],[273,13,323,17,"_$$_REQUIRE"],[273,24,323,17],[273,25,323,17,"_dependencyMap"],[273,39,323,17],[273,60,323,17,"TYPE"],[273,64,323,17],[273,65,323,22,"Delim"],[273,70,323,27],[274,10,324,16],[274,14,324,20,"token"],[274,19,324,25],[274,20,324,26,"value"],[274,25,324,31],[274,30,324,36],[274,33,324,39],[274,37,324,43,"level"],[274,42,324,48],[274,47,324,53],[274,48,324,54],[274,50,324,56],[275,12,325,20],[275,18,325,26,"scan"],[275,22,325,30],[276,10,326,16],[277,10,328,16],[278,8,330,12],[278,13,330,17,"_$$_REQUIRE"],[278,24,330,17],[278,25,330,17,"_dependencyMap"],[278,39,330,17],[278,60,330,17,"TYPE"],[278,64,330,17],[278,65,330,22,"Function"],[278,73,330,30],[279,8,331,12],[279,13,331,17,"_$$_REQUIRE"],[279,24,331,17],[279,25,331,17,"_dependencyMap"],[279,39,331,17],[279,60,331,17,"TYPE"],[279,64,331,17],[279,65,331,22,"LeftParenthesis"],[279,80,331,37],[280,8,332,12],[280,13,332,17,"_$$_REQUIRE"],[280,24,332,17],[280,25,332,17,"_dependencyMap"],[280,39,332,17],[280,60,332,17,"TYPE"],[280,64,332,17],[280,65,332,22,"LeftSquareBracket"],[280,82,332,39],[281,8,333,12],[281,13,333,17,"_$$_REQUIRE"],[281,24,333,17],[281,25,333,17,"_dependencyMap"],[281,39,333,17],[281,60,333,17,"TYPE"],[281,64,333,17],[281,65,333,22,"LeftCurlyBracket"],[281,81,333,38],[282,10,334,16,"level"],[282,15,334,21],[282,17,334,23],[283,10,335,16],[284,6,336,8],[285,6,338,8,"length"],[285,12,338,14],[285,14,338,16],[287,6,340,8],[288,6,341,8],[288,10,341,12,"token"],[288,15,341,17],[288,16,341,18,"balance"],[288,23,341,25],[288,27,341,29,"startIdx"],[288,35,341,37],[288,37,341,39],[289,8,342,12],[290,6,343,8],[291,4,344,4],[291,5,344,5],[291,13,344,13,"token"],[291,18,344,18],[291,21,344,21,"getNextToken"],[291,33,344,33],[291,34,344,34,"length"],[291,40,344,40],[291,41,344,41],[292,4,346,4],[292,11,346,11,"length"],[292,17,346,17],[293,2,347,0],[295,2,349,0],[296,2,350,0],[297,2,351,0],[298,2,352,0],[299,2,353,0],[299,11,353,9,"anyValue"],[299,19,353,17,"anyValue"],[299,20,353,18,"token"],[299,25,353,23],[299,27,353,25,"getNextToken"],[299,39,353,37],[299,41,353,39],[300,4,354,4],[300,8,354,8],[300,9,354,9,"token"],[300,14,354,14],[300,16,354,16],[301,6,355,8],[301,13,355,15],[301,14,355,16],[302,4,356,4],[303,4,358,4],[303,8,358,8,"startIdx"],[303,16,358,16],[303,19,358,19,"token"],[303,24,358,24],[303,25,358,25,"index"],[303,30,358,30],[304,4,359,4],[304,8,359,8,"length"],[304,14,359,14],[304,17,359,17],[304,18,359,18],[306,4,361,4],[307,4,362,4],[308,4,363,4,"scan"],[308,8,363,8],[308,10,364,4],[308,13,364,7],[309,6,365,8],[309,14,365,16,"token"],[309,19,365,21],[309,20,365,22,"type"],[309,24,365,26],[310,8,366,12],[311,8,367,12],[311,13,367,17,"_$$_REQUIRE"],[311,24,367,17],[311,25,367,17,"_dependencyMap"],[311,39,367,17],[311,60,367,17,"TYPE"],[311,64,367,17],[311,65,367,22,"BadString"],[311,74,367,31],[312,8,368,12],[312,13,368,17,"_$$_REQUIRE"],[312,24,368,17],[312,25,368,17,"_dependencyMap"],[312,39,368,17],[312,60,368,17,"TYPE"],[312,64,368,17],[312,65,368,22,"BadUrl"],[312,71,368,28],[313,10,369,16],[313,16,369,22,"scan"],[313,20,369,26],[315,8,371,12],[316,8,372,12],[316,13,372,17,"_$$_REQUIRE"],[316,24,372,17],[316,25,372,17,"_dependencyMap"],[316,39,372,17],[316,60,372,17,"TYPE"],[316,64,372,17],[316,65,372,22,"RightCurlyBracket"],[316,82,372,39],[317,8,373,12],[317,13,373,17,"_$$_REQUIRE"],[317,24,373,17],[317,25,373,17,"_dependencyMap"],[317,39,373,17],[317,60,373,17,"TYPE"],[317,64,373,17],[317,65,373,22,"RightParenthesis"],[317,81,373,38],[318,8,374,12],[318,13,374,17,"_$$_REQUIRE"],[318,24,374,17],[318,25,374,17,"_dependencyMap"],[318,39,374,17],[318,60,374,17,"TYPE"],[318,64,374,17],[318,65,374,22,"RightSquareBracket"],[318,83,374,40],[319,10,375,16],[319,14,375,20,"token"],[319,19,375,25],[319,20,375,26,"balance"],[319,27,375,33],[319,30,375,36,"token"],[319,35,375,41],[319,36,375,42,"index"],[319,41,375,47],[319,45,375,51,"token"],[319,50,375,56],[319,51,375,57,"balance"],[319,58,375,64],[319,61,375,67,"startIdx"],[319,69,375,75],[319,71,375,77],[320,12,376,20],[320,18,376,26,"scan"],[320,22,376,30],[321,10,377,16],[322,10,379,16],[323,6,380,8],[324,6,382,8,"length"],[324,12,382,14],[324,14,382,16],[326,6,384,8],[327,6,385,8],[327,10,385,12,"token"],[327,15,385,17],[327,16,385,18,"balance"],[327,23,385,25],[327,27,385,29,"startIdx"],[327,35,385,37],[327,37,385,39],[328,8,386,12],[329,6,387,8],[330,4,388,4],[330,5,388,5],[330,13,388,13,"token"],[330,18,388,18],[330,21,388,21,"getNextToken"],[330,33,388,33],[330,34,388,34,"length"],[330,40,388,40],[330,41,388,41],[331,4,390,4],[331,11,390,11,"length"],[331,17,390,17],[332,2,391,0],[334,2,393,0],[335,2,394,0],[336,2,395,0],[338,2,397,0],[338,11,397,9,"dimension"],[338,20,397,18,"dimension"],[338,21,397,19,"type"],[338,25,397,23],[338,27,397,25],[339,4,398,4],[339,11,398,11],[339,21,398,20,"token"],[339,26,398,25],[339,28,398,27,"getNextToken"],[339,40,398,39],[339,42,398,41,"opts"],[339,46,398,45],[339,48,398,47],[340,6,399,8],[340,10,399,12,"token"],[340,15,399,17],[340,20,399,22],[340,24,399,26],[340,28,399,30,"token"],[340,33,399,35],[340,34,399,36,"type"],[340,38,399,40],[340,43,399,45,"_$$_REQUIRE"],[340,54,399,45],[340,55,399,45,"_dependencyMap"],[340,69,399,45],[340,90,399,45,"TYPE"],[340,94,399,45],[340,95,399,50,"Dimension"],[340,104,399,59],[340,106,399,61],[341,8,400,12],[341,15,400,19],[341,16,400,20],[342,6,401,8],[343,6,403,8],[343,10,403,12,"numberEnd"],[343,19,403,21],[343,22,403,24,"_$$_REQUIRE"],[343,33,403,24],[343,34,403,24,"_dependencyMap"],[343,48,403,24],[343,69,403,24,"consumeNumber"],[343,82,403,24],[343,83,403,38,"token"],[343,88,403,43],[343,89,403,44,"value"],[343,94,403,49],[343,96,403,51],[343,97,403,52],[343,98,403,53],[345,6,405,8],[346,6,406,8],[346,10,406,12,"type"],[346,14,406,16],[346,19,406,21],[346,23,406,25],[346,25,406,27],[347,8,407,12],[348,8,408,12],[348,12,408,16,"reverseSolidusOffset"],[348,32,408,36],[348,35,408,39,"token"],[348,40,408,44],[348,41,408,45,"value"],[348,46,408,50],[348,47,408,51,"indexOf"],[348,54,408,58],[348,55,408,59],[348,59,408,63],[348,61,408,65,"numberEnd"],[348,70,408,74],[348,71,408,75],[349,8,409,12],[349,12,409,16,"unit"],[349,16,409,20],[349,19,409,23,"reverseSolidusOffset"],[349,39,409,43],[349,44,409,48],[349,45,409,49],[349,46,409,50],[349,50,409,54],[349,51,409,55,"isPostfixIeHack"],[349,66,409,70],[349,67,409,71,"token"],[349,72,409,76],[349,73,409,77,"value"],[349,78,409,82],[349,80,409,84,"reverseSolidusOffset"],[349,100,409,104],[349,101,409,105],[349,104,410,18,"token"],[349,109,410,23],[349,110,410,24,"value"],[349,115,410,29],[349,116,410,30,"substr"],[349,122,410,36],[349,123,410,37,"numberEnd"],[349,132,410,46],[349,133,410,47],[349,136,411,18,"token"],[349,141,411,23],[349,142,411,24,"value"],[349,147,411,29],[349,148,411,30,"substring"],[349,157,411,39],[349,158,411,40,"numberEnd"],[349,167,411,49],[349,169,411,51,"reverseSolidusOffset"],[349,189,411,71],[349,190,411,72],[350,8,413,12],[350,12,413,16,"type"],[350,16,413,20],[350,17,413,21,"hasOwnProperty"],[350,31,413,35],[350,32,413,36,"unit"],[350,36,413,40],[350,37,413,41,"toLowerCase"],[350,48,413,52],[350,49,413,53],[350,50,413,54],[350,51,413,55],[350,56,413,60],[350,61,413,65],[350,63,413,67],[351,10,414,16],[351,17,414,23],[351,18,414,24],[352,8,415,12],[353,6,416,8],[355,6,418,8],[356,6,419,8],[356,10,419,12,"outOfRange"],[356,20,419,22],[356,21,419,23,"opts"],[356,25,419,27],[356,27,419,29,"token"],[356,32,419,34],[356,33,419,35,"value"],[356,38,419,40],[356,40,419,42,"numberEnd"],[356,49,419,51],[356,50,419,52],[356,52,419,54],[357,8,420,12],[357,15,420,19],[357,16,420,20],[358,6,421,8],[359,6,423,8],[359,13,423,15],[359,14,423,16],[360,4,424,4],[360,5,424,5],[361,2,425,0],[363,2,427,0],[364,2,428,0],[365,2,429,0],[367,2,431,0],[368,2,432,0],[369,2,433,0],[369,11,433,9,"percentage"],[369,21,433,19,"percentage"],[369,22,433,20,"token"],[369,27,433,25],[369,29,433,27,"getNextToken"],[369,41,433,39],[369,43,433,41,"opts"],[369,47,433,45],[369,49,433,47],[370,4,434,4],[371,4,435,4],[371,8,435,8,"token"],[371,13,435,13],[371,18,435,18],[371,22,435,22],[371,26,435,26,"token"],[371,31,435,31],[371,32,435,32,"type"],[371,36,435,36],[371,41,435,41,"_$$_REQUIRE"],[371,52,435,41],[371,53,435,41,"_dependencyMap"],[371,67,435,41],[371,88,435,41,"TYPE"],[371,92,435,41],[371,93,435,46,"Percentage"],[371,103,435,56],[371,105,435,58],[372,6,436,8],[372,13,436,15],[372,14,436,16],[373,4,437,4],[375,4,439,4],[376,4,440,4],[376,8,440,8,"outOfRange"],[376,18,440,18],[376,19,440,19,"opts"],[376,23,440,23],[376,25,440,25,"token"],[376,30,440,30],[376,31,440,31,"value"],[376,36,440,36],[376,38,440,38,"token"],[376,43,440,43],[376,44,440,44,"value"],[376,49,440,49],[376,50,440,50,"length"],[376,56,440,56],[376,59,440,59],[376,60,440,60],[376,61,440,61],[376,63,440,63],[377,6,441,8],[377,13,441,15],[377,14,441,16],[378,4,442,4],[379,4,444,4],[379,11,444,11],[379,12,444,12],[380,2,445,0],[382,2,447,0],[383,2,448,0],[384,2,449,0],[386,2,451,0],[387,2,452,0],[388,2,453,0],[389,2,454,0],[390,2,455,0],[390,11,455,9,"zero"],[390,15,455,13,"zero"],[390,16,455,14,"next"],[390,20,455,18],[390,22,455,20],[391,4,456,4],[391,8,456,8],[391,15,456,15,"next"],[391,19,456,19],[391,24,456,24],[391,34,456,34],[391,36,456,36],[392,6,457,8,"next"],[392,10,457,12],[392,13,457,15],[392,22,457,8,"next"],[392,26,457,12,"next"],[392,27,457,12],[392,29,457,26],[393,8,458,12],[393,15,458,19],[393,16,458,20],[394,6,459,8],[394,7,459,9],[395,4,460,4],[396,4,462,4],[396,11,462,11],[396,21,462,20,"token"],[396,26,462,25],[396,28,462,27,"getNextToken"],[396,40,462,39],[396,42,462,41,"opts"],[396,46,462,45],[396,48,462,47],[397,6,463,8],[397,10,463,12,"token"],[397,15,463,17],[397,20,463,22],[397,24,463,26],[397,28,463,30,"token"],[397,33,463,35],[397,34,463,36,"type"],[397,38,463,40],[397,43,463,45,"_$$_REQUIRE"],[397,54,463,45],[397,55,463,45,"_dependencyMap"],[397,69,463,45],[397,90,463,45,"TYPE"],[397,94,463,45],[397,95,463,50,"Number"],[397,101,463,56],[397,103,463,58],[398,8,464,12],[398,12,464,16,"Number"],[398,18,464,22],[398,19,464,23,"token"],[398,24,464,28],[398,25,464,29,"value"],[398,30,464,34],[398,31,464,35],[398,36,464,40],[398,37,464,41],[398,39,464,43],[399,10,465,16],[399,17,465,23],[399,18,465,24],[400,8,466,12],[401,6,467,8],[402,6,469,8],[402,13,469,15,"next"],[402,17,469,19],[402,18,469,20,"token"],[402,23,469,25],[402,25,469,27,"getNextToken"],[402,37,469,39],[402,39,469,41,"opts"],[402,43,469,45],[402,44,469,46],[403,4,470,4],[403,5,470,5],[404,2,471,0],[406,2,473,0],[407,2,474,0],[408,2,475,0],[409,2,476,0],[410,2,477,0],[410,11,477,9,"number"],[410,17,477,15,"number"],[410,18,477,16,"token"],[410,23,477,21],[410,25,477,23,"getNextToken"],[410,37,477,35],[410,39,477,37,"opts"],[410,43,477,41],[410,45,477,43],[411,4,478,4],[411,8,478,8,"token"],[411,13,478,13],[411,18,478,18],[411,22,478,22],[411,24,478,24],[412,6,479,8],[412,13,479,15],[412,14,479,16],[413,4,480,4],[414,4,482,4],[414,8,482,8,"numberEnd"],[414,17,482,17],[414,20,482,20,"_$$_REQUIRE"],[414,31,482,20],[414,32,482,20,"_dependencyMap"],[414,46,482,20],[414,67,482,20,"consumeNumber"],[414,80,482,20],[414,81,482,34,"token"],[414,86,482,39],[414,87,482,40,"value"],[414,92,482,45],[414,94,482,47],[414,95,482,48],[414,96,482,49],[415,4,483,4],[415,8,483,8,"isNumber"],[415,16,483,16],[415,19,483,19,"numberEnd"],[415,28,483,28],[415,33,483,33,"token"],[415,38,483,38],[415,39,483,39,"value"],[415,44,483,44],[415,45,483,45,"length"],[415,51,483,51],[416,4,484,4],[416,8,484,8],[416,9,484,9,"isNumber"],[416,17,484,17],[416,21,484,21],[416,22,484,22,"isPostfixIeHack"],[416,37,484,37],[416,38,484,38,"token"],[416,43,484,43],[416,44,484,44,"value"],[416,49,484,49],[416,51,484,51,"numberEnd"],[416,60,484,60],[416,61,484,61],[416,63,484,63],[417,6,485,8],[417,13,485,15],[417,14,485,16],[418,4,486,4],[420,4,488,4],[421,4,489,4],[421,8,489,8,"outOfRange"],[421,18,489,18],[421,19,489,19,"opts"],[421,23,489,23],[421,25,489,25,"token"],[421,30,489,30],[421,31,489,31,"value"],[421,36,489,36],[421,38,489,38,"numberEnd"],[421,47,489,47],[421,48,489,48],[421,50,489,50],[422,6,490,8],[422,13,490,15],[422,14,490,16],[423,4,491,4],[424,4,493,4],[424,11,493,11],[424,12,493,12],[425,2,494,0],[427,2,496,0],[428,2,497,0],[429,2,498,0],[429,11,498,9,"integer"],[429,18,498,16,"integer"],[429,19,498,17,"token"],[429,24,498,22],[429,26,498,24,"getNextToken"],[429,38,498,36],[429,40,498,38,"opts"],[429,44,498,42],[429,46,498,44],[430,4,499,4],[431,4,500,4],[431,8,500,8,"token"],[431,13,500,13],[431,18,500,18],[431,22,500,22],[431,26,500,26,"token"],[431,31,500,31],[431,32,500,32,"type"],[431,36,500,36],[431,41,500,41,"_$$_REQUIRE"],[431,52,500,41],[431,53,500,41,"_dependencyMap"],[431,67,500,41],[431,88,500,41,"TYPE"],[431,92,500,41],[431,93,500,46,"Number"],[431,99,500,52],[431,101,500,54],[432,6,501,8],[432,13,501,15],[432,14,501,16],[433,4,502,4],[435,4,504,4],[436,4,505,4],[436,8,505,8,"i"],[436,9,505,9],[436,12,505,12,"token"],[436,17,505,17],[436,18,505,18,"value"],[436,23,505,23],[436,24,505,24,"charCodeAt"],[436,34,505,34],[436,35,505,35],[436,36,505,36],[436,37,505,37],[436,42,505,42],[436,48,505,48],[437,4,505,58],[438,4,506,12,"token"],[438,9,506,17],[438,10,506,18,"value"],[438,15,506,23],[438,16,506,24,"charCodeAt"],[438,26,506,34],[438,27,506,35],[438,28,506,36],[438,29,506,37],[438,34,506,42],[438,40,506,48],[438,43,506,51],[438,44,506,52],[438,47,506,55],[438,48,506,56],[438,49,506,57],[438,50,506,58],[440,4,508,4],[441,4,509,4],[441,11,509,11,"i"],[441,12,509,12],[441,15,509,15,"token"],[441,20,509,20],[441,21,509,21,"value"],[441,26,509,26],[441,27,509,27,"length"],[441,33,509,33],[441,35,509,35,"i"],[441,36,509,36],[441,38,509,38],[441,40,509,40],[442,6,510,8],[442,10,510,12],[442,11,510,13,"_$$_REQUIRE"],[442,22,510,13],[442,23,510,13,"_dependencyMap"],[442,37,510,13],[442,58,510,13,"isDigit"],[442,65,510,13],[442,66,510,21,"token"],[442,71,510,26],[442,72,510,27,"value"],[442,77,510,32],[442,78,510,33,"charCodeAt"],[442,88,510,43],[442,89,510,44,"i"],[442,90,510,45],[442,91,510,46],[442,92,510,47],[442,94,510,49],[443,8,511,12],[443,15,511,19],[443,16,511,20],[444,6,512,8],[445,4,513,4],[447,4,515,4],[448,4,516,4],[448,8,516,8,"outOfRange"],[448,18,516,18],[448,19,516,19,"opts"],[448,23,516,23],[448,25,516,25,"token"],[448,30,516,30],[448,31,516,31,"value"],[448,36,516,36],[448,38,516,38,"i"],[448,39,516,39],[448,40,516,40],[448,42,516,42],[449,6,517,8],[449,13,517,15],[449,14,517,16],[450,4,518,4],[451,4,520,4],[451,11,520,11],[451,12,520,12],[452,2,521,0],[453,2,523,0,"module"],[453,8,523,6],[453,9,523,7,"exports"],[453,16,523,14],[453,19,523,17],[454,4,524,4],[455,4,525,4],[455,17,525,17],[455,19,525,19,"tokenType"],[455,28,525,28],[455,29,525,29,"_$$_REQUIRE"],[455,40,525,29],[455,41,525,29,"_dependencyMap"],[455,55,525,29],[455,76,525,29,"TYPE"],[455,80,525,29],[455,81,525,34,"Ident"],[455,86,525,39],[455,87,525,40],[456,4,526,4],[456,20,526,20],[456,22,526,22,"tokenType"],[456,31,526,31],[456,32,526,32,"_$$_REQUIRE"],[456,43,526,32],[456,44,526,32,"_dependencyMap"],[456,58,526,32],[456,79,526,32,"TYPE"],[456,83,526,32],[456,84,526,37,"Function"],[456,92,526,45],[456,93,526,46],[457,4,527,4],[457,22,527,22],[457,24,527,24,"tokenType"],[457,33,527,33],[457,34,527,34,"_$$_REQUIRE"],[457,45,527,34],[457,46,527,34,"_dependencyMap"],[457,60,527,34],[457,81,527,34,"TYPE"],[457,85,527,34],[457,86,527,39,"AtKeyword"],[457,95,527,48],[457,96,527,49],[458,4,528,4],[458,16,528,16],[458,18,528,18,"tokenType"],[458,27,528,27],[458,28,528,28,"_$$_REQUIRE"],[458,39,528,28],[458,40,528,28,"_dependencyMap"],[458,54,528,28],[458,75,528,28,"TYPE"],[458,79,528,28],[458,80,528,33,"Hash"],[458,84,528,37],[458,85,528,38],[459,4,529,4],[459,18,529,18],[459,20,529,20,"tokenType"],[459,29,529,29],[459,30,529,30,"_$$_REQUIRE"],[459,41,529,30],[459,42,529,30,"_dependencyMap"],[459,56,529,30],[459,77,529,30,"TYPE"],[459,81,529,30],[459,82,529,35,"String"],[459,88,529,41],[459,89,529,42],[460,4,530,4],[460,22,530,22],[460,24,530,24,"tokenType"],[460,33,530,33],[460,34,530,34,"_$$_REQUIRE"],[460,45,530,34],[460,46,530,34,"_dependencyMap"],[460,60,530,34],[460,81,530,34,"TYPE"],[460,85,530,34],[460,86,530,39,"BadString"],[460,95,530,48],[460,96,530,49],[461,4,531,4],[461,15,531,15],[461,17,531,17,"tokenType"],[461,26,531,26],[461,27,531,27,"_$$_REQUIRE"],[461,38,531,27],[461,39,531,27,"_dependencyMap"],[461,53,531,27],[461,74,531,27,"TYPE"],[461,78,531,27],[461,79,531,32,"Url"],[461,82,531,35],[461,83,531,36],[462,4,532,4],[462,19,532,19],[462,21,532,21,"tokenType"],[462,30,532,30],[462,31,532,31,"_$$_REQUIRE"],[462,42,532,31],[462,43,532,31,"_dependencyMap"],[462,57,532,31],[462,78,532,31,"TYPE"],[462,82,532,31],[462,83,532,36,"BadUrl"],[462,89,532,42],[462,90,532,43],[463,4,533,4],[463,17,533,17],[463,19,533,19,"tokenType"],[463,28,533,28],[463,29,533,29,"_$$_REQUIRE"],[463,40,533,29],[463,41,533,29,"_dependencyMap"],[463,55,533,29],[463,76,533,29,"TYPE"],[463,80,533,29],[463,81,533,34,"Delim"],[463,86,533,39],[463,87,533,40],[464,4,534,4],[464,18,534,18],[464,20,534,20,"tokenType"],[464,29,534,29],[464,30,534,30,"_$$_REQUIRE"],[464,41,534,30],[464,42,534,30,"_dependencyMap"],[464,56,534,30],[464,77,534,30,"TYPE"],[464,81,534,30],[464,82,534,35,"Number"],[464,88,534,41],[464,89,534,42],[465,4,535,4],[465,22,535,22],[465,24,535,24,"tokenType"],[465,33,535,33],[465,34,535,34,"_$$_REQUIRE"],[465,45,535,34],[465,46,535,34,"_dependencyMap"],[465,60,535,34],[465,81,535,34,"TYPE"],[465,85,535,34],[465,86,535,39,"Percentage"],[465,96,535,49],[465,97,535,50],[466,4,536,4],[466,21,536,21],[466,23,536,23,"tokenType"],[466,32,536,32],[466,33,536,33,"_$$_REQUIRE"],[466,44,536,33],[466,45,536,33,"_dependencyMap"],[466,59,536,33],[466,80,536,33,"TYPE"],[466,84,536,33],[466,85,536,38,"Dimension"],[466,94,536,47],[466,95,536,48],[467,4,537,4],[467,22,537,22],[467,24,537,24,"tokenType"],[467,33,537,33],[467,34,537,34,"_$$_REQUIRE"],[467,45,537,34],[467,46,537,34,"_dependencyMap"],[467,60,537,34],[467,81,537,34,"TYPE"],[467,85,537,34],[467,86,537,39,"WhiteSpace"],[467,96,537,49],[467,97,537,50],[468,4,538,4],[468,15,538,15],[468,17,538,17,"tokenType"],[468,26,538,26],[468,27,538,27,"_$$_REQUIRE"],[468,38,538,27],[468,39,538,27,"_dependencyMap"],[468,53,538,27],[468,74,538,27,"TYPE"],[468,78,538,27],[468,79,538,32,"CDO"],[468,82,538,35],[468,83,538,36],[469,4,539,4],[469,15,539,15],[469,17,539,17,"tokenType"],[469,26,539,26],[469,27,539,27,"_$$_REQUIRE"],[469,38,539,27],[469,39,539,27,"_dependencyMap"],[469,53,539,27],[469,74,539,27,"TYPE"],[469,78,539,27],[469,79,539,32,"CDC"],[469,82,539,35],[469,83,539,36],[470,4,540,4],[470,17,540,17],[470,19,540,19,"tokenType"],[470,28,540,28],[470,29,540,29,"_$$_REQUIRE"],[470,40,540,29],[470,41,540,29,"_dependencyMap"],[470,55,540,29],[470,76,540,29,"TYPE"],[470,80,540,29],[470,81,540,34,"Colon"],[470,86,540,39],[470,87,540,40],[471,4,541,4],[471,21,541,21],[471,23,541,23,"tokenType"],[471,32,541,32],[471,33,541,33,"_$$_REQUIRE"],[471,44,541,33],[471,45,541,33,"_dependencyMap"],[471,59,541,33],[471,80,541,33,"TYPE"],[471,84,541,33],[471,85,541,38,"Semicolon"],[471,94,541,47],[471,95,541,48],[472,4,542,4],[472,17,542,17],[472,19,542,19,"tokenType"],[472,28,542,28],[472,29,542,29,"_$$_REQUIRE"],[472,40,542,29],[472,41,542,29,"_dependencyMap"],[472,55,542,29],[472,76,542,29,"TYPE"],[472,80,542,29],[472,81,542,34,"Comma"],[472,86,542,39],[472,87,542,40],[473,4,543,4],[473,13,543,13],[473,15,543,15,"tokenType"],[473,24,543,24],[473,25,543,25,"_$$_REQUIRE"],[473,36,543,25],[473,37,543,25,"_dependencyMap"],[473,51,543,25],[473,72,543,25,"TYPE"],[473,76,543,25],[473,77,543,30,"LeftSquareBracket"],[473,94,543,47],[473,95,543,48],[474,4,544,4],[474,13,544,13],[474,15,544,15,"tokenType"],[474,24,544,24],[474,25,544,25,"_$$_REQUIRE"],[474,36,544,25],[474,37,544,25,"_dependencyMap"],[474,51,544,25],[474,72,544,25,"TYPE"],[474,76,544,25],[474,77,544,30,"RightSquareBracket"],[474,95,544,48],[474,96,544,49],[475,4,545,4],[475,13,545,13],[475,15,545,15,"tokenType"],[475,24,545,24],[475,25,545,25,"_$$_REQUIRE"],[475,36,545,25],[475,37,545,25,"_dependencyMap"],[475,51,545,25],[475,72,545,25,"TYPE"],[475,76,545,25],[475,77,545,30,"LeftParenthesis"],[475,92,545,45],[475,93,545,46],[476,4,546,4],[476,13,546,13],[476,15,546,15,"tokenType"],[476,24,546,24],[476,25,546,25,"_$$_REQUIRE"],[476,36,546,25],[476,37,546,25,"_dependencyMap"],[476,51,546,25],[476,72,546,25,"TYPE"],[476,76,546,25],[476,77,546,30,"RightParenthesis"],[476,93,546,46],[476,94,546,47],[477,4,547,4],[477,13,547,13],[477,15,547,15,"tokenType"],[477,24,547,24],[477,25,547,25,"_$$_REQUIRE"],[477,36,547,25],[477,37,547,25,"_dependencyMap"],[477,51,547,25],[477,72,547,25,"TYPE"],[477,76,547,25],[477,77,547,30,"LeftCurlyBracket"],[477,93,547,46],[477,94,547,47],[478,4,548,4],[478,13,548,13],[478,15,548,15,"tokenType"],[478,24,548,24],[478,25,548,25,"_$$_REQUIRE"],[478,36,548,25],[478,37,548,25,"_dependencyMap"],[478,51,548,25],[478,72,548,25,"TYPE"],[478,76,548,25],[478,77,548,30,"RightCurlyBracket"],[478,94,548,47],[478,95,548,48],[479,4,550,4],[480,4,551,4],[480,12,551,12],[480,14,551,14,"tokenType"],[480,23,551,23],[480,24,551,24,"_$$_REQUIRE"],[480,35,551,24],[480,36,551,24,"_dependencyMap"],[480,50,551,24],[480,71,551,24,"TYPE"],[480,75,551,24],[480,76,551,29,"String"],[480,82,551,35],[480,83,551,36],[481,4,552,4],[481,11,552,11],[481,13,552,13,"tokenType"],[481,22,552,22],[481,23,552,23,"_$$_REQUIRE"],[481,34,552,23],[481,35,552,23,"_dependencyMap"],[481,49,552,23],[481,70,552,23,"TYPE"],[481,74,552,23],[481,75,552,28,"Ident"],[481,80,552,33],[481,81,552,34],[482,4,554,4],[483,4,555,4],[483,18,555,18],[483,20,555,20,"customIdent"],[483,31,555,31],[484,4,556,4],[484,26,556,26],[484,28,556,28,"customPropertyName"],[484,46,556,46],[485,4,557,4],[485,15,557,15],[485,17,557,17,"hexColor"],[485,25,557,25],[486,4,558,4],[486,17,558,17],[486,19,558,19,"idSelector"],[486,29,558,29],[487,4,558,31],[488,4,559,4],[488,15,559,15],[488,17,559,15,"_$$_REQUIRE"],[488,28,559,15],[488,29,559,15,"_dependencyMap"],[488,43,559,15],[488,70,559,24],[489,4,560,4],[489,12,560,12],[489,14,560,12,"_$$_REQUIRE"],[489,25,560,12],[489,26,560,12,"_dependencyMap"],[489,40,560,12],[489,64,560,20],[490,4,561,4],[490,23,561,23],[490,25,561,25,"declarationValue"],[490,41,561,41],[491,4,562,4],[491,15,562,15],[491,17,562,17,"anyValue"],[491,25,562,25],[492,4,564,4],[493,4,565,4],[493,15,565,15],[493,17,565,17,"calc"],[493,21,565,21],[493,22,565,22,"dimension"],[493,31,565,31],[493,32,565,32],[493,36,565,36],[493,37,565,37],[493,38,565,38],[494,4,566,4],[494,11,566,11],[494,13,566,13,"calc"],[494,17,566,17],[494,18,566,18,"dimension"],[494,27,566,27],[494,28,566,28,"ANGLE"],[494,33,566,33],[494,34,566,34],[494,35,566,35],[495,4,567,4],[495,13,567,13],[495,15,567,15,"calc"],[495,19,567,19],[495,20,567,20,"dimension"],[495,29,567,29],[495,30,567,30,"DECIBEL"],[495,37,567,37],[495,38,567,38],[495,39,567,39],[496,4,568,4],[496,15,568,15],[496,17,568,17,"calc"],[496,21,568,21],[496,22,568,22,"dimension"],[496,31,568,31],[496,32,568,32,"FREQUENCY"],[496,41,568,41],[496,42,568,42],[496,43,568,43],[497,4,569,4],[497,10,569,10],[497,12,569,12,"calc"],[497,16,569,16],[497,17,569,17,"dimension"],[497,26,569,26],[497,27,569,27,"FLEX"],[497,31,569,31],[497,32,569,32],[497,33,569,33],[498,4,570,4],[498,12,570,12],[498,14,570,14,"calc"],[498,18,570,18],[498,19,570,19,"zero"],[498,23,570,23],[498,24,570,24,"dimension"],[498,33,570,33],[498,34,570,34,"LENGTH"],[498,40,570,40],[498,41,570,41],[498,42,570,42],[498,43,570,43],[499,4,571,4],[499,16,571,16],[499,18,571,18,"calc"],[499,22,571,22],[499,23,571,23,"dimension"],[499,32,571,32],[499,33,571,33,"RESOLUTION"],[499,43,571,43],[499,44,571,44],[499,45,571,45],[500,4,572,4],[500,15,572,15],[500,17,572,17,"calc"],[500,21,572,21],[500,22,572,22,"dimension"],[500,31,572,31],[500,32,572,32,"SEMITONES"],[500,41,572,41],[500,42,572,42],[500,43,572,43],[501,4,573,4],[501,10,573,10],[501,12,573,12,"calc"],[501,16,573,16],[501,17,573,17,"dimension"],[501,26,573,26],[501,27,573,27,"TIME"],[501,31,573,31],[501,32,573,32],[501,33,573,33],[502,4,575,4],[503,4,576,4],[503,16,576,16],[503,18,576,18,"calc"],[503,22,576,22],[503,23,576,23,"percentage"],[503,33,576,33],[503,34,576,34],[504,4,578,4],[505,4,579,4],[505,10,579,10],[505,12,579,12,"zero"],[505,16,579,16],[505,17,579,17],[505,18,579,18],[506,4,580,4],[506,12,580,12],[506,14,580,14,"calc"],[506,18,580,18],[506,19,580,19,"number"],[506,25,580,25],[506,26,580,26],[507,4,581,4],[507,13,581,13],[507,15,581,15,"calc"],[507,19,581,19],[507,20,581,20,"integer"],[507,27,581,27],[507,28,581,28],[508,4,583,4],[509,4,584,4],[509,27,584,27],[509,29,584,29,"func"],[509,33,584,33],[509,34,584,34],[509,46,584,46],[510,2,585,0],[510,3,585,1],[511,0,585,2],[511,3]],"functionMap":{"names":["<global>","charCode","eqStr","eqStrAny","isPostfixIeHack","outOfRange","consumeFunction","calc","<anonymous>","tokenType","func","customIdent","customPropertyName","hexColor","idSelector","declarationValue","anyValue","dimension","percentage","zero","next","number","integer"],"mappings":"AAA;AC+E;CDE;AEE;CFE;AGE;CHQ;AIG;CJS;AKE;CLsB;AME;CNc;AOK;WCC;KDU;CPC;ASE;WDC;KCM;CTC;AUE;WFG;KEM;CVC;AWa;CXwB;AYO;CZY;AaM;CbmB;AcE;CdU;AeI;Cf+D;AgBM;ChBsC;AiBM;WTC;KS0B;CjBC;AkBQ;ClBY;AmBU;eCE;SDE;WXG;KWQ;CnBC;AqBM;CrBiB;AsBI;CtBuB"}},"type":"js/module"}]}