{"dependencies":[{"name":"./cipher","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":142},"end":{"line":7,"column":32,"index":161}},{"start":{"line":7,"column":13,"index":142},"end":{"line":7,"column":32,"index":161}}],"key":"sNtDd7vaPczwvxeNcTDCg/XWaXM="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":75},"end":{"line":4,"column":34,"index":94}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":28},"end":{"line":3,"column":43,"index":58}},{"start":{"line":3,"column":13,"index":28},"end":{"line":3,"column":43,"index":58}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}},{"start":{"line":6,"column":12,"index":109},"end":{"line":6,"column":30,"index":127}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function DESState() {\n    this.tmp = new Array(2);\n    this.keys = null;\n  }\n  function DES(options) {\n    _$$_REQUIRE(_dependencyMap[0], \"./cipher\").call(this, options);\n    var state = new DESState();\n    this._desState = state;\n    this.deriveKeys(state, options.key);\n  }\n  _$$_REQUIRE(_dependencyMap[1], \"inherits\")(DES, _$$_REQUIRE(_dependencyMap[0], \"./cipher\"));\n  module.exports = DES;\n  DES.create = function create(options) {\n    return new DES(options);\n  };\n  var shiftTable = [1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1];\n  DES.prototype.deriveKeys = function deriveKeys(state, key) {\n    state.keys = new Array(16 * 2);\n    _$$_REQUIRE(_dependencyMap[2], \"minimalistic-assert\").equal(key.length, this.blockSize, 'Invalid key length');\n    var kL = _$$_REQUIRE(_dependencyMap[3], \"./utils\").readUInt32BE(key, 0);\n    var kR = _$$_REQUIRE(_dependencyMap[3], \"./utils\").readUInt32BE(key, 4);\n    _$$_REQUIRE(_dependencyMap[3], \"./utils\").pc1(kL, kR, state.tmp, 0);\n    kL = state.tmp[0];\n    kR = state.tmp[1];\n    for (var i = 0; i < state.keys.length; i += 2) {\n      var shift = shiftTable[i >>> 1];\n      kL = _$$_REQUIRE(_dependencyMap[3], \"./utils\").r28shl(kL, shift);\n      kR = _$$_REQUIRE(_dependencyMap[3], \"./utils\").r28shl(kR, shift);\n      _$$_REQUIRE(_dependencyMap[3], \"./utils\").pc2(kL, kR, state.keys, i);\n    }\n  };\n  DES.prototype._update = function _update(inp, inOff, out, outOff) {\n    var state = this._desState;\n    var l = _$$_REQUIRE(_dependencyMap[3], \"./utils\").readUInt32BE(inp, inOff);\n    var r = _$$_REQUIRE(_dependencyMap[3], \"./utils\").readUInt32BE(inp, inOff + 4);\n\n    // Initial Permutation\n    _$$_REQUIRE(_dependencyMap[3], \"./utils\").ip(l, r, state.tmp, 0);\n    l = state.tmp[0];\n    r = state.tmp[1];\n    if (this.type === 'encrypt') this._encrypt(state, l, r, state.tmp, 0);else this._decrypt(state, l, r, state.tmp, 0);\n    l = state.tmp[0];\n    r = state.tmp[1];\n    _$$_REQUIRE(_dependencyMap[3], \"./utils\").writeUInt32BE(out, l, outOff);\n    _$$_REQUIRE(_dependencyMap[3], \"./utils\").writeUInt32BE(out, r, outOff + 4);\n  };\n  DES.prototype._pad = function _pad(buffer, off) {\n    if (this.padding === false) {\n      return false;\n    }\n    var value = buffer.length - off;\n    for (var i = off; i < buffer.length; i++) buffer[i] = value;\n    return true;\n  };\n  DES.prototype._unpad = function _unpad(buffer) {\n    if (this.padding === false) {\n      return buffer;\n    }\n    var pad = buffer[buffer.length - 1];\n    for (var i = buffer.length - pad; i < buffer.length; i++) _$$_REQUIRE(_dependencyMap[2], \"minimalistic-assert\").equal(buffer[i], pad);\n    return buffer.slice(0, buffer.length - pad);\n  };\n  DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n    var l = lStart;\n    var r = rStart;\n\n    // Apply f() x16 times\n    for (var i = 0; i < state.keys.length; i += 2) {\n      var keyL = state.keys[i];\n      var keyR = state.keys[i + 1];\n\n      // f(r, k)\n      _$$_REQUIRE(_dependencyMap[3], \"./utils\").expand(r, state.tmp, 0);\n      keyL ^= state.tmp[0];\n      keyR ^= state.tmp[1];\n      var s = _$$_REQUIRE(_dependencyMap[3], \"./utils\").substitute(keyL, keyR);\n      var f = _$$_REQUIRE(_dependencyMap[3], \"./utils\").permute(s);\n      var t = r;\n      r = (l ^ f) >>> 0;\n      l = t;\n    }\n\n    // Reverse Initial Permutation\n    _$$_REQUIRE(_dependencyMap[3], \"./utils\").rip(r, l, out, off);\n  };\n  DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n    var l = rStart;\n    var r = lStart;\n\n    // Apply f() x16 times\n    for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n      var keyL = state.keys[i];\n      var keyR = state.keys[i + 1];\n\n      // f(r, k)\n      _$$_REQUIRE(_dependencyMap[3], \"./utils\").expand(l, state.tmp, 0);\n      keyL ^= state.tmp[0];\n      keyR ^= state.tmp[1];\n      var s = _$$_REQUIRE(_dependencyMap[3], \"./utils\").substitute(keyL, keyR);\n      var f = _$$_REQUIRE(_dependencyMap[3], \"./utils\").permute(s);\n      var t = l;\n      l = (r ^ f) >>> 0;\n      r = t;\n    }\n\n    // Reverse Initial Permutation\n    _$$_REQUIRE(_dependencyMap[3], \"./utils\").rip(l, r, out, off);\n  };\n});","lineCount":112,"map":[[2,2,1,0],[2,14,1,12],[4,2,9,0],[4,11,9,9,"DESState"],[4,19,9,17,"DESState"],[4,20,9,17],[4,22,9,20],[5,4,10,2],[5,8,10,6],[5,9,10,7,"tmp"],[5,12,10,10],[5,15,10,13],[5,19,10,17,"Array"],[5,24,10,22],[5,25,10,23],[5,26,10,24],[5,27,10,25],[6,4,11,2],[6,8,11,6],[6,9,11,7,"keys"],[6,13,11,11],[6,16,11,14],[6,20,11,18],[7,2,12,0],[8,2,14,0],[8,11,14,9,"DES"],[8,14,14,12,"DES"],[8,15,14,13,"options"],[8,22,14,20],[8,24,14,22],[9,4,15,2,"_$$_REQUIRE"],[9,15,15,2],[9,16,15,2,"_dependencyMap"],[9,30,15,2],[9,47,15,9,"call"],[9,51,15,13],[9,52,15,14],[9,56,15,18],[9,58,15,20,"options"],[9,65,15,27],[9,66,15,28],[10,4,17,2],[10,8,17,6,"state"],[10,13,17,11],[10,16,17,14],[10,20,17,18,"DESState"],[10,28,17,26],[10,29,17,27],[10,30,17,28],[11,4,18,2],[11,8,18,6],[11,9,18,7,"_desState"],[11,18,18,16],[11,21,18,19,"state"],[11,26,18,24],[12,4,20,2],[12,8,20,6],[12,9,20,7,"deriveKeys"],[12,19,20,17],[12,20,20,18,"state"],[12,25,20,23],[12,27,20,25,"options"],[12,34,20,32],[12,35,20,33,"key"],[12,38,20,36],[12,39,20,37],[13,2,21,0],[14,2,22,0,"_$$_REQUIRE"],[14,13,22,0],[14,14,22,0,"_dependencyMap"],[14,28,22,0],[14,45,22,9,"DES"],[14,48,22,12],[14,50,22,12,"_$$_REQUIRE"],[14,61,22,12],[14,62,22,12,"_dependencyMap"],[14,76,22,12],[14,92,22,20],[14,93,22,21],[15,2,23,0,"module"],[15,8,23,6],[15,9,23,7,"exports"],[15,16,23,14],[15,19,23,17,"DES"],[15,22,23,20],[16,2,25,0,"DES"],[16,5,25,3],[16,6,25,4,"create"],[16,12,25,10],[16,15,25,13],[16,24,25,22,"create"],[16,30,25,28,"create"],[16,31,25,29,"options"],[16,38,25,36],[16,40,25,38],[17,4,26,2],[17,11,26,9],[17,15,26,13,"DES"],[17,18,26,16],[17,19,26,17,"options"],[17,26,26,24],[17,27,26,25],[18,2,27,0],[18,3,27,1],[19,2,29,0],[19,6,29,4,"shiftTable"],[19,16,29,14],[19,19,29,17],[19,20,30,2],[19,21,30,3],[19,23,30,5],[19,24,30,6],[19,26,30,8],[19,27,30,9],[19,29,30,11],[19,30,30,12],[19,32,30,14],[19,33,30,15],[19,35,30,17],[19,36,30,18],[19,38,30,20],[19,39,30,21],[19,41,30,23],[19,42,30,24],[19,44,31,2],[19,45,31,3],[19,47,31,5],[19,48,31,6],[19,50,31,8],[19,51,31,9],[19,53,31,11],[19,54,31,12],[19,56,31,14],[19,57,31,15],[19,59,31,17],[19,60,31,18],[19,62,31,20],[19,63,31,21],[19,65,31,23],[19,66,31,24],[19,67,32,1],[20,2,34,0,"DES"],[20,5,34,3],[20,6,34,4,"prototype"],[20,15,34,13],[20,16,34,14,"deriveKeys"],[20,26,34,24],[20,29,34,27],[20,38,34,36,"deriveKeys"],[20,48,34,46,"deriveKeys"],[20,49,34,47,"state"],[20,54,34,52],[20,56,34,54,"key"],[20,59,34,57],[20,61,34,59],[21,4,35,2,"state"],[21,9,35,7],[21,10,35,8,"keys"],[21,14,35,12],[21,17,35,15],[21,21,35,19,"Array"],[21,26,35,24],[21,27,35,25],[21,29,35,27],[21,32,35,30],[21,33,35,31],[21,34,35,32],[22,4,37,2,"_$$_REQUIRE"],[22,15,37,2],[22,16,37,2,"_dependencyMap"],[22,30,37,2],[22,58,37,9,"equal"],[22,63,37,14],[22,64,37,15,"key"],[22,67,37,18],[22,68,37,19,"length"],[22,74,37,25],[22,76,37,27],[22,80,37,31],[22,81,37,32,"blockSize"],[22,90,37,41],[22,92,37,43],[22,112,37,63],[22,113,37,64],[23,4,39,2],[23,8,39,6,"kL"],[23,10,39,8],[23,13,39,11,"_$$_REQUIRE"],[23,24,39,11],[23,25,39,11,"_dependencyMap"],[23,39,39,11],[23,55,39,17,"readUInt32BE"],[23,67,39,29],[23,68,39,30,"key"],[23,71,39,33],[23,73,39,35],[23,74,39,36],[23,75,39,37],[24,4,40,2],[24,8,40,6,"kR"],[24,10,40,8],[24,13,40,11,"_$$_REQUIRE"],[24,24,40,11],[24,25,40,11,"_dependencyMap"],[24,39,40,11],[24,55,40,17,"readUInt32BE"],[24,67,40,29],[24,68,40,30,"key"],[24,71,40,33],[24,73,40,35],[24,74,40,36],[24,75,40,37],[25,4,42,2,"_$$_REQUIRE"],[25,15,42,2],[25,16,42,2,"_dependencyMap"],[25,30,42,2],[25,46,42,8,"pc1"],[25,49,42,11],[25,50,42,12,"kL"],[25,52,42,14],[25,54,42,16,"kR"],[25,56,42,18],[25,58,42,20,"state"],[25,63,42,25],[25,64,42,26,"tmp"],[25,67,42,29],[25,69,42,31],[25,70,42,32],[25,71,42,33],[26,4,43,2,"kL"],[26,6,43,4],[26,9,43,7,"state"],[26,14,43,12],[26,15,43,13,"tmp"],[26,18,43,16],[26,19,43,17],[26,20,43,18],[26,21,43,19],[27,4,44,2,"kR"],[27,6,44,4],[27,9,44,7,"state"],[27,14,44,12],[27,15,44,13,"tmp"],[27,18,44,16],[27,19,44,17],[27,20,44,18],[27,21,44,19],[28,4,45,2],[28,9,45,7],[28,13,45,11,"i"],[28,14,45,12],[28,17,45,15],[28,18,45,16],[28,20,45,18,"i"],[28,21,45,19],[28,24,45,22,"state"],[28,29,45,27],[28,30,45,28,"keys"],[28,34,45,32],[28,35,45,33,"length"],[28,41,45,39],[28,43,45,41,"i"],[28,44,45,42],[28,48,45,46],[28,49,45,47],[28,51,45,49],[29,6,46,4],[29,10,46,8,"shift"],[29,15,46,13],[29,18,46,16,"shiftTable"],[29,28,46,26],[29,29,46,27,"i"],[29,30,46,28],[29,35,46,33],[29,36,46,34],[29,37,46,35],[30,6,47,4,"kL"],[30,8,47,6],[30,11,47,9,"_$$_REQUIRE"],[30,22,47,9],[30,23,47,9,"_dependencyMap"],[30,37,47,9],[30,53,47,15,"r28shl"],[30,59,47,21],[30,60,47,22,"kL"],[30,62,47,24],[30,64,47,26,"shift"],[30,69,47,31],[30,70,47,32],[31,6,48,4,"kR"],[31,8,48,6],[31,11,48,9,"_$$_REQUIRE"],[31,22,48,9],[31,23,48,9,"_dependencyMap"],[31,37,48,9],[31,53,48,15,"r28shl"],[31,59,48,21],[31,60,48,22,"kR"],[31,62,48,24],[31,64,48,26,"shift"],[31,69,48,31],[31,70,48,32],[32,6,49,4,"_$$_REQUIRE"],[32,17,49,4],[32,18,49,4,"_dependencyMap"],[32,32,49,4],[32,48,49,10,"pc2"],[32,51,49,13],[32,52,49,14,"kL"],[32,54,49,16],[32,56,49,18,"kR"],[32,58,49,20],[32,60,49,22,"state"],[32,65,49,27],[32,66,49,28,"keys"],[32,70,49,32],[32,72,49,34,"i"],[32,73,49,35],[32,74,49,36],[33,4,50,2],[34,2,51,0],[34,3,51,1],[35,2,53,0,"DES"],[35,5,53,3],[35,6,53,4,"prototype"],[35,15,53,13],[35,16,53,14,"_update"],[35,23,53,21],[35,26,53,24],[35,35,53,33,"_update"],[35,42,53,40,"_update"],[35,43,53,41,"inp"],[35,46,53,44],[35,48,53,46,"inOff"],[35,53,53,51],[35,55,53,53,"out"],[35,58,53,56],[35,60,53,58,"outOff"],[35,66,53,64],[35,68,53,66],[36,4,54,2],[36,8,54,6,"state"],[36,13,54,11],[36,16,54,14],[36,20,54,18],[36,21,54,19,"_desState"],[36,30,54,28],[37,4,56,2],[37,8,56,6,"l"],[37,9,56,7],[37,12,56,10,"_$$_REQUIRE"],[37,23,56,10],[37,24,56,10,"_dependencyMap"],[37,38,56,10],[37,54,56,16,"readUInt32BE"],[37,66,56,28],[37,67,56,29,"inp"],[37,70,56,32],[37,72,56,34,"inOff"],[37,77,56,39],[37,78,56,40],[38,4,57,2],[38,8,57,6,"r"],[38,9,57,7],[38,12,57,10,"_$$_REQUIRE"],[38,23,57,10],[38,24,57,10,"_dependencyMap"],[38,38,57,10],[38,54,57,16,"readUInt32BE"],[38,66,57,28],[38,67,57,29,"inp"],[38,70,57,32],[38,72,57,34,"inOff"],[38,77,57,39],[38,80,57,42],[38,81,57,43],[38,82,57,44],[40,4,59,2],[41,4,60,2,"_$$_REQUIRE"],[41,15,60,2],[41,16,60,2,"_dependencyMap"],[41,30,60,2],[41,46,60,8,"ip"],[41,48,60,10],[41,49,60,11,"l"],[41,50,60,12],[41,52,60,14,"r"],[41,53,60,15],[41,55,60,17,"state"],[41,60,60,22],[41,61,60,23,"tmp"],[41,64,60,26],[41,66,60,28],[41,67,60,29],[41,68,60,30],[42,4,61,2,"l"],[42,5,61,3],[42,8,61,6,"state"],[42,13,61,11],[42,14,61,12,"tmp"],[42,17,61,15],[42,18,61,16],[42,19,61,17],[42,20,61,18],[43,4,62,2,"r"],[43,5,62,3],[43,8,62,6,"state"],[43,13,62,11],[43,14,62,12,"tmp"],[43,17,62,15],[43,18,62,16],[43,19,62,17],[43,20,62,18],[44,4,64,2],[44,8,64,6],[44,12,64,10],[44,13,64,11,"type"],[44,17,64,15],[44,22,64,20],[44,31,64,29],[44,33,65,4],[44,37,65,8],[44,38,65,9,"_encrypt"],[44,46,65,17],[44,47,65,18,"state"],[44,52,65,23],[44,54,65,25,"l"],[44,55,65,26],[44,57,65,28,"r"],[44,58,65,29],[44,60,65,31,"state"],[44,65,65,36],[44,66,65,37,"tmp"],[44,69,65,40],[44,71,65,42],[44,72,65,43],[44,73,65,44],[44,74,65,45],[44,79,67,4],[44,83,67,8],[44,84,67,9,"_decrypt"],[44,92,67,17],[44,93,67,18,"state"],[44,98,67,23],[44,100,67,25,"l"],[44,101,67,26],[44,103,67,28,"r"],[44,104,67,29],[44,106,67,31,"state"],[44,111,67,36],[44,112,67,37,"tmp"],[44,115,67,40],[44,117,67,42],[44,118,67,43],[44,119,67,44],[45,4,69,2,"l"],[45,5,69,3],[45,8,69,6,"state"],[45,13,69,11],[45,14,69,12,"tmp"],[45,17,69,15],[45,18,69,16],[45,19,69,17],[45,20,69,18],[46,4,70,2,"r"],[46,5,70,3],[46,8,70,6,"state"],[46,13,70,11],[46,14,70,12,"tmp"],[46,17,70,15],[46,18,70,16],[46,19,70,17],[46,20,70,18],[47,4,72,2,"_$$_REQUIRE"],[47,15,72,2],[47,16,72,2,"_dependencyMap"],[47,30,72,2],[47,46,72,8,"writeUInt32BE"],[47,59,72,21],[47,60,72,22,"out"],[47,63,72,25],[47,65,72,27,"l"],[47,66,72,28],[47,68,72,30,"outOff"],[47,74,72,36],[47,75,72,37],[48,4,73,2,"_$$_REQUIRE"],[48,15,73,2],[48,16,73,2,"_dependencyMap"],[48,30,73,2],[48,46,73,8,"writeUInt32BE"],[48,59,73,21],[48,60,73,22,"out"],[48,63,73,25],[48,65,73,27,"r"],[48,66,73,28],[48,68,73,30,"outOff"],[48,74,73,36],[48,77,73,39],[48,78,73,40],[48,79,73,41],[49,2,74,0],[49,3,74,1],[50,2,76,0,"DES"],[50,5,76,3],[50,6,76,4,"prototype"],[50,15,76,13],[50,16,76,14,"_pad"],[50,20,76,18],[50,23,76,21],[50,32,76,30,"_pad"],[50,36,76,34,"_pad"],[50,37,76,35,"buffer"],[50,43,76,41],[50,45,76,43,"off"],[50,48,76,46],[50,50,76,48],[51,4,77,2],[51,8,77,6],[51,12,77,10],[51,13,77,11,"padding"],[51,20,77,18],[51,25,77,23],[51,30,77,28],[51,32,77,30],[52,6,78,4],[52,13,78,11],[52,18,78,16],[53,4,79,2],[54,4,81,2],[54,8,81,6,"value"],[54,13,81,11],[54,16,81,14,"buffer"],[54,22,81,20],[54,23,81,21,"length"],[54,29,81,27],[54,32,81,30,"off"],[54,35,81,33],[55,4,82,2],[55,9,82,7],[55,13,82,11,"i"],[55,14,82,12],[55,17,82,15,"off"],[55,20,82,18],[55,22,82,20,"i"],[55,23,82,21],[55,26,82,24,"buffer"],[55,32,82,30],[55,33,82,31,"length"],[55,39,82,37],[55,41,82,39,"i"],[55,42,82,40],[55,44,82,42],[55,46,83,4,"buffer"],[55,52,83,10],[55,53,83,11,"i"],[55,54,83,12],[55,55,83,13],[55,58,83,16,"value"],[55,63,83,21],[56,4,85,2],[56,11,85,9],[56,15,85,13],[57,2,86,0],[57,3,86,1],[58,2,88,0,"DES"],[58,5,88,3],[58,6,88,4,"prototype"],[58,15,88,13],[58,16,88,14,"_unpad"],[58,22,88,20],[58,25,88,23],[58,34,88,32,"_unpad"],[58,40,88,38,"_unpad"],[58,41,88,39,"buffer"],[58,47,88,45],[58,49,88,47],[59,4,89,2],[59,8,89,6],[59,12,89,10],[59,13,89,11,"padding"],[59,20,89,18],[59,25,89,23],[59,30,89,28],[59,32,89,30],[60,6,90,4],[60,13,90,11,"buffer"],[60,19,90,17],[61,4,91,2],[62,4,93,2],[62,8,93,6,"pad"],[62,11,93,9],[62,14,93,12,"buffer"],[62,20,93,18],[62,21,93,19,"buffer"],[62,27,93,25],[62,28,93,26,"length"],[62,34,93,32],[62,37,93,35],[62,38,93,36],[62,39,93,37],[63,4,94,2],[63,9,94,7],[63,13,94,11,"i"],[63,14,94,12],[63,17,94,15,"buffer"],[63,23,94,21],[63,24,94,22,"length"],[63,30,94,28],[63,33,94,31,"pad"],[63,36,94,34],[63,38,94,36,"i"],[63,39,94,37],[63,42,94,40,"buffer"],[63,48,94,46],[63,49,94,47,"length"],[63,55,94,53],[63,57,94,55,"i"],[63,58,94,56],[63,60,94,58],[63,62,95,4,"_$$_REQUIRE"],[63,73,95,4],[63,74,95,4,"_dependencyMap"],[63,88,95,4],[63,116,95,11,"equal"],[63,121,95,16],[63,122,95,17,"buffer"],[63,128,95,23],[63,129,95,24,"i"],[63,130,95,25],[63,131,95,26],[63,133,95,28,"pad"],[63,136,95,31],[63,137,95,32],[64,4,97,2],[64,11,97,9,"buffer"],[64,17,97,15],[64,18,97,16,"slice"],[64,23,97,21],[64,24,97,22],[64,25,97,23],[64,27,97,25,"buffer"],[64,33,97,31],[64,34,97,32,"length"],[64,40,97,38],[64,43,97,41,"pad"],[64,46,97,44],[64,47,97,45],[65,2,98,0],[65,3,98,1],[66,2,100,0,"DES"],[66,5,100,3],[66,6,100,4,"prototype"],[66,15,100,13],[66,16,100,14,"_encrypt"],[66,24,100,22],[66,27,100,25],[66,36,100,34,"_encrypt"],[66,44,100,42,"_encrypt"],[66,45,100,43,"state"],[66,50,100,48],[66,52,100,50,"lStart"],[66,58,100,56],[66,60,100,58,"rStart"],[66,66,100,64],[66,68,100,66,"out"],[66,71,100,69],[66,73,100,71,"off"],[66,76,100,74],[66,78,100,76],[67,4,101,2],[67,8,101,6,"l"],[67,9,101,7],[67,12,101,10,"lStart"],[67,18,101,16],[68,4,102,2],[68,8,102,6,"r"],[68,9,102,7],[68,12,102,10,"rStart"],[68,18,102,16],[70,4,104,2],[71,4,105,2],[71,9,105,7],[71,13,105,11,"i"],[71,14,105,12],[71,17,105,15],[71,18,105,16],[71,20,105,18,"i"],[71,21,105,19],[71,24,105,22,"state"],[71,29,105,27],[71,30,105,28,"keys"],[71,34,105,32],[71,35,105,33,"length"],[71,41,105,39],[71,43,105,41,"i"],[71,44,105,42],[71,48,105,46],[71,49,105,47],[71,51,105,49],[72,6,106,4],[72,10,106,8,"keyL"],[72,14,106,12],[72,17,106,15,"state"],[72,22,106,20],[72,23,106,21,"keys"],[72,27,106,25],[72,28,106,26,"i"],[72,29,106,27],[72,30,106,28],[73,6,107,4],[73,10,107,8,"keyR"],[73,14,107,12],[73,17,107,15,"state"],[73,22,107,20],[73,23,107,21,"keys"],[73,27,107,25],[73,28,107,26,"i"],[73,29,107,27],[73,32,107,30],[73,33,107,31],[73,34,107,32],[75,6,109,4],[76,6,110,4,"_$$_REQUIRE"],[76,17,110,4],[76,18,110,4,"_dependencyMap"],[76,32,110,4],[76,48,110,10,"expand"],[76,54,110,16],[76,55,110,17,"r"],[76,56,110,18],[76,58,110,20,"state"],[76,63,110,25],[76,64,110,26,"tmp"],[76,67,110,29],[76,69,110,31],[76,70,110,32],[76,71,110,33],[77,6,112,4,"keyL"],[77,10,112,8],[77,14,112,12,"state"],[77,19,112,17],[77,20,112,18,"tmp"],[77,23,112,21],[77,24,112,22],[77,25,112,23],[77,26,112,24],[78,6,113,4,"keyR"],[78,10,113,8],[78,14,113,12,"state"],[78,19,113,17],[78,20,113,18,"tmp"],[78,23,113,21],[78,24,113,22],[78,25,113,23],[78,26,113,24],[79,6,114,4],[79,10,114,8,"s"],[79,11,114,9],[79,14,114,12,"_$$_REQUIRE"],[79,25,114,12],[79,26,114,12,"_dependencyMap"],[79,40,114,12],[79,56,114,18,"substitute"],[79,66,114,28],[79,67,114,29,"keyL"],[79,71,114,33],[79,73,114,35,"keyR"],[79,77,114,39],[79,78,114,40],[80,6,115,4],[80,10,115,8,"f"],[80,11,115,9],[80,14,115,12,"_$$_REQUIRE"],[80,25,115,12],[80,26,115,12,"_dependencyMap"],[80,40,115,12],[80,56,115,18,"permute"],[80,63,115,25],[80,64,115,26,"s"],[80,65,115,27],[80,66,115,28],[81,6,117,4],[81,10,117,8,"t"],[81,11,117,9],[81,14,117,12,"r"],[81,15,117,13],[82,6,118,4,"r"],[82,7,118,5],[82,10,118,8],[82,11,118,9,"l"],[82,12,118,10],[82,15,118,13,"f"],[82,16,118,14],[82,22,118,20],[82,23,118,21],[83,6,119,4,"l"],[83,7,119,5],[83,10,119,8,"t"],[83,11,119,9],[84,4,120,2],[86,4,122,2],[87,4,123,2,"_$$_REQUIRE"],[87,15,123,2],[87,16,123,2,"_dependencyMap"],[87,30,123,2],[87,46,123,8,"rip"],[87,49,123,11],[87,50,123,12,"r"],[87,51,123,13],[87,53,123,15,"l"],[87,54,123,16],[87,56,123,18,"out"],[87,59,123,21],[87,61,123,23,"off"],[87,64,123,26],[87,65,123,27],[88,2,124,0],[88,3,124,1],[89,2,126,0,"DES"],[89,5,126,3],[89,6,126,4,"prototype"],[89,15,126,13],[89,16,126,14,"_decrypt"],[89,24,126,22],[89,27,126,25],[89,36,126,34,"_decrypt"],[89,44,126,42,"_decrypt"],[89,45,126,43,"state"],[89,50,126,48],[89,52,126,50,"lStart"],[89,58,126,56],[89,60,126,58,"rStart"],[89,66,126,64],[89,68,126,66,"out"],[89,71,126,69],[89,73,126,71,"off"],[89,76,126,74],[89,78,126,76],[90,4,127,2],[90,8,127,6,"l"],[90,9,127,7],[90,12,127,10,"rStart"],[90,18,127,16],[91,4,128,2],[91,8,128,6,"r"],[91,9,128,7],[91,12,128,10,"lStart"],[91,18,128,16],[93,4,130,2],[94,4,131,2],[94,9,131,7],[94,13,131,11,"i"],[94,14,131,12],[94,17,131,15,"state"],[94,22,131,20],[94,23,131,21,"keys"],[94,27,131,25],[94,28,131,26,"length"],[94,34,131,32],[94,37,131,35],[94,38,131,36],[94,40,131,38,"i"],[94,41,131,39],[94,45,131,43],[94,46,131,44],[94,48,131,46,"i"],[94,49,131,47],[94,53,131,51],[94,54,131,52],[94,56,131,54],[95,6,132,4],[95,10,132,8,"keyL"],[95,14,132,12],[95,17,132,15,"state"],[95,22,132,20],[95,23,132,21,"keys"],[95,27,132,25],[95,28,132,26,"i"],[95,29,132,27],[95,30,132,28],[96,6,133,4],[96,10,133,8,"keyR"],[96,14,133,12],[96,17,133,15,"state"],[96,22,133,20],[96,23,133,21,"keys"],[96,27,133,25],[96,28,133,26,"i"],[96,29,133,27],[96,32,133,30],[96,33,133,31],[96,34,133,32],[98,6,135,4],[99,6,136,4,"_$$_REQUIRE"],[99,17,136,4],[99,18,136,4,"_dependencyMap"],[99,32,136,4],[99,48,136,10,"expand"],[99,54,136,16],[99,55,136,17,"l"],[99,56,136,18],[99,58,136,20,"state"],[99,63,136,25],[99,64,136,26,"tmp"],[99,67,136,29],[99,69,136,31],[99,70,136,32],[99,71,136,33],[100,6,138,4,"keyL"],[100,10,138,8],[100,14,138,12,"state"],[100,19,138,17],[100,20,138,18,"tmp"],[100,23,138,21],[100,24,138,22],[100,25,138,23],[100,26,138,24],[101,6,139,4,"keyR"],[101,10,139,8],[101,14,139,12,"state"],[101,19,139,17],[101,20,139,18,"tmp"],[101,23,139,21],[101,24,139,22],[101,25,139,23],[101,26,139,24],[102,6,140,4],[102,10,140,8,"s"],[102,11,140,9],[102,14,140,12,"_$$_REQUIRE"],[102,25,140,12],[102,26,140,12,"_dependencyMap"],[102,40,140,12],[102,56,140,18,"substitute"],[102,66,140,28],[102,67,140,29,"keyL"],[102,71,140,33],[102,73,140,35,"keyR"],[102,77,140,39],[102,78,140,40],[103,6,141,4],[103,10,141,8,"f"],[103,11,141,9],[103,14,141,12,"_$$_REQUIRE"],[103,25,141,12],[103,26,141,12,"_dependencyMap"],[103,40,141,12],[103,56,141,18,"permute"],[103,63,141,25],[103,64,141,26,"s"],[103,65,141,27],[103,66,141,28],[104,6,143,4],[104,10,143,8,"t"],[104,11,143,9],[104,14,143,12,"l"],[104,15,143,13],[105,6,144,4,"l"],[105,7,144,5],[105,10,144,8],[105,11,144,9,"r"],[105,12,144,10],[105,15,144,13,"f"],[105,16,144,14],[105,22,144,20],[105,23,144,21],[106,6,145,4,"r"],[106,7,145,5],[106,10,145,8,"t"],[106,11,145,9],[107,4,146,2],[109,4,148,2],[110,4,149,2,"_$$_REQUIRE"],[110,15,149,2],[110,16,149,2,"_dependencyMap"],[110,30,149,2],[110,46,149,8,"rip"],[110,49,149,11],[110,50,149,12,"l"],[110,51,149,13],[110,53,149,15,"r"],[110,54,149,16],[110,56,149,18,"out"],[110,59,149,21],[110,61,149,23,"off"],[110,64,149,26],[110,65,149,27],[111,2,150,0],[111,3,150,1],[112,0,150,2],[112,3]],"functionMap":{"names":["<global>","DESState","DES","create","deriveKeys","_update","_pad","_unpad","_encrypt","_decrypt"],"mappings":"AAA;ACQ;CDG;AEE;CFO;aGI;CHE;2BIO;CJiB;wBKE;CLqB;qBME;CNU;uBOE;CPU;yBQE;CRwB;yBSE;CTwB"}},"type":"js/module"}]}