{"dependencies":[{"name":"../../typeFields","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}},{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}}],"key":"JA6Y4U+9BJNyHBqSRMPAJW1YgVo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.SIGHASH_TYPE) {\n      throw new Error('Decode Error: could not decode sighashType with key 0x' + keyVal.key.toString('hex'));\n    }\n    return keyVal.value.readUInt32LE(0);\n  }\n  exports.decode = decode;\n  function encode(data) {\n    var key = Buffer.from([_$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.SIGHASH_TYPE]);\n    var value = Buffer.allocUnsafe(4);\n    value.writeUInt32LE(data, 0);\n    return {\n      key: key,\n      value: value\n    };\n  }\n  exports.encode = encode;\n  exports.expected = 'number';\n  function check(data) {\n    return typeof data === 'number';\n  }\n  exports.check = check;\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.sighashType === undefined;\n  }\n  exports.canAdd = canAdd;\n});","lineCount":33,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,4,0],[7,11,4,9,"decode"],[7,17,4,15,"decode"],[7,18,4,16,"keyVal"],[7,24,4,22],[7,26,4,24],[8,4,5,2],[8,8,5,6,"keyVal"],[8,14,5,12],[8,15,5,13,"key"],[8,18,5,16],[8,19,5,17],[8,20,5,18],[8,21,5,19],[8,26,5,24,"_$$_REQUIRE"],[8,37,5,24],[8,38,5,24,"_dependencyMap"],[8,52,5,24],[8,77,5,37,"InputTypes"],[8,87,5,47],[8,88,5,48,"SIGHASH_TYPE"],[8,100,5,60],[8,102,5,62],[9,6,6,4],[9,12,6,10],[9,16,6,14,"Error"],[9,21,6,19],[9,22,7,6],[9,78,7,62],[9,81,8,8,"keyVal"],[9,87,8,14],[9,88,8,15,"key"],[9,91,8,18],[9,92,8,19,"toString"],[9,100,8,27],[9,101,8,28],[9,106,8,33],[9,107,9,4],[9,108,9,5],[10,4,10,2],[11,4,11,2],[11,11,11,9,"keyVal"],[11,17,11,15],[11,18,11,16,"value"],[11,23,11,21],[11,24,11,22,"readUInt32LE"],[11,36,11,34],[11,37,11,35],[11,38,11,36],[11,39,11,37],[12,2,12,0],[13,2,13,0,"exports"],[13,9,13,7],[13,10,13,8,"decode"],[13,16,13,14],[13,19,13,17,"decode"],[13,25,13,23],[14,2,14,0],[14,11,14,9,"encode"],[14,17,14,15,"encode"],[14,18,14,16,"data"],[14,22,14,20],[14,24,14,22],[15,4,15,2],[15,8,15,8,"key"],[15,11,15,11],[15,14,15,14,"Buffer"],[15,20,15,20],[15,21,15,21,"from"],[15,25,15,25],[15,26,15,26],[15,27,15,27,"_$$_REQUIRE"],[15,38,15,27],[15,39,15,27,"_dependencyMap"],[15,53,15,27],[15,78,15,40,"InputTypes"],[15,88,15,50],[15,89,15,51,"SIGHASH_TYPE"],[15,101,15,63],[15,102,15,64],[15,103,15,65],[16,4,16,2],[16,8,16,8,"value"],[16,13,16,13],[16,16,16,16,"Buffer"],[16,22,16,22],[16,23,16,23,"allocUnsafe"],[16,34,16,34],[16,35,16,35],[16,36,16,36],[16,37,16,37],[17,4,17,2,"value"],[17,9,17,7],[17,10,17,8,"writeUInt32LE"],[17,23,17,21],[17,24,17,22,"data"],[17,28,17,26],[17,30,17,28],[17,31,17,29],[17,32,17,30],[18,4,18,2],[18,11,18,9],[19,6,19,4,"key"],[19,9,19,7],[19,11,19,4,"key"],[19,14,19,7],[20,6,20,4,"value"],[20,11,20,9],[20,13,20,4,"value"],[21,4,21,2],[21,5,21,3],[22,2,22,0],[23,2,23,0,"exports"],[23,9,23,7],[23,10,23,8,"encode"],[23,16,23,14],[23,19,23,17,"encode"],[23,25,23,23],[24,2,24,0,"exports"],[24,9,24,7],[24,10,24,8,"expected"],[24,18,24,16],[24,21,24,19],[24,29,24,27],[25,2,25,0],[25,11,25,9,"check"],[25,16,25,14,"check"],[25,17,25,15,"data"],[25,21,25,19],[25,23,25,21],[26,4,26,2],[26,11,26,9],[26,18,26,16,"data"],[26,22,26,20],[26,27,26,25],[26,35,26,33],[27,2,27,0],[28,2,28,0,"exports"],[28,9,28,7],[28,10,28,8,"check"],[28,15,28,13],[28,18,28,16,"check"],[28,23,28,21],[29,2,29,0],[29,11,29,9,"canAdd"],[29,17,29,15,"canAdd"],[29,18,29,16,"currentData"],[29,29,29,27],[29,31,29,29,"newData"],[29,38,29,36],[29,40,29,38],[30,4,30,2],[30,11,30,9],[30,12,30,10],[30,13,30,11,"currentData"],[30,24,30,22],[30,28,30,26],[30,29,30,27],[30,30,30,28,"newData"],[30,37,30,35],[30,41,30,39,"currentData"],[30,52,30,50],[30,53,30,51,"sighashType"],[30,64,30,62],[30,69,30,67,"undefined"],[30,78,30,76],[31,2,31,0],[32,2,32,0,"exports"],[32,9,32,7],[32,10,32,8,"canAdd"],[32,16,32,14],[32,19,32,17,"canAdd"],[32,25,32,23],[33,0,32,24],[33,3]],"functionMap":{"names":["<global>","decode","encode","check","canAdd"],"mappings":"AAA;ACG;CDQ;AEE;CFQ;AGG;CHE;AIE;CJE"}},"type":"js/module"}]}