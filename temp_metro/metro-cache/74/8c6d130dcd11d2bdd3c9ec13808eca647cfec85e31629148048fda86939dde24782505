{"dependencies":[{"name":"./converter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":18,"index":95},"end":{"line":3,"column":40,"index":117}}],"key":"uRssGqofosQeJaCs7rDf/fgh9jo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function checkForInput(inputs, inputIndex) {\n    var input = inputs[inputIndex];\n    if (input === undefined) throw new Error(`No input #${inputIndex}`);\n    return input;\n  }\n  exports.checkForInput = checkForInput;\n  function checkForOutput(outputs, outputIndex) {\n    var output = outputs[outputIndex];\n    if (output === undefined) throw new Error(`No output #${outputIndex}`);\n    return output;\n  }\n  exports.checkForOutput = checkForOutput;\n  function checkHasKey(checkKeyVal, keyVals, enumLength) {\n    if (checkKeyVal.key[0] < enumLength) {\n      throw new Error(`Use the method for your specific key instead of addUnknownKeyVal*`);\n    }\n    if (keyVals && keyVals.filter(function (kv) {\n      return kv.key.equals(checkKeyVal.key);\n    }).length !== 0) {\n      throw new Error(`Duplicate Key: ${checkKeyVal.key.toString('hex')}`);\n    }\n  }\n  exports.checkHasKey = checkHasKey;\n  function getEnumLength(myenum) {\n    var count = 0;\n    Object.keys(myenum).forEach(function (val) {\n      if (Number(isNaN(Number(val)))) {\n        count++;\n      }\n    });\n    return count;\n  }\n  exports.getEnumLength = getEnumLength;\n  function inputCheckUncleanFinalized(inputIndex, input) {\n    var result = false;\n    if (input.nonWitnessUtxo || input.witnessUtxo) {\n      var needScriptSig = !!input.redeemScript;\n      var needWitnessScript = !!input.witnessScript;\n      var scriptSigOK = !needScriptSig || !!input.finalScriptSig;\n      var witnessScriptOK = !needWitnessScript || !!input.finalScriptWitness;\n      var hasOneFinal = !!input.finalScriptSig || !!input.finalScriptWitness;\n      result = scriptSigOK && witnessScriptOK && hasOneFinal;\n    }\n    if (result === false) {\n      throw new Error(`Input #${inputIndex} has too much or too little data to clean`);\n    }\n  }\n  exports.inputCheckUncleanFinalized = inputCheckUncleanFinalized;\n  function throwForUpdateMaker(typeName, name, expected, data) {\n    throw new Error(`Data for ${typeName} key ${name} is incorrect: Expected ` + `${expected} and got ${JSON.stringify(data)}`);\n  }\n  function updateMaker(typeName) {\n    return function (updateData, mainData) {\n      var _loop = function _loop() {\n        // @ts-ignore\n        var data = updateData[name];\n        // @ts-ignore\n        var _ref =\n          // @ts-ignore\n          _$$_REQUIRE(_dependencyMap[0], \"./converter\")[typeName + 's'][name] || {},\n          canAdd = _ref.canAdd,\n          canAddToArray = _ref.canAddToArray,\n          check = _ref.check,\n          expected = _ref.expected;\n        var isArray = !!canAddToArray;\n        // If unknown data. ignore and do not add\n        if (check) {\n          if (isArray) {\n            if (!Array.isArray(data) ||\n            // @ts-ignore\n            mainData[name] && !Array.isArray(mainData[name])) {\n              throw new Error(`Key type ${name} must be an array`);\n            }\n            if (!data.every(check)) {\n              throwForUpdateMaker(typeName, name, expected, data);\n            }\n            // @ts-ignore\n            var arr = mainData[name] || [];\n            var dupeCheckSet = new Set();\n            if (!data.every(function (v) {\n              return canAddToArray(arr, v, dupeCheckSet);\n            })) {\n              throw new Error('Can not add duplicate data to array');\n            }\n            // @ts-ignore\n            mainData[name] = arr.concat(data);\n          } else {\n            if (!check(data)) {\n              throwForUpdateMaker(typeName, name, expected, data);\n            }\n            if (!canAdd(mainData, data)) {\n              throw new Error(`Can not add duplicate data to ${typeName}`);\n            }\n            // @ts-ignore\n            mainData[name] = data;\n          }\n        }\n      };\n      for (var name of Object.keys(updateData)) {\n        _loop();\n      }\n    };\n  }\n  exports.updateGlobal = updateMaker('global');\n  exports.updateInput = updateMaker('input');\n  exports.updateOutput = updateMaker('output');\n  function addInputAttributes(inputs, data) {\n    var index = inputs.length - 1;\n    var input = checkForInput(inputs, index);\n    exports.updateInput(data, input);\n  }\n  exports.addInputAttributes = addInputAttributes;\n  function addOutputAttributes(outputs, data) {\n    var index = outputs.length - 1;\n    var output = checkForOutput(outputs, index);\n    exports.updateOutput(data, output);\n  }\n  exports.addOutputAttributes = addOutputAttributes;\n  function defaultVersionSetter(version, txBuf) {\n    if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n      throw new Error('Set Version: Invalid Transaction');\n    }\n    txBuf.writeUInt32LE(version, 0);\n    return txBuf;\n  }\n  exports.defaultVersionSetter = defaultVersionSetter;\n  function defaultLocktimeSetter(locktime, txBuf) {\n    if (!Buffer.isBuffer(txBuf) || txBuf.length < 4) {\n      throw new Error('Set Locktime: Invalid Transaction');\n    }\n    txBuf.writeUInt32LE(locktime, txBuf.length - 4);\n    return txBuf;\n  }\n  exports.defaultLocktimeSetter = defaultLocktimeSetter;\n});","lineCount":141,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,4,0],[7,11,4,9,"checkForInput"],[7,24,4,22,"checkForInput"],[7,25,4,23,"inputs"],[7,31,4,29],[7,33,4,31,"inputIndex"],[7,43,4,41],[7,45,4,43],[8,4,5,2],[8,8,5,8,"input"],[8,13,5,13],[8,16,5,16,"inputs"],[8,22,5,22],[8,23,5,23,"inputIndex"],[8,33,5,33],[8,34,5,34],[9,4,6,2],[9,8,6,6,"input"],[9,13,6,11],[9,18,6,16,"undefined"],[9,27,6,25],[9,29,6,27],[9,35,6,33],[9,39,6,37,"Error"],[9,44,6,42],[9,45,6,43],[9,58,6,56,"inputIndex"],[9,68,6,66],[9,70,6,68],[9,71,6,69],[10,4,7,2],[10,11,7,9,"input"],[10,16,7,14],[11,2,8,0],[12,2,9,0,"exports"],[12,9,9,7],[12,10,9,8,"checkForInput"],[12,23,9,21],[12,26,9,24,"checkForInput"],[12,39,9,37],[13,2,10,0],[13,11,10,9,"checkForOutput"],[13,25,10,23,"checkForOutput"],[13,26,10,24,"outputs"],[13,33,10,31],[13,35,10,33,"outputIndex"],[13,46,10,44],[13,48,10,46],[14,4,11,2],[14,8,11,8,"output"],[14,14,11,14],[14,17,11,17,"outputs"],[14,24,11,24],[14,25,11,25,"outputIndex"],[14,36,11,36],[14,37,11,37],[15,4,12,2],[15,8,12,6,"output"],[15,14,12,12],[15,19,12,17,"undefined"],[15,28,12,26],[15,30,12,28],[15,36,12,34],[15,40,12,38,"Error"],[15,45,12,43],[15,46,12,44],[15,60,12,58,"outputIndex"],[15,71,12,69],[15,73,12,71],[15,74,12,72],[16,4,13,2],[16,11,13,9,"output"],[16,17,13,15],[17,2,14,0],[18,2,15,0,"exports"],[18,9,15,7],[18,10,15,8,"checkForOutput"],[18,24,15,22],[18,27,15,25,"checkForOutput"],[18,41,15,39],[19,2,16,0],[19,11,16,9,"checkHasKey"],[19,22,16,20,"checkHasKey"],[19,23,16,21,"checkKeyVal"],[19,34,16,32],[19,36,16,34,"keyVals"],[19,43,16,41],[19,45,16,43,"enumLength"],[19,55,16,53],[19,57,16,55],[20,4,17,2],[20,8,17,6,"checkKeyVal"],[20,19,17,17],[20,20,17,18,"key"],[20,23,17,21],[20,24,17,22],[20,25,17,23],[20,26,17,24],[20,29,17,27,"enumLength"],[20,39,17,37],[20,41,17,39],[21,6,18,4],[21,12,18,10],[21,16,18,14,"Error"],[21,21,18,19],[21,22,19,6],[21,89,20,4],[21,90,20,5],[22,4,21,2],[23,4,22,2],[23,8,23,4,"keyVals"],[23,15,23,11],[23,19,24,4,"keyVals"],[23,26,24,11],[23,27,24,12,"filter"],[23,33,24,18],[23,34,24,19],[23,44,24,19,"kv"],[23,46,24,21],[24,6,24,21],[24,13,24,25,"kv"],[24,15,24,27],[24,16,24,28,"key"],[24,19,24,31],[24,20,24,32,"equals"],[24,26,24,38],[24,27,24,39,"checkKeyVal"],[24,38,24,50],[24,39,24,51,"key"],[24,42,24,54],[24,43,24,55],[25,4,24,55],[25,6,24,56],[25,7,24,57,"length"],[25,13,24,63],[25,18,24,68],[25,19,24,69],[25,21,25,4],[26,6,26,4],[26,12,26,10],[26,16,26,14,"Error"],[26,21,26,19],[26,22,26,20],[26,40,26,38,"checkKeyVal"],[26,51,26,49],[26,52,26,50,"key"],[26,55,26,53],[26,56,26,54,"toString"],[26,64,26,62],[26,65,26,63],[26,70,26,68],[26,71,26,69],[26,73,26,71],[26,74,26,72],[27,4,27,2],[28,2,28,0],[29,2,29,0,"exports"],[29,9,29,7],[29,10,29,8,"checkHasKey"],[29,21,29,19],[29,24,29,22,"checkHasKey"],[29,35,29,33],[30,2,30,0],[30,11,30,9,"getEnumLength"],[30,24,30,22,"getEnumLength"],[30,25,30,23,"myenum"],[30,31,30,29],[30,33,30,31],[31,4,31,2],[31,8,31,6,"count"],[31,13,31,11],[31,16,31,14],[31,17,31,15],[32,4,32,2,"Object"],[32,10,32,8],[32,11,32,9,"keys"],[32,15,32,13],[32,16,32,14,"myenum"],[32,22,32,20],[32,23,32,21],[32,24,32,22,"forEach"],[32,31,32,29],[32,32,32,30],[32,42,32,30,"val"],[32,45,32,33],[32,47,32,37],[33,6,33,4],[33,10,33,8,"Number"],[33,16,33,14],[33,17,33,15,"isNaN"],[33,22,33,20],[33,23,33,21,"Number"],[33,29,33,27],[33,30,33,28,"val"],[33,33,33,31],[33,34,33,32],[33,35,33,33],[33,36,33,34],[33,38,33,36],[34,8,34,6,"count"],[34,13,34,11],[34,15,34,13],[35,6,35,4],[36,4,36,2],[36,5,36,3],[36,6,36,4],[37,4,37,2],[37,11,37,9,"count"],[37,16,37,14],[38,2,38,0],[39,2,39,0,"exports"],[39,9,39,7],[39,10,39,8,"getEnumLength"],[39,23,39,21],[39,26,39,24,"getEnumLength"],[39,39,39,37],[40,2,40,0],[40,11,40,9,"inputCheckUncleanFinalized"],[40,37,40,35,"inputCheckUncleanFinalized"],[40,38,40,36,"inputIndex"],[40,48,40,46],[40,50,40,48,"input"],[40,55,40,53],[40,57,40,55],[41,4,41,2],[41,8,41,6,"result"],[41,14,41,12],[41,17,41,15],[41,22,41,20],[42,4,42,2],[42,8,42,6,"input"],[42,13,42,11],[42,14,42,12,"nonWitnessUtxo"],[42,28,42,26],[42,32,42,30,"input"],[42,37,42,35],[42,38,42,36,"witnessUtxo"],[42,49,42,47],[42,51,42,49],[43,6,43,4],[43,10,43,10,"needScriptSig"],[43,23,43,23],[43,26,43,26],[43,27,43,27],[43,28,43,28,"input"],[43,33,43,33],[43,34,43,34,"redeemScript"],[43,46,43,46],[44,6,44,4],[44,10,44,10,"needWitnessScript"],[44,27,44,27],[44,30,44,30],[44,31,44,31],[44,32,44,32,"input"],[44,37,44,37],[44,38,44,38,"witnessScript"],[44,51,44,51],[45,6,45,4],[45,10,45,10,"scriptSigOK"],[45,21,45,21],[45,24,45,24],[45,25,45,25,"needScriptSig"],[45,38,45,38],[45,42,45,42],[45,43,45,43],[45,44,45,44,"input"],[45,49,45,49],[45,50,45,50,"finalScriptSig"],[45,64,45,64],[46,6,46,4],[46,10,46,10,"witnessScriptOK"],[46,25,46,25],[46,28,46,28],[46,29,46,29,"needWitnessScript"],[46,46,46,46],[46,50,46,50],[46,51,46,51],[46,52,46,52,"input"],[46,57,46,57],[46,58,46,58,"finalScriptWitness"],[46,76,46,76],[47,6,47,4],[47,10,47,10,"hasOneFinal"],[47,21,47,21],[47,24,47,24],[47,25,47,25],[47,26,47,26,"input"],[47,31,47,31],[47,32,47,32,"finalScriptSig"],[47,46,47,46],[47,50,47,50],[47,51,47,51],[47,52,47,52,"input"],[47,57,47,57],[47,58,47,58,"finalScriptWitness"],[47,76,47,76],[48,6,48,4,"result"],[48,12,48,10],[48,15,48,13,"scriptSigOK"],[48,26,48,24],[48,30,48,28,"witnessScriptOK"],[48,45,48,43],[48,49,48,47,"hasOneFinal"],[48,60,48,58],[49,4,49,2],[50,4,50,2],[50,8,50,6,"result"],[50,14,50,12],[50,19,50,17],[50,24,50,22],[50,26,50,24],[51,6,51,4],[51,12,51,10],[51,16,51,14,"Error"],[51,21,51,19],[51,22,52,6],[51,32,52,16,"inputIndex"],[51,42,52,26],[51,85,53,4],[51,86,53,5],[52,4,54,2],[53,2,55,0],[54,2,56,0,"exports"],[54,9,56,7],[54,10,56,8,"inputCheckUncleanFinalized"],[54,36,56,34],[54,39,56,37,"inputCheckUncleanFinalized"],[54,65,56,63],[55,2,57,0],[55,11,57,9,"throwForUpdateMaker"],[55,30,57,28,"throwForUpdateMaker"],[55,31,57,29,"typeName"],[55,39,57,37],[55,41,57,39,"name"],[55,45,57,43],[55,47,57,45,"expected"],[55,55,57,53],[55,57,57,55,"data"],[55,61,57,59],[55,63,57,61],[56,4,58,2],[56,10,58,8],[56,14,58,12,"Error"],[56,19,58,17],[56,20,59,4],[56,32,59,16,"typeName"],[56,40,59,24],[56,48,59,32,"name"],[56,52,59,36],[56,78,59,62],[56,81,60,6],[56,84,60,9,"expected"],[56,92,60,17],[56,104,60,29,"JSON"],[56,108,60,33],[56,109,60,34,"stringify"],[56,118,60,43],[56,119,60,44,"data"],[56,123,60,48],[56,124,60,49],[56,126,61,2],[56,127,61,3],[57,2,62,0],[58,2,63,0],[58,11,63,9,"updateMaker"],[58,22,63,20,"updateMaker"],[58,23,63,21,"typeName"],[58,31,63,29],[58,33,63,31],[59,4,64,2],[59,11,64,9],[59,21,64,10,"updateData"],[59,31,64,20],[59,33,64,22,"mainData"],[59,41,64,30],[59,43,64,35],[60,6,64,35],[60,10,64,35,"_loop"],[60,15,64,35],[60,27,64,35,"_loop"],[60,33,64,35],[60,35,65,48],[61,8,66,6],[62,8,67,6],[62,12,67,12,"data"],[62,16,67,16],[62,19,67,19,"updateData"],[62,29,67,29],[62,30,67,30,"name"],[62,34,67,34],[62,35,67,35],[63,8,68,6],[64,8,69,6],[64,12,69,6,"_ref"],[64,16,69,6],[65,10,70,8],[66,10,71,8,"_$$_REQUIRE"],[66,21,71,8],[66,22,71,8,"_dependencyMap"],[66,36,71,8],[66,56,71,18,"typeName"],[66,64,71,26],[66,67,71,29],[66,70,71,32],[66,71,71,33],[66,72,71,34,"name"],[66,76,71,38],[66,77,71,39],[66,81,71,43],[66,82,71,44],[66,83,71,45],[67,10,69,14,"canAdd"],[67,16,69,20],[67,19,69,20,"_ref"],[67,23,69,20],[67,24,69,14,"canAdd"],[67,30,69,20],[68,10,69,22,"canAddToArray"],[68,23,69,35],[68,26,69,35,"_ref"],[68,30,69,35],[68,31,69,22,"canAddToArray"],[68,44,69,35],[69,10,69,37,"check"],[69,15,69,42],[69,18,69,42,"_ref"],[69,22,69,42],[69,23,69,37,"check"],[69,28,69,42],[70,10,69,44,"expected"],[70,18,69,52],[70,21,69,52,"_ref"],[70,25,69,52],[70,26,69,44,"expected"],[70,34,69,52],[71,8,72,6],[71,12,72,12,"isArray"],[71,19,72,19],[71,22,72,22],[71,23,72,23],[71,24,72,24,"canAddToArray"],[71,37,72,37],[72,8,73,6],[73,8,74,6],[73,12,74,10,"check"],[73,17,74,15],[73,19,74,17],[74,10,75,8],[74,14,75,12,"isArray"],[74,21,75,19],[74,23,75,21],[75,12,76,10],[75,16,77,12],[75,17,77,13,"Array"],[75,22,77,18],[75,23,77,19,"isArray"],[75,30,77,26],[75,31,77,27,"data"],[75,35,77,31],[75,36,77,32],[76,12,78,12],[77,12,79,13,"mainData"],[77,20,79,21],[77,21,79,22,"name"],[77,25,79,26],[77,26,79,27],[77,30,79,31],[77,31,79,32,"Array"],[77,36,79,37],[77,37,79,38,"isArray"],[77,44,79,45],[77,45,79,46,"mainData"],[77,53,79,54],[77,54,79,55,"name"],[77,58,79,59],[77,59,79,60],[77,60,79,62],[77,62,80,12],[78,14,81,12],[78,20,81,18],[78,24,81,22,"Error"],[78,29,81,27],[78,30,81,28],[78,42,81,40,"name"],[78,46,81,44],[78,65,81,63],[78,66,81,64],[79,12,82,10],[80,12,83,10],[80,16,83,14],[80,17,83,15,"data"],[80,21,83,19],[80,22,83,20,"every"],[80,27,83,25],[80,28,83,26,"check"],[80,33,83,31],[80,34,83,32],[80,36,83,34],[81,14,84,12,"throwForUpdateMaker"],[81,33,84,31],[81,34,84,32,"typeName"],[81,42,84,40],[81,44,84,42,"name"],[81,48,84,46],[81,50,84,48,"expected"],[81,58,84,56],[81,60,84,58,"data"],[81,64,84,62],[81,65,84,63],[82,12,85,10],[83,12,86,10],[84,12,87,10],[84,16,87,16,"arr"],[84,19,87,19],[84,22,87,22,"mainData"],[84,30,87,30],[84,31,87,31,"name"],[84,35,87,35],[84,36,87,36],[84,40,87,40],[84,42,87,42],[85,12,88,10],[85,16,88,16,"dupeCheckSet"],[85,28,88,28],[85,31,88,31],[85,35,88,35,"Set"],[85,38,88,38],[85,39,88,39],[85,40,88,40],[86,12,89,10],[86,16,89,14],[86,17,89,15,"data"],[86,21,89,19],[86,22,89,20,"every"],[86,27,89,25],[86,28,89,26],[86,38,89,26,"v"],[86,39,89,27],[87,14,89,27],[87,21,89,31,"canAddToArray"],[87,34,89,44],[87,35,89,45,"arr"],[87,38,89,48],[87,40,89,50,"v"],[87,41,89,51],[87,43,89,53,"dupeCheckSet"],[87,55,89,65],[87,56,89,66],[88,12,89,66],[88,14,89,67],[88,16,89,69],[89,14,90,12],[89,20,90,18],[89,24,90,22,"Error"],[89,29,90,27],[89,30,90,28],[89,67,90,65],[89,68,90,66],[90,12,91,10],[91,12,92,10],[92,12,93,10,"mainData"],[92,20,93,18],[92,21,93,19,"name"],[92,25,93,23],[92,26,93,24],[92,29,93,27,"arr"],[92,32,93,30],[92,33,93,31,"concat"],[92,39,93,37],[92,40,93,38,"data"],[92,44,93,42],[92,45,93,43],[93,10,94,8],[93,11,94,9],[93,17,94,15],[94,12,95,10],[94,16,95,14],[94,17,95,15,"check"],[94,22,95,20],[94,23,95,21,"data"],[94,27,95,25],[94,28,95,26],[94,30,95,28],[95,14,96,12,"throwForUpdateMaker"],[95,33,96,31],[95,34,96,32,"typeName"],[95,42,96,40],[95,44,96,42,"name"],[95,48,96,46],[95,50,96,48,"expected"],[95,58,96,56],[95,60,96,58,"data"],[95,64,96,62],[95,65,96,63],[96,12,97,10],[97,12,98,10],[97,16,98,14],[97,17,98,15,"canAdd"],[97,23,98,21],[97,24,98,22,"mainData"],[97,32,98,30],[97,34,98,32,"data"],[97,38,98,36],[97,39,98,37],[97,41,98,39],[98,14,99,12],[98,20,99,18],[98,24,99,22,"Error"],[98,29,99,27],[98,30,99,28],[98,63,99,61,"typeName"],[98,71,99,69],[98,73,99,71],[98,74,99,72],[99,12,100,10],[100,12,101,10],[101,12,102,10,"mainData"],[101,20,102,18],[101,21,102,19,"name"],[101,25,102,23],[101,26,102,24],[101,29,102,27,"data"],[101,33,102,31],[102,10,103,8],[103,8,104,6],[104,6,105,4],[104,7,105,5],[105,6,65,4],[105,11,65,9],[105,15,65,15,"name"],[105,19,65,19],[105,23,65,23,"Object"],[105,29,65,29],[105,30,65,30,"keys"],[105,34,65,34],[105,35,65,35,"updateData"],[105,45,65,45],[105,46,65,46],[106,8,65,46,"_loop"],[106,13,65,46],[107,6,65,46],[108,4,106,2],[108,5,106,3],[109,2,107,0],[110,2,108,0,"exports"],[110,9,108,7],[110,10,108,8,"updateGlobal"],[110,22,108,20],[110,25,108,23,"updateMaker"],[110,36,108,34],[110,37,108,35],[110,45,108,43],[110,46,108,44],[111,2,109,0,"exports"],[111,9,109,7],[111,10,109,8,"updateInput"],[111,21,109,19],[111,24,109,22,"updateMaker"],[111,35,109,33],[111,36,109,34],[111,43,109,41],[111,44,109,42],[112,2,110,0,"exports"],[112,9,110,7],[112,10,110,8,"updateOutput"],[112,22,110,20],[112,25,110,23,"updateMaker"],[112,36,110,34],[112,37,110,35],[112,45,110,43],[112,46,110,44],[113,2,111,0],[113,11,111,9,"addInputAttributes"],[113,29,111,27,"addInputAttributes"],[113,30,111,28,"inputs"],[113,36,111,34],[113,38,111,36,"data"],[113,42,111,40],[113,44,111,42],[114,4,112,2],[114,8,112,8,"index"],[114,13,112,13],[114,16,112,16,"inputs"],[114,22,112,22],[114,23,112,23,"length"],[114,29,112,29],[114,32,112,32],[114,33,112,33],[115,4,113,2],[115,8,113,8,"input"],[115,13,113,13],[115,16,113,16,"checkForInput"],[115,29,113,29],[115,30,113,30,"inputs"],[115,36,113,36],[115,38,113,38,"index"],[115,43,113,43],[115,44,113,44],[116,4,114,2,"exports"],[116,11,114,9],[116,12,114,10,"updateInput"],[116,23,114,21],[116,24,114,22,"data"],[116,28,114,26],[116,30,114,28,"input"],[116,35,114,33],[116,36,114,34],[117,2,115,0],[118,2,116,0,"exports"],[118,9,116,7],[118,10,116,8,"addInputAttributes"],[118,28,116,26],[118,31,116,29,"addInputAttributes"],[118,49,116,47],[119,2,117,0],[119,11,117,9,"addOutputAttributes"],[119,30,117,28,"addOutputAttributes"],[119,31,117,29,"outputs"],[119,38,117,36],[119,40,117,38,"data"],[119,44,117,42],[119,46,117,44],[120,4,118,2],[120,8,118,8,"index"],[120,13,118,13],[120,16,118,16,"outputs"],[120,23,118,23],[120,24,118,24,"length"],[120,30,118,30],[120,33,118,33],[120,34,118,34],[121,4,119,2],[121,8,119,8,"output"],[121,14,119,14],[121,17,119,17,"checkForOutput"],[121,31,119,31],[121,32,119,32,"outputs"],[121,39,119,39],[121,41,119,41,"index"],[121,46,119,46],[121,47,119,47],[122,4,120,2,"exports"],[122,11,120,9],[122,12,120,10,"updateOutput"],[122,24,120,22],[122,25,120,23,"data"],[122,29,120,27],[122,31,120,29,"output"],[122,37,120,35],[122,38,120,36],[123,2,121,0],[124,2,122,0,"exports"],[124,9,122,7],[124,10,122,8,"addOutputAttributes"],[124,29,122,27],[124,32,122,30,"addOutputAttributes"],[124,51,122,49],[125,2,123,0],[125,11,123,9,"defaultVersionSetter"],[125,31,123,29,"defaultVersionSetter"],[125,32,123,30,"version"],[125,39,123,37],[125,41,123,39,"txBuf"],[125,46,123,44],[125,48,123,46],[126,4,124,2],[126,8,124,6],[126,9,124,7,"Buffer"],[126,15,124,13],[126,16,124,14,"isBuffer"],[126,24,124,22],[126,25,124,23,"txBuf"],[126,30,124,28],[126,31,124,29],[126,35,124,33,"txBuf"],[126,40,124,38],[126,41,124,39,"length"],[126,47,124,45],[126,50,124,48],[126,51,124,49],[126,53,124,51],[127,6,125,4],[127,12,125,10],[127,16,125,14,"Error"],[127,21,125,19],[127,22,125,20],[127,56,125,54],[127,57,125,55],[128,4,126,2],[129,4,127,2,"txBuf"],[129,9,127,7],[129,10,127,8,"writeUInt32LE"],[129,23,127,21],[129,24,127,22,"version"],[129,31,127,29],[129,33,127,31],[129,34,127,32],[129,35,127,33],[130,4,128,2],[130,11,128,9,"txBuf"],[130,16,128,14],[131,2,129,0],[132,2,130,0,"exports"],[132,9,130,7],[132,10,130,8,"defaultVersionSetter"],[132,30,130,28],[132,33,130,31,"defaultVersionSetter"],[132,53,130,51],[133,2,131,0],[133,11,131,9,"defaultLocktimeSetter"],[133,32,131,30,"defaultLocktimeSetter"],[133,33,131,31,"locktime"],[133,41,131,39],[133,43,131,41,"txBuf"],[133,48,131,46],[133,50,131,48],[134,4,132,2],[134,8,132,6],[134,9,132,7,"Buffer"],[134,15,132,13],[134,16,132,14,"isBuffer"],[134,24,132,22],[134,25,132,23,"txBuf"],[134,30,132,28],[134,31,132,29],[134,35,132,33,"txBuf"],[134,40,132,38],[134,41,132,39,"length"],[134,47,132,45],[134,50,132,48],[134,51,132,49],[134,53,132,51],[135,6,133,4],[135,12,133,10],[135,16,133,14,"Error"],[135,21,133,19],[135,22,133,20],[135,57,133,55],[135,58,133,56],[136,4,134,2],[137,4,135,2,"txBuf"],[137,9,135,7],[137,10,135,8,"writeUInt32LE"],[137,23,135,21],[137,24,135,22,"locktime"],[137,32,135,30],[137,34,135,32,"txBuf"],[137,39,135,37],[137,40,135,38,"length"],[137,46,135,44],[137,49,135,47],[137,50,135,48],[137,51,135,49],[138,4,136,2],[138,11,136,9,"txBuf"],[138,16,136,14],[139,2,137,0],[140,2,138,0,"exports"],[140,9,138,7],[140,10,138,8,"defaultLocktimeSetter"],[140,31,138,29],[140,34,138,32,"defaultLocktimeSetter"],[140,55,138,53],[141,0,138,54],[141,3]],"functionMap":{"names":["<global>","checkForInput","checkForOutput","checkHasKey","keyVals.filter$argument_0","getEnumLength","Object.keys.forEach$argument_0","inputCheckUncleanFinalized","throwForUpdateMaker","updateMaker","<anonymous>","data.every$argument_0","addInputAttributes","addOutputAttributes","defaultVersionSetter","defaultLocktimeSetter"],"mappings":"AAA;ACG;CDI;AEE;CFI;AGE;mBCQ,oCD;CHI;AKE;8BCE;GDI;CLE;AOE;CPe;AQE;CRK;ASC;SCC;0BCyB,wCD;GDiB;CTC;AYI;CZI;AaE;CbI;AcE;CdM;AeE;CfM"}},"type":"js/module"}]}