{"dependencies":[{"name":"./conversions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":18,"index":18},"end":{"line":1,"column":42,"index":42}}],"key":"AUDPhSp3SCRpotk+n4dj5MLm8fk="}},{"name":"./route","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":12,"index":56},"end":{"line":2,"column":30,"index":74}}],"key":"CgLF7khkD2MDURiduSWr++dKYzw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var convert = {};\n  var models = Object.keys(_$$_REQUIRE(_dependencyMap[0], \"./conversions\"));\n  function wrapRaw(fn) {\n    var wrappedFn = function wrappedFn(args) {\n      if (args === undefined || args === null) {\n        return args;\n      }\n      if (arguments.length > 1) {\n        args = Array.prototype.slice.call(arguments);\n      }\n      return fn(args);\n    };\n\n    // preserve .conversion property if there is one\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n  }\n  function wrapRounded(fn) {\n    var wrappedFn = function wrappedFn(args) {\n      if (args === undefined || args === null) {\n        return args;\n      }\n      if (arguments.length > 1) {\n        args = Array.prototype.slice.call(arguments);\n      }\n      var result = fn(args);\n\n      // we're assuming the result is an array here.\n      // see notice in conversions.js; don't use box types\n      // in conversion functions.\n      if (typeof result === 'object') {\n        for (var len = result.length, i = 0; i < len; i++) {\n          result[i] = Math.round(result[i]);\n        }\n      }\n      return result;\n    };\n\n    // preserve .conversion property if there is one\n    if ('conversion' in fn) {\n      wrappedFn.conversion = fn.conversion;\n    }\n    return wrappedFn;\n  }\n  models.forEach(function (fromModel) {\n    convert[fromModel] = {};\n    Object.defineProperty(convert[fromModel], 'channels', {\n      value: _$$_REQUIRE(_dependencyMap[0], \"./conversions\")[fromModel].channels\n    });\n    Object.defineProperty(convert[fromModel], 'labels', {\n      value: _$$_REQUIRE(_dependencyMap[0], \"./conversions\")[fromModel].labels\n    });\n    var routes = _$$_REQUIRE(_dependencyMap[1], \"./route\")(fromModel);\n    var routeModels = Object.keys(routes);\n    routeModels.forEach(function (toModel) {\n      var fn = routes[toModel];\n      convert[fromModel][toModel] = wrapRounded(fn);\n      convert[fromModel][toModel].raw = wrapRaw(fn);\n    });\n  });\n  module.exports = convert;\n});","lineCount":65,"map":[[2,2,4,0],[2,6,4,4,"convert"],[2,13,4,11],[2,16,4,14],[2,17,4,15],[2,18,4,16],[3,2,6,0],[3,6,6,4,"models"],[3,12,6,10],[3,15,6,13,"Object"],[3,21,6,19],[3,22,6,20,"keys"],[3,26,6,24],[3,27,6,24,"_$$_REQUIRE"],[3,38,6,24],[3,39,6,24,"_dependencyMap"],[3,53,6,24],[3,74,6,36],[3,75,6,37],[4,2,8,0],[4,11,8,9,"wrapRaw"],[4,18,8,16,"wrapRaw"],[4,19,8,17,"fn"],[4,21,8,19],[4,23,8,21],[5,4,9,1],[5,8,9,5,"wrappedFn"],[5,17,9,14],[5,20,9,17],[5,29,9,5,"wrappedFn"],[5,38,9,14,"wrappedFn"],[5,39,9,27,"args"],[5,43,9,31],[5,45,9,33],[6,6,10,2],[6,10,10,6,"args"],[6,14,10,10],[6,19,10,15,"undefined"],[6,28,10,24],[6,32,10,28,"args"],[6,36,10,32],[6,41,10,37],[6,45,10,41],[6,47,10,43],[7,8,11,3],[7,15,11,10,"args"],[7,19,11,14],[8,6,12,2],[9,6,14,2],[9,10,14,6,"arguments"],[9,19,14,15],[9,20,14,16,"length"],[9,26,14,22],[9,29,14,25],[9,30,14,26],[9,32,14,28],[10,8,15,3,"args"],[10,12,15,7],[10,15,15,10,"Array"],[10,20,15,15],[10,21,15,16,"prototype"],[10,30,15,25],[10,31,15,26,"slice"],[10,36,15,31],[10,37,15,32,"call"],[10,41,15,36],[10,42,15,37,"arguments"],[10,51,15,46],[10,52,15,47],[11,6,16,2],[12,6,18,2],[12,13,18,9,"fn"],[12,15,18,11],[12,16,18,12,"args"],[12,20,18,16],[12,21,18,17],[13,4,19,1],[13,5,19,2],[15,4,21,1],[16,4,22,1],[16,8,22,5],[16,20,22,17],[16,24,22,21,"fn"],[16,26,22,23],[16,28,22,25],[17,6,23,2,"wrappedFn"],[17,15,23,11],[17,16,23,12,"conversion"],[17,26,23,22],[17,29,23,25,"fn"],[17,31,23,27],[17,32,23,28,"conversion"],[17,42,23,38],[18,4,24,1],[19,4,26,1],[19,11,26,8,"wrappedFn"],[19,20,26,17],[20,2,27,0],[21,2,29,0],[21,11,29,9,"wrapRounded"],[21,22,29,20,"wrapRounded"],[21,23,29,21,"fn"],[21,25,29,23],[21,27,29,25],[22,4,30,1],[22,8,30,5,"wrappedFn"],[22,17,30,14],[22,20,30,17],[22,29,30,5,"wrappedFn"],[22,38,30,14,"wrappedFn"],[22,39,30,27,"args"],[22,43,30,31],[22,45,30,33],[23,6,31,2],[23,10,31,6,"args"],[23,14,31,10],[23,19,31,15,"undefined"],[23,28,31,24],[23,32,31,28,"args"],[23,36,31,32],[23,41,31,37],[23,45,31,41],[23,47,31,43],[24,8,32,3],[24,15,32,10,"args"],[24,19,32,14],[25,6,33,2],[26,6,35,2],[26,10,35,6,"arguments"],[26,19,35,15],[26,20,35,16,"length"],[26,26,35,22],[26,29,35,25],[26,30,35,26],[26,32,35,28],[27,8,36,3,"args"],[27,12,36,7],[27,15,36,10,"Array"],[27,20,36,15],[27,21,36,16,"prototype"],[27,30,36,25],[27,31,36,26,"slice"],[27,36,36,31],[27,37,36,32,"call"],[27,41,36,36],[27,42,36,37,"arguments"],[27,51,36,46],[27,52,36,47],[28,6,37,2],[29,6,39,2],[29,10,39,6,"result"],[29,16,39,12],[29,19,39,15,"fn"],[29,21,39,17],[29,22,39,18,"args"],[29,26,39,22],[29,27,39,23],[31,6,41,2],[32,6,42,2],[33,6,43,2],[34,6,44,2],[34,10,44,6],[34,17,44,13,"result"],[34,23,44,19],[34,28,44,24],[34,36,44,32],[34,38,44,34],[35,8,45,3],[35,13,45,8],[35,17,45,12,"len"],[35,20,45,15],[35,23,45,18,"result"],[35,29,45,24],[35,30,45,25,"length"],[35,36,45,31],[35,38,45,33,"i"],[35,39,45,34],[35,42,45,37],[35,43,45,38],[35,45,45,40,"i"],[35,46,45,41],[35,49,45,44,"len"],[35,52,45,47],[35,54,45,49,"i"],[35,55,45,50],[35,57,45,52],[35,59,45,54],[36,10,46,4,"result"],[36,16,46,10],[36,17,46,11,"i"],[36,18,46,12],[36,19,46,13],[36,22,46,16,"Math"],[36,26,46,20],[36,27,46,21,"round"],[36,32,46,26],[36,33,46,27,"result"],[36,39,46,33],[36,40,46,34,"i"],[36,41,46,35],[36,42,46,36],[36,43,46,37],[37,8,47,3],[38,6,48,2],[39,6,50,2],[39,13,50,9,"result"],[39,19,50,15],[40,4,51,1],[40,5,51,2],[42,4,53,1],[43,4,54,1],[43,8,54,5],[43,20,54,17],[43,24,54,21,"fn"],[43,26,54,23],[43,28,54,25],[44,6,55,2,"wrappedFn"],[44,15,55,11],[44,16,55,12,"conversion"],[44,26,55,22],[44,29,55,25,"fn"],[44,31,55,27],[44,32,55,28,"conversion"],[44,42,55,38],[45,4,56,1],[46,4,58,1],[46,11,58,8,"wrappedFn"],[46,20,58,17],[47,2,59,0],[48,2,61,0,"models"],[48,8,61,6],[48,9,61,7,"forEach"],[48,16,61,14],[48,17,61,15],[48,27,61,25,"fromModel"],[48,36,61,34],[48,38,61,36],[49,4,62,1,"convert"],[49,11,62,8],[49,12,62,9,"fromModel"],[49,21,62,18],[49,22,62,19],[49,25,62,22],[49,26,62,23],[49,27,62,24],[50,4,64,1,"Object"],[50,10,64,7],[50,11,64,8,"defineProperty"],[50,25,64,22],[50,26,64,23,"convert"],[50,33,64,30],[50,34,64,31,"fromModel"],[50,43,64,40],[50,44,64,41],[50,46,64,43],[50,56,64,53],[50,58,64,55],[51,6,64,56,"value"],[51,11,64,61],[51,13,64,63,"_$$_REQUIRE"],[51,24,64,63],[51,25,64,63,"_dependencyMap"],[51,39,64,63],[51,61,64,75,"fromModel"],[51,70,64,84],[51,71,64,85],[51,72,64,86,"channels"],[52,4,64,94],[52,5,64,95],[52,6,64,96],[53,4,65,1,"Object"],[53,10,65,7],[53,11,65,8,"defineProperty"],[53,25,65,22],[53,26,65,23,"convert"],[53,33,65,30],[53,34,65,31,"fromModel"],[53,43,65,40],[53,44,65,41],[53,46,65,43],[53,54,65,51],[53,56,65,53],[54,6,65,54,"value"],[54,11,65,59],[54,13,65,61,"_$$_REQUIRE"],[54,24,65,61],[54,25,65,61,"_dependencyMap"],[54,39,65,61],[54,61,65,73,"fromModel"],[54,70,65,82],[54,71,65,83],[54,72,65,84,"labels"],[55,4,65,90],[55,5,65,91],[55,6,65,92],[56,4,67,1],[56,8,67,5,"routes"],[56,14,67,11],[56,17,67,14,"_$$_REQUIRE"],[56,28,67,14],[56,29,67,14,"_dependencyMap"],[56,43,67,14],[56,59,67,20,"fromModel"],[56,68,67,29],[56,69,67,30],[57,4,68,1],[57,8,68,5,"routeModels"],[57,19,68,16],[57,22,68,19,"Object"],[57,28,68,25],[57,29,68,26,"keys"],[57,33,68,30],[57,34,68,31,"routes"],[57,40,68,37],[57,41,68,38],[58,4,70,1,"routeModels"],[58,15,70,12],[58,16,70,13,"forEach"],[58,23,70,20],[58,24,70,21],[58,34,70,31,"toModel"],[58,41,70,38],[58,43,70,40],[59,6,71,2],[59,10,71,6,"fn"],[59,12,71,8],[59,15,71,11,"routes"],[59,21,71,17],[59,22,71,18,"toModel"],[59,29,71,25],[59,30,71,26],[60,6,73,2,"convert"],[60,13,73,9],[60,14,73,10,"fromModel"],[60,23,73,19],[60,24,73,20],[60,25,73,21,"toModel"],[60,32,73,28],[60,33,73,29],[60,36,73,32,"wrapRounded"],[60,47,73,43],[60,48,73,44,"fn"],[60,50,73,46],[60,51,73,47],[61,6,74,2,"convert"],[61,13,74,9],[61,14,74,10,"fromModel"],[61,23,74,19],[61,24,74,20],[61,25,74,21,"toModel"],[61,32,74,28],[61,33,74,29],[61,34,74,30,"raw"],[61,37,74,33],[61,40,74,36,"wrapRaw"],[61,47,74,43],[61,48,74,44,"fn"],[61,50,74,46],[61,51,74,47],[62,4,75,1],[62,5,75,2],[62,6,75,3],[63,2,76,0],[63,3,76,1],[63,4,76,2],[64,2,78,0,"module"],[64,8,78,6],[64,9,78,7,"exports"],[64,16,78,14],[64,19,78,17,"convert"],[64,26,78,24],[65,0,78,25],[65,3]],"functionMap":{"names":["<global>","wrapRaw","wrappedFn","wrapRounded","models.forEach$argument_0","routeModels.forEach$argument_0"],"mappings":"AAA;ACO;iBCC;EDU;CDQ;AGE;iBDC;ECqB;CHQ;eIE;qBCS;EDK;CJC"}},"type":"js/module"}]}