{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"X490zePjq+0IljAc8X0qcBg0iTo="}},{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":31,"index":31}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":32},"end":{"line":7,"column":22,"index":133}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"../RNGestureHandlerModule","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":201},"end":{"line":9,"column":63,"index":264}}],"key":"bY7FGgfi8WGOEKHKyXsenNEOYXM="}},{"name":"../findNodeHandle","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":24,"column":0,"index":650},"end":{"line":24,"column":47,"index":697}}],"key":"xyNSnMFPN/DtDOjbkd/LduwteJ8="}},{"name":"../GestureHandlerRootViewContext","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":35,"column":0,"index":940},"end":{"line":35,"column":77,"index":1017}}],"key":"4dFi+SgkqvO8MS5HEh2OcvBDODc="}},{"name":"react/jsx-runtime","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":572,"column":0,"index":19471}}],"key":"3suYSPX9nHbHZ1xNTsKXtKj0atE="}},{"name":"./customDirectEventTypes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":134},"end":{"line":8,"column":66,"index":200}}],"key":"Ma+NL+aygNje9FkYPbYorogBWdc="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}},{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}},{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}},{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}},{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}},{"start":{"line":26,"column":0,"index":738},"end":{"line":32,"column":18,"index":830}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps="}},{"name":"../State","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}},{"start":{"line":10,"column":0,"index":265},"end":{"line":10,"column":33,"index":298}}],"key":"ISRoyBmrsYyTcSqLDCBIFNoRZWE="}},{"name":"./getNextHandlerTag","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":16,"column":0,"index":415},"end":{"line":16,"column":56,"index":471}}],"key":"ASeSN4ZNwd93et71FExQyqcEKrQ="}},{"name":"../ActionType","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}},{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}},{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}},{"start":{"line":33,"column":0,"index":831},"end":{"line":33,"column":43,"index":874}}],"key":"9/RyJNk4Ge0yFKi3o3v4pSn63xw="}},{"name":"./handlersRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}},{"start":{"line":11,"column":0,"index":299},"end":{"line":15,"column":28,"index":414}}],"key":"icHMSVIKxbHLSdF6K64ideInyBg="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}},{"start":{"line":23,"column":0,"index":585},"end":{"line":23,"column":64,"index":649}}],"key":"fIqjJ6Rx8c7Khc/wm9kX7hQXC5I="}},{"name":"../ghQueueMicrotask","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}},{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}},{"start":{"line":36,"column":0,"index":1018},"end":{"line":36,"column":55,"index":1073}}],"key":"Ty3ERJQ4RajY8XDWg1+a8wq7RdE="}},{"name":"../mountRegistry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}},{"start":{"line":37,"column":0,"index":1074},"end":{"line":37,"column":49,"index":1123}}],"key":"oDeWMahf4tOBx8qk8Rg2qrQUZVM="}},{"name":"./PressabilityDebugView","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":34,"column":0,"index":875},"end":{"line":34,"column":64,"index":939}}],"key":"xiOM100qt13MoYC/wKaLkt2GEAw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/defineProperty\"));\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../RNGestureHandlerModule\"));\n  var _findNodeHandle = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"../findNodeHandle\"));\n  var _GestureHandlerRootViewContext = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"../GestureHandlerRootViewContext\"));\n  var _jsxRuntime = _$$_REQUIRE(_dependencyMap[13], \"react/jsx-runtime\");\n  var _jsxFileName = \"/Users/chris/Desktop/Development/BlueWallet/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx\";\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var UIManagerAny = _reactNative.UIManager;\n  _$$_REQUIRE(_dependencyMap[14], \"./customDirectEventTypes\").customDirectEventTypes.topGestureHandlerEvent = {\n    registrationName: 'onGestureHandlerEvent'\n  };\n  var customGHEventsConfigFabricAndroid = {\n    topOnGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    topOnGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  var customGHEventsConfig = Object.assign({\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  }, (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isFabric)() && _reactNative.Platform.OS === 'android' && customGHEventsConfigFabricAndroid);\n\n  // Add gesture specific events to genericDirectEventTypes object exported from UIManager\n  // native module.\n  // Once new event types are registered with react it is possible to dispatch these\n  // events to all kind of native views.\n  UIManagerAny.genericDirectEventTypes = Object.assign({}, UIManagerAny.genericDirectEventTypes, customGHEventsConfig);\n  var UIManagerConstants = UIManagerAny.getViewManagerConfig == null ? void 0 : UIManagerAny.getViewManagerConfig('getConstants');\n  if (UIManagerConstants) {\n    UIManagerConstants.genericDirectEventTypes = Object.assign({}, UIManagerConstants.genericDirectEventTypes, customGHEventsConfig);\n  }\n\n  // Wrap JS responder calls and notify gesture handler manager\n  var _UIManagerAny$setJSRe = UIManagerAny.setJSResponder,\n    oldSetJSResponder = _UIManagerAny$setJSRe === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$setJSRe,\n    _UIManagerAny$clearJS = UIManagerAny.clearJSResponder,\n    oldClearJSResponder = _UIManagerAny$clearJS === void 0 ? function () {\n      // no-op\n    } : _UIManagerAny$clearJS;\n  UIManagerAny.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n  UIManagerAny.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n    oldClearJSResponder();\n  };\n  var allowTouches = true;\n  var DEV_ON_ANDROID = __DEV__ && _reactNative.Platform.OS === 'android';\n  // Toggled inspector blocks touch events in order to allow inspecting on Android\n  // This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\n  if (DEV_ON_ANDROID) {\n    _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n      allowTouches = !allowTouches;\n    });\n  }\n  function hasUnresolvedRefs(props) {\n    // TODO(TS) - add type for extract arg\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n  var stateToPropMappings = (0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)((0, _defineProperty2.default)({}, _$$_REQUIRE(_dependencyMap[16], \"../State\").State.UNDETERMINED, undefined), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.BEGAN, 'onBegan'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.FAILED, 'onFailed'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.CANCELLED, 'onCancelled'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.ACTIVE, 'onActivated'), _$$_REQUIRE(_dependencyMap[16], \"../State\").State.END, 'onEnded');\n\n  // TODO(TS) fix event types\n\n  var UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n  // TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\n  function createHandler(_ref) {\n    var name = _ref.name,\n      _ref$allowedProps = _ref.allowedProps,\n      allowedProps = _ref$allowedProps === void 0 ? [] : _ref$allowedProps,\n      _ref$config = _ref.config,\n      config = _ref$config === void 0 ? {} : _ref$config,\n      transformProps = _ref.transformProps,\n      _ref$customNativeProp = _ref.customNativeProps,\n      customNativeProps = _ref$customNativeProp === void 0 ? [] : _ref$customNativeProp;\n    var Handler = /*#__PURE__*/function (_React$Component) {\n      function Handler(props) {\n        var _this;\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = _callSuper(this, Handler, [props]);\n        _this.handlerTag = -1;\n        _this.onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onGestureEvent === 'function') {\n              _this.props.onGestureEvent == null || _this.props.onGestureEvent(event);\n            }\n          } else {\n            _this.props.onGestureHandlerEvent == null || _this.props.onGestureHandlerEvent(event);\n          }\n        };\n        // TODO(TS) - make sure this is right type for event\n        _this.onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this.handlerTag) {\n            if (typeof _this.props.onHandlerStateChange === 'function') {\n              _this.props.onHandlerStateChange == null || _this.props.onHandlerStateChange(event);\n            }\n            var state = event.nativeEvent.state;\n            var stateEventName = stateToPropMappings[state];\n            var eventHandler = stateEventName && _this.props[stateEventName];\n            if (eventHandler && typeof eventHandler === 'function') {\n              eventHandler(event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange == null || _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n        _this.refHandler = function (node) {\n          var _props;\n          _this.viewNode = node;\n          var child = React.Children.only(_this.props.children);\n          // @ts-ignore Since React 19 ref is accessible as standard prop\n          // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n          var ref = (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isReact19)() ? (_props = child.props) == null ? void 0 : _props.ref : child == null ? void 0 : child.ref;\n          if (!ref) {\n            return;\n          }\n          if (typeof ref === 'function') {\n            ref(node);\n          } else {\n            ref.current = node;\n          }\n        };\n        _this.createGestureHandler = function (newConfig) {\n          _this.handlerTag = (0, _$$_REQUIRE(_dependencyMap[17], \"./getNextHandlerTag\").getNextHandlerTag)();\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.createGestureHandler(name, _this.handlerTag, newConfig);\n        };\n        _this.attachGestureHandler = function (newViewTag) {\n          _this.viewTag = newViewTag;\n          if (_reactNative.Platform.OS === 'web') {\n            // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, _$$_REQUIRE(_dependencyMap[18], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API,\n            // ignored on web\n            _this.propsRef);\n          } else {\n            (0, _$$_REQUIRE(_dependencyMap[19], \"./handlersRegistry\").registerOldGestureHandler)(_this.handlerTag, {\n              onGestureEvent: _this.onGestureHandlerEvent,\n              onGestureStateChange: _this.onGestureHandlerStateChange\n            });\n            var actionType = function (_this$props, _this$props2) {\n              var onGestureEvent = (_this$props = _this.props) == null ? void 0 : _this$props.onGestureEvent;\n              var isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n              var onHandlerStateChange = (_this$props2 = _this.props) == null ? void 0 : _this$props2.onHandlerStateChange;\n              var isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n              var isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n              if (isReanimatedHandler) {\n                // Reanimated worklet\n                return _$$_REQUIRE(_dependencyMap[18], \"../ActionType\").ActionType.REANIMATED_WORKLET;\n              } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n                // Animated.event with useNativeDriver: true\n                return _$$_REQUIRE(_dependencyMap[18], \"../ActionType\").ActionType.NATIVE_ANIMATED_EVENT;\n              } else {\n                // JS callback or Animated.event with useNativeDriver: false\n                return _$$_REQUIRE(_dependencyMap[18], \"../ActionType\").ActionType.JS_FUNCTION_OLD_API;\n              }\n            }();\n            _RNGestureHandlerModule.default.attachGestureHandler(_this.handlerTag, newViewTag, actionType);\n          }\n          (0, _$$_REQUIRE(_dependencyMap[20], \"./utils\").scheduleFlushOperations)();\n          (0, _$$_REQUIRE(_dependencyMap[21], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n            _$$_REQUIRE(_dependencyMap[22], \"../mountRegistry\").MountRegistry.gestureHandlerWillMount(_this);\n          });\n        };\n        _this.updateGestureHandler = function (newConfig) {\n          _this.config = newConfig;\n          _RNGestureHandlerModule.default.updateGestureHandler(_this.handlerTag, newConfig);\n          (0, _$$_REQUIRE(_dependencyMap[20], \"./utils\").scheduleFlushOperations)();\n        };\n        _this.config = {};\n        _this.propsRef = React.createRef();\n        _this.isMountedRef = React.createRef();\n        _this.state = {\n          allowTouches: allowTouches\n        };\n        if (props.id) {\n          if (_$$_REQUIRE(_dependencyMap[19], \"./handlersRegistry\").handlerIDToTag[props.id] !== undefined) {\n            throw new Error(`Handler with ID \"${props.id}\" already registered`);\n          }\n          _$$_REQUIRE(_dependencyMap[19], \"./handlersRegistry\").handlerIDToTag[props.id] = _this.handlerTag;\n        }\n        return _this;\n      }\n      (0, _inherits2.default)(Handler, _React$Component);\n      return (0, _createClass2.default)(Handler, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n          var props = this.props;\n          this.isMountedRef.current = true;\n          if (DEV_ON_ANDROID) {\n            this.inspectorToggleListener = _reactNative.DeviceEventEmitter.addListener('toggleElementInspector', function () {\n              _this2.setState(function (_) {\n                return {\n                  allowTouches: allowTouches\n                };\n              });\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          if (hasUnresolvedRefs(props)) {\n            // If there are unresolved refs (e.g. \".current\" has not yet been set)\n            // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n            // _update method that will try to update native handler props using\n            // queueMicrotask. This makes it so update() function gets called after all\n            // react components are mounted and we expect the missing ref object to\n            // be resolved by then.\n            (0, _$$_REQUIRE(_dependencyMap[21], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this2.update(UNRESOLVED_REFS_RETRY_LIMIT);\n            });\n          }\n          this.createGestureHandler((0, _$$_REQUIRE(_dependencyMap[20], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config));\n          if (!this.viewNode) {\n            throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n          }\n          this.attachGestureHandler((0, _findNodeHandle.default)(this.viewNode)); // TODO(TS) - check if this can be null\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = (0, _findNodeHandle.default)(this.viewNode);\n          if (this.viewTag !== viewTag) {\n            this.attachGestureHandler(viewTag); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n          }\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          var _this$inspectorToggle;\n          (_this$inspectorToggle = this.inspectorToggleListener) == null || _this$inspectorToggle.remove();\n          this.isMountedRef.current = false;\n          if (_reactNative.Platform.OS !== 'web') {\n            (0, _$$_REQUIRE(_dependencyMap[19], \"./handlersRegistry\").unregisterOldGestureHandler)(this.handlerTag);\n          }\n          _RNGestureHandlerModule.default.dropGestureHandler(this.handlerTag);\n          (0, _$$_REQUIRE(_dependencyMap[20], \"./utils\").scheduleFlushOperations)();\n          // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n          var handlerID = this.props.id;\n          if (handlerID) {\n            // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n            delete _$$_REQUIRE(_dependencyMap[19], \"./handlersRegistry\").handlerIDToTag[handlerID];\n          }\n          _$$_REQUIRE(_dependencyMap[22], \"../mountRegistry\").MountRegistry.gestureHandlerWillUnmount(this);\n        }\n      }, {\n        key: \"update\",\n        value: function update(remainingTries) {\n          var _this3 = this;\n          if (!this.isMountedRef.current) {\n            return;\n          }\n          var props = this.props;\n\n          // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n          // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n          // again is easy enough fix.\n          if (hasUnresolvedRefs(props) && remainingTries > 0) {\n            (0, _$$_REQUIRE(_dependencyMap[21], \"../ghQueueMicrotask\").ghQueueMicrotask)(function () {\n              _this3.update(remainingTries - 1);\n            });\n          } else {\n            var newConfig = (0, _$$_REQUIRE(_dependencyMap[20], \"./utils\").filterConfig)(transformProps ? transformProps(this.props) : this.props, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n            if (!(0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").deepEqual)(this.config, newConfig)) {\n              this.updateGestureHandler(newConfig);\n            }\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = Object.assign({}, this.props, updates);\n          var newConfig = (0, _$$_REQUIRE(_dependencyMap[20], \"./utils\").filterConfig)(transformProps ? transformProps(mergedProps) : mergedProps, [].concat((0, _toConsumableArray2.default)(allowedProps), (0, _toConsumableArray2.default)(customNativeProps)), config);\n          this.updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props$testID;\n          if (__DEV__ && !this.context && !(0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isTestEnv)() && _reactNative.Platform.OS !== 'web') {\n            throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n          }\n          var gestureEventHandler = this.onGestureHandlerEvent;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props3 = this.props,\n            onGestureEvent = _this$props3.onGestureEvent,\n            onGestureHandlerEvent = _this$props3.onGestureHandlerEvent;\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureEventHandler = onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var gestureStateEventHandler = this.onGestureHandlerStateChange;\n          // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n\n          var _this$props4 = this.props,\n            onHandlerStateChange = _this$props4.onHandlerStateChange,\n            onGestureHandlerStateChange = _this$props4.onGestureHandlerStateChange;\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            // If it's not a method it should be an native Animated.event\n            // object. We set it directly as the handler for the view\n            // In this case nested handlers are not going to be supported\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n            gestureStateEventHandler = onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n          var events = {\n            onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n            onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n          };\n          this.propsRef.current = events;\n          var child = null;\n          try {\n            child = React.Children.only(this.props.children);\n          } catch (e) {\n            throw new Error((0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").tagMessage)(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n          }\n          var grandChildren = child.props.children;\n          if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = React.Children.toArray(grandChildren);\n            grandChildren.push(/*#__PURE__*/(0, _jsxRuntime.jsx)(_$$_REQUIRE(_dependencyMap[23], \"./PressabilityDebugView\").PressabilityDebugView, {\n              color: \"mediumspringgreen\",\n              hitSlop: child.props.hitSlop\n            }, \"pressabilityDebugView\"));\n          }\n          return React.cloneElement(child, Object.assign({\n            ref: this.refHandler,\n            collapsable: false\n          }, (0, _$$_REQUIRE(_dependencyMap[15], \"../utils\").isTestEnv)() ? {\n            handlerType: name,\n            handlerTag: this.handlerTag,\n            enabled: this.props.enabled\n          } : {}, {\n            testID: (_this$props$testID = this.props.testID) != null ? _this$props$testID : child.props.testID\n          }, events), grandChildren);\n        }\n      }]);\n    }(React.Component);\n    Handler.displayName = name;\n    Handler.contextType = _GestureHandlerRootViewContext.default;\n    return Handler;\n  }\n});","lineCount":390,"map":[[14,2,1,0],[14,6,1,0,"React"],[14,11,1,0],[14,14,1,0,"_interopRequireWildcard"],[14,37,1,0],[14,38,1,0,"_$$_REQUIRE"],[14,49,1,0],[14,50,1,0,"_dependencyMap"],[14,64,1,0],[15,2,2,0],[15,6,2,0,"_reactNative"],[15,18,2,0],[15,21,2,0,"_$$_REQUIRE"],[15,32,2,0],[15,33,2,0,"_dependencyMap"],[15,47,2,0],[16,2,9,0],[16,6,9,0,"_RNGestureHandlerModule"],[16,29,9,0],[16,32,9,0,"_interopRequireDefault"],[16,54,9,0],[16,55,9,0,"_$$_REQUIRE"],[16,66,9,0],[16,67,9,0,"_dependencyMap"],[16,81,9,0],[17,2,24,0],[17,6,24,0,"_findNodeHandle"],[17,21,24,0],[17,24,24,0,"_interopRequireDefault"],[17,46,24,0],[17,47,24,0,"_$$_REQUIRE"],[17,58,24,0],[17,59,24,0,"_dependencyMap"],[17,73,24,0],[18,2,35,0],[18,6,35,0,"_GestureHandlerRootViewContext"],[18,36,35,0],[18,39,35,0,"_interopRequireDefault"],[18,61,35,0],[18,62,35,0,"_$$_REQUIRE"],[18,73,35,0],[18,74,35,0,"_dependencyMap"],[18,88,35,0],[19,2,35,77],[19,6,35,77,"_jsxRuntime"],[19,17,35,77],[19,20,35,77,"_$$_REQUIRE"],[19,31,35,77],[19,32,35,77,"_dependencyMap"],[19,46,35,77],[20,2,35,77],[20,6,35,77,"_jsxFileName"],[20,18,35,77],[21,2,35,77],[21,11,35,77,"_getRequireWildcardCache"],[21,36,35,77,"e"],[21,37,35,77],[21,66,35,77,"WeakMap"],[21,73,35,77],[21,92,35,77,"r"],[21,93,35,77],[21,100,35,77,"WeakMap"],[21,107,35,77],[21,111,35,77,"t"],[21,112,35,77],[21,119,35,77,"WeakMap"],[21,126,35,77],[21,138,35,77,"_getRequireWildcardCache"],[21,162,35,77],[21,174,35,77,"_getRequireWildcardCache"],[21,199,35,77,"e"],[21,200,35,77],[21,211,35,77,"e"],[21,212,35,77],[21,215,35,77,"t"],[21,216,35,77],[21,219,35,77,"r"],[21,220,35,77],[21,225,35,77,"e"],[21,226,35,77],[22,2,35,77],[22,11,35,77,"_interopRequireWildcard"],[22,35,35,77,"e"],[22,36,35,77],[22,38,35,77,"r"],[22,39,35,77],[22,48,35,77,"r"],[22,49,35,77],[22,53,35,77,"e"],[22,54,35,77],[22,58,35,77,"e"],[22,59,35,77],[22,60,35,77,"__esModule"],[22,70,35,77],[22,79,35,77,"e"],[22,80,35,77],[22,95,35,77,"e"],[22,96,35,77],[22,119,35,77,"e"],[22,120,35,77],[22,145,35,77,"e"],[22,146,35,77],[22,157,35,77,"default"],[22,164,35,77],[22,166,35,77,"e"],[22,167,35,77],[22,175,35,77,"t"],[22,176,35,77],[22,179,35,77,"_getRequireWildcardCache"],[22,203,35,77],[22,204,35,77,"r"],[22,205,35,77],[22,212,35,77,"t"],[22,213,35,77],[22,217,35,77,"t"],[22,218,35,77],[22,219,35,77,"has"],[22,222,35,77],[22,223,35,77,"e"],[22,224,35,77],[22,234,35,77,"t"],[22,235,35,77],[22,236,35,77,"get"],[22,239,35,77],[22,240,35,77,"e"],[22,241,35,77],[22,248,35,77,"n"],[22,249,35,77],[22,254,35,77,"__proto__"],[22,263,35,77],[22,273,35,77,"a"],[22,274,35,77],[22,277,35,77,"Object"],[22,283,35,77],[22,284,35,77,"defineProperty"],[22,298,35,77],[22,302,35,77,"Object"],[22,308,35,77],[22,309,35,77,"getOwnPropertyDescriptor"],[22,333,35,77],[22,344,35,77,"u"],[22,345,35,77],[22,349,35,77,"e"],[22,350,35,77],[22,370,35,77,"u"],[22,371,35,77],[22,378,35,77,"hasOwnProperty"],[22,392,35,77],[22,393,35,77,"call"],[22,397,35,77],[22,398,35,77,"e"],[22,399,35,77],[22,401,35,77,"u"],[22,402,35,77],[22,411,35,77,"i"],[22,412,35,77],[22,415,35,77,"a"],[22,416,35,77],[22,419,35,77,"Object"],[22,425,35,77],[22,426,35,77,"getOwnPropertyDescriptor"],[22,450,35,77],[22,451,35,77,"e"],[22,452,35,77],[22,454,35,77,"u"],[22,455,35,77],[22,465,35,77,"i"],[22,466,35,77],[22,471,35,77,"i"],[22,472,35,77],[22,473,35,77,"get"],[22,476,35,77],[22,480,35,77,"i"],[22,481,35,77],[22,482,35,77,"set"],[22,485,35,77],[22,489,35,77,"Object"],[22,495,35,77],[22,496,35,77,"defineProperty"],[22,510,35,77],[22,511,35,77,"n"],[22,512,35,77],[22,514,35,77,"u"],[22,515,35,77],[22,517,35,77,"i"],[22,518,35,77],[22,522,35,77,"n"],[22,523,35,77],[22,524,35,77,"u"],[22,525,35,77],[22,529,35,77,"e"],[22,530,35,77],[22,531,35,77,"u"],[22,532,35,77],[22,544,35,77,"n"],[22,545,35,77],[22,546,35,77,"default"],[22,553,35,77],[22,556,35,77,"e"],[22,557,35,77],[22,559,35,77,"t"],[22,560,35,77],[22,564,35,77,"t"],[22,565,35,77],[22,566,35,77,"set"],[22,569,35,77],[22,570,35,77,"e"],[22,571,35,77],[22,573,35,77,"n"],[22,574,35,77],[22,577,35,77,"n"],[22,578,35,77],[23,2,35,77],[23,11,35,77,"_callSuper"],[23,22,35,77,"t"],[23,23,35,77],[23,25,35,77,"o"],[23,26,35,77],[23,28,35,77,"e"],[23,29,35,77],[23,40,35,77,"o"],[23,41,35,77],[23,48,35,77,"_getPrototypeOf2"],[23,64,35,77],[23,65,35,77,"default"],[23,72,35,77],[23,74,35,77,"o"],[23,75,35,77],[23,82,35,77,"_possibleConstructorReturn2"],[23,109,35,77],[23,110,35,77,"default"],[23,117,35,77],[23,119,35,77,"t"],[23,120,35,77],[23,122,35,77,"_isNativeReflectConstruct"],[23,147,35,77],[23,152,35,77,"Reflect"],[23,159,35,77],[23,160,35,77,"construct"],[23,169,35,77],[23,170,35,77,"o"],[23,171,35,77],[23,173,35,77,"e"],[23,174,35,77],[23,186,35,77,"_getPrototypeOf2"],[23,202,35,77],[23,203,35,77,"default"],[23,210,35,77],[23,212,35,77,"t"],[23,213,35,77],[23,215,35,77,"constructor"],[23,226,35,77],[23,230,35,77,"o"],[23,231,35,77],[23,232,35,77,"apply"],[23,237,35,77],[23,238,35,77,"t"],[23,239,35,77],[23,241,35,77,"e"],[23,242,35,77],[24,2,35,77],[24,11,35,77,"_isNativeReflectConstruct"],[24,37,35,77],[24,51,35,77,"t"],[24,52,35,77],[24,56,35,77,"Boolean"],[24,63,35,77],[24,64,35,77,"prototype"],[24,73,35,77],[24,74,35,77,"valueOf"],[24,81,35,77],[24,82,35,77,"call"],[24,86,35,77],[24,87,35,77,"Reflect"],[24,94,35,77],[24,95,35,77,"construct"],[24,104,35,77],[24,105,35,77,"Boolean"],[24,112,35,77],[24,145,35,77,"t"],[24,146,35,77],[24,159,35,77,"_isNativeReflectConstruct"],[24,184,35,77],[24,196,35,77,"_isNativeReflectConstruct"],[24,222,35,77],[24,235,35,77,"t"],[24,236,35,77],[25,2,40,0],[25,6,40,6,"UIManagerAny"],[25,18,40,18],[25,21,40,21,"UIManager"],[25,43,40,37],[26,2,42,0,"customDirectEventTypes"],[26,33,42,0],[26,34,42,0,"customDirectEventTypes"],[26,84,42,22],[26,85,42,23,"topGestureHandlerEvent"],[26,107,42,45],[26,110,42,48],[27,4,43,2,"registrationName"],[27,20,43,18],[27,22,43,20],[28,2,44,0],[28,3,44,1],[29,2,46,0],[29,6,46,6,"customGHEventsConfigFabricAndroid"],[29,39,46,39],[29,42,46,42],[30,4,47,2,"topOnGestureHandlerEvent"],[30,28,47,26],[30,30,47,28],[31,6,47,30,"registrationName"],[31,22,47,46],[31,24,47,48],[32,4,47,72],[32,5,47,73],[33,4,48,2,"topOnGestureHandlerStateChange"],[33,34,48,32],[33,36,48,34],[34,6,49,4,"registrationName"],[34,22,49,20],[34,24,49,22],[35,4,50,2],[36,2,51,0],[36,3,51,1],[37,2,53,0],[37,6,53,6,"customGHEventsConfig"],[37,26,53,26],[37,29,53,26,"Object"],[37,35,53,26],[37,36,53,26,"assign"],[37,42,53,26],[38,4,54,2,"onGestureHandlerEvent"],[38,25,54,23],[38,27,54,25],[39,6,54,27,"registrationName"],[39,22,54,43],[39,24,54,45],[40,4,54,69],[40,5,54,70],[41,4,55,2,"onGestureHandlerStateChange"],[41,31,55,29],[41,33,55,31],[42,6,56,4,"registrationName"],[42,22,56,20],[42,24,56,22],[43,4,57,2],[44,2,57,3],[44,5,67,6],[44,9,67,6,"isFabric"],[44,40,67,6],[44,41,67,6,"isFabric"],[44,61,67,14],[44,63,67,15],[44,64,67,16],[44,68,68,4,"Platform"],[44,89,68,12],[44,90,68,13,"OS"],[44,92,68,15],[44,97,68,20],[44,106,68,29],[44,110,69,4,"customGHEventsConfigFabricAndroid"],[44,143,69,37],[44,144,70,1],[46,2,72,0],[47,2,73,0],[48,2,74,0],[49,2,75,0],[50,2,76,0,"UIManagerAny"],[50,14,76,12],[50,15,76,13,"genericDirectEventTypes"],[50,38,76,36],[50,41,76,36,"Object"],[50,47,76,36],[50,48,76,36,"assign"],[50,54,76,36],[50,59,77,5,"UIManagerAny"],[50,71,77,17],[50,72,77,18,"genericDirectEventTypes"],[50,95,77,41],[50,97,78,5,"customGHEventsConfig"],[50,117,78,25],[50,118,79,1],[51,2,81,0],[51,6,81,6,"UIManagerConstants"],[51,24,81,24],[51,27,81,27,"UIManagerAny"],[51,39,81,39],[51,40,81,40,"getViewManagerConfig"],[51,60,81,60],[51,80,81,27,"UIManagerAny"],[51,92,81,39],[51,93,81,40,"getViewManagerConfig"],[51,113,81,60],[51,114,81,63],[51,128,81,77],[51,129,81,78],[52,2,83,0],[52,6,83,4,"UIManagerConstants"],[52,24,83,22],[52,26,83,24],[53,4,84,2,"UIManagerConstants"],[53,22,84,20],[53,23,84,21,"genericDirectEventTypes"],[53,46,84,44],[53,49,84,44,"Object"],[53,55,84,44],[53,56,84,44,"assign"],[53,62,84,44],[53,67,85,7,"UIManagerConstants"],[53,85,85,25],[53,86,85,26,"genericDirectEventTypes"],[53,109,85,49],[53,111,86,7,"customGHEventsConfig"],[53,131,86,27],[53,132,87,3],[54,2,88,0],[56,2,90,0],[57,2,91,0],[57,6,91,0,"_UIManagerAny$setJSRe"],[57,27,91,0],[57,30,98,4,"UIManagerAny"],[57,42,98,16],[57,43,92,2,"setJSResponder"],[57,57,92,16],[58,4,92,18,"oldSetJSResponder"],[58,21,92,35],[58,24,92,35,"_UIManagerAny$setJSRe"],[58,45,92,35],[58,59,92,38],[58,71,92,44],[59,6,93,4],[60,4,93,4],[60,5,94,3],[60,8,94,3,"_UIManagerAny$setJSRe"],[60,29,94,3],[61,4,94,3,"_UIManagerAny$clearJS"],[61,25,94,3],[61,28,98,4,"UIManagerAny"],[61,40,98,16],[61,41,95,2,"clearJSResponder"],[61,57,95,18],[62,4,95,20,"oldClearJSResponder"],[62,23,95,39],[62,26,95,39,"_UIManagerAny$clearJS"],[62,47,95,39],[62,61,95,42],[62,73,95,48],[63,6,96,4],[64,4,96,4],[64,5,97,3],[64,8,97,3,"_UIManagerAny$clearJS"],[64,29,97,3],[65,2,99,0,"UIManagerAny"],[65,14,99,12],[65,15,99,13,"setJSResponder"],[65,29,99,27],[65,32,99,30],[65,42,99,31,"tag"],[65,45,99,42],[65,47,99,44,"blockNativeResponder"],[65,67,99,73],[65,69,99,78],[66,4,100,2,"RNGestureHandlerModule"],[66,35,100,24],[66,36,100,25,"handleSetJSResponder"],[66,56,100,45],[66,57,100,46,"tag"],[66,60,100,49],[66,62,100,51,"blockNativeResponder"],[66,82,100,71],[66,83,100,72],[67,4,101,2,"oldSetJSResponder"],[67,21,101,19],[67,22,101,20,"tag"],[67,25,101,23],[67,27,101,25,"blockNativeResponder"],[67,47,101,45],[67,48,101,46],[68,2,102,0],[68,3,102,1],[69,2,103,0,"UIManagerAny"],[69,14,103,12],[69,15,103,13,"clearJSResponder"],[69,31,103,29],[69,34,103,32],[69,46,103,38],[70,4,104,2,"RNGestureHandlerModule"],[70,35,104,24],[70,36,104,25,"handleClearJSResponder"],[70,58,104,47],[70,59,104,48],[70,60,104,49],[71,4,105,2,"oldClearJSResponder"],[71,23,105,21],[71,24,105,22],[71,25,105,23],[72,2,106,0],[72,3,106,1],[73,2,108,0],[73,6,108,4,"allowTouches"],[73,18,108,16],[73,21,108,19],[73,25,108,23],[74,2,109,0],[74,6,109,6,"DEV_ON_ANDROID"],[74,20,109,20],[74,23,109,23,"__DEV__"],[74,30,109,30],[74,34,109,34,"Platform"],[74,55,109,42],[74,56,109,43,"OS"],[74,58,109,45],[74,63,109,50],[74,72,109,59],[75,2,110,0],[76,2,111,0],[77,2,112,0],[77,6,112,4,"DEV_ON_ANDROID"],[77,20,112,18],[77,22,112,20],[78,4,113,2,"DeviceEventEmitter"],[78,35,113,20],[78,36,113,21,"addListener"],[78,47,113,32],[78,48,113,33],[78,72,113,57],[78,74,113,59],[78,86,113,65],[79,6,114,4,"allowTouches"],[79,18,114,16],[79,21,114,19],[79,22,114,20,"allowTouches"],[79,34,114,32],[80,4,115,2],[80,5,115,3],[80,6,115,4],[81,2,116,0],[82,2,121,0],[82,11,121,9,"hasUnresolvedRefs"],[82,28,121,26,"hasUnresolvedRefs"],[82,29,122,2,"props"],[82,34,122,24],[82,36,123,2],[83,4,124,2],[84,4,125,2],[84,8,125,8,"extract"],[84,15,125,15],[84,18,125,18],[84,27,125,8,"extract"],[84,34,125,15,"extract"],[84,35,125,19,"refs"],[84,39,125,36],[84,41,125,41],[85,6,126,4],[85,10,126,8],[85,11,126,9,"Array"],[85,16,126,14],[85,17,126,15,"isArray"],[85,24,126,22],[85,25,126,23,"refs"],[85,29,126,27],[85,30,126,28],[85,32,126,30],[86,8,127,6],[86,15,127,13,"refs"],[86,19,127,17],[86,23,127,21,"refs"],[86,27,127,25],[86,28,127,26,"current"],[86,35,127,33],[86,40,127,38],[86,44,127,42],[87,6,128,4],[88,6,129,4],[88,13,129,11,"refs"],[88,17,129,15],[88,18,129,16,"some"],[88,22,129,20],[88,23,129,21],[88,33,129,22,"r"],[88,34,129,23],[89,8,129,23],[89,15,129,28,"r"],[89,16,129,29],[89,20,129,33,"r"],[89,21,129,34],[89,22,129,35,"current"],[89,29,129,42],[89,34,129,47],[89,38,129,51],[90,6,129,51],[90,8,129,52],[91,4,130,2],[91,5,130,3],[92,4,131,2],[92,11,131,9,"extract"],[92,18,131,16],[92,19,131,17,"props"],[92,24,131,22],[92,25,131,23],[92,47,131,45],[92,48,131,46],[92,49,131,47],[92,53,131,51,"extract"],[92,60,131,58],[92,61,131,59,"props"],[92,66,131,64],[92,67,131,65],[92,76,131,74],[92,77,131,75],[92,78,131,76],[93,2,132,0],[94,2,134,0],[94,6,134,6,"stateToPropMappings"],[94,25,134,25],[94,32,134,25,"_defineProperty2"],[94,48,134,25],[94,49,134,25,"default"],[94,56,134,25],[94,62,134,25,"_defineProperty2"],[94,78,134,25],[94,79,134,25,"default"],[94,86,134,25],[94,92,134,25,"_defineProperty2"],[94,108,134,25],[94,109,134,25,"default"],[94,116,134,25],[94,122,134,25,"_defineProperty2"],[94,138,134,25],[94,139,134,25,"default"],[94,146,134,25],[94,152,134,25,"_defineProperty2"],[94,168,134,25],[94,169,134,25,"default"],[94,176,134,25],[94,182,134,25,"_defineProperty2"],[94,198,134,25],[94,199,134,25,"default"],[94,206,134,25],[94,212,135,3,"State"],[94,243,135,3],[94,244,135,3,"State"],[94,261,135,8],[94,262,135,9,"UNDETERMINED"],[94,274,135,21],[94,276,135,24,"undefined"],[94,285,135,33],[94,288,136,3,"State"],[94,319,136,3],[94,320,136,3,"State"],[94,337,136,8],[94,338,136,9,"BEGAN"],[94,343,136,14],[94,345,136,17],[94,354,136,26],[94,357,137,3,"State"],[94,388,137,3],[94,389,137,3,"State"],[94,406,137,8],[94,407,137,9,"FAILED"],[94,413,137,15],[94,415,137,18],[94,425,137,28],[94,428,138,3,"State"],[94,459,138,3],[94,460,138,3,"State"],[94,477,138,8],[94,478,138,9,"CANCELLED"],[94,487,138,18],[94,489,138,21],[94,502,138,34],[94,505,139,3,"State"],[94,536,139,3],[94,537,139,3,"State"],[94,554,139,8],[94,555,139,9,"ACTIVE"],[94,561,139,15],[94,563,139,18],[94,576,139,31],[94,579,140,3,"State"],[94,610,140,3],[94,611,140,3,"State"],[94,628,140,8],[94,629,140,9,"END"],[94,632,140,12],[94,634,140,15],[94,643,140,24],[94,644,141,10],[96,2,152,0],[98,2,166,0],[98,6,166,6,"UNRESOLVED_REFS_RETRY_LIMIT"],[98,33,166,33],[98,36,166,36],[98,37,166,37],[100,2,168,0],[101,2,169,15],[101,11,169,24,"createHandler"],[101,24,169,37,"createHandler"],[101,25,169,37,"_ref"],[101,29,169,37],[101,31,178,76],[102,4,178,76],[102,8,173,2,"name"],[102,12,173,6],[102,15,173,6,"_ref"],[102,19,173,6],[102,20,173,2,"name"],[102,24,173,6],[103,6,173,6,"_ref$allowedProps"],[103,23,173,6],[103,26,173,6,"_ref"],[103,30,173,6],[103,31,174,2,"allowedProps"],[103,43,174,14],[104,6,174,2,"allowedProps"],[104,18,174,14],[104,21,174,14,"_ref$allowedProps"],[104,38,174,14],[104,52,174,17],[104,54,174,19],[104,57,174,19,"_ref$allowedProps"],[104,74,174,19],[105,6,174,19,"_ref$config"],[105,17,174,19],[105,20,174,19,"_ref"],[105,24,174,19],[105,25,175,2,"config"],[105,31,175,8],[106,6,175,2,"config"],[106,12,175,8],[106,15,175,8,"_ref$config"],[106,26,175,8],[106,40,175,11],[106,41,175,12],[106,42,175,13],[106,45,175,13,"_ref$config"],[106,56,175,13],[107,6,176,2,"transformProps"],[107,20,176,16],[107,23,176,16,"_ref"],[107,27,176,16],[107,28,176,2,"transformProps"],[107,42,176,16],[108,6,176,16,"_ref$customNativeProp"],[108,27,176,16],[108,30,176,16,"_ref"],[108,34,176,16],[108,35,177,2,"customNativeProps"],[108,52,177,19],[109,6,177,2,"customNativeProps"],[109,23,177,19],[109,26,177,19,"_ref$customNativeProp"],[109,47,177,19],[109,61,177,22],[109,63,177,24],[109,66,177,24,"_ref$customNativeProp"],[109,87,177,24],[110,4,177,24],[110,8,182,8,"Handler"],[110,15,182,15],[110,41,182,15,"_React$Component"],[110,57,182,15],[111,6,197,4],[111,15,197,4,"Handler"],[111,23,197,16,"props"],[111,28,197,48],[111,30,197,50],[112,8,197,50],[112,12,197,50,"_this"],[112,17,197,50],[113,8,197,50],[113,12,197,50,"_classCallCheck2"],[113,28,197,50],[113,29,197,50,"default"],[113,36,197,50],[113,44,197,50,"Handler"],[113,51,197,50],[114,8,198,6,"_this"],[114,13,198,6],[114,16,198,6,"_callSuper"],[114,26,198,6],[114,33,198,6,"Handler"],[114,40,198,6],[114,43,198,12,"props"],[114,48,198,17],[115,8,198,19,"_this"],[115,13,198,19],[115,14,189,12,"handlerTag"],[115,24,189,22],[115,27,189,25],[115,28,189,26],[115,29,189,27],[116,8,189,27,"_this"],[116,13,189,27],[116,14,279,12,"onGestureHandlerEvent"],[116,35,279,33],[116,38,279,36],[116,48,279,37,"event"],[116,53,279,59],[116,55,279,64],[117,10,280,6],[117,14,280,10,"event"],[117,19,280,15],[117,20,280,16,"nativeEvent"],[117,31,280,27],[117,32,280,28,"handlerTag"],[117,42,280,38],[117,47,280,43,"_this"],[117,52,280,43],[117,53,280,48,"handlerTag"],[117,63,280,58],[117,65,280,60],[118,12,281,8],[118,16,281,12],[118,23,281,19,"_this"],[118,28,281,19],[118,29,281,24,"props"],[118,34,281,29],[118,35,281,30,"onGestureEvent"],[118,49,281,44],[118,54,281,49],[118,64,281,59],[118,66,281,61],[119,14,282,10,"_this"],[119,19,282,10],[119,20,282,15,"props"],[119,25,282,20],[119,26,282,21,"onGestureEvent"],[119,40,282,35],[119,52,282,10,"_this"],[119,57,282,10],[119,58,282,15,"props"],[119,63,282,20],[119,64,282,21,"onGestureEvent"],[119,78,282,35],[119,79,282,38,"event"],[119,84,282,43],[119,85,282,44],[120,12,283,8],[121,10,284,6],[121,11,284,7],[121,17,284,13],[122,12,285,8,"_this"],[122,17,285,8],[122,18,285,13,"props"],[122,23,285,18],[122,24,285,19,"onGestureHandlerEvent"],[122,45,285,40],[122,57,285,8,"_this"],[122,62,285,8],[122,63,285,13,"props"],[122,68,285,18],[122,69,285,19,"onGestureHandlerEvent"],[122,90,285,40],[122,91,285,43,"event"],[122,96,285,48],[122,97,285,49],[123,10,286,6],[124,8,287,4],[124,9,287,5],[125,8,289,4],[126,8,289,4,"_this"],[126,13,289,4],[126,14,290,12,"onGestureHandlerStateChange"],[126,41,290,39],[126,44,290,42],[126,54,291,6,"event"],[126,59,291,39],[126,61,292,9],[127,10,293,6],[127,14,293,10,"event"],[127,19,293,15],[127,20,293,16,"nativeEvent"],[127,31,293,27],[127,32,293,28,"handlerTag"],[127,42,293,38],[127,47,293,43,"_this"],[127,52,293,43],[127,53,293,48,"handlerTag"],[127,63,293,58],[127,65,293,60],[128,12,294,8],[128,16,294,12],[128,23,294,19,"_this"],[128,28,294,19],[128,29,294,24,"props"],[128,34,294,29],[128,35,294,30,"onHandlerStateChange"],[128,55,294,50],[128,60,294,55],[128,70,294,65],[128,72,294,67],[129,14,295,10,"_this"],[129,19,295,10],[129,20,295,15,"props"],[129,25,295,20],[129,26,295,21,"onHandlerStateChange"],[129,46,295,41],[129,58,295,10,"_this"],[129,63,295,10],[129,64,295,15,"props"],[129,69,295,20],[129,70,295,21,"onHandlerStateChange"],[129,90,295,41],[129,91,295,44,"event"],[129,96,295,49],[129,97,295,50],[130,12,296,8],[131,12,298,8],[131,16,298,14,"state"],[131,21,298,42],[131,24,298,45,"event"],[131,29,298,50],[131,30,298,51,"nativeEvent"],[131,41,298,62],[131,42,298,63,"state"],[131,47,298,68],[132,12,299,8],[132,16,299,14,"stateEventName"],[132,30,299,28],[132,33,299,31,"stateToPropMappings"],[132,52,299,50],[132,53,299,51,"state"],[132,58,299,56],[132,59,299,57],[133,12,300,8],[133,16,300,14,"eventHandler"],[133,28,300,26],[133,31,300,29,"stateEventName"],[133,45,300,43],[133,49,300,47,"_this"],[133,54,300,47],[133,55,300,52,"props"],[133,60,300,57],[133,61,300,58,"stateEventName"],[133,75,300,72],[133,76,300,73],[134,12,301,8],[134,16,301,12,"eventHandler"],[134,28,301,24],[134,32,301,28],[134,39,301,35,"eventHandler"],[134,51,301,47],[134,56,301,52],[134,66,301,62],[134,68,301,64],[135,14,302,10,"eventHandler"],[135,26,302,22],[135,27,302,23,"event"],[135,32,302,28],[135,33,302,29],[136,12,303,8],[137,10,304,6],[137,11,304,7],[137,17,304,13],[138,12,305,8,"_this"],[138,17,305,8],[138,18,305,13,"props"],[138,23,305,18],[138,24,305,19,"onGestureHandlerStateChange"],[138,51,305,46],[138,63,305,8,"_this"],[138,68,305,8],[138,69,305,13,"props"],[138,74,305,18],[138,75,305,19,"onGestureHandlerStateChange"],[138,102,305,46],[138,103,305,49,"event"],[138,108,305,54],[138,109,305,55],[139,10,306,6],[140,8,307,4],[140,9,307,5],[141,8,307,5,"_this"],[141,13,307,5],[141,14,309,12,"refHandler"],[141,24,309,22],[141,27,309,25],[141,37,309,26,"node"],[141,41,309,35],[141,43,309,40],[142,10,309,40],[142,14,309,40,"_props"],[142,20,309,40],[143,10,310,6,"_this"],[143,15,310,6],[143,16,310,11,"viewNode"],[143,24,310,19],[143,27,310,22,"node"],[143,31,310,26],[144,10,312,6],[144,14,312,12,"child"],[144,19,312,17],[144,22,312,20,"React"],[144,27,312,25],[144,28,312,26,"Children"],[144,36,312,34],[144,37,312,35,"only"],[144,41,312,39],[144,42,312,40,"_this"],[144,47,312,40],[144,48,312,45,"props"],[144,53,312,50],[144,54,312,51,"children"],[144,62,312,59],[144,63,312,60],[145,10,313,6],[146,10,314,6],[147,10,315,6],[147,14,315,12,"ref"],[147,17,315,15],[147,20,315,18],[147,24,315,18,"isReact19"],[147,55,315,18],[147,56,315,18,"isReact19"],[147,77,315,27],[147,79,315,28],[147,80,315,29],[147,84,315,29,"_props"],[147,90,315,29],[147,93,315,33,"child"],[147,98,315,38],[147,99,315,56,"props"],[147,104,315,61],[147,125,315,32,"_props"],[147,131,315,32],[147,132,315,63,"ref"],[147,135,315,66],[147,138,315,69,"child"],[147,143,315,74],[147,163,315,69,"child"],[147,168,315,74],[147,169,315,76,"ref"],[147,172,315,79],[148,10,317,6],[148,14,317,10],[148,15,317,11,"ref"],[148,18,317,14],[148,20,317,16],[149,12,318,8],[150,10,319,6],[151,10,321,6],[151,14,321,10],[151,21,321,17,"ref"],[151,24,321,20],[151,29,321,25],[151,39,321,35],[151,41,321,37],[152,12,322,8,"ref"],[152,15,322,11],[152,16,322,12,"node"],[152,20,322,16],[152,21,322,17],[153,10,323,6],[153,11,323,7],[153,17,323,13],[154,12,324,8,"ref"],[154,15,324,11],[154,16,324,12,"current"],[154,23,324,19],[154,26,324,22,"node"],[154,30,324,26],[155,10,325,6],[156,8,326,4],[156,9,326,5],[157,8,326,5,"_this"],[157,13,326,5],[157,14,328,12,"createGestureHandler"],[157,34,328,32],[157,37,328,35],[157,47,329,6,"newConfig"],[157,56,329,50],[157,58,330,9],[158,10,331,6,"_this"],[158,15,331,6],[158,16,331,11,"handlerTag"],[158,26,331,21],[158,29,331,24],[158,33,331,24,"getNextHandlerTag"],[158,64,331,24],[158,65,331,24,"getNextHandlerTag"],[158,105,331,41],[158,107,331,42],[158,108,331,43],[159,10,332,6,"_this"],[159,15,332,6],[159,16,332,11,"config"],[159,22,332,17],[159,25,332,20,"newConfig"],[159,34,332,29],[160,10,334,6,"RNGestureHandlerModule"],[160,41,334,28],[160,42,334,29,"createGestureHandler"],[160,62,334,49],[160,63,335,8,"name"],[160,67,335,12],[160,69,336,8,"_this"],[160,74,336,8],[160,75,336,13,"handlerTag"],[160,85,336,23],[160,87,337,8,"newConfig"],[160,96,338,6],[160,97,338,7],[161,8,339,4],[161,9,339,5],[162,8,339,5,"_this"],[162,13,339,5],[162,14,341,12,"attachGestureHandler"],[162,34,341,32],[162,37,341,35],[162,47,341,36,"newViewTag"],[162,57,341,54],[162,59,341,59],[163,10,342,6,"_this"],[163,15,342,6],[163,16,342,11,"viewTag"],[163,23,342,18],[163,26,342,21,"newViewTag"],[163,36,342,31],[164,10,344,6],[164,14,344,10,"Platform"],[164,35,344,18],[164,36,344,19,"OS"],[164,38,344,21],[164,43,344,26],[164,48,344,31],[164,50,344,33],[165,12,345,8],[166,12,347,10,"RNGestureHandlerModule"],[166,43,347,32],[166,44,347,33,"attachGestureHandler"],[166,64,347,53],[166,65,349,10,"_this"],[166,70,349,10],[166,71,349,15,"handlerTag"],[166,81,349,25],[166,83,350,10,"newViewTag"],[166,93,350,20],[166,95,351,10,"ActionType"],[166,126,351,10],[166,127,351,10,"ActionType"],[166,154,351,20],[166,155,351,21,"JS_FUNCTION_OLD_API"],[166,174,351,40],[167,12,351,42],[168,12,352,10,"_this"],[168,17,352,10],[168,18,352,15,"propsRef"],[168,26,353,8],[168,27,353,9],[169,10,354,6],[169,11,354,7],[169,17,354,13],[170,12,355,8],[170,16,355,8,"registerOldGestureHandler"],[170,47,355,8],[170,48,355,8,"registerOldGestureHandler"],[170,95,355,33],[170,97,355,34,"_this"],[170,102,355,34],[170,103,355,39,"handlerTag"],[170,113,355,49],[170,115,355,51],[171,14,356,10,"onGestureEvent"],[171,28,356,24],[171,30,356,26,"_this"],[171,35,356,26],[171,36,356,31,"onGestureHandlerEvent"],[171,57,356,52],[172,14,357,10,"onGestureStateChange"],[172,34,357,30],[172,36,357,32,"_this"],[172,41,357,32],[172,42,357,37,"onGestureHandlerStateChange"],[173,12,358,8],[173,13,358,9],[173,14,358,10],[174,12,360,8],[174,16,360,14,"actionType"],[174,26,360,24],[174,29,360,28],[174,39,360,28,"_this$props"],[174,50,360,28],[174,52,360,28,"_this$props2"],[174,64,360,28],[174,66,360,34],[175,14,361,10],[175,18,361,16,"onGestureEvent"],[175,32,361,30],[175,36,361,30,"_this$props"],[175,47,361,30],[175,50,361,33,"_this"],[175,55,361,33],[175,56,361,38,"props"],[175,61,361,43],[175,82,361,33,"_this$props"],[175,93,361,33],[175,94,361,45,"onGestureEvent"],[175,108,361,59],[176,14,362,10],[176,18,362,16,"isGestureHandlerWorklet"],[176,41,362,39],[176,44,363,12,"onGestureEvent"],[176,58,363,26],[176,63,364,13],[176,72,364,22],[176,76,364,26,"onGestureEvent"],[176,90,364,40],[176,94,365,14],[176,115,365,35],[176,119,365,39,"onGestureEvent"],[176,133,365,53],[176,134,365,54],[177,14,366,10],[177,18,366,16,"onHandlerStateChange"],[177,38,366,36],[177,42,366,36,"_this$props2"],[177,54,366,36],[177,57,366,39,"_this"],[177,62,366,39],[177,63,366,44,"props"],[177,68,366,49],[177,89,366,39,"_this$props2"],[177,101,366,39],[177,102,366,51,"onHandlerStateChange"],[177,122,366,71],[178,14,367,10],[178,18,367,16,"isStateChangeHandlerWorklet"],[178,45,367,43],[178,48,368,12,"onHandlerStateChange"],[178,68,368,32],[178,73,369,13],[178,82,369,22],[178,86,369,26,"onHandlerStateChange"],[178,106,369,46],[178,110,370,14],[178,131,370,35],[178,135,370,39,"onHandlerStateChange"],[178,155,370,59],[178,156,370,60],[179,14,371,10],[179,18,371,16,"isReanimatedHandler"],[179,37,371,35],[179,40,372,12,"isGestureHandlerWorklet"],[179,63,372,35],[179,67,372,39,"isStateChangeHandlerWorklet"],[179,94,372,66],[180,14,373,10],[180,18,373,14,"isReanimatedHandler"],[180,37,373,33],[180,39,373,35],[181,16,374,12],[182,16,375,12],[182,23,375,19,"ActionType"],[182,54,375,19],[182,55,375,19,"ActionType"],[182,82,375,29],[182,83,375,30,"REANIMATED_WORKLET"],[182,101,375,48],[183,14,376,10],[183,15,376,11],[183,21,376,17],[183,25,376,21,"onGestureEvent"],[183,39,376,35],[183,43,376,39],[183,55,376,51],[183,59,376,55,"onGestureEvent"],[183,73,376,69],[183,75,376,71],[184,16,377,12],[185,16,378,12],[185,23,378,19,"ActionType"],[185,54,378,19],[185,55,378,19,"ActionType"],[185,82,378,29],[185,83,378,30,"NATIVE_ANIMATED_EVENT"],[185,104,378,51],[186,14,379,10],[186,15,379,11],[186,21,379,17],[187,16,380,12],[188,16,381,12],[188,23,381,19,"ActionType"],[188,54,381,19],[188,55,381,19,"ActionType"],[188,82,381,29],[188,83,381,30,"JS_FUNCTION_OLD_API"],[188,102,381,49],[189,14,382,10],[190,12,383,8],[190,13,383,9],[190,14,383,11],[190,15,383,12],[191,12,385,8,"RNGestureHandlerModule"],[191,43,385,30],[191,44,385,31,"attachGestureHandler"],[191,64,385,51],[191,65,386,10,"_this"],[191,70,386,10],[191,71,386,15,"handlerTag"],[191,81,386,25],[191,83,387,10,"newViewTag"],[191,93,387,20],[191,95,388,10,"actionType"],[191,105,389,8],[191,106,389,9],[192,10,390,6],[193,10,392,6],[193,14,392,6,"scheduleFlushOperations"],[193,45,392,6],[193,46,392,6,"scheduleFlushOperations"],[193,80,392,29],[193,82,392,30],[193,83,392,31],[194,10,394,6],[194,14,394,6,"ghQueueMicrotask"],[194,45,394,6],[194,46,394,6,"ghQueueMicrotask"],[194,85,394,22],[194,87,394,23],[194,99,394,29],[195,12,395,8,"MountRegistry"],[195,43,395,8],[195,44,395,8,"MountRegistry"],[195,77,395,21],[195,78,395,22,"gestureHandlerWillMount"],[195,101,395,45],[195,102,395,45,"_this"],[195,107,395,50],[195,108,395,51],[196,10,396,6],[196,11,396,7],[196,12,396,8],[197,8,397,4],[197,9,397,5],[198,8,397,5,"_this"],[198,13,397,5],[198,14,399,12,"updateGestureHandler"],[198,34,399,32],[198,37,399,35],[198,47,400,6,"newConfig"],[198,56,400,50],[198,58,401,9],[199,10,402,6,"_this"],[199,15,402,6],[199,16,402,11,"config"],[199,22,402,17],[199,25,402,20,"newConfig"],[199,34,402,29],[200,10,404,6,"RNGestureHandlerModule"],[200,41,404,28],[200,42,404,29,"updateGestureHandler"],[200,62,404,49],[200,63,404,50,"_this"],[200,68,404,50],[200,69,404,55,"handlerTag"],[200,79,404,65],[200,81,404,67,"newConfig"],[200,90,404,76],[200,91,404,77],[201,10,405,6],[201,14,405,6,"scheduleFlushOperations"],[201,45,405,6],[201,46,405,6,"scheduleFlushOperations"],[201,80,405,29],[201,82,405,30],[201,83,405,31],[202,8,406,4],[202,9,406,5],[203,8,199,6,"_this"],[203,13,199,6],[203,14,199,11,"config"],[203,20,199,17],[203,23,199,20],[203,24,199,21],[203,25,199,22],[204,8,200,6,"_this"],[204,13,200,6],[204,14,200,11,"propsRef"],[204,22,200,19],[204,25,200,22,"React"],[204,30,200,27],[204,31,200,28,"createRef"],[204,40,200,37],[204,41,200,38],[204,42,200,39],[205,8,201,6,"_this"],[205,13,201,6],[205,14,201,11,"isMountedRef"],[205,26,201,23],[205,29,201,26,"React"],[205,34,201,31],[205,35,201,32,"createRef"],[205,44,201,41],[205,45,201,42],[205,46,201,43],[206,8,202,6,"_this"],[206,13,202,6],[206,14,202,11,"state"],[206,19,202,16],[206,22,202,19],[207,10,202,21,"allowTouches"],[207,22,202,33],[207,24,202,21,"allowTouches"],[208,8,202,34],[208,9,202,35],[209,8,203,6],[209,12,203,10,"props"],[209,17,203,15],[209,18,203,16,"id"],[209,20,203,18],[209,22,203,20],[210,10,204,8],[210,14,204,12,"handlerIDToTag"],[210,45,204,12],[210,46,204,12,"handlerIDToTag"],[210,82,204,26],[210,83,204,27,"props"],[210,88,204,32],[210,89,204,33,"id"],[210,91,204,35],[210,92,204,36],[210,97,204,41,"undefined"],[210,106,204,50],[210,108,204,52],[211,12,205,10],[211,18,205,16],[211,22,205,20,"Error"],[211,27,205,25],[211,28,205,26],[211,48,205,46,"props"],[211,53,205,51],[211,54,205,52,"id"],[211,56,205,54],[211,78,205,76],[211,79,205,77],[212,10,206,8],[213,10,207,8,"handlerIDToTag"],[213,41,207,8],[213,42,207,8,"handlerIDToTag"],[213,78,207,22],[213,79,207,23,"props"],[213,84,207,28],[213,85,207,29,"id"],[213,87,207,31],[213,88,207,32],[213,91,207,35,"_this"],[213,96,207,35],[213,97,207,40,"handlerTag"],[213,107,207,50],[214,8,208,6],[215,8,208,7],[215,15,208,7,"_this"],[215,20,208,7],[216,6,209,4],[217,6,209,5],[217,10,209,5,"_inherits2"],[217,20,209,5],[217,21,209,5,"default"],[217,28,209,5],[217,30,209,5,"Handler"],[217,37,209,5],[217,39,209,5,"_React$Component"],[217,55,209,5],[218,6,209,5],[218,17,209,5,"_createClass2"],[218,30,209,5],[218,31,209,5,"default"],[218,38,209,5],[218,40,209,5,"Handler"],[218,47,209,5],[219,8,209,5,"key"],[219,11,209,5],[220,8,209,5,"value"],[220,13,209,5],[220,15,211,4],[220,24,211,4,"componentDidMount"],[220,41,211,21,"componentDidMount"],[220,42,211,21],[220,44,211,24],[221,10,211,24],[221,14,211,24,"_this2"],[221,20,211,24],[222,10,212,6],[222,14,212,12,"props"],[222,19,212,34],[222,22,212,37],[222,26,212,41],[222,27,212,42,"props"],[222,32,212,47],[223,10,213,6],[223,14,213,10],[223,15,213,11,"isMountedRef"],[223,27,213,23],[223,28,213,24,"current"],[223,35,213,31],[223,38,213,34],[223,42,213,38],[224,10,215,6],[224,14,215,10,"DEV_ON_ANDROID"],[224,28,215,24],[224,30,215,26],[225,12,216,8],[225,16,216,12],[225,17,216,13,"inspectorToggleListener"],[225,40,216,36],[225,43,216,39,"DeviceEventEmitter"],[225,74,216,57],[225,75,216,58,"addListener"],[225,86,216,69],[225,87,217,10],[225,111,217,34],[225,113,218,10],[225,125,218,16],[226,14,219,12,"_this2"],[226,20,219,16],[226,21,219,17,"setState"],[226,29,219,25],[226,30,219,26],[226,40,219,27,"_"],[226,41,219,28],[227,16,219,28],[227,23,219,34],[228,18,219,36,"allowTouches"],[228,30,219,48],[228,32,219,36,"allowTouches"],[229,16,219,49],[229,17,219,50],[230,14,219,50],[230,15,219,51],[230,16,219,52],[231,14,220,12,"_this2"],[231,20,220,16],[231,21,220,17,"update"],[231,27,220,23],[231,28,220,24,"UNRESOLVED_REFS_RETRY_LIMIT"],[231,55,220,51],[231,56,220,52],[232,12,221,10],[232,13,222,8],[232,14,222,9],[233,10,223,6],[234,10,224,6],[234,14,224,10,"hasUnresolvedRefs"],[234,31,224,27],[234,32,224,28,"props"],[234,37,224,33],[234,38,224,34],[234,40,224,36],[235,12,225,8],[236,12,226,8],[237,12,227,8],[238,12,228,8],[239,12,229,8],[240,12,230,8],[241,12,231,8],[241,16,231,8,"ghQueueMicrotask"],[241,47,231,8],[241,48,231,8,"ghQueueMicrotask"],[241,87,231,24],[241,89,231,25],[241,101,231,31],[242,14,232,10,"_this2"],[242,20,232,14],[242,21,232,15,"update"],[242,27,232,21],[242,28,232,22,"UNRESOLVED_REFS_RETRY_LIMIT"],[242,55,232,49],[242,56,232,50],[243,12,233,8],[243,13,233,9],[243,14,233,10],[244,10,234,6],[245,10,236,6],[245,14,236,10],[245,15,236,11,"createGestureHandler"],[245,35,236,31],[245,36,237,8],[245,40,237,8,"filterConfig"],[245,71,237,8],[245,72,237,8,"filterConfig"],[245,95,237,20],[245,97,238,10,"transformProps"],[245,111,238,24],[245,114,238,27,"transformProps"],[245,128,238,41],[245,129,238,42],[245,133,238,46],[245,134,238,47,"props"],[245,139,238,52],[245,140,238,53],[245,143,238,56],[245,147,238,60],[245,148,238,61,"props"],[245,153,238,66],[245,158,238,66,"concat"],[245,164,238,66],[245,169,238,66,"_toConsumableArray2"],[245,188,238,66],[245,189,238,66,"default"],[245,196,238,66],[245,198,239,14,"allowedProps"],[245,210,239,26],[245,217,239,26,"_toConsumableArray2"],[245,236,239,26],[245,237,239,26,"default"],[245,244,239,26],[245,246,239,31,"customNativeProps"],[245,263,239,48],[245,267,240,10,"config"],[245,273,241,8],[245,274,242,6],[245,275,242,7],[246,10,244,6],[246,14,244,10],[246,15,244,11],[246,19,244,15],[246,20,244,16,"viewNode"],[246,28,244,24],[246,30,244,26],[247,12,245,8],[247,18,245,14],[247,22,245,18,"Error"],[247,27,245,23],[247,28,246,10],[247,75,246,57,"Handler"],[247,82,246,64],[247,83,246,65,"displayName"],[247,94,246,76],[247,154,247,8],[247,155,247,9],[248,10,248,6],[249,10,250,6],[249,14,250,10],[249,15,250,11,"attachGestureHandler"],[249,35,250,31],[249,36,250,32],[249,40,250,32,"findNodeHandle"],[249,63,250,46],[249,65,250,47],[249,69,250,51],[249,70,250,52,"viewNode"],[249,78,250,60],[249,79,250,71],[249,80,250,72],[249,81,250,73],[249,82,250,74],[250,8,251,4],[251,6,251,5],[252,8,251,5,"key"],[252,11,251,5],[253,8,251,5,"value"],[253,13,251,5],[253,15,253,4],[253,24,253,4,"componentDidUpdate"],[253,42,253,22,"componentDidUpdate"],[253,43,253,22],[253,45,253,25],[254,10,254,6],[254,14,254,12,"viewTag"],[254,21,254,19],[254,24,254,22],[254,28,254,22,"findNodeHandle"],[254,51,254,36],[254,53,254,37],[254,57,254,41],[254,58,254,42,"viewNode"],[254,66,254,50],[254,67,254,51],[255,10,255,6],[255,14,255,10],[255,18,255,14],[255,19,255,15,"viewTag"],[255,26,255,22],[255,31,255,27,"viewTag"],[255,38,255,34],[255,40,255,36],[256,12,256,8],[256,16,256,12],[256,17,256,13,"attachGestureHandler"],[256,37,256,33],[256,38,256,34,"viewTag"],[256,45,256,51],[256,46,256,52],[256,47,256,53],[256,48,256,54],[257,10,257,6],[258,10,258,6],[258,14,258,10],[258,15,258,11,"update"],[258,21,258,17],[258,22,258,18,"UNRESOLVED_REFS_RETRY_LIMIT"],[258,49,258,45],[258,50,258,46],[259,8,259,4],[260,6,259,5],[261,8,259,5,"key"],[261,11,259,5],[262,8,259,5,"value"],[262,13,259,5],[262,15,261,4],[262,24,261,4,"componentWillUnmount"],[262,44,261,24,"componentWillUnmount"],[262,45,261,24],[262,47,261,27],[263,10,261,27],[263,14,261,27,"_this$inspectorToggle"],[263,35,261,27],[264,10,262,6],[264,11,262,6,"_this$inspectorToggle"],[264,32,262,6],[264,39,262,10],[264,40,262,11,"inspectorToggleListener"],[264,63,262,34],[264,76,262,6,"_this$inspectorToggle"],[264,97,262,6],[264,98,262,36,"remove"],[264,104,262,42],[264,105,262,43],[264,106,262,44],[265,10,263,6],[265,14,263,10],[265,15,263,11,"isMountedRef"],[265,27,263,23],[265,28,263,24,"current"],[265,35,263,31],[265,38,263,34],[265,43,263,39],[266,10,264,6],[266,14,264,10,"Platform"],[266,35,264,18],[266,36,264,19,"OS"],[266,38,264,21],[266,43,264,26],[266,48,264,31],[266,50,264,33],[267,12,265,8],[267,16,265,8,"unregisterOldGestureHandler"],[267,47,265,8],[267,48,265,8,"unregisterOldGestureHandler"],[267,97,265,35],[267,99,265,36],[267,103,265,40],[267,104,265,41,"handlerTag"],[267,114,265,51],[267,115,265,52],[268,10,266,6],[269,10,267,6,"RNGestureHandlerModule"],[269,41,267,28],[269,42,267,29,"dropGestureHandler"],[269,60,267,47],[269,61,267,48],[269,65,267,52],[269,66,267,53,"handlerTag"],[269,76,267,63],[269,77,267,64],[270,10,268,6],[270,14,268,6,"scheduleFlushOperations"],[270,45,268,6],[270,46,268,6,"scheduleFlushOperations"],[270,80,268,29],[270,82,268,30],[270,83,268,31],[271,10,269,6],[272,10,270,6],[272,14,270,12,"handlerID"],[272,23,270,41],[272,26,270,44],[272,30,270,48],[272,31,270,49,"props"],[272,36,270,54],[272,37,270,55,"id"],[272,39,270,57],[273,10,271,6],[273,14,271,10,"handlerID"],[273,23,271,19],[273,25,271,21],[274,12,272,8],[275,12,273,8],[275,19,273,15,"handlerIDToTag"],[275,50,273,15],[275,51,273,15,"handlerIDToTag"],[275,87,273,29],[275,88,273,30,"handlerID"],[275,97,273,39],[275,98,273,40],[276,10,274,6],[277,10,276,6,"MountRegistry"],[277,41,276,6],[277,42,276,6,"MountRegistry"],[277,75,276,19],[277,76,276,20,"gestureHandlerWillUnmount"],[277,101,276,45],[277,102,276,46],[277,106,276,50],[277,107,276,51],[278,8,277,4],[279,6,277,5],[280,8,277,5,"key"],[280,11,277,5],[281,8,277,5,"value"],[281,13,277,5],[281,15,408,4],[281,24,408,12,"update"],[281,30,408,18,"update"],[281,31,408,19,"remainingTries"],[281,45,408,41],[281,47,408,43],[282,10,408,43],[282,14,408,43,"_this3"],[282,20,408,43],[283,10,409,6],[283,14,409,10],[283,15,409,11],[283,19,409,15],[283,20,409,16,"isMountedRef"],[283,32,409,28],[283,33,409,29,"current"],[283,40,409,36],[283,42,409,38],[284,12,410,8],[285,10,411,6],[286,10,413,6],[286,14,413,12,"props"],[286,19,413,34],[286,22,413,37],[286,26,413,41],[286,27,413,42,"props"],[286,32,413,47],[288,10,415,6],[289,10,416,6],[290,10,417,6],[291,10,418,6],[291,14,418,10,"hasUnresolvedRefs"],[291,31,418,27],[291,32,418,28,"props"],[291,37,418,33],[291,38,418,34],[291,42,418,38,"remainingTries"],[291,56,418,52],[291,59,418,55],[291,60,418,56],[291,62,418,58],[292,12,419,8],[292,16,419,8,"ghQueueMicrotask"],[292,47,419,8],[292,48,419,8,"ghQueueMicrotask"],[292,87,419,24],[292,89,419,25],[292,101,419,31],[293,14,420,10,"_this3"],[293,20,420,14],[293,21,420,15,"update"],[293,27,420,21],[293,28,420,22,"remainingTries"],[293,42,420,36],[293,45,420,39],[293,46,420,40],[293,47,420,41],[294,12,421,8],[294,13,421,9],[294,14,421,10],[295,10,422,6],[295,11,422,7],[295,17,422,13],[296,12,423,8],[296,16,423,14,"newConfig"],[296,25,423,23],[296,28,423,26],[296,32,423,26,"filterConfig"],[296,63,423,26],[296,64,423,26,"filterConfig"],[296,87,423,38],[296,89,424,10,"transformProps"],[296,103,424,24],[296,106,424,27,"transformProps"],[296,120,424,41],[296,121,424,42],[296,125,424,46],[296,126,424,47,"props"],[296,131,424,52],[296,132,424,53],[296,135,424,56],[296,139,424,60],[296,140,424,61,"props"],[296,145,424,66],[296,150,424,66,"concat"],[296,156,424,66],[296,161,424,66,"_toConsumableArray2"],[296,180,424,66],[296,181,424,66,"default"],[296,188,424,66],[296,190,425,14,"allowedProps"],[296,202,425,26],[296,209,425,26,"_toConsumableArray2"],[296,228,425,26],[296,229,425,26,"default"],[296,236,425,26],[296,238,425,31,"customNativeProps"],[296,255,425,48],[296,259,426,10,"config"],[296,265,427,8],[296,266,427,9],[297,12,428,8],[297,16,428,12],[297,17,428,13],[297,21,428,13,"deepEqual"],[297,52,428,13],[297,53,428,13,"deepEqual"],[297,74,428,22],[297,76,428,23],[297,80,428,27],[297,81,428,28,"config"],[297,87,428,34],[297,89,428,36,"newConfig"],[297,98,428,45],[297,99,428,46],[297,101,428,48],[298,14,429,10],[298,18,429,14],[298,19,429,15,"updateGestureHandler"],[298,39,429,35],[298,40,429,36,"newConfig"],[298,49,429,45],[298,50,429,46],[299,12,430,8],[300,10,431,6],[301,8,432,4],[302,6,432,5],[303,8,432,5,"key"],[303,11,432,5],[304,8,432,5,"value"],[304,13,432,5],[304,15,434,4],[304,24,434,4,"setNativeProps"],[304,38,434,18,"setNativeProps"],[304,39,434,19,"updates"],[304,46,434,31],[304,48,434,33],[305,10,435,6],[305,14,435,12,"mergedProps"],[305,25,435,23],[305,28,435,23,"Object"],[305,34,435,23],[305,35,435,23,"assign"],[305,41,435,23],[305,46,435,31],[305,50,435,35],[305,51,435,36,"props"],[305,56,435,41],[305,58,435,46,"updates"],[305,65,435,53],[305,66,435,55],[306,10,436,6],[306,14,436,12,"newConfig"],[306,23,436,21],[306,26,436,24],[306,30,436,24,"filterConfig"],[306,61,436,24],[306,62,436,24,"filterConfig"],[306,85,436,36],[306,87,437,8,"transformProps"],[306,101,437,22],[306,104,437,25,"transformProps"],[306,118,437,39],[306,119,437,40,"mergedProps"],[306,130,437,51],[306,131,437,52],[306,134,437,55,"mergedProps"],[306,145,437,66],[306,150,437,66,"concat"],[306,156,437,66],[306,161,437,66,"_toConsumableArray2"],[306,180,437,66],[306,181,437,66,"default"],[306,188,437,66],[306,190,438,12,"allowedProps"],[306,202,438,24],[306,209,438,24,"_toConsumableArray2"],[306,228,438,24],[306,229,438,24,"default"],[306,236,438,24],[306,238,438,29,"customNativeProps"],[306,255,438,46],[306,259,439,8,"config"],[306,265,440,6],[306,266,440,7],[307,10,441,6],[307,14,441,10],[307,15,441,11,"updateGestureHandler"],[307,35,441,31],[307,36,441,32,"newConfig"],[307,45,441,41],[307,46,441,42],[308,8,442,4],[309,6,442,5],[310,8,442,5,"key"],[310,11,442,5],[311,8,442,5,"value"],[311,13,442,5],[311,15,444,4],[311,24,444,4,"render"],[311,30,444,10,"render"],[311,31,444,10],[311,33,444,13],[312,10,444,13],[312,14,444,13,"_this$props$testID"],[312,32,444,13],[313,10,445,6],[313,14,445,10,"__DEV__"],[313,21,445,17],[313,25,445,21],[313,26,445,22],[313,30,445,26],[313,31,445,27,"context"],[313,38,445,34],[313,42,445,38],[313,43,445,39],[313,47,445,39,"isTestEnv"],[313,78,445,39],[313,79,445,39,"isTestEnv"],[313,100,445,48],[313,102,445,49],[313,103,445,50],[313,107,445,54,"Platform"],[313,128,445,62],[313,129,445,63,"OS"],[313,131,445,65],[313,136,445,70],[313,141,445,75],[313,143,445,77],[314,12,446,8],[314,18,446,14],[314,22,446,18,"Error"],[314,27,446,23],[314,28,447,10,"name"],[314,32,447,14],[314,35,448,12],[314,236,449,8],[314,237,449,9],[315,10,450,6],[316,10,452,6],[316,14,452,10,"gestureEventHandler"],[316,33,452,29],[316,36,452,32],[316,40,452,36],[316,41,452,37,"onGestureHandlerEvent"],[316,62,452,58],[317,10,453,6],[319,10,458,6],[319,14,458,6,"_this$props3"],[319,26,458,6],[319,29,459,8],[319,33,459,12],[319,34,459,13,"props"],[319,39,459,18],[320,12,458,14,"onGestureEvent"],[320,26,458,28],[320,29,458,28,"_this$props3"],[320,41,458,28],[320,42,458,14,"onGestureEvent"],[320,56,458,28],[321,12,458,30,"onGestureHandlerEvent"],[321,33,458,51],[321,36,458,51,"_this$props3"],[321,48,458,51],[321,49,458,30,"onGestureHandlerEvent"],[321,70,458,51],[322,10,460,6],[322,14,460,10,"onGestureEvent"],[322,28,460,24],[322,32,460,28],[322,39,460,35,"onGestureEvent"],[322,53,460,49],[322,58,460,54],[322,68,460,64],[322,70,460,66],[323,12,461,8],[324,12,462,8],[325,12,463,8],[326,12,464,8],[326,16,464,12,"onGestureHandlerEvent"],[326,37,464,33],[326,39,464,35],[327,14,465,10],[327,20,465,16],[327,24,465,20,"Error"],[327,29,465,25],[327,30,466,12],[327,103,467,10],[327,104,467,11],[328,12,468,8],[329,12,469,8,"gestureEventHandler"],[329,31,469,27],[329,34,469,30,"onGestureEvent"],[329,48,469,44],[330,10,470,6],[330,11,470,7],[330,17,470,13],[331,12,471,8],[331,16,472,10,"onGestureHandlerEvent"],[331,37,472,31],[331,41,473,10],[331,48,473,17,"onGestureHandlerEvent"],[331,69,473,38],[331,74,473,43],[331,84,473,53],[331,86,474,10],[332,14,475,10],[332,20,475,16],[332,24,475,20,"Error"],[332,29,475,25],[332,30,476,12],[332,103,477,10],[332,104,477,11],[333,12,478,8],[334,10,479,6],[335,10,481,6],[335,14,481,10,"gestureStateEventHandler"],[335,38,481,34],[335,41,481,37],[335,45,481,41],[335,46,481,42,"onGestureHandlerStateChange"],[335,73,481,69],[336,10,482,6],[338,10,487,6],[338,14,487,6,"_this$props4"],[338,26,487,6],[338,29,490,40],[338,33,490,44],[338,34,490,45,"props"],[338,39,490,50],[339,12,488,8,"onHandlerStateChange"],[339,32,488,28],[339,35,488,28,"_this$props4"],[339,47,488,28],[339,48,488,8,"onHandlerStateChange"],[339,68,488,28],[340,12,489,8,"onGestureHandlerStateChange"],[340,39,489,35],[340,42,489,35,"_this$props4"],[340,54,489,35],[340,55,489,8,"onGestureHandlerStateChange"],[340,82,489,35],[341,10,491,6],[341,14,491,10,"onHandlerStateChange"],[341,34,491,30],[341,38,491,34],[341,45,491,41,"onHandlerStateChange"],[341,65,491,61],[341,70,491,66],[341,80,491,76],[341,82,491,78],[342,12,492,8],[343,12,493,8],[344,12,494,8],[345,12,495,8],[345,16,495,12,"onGestureHandlerStateChange"],[345,43,495,39],[345,45,495,41],[346,14,496,10],[346,20,496,16],[346,24,496,20,"Error"],[346,29,496,25],[346,30,497,12],[346,103,498,10],[346,104,498,11],[347,12,499,8],[348,12,500,8,"gestureStateEventHandler"],[348,36,500,32],[348,39,500,35,"onHandlerStateChange"],[348,59,500,55],[349,10,501,6],[349,11,501,7],[349,17,501,13],[350,12,502,8],[350,16,503,10,"onGestureHandlerStateChange"],[350,43,503,37],[350,47,504,10],[350,54,504,17,"onGestureHandlerStateChange"],[350,81,504,44],[350,86,504,49],[350,96,504,59],[350,98,505,10],[351,14,506,10],[351,20,506,16],[351,24,506,20,"Error"],[351,29,506,25],[351,30,507,12],[351,103,508,10],[351,104,508,11],[352,12,509,8],[353,10,510,6],[354,10,511,6],[354,14,511,12,"events"],[354,20,511,18],[354,23,511,21],[355,12,512,8,"onGestureHandlerEvent"],[355,33,512,29],[355,35,512,31],[355,39,512,35],[355,40,512,36,"state"],[355,45,512,41],[355,46,512,42,"allowTouches"],[355,58,512,54],[355,61,513,12,"gestureEventHandler"],[355,80,513,31],[355,83,514,12,"undefined"],[355,92,514,21],[356,12,515,8,"onGestureHandlerStateChange"],[356,39,515,35],[356,41,515,37],[356,45,515,41],[356,46,515,42,"state"],[356,51,515,47],[356,52,515,48,"allowTouches"],[356,64,515,60],[356,67,516,12,"gestureStateEventHandler"],[356,91,516,36],[356,94,517,12,"undefined"],[357,10,518,6],[357,11,518,7],[358,10,520,6],[358,14,520,10],[358,15,520,11,"propsRef"],[358,23,520,19],[358,24,520,20,"current"],[358,31,520,27],[358,34,520,30,"events"],[358,40,520,36],[359,10,522,6],[359,14,522,10,"child"],[359,19,522,20],[359,22,522,23],[359,26,522,27],[360,10,523,6],[360,14,523,10],[361,12,524,8,"child"],[361,17,524,13],[361,20,524,16,"React"],[361,25,524,21],[361,26,524,22,"Children"],[361,34,524,30],[361,35,524,31,"only"],[361,39,524,35],[361,40,524,36],[361,44,524,40],[361,45,524,41,"props"],[361,50,524,46],[361,51,524,47,"children"],[361,59,524,55],[361,60,524,56],[362,10,525,6],[362,11,525,7],[362,12,525,8],[362,19,525,15,"e"],[362,20,525,16],[362,22,525,18],[363,12,526,8],[363,18,526,14],[363,22,526,18,"Error"],[363,27,526,23],[363,28,527,10],[363,32,527,10,"tagMessage"],[363,63,527,10],[363,64,527,10,"tagMessage"],[363,86,527,20],[363,88,528,12],[363,91,528,15,"name"],[363,95,528,19],[363,251,529,10],[363,252,530,8],[363,253,530,9],[364,10,531,6],[365,10,533,6],[365,14,533,10,"grandChildren"],[365,27,533,23],[365,30,533,26,"child"],[365,35,533,31],[365,36,533,32,"props"],[365,41,533,37],[365,42,533,38,"children"],[365,50,533,46],[366,10,534,6],[366,14,535,8,"__DEV__"],[366,21,535,15],[366,25,536,8,"child"],[366,30,536,13],[366,31,536,14,"type"],[366,35,536,18],[366,40,537,9,"child"],[366,45,537,14],[366,46,537,15,"type"],[366,50,537,19],[366,55,537,24],[366,79,537,48],[366,83,538,10,"child"],[366,88,538,15],[366,89,538,16,"type"],[366,93,538,20],[366,94,538,21,"name"],[366,98,538,25],[366,103,538,30],[366,109,538,36],[366,113,539,10,"child"],[366,118,539,15],[366,119,539,16,"type"],[366,123,539,20],[366,124,539,21,"displayName"],[366,135,539,32],[366,140,539,37],[366,146,539,43],[366,147,539,44],[366,149,540,8],[367,12,541,8,"grandChildren"],[367,25,541,21],[367,28,541,24,"React"],[367,33,541,29],[367,34,541,30,"Children"],[367,42,541,38],[367,43,541,39,"toArray"],[367,50,541,46],[367,51,541,47,"grandChildren"],[367,64,541,60],[367,65,541,61],[368,12,542,8,"grandChildren"],[368,25,542,21],[368,26,542,22,"push"],[368,30,542,26],[368,44,543,10],[368,48,543,10,"_jsxRuntime"],[368,59,543,10],[368,60,543,10,"jsx"],[368,63,543,10],[368,65,543,11,"_$$_REQUIRE"],[368,76,543,11],[368,77,543,11,"_dependencyMap"],[368,91,543,11],[368,124,543,11,"PressabilityDebugView"],[368,145,543,32],[369,14,545,12,"color"],[369,19,545,17],[369,21,545,18],[369,40,545,37],[370,14,546,12,"hitSlop"],[370,21,546,19],[370,23,546,21,"child"],[370,28,546,26],[370,29,546,27,"props"],[370,34,546,32],[370,35,546,33,"hitSlop"],[371,12,546,41],[371,15,544,16],[371,38,547,11],[371,39,548,8],[371,40,548,9],[372,10,549,6],[373,10,551,6],[373,17,551,13,"React"],[373,22,551,18],[373,23,551,19,"cloneElement"],[373,35,551,31],[373,36,552,8,"child"],[373,41,552,13],[373,43,552,13,"Object"],[373,49,552,13],[373,50,552,13,"assign"],[373,56,552,13],[374,12,554,10,"ref"],[374,15,554,13],[374,17,554,15],[374,21,554,19],[374,22,554,20,"refHandler"],[374,32,554,30],[375,12,555,10,"collapsable"],[375,23,555,21],[375,25,555,23],[376,10,555,28],[376,13,556,14],[376,17,556,14,"isTestEnv"],[376,48,556,14],[376,49,556,14,"isTestEnv"],[376,70,556,23],[376,72,556,24],[376,73,556,25],[376,76,557,14],[377,12,558,16,"handlerType"],[377,23,558,27],[377,25,558,29,"name"],[377,29,558,33],[378,12,559,16,"handlerTag"],[378,22,559,26],[378,24,559,28],[378,28,559,32],[378,29,559,33,"handlerTag"],[378,39,559,43],[379,12,560,16,"enabled"],[379,19,560,23],[379,21,560,25],[379,25,560,29],[379,26,560,30,"props"],[379,31,560,35],[379,32,560,36,"enabled"],[380,10,561,14],[380,11,561,15],[380,14,562,14],[380,15,562,15],[380,16,562,16],[381,12,563,10,"testID"],[381,18,563,16],[381,21,563,16,"_this$props$testID"],[381,39,563,16],[381,42,563,18],[381,46,563,22],[381,47,563,23,"props"],[381,52,563,28],[381,53,563,29,"testID"],[381,59,563,35],[381,71,563,35,"_this$props$testID"],[381,89,563,35],[381,92,563,39,"child"],[381,97,563,44],[381,98,563,45,"props"],[381,103,563,50],[381,104,563,51,"testID"],[382,10,563,57],[382,13,564,13,"events"],[382,19,564,19],[382,22,566,8,"grandChildren"],[382,35,567,6],[382,36,567,7],[383,8,568,4],[384,6,568,5],[385,4,568,5],[385,6,182,24,"React"],[385,11,182,29],[385,12,182,30,"Component"],[385,21,182,39],[386,4,182,8,"Handler"],[386,11,182,15],[386,12,186,11,"displayName"],[386,23,186,22],[386,26,186,25,"name"],[386,30,186,29],[387,4,182,8,"Handler"],[387,11,182,15],[387,12,187,11,"contextType"],[387,23,187,22],[387,26,187,25,"GestureHandlerRootViewContext"],[387,64,187,54],[388,4,570,2],[388,11,570,9,"Handler"],[388,18,570,16],[389,2,571,0],[390,0,571,1],[390,3]],"functionMap":{"names":["<global>","<anonymous>","UIManagerAny.setJSResponder","UIManagerAny.clearJSResponder","DeviceEventEmitter.addListener$argument_1","hasUnresolvedRefs","extract","refs.some$argument_0","createHandler","Handler","Handler#constructor","Handler#componentDidMount","setState$argument_0","ghQueueMicrotask$argument_0","Handler#componentDidUpdate","Handler#componentWillUnmount","Handler#onGestureHandlerEvent","Handler#onGestureHandlerStateChange","Handler#refHandler","Handler#createGestureHandler","Handler#attachGestureHandler","Handler#updateGestureHandler","Handler#update","Handler#setNativeProps","Handler#render"],"mappings":"AAA;sCC2F;GDE;0CCC;GDE;8BEE;CFG;gCGC;CHG;2DIO;GJE;AKM;kBCI;qBCI,8BD;GDC;CLE;eQqC;ECa;ICe;KDY;IEE;UPO;0BQC,yBR;WOE;yBEU;SFE;KFkB;IKE;KLM;IME;KNgB;oCOE;KPQ;0CQG;KRiB;yBSE;KTiB;mCUE;KVW;mCWE;4BnBmB;SmBuB;uBPW;OOE;KXC;mCYE;KZO;IaE;yBTW;SSE;KbW;IcE;KdQ;IeE;Kf4H;GDC;CRE"}},"type":"js/module"}]}