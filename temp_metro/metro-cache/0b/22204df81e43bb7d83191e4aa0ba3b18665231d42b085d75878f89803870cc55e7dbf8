{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}},{"name":"./Raw","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":14,"index":58},"end":{"line":2,"column":35,"index":79}}],"key":"tJ3LrdMXJGYBLPt24IO0ACFD5ss="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WHITESPACE = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n  var COMMENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Comment;\n  var SEMICOLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n  var ATKEYWORD = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.AtKeyword;\n  var LEFTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n  var RIGHTCURLYBRACKET = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightCurlyBracket;\n  function consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n  }\n  function consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n  }\n  function consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, _$$_REQUIRE(_dependencyMap[1], \"./Raw\").mode.semicolonIncluded, true);\n  }\n  function consumeDeclaration() {\n    if (this.scanner.tokenType === SEMICOLON) {\n      return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\n    }\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n    if (this.scanner.tokenType === SEMICOLON) {\n      this.scanner.next();\n    }\n    return node;\n  }\n  module.exports = {\n    name: 'Block',\n    structure: {\n      children: [['Atrule', 'Rule', 'Declaration']]\n    },\n    parse: function parse(isDeclaration) {\n      var consumer = isDeclaration ? consumeDeclaration : consumeRule;\n      var start = this.scanner.tokenStart;\n      var children = this.createList();\n      this.eat(LEFTCURLYBRACKET);\n      scan: while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n          case RIGHTCURLYBRACKET:\n            break scan;\n          case WHITESPACE:\n          case COMMENT:\n            this.scanner.next();\n            break;\n          case ATKEYWORD:\n            children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n            break;\n          default:\n            children.push(consumer.call(this));\n        }\n      }\n      if (!this.scanner.eof) {\n        this.eat(RIGHTCURLYBRACKET);\n      }\n      return {\n        type: 'Block',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('{');\n      this.children(node, function (prev) {\n        if (prev.type === 'Declaration') {\n          this.chunk(';');\n        }\n      });\n      this.chunk('}');\n    },\n    walkContext: 'block'\n  };\n});","lineCount":72,"map":[[2,2,4,0],[2,6,4,4,"WHITESPACE"],[2,16,4,14],[2,19,4,17,"_$$_REQUIRE"],[2,30,4,17],[2,31,4,17,"_dependencyMap"],[2,45,4,17],[2,69,4,17,"TYPE"],[2,73,4,17],[2,74,4,22,"WhiteSpace"],[2,84,4,32],[3,2,5,0],[3,6,5,4,"COMMENT"],[3,13,5,11],[3,16,5,14,"_$$_REQUIRE"],[3,27,5,14],[3,28,5,14,"_dependencyMap"],[3,42,5,14],[3,66,5,14,"TYPE"],[3,70,5,14],[3,71,5,19,"Comment"],[3,78,5,26],[4,2,6,0],[4,6,6,4,"SEMICOLON"],[4,15,6,13],[4,18,6,16,"_$$_REQUIRE"],[4,29,6,16],[4,30,6,16,"_dependencyMap"],[4,44,6,16],[4,68,6,16,"TYPE"],[4,72,6,16],[4,73,6,21,"Semicolon"],[4,82,6,30],[5,2,7,0],[5,6,7,4,"ATKEYWORD"],[5,15,7,13],[5,18,7,16,"_$$_REQUIRE"],[5,29,7,16],[5,30,7,16,"_dependencyMap"],[5,44,7,16],[5,68,7,16,"TYPE"],[5,72,7,16],[5,73,7,21,"AtKeyword"],[5,82,7,30],[6,2,8,0],[6,6,8,4,"LEFTCURLYBRACKET"],[6,22,8,20],[6,25,8,23,"_$$_REQUIRE"],[6,36,8,23],[6,37,8,23,"_dependencyMap"],[6,51,8,23],[6,75,8,23,"TYPE"],[6,79,8,23],[6,80,8,28,"LeftCurlyBracket"],[6,96,8,44],[7,2,9,0],[7,6,9,4,"RIGHTCURLYBRACKET"],[7,23,9,21],[7,26,9,24,"_$$_REQUIRE"],[7,37,9,24],[7,38,9,24,"_dependencyMap"],[7,52,9,24],[7,76,9,24,"TYPE"],[7,80,9,24],[7,81,9,29,"RightCurlyBracket"],[7,98,9,46],[8,2,11,0],[8,11,11,9,"consumeRaw"],[8,21,11,19,"consumeRaw"],[8,22,11,20,"startToken"],[8,32,11,30],[8,34,11,32],[9,4,12,4],[9,11,12,11],[9,15,12,15],[9,16,12,16,"Raw"],[9,19,12,19],[9,20,12,20,"startToken"],[9,30,12,30],[9,32,12,32],[9,36,12,36],[9,38,12,38],[9,42,12,42],[9,43,12,43],[10,2,13,0],[11,2,14,0],[11,11,14,9,"consumeRule"],[11,22,14,20,"consumeRule"],[11,23,14,20],[11,25,14,23],[12,4,15,4],[12,11,15,11],[12,15,15,15],[12,16,15,16,"parseWithFallback"],[12,33,15,33],[12,34,15,34],[12,38,15,38],[12,39,15,39,"Rule"],[12,43,15,43],[12,45,15,45,"consumeRaw"],[12,55,15,55],[12,56,15,56],[13,2,16,0],[14,2,17,0],[14,11,17,9,"consumeRawDeclaration"],[14,32,17,30,"consumeRawDeclaration"],[14,33,17,31,"startToken"],[14,43,17,41],[14,45,17,43],[15,4,18,4],[15,11,18,11],[15,15,18,15],[15,16,18,16,"Raw"],[15,19,18,19],[15,20,18,20,"startToken"],[15,30,18,30],[15,32,18,32,"_$$_REQUIRE"],[15,43,18,32],[15,44,18,32,"_dependencyMap"],[15,58,18,32],[15,72,18,32,"mode"],[15,76,18,32],[15,77,18,40,"semicolonIncluded"],[15,94,18,57],[15,96,18,59],[15,100,18,63],[15,101,18,64],[16,2,19,0],[17,2,20,0],[17,11,20,9,"consumeDeclaration"],[17,29,20,27,"consumeDeclaration"],[17,30,20,27],[17,32,20,30],[18,4,21,4],[18,8,21,8],[18,12,21,12],[18,13,21,13,"scanner"],[18,20,21,20],[18,21,21,21,"tokenType"],[18,30,21,30],[18,35,21,35,"SEMICOLON"],[18,44,21,44],[18,46,21,46],[19,6,22,8],[19,13,22,15,"consumeRawDeclaration"],[19,34,22,36],[19,35,22,37,"call"],[19,39,22,41],[19,40,22,42],[19,44,22,46],[19,46,22,48],[19,50,22,52],[19,51,22,53,"scanner"],[19,58,22,60],[19,59,22,61,"tokenIndex"],[19,69,22,71],[19,70,22,72],[20,4,23,4],[21,4,25,4],[21,8,25,8,"node"],[21,12,25,12],[21,15,25,15],[21,19,25,19],[21,20,25,20,"parseWithFallback"],[21,37,25,37],[21,38,25,38],[21,42,25,42],[21,43,25,43,"Declaration"],[21,54,25,54],[21,56,25,56,"consumeRawDeclaration"],[21,77,25,77],[21,78,25,78],[22,4,27,4],[22,8,27,8],[22,12,27,12],[22,13,27,13,"scanner"],[22,20,27,20],[22,21,27,21,"tokenType"],[22,30,27,30],[22,35,27,35,"SEMICOLON"],[22,44,27,44],[22,46,27,46],[23,6,28,8],[23,10,28,12],[23,11,28,13,"scanner"],[23,18,28,20],[23,19,28,21,"next"],[23,23,28,25],[23,24,28,26],[23,25,28,27],[24,4,29,4],[25,4,31,4],[25,11,31,11,"node"],[25,15,31,15],[26,2,32,0],[27,2,34,0,"module"],[27,8,34,6],[27,9,34,7,"exports"],[27,16,34,14],[27,19,34,17],[28,4,35,4,"name"],[28,8,35,8],[28,10,35,10],[28,17,35,17],[29,4,36,4,"structure"],[29,13,36,13],[29,15,36,15],[30,6,37,8,"children"],[30,14,37,16],[30,16,37,18],[30,17,37,19],[30,18,38,12],[30,26,38,20],[30,28,39,12],[30,34,39,18],[30,36,40,12],[30,49,40,25],[30,50,41,9],[31,4,42,4],[31,5,42,5],[32,4,43,4,"parse"],[32,9,43,9],[32,11,43,11],[32,20,43,4,"parse"],[32,25,43,9,"parse"],[32,26,43,20,"isDeclaration"],[32,39,43,33],[32,41,43,35],[33,6,44,8],[33,10,44,12,"consumer"],[33,18,44,20],[33,21,44,23,"isDeclaration"],[33,34,44,36],[33,37,44,39,"consumeDeclaration"],[33,55,44,57],[33,58,44,60,"consumeRule"],[33,69,44,71],[34,6,46,8],[34,10,46,12,"start"],[34,15,46,17],[34,18,46,20],[34,22,46,24],[34,23,46,25,"scanner"],[34,30,46,32],[34,31,46,33,"tokenStart"],[34,41,46,43],[35,6,47,8],[35,10,47,12,"children"],[35,18,47,20],[35,21,47,23],[35,25,47,27],[35,26,47,28,"createList"],[35,36,47,38],[35,37,47,39],[35,38,47,40],[36,6,49,8],[36,10,49,12],[36,11,49,13,"eat"],[36,14,49,16],[36,15,49,17,"LEFTCURLYBRACKET"],[36,31,49,33],[36,32,49,34],[37,6,51,8,"scan"],[37,10,51,12],[37,12,52,8],[37,19,52,15],[37,20,52,16],[37,24,52,20],[37,25,52,21,"scanner"],[37,32,52,28],[37,33,52,29,"eof"],[37,36,52,32],[37,38,52,34],[38,8,53,12],[38,16,53,20],[38,20,53,24],[38,21,53,25,"scanner"],[38,28,53,32],[38,29,53,33,"tokenType"],[38,38,53,42],[39,10,54,16],[39,15,54,21,"RIGHTCURLYBRACKET"],[39,32,54,38],[40,12,55,20],[40,18,55,26,"scan"],[40,22,55,30],[41,10,57,16],[41,15,57,21,"WHITESPACE"],[41,25,57,31],[42,10,58,16],[42,15,58,21,"COMMENT"],[42,22,58,28],[43,12,59,20],[43,16,59,24],[43,17,59,25,"scanner"],[43,24,59,32],[43,25,59,33,"next"],[43,29,59,37],[43,30,59,38],[43,31,59,39],[44,12,60,20],[45,10,62,16],[45,15,62,21,"ATKEYWORD"],[45,24,62,30],[46,12,63,20,"children"],[46,20,63,28],[46,21,63,29,"push"],[46,25,63,33],[46,26,63,34],[46,30,63,38],[46,31,63,39,"parseWithFallback"],[46,48,63,56],[46,49,63,57],[46,53,63,61],[46,54,63,62,"Atrule"],[46,60,63,68],[46,62,63,70,"consumeRaw"],[46,72,63,80],[46,73,63,81],[46,74,63,82],[47,12,64,20],[48,10,66,16],[49,12,67,20,"children"],[49,20,67,28],[49,21,67,29,"push"],[49,25,67,33],[49,26,67,34,"consumer"],[49,34,67,42],[49,35,67,43,"call"],[49,39,67,47],[49,40,67,48],[49,44,67,52],[49,45,67,53],[49,46,67,54],[50,8,68,12],[51,6,69,8],[52,6,71,8],[52,10,71,12],[52,11,71,13],[52,15,71,17],[52,16,71,18,"scanner"],[52,23,71,25],[52,24,71,26,"eof"],[52,27,71,29],[52,29,71,31],[53,8,72,12],[53,12,72,16],[53,13,72,17,"eat"],[53,16,72,20],[53,17,72,21,"RIGHTCURLYBRACKET"],[53,34,72,38],[53,35,72,39],[54,6,73,8],[55,6,75,8],[55,13,75,15],[56,8,76,12,"type"],[56,12,76,16],[56,14,76,18],[56,21,76,25],[57,8,77,12,"loc"],[57,11,77,15],[57,13,77,17],[57,17,77,21],[57,18,77,22,"getLocation"],[57,29,77,33],[57,30,77,34,"start"],[57,35,77,39],[57,37,77,41],[57,41,77,45],[57,42,77,46,"scanner"],[57,49,77,53],[57,50,77,54,"tokenStart"],[57,60,77,64],[57,61,77,65],[58,8,78,12,"children"],[58,16,78,20],[58,18,78,22,"children"],[59,6,79,8],[59,7,79,9],[60,4,80,4],[60,5,80,5],[61,4,81,4,"generate"],[61,12,81,12],[61,14,81,14],[61,23,81,4,"generate"],[61,31,81,12,"generate"],[61,32,81,23,"node"],[61,36,81,27],[61,38,81,29],[62,6,82,8],[62,10,82,12],[62,11,82,13,"chunk"],[62,16,82,18],[62,17,82,19],[62,20,82,22],[62,21,82,23],[63,6,83,8],[63,10,83,12],[63,11,83,13,"children"],[63,19,83,21],[63,20,83,22,"node"],[63,24,83,26],[63,26,83,28],[63,36,83,37,"prev"],[63,40,83,41],[63,42,83,43],[64,8,84,12],[64,12,84,16,"prev"],[64,16,84,20],[64,17,84,21,"type"],[64,21,84,25],[64,26,84,30],[64,39,84,43],[64,41,84,45],[65,10,85,16],[65,14,85,20],[65,15,85,21,"chunk"],[65,20,85,26],[65,21,85,27],[65,24,85,30],[65,25,85,31],[66,8,86,12],[67,6,87,8],[67,7,87,9],[67,8,87,10],[68,6,88,8],[68,10,88,12],[68,11,88,13,"chunk"],[68,16,88,18],[68,17,88,19],[68,20,88,22],[68,21,88,23],[69,4,89,4],[69,5,89,5],[70,4,90,4,"walkContext"],[70,15,90,15],[70,17,90,17],[71,2,91,0],[71,3,91,1],[72,0,91,2],[72,3]],"functionMap":{"names":["<global>","consumeRaw","consumeRule","consumeRawDeclaration","consumeDeclaration","module.exports.parse","module.exports.generate","children$argument_1"],"mappings":"AAA;ACU;CDE;AEC;CFE;AGC;CHE;AIC;CJY;WKW;KLqC;cMC;4BCE;SDI;KNE"}},"type":"js/module"}]}