{"dependencies":[{"name":"../assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":17,"index":873},"end":{"line":21,"column":37,"index":893}},{"start":{"line":21,"column":17,"index":873},"end":{"line":21,"column":37,"index":893}}],"key":"EqNBW+769mc/j/kMnDe9BBrECKc="}},{"name":"./OrderedCollection","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":28,"index":923},"end":{"line":22,"column":58,"index":953}}],"key":"CCCDl11xD0tStlyMFst4agrco1U="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2024 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createSetAccessor = void 0;\n  /** @internal */\n  function createSetAccessor(options) {\n    return options.itemType === 9 /* binding.PropertyType.Mixed */ ? createSetAccessorForMixed(options) : createSetAccessorForKnownType(options);\n  }\n  exports.createSetAccessor = createSetAccessor;\n  function createSetAccessorForMixed(_ref) {\n    var realm = _ref.realm,\n      typeHelpers = _ref.typeHelpers;\n    var fromBinding = typeHelpers.fromBinding,\n      toBinding = typeHelpers.toBinding;\n    return {\n      get: function get(set, index) {\n        // Core will not return collections within a Set.\n        return fromBinding(set.getAny(index));\n      },\n      // Directly setting by \"index\" to a Set is a no-op.\n      set: function set() {},\n      insert: function insert(set, value) {\n        _$$_REQUIRE(_dependencyMap[0], \"../assert\").assert.inTransaction(realm);\n        try {\n          set.insertAny(toBinding(value));\n        } catch (err) {\n          // Optimize for the valid cases by not guarding for the unsupported nested collections upfront.\n          throw transformError(err);\n        }\n      }\n    };\n  }\n  function createSetAccessorForKnownType(_ref2) {\n    var realm = _ref2.realm,\n      typeHelpers = _ref2.typeHelpers,\n      itemType = _ref2.itemType;\n    var fromBinding = typeHelpers.fromBinding,\n      toBinding = typeHelpers.toBinding;\n    return {\n      get: (0, _$$_REQUIRE(_dependencyMap[1], \"./OrderedCollection\").createDefaultGetter)({\n        fromBinding: fromBinding,\n        itemType: itemType\n      }),\n      // Directly setting by \"index\" to a Set is a no-op.\n      set: function set() {},\n      insert: function insert(set, value) {\n        _$$_REQUIRE(_dependencyMap[0], \"../assert\").assert.inTransaction(realm);\n        try {\n          set.insertAny(toBinding(value));\n        } catch (err) {\n          // Optimize for the valid cases by not guarding for the unsupported nested collections upfront.\n          throw transformError(err);\n        }\n      }\n    };\n  }\n  function transformError(err) {\n    var message = err instanceof Error ? err.message : \"\";\n    if (message != null && message.includes(\"'Array' to a Mixed\") || message != null && message.includes(\"'List' to a Mixed\")) {\n      return new Error(\"Lists within a Set are not supported.\");\n    }\n    if (message != null && message.includes(\"'Object' to a Mixed\") || message != null && message.includes(\"'Dictionary' to a Mixed\")) {\n      return new Error(\"Dictionaries within a Set are not supported.\");\n    }\n    return err;\n  }\n});","lineCount":87,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,19,0,"Object"],[21,8,19,6],[21,9,19,7,"defineProperty"],[21,23,19,21],[21,24,19,22,"exports"],[21,31,19,29],[21,33,19,31],[21,45,19,43],[21,47,19,45],[22,4,19,47,"value"],[22,9,19,52],[22,11,19,54],[23,2,19,59],[23,3,19,60],[23,4,19,61],[24,2,20,0,"exports"],[24,9,20,7],[24,10,20,8,"createSetAccessor"],[24,27,20,25],[24,30,20,28],[24,35,20,33],[24,36,20,34],[25,2,23,0],[26,2,24,0],[26,11,24,9,"createSetAccessor"],[26,28,24,26,"createSetAccessor"],[26,29,24,27,"options"],[26,36,24,34],[26,38,24,36],[27,4,25,4],[27,11,25,11,"options"],[27,18,25,18],[27,19,25,19,"itemType"],[27,27,25,27],[27,32,25,32],[27,33,25,33],[27,34,25,34],[27,69,26,10,"createSetAccessorForMixed"],[27,94,26,35],[27,95,26,36,"options"],[27,102,26,43],[27,103,26,44],[27,106,27,10,"createSetAccessorForKnownType"],[27,135,27,39],[27,136,27,40,"options"],[27,143,27,47],[27,144,27,48],[28,2,28,0],[29,2,29,0,"exports"],[29,9,29,7],[29,10,29,8,"createSetAccessor"],[29,27,29,25],[29,30,29,28,"createSetAccessor"],[29,47,29,45],[30,2,30,0],[30,11,30,9,"createSetAccessorForMixed"],[30,36,30,34,"createSetAccessorForMixed"],[30,37,30,34,"_ref"],[30,41,30,34],[30,43,30,60],[31,4,30,60],[31,8,30,37,"realm"],[31,13,30,42],[31,16,30,42,"_ref"],[31,20,30,42],[31,21,30,37,"realm"],[31,26,30,42],[32,6,30,44,"typeHelpers"],[32,17,30,55],[32,20,30,55,"_ref"],[32,24,30,55],[32,25,30,44,"typeHelpers"],[32,36,30,55],[33,4,31,4],[33,8,31,12,"fromBinding"],[33,19,31,23],[33,22,31,39,"typeHelpers"],[33,33,31,50],[33,34,31,12,"fromBinding"],[33,45,31,23],[34,6,31,25,"toBinding"],[34,15,31,34],[34,18,31,39,"typeHelpers"],[34,29,31,50],[34,30,31,25,"toBinding"],[34,39,31,34],[35,4,32,4],[35,11,32,11],[36,6,33,8,"get"],[36,9,33,11],[36,20,33,8,"get"],[36,23,33,11,"get"],[36,24,33,12,"set"],[36,27,33,15],[36,29,33,17,"index"],[36,34,33,22],[36,36,33,24],[37,8,34,12],[38,8,35,12],[38,15,35,19,"fromBinding"],[38,26,35,30],[38,27,35,31,"set"],[38,30,35,34],[38,31,35,35,"getAny"],[38,37,35,41],[38,38,35,42,"index"],[38,43,35,47],[38,44,35,48],[38,45,35,49],[39,6,36,8],[39,7,36,9],[40,6,37,8],[41,6,38,8,"set"],[41,9,38,11],[41,11,38,13],[41,20,38,8,"set"],[41,23,38,11,"set"],[41,24,38,11],[41,26,38,19],[41,27,38,21],[41,28,38,22],[42,6,39,8,"insert"],[42,12,39,14],[42,23,39,8,"insert"],[42,29,39,14,"insert"],[42,30,39,15,"set"],[42,33,39,18],[42,35,39,20,"value"],[42,40,39,25],[42,42,39,27],[43,8,40,12,"_$$_REQUIRE"],[43,19,40,12],[43,20,40,12,"_dependencyMap"],[43,34,40,12],[43,52,40,21,"assert"],[43,58,40,27],[43,59,40,28,"inTransaction"],[43,72,40,41],[43,73,40,42,"realm"],[43,78,40,47],[43,79,40,48],[44,8,41,12],[44,12,41,16],[45,10,42,16,"set"],[45,13,42,19],[45,14,42,20,"insertAny"],[45,23,42,29],[45,24,42,30,"toBinding"],[45,33,42,39],[45,34,42,40,"value"],[45,39,42,45],[45,40,42,46],[45,41,42,47],[46,8,43,12],[46,9,43,13],[46,10,44,12],[46,17,44,19,"err"],[46,20,44,22],[46,22,44,24],[47,10,45,16],[48,10,46,16],[48,16,46,22,"transformError"],[48,30,46,36],[48,31,46,37,"err"],[48,34,46,40],[48,35,46,41],[49,8,47,12],[50,6,48,8],[51,4,49,4],[51,5,49,5],[52,2,50,0],[53,2,51,0],[53,11,51,9,"createSetAccessorForKnownType"],[53,40,51,38,"createSetAccessorForKnownType"],[53,41,51,38,"_ref2"],[53,46,51,38],[53,48,51,74],[54,4,51,74],[54,8,51,41,"realm"],[54,13,51,46],[54,16,51,46,"_ref2"],[54,21,51,46],[54,22,51,41,"realm"],[54,27,51,46],[55,6,51,48,"typeHelpers"],[55,17,51,59],[55,20,51,59,"_ref2"],[55,25,51,59],[55,26,51,48,"typeHelpers"],[55,37,51,59],[56,6,51,61,"itemType"],[56,14,51,69],[56,17,51,69,"_ref2"],[56,22,51,69],[56,23,51,61,"itemType"],[56,31,51,69],[57,4,52,4],[57,8,52,12,"fromBinding"],[57,19,52,23],[57,22,52,39,"typeHelpers"],[57,33,52,50],[57,34,52,12,"fromBinding"],[57,45,52,23],[58,6,52,25,"toBinding"],[58,15,52,34],[58,18,52,39,"typeHelpers"],[58,29,52,50],[58,30,52,25,"toBinding"],[58,39,52,34],[59,4,53,4],[59,11,53,11],[60,6,54,8,"get"],[60,9,54,11],[60,11,54,13],[60,12,54,14],[60,13,54,15],[60,15,54,17,"_$$_REQUIRE"],[60,26,54,17],[60,27,54,17,"_dependencyMap"],[60,41,54,17],[60,69,54,37,"createDefaultGetter"],[60,88,54,56],[60,90,54,58],[61,8,54,60,"fromBinding"],[61,19,54,71],[61,21,54,60,"fromBinding"],[61,32,54,71],[62,8,54,73,"itemType"],[62,16,54,81],[62,18,54,73,"itemType"],[63,6,54,82],[63,7,54,83],[63,8,54,84],[64,6,55,8],[65,6,56,8,"set"],[65,9,56,11],[65,11,56,13],[65,20,56,8,"set"],[65,23,56,11,"set"],[65,24,56,11],[65,26,56,19],[65,27,56,21],[65,28,56,22],[66,6,57,8,"insert"],[66,12,57,14],[66,23,57,8,"insert"],[66,29,57,14,"insert"],[66,30,57,15,"set"],[66,33,57,18],[66,35,57,20,"value"],[66,40,57,25],[66,42,57,27],[67,8,58,12,"_$$_REQUIRE"],[67,19,58,12],[67,20,58,12,"_dependencyMap"],[67,34,58,12],[67,52,58,21,"assert"],[67,58,58,27],[67,59,58,28,"inTransaction"],[67,72,58,41],[67,73,58,42,"realm"],[67,78,58,47],[67,79,58,48],[68,8,59,12],[68,12,59,16],[69,10,60,16,"set"],[69,13,60,19],[69,14,60,20,"insertAny"],[69,23,60,29],[69,24,60,30,"toBinding"],[69,33,60,39],[69,34,60,40,"value"],[69,39,60,45],[69,40,60,46],[69,41,60,47],[70,8,61,12],[70,9,61,13],[70,10,62,12],[70,17,62,19,"err"],[70,20,62,22],[70,22,62,24],[71,10,63,16],[72,10,64,16],[72,16,64,22,"transformError"],[72,30,64,36],[72,31,64,37,"err"],[72,34,64,40],[72,35,64,41],[73,8,65,12],[74,6,66,8],[75,4,67,4],[75,5,67,5],[76,2,68,0],[77,2,69,0],[77,11,69,9,"transformError"],[77,25,69,23,"transformError"],[77,26,69,24,"err"],[77,29,69,27],[77,31,69,29],[78,4,70,4],[78,8,70,10,"message"],[78,15,70,17],[78,18,70,20,"err"],[78,21,70,23],[78,33,70,35,"Error"],[78,38,70,40],[78,41,70,43,"err"],[78,44,70,46],[78,45,70,47,"message"],[78,52,70,54],[78,55,70,57],[78,57,70,59],[79,4,71,4],[79,8,71,8,"message"],[79,15,71,15],[79,27,71,8,"message"],[79,34,71,15],[79,35,71,17,"includes"],[79,43,71,25],[79,44,71,26],[79,64,71,46],[79,65,71,47],[79,69,71,51,"message"],[79,76,71,58],[79,88,71,51,"message"],[79,95,71,58],[79,96,71,60,"includes"],[79,104,71,68],[79,105,71,69],[79,124,71,88],[79,125,71,89],[79,127,71,91],[80,6,72,8],[80,13,72,15],[80,17,72,19,"Error"],[80,22,72,24],[80,23,72,25],[80,62,72,64],[80,63,72,65],[81,4,73,4],[82,4,74,4],[82,8,74,8,"message"],[82,15,74,15],[82,27,74,8,"message"],[82,34,74,15],[82,35,74,17,"includes"],[82,43,74,25],[82,44,74,26],[82,65,74,47],[82,66,74,48],[82,70,74,52,"message"],[82,77,74,59],[82,89,74,52,"message"],[82,96,74,59],[82,97,74,61,"includes"],[82,105,74,69],[82,106,74,70],[82,131,74,95],[82,132,74,96],[82,134,74,98],[83,6,75,8],[83,13,75,15],[83,17,75,19,"Error"],[83,22,75,24],[83,23,75,25],[83,69,75,71],[83,70,75,72],[84,4,76,4],[85,4,77,4],[85,11,77,11,"err"],[85,14,77,14],[86,2,78,0],[87,0,78,1],[87,3]],"functionMap":{"names":["<global>","createSetAccessor","createSetAccessorForMixed","get","set","insert","createSetAccessorForKnownType","transformError"],"mappings":"AAA;ACuB;CDI;AEE;QCG;SDG;aEE,SF;QGC;SHS;CFE;AMC;aFK,SE;QDC;SCS;CNE;AOC;CPS"}},"type":"js/module"}]}