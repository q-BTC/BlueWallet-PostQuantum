{"dependencies":[{"name":"bs58","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":13,"index":27},"end":{"line":3,"column":28,"index":42}},{"start":{"line":3,"column":13,"index":27},"end":{"line":3,"column":28,"index":42}},{"start":{"line":3,"column":13,"index":27},"end":{"line":3,"column":28,"index":42}}],"key":"PQqo2HgkPkXH2aPqmrA+CY8/cVs="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  module.exports = function (checksumFn) {\n    // Encode a buffer as a base58-check encoded string\n    function encode(payload) {\n      var payloadU8 = Uint8Array.from(payload);\n      var checksum = checksumFn(payloadU8);\n      var length = payloadU8.length + 4;\n      var both = new Uint8Array(length);\n      both.set(payloadU8, 0);\n      both.set(checksum.subarray(0, 4), payloadU8.length);\n      return _$$_REQUIRE(_dependencyMap[0], \"bs58\").encode(both, length);\n    }\n    function decodeRaw(buffer) {\n      var payload = buffer.slice(0, -4);\n      var checksum = buffer.slice(-4);\n      var newChecksum = checksumFn(payload);\n      if (checksum[0] ^ newChecksum[0] | checksum[1] ^ newChecksum[1] | checksum[2] ^ newChecksum[2] | checksum[3] ^ newChecksum[3]) return;\n      return payload;\n    }\n\n    // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n    function decodeUnsafe(string) {\n      var buffer = _$$_REQUIRE(_dependencyMap[0], \"bs58\").decodeUnsafe(string);\n      if (!buffer) return;\n      return decodeRaw(buffer);\n    }\n    function decode(string) {\n      var buffer = _$$_REQUIRE(_dependencyMap[0], \"bs58\").decode(string);\n      var payload = decodeRaw(buffer, checksumFn);\n      if (!payload) throw new Error('Invalid checksum');\n      return payload;\n    }\n    return {\n      encode: encode,\n      decode: decode,\n      decodeUnsafe: decodeUnsafe\n    };\n  };\n});","lineCount":41,"map":[[2,2,1,0],[2,14,1,12],[4,2,5,0,"module"],[4,8,5,6],[4,9,5,7,"exports"],[4,16,5,14],[4,19,5,17],[4,29,5,27,"checksumFn"],[4,39,5,37],[4,41,5,39],[5,4,6,2],[6,4,7,2],[6,13,7,11,"encode"],[6,19,7,17,"encode"],[6,20,7,19,"payload"],[6,27,7,26],[6,29,7,28],[7,6,8,4],[7,10,8,8,"payloadU8"],[7,19,8,17],[7,22,8,20,"Uint8Array"],[7,32,8,30],[7,33,8,31,"from"],[7,37,8,35],[7,38,8,36,"payload"],[7,45,8,43],[7,46,8,44],[8,6,9,4],[8,10,9,8,"checksum"],[8,18,9,16],[8,21,9,19,"checksumFn"],[8,31,9,29],[8,32,9,30,"payloadU8"],[8,41,9,39],[8,42,9,40],[9,6,10,4],[9,10,10,8,"length"],[9,16,10,14],[9,19,10,17,"payloadU8"],[9,28,10,26],[9,29,10,27,"length"],[9,35,10,33],[9,38,10,36],[9,39,10,37],[10,6,11,4],[10,10,11,8,"both"],[10,14,11,12],[10,17,11,15],[10,21,11,19,"Uint8Array"],[10,31,11,29],[10,32,11,30,"length"],[10,38,11,36],[10,39,11,37],[11,6,12,4,"both"],[11,10,12,8],[11,11,12,9,"set"],[11,14,12,12],[11,15,12,13,"payloadU8"],[11,24,12,22],[11,26,12,24],[11,27,12,25],[11,28,12,26],[12,6,13,4,"both"],[12,10,13,8],[12,11,13,9,"set"],[12,14,13,12],[12,15,13,13,"checksum"],[12,23,13,21],[12,24,13,22,"subarray"],[12,32,13,30],[12,33,13,31],[12,34,13,32],[12,36,13,34],[12,37,13,35],[12,38,13,36],[12,40,13,38,"payloadU8"],[12,49,13,47],[12,50,13,48,"length"],[12,56,13,54],[12,57,13,55],[13,6,14,4],[13,13,14,11,"_$$_REQUIRE"],[13,24,14,11],[13,25,14,11,"_dependencyMap"],[13,39,14,11],[13,52,14,18,"encode"],[13,58,14,24],[13,59,14,25,"both"],[13,63,14,29],[13,65,14,31,"length"],[13,71,14,37],[13,72,14,38],[14,4,15,2],[15,4,17,2],[15,13,17,11,"decodeRaw"],[15,22,17,20,"decodeRaw"],[15,23,17,22,"buffer"],[15,29,17,28],[15,31,17,30],[16,6,18,4],[16,10,18,8,"payload"],[16,17,18,15],[16,20,18,18,"buffer"],[16,26,18,24],[16,27,18,25,"slice"],[16,32,18,30],[16,33,18,31],[16,34,18,32],[16,36,18,34],[16,37,18,35],[16,38,18,36],[16,39,18,37],[17,6,19,4],[17,10,19,8,"checksum"],[17,18,19,16],[17,21,19,19,"buffer"],[17,27,19,25],[17,28,19,26,"slice"],[17,33,19,31],[17,34,19,32],[17,35,19,33],[17,36,19,34],[17,37,19,35],[18,6,20,4],[18,10,20,8,"newChecksum"],[18,21,20,19],[18,24,20,22,"checksumFn"],[18,34,20,32],[18,35,20,33,"payload"],[18,42,20,40],[18,43,20,41],[19,6,22,4],[19,10,22,8,"checksum"],[19,18,22,16],[19,19,22,17],[19,20,22,18],[19,21,22,19],[19,24,22,22,"newChecksum"],[19,35,22,33],[19,36,22,34],[19,37,22,35],[19,38,22,36],[19,41,23,8,"checksum"],[19,49,23,16],[19,50,23,17],[19,51,23,18],[19,52,23,19],[19,55,23,22,"newChecksum"],[19,66,23,33],[19,67,23,34],[19,68,23,35],[19,69,23,36],[19,72,24,8,"checksum"],[19,80,24,16],[19,81,24,17],[19,82,24,18],[19,83,24,19],[19,86,24,22,"newChecksum"],[19,97,24,33],[19,98,24,34],[19,99,24,35],[19,100,24,36],[19,103,25,8,"checksum"],[19,111,25,16],[19,112,25,17],[19,113,25,18],[19,114,25,19],[19,117,25,22,"newChecksum"],[19,128,25,33],[19,129,25,34],[19,130,25,35],[19,131,25,36],[19,133,25,38],[20,6,27,4],[20,13,27,11,"payload"],[20,20,27,18],[21,4,28,2],[23,4,30,2],[24,4,31,2],[24,13,31,11,"decodeUnsafe"],[24,25,31,23,"decodeUnsafe"],[24,26,31,25,"string"],[24,32,31,31],[24,34,31,33],[25,6,32,4],[25,10,32,8,"buffer"],[25,16,32,14],[25,19,32,17,"_$$_REQUIRE"],[25,30,32,17],[25,31,32,17,"_dependencyMap"],[25,45,32,17],[25,58,32,24,"decodeUnsafe"],[25,70,32,36],[25,71,32,37,"string"],[25,77,32,43],[25,78,32,44],[26,6,33,4],[26,10,33,8],[26,11,33,9,"buffer"],[26,17,33,15],[26,19,33,17],[27,6,35,4],[27,13,35,11,"decodeRaw"],[27,22,35,20],[27,23,35,21,"buffer"],[27,29,35,27],[27,30,35,28],[28,4,36,2],[29,4,38,2],[29,13,38,11,"decode"],[29,19,38,17,"decode"],[29,20,38,19,"string"],[29,26,38,25],[29,28,38,27],[30,6,39,4],[30,10,39,8,"buffer"],[30,16,39,14],[30,19,39,17,"_$$_REQUIRE"],[30,30,39,17],[30,31,39,17,"_dependencyMap"],[30,45,39,17],[30,58,39,24,"decode"],[30,64,39,30],[30,65,39,31,"string"],[30,71,39,37],[30,72,39,38],[31,6,40,4],[31,10,40,8,"payload"],[31,17,40,15],[31,20,40,18,"decodeRaw"],[31,29,40,27],[31,30,40,28,"buffer"],[31,36,40,34],[31,38,40,36,"checksumFn"],[31,48,40,46],[31,49,40,47],[32,6,41,4],[32,10,41,8],[32,11,41,9,"payload"],[32,18,41,16],[32,20,41,18],[32,26,41,24],[32,30,41,28,"Error"],[32,35,41,33],[32,36,41,34],[32,54,41,52],[32,55,41,53],[33,6,42,4],[33,13,42,11,"payload"],[33,20,42,18],[34,4,43,2],[35,4,45,2],[35,11,45,9],[36,6,46,4,"encode"],[36,12,46,10],[36,14,46,12,"encode"],[36,20,46,18],[37,6,47,4,"decode"],[37,12,47,10],[37,14,47,12,"decode"],[37,20,47,18],[38,6,48,4,"decodeUnsafe"],[38,18,48,16],[38,20,48,18,"decodeUnsafe"],[39,4,49,2],[39,5,49,3],[40,2,50,0],[40,3,50,1],[41,0,50,1],[41,3]],"functionMap":{"names":["<global>","module.exports","encode","decodeRaw","decodeUnsafe","decode"],"mappings":"AAA;iBCI;ECE;GDQ;EEE;GFW;EGG;GHK;EIE;GJK;CDO"}},"type":"js/module"}]}