{"dependencies":[{"name":"./toFinite","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":36,"index":36}}],"key":"JlM04S5mZI/armp0DIV+Z9UNRAY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Converts `value` to an integer.\n   *\n   * **Note:** This method is loosely based on\n   * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Lang\n   * @param {*} value The value to convert.\n   * @returns {number} Returns the converted integer.\n   * @example\n   *\n   * _.toInteger(3.2);\n   * // => 3\n   *\n   * _.toInteger(Number.MIN_VALUE);\n   * // => 0\n   *\n   * _.toInteger(Infinity);\n   * // => 1.7976931348623157e+308\n   *\n   * _.toInteger('3.2');\n   * // => 3\n   */\n  function toInteger(value) {\n    var result = _$$_REQUIRE(_dependencyMap[0], \"./toFinite\")(value),\n      remainder = result % 1;\n    return result === result ? remainder ? result - remainder : result : 0;\n  }\n  module.exports = toInteger;\n});","lineCount":34,"map":[[2,2,3,0],[3,0,4,0],[4,0,5,0],[5,0,6,0],[6,0,7,0],[7,0,8,0],[8,0,9,0],[9,0,10,0],[10,0,11,0],[11,0,12,0],[12,0,13,0],[13,0,14,0],[14,0,15,0],[15,0,16,0],[16,0,17,0],[17,0,18,0],[18,0,19,0],[19,0,20,0],[20,0,21,0],[21,0,22,0],[22,0,23,0],[23,0,24,0],[24,0,25,0],[25,0,26,0],[26,0,27,0],[27,0,28,0],[28,2,29,0],[28,11,29,9,"toInteger"],[28,20,29,18,"toInteger"],[28,21,29,19,"value"],[28,26,29,24],[28,28,29,26],[29,4,30,2],[29,8,30,6,"result"],[29,14,30,12],[29,17,30,15,"_$$_REQUIRE"],[29,28,30,15],[29,29,30,15,"_dependencyMap"],[29,43,30,15],[29,62,30,24,"value"],[29,67,30,29],[29,68,30,30],[30,6,31,6,"remainder"],[30,15,31,15],[30,18,31,18,"result"],[30,24,31,24],[30,27,31,27],[30,28,31,28],[31,4,33,2],[31,11,33,9,"result"],[31,17,33,15],[31,22,33,20,"result"],[31,28,33,26],[31,31,33,30,"remainder"],[31,40,33,39],[31,43,33,42,"result"],[31,49,33,48],[31,52,33,51,"remainder"],[31,61,33,60],[31,64,33,63,"result"],[31,70,33,69],[31,73,33,73],[31,74,33,74],[32,2,34,0],[33,2,36,0,"module"],[33,8,36,6],[33,9,36,7,"exports"],[33,16,36,14],[33,19,36,17,"toInteger"],[33,28,36,26],[34,0,36,27],[34,3]],"functionMap":{"names":["<global>","toInteger"],"mappings":"AAA;AC4B;CDK"}},"type":"js/module"}]}