{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":121,"column":0,"index":3763}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"bip32","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"N06/O/9WKiQ+JvkVogn1t6zAaK0="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":41,"index":75}}],"key":"/nlroPCTcjBceL8E3aKsbjY7aTo="}},{"name":"electrum-mnemonic","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":40,"index":116}}],"key":"b4QCQvkNs+MSdAmkDbo2ZB62QY4="}},{"name":"../../blue_modules/noble_ecc","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":118},"end":{"line":5,"column":47,"index":165}}],"key":"Aqf0Vm30DplNvzAB1bhpm+uOhYU="}},{"name":"./hd-legacy-p2pkh-wallet","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":166},"end":{"line":6,"column":63,"index":229}}],"key":"RiyoZy628ijdaK3Jm8TOnQocd1A="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.HDLegacyElectrumSeedP2PKHWallet = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _bip = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"bip32\"));\n  var bitcoin = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"bitcoinjs-lib\"));\n  var mn = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"electrum-mnemonic\"));\n  var _noble_ecc = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../../blue_modules/noble_ecc\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var bip32 = (0, _bip.default)(_noble_ecc.default);\n  var PREFIX = mn.PREFIXES.standard;\n  /**\n   * ElectrumSeed means that instead of BIP39 seed format it works with the format invented by Electrum wallet. Otherwise\n   * its a regular HD wallet that has all the properties of parent class.\n   *\n   * @see https://electrum.readthedocs.io/en/latest/seedphrase.html\n   */\n  var HDLegacyElectrumSeedP2PKHWallet = exports.HDLegacyElectrumSeedP2PKHWallet = /*#__PURE__*/function (_HDLegacyP2PKHWallet) {\n    function HDLegacyElectrumSeedP2PKHWallet() {\n      var _this;\n      (0, _classCallCheck2.default)(this, HDLegacyElectrumSeedP2PKHWallet);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _callSuper(this, HDLegacyElectrumSeedP2PKHWallet, [].concat(args));\n      // @ts-ignore: override\n      _this.type = HDLegacyElectrumSeedP2PKHWallet.type;\n      // @ts-ignore: override\n      _this.typeReadable = HDLegacyElectrumSeedP2PKHWallet.typeReadable;\n      return _this;\n    }\n    (0, _inherits2.default)(HDLegacyElectrumSeedP2PKHWallet, _HDLegacyP2PKHWallet);\n    return (0, _createClass2.default)(HDLegacyElectrumSeedP2PKHWallet, [{\n      key: \"validateMnemonic\",\n      value: function validateMnemonic() {\n        return mn.validateMnemonic(this.secret, PREFIX);\n      }\n    }, {\n      key: \"allowBIP47\",\n      value: function allowBIP47() {\n        return false;\n      }\n    }, {\n      key: \"generate\",\n      value: function () {\n        var _generate = (0, _asyncToGenerator2.default)(function* () {\n          throw new Error('Not implemented');\n        });\n        function generate() {\n          return _generate.apply(this, arguments);\n        }\n        return generate;\n      }()\n    }, {\n      key: \"getXpub\",\n      value: function getXpub() {\n        if (this._xpub) {\n          return this._xpub; // cache hit\n        }\n        var args = {\n          prefix: PREFIX\n        };\n        if (this.passphrase) args.passphrase = this.passphrase;\n        var root = bip32.fromSeed(mn.mnemonicToSeedSync(this.secret, args));\n        this._xpub = root.neutered().toBase58();\n        return this._xpub;\n      }\n    }, {\n      key: \"_getInternalAddressByIndex\",\n      value: function _getInternalAddressByIndex(index) {\n        index = index * 1; // cast to int\n        if (this.internal_addresses_cache[index]) return this.internal_addresses_cache[index]; // cache hit\n\n        var node = bip32.fromBase58(this.getXpub());\n        var address = bitcoin.payments.p2pkh({\n          pubkey: node.derive(1).derive(index).publicKey\n        }).address;\n        if (!address) {\n          throw new Error('Internal error: no address in _getInternalAddressByIndex');\n        }\n        return this.internal_addresses_cache[index] = address;\n      }\n    }, {\n      key: \"_getExternalAddressByIndex\",\n      value: function _getExternalAddressByIndex(index) {\n        index = index * 1; // cast to int\n        if (this.external_addresses_cache[index]) return this.external_addresses_cache[index]; // cache hit\n\n        var node = bip32.fromBase58(this.getXpub());\n        var address = bitcoin.payments.p2pkh({\n          pubkey: node.derive(0).derive(index).publicKey\n        }).address;\n        if (!address) {\n          throw new Error('Internal error: no address in _getExternalAddressByIndex');\n        }\n        return this.external_addresses_cache[index] = address;\n      }\n    }, {\n      key: \"_getWIFByIndex\",\n      value: function _getWIFByIndex(internal, index) {\n        if (!this.secret) return false;\n        var args = {\n          prefix: PREFIX\n        };\n        if (this.passphrase) args.passphrase = this.passphrase;\n        var root = bip32.fromSeed(mn.mnemonicToSeedSync(this.secret, args));\n        var path = `m/${internal ? 1 : 0}/${index}`;\n        var child = root.derivePath(path);\n        return child.toWIF();\n      }\n    }, {\n      key: \"_getNodePubkeyByIndex\",\n      value: function _getNodePubkeyByIndex(node, index) {\n        index = index * 1; // cast to int\n\n        if (node === 0 && !this._node0) {\n          var xpub = this.getXpub();\n          var hdNode = bip32.fromBase58(xpub);\n          this._node0 = hdNode.derive(node);\n        }\n        if (node === 1 && !this._node1) {\n          var _xpub = this.getXpub();\n          var _hdNode = bip32.fromBase58(_xpub);\n          this._node1 = _hdNode.derive(node);\n        }\n        if (node === 0 && this._node0) {\n          return this._node0.derive(index).publicKey;\n        }\n        if (node === 1 && this._node1) {\n          return this._node1.derive(index).publicKey;\n        }\n        throw new Error('Internal error: this._node0 or this._node1 is undefined');\n      }\n    }]);\n  }(_$$_REQUIRE(_dependencyMap[11], \"./hd-legacy-p2pkh-wallet\").HDLegacyP2PKHWallet);\n  HDLegacyElectrumSeedP2PKHWallet.type = 'HDlegacyElectrumSeedP2PKH';\n  HDLegacyElectrumSeedP2PKHWallet.typeReadable = 'HD Legacy Electrum (BIP32 P2PKH)';\n  HDLegacyElectrumSeedP2PKHWallet.derivationPath = 'm';\n});","lineCount":150,"map":[[13,2,1,0],[13,6,1,0,"_bip"],[13,10,1,0],[13,13,1,0,"_interopRequireDefault"],[13,35,1,0],[13,36,1,0,"_$$_REQUIRE"],[13,47,1,0],[13,48,1,0,"_dependencyMap"],[13,62,1,0],[14,2,2,0],[14,6,2,0,"bitcoin"],[14,13,2,0],[14,16,2,0,"_interopRequireWildcard"],[14,39,2,0],[14,40,2,0,"_$$_REQUIRE"],[14,51,2,0],[14,52,2,0,"_dependencyMap"],[14,66,2,0],[15,2,3,0],[15,6,3,0,"mn"],[15,8,3,0],[15,11,3,0,"_interopRequireWildcard"],[15,34,3,0],[15,35,3,0,"_$$_REQUIRE"],[15,46,3,0],[15,47,3,0,"_dependencyMap"],[15,61,3,0],[16,2,5,0],[16,6,5,0,"_noble_ecc"],[16,16,5,0],[16,19,5,0,"_interopRequireDefault"],[16,41,5,0],[16,42,5,0,"_$$_REQUIRE"],[16,53,5,0],[16,54,5,0,"_dependencyMap"],[16,68,5,0],[17,2,5,47],[17,11,5,47,"_getRequireWildcardCache"],[17,36,5,47,"e"],[17,37,5,47],[17,66,5,47,"WeakMap"],[17,73,5,47],[17,92,5,47,"r"],[17,93,5,47],[17,100,5,47,"WeakMap"],[17,107,5,47],[17,111,5,47,"t"],[17,112,5,47],[17,119,5,47,"WeakMap"],[17,126,5,47],[17,138,5,47,"_getRequireWildcardCache"],[17,162,5,47],[17,174,5,47,"_getRequireWildcardCache"],[17,199,5,47,"e"],[17,200,5,47],[17,211,5,47,"e"],[17,212,5,47],[17,215,5,47,"t"],[17,216,5,47],[17,219,5,47,"r"],[17,220,5,47],[17,225,5,47,"e"],[17,226,5,47],[18,2,5,47],[18,11,5,47,"_interopRequireWildcard"],[18,35,5,47,"e"],[18,36,5,47],[18,38,5,47,"r"],[18,39,5,47],[18,48,5,47,"r"],[18,49,5,47],[18,53,5,47,"e"],[18,54,5,47],[18,58,5,47,"e"],[18,59,5,47],[18,60,5,47,"__esModule"],[18,70,5,47],[18,79,5,47,"e"],[18,80,5,47],[18,95,5,47,"e"],[18,96,5,47],[18,119,5,47,"e"],[18,120,5,47],[18,145,5,47,"e"],[18,146,5,47],[18,157,5,47,"default"],[18,164,5,47],[18,166,5,47,"e"],[18,167,5,47],[18,175,5,47,"t"],[18,176,5,47],[18,179,5,47,"_getRequireWildcardCache"],[18,203,5,47],[18,204,5,47,"r"],[18,205,5,47],[18,212,5,47,"t"],[18,213,5,47],[18,217,5,47,"t"],[18,218,5,47],[18,219,5,47,"has"],[18,222,5,47],[18,223,5,47,"e"],[18,224,5,47],[18,234,5,47,"t"],[18,235,5,47],[18,236,5,47,"get"],[18,239,5,47],[18,240,5,47,"e"],[18,241,5,47],[18,248,5,47,"n"],[18,249,5,47],[18,254,5,47,"__proto__"],[18,263,5,47],[18,273,5,47,"a"],[18,274,5,47],[18,277,5,47,"Object"],[18,283,5,47],[18,284,5,47,"defineProperty"],[18,298,5,47],[18,302,5,47,"Object"],[18,308,5,47],[18,309,5,47,"getOwnPropertyDescriptor"],[18,333,5,47],[18,344,5,47,"u"],[18,345,5,47],[18,349,5,47,"e"],[18,350,5,47],[18,370,5,47,"u"],[18,371,5,47],[18,378,5,47,"hasOwnProperty"],[18,392,5,47],[18,393,5,47,"call"],[18,397,5,47],[18,398,5,47,"e"],[18,399,5,47],[18,401,5,47,"u"],[18,402,5,47],[18,411,5,47,"i"],[18,412,5,47],[18,415,5,47,"a"],[18,416,5,47],[18,419,5,47,"Object"],[18,425,5,47],[18,426,5,47,"getOwnPropertyDescriptor"],[18,450,5,47],[18,451,5,47,"e"],[18,452,5,47],[18,454,5,47,"u"],[18,455,5,47],[18,465,5,47,"i"],[18,466,5,47],[18,471,5,47,"i"],[18,472,5,47],[18,473,5,47,"get"],[18,476,5,47],[18,480,5,47,"i"],[18,481,5,47],[18,482,5,47,"set"],[18,485,5,47],[18,489,5,47,"Object"],[18,495,5,47],[18,496,5,47,"defineProperty"],[18,510,5,47],[18,511,5,47,"n"],[18,512,5,47],[18,514,5,47,"u"],[18,515,5,47],[18,517,5,47,"i"],[18,518,5,47],[18,522,5,47,"n"],[18,523,5,47],[18,524,5,47,"u"],[18,525,5,47],[18,529,5,47,"e"],[18,530,5,47],[18,531,5,47,"u"],[18,532,5,47],[18,544,5,47,"n"],[18,545,5,47],[18,546,5,47,"default"],[18,553,5,47],[18,556,5,47,"e"],[18,557,5,47],[18,559,5,47,"t"],[18,560,5,47],[18,564,5,47,"t"],[18,565,5,47],[18,566,5,47,"set"],[18,569,5,47],[18,570,5,47,"e"],[18,571,5,47],[18,573,5,47,"n"],[18,574,5,47],[18,577,5,47,"n"],[18,578,5,47],[19,2,5,47],[19,11,5,47,"_callSuper"],[19,22,5,47,"t"],[19,23,5,47],[19,25,5,47,"o"],[19,26,5,47],[19,28,5,47,"e"],[19,29,5,47],[19,40,5,47,"o"],[19,41,5,47],[19,48,5,47,"_getPrototypeOf2"],[19,64,5,47],[19,65,5,47,"default"],[19,72,5,47],[19,74,5,47,"o"],[19,75,5,47],[19,82,5,47,"_possibleConstructorReturn2"],[19,109,5,47],[19,110,5,47,"default"],[19,117,5,47],[19,119,5,47,"t"],[19,120,5,47],[19,122,5,47,"_isNativeReflectConstruct"],[19,147,5,47],[19,152,5,47,"Reflect"],[19,159,5,47],[19,160,5,47,"construct"],[19,169,5,47],[19,170,5,47,"o"],[19,171,5,47],[19,173,5,47,"e"],[19,174,5,47],[19,186,5,47,"_getPrototypeOf2"],[19,202,5,47],[19,203,5,47,"default"],[19,210,5,47],[19,212,5,47,"t"],[19,213,5,47],[19,215,5,47,"constructor"],[19,226,5,47],[19,230,5,47,"o"],[19,231,5,47],[19,232,5,47,"apply"],[19,237,5,47],[19,238,5,47,"t"],[19,239,5,47],[19,241,5,47,"e"],[19,242,5,47],[20,2,5,47],[20,11,5,47,"_isNativeReflectConstruct"],[20,37,5,47],[20,51,5,47,"t"],[20,52,5,47],[20,56,5,47,"Boolean"],[20,63,5,47],[20,64,5,47,"prototype"],[20,73,5,47],[20,74,5,47,"valueOf"],[20,81,5,47],[20,82,5,47,"call"],[20,86,5,47],[20,87,5,47,"Reflect"],[20,94,5,47],[20,95,5,47,"construct"],[20,104,5,47],[20,105,5,47,"Boolean"],[20,112,5,47],[20,145,5,47,"t"],[20,146,5,47],[20,159,5,47,"_isNativeReflectConstruct"],[20,184,5,47],[20,196,5,47,"_isNativeReflectConstruct"],[20,222,5,47],[20,235,5,47,"t"],[20,236,5,47],[21,2,8,0],[21,6,8,6,"bip32"],[21,11,8,11],[21,14,8,14],[21,18,8,14,"BIP32Factory"],[21,30,8,26],[21,32,8,27,"ecc"],[21,50,8,30],[21,51,8,31],[22,2,9,0],[22,6,9,6,"PREFIX"],[22,12,9,12],[22,15,9,15,"mn"],[22,17,9,17],[22,18,9,18,"PREFIXES"],[22,26,9,26],[22,27,9,27,"standard"],[22,35,9,35],[23,2,16,0],[24,0,17,0],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,2,16,0],[29,6,22,13,"HDLegacyElectrumSeedP2PKHWallet"],[29,37,22,44],[29,40,22,44,"exports"],[29,47,22,44],[29,48,22,44,"HDLegacyElectrumSeedP2PKHWallet"],[29,79,22,44],[29,105,22,44,"_HDLegacyP2PKHWallet"],[29,125,22,44],[30,4,22,44],[30,13,22,44,"HDLegacyElectrumSeedP2PKHWallet"],[30,45,22,44],[31,6,22,44],[31,10,22,44,"_this"],[31,15,22,44],[32,6,22,44],[32,10,22,44,"_classCallCheck2"],[32,26,22,44],[32,27,22,44,"default"],[32,34,22,44],[32,42,22,44,"HDLegacyElectrumSeedP2PKHWallet"],[32,73,22,44],[33,6,22,44],[33,15,22,44,"_len"],[33,19,22,44],[33,22,22,44,"arguments"],[33,31,22,44],[33,32,22,44,"length"],[33,38,22,44],[33,40,22,44,"args"],[33,44,22,44],[33,51,22,44,"Array"],[33,56,22,44],[33,57,22,44,"_len"],[33,61,22,44],[33,64,22,44,"_key"],[33,68,22,44],[33,74,22,44,"_key"],[33,78,22,44],[33,81,22,44,"_len"],[33,85,22,44],[33,87,22,44,"_key"],[33,91,22,44],[34,8,22,44,"args"],[34,12,22,44],[34,13,22,44,"_key"],[34,17,22,44],[34,21,22,44,"arguments"],[34,30,22,44],[34,31,22,44,"_key"],[34,35,22,44],[35,6,22,44],[36,6,22,44,"_this"],[36,11,22,44],[36,14,22,44,"_callSuper"],[36,24,22,44],[36,31,22,44,"HDLegacyElectrumSeedP2PKHWallet"],[36,62,22,44],[36,67,22,44,"concat"],[36,73,22,44],[36,74,22,44,"args"],[36,78,22,44],[37,6,25,2],[38,6,25,2,"_this"],[38,11,25,2],[38,12,26,18,"type"],[38,16,26,22],[38,19,26,25,"HDLegacyElectrumSeedP2PKHWallet"],[38,50,26,56],[38,51,26,57,"type"],[38,55,26,61],[39,6,27,2],[40,6,27,2,"_this"],[40,11,27,2],[40,12,28,18,"typeReadable"],[40,24,28,30],[40,27,28,33,"HDLegacyElectrumSeedP2PKHWallet"],[40,58,28,64],[40,59,28,65,"typeReadable"],[40,71,28,77],[41,6,28,77],[41,13,28,77,"_this"],[41,18,28,77],[42,4,28,77],[43,4,28,77],[43,8,28,77,"_inherits2"],[43,18,28,77],[43,19,28,77,"default"],[43,26,28,77],[43,28,28,77,"HDLegacyElectrumSeedP2PKHWallet"],[43,59,28,77],[43,61,28,77,"_HDLegacyP2PKHWallet"],[43,81,28,77],[44,4,28,77],[44,15,28,77,"_createClass2"],[44,28,28,77],[44,29,28,77,"default"],[44,36,28,77],[44,38,28,77,"HDLegacyElectrumSeedP2PKHWallet"],[44,69,28,77],[45,6,28,77,"key"],[45,9,28,77],[46,6,28,77,"value"],[46,11,28,77],[46,13,31,2],[46,22,31,2,"validateMnemonic"],[46,38,31,18,"validateMnemonic"],[46,39,31,18],[46,41,31,21],[47,8,32,4],[47,15,32,11,"mn"],[47,17,32,13],[47,18,32,14,"validateMnemonic"],[47,34,32,30],[47,35,32,31],[47,39,32,35],[47,40,32,36,"secret"],[47,46,32,42],[47,48,32,44,"PREFIX"],[47,54,32,50],[47,55,32,51],[48,6,33,2],[49,4,33,3],[50,6,33,3,"key"],[50,9,33,3],[51,6,33,3,"value"],[51,11,33,3],[51,13,35,2],[51,22,35,2,"allowBIP47"],[51,32,35,12,"allowBIP47"],[51,33,35,12],[51,35,35,15],[52,8,36,4],[52,15,36,11],[52,20,36,16],[53,6,37,2],[54,4,37,3],[55,6,37,3,"key"],[55,9,37,3],[56,6,37,3,"value"],[56,11,37,3],[57,8,37,3],[57,12,37,3,"_generate"],[57,21,37,3],[57,28,37,3,"_asyncToGenerator2"],[57,46,37,3],[57,47,37,3,"default"],[57,54,37,3],[57,56,39,2],[57,69,39,19],[58,10,40,4],[58,16,40,10],[58,20,40,14,"Error"],[58,25,40,19],[58,26,40,20],[58,43,40,37],[58,44,40,38],[59,8,41,2],[59,9,41,3],[60,8,41,3],[60,17,39,8,"generate"],[60,25,39,16,"generate"],[60,26,39,16],[61,10,39,16],[61,17,39,16,"_generate"],[61,26,39,16],[61,27,39,16,"apply"],[61,32,39,16],[61,39,39,16,"arguments"],[61,48,39,16],[62,8,39,16],[63,8,39,16],[63,15,39,8,"generate"],[63,23,39,16],[64,6,39,16],[65,4,39,16],[66,6,39,16,"key"],[66,9,39,16],[67,6,39,16,"value"],[67,11,39,16],[67,13,43,2],[67,22,43,2,"getXpub"],[67,29,43,9,"getXpub"],[67,30,43,9],[67,32,43,12],[68,8,44,4],[68,12,44,8],[68,16,44,12],[68,17,44,13,"_xpub"],[68,22,44,18],[68,24,44,20],[69,10,45,6],[69,17,45,13],[69,21,45,17],[69,22,45,18,"_xpub"],[69,27,45,23],[69,28,45,24],[69,29,45,25],[70,8,46,4],[71,8,47,4],[71,12,47,10,"args"],[71,16,47,24],[71,19,47,27],[72,10,47,29,"prefix"],[72,16,47,35],[72,18,47,37,"PREFIX"],[73,8,47,44],[73,9,47,45],[74,8,48,4],[74,12,48,8],[74,16,48,12],[74,17,48,13,"passphrase"],[74,27,48,23],[74,29,48,25,"args"],[74,33,48,29],[74,34,48,30,"passphrase"],[74,44,48,40],[74,47,48,43],[74,51,48,47],[74,52,48,48,"passphrase"],[74,62,48,58],[75,8,49,4],[75,12,49,10,"root"],[75,16,49,14],[75,19,49,17,"bip32"],[75,24,49,22],[75,25,49,23,"fromSeed"],[75,33,49,31],[75,34,49,32,"mn"],[75,36,49,34],[75,37,49,35,"mnemonicToSeedSync"],[75,55,49,53],[75,56,49,54],[75,60,49,58],[75,61,49,59,"secret"],[75,67,49,65],[75,69,49,67,"args"],[75,73,49,71],[75,74,49,72],[75,75,49,73],[76,8,50,4],[76,12,50,8],[76,13,50,9,"_xpub"],[76,18,50,14],[76,21,50,17,"root"],[76,25,50,21],[76,26,50,22,"neutered"],[76,34,50,30],[76,35,50,31],[76,36,50,32],[76,37,50,33,"toBase58"],[76,45,50,41],[76,46,50,42],[76,47,50,43],[77,8,51,4],[77,15,51,11],[77,19,51,15],[77,20,51,16,"_xpub"],[77,25,51,21],[78,6,52,2],[79,4,52,3],[80,6,52,3,"key"],[80,9,52,3],[81,6,52,3,"value"],[81,11,52,3],[81,13,54,2],[81,22,54,2,"_getInternalAddressByIndex"],[81,48,54,28,"_getInternalAddressByIndex"],[81,49,54,29,"index"],[81,54,54,42],[81,56,54,44],[82,8,55,4,"index"],[82,13,55,9],[82,16,55,12,"index"],[82,21,55,17],[82,24,55,20],[82,25,55,21],[82,26,55,22],[82,27,55,23],[83,8,56,4],[83,12,56,8],[83,16,56,12],[83,17,56,13,"internal_addresses_cache"],[83,41,56,37],[83,42,56,38,"index"],[83,47,56,43],[83,48,56,44],[83,50,56,46],[83,57,56,53],[83,61,56,57],[83,62,56,58,"internal_addresses_cache"],[83,86,56,82],[83,87,56,83,"index"],[83,92,56,88],[83,93,56,89],[83,94,56,90],[83,95,56,91],[85,8,58,4],[85,12,58,10,"node"],[85,16,58,14],[85,19,58,17,"bip32"],[85,24,58,22],[85,25,58,23,"fromBase58"],[85,35,58,33],[85,36,58,34],[85,40,58,38],[85,41,58,39,"getXpub"],[85,48,58,46],[85,49,58,47],[85,50,58,48],[85,51,58,49],[86,8,59,4],[86,12,59,10,"address"],[86,19,59,17],[86,22,59,20,"bitcoin"],[86,29,59,27],[86,30,59,28,"payments"],[86,38,59,36],[86,39,59,37,"p2pkh"],[86,44,59,42],[86,45,59,43],[87,10,60,6,"pubkey"],[87,16,60,12],[87,18,60,14,"node"],[87,22,60,18],[87,23,60,19,"derive"],[87,29,60,25],[87,30,60,26],[87,31,60,27],[87,32,60,28],[87,33,60,29,"derive"],[87,39,60,35],[87,40,60,36,"index"],[87,45,60,41],[87,46,60,42],[87,47,60,43,"publicKey"],[88,8,61,4],[88,9,61,5],[88,10,61,6],[88,11,61,7,"address"],[88,18,61,14],[89,8,62,4],[89,12,62,8],[89,13,62,9,"address"],[89,20,62,16],[89,22,62,18],[90,10,63,6],[90,16,63,12],[90,20,63,16,"Error"],[90,25,63,21],[90,26,63,22],[90,84,63,80],[90,85,63,81],[91,8,64,4],[92,8,66,4],[92,15,66,12],[92,19,66,16],[92,20,66,17,"internal_addresses_cache"],[92,44,66,41],[92,45,66,42,"index"],[92,50,66,47],[92,51,66,48],[92,54,66,51,"address"],[92,61,66,58],[93,6,67,2],[94,4,67,3],[95,6,67,3,"key"],[95,9,67,3],[96,6,67,3,"value"],[96,11,67,3],[96,13,69,2],[96,22,69,2,"_getExternalAddressByIndex"],[96,48,69,28,"_getExternalAddressByIndex"],[96,49,69,29,"index"],[96,54,69,42],[96,56,69,44],[97,8,70,4,"index"],[97,13,70,9],[97,16,70,12,"index"],[97,21,70,17],[97,24,70,20],[97,25,70,21],[97,26,70,22],[97,27,70,23],[98,8,71,4],[98,12,71,8],[98,16,71,12],[98,17,71,13,"external_addresses_cache"],[98,41,71,37],[98,42,71,38,"index"],[98,47,71,43],[98,48,71,44],[98,50,71,46],[98,57,71,53],[98,61,71,57],[98,62,71,58,"external_addresses_cache"],[98,86,71,82],[98,87,71,83,"index"],[98,92,71,88],[98,93,71,89],[98,94,71,90],[98,95,71,91],[100,8,73,4],[100,12,73,10,"node"],[100,16,73,14],[100,19,73,17,"bip32"],[100,24,73,22],[100,25,73,23,"fromBase58"],[100,35,73,33],[100,36,73,34],[100,40,73,38],[100,41,73,39,"getXpub"],[100,48,73,46],[100,49,73,47],[100,50,73,48],[100,51,73,49],[101,8,74,4],[101,12,74,10,"address"],[101,19,74,17],[101,22,74,20,"bitcoin"],[101,29,74,27],[101,30,74,28,"payments"],[101,38,74,36],[101,39,74,37,"p2pkh"],[101,44,74,42],[101,45,74,43],[102,10,75,6,"pubkey"],[102,16,75,12],[102,18,75,14,"node"],[102,22,75,18],[102,23,75,19,"derive"],[102,29,75,25],[102,30,75,26],[102,31,75,27],[102,32,75,28],[102,33,75,29,"derive"],[102,39,75,35],[102,40,75,36,"index"],[102,45,75,41],[102,46,75,42],[102,47,75,43,"publicKey"],[103,8,76,4],[103,9,76,5],[103,10,76,6],[103,11,76,7,"address"],[103,18,76,14],[104,8,77,4],[104,12,77,8],[104,13,77,9,"address"],[104,20,77,16],[104,22,77,18],[105,10,78,6],[105,16,78,12],[105,20,78,16,"Error"],[105,25,78,21],[105,26,78,22],[105,84,78,80],[105,85,78,81],[106,8,79,4],[107,8,81,4],[107,15,81,12],[107,19,81,16],[107,20,81,17,"external_addresses_cache"],[107,44,81,41],[107,45,81,42,"index"],[107,50,81,47],[107,51,81,48],[107,54,81,51,"address"],[107,61,81,58],[108,6,82,2],[109,4,82,3],[110,6,82,3,"key"],[110,9,82,3],[111,6,82,3,"value"],[111,11,82,3],[111,13,84,2],[111,22,84,2,"_getWIFByIndex"],[111,36,84,16,"_getWIFByIndex"],[111,37,84,17,"internal"],[111,45,84,34],[111,47,84,36,"index"],[111,52,84,49],[111,54,84,67],[112,8,85,4],[112,12,85,8],[112,13,85,9],[112,17,85,13],[112,18,85,14,"secret"],[112,24,85,20],[112,26,85,22],[112,33,85,29],[112,38,85,34],[113,8,86,4],[113,12,86,10,"args"],[113,16,86,24],[113,19,86,27],[114,10,86,29,"prefix"],[114,16,86,35],[114,18,86,37,"PREFIX"],[115,8,86,44],[115,9,86,45],[116,8,87,4],[116,12,87,8],[116,16,87,12],[116,17,87,13,"passphrase"],[116,27,87,23],[116,29,87,25,"args"],[116,33,87,29],[116,34,87,30,"passphrase"],[116,44,87,40],[116,47,87,43],[116,51,87,47],[116,52,87,48,"passphrase"],[116,62,87,58],[117,8,88,4],[117,12,88,10,"root"],[117,16,88,14],[117,19,88,17,"bip32"],[117,24,88,22],[117,25,88,23,"fromSeed"],[117,33,88,31],[117,34,88,32,"mn"],[117,36,88,34],[117,37,88,35,"mnemonicToSeedSync"],[117,55,88,53],[117,56,88,54],[117,60,88,58],[117,61,88,59,"secret"],[117,67,88,65],[117,69,88,67,"args"],[117,73,88,71],[117,74,88,72],[117,75,88,73],[118,8,89,4],[118,12,89,10,"path"],[118,16,89,14],[118,19,89,17],[118,24,89,22,"internal"],[118,32,89,30],[118,35,89,33],[118,36,89,34],[118,39,89,37],[118,40,89,38],[118,44,89,42,"index"],[118,49,89,47],[118,51,89,49],[119,8,90,4],[119,12,90,10,"child"],[119,17,90,15],[119,20,90,18,"root"],[119,24,90,22],[119,25,90,23,"derivePath"],[119,35,90,33],[119,36,90,34,"path"],[119,40,90,38],[119,41,90,39],[120,8,92,4],[120,15,92,11,"child"],[120,20,92,16],[120,21,92,17,"toWIF"],[120,26,92,22],[120,27,92,23],[120,28,92,24],[121,6,93,2],[122,4,93,3],[123,6,93,3,"key"],[123,9,93,3],[124,6,93,3,"value"],[124,11,93,3],[124,13,95,2],[124,22,95,2,"_getNodePubkeyByIndex"],[124,43,95,23,"_getNodePubkeyByIndex"],[124,44,95,24,"node"],[124,48,95,36],[124,50,95,38,"index"],[124,55,95,51],[124,57,95,53],[125,8,96,4,"index"],[125,13,96,9],[125,16,96,12,"index"],[125,21,96,17],[125,24,96,20],[125,25,96,21],[125,26,96,22],[125,27,96,23],[127,8,98,4],[127,12,98,8,"node"],[127,16,98,12],[127,21,98,17],[127,22,98,18],[127,26,98,22],[127,27,98,23],[127,31,98,27],[127,32,98,28,"_node0"],[127,38,98,34],[127,40,98,36],[128,10,99,6],[128,14,99,12,"xpub"],[128,18,99,16],[128,21,99,19],[128,25,99,23],[128,26,99,24,"getXpub"],[128,33,99,31],[128,34,99,32],[128,35,99,33],[129,10,100,6],[129,14,100,12,"hdNode"],[129,20,100,18],[129,23,100,21,"bip32"],[129,28,100,26],[129,29,100,27,"fromBase58"],[129,39,100,37],[129,40,100,38,"xpub"],[129,44,100,42],[129,45,100,43],[130,10,101,6],[130,14,101,10],[130,15,101,11,"_node0"],[130,21,101,17],[130,24,101,20,"hdNode"],[130,30,101,26],[130,31,101,27,"derive"],[130,37,101,33],[130,38,101,34,"node"],[130,42,101,38],[130,43,101,39],[131,8,102,4],[132,8,104,4],[132,12,104,8,"node"],[132,16,104,12],[132,21,104,17],[132,22,104,18],[132,26,104,22],[132,27,104,23],[132,31,104,27],[132,32,104,28,"_node1"],[132,38,104,34],[132,40,104,36],[133,10,105,6],[133,14,105,12,"xpub"],[133,19,105,16],[133,22,105,19],[133,26,105,23],[133,27,105,24,"getXpub"],[133,34,105,31],[133,35,105,32],[133,36,105,33],[134,10,106,6],[134,14,106,12,"hdNode"],[134,21,106,18],[134,24,106,21,"bip32"],[134,29,106,26],[134,30,106,27,"fromBase58"],[134,40,106,37],[134,41,106,38,"xpub"],[134,46,106,42],[134,47,106,43],[135,10,107,6],[135,14,107,10],[135,15,107,11,"_node1"],[135,21,107,17],[135,24,107,20,"hdNode"],[135,31,107,26],[135,32,107,27,"derive"],[135,38,107,33],[135,39,107,34,"node"],[135,43,107,38],[135,44,107,39],[136,8,108,4],[137,8,110,4],[137,12,110,8,"node"],[137,16,110,12],[137,21,110,17],[137,22,110,18],[137,26,110,22],[137,30,110,26],[137,31,110,27,"_node0"],[137,37,110,33],[137,39,110,35],[138,10,111,6],[138,17,111,13],[138,21,111,17],[138,22,111,18,"_node0"],[138,28,111,24],[138,29,111,25,"derive"],[138,35,111,31],[138,36,111,32,"index"],[138,41,111,37],[138,42,111,38],[138,43,111,39,"publicKey"],[138,52,111,48],[139,8,112,4],[140,8,114,4],[140,12,114,8,"node"],[140,16,114,12],[140,21,114,17],[140,22,114,18],[140,26,114,22],[140,30,114,26],[140,31,114,27,"_node1"],[140,37,114,33],[140,39,114,35],[141,10,115,6],[141,17,115,13],[141,21,115,17],[141,22,115,18,"_node1"],[141,28,115,24],[141,29,115,25,"derive"],[141,35,115,31],[141,36,115,32,"index"],[141,41,115,37],[141,42,115,38],[141,43,115,39,"publicKey"],[141,52,115,48],[142,8,116,4],[143,8,118,4],[143,14,118,10],[143,18,118,14,"Error"],[143,23,118,19],[143,24,118,20],[143,81,118,77],[143,82,118,78],[144,6,119,2],[145,4,119,3],[146,2,119,3],[146,4,22,53,"HDLegacyP2PKHWallet"],[146,35,22,53],[146,36,22,53,"HDLegacyP2PKHWallet"],[146,83,22,72],[147,2,22,13,"HDLegacyElectrumSeedP2PKHWallet"],[147,33,22,44],[147,34,23,18,"type"],[147,38,23,22],[147,41,23,25],[147,68,23,52],[148,2,22,13,"HDLegacyElectrumSeedP2PKHWallet"],[148,33,22,44],[148,34,24,18,"typeReadable"],[148,46,24,30],[148,49,24,33],[148,83,24,67],[149,2,22,13,"HDLegacyElectrumSeedP2PKHWallet"],[149,33,22,44],[149,34,29,18,"derivationPath"],[149,48,29,32],[149,51,29,35],[149,54,29,38],[150,0,29,38],[150,3]],"functionMap":{"names":["<global>","HDLegacyElectrumSeedP2PKHWallet","HDLegacyElectrumSeedP2PKHWallet#validateMnemonic","HDLegacyElectrumSeedP2PKHWallet#allowBIP47","HDLegacyElectrumSeedP2PKHWallet#generate","HDLegacyElectrumSeedP2PKHWallet#getXpub","HDLegacyElectrumSeedP2PKHWallet#_getInternalAddressByIndex","HDLegacyElectrumSeedP2PKHWallet#_getExternalAddressByIndex","HDLegacyElectrumSeedP2PKHWallet#_getWIFByIndex","HDLegacyElectrumSeedP2PKHWallet#_getNodePubkeyByIndex"],"mappings":"AAA;OCqB;ECS;GDE;EEE;GFE;EGE;GHE;EIE;GJS;EKE;GLa;EME;GNa;EOE;GPS;EQE;GRwB;CDC"}},"type":"js/module"}]}