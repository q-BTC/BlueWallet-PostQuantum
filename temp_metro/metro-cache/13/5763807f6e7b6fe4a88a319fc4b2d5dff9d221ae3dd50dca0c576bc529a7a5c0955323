{"dependencies":[{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":64,"column":0,"index":2184}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"./varint","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":35,"index":112}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":35,"index":112}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":35,"index":112}},{"start":{"line":3,"column":16,"index":93},"end":{"line":3,"column":35,"index":112}}],"key":"YO1acwkTh3b/deZzhoiyH9xjmx4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/toConsumableArray\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.range = function (n) {\n    return _toConsumableArray(Array(n).keys());\n  };\n  function reverseBuffer(buffer) {\n    if (buffer.length < 1) return buffer;\n    var j = buffer.length - 1;\n    var tmp = 0;\n    for (var i = 0; i < buffer.length / 2; i++) {\n      tmp = buffer[i];\n      buffer[i] = buffer[j];\n      buffer[j] = tmp;\n      j--;\n    }\n    return buffer;\n  }\n  exports.reverseBuffer = reverseBuffer;\n  function keyValsToBuffer(keyVals) {\n    var buffers = keyVals.map(keyValToBuffer);\n    buffers.push(Buffer.from([0]));\n    return Buffer.concat(buffers);\n  }\n  exports.keyValsToBuffer = keyValsToBuffer;\n  function keyValToBuffer(keyVal) {\n    var keyLen = keyVal.key.length;\n    var valLen = keyVal.value.length;\n    var keyVarIntLen = _$$_REQUIRE(_dependencyMap[1], \"./varint\").encodingLength(keyLen);\n    var valVarIntLen = _$$_REQUIRE(_dependencyMap[1], \"./varint\").encodingLength(valLen);\n    var buffer = Buffer.allocUnsafe(keyVarIntLen + keyLen + valVarIntLen + valLen);\n    _$$_REQUIRE(_dependencyMap[1], \"./varint\").encode(keyLen, buffer, 0);\n    keyVal.key.copy(buffer, keyVarIntLen);\n    _$$_REQUIRE(_dependencyMap[1], \"./varint\").encode(valLen, buffer, keyVarIntLen + keyLen);\n    keyVal.value.copy(buffer, keyVarIntLen + keyLen + valVarIntLen);\n    return buffer;\n  }\n  exports.keyValToBuffer = keyValToBuffer;\n  // https://github.com/feross/buffer/blob/master/index.js#L1127\n  function verifuint(value, max) {\n    if (typeof value !== 'number') throw new Error('cannot write a non-number as a number');\n    if (value < 0) throw new Error('specified a negative value for writing an unsigned value');\n    if (value > max) throw new Error('RangeError: value out of range');\n    if (Math.floor(value) !== value) throw new Error('value has a fractional component');\n  }\n  function readUInt64LE(buffer, offset) {\n    var a = buffer.readUInt32LE(offset);\n    var b = buffer.readUInt32LE(offset + 4);\n    b *= 0x100000000;\n    verifuint(b + a, 0x001fffffffffffff);\n    return b + a;\n  }\n  exports.readUInt64LE = readUInt64LE;\n  function writeUInt64LE(buffer, value, offset) {\n    verifuint(value, 0x001fffffffffffff);\n    buffer.writeInt32LE(value & -1, offset);\n    buffer.writeUInt32LE(Math.floor(value / 0x100000000), offset + 4);\n    return offset + 8;\n  }\n  exports.writeUInt64LE = writeUInt64LE;\n});","lineCount":65,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_toConsumableArray"],[4,24,1,13],[4,27,1,13,"_$$_REQUIRE"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,2,0,"Object"],[5,8,2,6],[5,9,2,7,"defineProperty"],[5,23,2,21],[5,24,2,22,"exports"],[5,31,2,29],[5,33,2,31],[5,45,2,43],[5,47,2,45],[6,4,2,47,"value"],[6,9,2,52],[6,11,2,54],[7,2,2,59],[7,3,2,60],[7,4,2,61],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"range"],[8,15,4,13],[8,18,4,16],[8,28,4,16,"n"],[8,29,4,17],[9,4,4,17],[9,11,4,17,"_toConsumableArray"],[9,29,4,17],[9,30,4,25,"Array"],[9,35,4,30],[9,36,4,31,"n"],[9,37,4,32],[9,38,4,33],[9,39,4,34,"keys"],[9,43,4,38],[9,44,4,39],[9,45,4,40],[10,2,4,40],[10,3,4,41],[11,2,5,0],[11,11,5,9,"reverseBuffer"],[11,24,5,22,"reverseBuffer"],[11,25,5,23,"buffer"],[11,31,5,29],[11,33,5,31],[12,4,6,2],[12,8,6,6,"buffer"],[12,14,6,12],[12,15,6,13,"length"],[12,21,6,19],[12,24,6,22],[12,25,6,23],[12,27,6,25],[12,34,6,32,"buffer"],[12,40,6,38],[13,4,7,2],[13,8,7,6,"j"],[13,9,7,7],[13,12,7,10,"buffer"],[13,18,7,16],[13,19,7,17,"length"],[13,25,7,23],[13,28,7,26],[13,29,7,27],[14,4,8,2],[14,8,8,6,"tmp"],[14,11,8,9],[14,14,8,12],[14,15,8,13],[15,4,9,2],[15,9,9,7],[15,13,9,11,"i"],[15,14,9,12],[15,17,9,15],[15,18,9,16],[15,20,9,18,"i"],[15,21,9,19],[15,24,9,22,"buffer"],[15,30,9,28],[15,31,9,29,"length"],[15,37,9,35],[15,40,9,38],[15,41,9,39],[15,43,9,41,"i"],[15,44,9,42],[15,46,9,44],[15,48,9,46],[16,6,10,4,"tmp"],[16,9,10,7],[16,12,10,10,"buffer"],[16,18,10,16],[16,19,10,17,"i"],[16,20,10,18],[16,21,10,19],[17,6,11,4,"buffer"],[17,12,11,10],[17,13,11,11,"i"],[17,14,11,12],[17,15,11,13],[17,18,11,16,"buffer"],[17,24,11,22],[17,25,11,23,"j"],[17,26,11,24],[17,27,11,25],[18,6,12,4,"buffer"],[18,12,12,10],[18,13,12,11,"j"],[18,14,12,12],[18,15,12,13],[18,18,12,16,"tmp"],[18,21,12,19],[19,6,13,4,"j"],[19,7,13,5],[19,9,13,7],[20,4,14,2],[21,4,15,2],[21,11,15,9,"buffer"],[21,17,15,15],[22,2,16,0],[23,2,17,0,"exports"],[23,9,17,7],[23,10,17,8,"reverseBuffer"],[23,23,17,21],[23,26,17,24,"reverseBuffer"],[23,39,17,37],[24,2,18,0],[24,11,18,9,"keyValsToBuffer"],[24,26,18,24,"keyValsToBuffer"],[24,27,18,25,"keyVals"],[24,34,18,32],[24,36,18,34],[25,4,19,2],[25,8,19,8,"buffers"],[25,15,19,15],[25,18,19,18,"keyVals"],[25,25,19,25],[25,26,19,26,"map"],[25,29,19,29],[25,30,19,30,"keyValToBuffer"],[25,44,19,44],[25,45,19,45],[26,4,20,2,"buffers"],[26,11,20,9],[26,12,20,10,"push"],[26,16,20,14],[26,17,20,15,"Buffer"],[26,23,20,21],[26,24,20,22,"from"],[26,28,20,26],[26,29,20,27],[26,30,20,28],[26,31,20,29],[26,32,20,30],[26,33,20,31],[26,34,20,32],[27,4,21,2],[27,11,21,9,"Buffer"],[27,17,21,15],[27,18,21,16,"concat"],[27,24,21,22],[27,25,21,23,"buffers"],[27,32,21,30],[27,33,21,31],[28,2,22,0],[29,2,23,0,"exports"],[29,9,23,7],[29,10,23,8,"keyValsToBuffer"],[29,25,23,23],[29,28,23,26,"keyValsToBuffer"],[29,43,23,41],[30,2,24,0],[30,11,24,9,"keyValToBuffer"],[30,25,24,23,"keyValToBuffer"],[30,26,24,24,"keyVal"],[30,32,24,30],[30,34,24,32],[31,4,25,2],[31,8,25,8,"keyLen"],[31,14,25,14],[31,17,25,17,"keyVal"],[31,23,25,23],[31,24,25,24,"key"],[31,27,25,27],[31,28,25,28,"length"],[31,34,25,34],[32,4,26,2],[32,8,26,8,"valLen"],[32,14,26,14],[32,17,26,17,"keyVal"],[32,23,26,23],[32,24,26,24,"value"],[32,29,26,29],[32,30,26,30,"length"],[32,36,26,36],[33,4,27,2],[33,8,27,8,"keyVarIntLen"],[33,20,27,20],[33,23,27,23,"_$$_REQUIRE"],[33,34,27,23],[33,35,27,23,"_dependencyMap"],[33,49,27,23],[33,66,27,31,"encodingLength"],[33,80,27,45],[33,81,27,46,"keyLen"],[33,87,27,52],[33,88,27,53],[34,4,28,2],[34,8,28,8,"valVarIntLen"],[34,20,28,20],[34,23,28,23,"_$$_REQUIRE"],[34,34,28,23],[34,35,28,23,"_dependencyMap"],[34,49,28,23],[34,66,28,31,"encodingLength"],[34,80,28,45],[34,81,28,46,"valLen"],[34,87,28,52],[34,88,28,53],[35,4,29,2],[35,8,29,8,"buffer"],[35,14,29,14],[35,17,29,17,"Buffer"],[35,23,29,23],[35,24,29,24,"allocUnsafe"],[35,35,29,35],[35,36,30,4,"keyVarIntLen"],[35,48,30,16],[35,51,30,19,"keyLen"],[35,57,30,25],[35,60,30,28,"valVarIntLen"],[35,72,30,40],[35,75,30,43,"valLen"],[35,81,31,2],[35,82,31,3],[36,4,32,2,"_$$_REQUIRE"],[36,15,32,2],[36,16,32,2,"_dependencyMap"],[36,30,32,2],[36,47,32,10,"encode"],[36,53,32,16],[36,54,32,17,"keyLen"],[36,60,32,23],[36,62,32,25,"buffer"],[36,68,32,31],[36,70,32,33],[36,71,32,34],[36,72,32,35],[37,4,33,2,"keyVal"],[37,10,33,8],[37,11,33,9,"key"],[37,14,33,12],[37,15,33,13,"copy"],[37,19,33,17],[37,20,33,18,"buffer"],[37,26,33,24],[37,28,33,26,"keyVarIntLen"],[37,40,33,38],[37,41,33,39],[38,4,34,2,"_$$_REQUIRE"],[38,15,34,2],[38,16,34,2,"_dependencyMap"],[38,30,34,2],[38,47,34,10,"encode"],[38,53,34,16],[38,54,34,17,"valLen"],[38,60,34,23],[38,62,34,25,"buffer"],[38,68,34,31],[38,70,34,33,"keyVarIntLen"],[38,82,34,45],[38,85,34,48,"keyLen"],[38,91,34,54],[38,92,34,55],[39,4,35,2,"keyVal"],[39,10,35,8],[39,11,35,9,"value"],[39,16,35,14],[39,17,35,15,"copy"],[39,21,35,19],[39,22,35,20,"buffer"],[39,28,35,26],[39,30,35,28,"keyVarIntLen"],[39,42,35,40],[39,45,35,43,"keyLen"],[39,51,35,49],[39,54,35,52,"valVarIntLen"],[39,66,35,64],[39,67,35,65],[40,4,36,2],[40,11,36,9,"buffer"],[40,17,36,15],[41,2,37,0],[42,2,38,0,"exports"],[42,9,38,7],[42,10,38,8,"keyValToBuffer"],[42,24,38,22],[42,27,38,25,"keyValToBuffer"],[42,41,38,39],[43,2,39,0],[44,2,40,0],[44,11,40,9,"verifuint"],[44,20,40,18,"verifuint"],[44,21,40,19,"value"],[44,26,40,24],[44,28,40,26,"max"],[44,31,40,29],[44,33,40,31],[45,4,41,2],[45,8,41,6],[45,15,41,13,"value"],[45,20,41,18],[45,25,41,23],[45,33,41,31],[45,35,42,4],[45,41,42,10],[45,45,42,14,"Error"],[45,50,42,19],[45,51,42,20],[45,90,42,59],[45,91,42,60],[46,4,43,2],[46,8,43,6,"value"],[46,13,43,11],[46,16,43,14],[46,17,43,15],[46,19,44,4],[46,25,44,10],[46,29,44,14,"Error"],[46,34,44,19],[46,35,44,20],[46,93,44,78],[46,94,44,79],[47,4,45,2],[47,8,45,6,"value"],[47,13,45,11],[47,16,45,14,"max"],[47,19,45,17],[47,21,45,19],[47,27,45,25],[47,31,45,29,"Error"],[47,36,45,34],[47,37,45,35],[47,69,45,67],[47,70,45,68],[48,4,46,2],[48,8,46,6,"Math"],[48,12,46,10],[48,13,46,11,"floor"],[48,18,46,16],[48,19,46,17,"value"],[48,24,46,22],[48,25,46,23],[48,30,46,28,"value"],[48,35,46,33],[48,37,47,4],[48,43,47,10],[48,47,47,14,"Error"],[48,52,47,19],[48,53,47,20],[48,87,47,54],[48,88,47,55],[49,2,48,0],[50,2,49,0],[50,11,49,9,"readUInt64LE"],[50,23,49,21,"readUInt64LE"],[50,24,49,22,"buffer"],[50,30,49,28],[50,32,49,30,"offset"],[50,38,49,36],[50,40,49,38],[51,4,50,2],[51,8,50,8,"a"],[51,9,50,9],[51,12,50,12,"buffer"],[51,18,50,18],[51,19,50,19,"readUInt32LE"],[51,31,50,31],[51,32,50,32,"offset"],[51,38,50,38],[51,39,50,39],[52,4,51,2],[52,8,51,6,"b"],[52,9,51,7],[52,12,51,10,"buffer"],[52,18,51,16],[52,19,51,17,"readUInt32LE"],[52,31,51,29],[52,32,51,30,"offset"],[52,38,51,36],[52,41,51,39],[52,42,51,40],[52,43,51,41],[53,4,52,2,"b"],[53,5,52,3],[53,9,52,7],[53,20,52,18],[54,4,53,2,"verifuint"],[54,13,53,11],[54,14,53,12,"b"],[54,15,53,13],[54,18,53,16,"a"],[54,19,53,17],[54,21,53,19],[54,39,53,37],[54,40,53,38],[55,4,54,2],[55,11,54,9,"b"],[55,12,54,10],[55,15,54,13,"a"],[55,16,54,14],[56,2,55,0],[57,2,56,0,"exports"],[57,9,56,7],[57,10,56,8,"readUInt64LE"],[57,22,56,20],[57,25,56,23,"readUInt64LE"],[57,37,56,35],[58,2,57,0],[58,11,57,9,"writeUInt64LE"],[58,24,57,22,"writeUInt64LE"],[58,25,57,23,"buffer"],[58,31,57,29],[58,33,57,31,"value"],[58,38,57,36],[58,40,57,38,"offset"],[58,46,57,44],[58,48,57,46],[59,4,58,2,"verifuint"],[59,13,58,11],[59,14,58,12,"value"],[59,19,58,17],[59,21,58,19],[59,39,58,37],[59,40,58,38],[60,4,59,2,"buffer"],[60,10,59,8],[60,11,59,9,"writeInt32LE"],[60,23,59,21],[60,24,59,22,"value"],[60,29,59,27],[60,32,59,30],[60,33,59,31],[60,34,59,32],[60,36,59,34,"offset"],[60,42,59,40],[60,43,59,41],[61,4,60,2,"buffer"],[61,10,60,8],[61,11,60,9,"writeUInt32LE"],[61,24,60,22],[61,25,60,23,"Math"],[61,29,60,27],[61,30,60,28,"floor"],[61,35,60,33],[61,36,60,34,"value"],[61,41,60,39],[61,44,60,42],[61,55,60,53],[61,56,60,54],[61,58,60,56,"offset"],[61,64,60,62],[61,67,60,65],[61,68,60,66],[61,69,60,67],[62,4,61,2],[62,11,61,9,"offset"],[62,17,61,15],[62,20,61,18],[62,21,61,19],[63,2,62,0],[64,2,63,0,"exports"],[64,9,63,7],[64,10,63,8,"writeUInt64LE"],[64,23,63,21],[64,26,63,24,"writeUInt64LE"],[64,39,63,37],[65,0,63,38],[65,3]],"functionMap":{"names":["<global>","exports.range","reverseBuffer","keyValsToBuffer","keyValToBuffer","verifuint","readUInt64LE","writeUInt64LE"],"mappings":"AAA;gBCG,yBD;AEC;CFW;AGE;CHI;AIE;CJa;AKG;CLQ;AMC;CNM;AOE;CPK"}},"type":"js/module"}]}