{"dependencies":[{"name":"./aesid.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":57},"end":{"line":4,"column":35,"index":80}}],"key":"fTHBRP7VuOHS9wa4QYbIbLdSu7k="}},{"name":"pbkdf2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":13,"index":172},"end":{"line":7,"column":30,"index":189}}],"key":"1/dbhwRh6o3OR9626P/2VdN0D7E="}},{"name":"browserify-aes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":132},"end":{"line":6,"column":39,"index":157}}],"key":"wGSnDtBSNDYVJj7EcrGHDojgmHU="}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":13,"index":204},"end":{"line":8,"column":42,"index":233}},{"start":{"line":8,"column":13,"index":204},"end":{"line":8,"column":42,"index":233}},{"start":{"line":8,"column":13,"index":204},"end":{"line":8,"column":42,"index":233}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"./fixProc","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":96},"end":{"line":5,"column":34,"index":116}}],"key":"6r/P/GXupL9DQPEXbYjq/hGGFB0="}},{"name":"./asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}},{"start":{"line":3,"column":11,"index":26},"end":{"line":3,"column":28,"index":43}}],"key":"yqi9BX2AAMC3biG3RtcJ+fUBI2Q="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function decrypt(data, password) {\n    var salt = data.algorithm.decrypt.kde.kdeparams.salt;\n    var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10);\n    var algo = _$$_REQUIRE(_dependencyMap[0], \"./aesid.json\")[data.algorithm.decrypt.cipher.algo.join('.')];\n    var iv = data.algorithm.decrypt.cipher.iv;\n    var cipherText = data.subjectPrivateKey;\n    var keylen = parseInt(algo.split('-')[1], 10) / 8;\n    var key = _$$_REQUIRE(_dependencyMap[1], \"pbkdf2\").pbkdf2Sync(password, salt, iters, keylen, 'sha1');\n    var cipher = _$$_REQUIRE(_dependencyMap[2], \"browserify-aes\").createDecipheriv(algo, key, iv);\n    var out = [];\n    out.push(cipher.update(cipherText));\n    out.push(cipher['final']());\n    return _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.concat(out);\n  }\n  function parseKeys(buffer) {\n    var password;\n    if (typeof buffer === 'object' && !_$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.isBuffer(buffer)) {\n      password = buffer.passphrase;\n      buffer = buffer.key;\n    }\n    if (typeof buffer === 'string') {\n      buffer = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.from(buffer);\n    }\n    var stripped = _$$_REQUIRE(_dependencyMap[4], \"./fixProc\")(buffer, password);\n    var type = stripped.tag;\n    var data = stripped.data;\n    var subtype, ndata;\n    switch (type) {\n      case 'CERTIFICATE':\n        ndata = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo;\n      // falls through\n      case 'PUBLIC KEY':\n        if (!ndata) {\n          ndata = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").PublicKey.decode(data, 'der');\n        }\n        subtype = ndata.algorithm.algorithm.join('.');\n        switch (subtype) {\n          case '1.2.840.113549.1.1.1':\n            return _$$_REQUIRE(_dependencyMap[5], \"./asn1\").RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der');\n          case '1.2.840.10045.2.1':\n            ndata.subjectPrivateKey = ndata.subjectPublicKey;\n            return {\n              type: 'ec',\n              data: ndata\n            };\n          case '1.2.840.10040.4.1':\n            ndata.algorithm.params.pub_key = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").DSAparam.decode(ndata.subjectPublicKey.data, 'der');\n            return {\n              type: 'dsa',\n              data: ndata.algorithm.params\n            };\n          default:\n            throw new Error('unknown key id ' + subtype);\n        }\n      // throw new Error('unknown key type ' + type)\n      case 'ENCRYPTED PRIVATE KEY':\n        data = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").EncryptedPrivateKey.decode(data, 'der');\n        data = decrypt(data, password);\n      // falls through\n      case 'PRIVATE KEY':\n        ndata = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").PrivateKey.decode(data, 'der');\n        subtype = ndata.algorithm.algorithm.join('.');\n        switch (subtype) {\n          case '1.2.840.113549.1.1.1':\n            return _$$_REQUIRE(_dependencyMap[5], \"./asn1\").RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der');\n          case '1.2.840.10045.2.1':\n            return {\n              curve: ndata.algorithm.curve,\n              privateKey: _$$_REQUIRE(_dependencyMap[5], \"./asn1\").ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n            };\n          case '1.2.840.10040.4.1':\n            ndata.algorithm.params.priv_key = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").DSAparam.decode(ndata.subjectPrivateKey, 'der');\n            return {\n              type: 'dsa',\n              params: ndata.algorithm.params\n            };\n          default:\n            throw new Error('unknown key id ' + subtype);\n        }\n      // throw new Error('unknown key type ' + type)\n      case 'RSA PUBLIC KEY':\n        return _$$_REQUIRE(_dependencyMap[5], \"./asn1\").RSAPublicKey.decode(data, 'der');\n      case 'RSA PRIVATE KEY':\n        return _$$_REQUIRE(_dependencyMap[5], \"./asn1\").RSAPrivateKey.decode(data, 'der');\n      case 'DSA PRIVATE KEY':\n        return {\n          type: 'dsa',\n          params: _$$_REQUIRE(_dependencyMap[5], \"./asn1\").DSAPrivateKey.decode(data, 'der')\n        };\n      case 'EC PRIVATE KEY':\n        data = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").ECPrivateKey.decode(data, 'der');\n        return {\n          curve: data.parameters.value,\n          privateKey: data.privateKey\n        };\n      default:\n        throw new Error('unknown key type ' + type);\n    }\n  }\n  parseKeys.signature = _$$_REQUIRE(_dependencyMap[5], \"./asn1\").signature;\n  module.exports = parseKeys;\n});","lineCount":105,"map":[[2,2,1,0],[2,14,1,12],[4,2,10,0],[4,11,10,9,"decrypt"],[4,18,10,16,"decrypt"],[4,19,10,17,"data"],[4,23,10,21],[4,25,10,23,"password"],[4,33,10,31],[4,35,10,33],[5,4,11,1],[5,8,11,5,"salt"],[5,12,11,9],[5,15,11,12,"data"],[5,19,11,16],[5,20,11,17,"algorithm"],[5,29,11,26],[5,30,11,27,"decrypt"],[5,37,11,34],[5,38,11,35,"kde"],[5,41,11,38],[5,42,11,39,"kdeparams"],[5,51,11,48],[5,52,11,49,"salt"],[5,56,11,53],[6,4,12,1],[6,8,12,5,"iters"],[6,13,12,10],[6,16,12,13,"parseInt"],[6,24,12,21],[6,25,12,22,"data"],[6,29,12,26],[6,30,12,27,"algorithm"],[6,39,12,36],[6,40,12,37,"decrypt"],[6,47,12,44],[6,48,12,45,"kde"],[6,51,12,48],[6,52,12,49,"kdeparams"],[6,61,12,58],[6,62,12,59,"iters"],[6,67,12,64],[6,68,12,65,"toString"],[6,76,12,73],[6,77,12,74],[6,78,12,75],[6,80,12,77],[6,82,12,79],[6,83,12,80],[7,4,13,1],[7,8,13,5,"algo"],[7,12,13,9],[7,15,13,12,"_$$_REQUIRE"],[7,26,13,12],[7,27,13,12,"_dependencyMap"],[7,41,13,12],[7,62,13,18,"data"],[7,66,13,22],[7,67,13,23,"algorithm"],[7,76,13,32],[7,77,13,33,"decrypt"],[7,84,13,40],[7,85,13,41,"cipher"],[7,91,13,47],[7,92,13,48,"algo"],[7,96,13,52],[7,97,13,53,"join"],[7,101,13,57],[7,102,13,58],[7,105,13,61],[7,106,13,62],[7,107,13,63],[8,4,14,1],[8,8,14,5,"iv"],[8,10,14,7],[8,13,14,10,"data"],[8,17,14,14],[8,18,14,15,"algorithm"],[8,27,14,24],[8,28,14,25,"decrypt"],[8,35,14,32],[8,36,14,33,"cipher"],[8,42,14,39],[8,43,14,40,"iv"],[8,45,14,42],[9,4,15,1],[9,8,15,5,"cipherText"],[9,18,15,15],[9,21,15,18,"data"],[9,25,15,22],[9,26,15,23,"subjectPrivateKey"],[9,43,15,40],[10,4,16,1],[10,8,16,5,"keylen"],[10,14,16,11],[10,17,16,14,"parseInt"],[10,25,16,22],[10,26,16,23,"algo"],[10,30,16,27],[10,31,16,28,"split"],[10,36,16,33],[10,37,16,34],[10,40,16,37],[10,41,16,38],[10,42,16,39],[10,43,16,40],[10,44,16,41],[10,46,16,43],[10,48,16,45],[10,49,16,46],[10,52,16,49],[10,53,16,50],[11,4,17,1],[11,8,17,5,"key"],[11,11,17,8],[11,14,17,11,"_$$_REQUIRE"],[11,25,17,11],[11,26,17,11,"_dependencyMap"],[11,40,17,11],[11,55,17,18,"pbkdf2Sync"],[11,65,17,28],[11,66,17,29,"password"],[11,74,17,37],[11,76,17,39,"salt"],[11,80,17,43],[11,82,17,45,"iters"],[11,87,17,50],[11,89,17,52,"keylen"],[11,95,17,58],[11,97,17,60],[11,103,17,66],[11,104,17,67],[12,4,18,1],[12,8,18,5,"cipher"],[12,14,18,11],[12,17,18,14,"_$$_REQUIRE"],[12,28,18,14],[12,29,18,14,"_dependencyMap"],[12,43,18,14],[12,66,18,22,"createDecipheriv"],[12,82,18,38],[12,83,18,39,"algo"],[12,87,18,43],[12,89,18,45,"key"],[12,92,18,48],[12,94,18,50,"iv"],[12,96,18,52],[12,97,18,53],[13,4,19,1],[13,8,19,5,"out"],[13,11,19,8],[13,14,19,11],[13,16,19,13],[14,4,20,1,"out"],[14,7,20,4],[14,8,20,5,"push"],[14,12,20,9],[14,13,20,10,"cipher"],[14,19,20,16],[14,20,20,17,"update"],[14,26,20,23],[14,27,20,24,"cipherText"],[14,37,20,34],[14,38,20,35],[14,39,20,36],[15,4,21,1,"out"],[15,7,21,4],[15,8,21,5,"push"],[15,12,21,9],[15,13,21,10,"cipher"],[15,19,21,16],[15,20,21,17],[15,27,21,24],[15,28,21,25],[15,29,21,26],[15,30,21,27],[15,31,21,28],[16,4,22,1],[16,11,22,8,"_$$_REQUIRE"],[16,22,22,8],[16,23,22,8,"_dependencyMap"],[16,37,22,8],[16,57,22,8,"Buffer"],[16,63,22,8],[16,64,22,15,"concat"],[16,70,22,21],[16,71,22,22,"out"],[16,74,22,25],[16,75,22,26],[17,2,23,0],[18,2,25,0],[18,11,25,9,"parseKeys"],[18,20,25,18,"parseKeys"],[18,21,25,19,"buffer"],[18,27,25,25],[18,29,25,27],[19,4,26,1],[19,8,26,5,"password"],[19,16,26,13],[20,4,27,1],[20,8,27,5],[20,15,27,12,"buffer"],[20,21,27,18],[20,26,27,23],[20,34,27,31],[20,38,27,35],[20,39,27,36,"_$$_REQUIRE"],[20,50,27,36],[20,51,27,36,"_dependencyMap"],[20,65,27,36],[20,85,27,36,"Buffer"],[20,91,27,36],[20,92,27,43,"isBuffer"],[20,100,27,51],[20,101,27,52,"buffer"],[20,107,27,58],[20,108,27,59],[20,110,27,61],[21,6,28,2,"password"],[21,14,28,10],[21,17,28,13,"buffer"],[21,23,28,19],[21,24,28,20,"passphrase"],[21,34,28,30],[22,6,29,2,"buffer"],[22,12,29,8],[22,15,29,11,"buffer"],[22,21,29,17],[22,22,29,18,"key"],[22,25,29,21],[23,4,30,1],[24,4,31,1],[24,8,31,5],[24,15,31,12,"buffer"],[24,21,31,18],[24,26,31,23],[24,34,31,31],[24,36,31,33],[25,6,32,2,"buffer"],[25,12,32,8],[25,15,32,11,"_$$_REQUIRE"],[25,26,32,11],[25,27,32,11,"_dependencyMap"],[25,41,32,11],[25,61,32,11,"Buffer"],[25,67,32,11],[25,68,32,18,"from"],[25,72,32,22],[25,73,32,23,"buffer"],[25,79,32,29],[25,80,32,30],[26,4,33,1],[27,4,35,1],[27,8,35,5,"stripped"],[27,16,35,13],[27,19,35,16,"_$$_REQUIRE"],[27,30,35,16],[27,31,35,16,"_dependencyMap"],[27,45,35,16],[27,63,35,24,"buffer"],[27,69,35,30],[27,71,35,32,"password"],[27,79,35,40],[27,80,35,41],[28,4,37,1],[28,8,37,5,"type"],[28,12,37,9],[28,15,37,12,"stripped"],[28,23,37,20],[28,24,37,21,"tag"],[28,27,37,24],[29,4,38,1],[29,8,38,5,"data"],[29,12,38,9],[29,15,38,12,"stripped"],[29,23,38,20],[29,24,38,21,"data"],[29,28,38,25],[30,4,39,1],[30,8,39,5,"subtype"],[30,15,39,12],[30,17,39,14,"ndata"],[30,22,39,19],[31,4,40,1],[31,12,40,9,"type"],[31,16,40,13],[32,6,41,2],[32,11,41,7],[32,24,41,20],[33,8,42,3,"ndata"],[33,13,42,8],[33,16,42,11,"_$$_REQUIRE"],[33,27,42,11],[33,28,42,11,"_dependencyMap"],[33,42,42,11],[33,57,42,16,"certificate"],[33,68,42,27],[33,69,42,28,"decode"],[33,75,42,34],[33,76,42,35,"data"],[33,80,42,39],[33,82,42,41],[33,87,42,46],[33,88,42,47],[33,89,42,48,"tbsCertificate"],[33,103,42,62],[33,104,42,63,"subjectPublicKeyInfo"],[33,124,42,83],[34,6,43,3],[35,6,44,2],[35,11,44,7],[35,23,44,19],[36,8,45,3],[36,12,45,7],[36,13,45,8,"ndata"],[36,18,45,13],[36,20,45,15],[37,10,46,4,"ndata"],[37,15,46,9],[37,18,46,12,"_$$_REQUIRE"],[37,29,46,12],[37,30,46,12,"_dependencyMap"],[37,44,46,12],[37,59,46,17,"PublicKey"],[37,68,46,26],[37,69,46,27,"decode"],[37,75,46,33],[37,76,46,34,"data"],[37,80,46,38],[37,82,46,40],[37,87,46,45],[37,88,46,46],[38,8,47,3],[39,8,48,3,"subtype"],[39,15,48,10],[39,18,48,13,"ndata"],[39,23,48,18],[39,24,48,19,"algorithm"],[39,33,48,28],[39,34,48,29,"algorithm"],[39,43,48,38],[39,44,48,39,"join"],[39,48,48,43],[39,49,48,44],[39,52,48,47],[39,53,48,48],[40,8,49,3],[40,16,49,11,"subtype"],[40,23,49,18],[41,10,50,4],[41,15,50,9],[41,37,50,31],[42,12,51,5],[42,19,51,12,"_$$_REQUIRE"],[42,30,51,12],[42,31,51,12,"_dependencyMap"],[42,45,51,12],[42,60,51,17,"RSAPublicKey"],[42,72,51,29],[42,73,51,30,"decode"],[42,79,51,36],[42,80,51,37,"ndata"],[42,85,51,42],[42,86,51,43,"subjectPublicKey"],[42,102,51,59],[42,103,51,60,"data"],[42,107,51,64],[42,109,51,66],[42,114,51,71],[42,115,51,72],[43,10,52,4],[43,15,52,9],[43,34,52,28],[44,12,53,5,"ndata"],[44,17,53,10],[44,18,53,11,"subjectPrivateKey"],[44,35,53,28],[44,38,53,31,"ndata"],[44,43,53,36],[44,44,53,37,"subjectPublicKey"],[44,60,53,53],[45,12,54,5],[45,19,54,12],[46,14,55,6,"type"],[46,18,55,10],[46,20,55,12],[46,24,55,16],[47,14,56,6,"data"],[47,18,56,10],[47,20,56,12,"ndata"],[48,12,57,5],[48,13,57,6],[49,10,58,4],[49,15,58,9],[49,34,58,28],[50,12,59,5,"ndata"],[50,17,59,10],[50,18,59,11,"algorithm"],[50,27,59,20],[50,28,59,21,"params"],[50,34,59,27],[50,35,59,28,"pub_key"],[50,42,59,35],[50,45,59,38,"_$$_REQUIRE"],[50,56,59,38],[50,57,59,38,"_dependencyMap"],[50,71,59,38],[50,86,59,43,"DSAparam"],[50,94,59,51],[50,95,59,52,"decode"],[50,101,59,58],[50,102,59,59,"ndata"],[50,107,59,64],[50,108,59,65,"subjectPublicKey"],[50,124,59,81],[50,125,59,82,"data"],[50,129,59,86],[50,131,59,88],[50,136,59,93],[50,137,59,94],[51,12,60,5],[51,19,60,12],[52,14,61,6,"type"],[52,18,61,10],[52,20,61,12],[52,25,61,17],[53,14,62,6,"data"],[53,18,62,10],[53,20,62,12,"ndata"],[53,25,62,17],[53,26,62,18,"algorithm"],[53,35,62,27],[53,36,62,28,"params"],[54,12,63,5],[54,13,63,6],[55,10,64,4],[56,12,64,13],[56,18,64,19],[56,22,64,23,"Error"],[56,27,64,28],[56,28,64,29],[56,45,64,46],[56,48,64,49,"subtype"],[56,55,64,56],[56,56,64,57],[57,8,65,3],[58,6,66,3],[59,6,67,2],[59,11,67,7],[59,34,67,30],[60,8,68,3,"data"],[60,12,68,7],[60,15,68,10,"_$$_REQUIRE"],[60,26,68,10],[60,27,68,10,"_dependencyMap"],[60,41,68,10],[60,56,68,15,"EncryptedPrivateKey"],[60,75,68,34],[60,76,68,35,"decode"],[60,82,68,41],[60,83,68,42,"data"],[60,87,68,46],[60,89,68,48],[60,94,68,53],[60,95,68,54],[61,8,69,3,"data"],[61,12,69,7],[61,15,69,10,"decrypt"],[61,22,69,17],[61,23,69,18,"data"],[61,27,69,22],[61,29,69,24,"password"],[61,37,69,32],[61,38,69,33],[62,6,70,3],[63,6,71,2],[63,11,71,7],[63,24,71,20],[64,8,72,3,"ndata"],[64,13,72,8],[64,16,72,11,"_$$_REQUIRE"],[64,27,72,11],[64,28,72,11,"_dependencyMap"],[64,42,72,11],[64,57,72,16,"PrivateKey"],[64,67,72,26],[64,68,72,27,"decode"],[64,74,72,33],[64,75,72,34,"data"],[64,79,72,38],[64,81,72,40],[64,86,72,45],[64,87,72,46],[65,8,73,3,"subtype"],[65,15,73,10],[65,18,73,13,"ndata"],[65,23,73,18],[65,24,73,19,"algorithm"],[65,33,73,28],[65,34,73,29,"algorithm"],[65,43,73,38],[65,44,73,39,"join"],[65,48,73,43],[65,49,73,44],[65,52,73,47],[65,53,73,48],[66,8,74,3],[66,16,74,11,"subtype"],[66,23,74,18],[67,10,75,4],[67,15,75,9],[67,37,75,31],[68,12,76,5],[68,19,76,12,"_$$_REQUIRE"],[68,30,76,12],[68,31,76,12,"_dependencyMap"],[68,45,76,12],[68,60,76,17,"RSAPrivateKey"],[68,73,76,30],[68,74,76,31,"decode"],[68,80,76,37],[68,81,76,38,"ndata"],[68,86,76,43],[68,87,76,44,"subjectPrivateKey"],[68,104,76,61],[68,106,76,63],[68,111,76,68],[68,112,76,69],[69,10,77,4],[69,15,77,9],[69,34,77,28],[70,12,78,5],[70,19,78,12],[71,14,79,6,"curve"],[71,19,79,11],[71,21,79,13,"ndata"],[71,26,79,18],[71,27,79,19,"algorithm"],[71,36,79,28],[71,37,79,29,"curve"],[71,42,79,34],[72,14,80,6,"privateKey"],[72,24,80,16],[72,26,80,18,"_$$_REQUIRE"],[72,37,80,18],[72,38,80,18,"_dependencyMap"],[72,52,80,18],[72,67,80,23,"ECPrivateKey"],[72,79,80,35],[72,80,80,36,"decode"],[72,86,80,42],[72,87,80,43,"ndata"],[72,92,80,48],[72,93,80,49,"subjectPrivateKey"],[72,110,80,66],[72,112,80,68],[72,117,80,73],[72,118,80,74],[72,119,80,75,"privateKey"],[73,12,81,5],[73,13,81,6],[74,10,82,4],[74,15,82,9],[74,34,82,28],[75,12,83,5,"ndata"],[75,17,83,10],[75,18,83,11,"algorithm"],[75,27,83,20],[75,28,83,21,"params"],[75,34,83,27],[75,35,83,28,"priv_key"],[75,43,83,36],[75,46,83,39,"_$$_REQUIRE"],[75,57,83,39],[75,58,83,39,"_dependencyMap"],[75,72,83,39],[75,87,83,44,"DSAparam"],[75,95,83,52],[75,96,83,53,"decode"],[75,102,83,59],[75,103,83,60,"ndata"],[75,108,83,65],[75,109,83,66,"subjectPrivateKey"],[75,126,83,83],[75,128,83,85],[75,133,83,90],[75,134,83,91],[76,12,84,5],[76,19,84,12],[77,14,85,6,"type"],[77,18,85,10],[77,20,85,12],[77,25,85,17],[78,14,86,6,"params"],[78,20,86,12],[78,22,86,14,"ndata"],[78,27,86,19],[78,28,86,20,"algorithm"],[78,37,86,29],[78,38,86,30,"params"],[79,12,87,5],[79,13,87,6],[80,10,88,4],[81,12,88,13],[81,18,88,19],[81,22,88,23,"Error"],[81,27,88,28],[81,28,88,29],[81,45,88,46],[81,48,88,49,"subtype"],[81,55,88,56],[81,56,88,57],[82,8,89,3],[83,6,90,3],[84,6,91,2],[84,11,91,7],[84,27,91,23],[85,8,92,3],[85,15,92,10,"_$$_REQUIRE"],[85,26,92,10],[85,27,92,10,"_dependencyMap"],[85,41,92,10],[85,56,92,15,"RSAPublicKey"],[85,68,92,27],[85,69,92,28,"decode"],[85,75,92,34],[85,76,92,35,"data"],[85,80,92,39],[85,82,92,41],[85,87,92,46],[85,88,92,47],[86,6,93,2],[86,11,93,7],[86,28,93,24],[87,8,94,3],[87,15,94,10,"_$$_REQUIRE"],[87,26,94,10],[87,27,94,10,"_dependencyMap"],[87,41,94,10],[87,56,94,15,"RSAPrivateKey"],[87,69,94,28],[87,70,94,29,"decode"],[87,76,94,35],[87,77,94,36,"data"],[87,81,94,40],[87,83,94,42],[87,88,94,47],[87,89,94,48],[88,6,95,2],[88,11,95,7],[88,28,95,24],[89,8,96,3],[89,15,96,10],[90,10,97,4,"type"],[90,14,97,8],[90,16,97,10],[90,21,97,15],[91,10,98,4,"params"],[91,16,98,10],[91,18,98,12,"_$$_REQUIRE"],[91,29,98,12],[91,30,98,12,"_dependencyMap"],[91,44,98,12],[91,59,98,17,"DSAPrivateKey"],[91,72,98,30],[91,73,98,31,"decode"],[91,79,98,37],[91,80,98,38,"data"],[91,84,98,42],[91,86,98,44],[91,91,98,49],[92,8,99,3],[92,9,99,4],[93,6,100,2],[93,11,100,7],[93,27,100,23],[94,8,101,3,"data"],[94,12,101,7],[94,15,101,10,"_$$_REQUIRE"],[94,26,101,10],[94,27,101,10,"_dependencyMap"],[94,41,101,10],[94,56,101,15,"ECPrivateKey"],[94,68,101,27],[94,69,101,28,"decode"],[94,75,101,34],[94,76,101,35,"data"],[94,80,101,39],[94,82,101,41],[94,87,101,46],[94,88,101,47],[95,8,102,3],[95,15,102,10],[96,10,103,4,"curve"],[96,15,103,9],[96,17,103,11,"data"],[96,21,103,15],[96,22,103,16,"parameters"],[96,32,103,26],[96,33,103,27,"value"],[96,38,103,32],[97,10,104,4,"privateKey"],[97,20,104,14],[97,22,104,16,"data"],[97,26,104,20],[97,27,104,21,"privateKey"],[98,8,105,3],[98,9,105,4],[99,6,106,2],[100,8,106,11],[100,14,106,17],[100,18,106,21,"Error"],[100,23,106,26],[100,24,106,27],[100,43,106,46],[100,46,106,49,"type"],[100,50,106,53],[100,51,106,54],[101,4,107,1],[102,2,108,0],[103,2,109,0,"parseKeys"],[103,11,109,9],[103,12,109,10,"signature"],[103,21,109,19],[103,24,109,22,"_$$_REQUIRE"],[103,35,109,22],[103,36,109,22,"_dependencyMap"],[103,50,109,22],[103,65,109,27,"signature"],[103,74,109,36],[104,2,111,0,"module"],[104,8,111,6],[104,9,111,7,"exports"],[104,16,111,14],[104,19,111,17,"parseKeys"],[104,28,111,26],[105,0,111,27],[105,3]],"functionMap":{"names":["<global>","decrypt","parseKeys"],"mappings":"AAA;ACS;CDa;AEE;CFmF"}},"type":"js/module"}]}