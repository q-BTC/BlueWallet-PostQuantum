{"dependencies":[{"name":"minimalistic-assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":79},"end":{"line":5,"column":46,"index":109}}],"key":"NsVgU1mG0s9I57g2YSlMlpAh3pM="}},{"name":"minimalistic-crypto-utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":126},"end":{"line":6,"column":51,"index":162}},{"start":{"line":6,"column":15,"index":126},"end":{"line":6,"column":51,"index":162}},{"start":{"line":6,"column":15,"index":126},"end":{"line":6,"column":51,"index":162}},{"start":{"line":6,"column":15,"index":126},"end":{"line":6,"column":51,"index":162}}],"key":"LxQwbyF4lUQg/qW6zaXeo9xbNJM="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":9,"index":45},"end":{"line":4,"column":25,"index":61}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var utils = exports;\n  utils.assert = _$$_REQUIRE(_dependencyMap[0], \"minimalistic-assert\");\n  utils.toArray = _$$_REQUIRE(_dependencyMap[1], \"minimalistic-crypto-utils\").toArray;\n  utils.zero2 = _$$_REQUIRE(_dependencyMap[1], \"minimalistic-crypto-utils\").zero2;\n  utils.toHex = _$$_REQUIRE(_dependencyMap[1], \"minimalistic-crypto-utils\").toHex;\n  utils.encode = _$$_REQUIRE(_dependencyMap[1], \"minimalistic-crypto-utils\").encode;\n\n  // Represent num in a w-NAF form\n  function getNAF(num, w, bits) {\n    var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n    var i;\n    for (i = 0; i < naf.length; i += 1) {\n      naf[i] = 0;\n    }\n    var ws = 1 << w + 1;\n    var k = num.clone();\n    for (i = 0; i < naf.length; i++) {\n      var z;\n      var mod = k.andln(ws - 1);\n      if (k.isOdd()) {\n        if (mod > (ws >> 1) - 1) z = (ws >> 1) - mod;else z = mod;\n        k.isubn(z);\n      } else {\n        z = 0;\n      }\n      naf[i] = z;\n      k.iushrn(1);\n    }\n    return naf;\n  }\n  utils.getNAF = getNAF;\n\n  // Represent k1, k2 in a Joint Sparse Form\n  function getJSF(k1, k2) {\n    var jsf = [[], []];\n    k1 = k1.clone();\n    k2 = k2.clone();\n    var d1 = 0;\n    var d2 = 0;\n    var m8;\n    while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n      // First phase\n      var m14 = k1.andln(3) + d1 & 3;\n      var m24 = k2.andln(3) + d2 & 3;\n      if (m14 === 3) m14 = -1;\n      if (m24 === 3) m24 = -1;\n      var u1;\n      if ((m14 & 1) === 0) {\n        u1 = 0;\n      } else {\n        m8 = k1.andln(7) + d1 & 7;\n        if ((m8 === 3 || m8 === 5) && m24 === 2) u1 = -m14;else u1 = m14;\n      }\n      jsf[0].push(u1);\n      var u2;\n      if ((m24 & 1) === 0) {\n        u2 = 0;\n      } else {\n        m8 = k2.andln(7) + d2 & 7;\n        if ((m8 === 3 || m8 === 5) && m14 === 2) u2 = -m24;else u2 = m24;\n      }\n      jsf[1].push(u2);\n\n      // Second phase\n      if (2 * d1 === u1 + 1) d1 = 1 - d1;\n      if (2 * d2 === u2 + 1) d2 = 1 - d2;\n      k1.iushrn(1);\n      k2.iushrn(1);\n    }\n    return jsf;\n  }\n  utils.getJSF = getJSF;\n  function cachedProperty(obj, name, computer) {\n    var key = '_' + name;\n    obj.prototype[name] = function cachedProperty() {\n      return this[key] !== undefined ? this[key] : this[key] = computer.call(this);\n    };\n  }\n  utils.cachedProperty = cachedProperty;\n  function parseBytes(bytes) {\n    return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') : bytes;\n  }\n  utils.parseBytes = parseBytes;\n  function intFromLE(bytes) {\n    return new (_$$_REQUIRE(_dependencyMap[2], \"bn.js\"))(bytes, 'hex', 'le');\n  }\n  utils.intFromLE = intFromLE;\n});","lineCount":91,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"utils"],[4,11,3,9],[4,14,3,12,"exports"],[4,21,3,19],[5,2,8,0,"utils"],[5,7,8,5],[5,8,8,6,"assert"],[5,14,8,12],[5,17,8,12,"_$$_REQUIRE"],[5,28,8,12],[5,29,8,12,"_dependencyMap"],[5,43,8,12],[5,70,8,24],[6,2,9,0,"utils"],[6,7,9,5],[6,8,9,6,"toArray"],[6,15,9,13],[6,18,9,16,"_$$_REQUIRE"],[6,29,9,16],[6,30,9,16,"_dependencyMap"],[6,44,9,16],[6,78,9,25,"toArray"],[6,85,9,32],[7,2,10,0,"utils"],[7,7,10,5],[7,8,10,6,"zero2"],[7,13,10,11],[7,16,10,14,"_$$_REQUIRE"],[7,27,10,14],[7,28,10,14,"_dependencyMap"],[7,42,10,14],[7,76,10,23,"zero2"],[7,81,10,28],[8,2,11,0,"utils"],[8,7,11,5],[8,8,11,6,"toHex"],[8,13,11,11],[8,16,11,14,"_$$_REQUIRE"],[8,27,11,14],[8,28,11,14,"_dependencyMap"],[8,42,11,14],[8,76,11,23,"toHex"],[8,81,11,28],[9,2,12,0,"utils"],[9,7,12,5],[9,8,12,6,"encode"],[9,14,12,12],[9,17,12,15,"_$$_REQUIRE"],[9,28,12,15],[9,29,12,15,"_dependencyMap"],[9,43,12,15],[9,77,12,24,"encode"],[9,83,12,30],[11,2,14,0],[12,2,15,0],[12,11,15,9,"getNAF"],[12,17,15,15,"getNAF"],[12,18,15,16,"num"],[12,21,15,19],[12,23,15,21,"w"],[12,24,15,22],[12,26,15,24,"bits"],[12,30,15,28],[12,32,15,30],[13,4,16,2],[13,8,16,6,"naf"],[13,11,16,9],[13,14,16,12],[13,18,16,16,"Array"],[13,23,16,21],[13,24,16,22,"Math"],[13,28,16,26],[13,29,16,27,"max"],[13,32,16,30],[13,33,16,31,"num"],[13,36,16,34],[13,37,16,35,"bitLength"],[13,46,16,44],[13,47,16,45],[13,48,16,46],[13,50,16,48,"bits"],[13,54,16,52],[13,55,16,53],[13,58,16,56],[13,59,16,57],[13,60,16,58],[14,4,17,2],[14,8,17,6,"i"],[14,9,17,7],[15,4,18,2],[15,9,18,7,"i"],[15,10,18,8],[15,13,18,11],[15,14,18,12],[15,16,18,14,"i"],[15,17,18,15],[15,20,18,18,"naf"],[15,23,18,21],[15,24,18,22,"length"],[15,30,18,28],[15,32,18,30,"i"],[15,33,18,31],[15,37,18,35],[15,38,18,36],[15,40,18,38],[16,6,19,4,"naf"],[16,9,19,7],[16,10,19,8,"i"],[16,11,19,9],[16,12,19,10],[16,15,19,13],[16,16,19,14],[17,4,20,2],[18,4,22,2],[18,8,22,6,"ws"],[18,10,22,8],[18,13,22,11],[18,14,22,12],[18,18,22,17,"w"],[18,19,22,18],[18,22,22,21],[18,23,22,23],[19,4,23,2],[19,8,23,6,"k"],[19,9,23,7],[19,12,23,10,"num"],[19,15,23,13],[19,16,23,14,"clone"],[19,21,23,19],[19,22,23,20],[19,23,23,21],[20,4,25,2],[20,9,25,7,"i"],[20,10,25,8],[20,13,25,11],[20,14,25,12],[20,16,25,14,"i"],[20,17,25,15],[20,20,25,18,"naf"],[20,23,25,21],[20,24,25,22,"length"],[20,30,25,28],[20,32,25,30,"i"],[20,33,25,31],[20,35,25,33],[20,37,25,35],[21,6,26,4],[21,10,26,8,"z"],[21,11,26,9],[22,6,27,4],[22,10,27,8,"mod"],[22,13,27,11],[22,16,27,14,"k"],[22,17,27,15],[22,18,27,16,"andln"],[22,23,27,21],[22,24,27,22,"ws"],[22,26,27,24],[22,29,27,27],[22,30,27,28],[22,31,27,29],[23,6,28,4],[23,10,28,8,"k"],[23,11,28,9],[23,12,28,10,"isOdd"],[23,17,28,15],[23,18,28,16],[23,19,28,17],[23,21,28,19],[24,8,29,6],[24,12,29,10,"mod"],[24,15,29,13],[24,18,29,16],[24,19,29,17,"ws"],[24,21,29,19],[24,25,29,23],[24,26,29,24],[24,30,29,28],[24,31,29,29],[24,33,30,8,"z"],[24,34,30,9],[24,37,30,12],[24,38,30,13,"ws"],[24,40,30,15],[24,44,30,19],[24,45,30,20],[24,49,30,24,"mod"],[24,52,30,27],[24,53,30,28],[24,58,32,8,"z"],[24,59,32,9],[24,62,32,12,"mod"],[24,65,32,15],[25,8,33,6,"k"],[25,9,33,7],[25,10,33,8,"isubn"],[25,15,33,13],[25,16,33,14,"z"],[25,17,33,15],[25,18,33,16],[26,6,34,4],[26,7,34,5],[26,13,34,11],[27,8,35,6,"z"],[27,9,35,7],[27,12,35,10],[27,13,35,11],[28,6,36,4],[29,6,38,4,"naf"],[29,9,38,7],[29,10,38,8,"i"],[29,11,38,9],[29,12,38,10],[29,15,38,13,"z"],[29,16,38,14],[30,6,39,4,"k"],[30,7,39,5],[30,8,39,6,"iushrn"],[30,14,39,12],[30,15,39,13],[30,16,39,14],[30,17,39,15],[31,4,40,2],[32,4,42,2],[32,11,42,9,"naf"],[32,14,42,12],[33,2,43,0],[34,2,44,0,"utils"],[34,7,44,5],[34,8,44,6,"getNAF"],[34,14,44,12],[34,17,44,15,"getNAF"],[34,23,44,21],[36,2,46,0],[37,2,47,0],[37,11,47,9,"getJSF"],[37,17,47,15,"getJSF"],[37,18,47,16,"k1"],[37,20,47,18],[37,22,47,20,"k2"],[37,24,47,22],[37,26,47,24],[38,4,48,2],[38,8,48,6,"jsf"],[38,11,48,9],[38,14,48,12],[38,15,49,4],[38,17,49,6],[38,19,50,4],[38,21,50,6],[38,22,51,3],[39,4,53,2,"k1"],[39,6,53,4],[39,9,53,7,"k1"],[39,11,53,9],[39,12,53,10,"clone"],[39,17,53,15],[39,18,53,16],[39,19,53,17],[40,4,54,2,"k2"],[40,6,54,4],[40,9,54,7,"k2"],[40,11,54,9],[40,12,54,10,"clone"],[40,17,54,15],[40,18,54,16],[40,19,54,17],[41,4,55,2],[41,8,55,6,"d1"],[41,10,55,8],[41,13,55,11],[41,14,55,12],[42,4,56,2],[42,8,56,6,"d2"],[42,10,56,8],[42,13,56,11],[42,14,56,12],[43,4,57,2],[43,8,57,6,"m8"],[43,10,57,8],[44,4,58,2],[44,11,58,9,"k1"],[44,13,58,11],[44,14,58,12,"cmpn"],[44,18,58,16],[44,19,58,17],[44,20,58,18,"d1"],[44,22,58,20],[44,23,58,21],[44,26,58,24],[44,27,58,25],[44,31,58,29,"k2"],[44,33,58,31],[44,34,58,32,"cmpn"],[44,38,58,36],[44,39,58,37],[44,40,58,38,"d2"],[44,42,58,40],[44,43,58,41],[44,46,58,44],[44,47,58,45],[44,49,58,47],[45,6,59,4],[46,6,60,4],[46,10,60,8,"m14"],[46,13,60,11],[46,16,60,15,"k1"],[46,18,60,17],[46,19,60,18,"andln"],[46,24,60,23],[46,25,60,24],[46,26,60,25],[46,27,60,26],[46,30,60,29,"d1"],[46,32,60,31],[46,35,60,35],[46,36,60,36],[47,6,61,4],[47,10,61,8,"m24"],[47,13,61,11],[47,16,61,15,"k2"],[47,18,61,17],[47,19,61,18,"andln"],[47,24,61,23],[47,25,61,24],[47,26,61,25],[47,27,61,26],[47,30,61,29,"d2"],[47,32,61,31],[47,35,61,35],[47,36,61,36],[48,6,62,4],[48,10,62,8,"m14"],[48,13,62,11],[48,18,62,16],[48,19,62,17],[48,21,63,6,"m14"],[48,24,63,9],[48,27,63,12],[48,28,63,13],[48,29,63,14],[49,6,64,4],[49,10,64,8,"m24"],[49,13,64,11],[49,18,64,16],[49,19,64,17],[49,21,65,6,"m24"],[49,24,65,9],[49,27,65,12],[49,28,65,13],[49,29,65,14],[50,6,66,4],[50,10,66,8,"u1"],[50,12,66,10],[51,6,67,4],[51,10,67,8],[51,11,67,9,"m14"],[51,14,67,12],[51,17,67,15],[51,18,67,16],[51,24,67,22],[51,25,67,23],[51,27,67,25],[52,8,68,6,"u1"],[52,10,68,8],[52,13,68,11],[52,14,68,12],[53,6,69,4],[53,7,69,5],[53,13,69,11],[54,8,70,6,"m8"],[54,10,70,8],[54,13,70,12,"k1"],[54,15,70,14],[54,16,70,15,"andln"],[54,21,70,20],[54,22,70,21],[54,23,70,22],[54,24,70,23],[54,27,70,26,"d1"],[54,29,70,28],[54,32,70,32],[54,33,70,33],[55,8,71,6],[55,12,71,10],[55,13,71,11,"m8"],[55,15,71,13],[55,20,71,18],[55,21,71,19],[55,25,71,23,"m8"],[55,27,71,25],[55,32,71,30],[55,33,71,31],[55,38,71,36,"m24"],[55,41,71,39],[55,46,71,44],[55,47,71,45],[55,49,72,8,"u1"],[55,51,72,10],[55,54,72,13],[55,55,72,14,"m14"],[55,58,72,17],[55,59,72,18],[55,64,74,8,"u1"],[55,66,74,10],[55,69,74,13,"m14"],[55,72,74,16],[56,6,75,4],[57,6,76,4,"jsf"],[57,9,76,7],[57,10,76,8],[57,11,76,9],[57,12,76,10],[57,13,76,11,"push"],[57,17,76,15],[57,18,76,16,"u1"],[57,20,76,18],[57,21,76,19],[58,6,78,4],[58,10,78,8,"u2"],[58,12,78,10],[59,6,79,4],[59,10,79,8],[59,11,79,9,"m24"],[59,14,79,12],[59,17,79,15],[59,18,79,16],[59,24,79,22],[59,25,79,23],[59,27,79,25],[60,8,80,6,"u2"],[60,10,80,8],[60,13,80,11],[60,14,80,12],[61,6,81,4],[61,7,81,5],[61,13,81,11],[62,8,82,6,"m8"],[62,10,82,8],[62,13,82,12,"k2"],[62,15,82,14],[62,16,82,15,"andln"],[62,21,82,20],[62,22,82,21],[62,23,82,22],[62,24,82,23],[62,27,82,26,"d2"],[62,29,82,28],[62,32,82,32],[62,33,82,33],[63,8,83,6],[63,12,83,10],[63,13,83,11,"m8"],[63,15,83,13],[63,20,83,18],[63,21,83,19],[63,25,83,23,"m8"],[63,27,83,25],[63,32,83,30],[63,33,83,31],[63,38,83,36,"m14"],[63,41,83,39],[63,46,83,44],[63,47,83,45],[63,49,84,8,"u2"],[63,51,84,10],[63,54,84,13],[63,55,84,14,"m24"],[63,58,84,17],[63,59,84,18],[63,64,86,8,"u2"],[63,66,86,10],[63,69,86,13,"m24"],[63,72,86,16],[64,6,87,4],[65,6,88,4,"jsf"],[65,9,88,7],[65,10,88,8],[65,11,88,9],[65,12,88,10],[65,13,88,11,"push"],[65,17,88,15],[65,18,88,16,"u2"],[65,20,88,18],[65,21,88,19],[67,6,90,4],[68,6,91,4],[68,10,91,8],[68,11,91,9],[68,14,91,12,"d1"],[68,16,91,14],[68,21,91,19,"u1"],[68,23,91,21],[68,26,91,24],[68,27,91,25],[68,29,92,6,"d1"],[68,31,92,8],[68,34,92,11],[68,35,92,12],[68,38,92,15,"d1"],[68,40,92,17],[69,6,93,4],[69,10,93,8],[69,11,93,9],[69,14,93,12,"d2"],[69,16,93,14],[69,21,93,19,"u2"],[69,23,93,21],[69,26,93,24],[69,27,93,25],[69,29,94,6,"d2"],[69,31,94,8],[69,34,94,11],[69,35,94,12],[69,38,94,15,"d2"],[69,40,94,17],[70,6,95,4,"k1"],[70,8,95,6],[70,9,95,7,"iushrn"],[70,15,95,13],[70,16,95,14],[70,17,95,15],[70,18,95,16],[71,6,96,4,"k2"],[71,8,96,6],[71,9,96,7,"iushrn"],[71,15,96,13],[71,16,96,14],[71,17,96,15],[71,18,96,16],[72,4,97,2],[73,4,99,2],[73,11,99,9,"jsf"],[73,14,99,12],[74,2,100,0],[75,2,101,0,"utils"],[75,7,101,5],[75,8,101,6,"getJSF"],[75,14,101,12],[75,17,101,15,"getJSF"],[75,23,101,21],[76,2,103,0],[76,11,103,9,"cachedProperty"],[76,25,103,23,"cachedProperty"],[76,26,103,24,"obj"],[76,29,103,27],[76,31,103,29,"name"],[76,35,103,33],[76,37,103,35,"computer"],[76,45,103,43],[76,47,103,45],[77,4,104,2],[77,8,104,6,"key"],[77,11,104,9],[77,14,104,12],[77,17,104,15],[77,20,104,18,"name"],[77,24,104,22],[78,4,105,2,"obj"],[78,7,105,5],[78,8,105,6,"prototype"],[78,17,105,15],[78,18,105,16,"name"],[78,22,105,20],[78,23,105,21],[78,26,105,24],[78,35,105,33,"cachedProperty"],[78,49,105,47,"cachedProperty"],[78,50,105,47],[78,52,105,50],[79,6,106,4],[79,13,106,11],[79,17,106,15],[79,18,106,16,"key"],[79,21,106,19],[79,22,106,20],[79,27,106,25,"undefined"],[79,36,106,34],[79,39,106,37],[79,43,106,41],[79,44,106,42,"key"],[79,47,106,45],[79,48,106,46],[79,51,107,6],[79,55,107,10],[79,56,107,11,"key"],[79,59,107,14],[79,60,107,15],[79,63,107,18,"computer"],[79,71,107,26],[79,72,107,27,"call"],[79,76,107,31],[79,77,107,32],[79,81,107,36],[79,82,107,37],[80,4,108,2],[80,5,108,3],[81,2,109,0],[82,2,110,0,"utils"],[82,7,110,5],[82,8,110,6,"cachedProperty"],[82,22,110,20],[82,25,110,23,"cachedProperty"],[82,39,110,37],[83,2,112,0],[83,11,112,9,"parseBytes"],[83,21,112,19,"parseBytes"],[83,22,112,20,"bytes"],[83,27,112,25],[83,29,112,27],[84,4,113,2],[84,11,113,9],[84,18,113,16,"bytes"],[84,23,113,21],[84,28,113,26],[84,36,113,34],[84,39,113,37,"utils"],[84,44,113,42],[84,45,113,43,"toArray"],[84,52,113,50],[84,53,113,51,"bytes"],[84,58,113,56],[84,60,113,58],[84,65,113,63],[84,66,113,64],[84,69,114,4,"bytes"],[84,74,114,9],[85,2,115,0],[86,2,116,0,"utils"],[86,7,116,5],[86,8,116,6,"parseBytes"],[86,18,116,16],[86,21,116,19,"parseBytes"],[86,31,116,29],[87,2,118,0],[87,11,118,9,"intFromLE"],[87,20,118,18,"intFromLE"],[87,21,118,19,"bytes"],[87,26,118,24],[87,28,118,26],[88,4,119,2],[88,11,119,9],[88,16,119,9,"_$$_REQUIRE"],[88,27,119,9],[88,28,119,9,"_dependencyMap"],[88,42,119,9],[88,57,119,16,"bytes"],[88,62,119,21],[88,64,119,23],[88,69,119,28],[88,71,119,30],[88,75,119,34],[88,76,119,35],[89,2,120,0],[90,2,121,0,"utils"],[90,7,121,5],[90,8,121,6,"intFromLE"],[90,17,121,15],[90,20,121,18,"intFromLE"],[90,29,121,27],[91,0,121,28],[91,3]],"functionMap":{"names":["<global>","getNAF","getJSF","cachedProperty","parseBytes","intFromLE"],"mappings":"AAA;ACc;CD4B;AEI;CFqD;AGG;CHM;AIG;CJG;AKG;CLE"}},"type":"js/module"}]}