{"dependencies":[{"name":"./der","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":17,"index":93},"end":{"line":4,"column":33,"index":109}},{"start":{"line":4,"column":17,"index":93},"end":{"line":4,"column":33,"index":109}},{"start":{"line":4,"column":17,"index":93},"end":{"line":4,"column":33,"index":109}}],"key":"BlI4/vbsRxwJlEC6qraeAHvtN/g="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":15,"index":15},"end":{"line":1,"column":34,"index":34}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":13,"index":49},"end":{"line":2,"column":37,"index":73}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function PEMDecoder(entity) {\n    _$$_REQUIRE(_dependencyMap[0], \"./der\").call(this, entity);\n    this.enc = 'pem';\n  }\n  ;\n  _$$_REQUIRE(_dependencyMap[1], \"inherits\")(PEMDecoder, _$$_REQUIRE(_dependencyMap[0], \"./der\"));\n  module.exports = PEMDecoder;\n  PEMDecoder.prototype.decode = function decode(data, options) {\n    var lines = data.toString().split(/[\\r\\n]+/g);\n    var label = options.label.toUpperCase();\n    var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n    var start = -1;\n    var end = -1;\n    for (var i = 0; i < lines.length; i++) {\n      var match = lines[i].match(re);\n      if (match === null) continue;\n      if (match[2] !== label) continue;\n      if (start === -1) {\n        if (match[1] !== 'BEGIN') break;\n        start = i;\n      } else {\n        if (match[1] !== 'END') break;\n        end = i;\n        break;\n      }\n    }\n    if (start === -1 || end === -1) throw new Error('PEM section not found for: ' + label);\n    var base64 = lines.slice(start + 1, end).join('');\n    // Remove excessive symbols\n    base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n    var input = new (_$$_REQUIRE(_dependencyMap[2], \"buffer\").Buffer)(base64, 'base64');\n    return _$$_REQUIRE(_dependencyMap[0], \"./der\").prototype.decode.call(this, input, options);\n  };\n});","lineCount":35,"map":[[2,2,6,0],[2,11,6,9,"PEMDecoder"],[2,21,6,19,"PEMDecoder"],[2,22,6,20,"entity"],[2,28,6,26],[2,30,6,28],[3,4,7,2,"_$$_REQUIRE"],[3,15,7,2],[3,16,7,2,"_dependencyMap"],[3,30,7,2],[3,44,7,13,"call"],[3,48,7,17],[3,49,7,18],[3,53,7,22],[3,55,7,24,"entity"],[3,61,7,30],[3,62,7,31],[4,4,8,2],[4,8,8,6],[4,9,8,7,"enc"],[4,12,8,10],[4,15,8,13],[4,20,8,18],[5,2,9,0],[6,2,9,1],[7,2,10,0,"_$$_REQUIRE"],[7,13,10,0],[7,14,10,0,"_dependencyMap"],[7,28,10,0],[7,45,10,9,"PEMDecoder"],[7,55,10,19],[7,57,10,19,"_$$_REQUIRE"],[7,68,10,19],[7,69,10,19,"_dependencyMap"],[7,83,10,19],[7,96,10,31],[7,97,10,32],[8,2,11,0,"module"],[8,8,11,6],[8,9,11,7,"exports"],[8,16,11,14],[8,19,11,17,"PEMDecoder"],[8,29,11,27],[9,2,13,0,"PEMDecoder"],[9,12,13,10],[9,13,13,11,"prototype"],[9,22,13,20],[9,23,13,21,"decode"],[9,29,13,27],[9,32,13,30],[9,41,13,39,"decode"],[9,47,13,45,"decode"],[9,48,13,46,"data"],[9,52,13,50],[9,54,13,52,"options"],[9,61,13,59],[9,63,13,61],[10,4,14,2],[10,8,14,6,"lines"],[10,13,14,11],[10,16,14,14,"data"],[10,20,14,18],[10,21,14,19,"toString"],[10,29,14,27],[10,30,14,28],[10,31,14,29],[10,32,14,30,"split"],[10,37,14,35],[10,38,14,36],[10,48,14,46],[10,49,14,47],[11,4,16,2],[11,8,16,6,"label"],[11,13,16,11],[11,16,16,14,"options"],[11,23,16,21],[11,24,16,22,"label"],[11,29,16,27],[11,30,16,28,"toUpperCase"],[11,41,16,39],[11,42,16,40],[11,43,16,41],[12,4,18,2],[12,8,18,6,"re"],[12,10,18,8],[12,13,18,11],[12,46,18,44],[13,4,19,2],[13,8,19,6,"start"],[13,13,19,11],[13,16,19,14],[13,17,19,15],[13,18,19,16],[14,4,20,2],[14,8,20,6,"end"],[14,11,20,9],[14,14,20,12],[14,15,20,13],[14,16,20,14],[15,4,21,2],[15,9,21,7],[15,13,21,11,"i"],[15,14,21,12],[15,17,21,15],[15,18,21,16],[15,20,21,18,"i"],[15,21,21,19],[15,24,21,22,"lines"],[15,29,21,27],[15,30,21,28,"length"],[15,36,21,34],[15,38,21,36,"i"],[15,39,21,37],[15,41,21,39],[15,43,21,41],[16,6,22,4],[16,10,22,8,"match"],[16,15,22,13],[16,18,22,16,"lines"],[16,23,22,21],[16,24,22,22,"i"],[16,25,22,23],[16,26,22,24],[16,27,22,25,"match"],[16,32,22,30],[16,33,22,31,"re"],[16,35,22,33],[16,36,22,34],[17,6,23,4],[17,10,23,8,"match"],[17,15,23,13],[17,20,23,18],[17,24,23,22],[17,26,24,6],[18,6,26,4],[18,10,26,8,"match"],[18,15,26,13],[18,16,26,14],[18,17,26,15],[18,18,26,16],[18,23,26,21,"label"],[18,28,26,26],[18,30,27,6],[19,6,29,4],[19,10,29,8,"start"],[19,15,29,13],[19,20,29,18],[19,21,29,19],[19,22,29,20],[19,24,29,22],[20,8,30,6],[20,12,30,10,"match"],[20,17,30,15],[20,18,30,16],[20,19,30,17],[20,20,30,18],[20,25,30,23],[20,32,30,30],[20,34,31,8],[21,8,32,6,"start"],[21,13,32,11],[21,16,32,14,"i"],[21,17,32,15],[22,6,33,4],[22,7,33,5],[22,13,33,11],[23,8,34,6],[23,12,34,10,"match"],[23,17,34,15],[23,18,34,16],[23,19,34,17],[23,20,34,18],[23,25,34,23],[23,30,34,28],[23,32,35,8],[24,8,36,6,"end"],[24,11,36,9],[24,14,36,12,"i"],[24,15,36,13],[25,8,37,6],[26,6,38,4],[27,4,39,2],[28,4,40,2],[28,8,40,6,"start"],[28,13,40,11],[28,18,40,16],[28,19,40,17],[28,20,40,18],[28,24,40,22,"end"],[28,27,40,25],[28,32,40,30],[28,33,40,31],[28,34,40,32],[28,36,41,4],[28,42,41,10],[28,46,41,14,"Error"],[28,51,41,19],[28,52,41,20],[28,81,41,49],[28,84,41,52,"label"],[28,89,41,57],[28,90,41,58],[29,4,43,2],[29,8,43,6,"base64"],[29,14,43,12],[29,17,43,15,"lines"],[29,22,43,20],[29,23,43,21,"slice"],[29,28,43,26],[29,29,43,27,"start"],[29,34,43,32],[29,37,43,35],[29,38,43,36],[29,40,43,38,"end"],[29,43,43,41],[29,44,43,42],[29,45,43,43,"join"],[29,49,43,47],[29,50,43,48],[29,52,43,50],[29,53,43,51],[30,4,44,2],[31,4,45,2,"base64"],[31,10,45,8],[31,11,45,9,"replace"],[31,18,45,16],[31,19,45,17],[31,38,45,36],[31,40,45,38],[31,42,45,40],[31,43,45,41],[32,4,47,2],[32,8,47,6,"input"],[32,13,47,11],[32,16,47,14],[32,21,47,14,"_$$_REQUIRE"],[32,32,47,14],[32,33,47,14,"_dependencyMap"],[32,47,47,14],[32,62,47,14,"Buffer"],[32,68,47,14],[32,70,47,25,"base64"],[32,76,47,31],[32,78,47,33],[32,86,47,41],[32,87,47,42],[33,4,48,2],[33,11,48,9,"_$$_REQUIRE"],[33,22,48,9],[33,23,48,9,"_dependencyMap"],[33,37,48,9],[33,51,48,20,"prototype"],[33,60,48,29],[33,61,48,30,"decode"],[33,67,48,36],[33,68,48,37,"call"],[33,72,48,41],[33,73,48,42],[33,77,48,46],[33,79,48,48,"input"],[33,84,48,53],[33,86,48,55,"options"],[33,93,48,62],[33,94,48,63],[34,2,49,0],[34,3,49,1],[35,0,49,2],[35,3]],"functionMap":{"names":["<global>","PEMDecoder","decode"],"mappings":"AAA;ACK;CDG;8BEI;CFoC"}},"type":"js/module"}]}