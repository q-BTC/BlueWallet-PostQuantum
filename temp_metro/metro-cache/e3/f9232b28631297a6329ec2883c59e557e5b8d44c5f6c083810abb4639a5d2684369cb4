{"dependencies":[{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":40,"column":0,"index":1650},"end":{"line":40,"column":19,"index":1669}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"./_stream_readable","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":38,"column":15,"index":1573},"end":{"line":38,"column":44,"index":1602}},{"start":{"line":38,"column":15,"index":1573},"end":{"line":38,"column":44,"index":1602}}],"key":"WCytFST825urXtrWqkbnHStVl2g="}},{"name":"./_stream_writable","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":39,"column":15,"index":1619},"end":{"line":39,"column":44,"index":1648}},{"start":{"line":39,"column":15,"index":1619},"end":{"line":39,"column":44,"index":1648}},{"start":{"line":39,"column":15,"index":1619},"end":{"line":39,"column":44,"index":1648}}],"key":"m2oZRdKtImFFCekQiQL15L9XykA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Copyright Joyent, Inc. and other Node contributors.\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a\n  // copy of this software and associated documentation files (the\n  // \"Software\"), to deal in the Software without restriction, including\n  // without limitation the rights to use, copy, modify, merge, publish,\n  // distribute, sublicense, and/or sell copies of the Software, and to permit\n  // persons to whom the Software is furnished to do so, subject to the\n  // following conditions:\n  //\n  // The above copyright notice and this permission notice shall be included\n  // in all copies or substantial portions of the Software.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n  // OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  // MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n  // NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n  // DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n  // OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n  // USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n  // a duplex stream is just a stream that is both readable and writable.\n  // Since JS doesn't have multiple prototypal inheritance, this class\n  // prototypally inherits from Readable, and then parasitically from\n  // Writable.\n\n  'use strict';\n\n  /*<replacement>*/\n  var objectKeys = Object.keys || function (obj) {\n    var keys = [];\n    for (var key in obj) keys.push(key);\n    return keys;\n  };\n  /*</replacement>*/\n\n  module.exports = Duplex;\n  _$$_REQUIRE(_dependencyMap[0], \"inherits\")(Duplex, _$$_REQUIRE(_dependencyMap[1], \"./_stream_readable\"));\n  {\n    // Allow the keys array to be GC'ed.\n    var keys = objectKeys(_$$_REQUIRE(_dependencyMap[2], \"./_stream_writable\").prototype);\n    for (var v = 0; v < keys.length; v++) {\n      var method = keys[v];\n      if (!Duplex.prototype[method]) Duplex.prototype[method] = _$$_REQUIRE(_dependencyMap[2], \"./_stream_writable\").prototype[method];\n    }\n  }\n  function Duplex(options) {\n    if (!(this instanceof Duplex)) return new Duplex(options);\n    _$$_REQUIRE(_dependencyMap[1], \"./_stream_readable\").call(this, options);\n    _$$_REQUIRE(_dependencyMap[2], \"./_stream_writable\").call(this, options);\n    this.allowHalfOpen = true;\n    if (options) {\n      if (options.readable === false) this.readable = false;\n      if (options.writable === false) this.writable = false;\n      if (options.allowHalfOpen === false) {\n        this.allowHalfOpen = false;\n        this.once('end', onend);\n      }\n    }\n  }\n  Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: false,\n    get: function get() {\n      return this._writableState.highWaterMark;\n    }\n  });\n  Object.defineProperty(Duplex.prototype, 'writableBuffer', {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: false,\n    get: function get() {\n      return this._writableState && this._writableState.getBuffer();\n    }\n  });\n  Object.defineProperty(Duplex.prototype, 'writableLength', {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: false,\n    get: function get() {\n      return this._writableState.length;\n    }\n  });\n\n  // the no-half-open enforcer\n  function onend() {\n    // If the writable side ended, then we're ok.\n    if (this._writableState.ended) return;\n\n    // no more data can be written.\n    // But allow more writes to happen in this tick.\n    process.nextTick(onEndNT, this);\n  }\n  function onEndNT(self) {\n    self.end();\n  }\n  Object.defineProperty(Duplex.prototype, 'destroyed', {\n    // making it explicit this property is not enumerable\n    // because otherwise some prototype manipulation in\n    // userland will fail\n    enumerable: false,\n    get: function get() {\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return false;\n      }\n      return this._readableState.destroyed && this._writableState.destroyed;\n    },\n    set: function set(value) {\n      // we ignore the value if the stream\n      // has not been initialized yet\n      if (this._readableState === undefined || this._writableState === undefined) {\n        return;\n      }\n\n      // backward compatibility, the user is explicitly\n      // managing destroyed\n      this._readableState.destroyed = value;\n      this._writableState.destroyed = value;\n    }\n  });\n});","lineCount":126,"map":[[2,2,1,0],[3,2,2,0],[4,2,3,0],[5,2,4,0],[6,2,5,0],[7,2,6,0],[8,2,7,0],[9,2,8,0],[10,2,9,0],[11,2,10,0],[12,2,11,0],[13,2,12,0],[14,2,13,0],[15,2,14,0],[16,2,15,0],[17,2,16,0],[18,2,17,0],[19,2,18,0],[20,2,19,0],[21,2,20,0],[23,2,22,0],[24,2,23,0],[25,2,24,0],[26,2,25,0],[28,2,27,0],[28,14,27,12],[30,2,29,0],[31,2,30,0],[31,6,30,4,"objectKeys"],[31,16,30,14],[31,19,30,17,"Object"],[31,25,30,23],[31,26,30,24,"keys"],[31,30,30,28],[31,34,30,32],[31,44,30,42,"obj"],[31,47,30,45],[31,49,30,47],[32,4,31,2],[32,8,31,6,"keys"],[32,12,31,10],[32,15,31,13],[32,17,31,15],[33,4,32,2],[33,9,32,7],[33,13,32,11,"key"],[33,16,32,14],[33,20,32,18,"obj"],[33,23,32,21],[33,25,32,23,"keys"],[33,29,32,27],[33,30,32,28,"push"],[33,34,32,32],[33,35,32,33,"key"],[33,38,32,36],[33,39,32,37],[34,4,33,2],[34,11,33,9,"keys"],[34,15,33,13],[35,2,34,0],[35,3,34,1],[36,2,35,0],[38,2,37,0,"module"],[38,8,37,6],[38,9,37,7,"exports"],[38,16,37,14],[38,19,37,17,"Duplex"],[38,25,37,23],[39,2,40,0,"require"],[39,13,40,7],[39,14,40,7,"_dependencyMap"],[39,28,40,7],[39,43,40,18],[39,44,40,19],[39,45,40,20,"Duplex"],[39,51,40,26],[39,53,40,26,"_$$_REQUIRE"],[39,64,40,26],[39,65,40,26,"_dependencyMap"],[39,79,40,26],[39,105,40,36],[39,106,40,37],[40,2,41,0],[41,4,42,2],[42,4,43,2],[42,8,43,6,"keys"],[42,12,43,10],[42,15,43,13,"objectKeys"],[42,25,43,23],[42,26,43,24,"_$$_REQUIRE"],[42,37,43,24],[42,38,43,24,"_dependencyMap"],[42,52,43,24],[42,79,43,33,"prototype"],[42,88,43,42],[42,89,43,43],[43,4,44,2],[43,9,44,7],[43,13,44,11,"v"],[43,14,44,12],[43,17,44,15],[43,18,44,16],[43,20,44,18,"v"],[43,21,44,19],[43,24,44,22,"keys"],[43,28,44,26],[43,29,44,27,"length"],[43,35,44,33],[43,37,44,35,"v"],[43,38,44,36],[43,40,44,38],[43,42,44,40],[44,6,45,4],[44,10,45,8,"method"],[44,16,45,14],[44,19,45,17,"keys"],[44,23,45,21],[44,24,45,22,"v"],[44,25,45,23],[44,26,45,24],[45,6,46,4],[45,10,46,8],[45,11,46,9,"Duplex"],[45,17,46,15],[45,18,46,16,"prototype"],[45,27,46,25],[45,28,46,26,"method"],[45,34,46,32],[45,35,46,33],[45,37,46,35,"Duplex"],[45,43,46,41],[45,44,46,42,"prototype"],[45,53,46,51],[45,54,46,52,"method"],[45,60,46,58],[45,61,46,59],[45,64,46,62,"_$$_REQUIRE"],[45,75,46,62],[45,76,46,62,"_dependencyMap"],[45,90,46,62],[45,117,46,71,"prototype"],[45,126,46,80],[45,127,46,81,"method"],[45,133,46,87],[45,134,46,88],[46,4,47,2],[47,2,48,0],[48,2,49,0],[48,11,49,9,"Duplex"],[48,17,49,15,"Duplex"],[48,18,49,16,"options"],[48,25,49,23],[48,27,49,25],[49,4,50,2],[49,8,50,6],[49,10,50,8],[49,14,50,12],[49,26,50,24,"Duplex"],[49,32,50,30],[49,33,50,31],[49,35,50,33],[49,42,50,40],[49,46,50,44,"Duplex"],[49,52,50,50],[49,53,50,51,"options"],[49,60,50,58],[49,61,50,59],[50,4,51,2,"_$$_REQUIRE"],[50,15,51,2],[50,16,51,2,"_dependencyMap"],[50,30,51,2],[50,57,51,11,"call"],[50,61,51,15],[50,62,51,16],[50,66,51,20],[50,68,51,22,"options"],[50,75,51,29],[50,76,51,30],[51,4,52,2,"_$$_REQUIRE"],[51,15,52,2],[51,16,52,2,"_dependencyMap"],[51,30,52,2],[51,57,52,11,"call"],[51,61,52,15],[51,62,52,16],[51,66,52,20],[51,68,52,22,"options"],[51,75,52,29],[51,76,52,30],[52,4,53,2],[52,8,53,6],[52,9,53,7,"allowHalfOpen"],[52,22,53,20],[52,25,53,23],[52,29,53,27],[53,4,54,2],[53,8,54,6,"options"],[53,15,54,13],[53,17,54,15],[54,6,55,4],[54,10,55,8,"options"],[54,17,55,15],[54,18,55,16,"readable"],[54,26,55,24],[54,31,55,29],[54,36,55,34],[54,38,55,36],[54,42,55,40],[54,43,55,41,"readable"],[54,51,55,49],[54,54,55,52],[54,59,55,57],[55,6,56,4],[55,10,56,8,"options"],[55,17,56,15],[55,18,56,16,"writable"],[55,26,56,24],[55,31,56,29],[55,36,56,34],[55,38,56,36],[55,42,56,40],[55,43,56,41,"writable"],[55,51,56,49],[55,54,56,52],[55,59,56,57],[56,6,57,4],[56,10,57,8,"options"],[56,17,57,15],[56,18,57,16,"allowHalfOpen"],[56,31,57,29],[56,36,57,34],[56,41,57,39],[56,43,57,41],[57,8,58,6],[57,12,58,10],[57,13,58,11,"allowHalfOpen"],[57,26,58,24],[57,29,58,27],[57,34,58,32],[58,8,59,6],[58,12,59,10],[58,13,59,11,"once"],[58,17,59,15],[58,18,59,16],[58,23,59,21],[58,25,59,23,"onend"],[58,30,59,28],[58,31,59,29],[59,6,60,4],[60,4,61,2],[61,2,62,0],[62,2,63,0,"Object"],[62,8,63,6],[62,9,63,7,"defineProperty"],[62,23,63,21],[62,24,63,22,"Duplex"],[62,30,63,28],[62,31,63,29,"prototype"],[62,40,63,38],[62,42,63,40],[62,65,63,63],[62,67,63,65],[63,4,64,2],[64,4,65,2],[65,4,66,2],[66,4,67,2,"enumerable"],[66,14,67,12],[66,16,67,14],[66,21,67,19],[67,4,68,2,"get"],[67,7,68,5],[67,9,68,7],[67,18,68,16,"get"],[67,21,68,19,"get"],[67,22,68,19],[67,24,68,22],[68,6,69,4],[68,13,69,11],[68,17,69,15],[68,18,69,16,"_writableState"],[68,32,69,30],[68,33,69,31,"highWaterMark"],[68,46,69,44],[69,4,70,2],[70,2,71,0],[70,3,71,1],[70,4,71,2],[71,2,72,0,"Object"],[71,8,72,6],[71,9,72,7,"defineProperty"],[71,23,72,21],[71,24,72,22,"Duplex"],[71,30,72,28],[71,31,72,29,"prototype"],[71,40,72,38],[71,42,72,40],[71,58,72,56],[71,60,72,58],[72,4,73,2],[73,4,74,2],[74,4,75,2],[75,4,76,2,"enumerable"],[75,14,76,12],[75,16,76,14],[75,21,76,19],[76,4,77,2,"get"],[76,7,77,5],[76,9,77,7],[76,18,77,16,"get"],[76,21,77,19,"get"],[76,22,77,19],[76,24,77,22],[77,6,78,4],[77,13,78,11],[77,17,78,15],[77,18,78,16,"_writableState"],[77,32,78,30],[77,36,78,34],[77,40,78,38],[77,41,78,39,"_writableState"],[77,55,78,53],[77,56,78,54,"getBuffer"],[77,65,78,63],[77,66,78,64],[77,67,78,65],[78,4,79,2],[79,2,80,0],[79,3,80,1],[79,4,80,2],[80,2,81,0,"Object"],[80,8,81,6],[80,9,81,7,"defineProperty"],[80,23,81,21],[80,24,81,22,"Duplex"],[80,30,81,28],[80,31,81,29,"prototype"],[80,40,81,38],[80,42,81,40],[80,58,81,56],[80,60,81,58],[81,4,82,2],[82,4,83,2],[83,4,84,2],[84,4,85,2,"enumerable"],[84,14,85,12],[84,16,85,14],[84,21,85,19],[85,4,86,2,"get"],[85,7,86,5],[85,9,86,7],[85,18,86,16,"get"],[85,21,86,19,"get"],[85,22,86,19],[85,24,86,22],[86,6,87,4],[86,13,87,11],[86,17,87,15],[86,18,87,16,"_writableState"],[86,32,87,30],[86,33,87,31,"length"],[86,39,87,37],[87,4,88,2],[88,2,89,0],[88,3,89,1],[88,4,89,2],[90,2,91,0],[91,2,92,0],[91,11,92,9,"onend"],[91,16,92,14,"onend"],[91,17,92,14],[91,19,92,17],[92,4,93,2],[93,4,94,2],[93,8,94,6],[93,12,94,10],[93,13,94,11,"_writableState"],[93,27,94,25],[93,28,94,26,"ended"],[93,33,94,31],[93,35,94,33],[95,4,96,2],[96,4,97,2],[97,4,98,2,"process"],[97,11,98,9],[97,12,98,10,"nextTick"],[97,20,98,18],[97,21,98,19,"onEndNT"],[97,28,98,26],[97,30,98,28],[97,34,98,32],[97,35,98,33],[98,2,99,0],[99,2,100,0],[99,11,100,9,"onEndNT"],[99,18,100,16,"onEndNT"],[99,19,100,17,"self"],[99,23,100,21],[99,25,100,23],[100,4,101,2,"self"],[100,8,101,6],[100,9,101,7,"end"],[100,12,101,10],[100,13,101,11],[100,14,101,12],[101,2,102,0],[102,2,103,0,"Object"],[102,8,103,6],[102,9,103,7,"defineProperty"],[102,23,103,21],[102,24,103,22,"Duplex"],[102,30,103,28],[102,31,103,29,"prototype"],[102,40,103,38],[102,42,103,40],[102,53,103,51],[102,55,103,53],[103,4,104,2],[104,4,105,2],[105,4,106,2],[106,4,107,2,"enumerable"],[106,14,107,12],[106,16,107,14],[106,21,107,19],[107,4,108,2,"get"],[107,7,108,5],[107,9,108,7],[107,18,108,16,"get"],[107,21,108,19,"get"],[107,22,108,19],[107,24,108,22],[108,6,109,4],[108,10,109,8],[108,14,109,12],[108,15,109,13,"_readableState"],[108,29,109,27],[108,34,109,32,"undefined"],[108,43,109,41],[108,47,109,45],[108,51,109,49],[108,52,109,50,"_writableState"],[108,66,109,64],[108,71,109,69,"undefined"],[108,80,109,78],[108,82,109,80],[109,8,110,6],[109,15,110,13],[109,20,110,18],[110,6,111,4],[111,6,112,4],[111,13,112,11],[111,17,112,15],[111,18,112,16,"_readableState"],[111,32,112,30],[111,33,112,31,"destroyed"],[111,42,112,40],[111,46,112,44],[111,50,112,48],[111,51,112,49,"_writableState"],[111,65,112,63],[111,66,112,64,"destroyed"],[111,75,112,73],[112,4,113,2],[112,5,113,3],[113,4,114,2,"set"],[113,7,114,5],[113,9,114,7],[113,18,114,16,"set"],[113,21,114,19,"set"],[113,22,114,20,"value"],[113,27,114,25],[113,29,114,27],[114,6,115,4],[115,6,116,4],[116,6,117,4],[116,10,117,8],[116,14,117,12],[116,15,117,13,"_readableState"],[116,29,117,27],[116,34,117,32,"undefined"],[116,43,117,41],[116,47,117,45],[116,51,117,49],[116,52,117,50,"_writableState"],[116,66,117,64],[116,71,117,69,"undefined"],[116,80,117,78],[116,82,117,80],[117,8,118,6],[118,6,119,4],[120,6,121,4],[121,6,122,4],[122,6,123,4],[122,10,123,8],[122,11,123,9,"_readableState"],[122,25,123,23],[122,26,123,24,"destroyed"],[122,35,123,33],[122,38,123,36,"value"],[122,43,123,41],[123,6,124,4],[123,10,124,8],[123,11,124,9,"_writableState"],[123,25,124,23],[123,26,124,24,"destroyed"],[123,35,124,33],[123,38,124,36,"value"],[123,43,124,41],[124,4,125,2],[125,2,126,0],[125,3,126,1],[125,4,126,2],[126,0,126,3],[126,3]],"functionMap":{"names":["<global>","<anonymous>","Duplex","get","onend","onEndNT","set"],"mappings":"AAA;gCC6B;CDI;AEe;CFa;OGM;GHE;OGO;GHE;OGO;GHE;AII;CJO;AKC;CLE;OGM;GHK;OMC;GNW"}},"type":"js/module"}]}