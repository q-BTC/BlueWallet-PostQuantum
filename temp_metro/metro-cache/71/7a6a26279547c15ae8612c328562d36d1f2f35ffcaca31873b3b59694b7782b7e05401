{"dependencies":[{"name":"buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":18,"index":55},"end":{"line":2,"column":35,"index":72}}],"key":"kYC7RadcB7k9ZEYd5zOmBbv1F14="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":20,"index":130},"end":{"line":6,"column":43,"index":153}}],"key":"lGv6jwyWtmgghjjYvCX5yhM2Jt0="}},{"name":"sjcl","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":11,"index":94},"end":{"line":5,"column":26,"index":109}},{"start":{"line":5,"column":11,"index":94},"end":{"line":5,"column":26,"index":109}},{"start":{"line":5,"column":11,"index":94},"end":{"line":5,"column":26,"index":109}},{"start":{"line":5,"column":11,"index":94},"end":{"line":5,"column":26,"index":109}}],"key":"jRNDJALht80zMntoDWTg6JEXBOk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.randomBytes = randomBytes;\n  exports.seedSJCL = seedSJCL;\n  if (typeof Buffer === 'undefined') {\n    global.Buffer = _$$_REQUIRE(_dependencyMap[0], \"buffer\").Buffer;\n  }\n  var RNRandomBytes = _$$_REQUIRE(_dependencyMap[1], \"react-native\").NativeModules.RNRandomBytes;\n  function noop() {}\n  function toBuffer(nativeStr) {\n    return new Buffer(nativeStr, 'base64');\n  }\n  function init() {\n    if (RNRandomBytes.seed) {\n      var seedBuffer = toBuffer(RNRandomBytes.seed);\n      addEntropy(seedBuffer);\n    } else {\n      seedSJCL();\n    }\n  }\n  function addEntropy(entropyBuf) {\n    var hexString = entropyBuf.toString('hex');\n    var stanfordSeed = _$$_REQUIRE(_dependencyMap[2], \"sjcl\").codec.hex.toBits(hexString);\n    _$$_REQUIRE(_dependencyMap[2], \"sjcl\").random.addEntropy(stanfordSeed);\n  }\n  function seedSJCL(cb) {\n    cb = cb || noop;\n    randomBytes(4096, function (err, buffer) {\n      if (err) return cb(err);\n      addEntropy(buffer);\n    });\n  }\n  function randomBytes(length, cb) {\n    if (!cb) {\n      var size = length;\n      var wordCount = Math.ceil(size * 0.25);\n      var _randomBytes = _$$_REQUIRE(_dependencyMap[2], \"sjcl\").random.randomWords(wordCount, 10);\n      var hexString = _$$_REQUIRE(_dependencyMap[2], \"sjcl\").codec.hex.fromBits(_randomBytes);\n      hexString = hexString.substr(0, size * 2);\n      return new Buffer(hexString, 'hex');\n    }\n    RNRandomBytes.randomBytes(length, function (err, base64String) {\n      if (err) {\n        cb(err);\n      } else {\n        cb(null, toBuffer(base64String));\n      }\n    });\n  }\n  init();\n});","lineCount":53,"map":[[7,2,1,0],[7,6,1,4],[7,13,1,11,"Buffer"],[7,19,1,17],[7,24,1,22],[7,35,1,33],[7,37,1,35],[8,4,2,2,"global"],[8,10,2,8],[8,11,2,9,"Buffer"],[8,17,2,15],[8,20,2,18,"require"],[8,31,2,25],[8,32,2,25,"_dependencyMap"],[8,46,2,25],[8,59,2,34],[8,60,2,35],[8,61,2,36,"Buffer"],[8,67,2,42],[9,2,3,0],[10,2,6,0],[10,6,6,4,"RNRandomBytes"],[10,19,6,17],[10,22,6,20,"require"],[10,33,6,27],[10,34,6,27,"_dependencyMap"],[10,48,6,27],[10,67,6,42],[10,68,6,43],[10,69,6,44,"NativeModules"],[10,82,6,57],[10,83,6,58,"RNRandomBytes"],[10,96,6,71],[11,2,8,0],[11,11,8,9,"noop"],[11,15,8,13,"noop"],[11,16,8,13],[11,18,8,17],[11,19,8,18],[12,2,10,0],[12,11,10,9,"toBuffer"],[12,19,10,17,"toBuffer"],[12,20,10,19,"nativeStr"],[12,29,10,28],[12,31,10,30],[13,4,11,2],[13,11,11,9],[13,15,11,13,"Buffer"],[13,21,11,19],[13,22,11,20,"nativeStr"],[13,31,11,29],[13,33,11,31],[13,41,11,39],[13,42,11,40],[14,2,12,0],[15,2,14,0],[15,11,14,9,"init"],[15,15,14,13,"init"],[15,16,14,13],[15,18,14,17],[16,4,15,2],[16,8,15,6,"RNRandomBytes"],[16,21,15,19],[16,22,15,20,"seed"],[16,26,15,24],[16,28,15,26],[17,6,16,4],[17,10,16,8,"seedBuffer"],[17,20,16,18],[17,23,16,21,"toBuffer"],[17,31,16,29],[17,32,16,30,"RNRandomBytes"],[17,45,16,43],[17,46,16,44,"seed"],[17,50,16,48],[17,51,16,49],[18,6,17,4,"addEntropy"],[18,16,17,14],[18,17,17,15,"seedBuffer"],[18,27,17,25],[18,28,17,26],[19,4,18,2],[19,5,18,3],[19,11,18,9],[20,6,19,4,"seedSJCL"],[20,14,19,12],[20,15,19,13],[20,16,19,14],[21,4,20,2],[22,2,21,0],[23,2,23,0],[23,11,23,9,"addEntropy"],[23,21,23,19,"addEntropy"],[23,22,23,21,"entropyBuf"],[23,32,23,31],[23,34,23,33],[24,4,24,2],[24,8,24,6,"hexString"],[24,17,24,15],[24,20,24,18,"entropyBuf"],[24,30,24,28],[24,31,24,29,"toString"],[24,39,24,37],[24,40,24,38],[24,45,24,43],[24,46,24,44],[25,4,25,2],[25,8,25,6,"stanfordSeed"],[25,20,25,18],[25,23,25,21,"_$$_REQUIRE"],[25,34,25,21],[25,35,25,21,"_dependencyMap"],[25,49,25,21],[25,62,25,26,"codec"],[25,67,25,31],[25,68,25,32,"hex"],[25,71,25,35],[25,72,25,36,"toBits"],[25,78,25,42],[25,79,25,43,"hexString"],[25,88,25,52],[25,89,25,53],[26,4,26,2,"_$$_REQUIRE"],[26,15,26,2],[26,16,26,2,"_dependencyMap"],[26,30,26,2],[26,43,26,7,"random"],[26,49,26,13],[26,50,26,14,"addEntropy"],[26,60,26,24],[26,61,26,25,"stanfordSeed"],[26,73,26,37],[26,74,26,38],[27,2,27,0],[28,2,29,7],[28,11,29,16,"seedSJCL"],[28,19,29,24,"seedSJCL"],[28,20,29,26,"cb"],[28,22,29,28],[28,24,29,30],[29,4,30,2,"cb"],[29,6,30,4],[29,9,30,7,"cb"],[29,11,30,9],[29,15,30,13,"noop"],[29,19,30,17],[30,4,31,2,"randomBytes"],[30,15,31,13],[30,16,31,14],[30,20,31,18],[30,22,31,20],[30,32,31,30,"err"],[30,35,31,33],[30,37,31,35,"buffer"],[30,43,31,41],[30,45,31,43],[31,6,32,4],[31,10,32,8,"err"],[31,13,32,11],[31,15,32,13],[31,22,32,20,"cb"],[31,24,32,22],[31,25,32,23,"err"],[31,28,32,26],[31,29,32,27],[32,6,34,4,"addEntropy"],[32,16,34,14],[32,17,34,15,"buffer"],[32,23,34,21],[32,24,34,22],[33,4,35,2],[33,5,35,3],[33,6,35,4],[34,2,36,0],[35,2,38,7],[35,11,38,16,"randomBytes"],[35,22,38,27,"randomBytes"],[35,23,38,29,"length"],[35,29,38,35],[35,31,38,37,"cb"],[35,33,38,39],[35,35,38,41],[36,4,39,2],[36,8,39,6],[36,9,39,7,"cb"],[36,11,39,9],[36,13,39,11],[37,6,40,4],[37,10,40,8,"size"],[37,14,40,12],[37,17,40,15,"length"],[37,23,40,21],[38,6,41,4],[38,10,41,8,"wordCount"],[38,19,41,17],[38,22,41,20,"Math"],[38,26,41,24],[38,27,41,25,"ceil"],[38,31,41,29],[38,32,41,30,"size"],[38,36,41,34],[38,39,41,37],[38,43,41,41],[38,44,41,42],[39,6,42,4],[39,10,42,8,"randomBytes"],[39,22,42,19],[39,25,42,22,"_$$_REQUIRE"],[39,36,42,22],[39,37,42,22,"_dependencyMap"],[39,51,42,22],[39,64,42,27,"random"],[39,70,42,33],[39,71,42,34,"randomWords"],[39,82,42,45],[39,83,42,46,"wordCount"],[39,92,42,55],[39,94,42,57],[39,96,42,59],[39,97,42,60],[40,6,43,4],[40,10,43,8,"hexString"],[40,19,43,17],[40,22,43,20,"_$$_REQUIRE"],[40,33,43,20],[40,34,43,20,"_dependencyMap"],[40,48,43,20],[40,61,43,25,"codec"],[40,66,43,30],[40,67,43,31,"hex"],[40,70,43,34],[40,71,43,35,"fromBits"],[40,79,43,43],[40,80,43,44,"randomBytes"],[40,92,43,55],[40,93,43,56],[41,6,44,4,"hexString"],[41,15,44,13],[41,18,44,16,"hexString"],[41,27,44,25],[41,28,44,26,"substr"],[41,34,44,32],[41,35,44,33],[41,36,44,34],[41,38,44,36,"size"],[41,42,44,40],[41,45,44,43],[41,46,44,44],[41,47,44,45],[42,6,45,4],[42,13,45,11],[42,17,45,15,"Buffer"],[42,23,45,21],[42,24,45,22,"hexString"],[42,33,45,31],[42,35,45,33],[42,40,45,38],[42,41,45,39],[43,4,46,2],[44,4,48,2,"RNRandomBytes"],[44,17,48,15],[44,18,48,16,"randomBytes"],[44,29,48,27],[44,30,48,28,"length"],[44,36,48,34],[44,38,48,36],[44,48,48,45,"err"],[44,51,48,48],[44,53,48,50,"base64String"],[44,65,48,62],[44,67,48,64],[45,6,49,4],[45,10,49,8,"err"],[45,13,49,11],[45,15,49,13],[46,8,50,6,"cb"],[46,10,50,8],[46,11,50,9,"err"],[46,14,50,12],[46,15,50,13],[47,6,51,4],[47,7,51,5],[47,13,51,11],[48,8,52,6,"cb"],[48,10,52,8],[48,11,52,9],[48,15,52,13],[48,17,52,15,"toBuffer"],[48,25,52,23],[48,26,52,24,"base64String"],[48,38,52,36],[48,39,52,37],[48,40,52,38],[49,6,53,4],[50,4,54,2],[50,5,54,3],[50,6,54,4],[51,2,55,0],[52,2,57,0,"init"],[52,6,57,4],[52,7,57,5],[52,8,57,6],[53,0,57,6],[53,3]],"functionMap":{"names":["<global>","noop","toBuffer","init","addEntropy","seedSJCL","randomBytes$argument_1","randomBytes","RNRandomBytes.randomBytes$argument_1"],"mappings":"AAA;ACO,mBD;AEE;CFE;AGE;CHO;AIE;CJI;OKE;oBCE;GDI;CLC;OOE;oCCU;GDM;CPC"}},"type":"js/module"}]}