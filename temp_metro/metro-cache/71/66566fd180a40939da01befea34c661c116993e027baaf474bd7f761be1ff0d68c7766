{"dependencies":[{"name":"./bech32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":31,"index":389},"end":{"line":7,"column":50,"index":408}}],"key":"Y2+fz2K9D7M2hi/dABCm3fdqaq8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.decodeBc32Data = exports.encodeBc32Data = exports.encodeSegwitAddress = exports.decodeSegwitAddress = exports.Bech32Version = void 0;\n  var bech32_1 = __importDefault(_$$_REQUIRE(_dependencyMap[0], \"./bech32\"));\n  var Bech32Version;\n  (function (Bech32Version) {\n    Bech32Version[Bech32Version[\"Origin\"] = 1] = \"Origin\";\n    Bech32Version[Bech32Version[\"bis\"] = 2] = \"bis\";\n  })(Bech32Version = exports.Bech32Version || (exports.Bech32Version = {}));\n  var convertBits = function convertBits(data, fromBits, toBits, pad) {\n    var acc = 0;\n    var bits = 0;\n    var ret = [];\n    var maxv = (1 << toBits) - 1;\n    for (var p = 0; p < data.length; ++p) {\n      var value = data[p];\n      if (value < 0 || value >> fromBits !== 0) {\n        return null;\n      }\n      acc = acc << fromBits | value;\n      bits += fromBits;\n      while (bits >= toBits) {\n        bits -= toBits;\n        ret.push(acc >> bits & maxv);\n      }\n    }\n    if (pad) {\n      if (bits > 0) {\n        ret.push(acc << toBits - bits & maxv);\n      }\n    } else if (bits >= fromBits || acc << toBits - bits & maxv) {\n      return null;\n    }\n    return ret;\n  };\n  exports.decodeSegwitAddress = function (hrp, addr) {\n    var dec = bech32_1.default.decode(addr);\n    if (dec === null || dec.hrp !== hrp || dec.data.length < 1 || dec.data[0] > 16) {\n      return null;\n    }\n    var res = convertBits(Uint8Array.from(dec.data.slice(1)), 5, 8, false);\n    if (res === null || res.length < 2 || res.length > 40) {\n      return null;\n    }\n    if (dec.data[0] === 0 && res.length !== 20 && res.length !== 32) {\n      return null;\n    }\n    return {\n      version: dec.data[0],\n      program: res\n    };\n  };\n  exports.encodeSegwitAddress = function (hrp, version, program) {\n    var ret = bech32_1.default.encode(hrp, [version].concat(convertBits(program, 8, 5, true)), Bech32Version.Origin);\n    if (exports.decodeSegwitAddress(hrp, ret) === null) {\n      return null;\n    }\n    return ret;\n  };\n  exports.encodeBc32Data = function (hex) {\n    var data = Buffer.from(hex, 'hex');\n    return bech32_1.default.encode(null, convertBits(data, 8, 5, true), Bech32Version.bis);\n  };\n  exports.decodeBc32Data = function (data) {\n    var result = bech32_1.default.decode(data);\n    if (result) {\n      var res = convertBits(Buffer.from(result.data), 5, 8, false);\n      return Buffer.from(res).toString('hex');\n    } else {\n      return null;\n    }\n  };\n});","lineCount":82,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importDefault"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__importDefault"],[4,52,2,51],[4,56,2,56],[4,66,2,66,"mod"],[4,69,2,69],[4,71,2,71],[5,4,3,4],[5,11,3,12,"mod"],[5,14,3,15],[5,18,3,19,"mod"],[5,21,3,22],[5,22,3,23,"__esModule"],[5,32,3,33],[5,35,3,37,"mod"],[5,38,3,40],[5,41,3,43],[6,6,3,45],[6,15,3,54],[6,17,3,56,"mod"],[7,4,3,60],[7,5,3,61],[8,2,4,0],[8,3,4,1],[9,2,5,0,"Object"],[9,8,5,6],[9,9,5,7,"defineProperty"],[9,23,5,21],[9,24,5,22,"exports"],[9,31,5,29],[9,33,5,31],[9,45,5,43],[9,47,5,45],[10,4,5,47,"value"],[10,9,5,52],[10,11,5,54],[11,2,5,59],[11,3,5,60],[11,4,5,61],[12,2,6,0,"exports"],[12,9,6,7],[12,10,6,8,"decodeBc32Data"],[12,24,6,22],[12,27,6,25,"exports"],[12,34,6,32],[12,35,6,33,"encodeBc32Data"],[12,49,6,47],[12,52,6,50,"exports"],[12,59,6,57],[12,60,6,58,"encodeSegwitAddress"],[12,79,6,77],[12,82,6,80,"exports"],[12,89,6,87],[12,90,6,88,"decodeSegwitAddress"],[12,109,6,107],[12,112,6,110,"exports"],[12,119,6,117],[12,120,6,118,"Bech32Version"],[12,133,6,131],[12,136,6,134],[12,141,6,139],[12,142,6,140],[13,2,7,0],[13,6,7,4,"bech32_1"],[13,14,7,12],[13,17,7,15,"__importDefault"],[13,32,7,30],[13,33,7,31,"require"],[13,44,7,38],[13,45,7,38,"_dependencyMap"],[13,59,7,38],[13,74,7,49],[13,75,7,50],[13,76,7,51],[14,2,8,0],[14,6,8,4,"Bech32Version"],[14,19,8,17],[15,2,9,0],[15,3,9,1],[15,13,9,11,"Bech32Version"],[15,26,9,24],[15,28,9,26],[16,4,10,4,"Bech32Version"],[16,17,10,17],[16,18,10,18,"Bech32Version"],[16,31,10,31],[16,32,10,32],[16,40,10,40],[16,41,10,41],[16,44,10,44],[16,45,10,45],[16,46,10,46],[16,49,10,49],[16,57,10,57],[17,4,11,4,"Bech32Version"],[17,17,11,17],[17,18,11,18,"Bech32Version"],[17,31,11,31],[17,32,11,32],[17,37,11,37],[17,38,11,38],[17,41,11,41],[17,42,11,42],[17,43,11,43],[17,46,11,46],[17,51,11,51],[18,2,12,0],[18,3,12,1],[18,5,12,3,"Bech32Version"],[18,18,12,16],[18,21,12,19,"exports"],[18,28,12,26],[18,29,12,27,"Bech32Version"],[18,42,12,40],[18,47,12,45,"exports"],[18,54,12,52],[18,55,12,53,"Bech32Version"],[18,68,12,66],[18,71,12,69],[18,72,12,70],[18,73,12,71],[18,74,12,72],[18,75,12,73],[19,2,13,0],[19,6,13,4,"convertBits"],[19,17,13,15],[19,20,13,18],[19,29,13,4,"convertBits"],[19,40,13,15,"convertBits"],[19,41,13,28,"data"],[19,45,13,32],[19,47,13,34,"fromBits"],[19,55,13,42],[19,57,13,44,"toBits"],[19,63,13,50],[19,65,13,52,"pad"],[19,68,13,55],[19,70,13,57],[20,4,14,4],[20,8,14,8,"acc"],[20,11,14,11],[20,14,14,14],[20,15,14,15],[21,4,15,4],[21,8,15,8,"bits"],[21,12,15,12],[21,15,15,15],[21,16,15,16],[22,4,16,4],[22,8,16,8,"ret"],[22,11,16,11],[22,14,16,14],[22,16,16,16],[23,4,17,4],[23,8,17,8,"maxv"],[23,12,17,12],[23,15,17,15],[23,16,17,16],[23,17,17,17],[23,21,17,21,"toBits"],[23,27,17,27],[23,31,17,31],[23,32,17,32],[24,4,18,4],[24,9,18,9],[24,13,18,13,"p"],[24,14,18,14],[24,17,18,17],[24,18,18,18],[24,20,18,20,"p"],[24,21,18,21],[24,24,18,24,"data"],[24,28,18,28],[24,29,18,29,"length"],[24,35,18,35],[24,37,18,37],[24,39,18,39,"p"],[24,40,18,40],[24,42,18,42],[25,6,19,8],[25,10,19,12,"value"],[25,15,19,17],[25,18,19,20,"data"],[25,22,19,24],[25,23,19,25,"p"],[25,24,19,26],[25,25,19,27],[26,6,20,8],[26,10,20,12,"value"],[26,15,20,17],[26,18,20,20],[26,19,20,21],[26,23,20,25,"value"],[26,28,20,30],[26,32,20,34,"fromBits"],[26,40,20,42],[26,45,20,47],[26,46,20,48],[26,48,20,50],[27,8,21,12],[27,15,21,19],[27,19,21,23],[28,6,22,8],[29,6,23,8,"acc"],[29,9,23,11],[29,12,23,15,"acc"],[29,15,23,18],[29,19,23,22,"fromBits"],[29,27,23,30],[29,30,23,34,"value"],[29,35,23,39],[30,6,24,8,"bits"],[30,10,24,12],[30,14,24,16,"fromBits"],[30,22,24,24],[31,6,25,8],[31,13,25,15,"bits"],[31,17,25,19],[31,21,25,23,"toBits"],[31,27,25,29],[31,29,25,31],[32,8,26,12,"bits"],[32,12,26,16],[32,16,26,20,"toBits"],[32,22,26,26],[33,8,27,12,"ret"],[33,11,27,15],[33,12,27,16,"push"],[33,16,27,20],[33,17,27,22,"acc"],[33,20,27,25],[33,24,27,29,"bits"],[33,28,27,33],[33,31,27,37,"maxv"],[33,35,27,41],[33,36,27,42],[34,6,28,8],[35,4,29,4],[36,4,30,4],[36,8,30,8,"pad"],[36,11,30,11],[36,13,30,13],[37,6,31,8],[37,10,31,12,"bits"],[37,14,31,16],[37,17,31,19],[37,18,31,20],[37,20,31,22],[38,8,32,12,"ret"],[38,11,32,15],[38,12,32,16,"push"],[38,16,32,20],[38,17,32,22,"acc"],[38,20,32,25],[38,24,32,30,"toBits"],[38,30,32,36],[38,33,32,39,"bits"],[38,37,32,44],[38,40,32,48,"maxv"],[38,44,32,52],[38,45,32,53],[39,6,33,8],[40,4,34,4],[40,5,34,5],[40,11,35,9],[40,15,35,13,"bits"],[40,19,35,17],[40,23,35,21,"fromBits"],[40,31,35,29],[40,35,35,34,"acc"],[40,38,35,37],[40,42,35,42,"toBits"],[40,48,35,48],[40,51,35,51,"bits"],[40,55,35,56],[40,58,35,60,"maxv"],[40,62,35,64],[40,64,35,66],[41,6,36,8],[41,13,36,15],[41,17,36,19],[42,4,37,4],[43,4,38,4],[43,11,38,11,"ret"],[43,14,38,14],[44,2,39,0],[44,3,39,1],[45,2,40,0,"exports"],[45,9,40,7],[45,10,40,8,"decodeSegwitAddress"],[45,29,40,27],[45,32,40,30],[45,42,40,40,"hrp"],[45,45,40,43],[45,47,40,45,"addr"],[45,51,40,49],[45,53,40,51],[46,4,41,4],[46,8,41,8,"dec"],[46,11,41,11],[46,14,41,14,"bech32_1"],[46,22,41,22],[46,23,41,23,"default"],[46,30,41,30],[46,31,41,31,"decode"],[46,37,41,37],[46,38,41,38,"addr"],[46,42,41,42],[46,43,41,43],[47,4,42,4],[47,8,42,8,"dec"],[47,11,42,11],[47,16,42,16],[47,20,42,20],[47,24,42,24,"dec"],[47,27,42,27],[47,28,42,28,"hrp"],[47,31,42,31],[47,36,42,36,"hrp"],[47,39,42,39],[47,43,42,43,"dec"],[47,46,42,46],[47,47,42,47,"data"],[47,51,42,51],[47,52,42,52,"length"],[47,58,42,58],[47,61,42,61],[47,62,42,62],[47,66,42,66,"dec"],[47,69,42,69],[47,70,42,70,"data"],[47,74,42,74],[47,75,42,75],[47,76,42,76],[47,77,42,77],[47,80,42,80],[47,82,42,82],[47,84,42,84],[48,6,43,8],[48,13,43,15],[48,17,43,19],[49,4,44,4],[50,4,45,4],[50,8,45,8,"res"],[50,11,45,11],[50,14,45,14,"convertBits"],[50,25,45,25],[50,26,45,26,"Uint8Array"],[50,36,45,36],[50,37,45,37,"from"],[50,41,45,41],[50,42,45,42,"dec"],[50,45,45,45],[50,46,45,46,"data"],[50,50,45,50],[50,51,45,51,"slice"],[50,56,45,56],[50,57,45,57],[50,58,45,58],[50,59,45,59],[50,60,45,60],[50,62,45,62],[50,63,45,63],[50,65,45,65],[50,66,45,66],[50,68,45,68],[50,73,45,73],[50,74,45,74],[51,4,46,4],[51,8,46,8,"res"],[51,11,46,11],[51,16,46,16],[51,20,46,20],[51,24,46,24,"res"],[51,27,46,27],[51,28,46,28,"length"],[51,34,46,34],[51,37,46,37],[51,38,46,38],[51,42,46,42,"res"],[51,45,46,45],[51,46,46,46,"length"],[51,52,46,52],[51,55,46,55],[51,57,46,57],[51,59,46,59],[52,6,47,8],[52,13,47,15],[52,17,47,19],[53,4,48,4],[54,4,49,4],[54,8,49,8,"dec"],[54,11,49,11],[54,12,49,12,"data"],[54,16,49,16],[54,17,49,17],[54,18,49,18],[54,19,49,19],[54,24,49,24],[54,25,49,25],[54,29,49,29,"res"],[54,32,49,32],[54,33,49,33,"length"],[54,39,49,39],[54,44,49,44],[54,46,49,46],[54,50,49,50,"res"],[54,53,49,53],[54,54,49,54,"length"],[54,60,49,60],[54,65,49,65],[54,67,49,67],[54,69,49,69],[55,6,50,8],[55,13,50,15],[55,17,50,19],[56,4,51,4],[57,4,52,4],[57,11,52,11],[58,6,52,13,"version"],[58,13,52,20],[58,15,52,22,"dec"],[58,18,52,25],[58,19,52,26,"data"],[58,23,52,30],[58,24,52,31],[58,25,52,32],[58,26,52,33],[59,6,52,35,"program"],[59,13,52,42],[59,15,52,44,"res"],[60,4,52,48],[60,5,52,49],[61,2,53,0],[61,3,53,1],[62,2,54,0,"exports"],[62,9,54,7],[62,10,54,8,"encodeSegwitAddress"],[62,29,54,27],[62,32,54,30],[62,42,54,40,"hrp"],[62,45,54,43],[62,47,54,45,"version"],[62,54,54,52],[62,56,54,54,"program"],[62,63,54,61],[62,65,54,63],[63,4,55,4],[63,8,55,8,"ret"],[63,11,55,11],[63,14,55,14,"bech32_1"],[63,22,55,22],[63,23,55,23,"default"],[63,30,55,30],[63,31,55,31,"encode"],[63,37,55,37],[63,38,55,38,"hrp"],[63,41,55,41],[63,43,55,43],[63,44,55,44,"version"],[63,51,55,51],[63,52,55,52],[63,53,55,53,"concat"],[63,59,55,59],[63,60,55,60,"convertBits"],[63,71,55,71],[63,72,55,72,"program"],[63,79,55,79],[63,81,55,81],[63,82,55,82],[63,84,55,84],[63,85,55,85],[63,87,55,87],[63,91,55,91],[63,92,55,92],[63,93,55,93],[63,95,55,95,"Bech32Version"],[63,108,55,108],[63,109,55,109,"Origin"],[63,115,55,115],[63,116,55,116],[64,4,56,4],[64,8,56,8,"exports"],[64,15,56,15],[64,16,56,16,"decodeSegwitAddress"],[64,35,56,35],[64,36,56,36,"hrp"],[64,39,56,39],[64,41,56,41,"ret"],[64,44,56,44],[64,45,56,45],[64,50,56,50],[64,54,56,54],[64,56,56,56],[65,6,57,8],[65,13,57,15],[65,17,57,19],[66,4,58,4],[67,4,59,4],[67,11,59,11,"ret"],[67,14,59,14],[68,2,60,0],[68,3,60,1],[69,2,61,0,"exports"],[69,9,61,7],[69,10,61,8,"encodeBc32Data"],[69,24,61,22],[69,27,61,25],[69,37,61,35,"hex"],[69,40,61,38],[69,42,61,40],[70,4,62,4],[70,8,62,8,"data"],[70,12,62,12],[70,15,62,15,"Buffer"],[70,21,62,21],[70,22,62,22,"from"],[70,26,62,26],[70,27,62,27,"hex"],[70,30,62,30],[70,32,62,32],[70,37,62,37],[70,38,62,38],[71,4,63,4],[71,11,63,11,"bech32_1"],[71,19,63,19],[71,20,63,20,"default"],[71,27,63,27],[71,28,63,28,"encode"],[71,34,63,34],[71,35,63,35],[71,39,63,39],[71,41,63,41,"convertBits"],[71,52,63,52],[71,53,63,53,"data"],[71,57,63,57],[71,59,63,59],[71,60,63,60],[71,62,63,62],[71,63,63,63],[71,65,63,65],[71,69,63,69],[71,70,63,70],[71,72,63,72,"Bech32Version"],[71,85,63,85],[71,86,63,86,"bis"],[71,89,63,89],[71,90,63,90],[72,2,64,0],[72,3,64,1],[73,2,65,0,"exports"],[73,9,65,7],[73,10,65,8,"decodeBc32Data"],[73,24,65,22],[73,27,65,25],[73,37,65,35,"data"],[73,41,65,39],[73,43,65,41],[74,4,66,4],[74,8,66,8,"result"],[74,14,66,14],[74,17,66,17,"bech32_1"],[74,25,66,25],[74,26,66,26,"default"],[74,33,66,33],[74,34,66,34,"decode"],[74,40,66,40],[74,41,66,41,"data"],[74,45,66,45],[74,46,66,46],[75,4,67,4],[75,8,67,8,"result"],[75,14,67,14],[75,16,67,16],[76,6,68,8],[76,10,68,12,"res"],[76,13,68,15],[76,16,68,18,"convertBits"],[76,27,68,29],[76,28,68,30,"Buffer"],[76,34,68,36],[76,35,68,37,"from"],[76,39,68,41],[76,40,68,42,"result"],[76,46,68,48],[76,47,68,49,"data"],[76,51,68,53],[76,52,68,54],[76,54,68,56],[76,55,68,57],[76,57,68,59],[76,58,68,60],[76,60,68,62],[76,65,68,67],[76,66,68,68],[77,6,69,8],[77,13,69,15,"Buffer"],[77,19,69,21],[77,20,69,22,"from"],[77,24,69,26],[77,25,69,27,"res"],[77,28,69,30],[77,29,69,31],[77,30,69,32,"toString"],[77,38,69,40],[77,39,69,41],[77,44,69,46],[77,45,69,47],[78,4,70,4],[78,5,70,5],[78,11,71,9],[79,6,72,8],[79,13,72,15],[79,17,72,19],[80,4,73,4],[81,2,74,0],[81,3,74,1],[82,0,74,2],[82,3]],"functionMap":{"names":["<global>","<anonymous>","convertBits","exports.decodeSegwitAddress","exports.encodeSegwitAddress","exports.encodeBc32Data","exports.decodeBc32Data"],"mappings":"AAA;wDCC;CDE;CCK;CDG;kBEC;CF0B;8BGC;CHa;8BIC;CJM;yBKC;CLG;yBMC;CNS"}},"type":"js/module"}]}