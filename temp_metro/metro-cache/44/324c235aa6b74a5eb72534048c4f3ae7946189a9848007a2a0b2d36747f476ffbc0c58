{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getInterfaceLanguage = getInterfaceLanguage;\n  exports.getBestMatchingLanguage = getBestMatchingLanguage;\n  exports.validateTranslationKeys = validateTranslationKeys;\n  exports.randomPseudo = randomPseudo;\n  /**\n   * Return the current interface language\n   * If the navigator object is defined it returns the current navigator language\n   * otherwise it falls back to 'en-US'\n   * Works in browsers\n   */\n  function getInterfaceLanguage() {\n    var defaultLang = 'en-US';\n    if (typeof navigator === 'undefined') {\n      return defaultLang;\n    }\n    var nav = navigator; // eslint-disable-line no-undef\n    if (nav) {\n      if (nav.language) {\n        return nav.language;\n      }\n      if (!!nav.languages && !!nav.languages[0]) {\n        return nav.languages[0];\n      }\n      if (nav.userLanguage) {\n        return nav.userLanguage;\n      }\n      if (nav.browserLanguage) {\n        return nav.browserLanguage;\n      }\n    }\n    return defaultLang;\n  }\n\n  /**\n   * Get the best match based on the language passed and the available languages\n   * @param {*} language\n   * @param {*} props\n   */\n  function getBestMatchingLanguage(language, props) {\n    // If an object with the passed language key exists return it\n    if (props[language]) return language;\n\n    // if the string is composed try to find a match with only the first language identifiers (en-US --> en)\n    var idx = language.indexOf('-');\n    var auxLang = idx >= 0 ? language.substring(0, idx) : language;\n    return props[auxLang] ? auxLang : Object.keys(props)[0];\n  }\n\n  /**\n   * Check that the keys used in the provided strings object don't collide with existing property\n   * already defined in the LocalizedStrings object\n   * @param {*} translationKeys\n   */\n  function validateTranslationKeys(translationKeys) {\n    var reservedNames = ['_interfaceLanguage', '_language', '_defaultLanguage', '_defaultLanguageFirstLevelKeys', '_props'];\n    translationKeys.forEach(function (key) {\n      if (reservedNames.indexOf(key) !== -1) {\n        throw new Error(key + ' cannot be used as a key. It is a reserved word.');\n      }\n    });\n  }\n\n  /**\n   * Get a random pseudo string back after specified a length\n   * @param {Number} len - How many characters to get back\n   */\n  function randomPseudo(len) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < len; i += 1) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  }\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"getInterfaceLanguage"],[7,30,6,28],[7,33,6,31,"getInterfaceLanguage"],[7,53,6,51],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"getBestMatchingLanguage"],[8,33,7,31],[8,36,7,34,"getBestMatchingLanguage"],[8,59,7,57],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"validateTranslationKeys"],[9,33,8,31],[9,36,8,34,"validateTranslationKeys"],[9,59,8,57],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"randomPseudo"],[10,22,9,20],[10,25,9,23,"randomPseudo"],[10,37,9,35],[11,2,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,2,16,0],[17,11,16,9,"getInterfaceLanguage"],[17,31,16,29,"getInterfaceLanguage"],[17,32,16,29],[17,34,16,32],[18,4,17,2],[18,8,17,6,"defaultLang"],[18,19,17,17],[18,22,17,20],[18,29,17,27],[19,4,18,2],[19,8,18,6],[19,15,18,13,"navigator"],[19,24,18,22],[19,29,18,27],[19,40,18,38],[19,42,18,40],[20,6,19,4],[20,13,19,11,"defaultLang"],[20,24,19,22],[21,4,20,2],[22,4,21,2],[22,8,21,6,"nav"],[22,11,21,9],[22,14,21,12,"navigator"],[22,23,21,21],[22,24,21,22],[22,25,21,23],[23,4,22,2],[23,8,22,6,"nav"],[23,11,22,9],[23,13,22,11],[24,6,23,4],[24,10,23,8,"nav"],[24,13,23,11],[24,14,23,12,"language"],[24,22,23,20],[24,24,23,22],[25,8,24,6],[25,15,24,13,"nav"],[25,18,24,16],[25,19,24,17,"language"],[25,27,24,25],[26,6,25,4],[27,6,26,4],[27,10,26,8],[27,11,26,9],[27,12,26,10,"nav"],[27,15,26,13],[27,16,26,14,"languages"],[27,25,26,23],[27,29,26,27],[27,30,26,28],[27,31,26,29,"nav"],[27,34,26,32],[27,35,26,33,"languages"],[27,44,26,42],[27,45,26,43],[27,46,26,44],[27,47,26,45],[27,49,26,47],[28,8,27,6],[28,15,27,13,"nav"],[28,18,27,16],[28,19,27,17,"languages"],[28,28,27,26],[28,29,27,27],[28,30,27,28],[28,31,27,29],[29,6,28,4],[30,6,29,4],[30,10,29,8,"nav"],[30,13,29,11],[30,14,29,12,"userLanguage"],[30,26,29,24],[30,28,29,26],[31,8,30,6],[31,15,30,13,"nav"],[31,18,30,16],[31,19,30,17,"userLanguage"],[31,31,30,29],[32,6,31,4],[33,6,32,4],[33,10,32,8,"nav"],[33,13,32,11],[33,14,32,12,"browserLanguage"],[33,29,32,27],[33,31,32,29],[34,8,33,6],[34,15,33,13,"nav"],[34,18,33,16],[34,19,33,17,"browserLanguage"],[34,34,33,32],[35,6,34,4],[36,4,35,2],[37,4,36,2],[37,11,36,9,"defaultLang"],[37,22,36,20],[38,2,37,0],[40,2,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,2,44,0],[45,11,44,9,"getBestMatchingLanguage"],[45,34,44,32,"getBestMatchingLanguage"],[45,35,44,33,"language"],[45,43,44,41],[45,45,44,43,"props"],[45,50,44,48],[45,52,44,50],[46,4,45,2],[47,4,46,2],[47,8,46,6,"props"],[47,13,46,11],[47,14,46,12,"language"],[47,22,46,20],[47,23,46,21],[47,25,46,23],[47,32,46,30,"language"],[47,40,46,38],[49,4,48,2],[50,4,49,2],[50,8,49,6,"idx"],[50,11,49,9],[50,14,49,12,"language"],[50,22,49,20],[50,23,49,21,"indexOf"],[50,30,49,28],[50,31,49,29],[50,34,49,32],[50,35,49,33],[51,4,50,2],[51,8,50,6,"auxLang"],[51,15,50,13],[51,18,50,16,"idx"],[51,21,50,19],[51,25,50,23],[51,26,50,24],[51,29,50,27,"language"],[51,37,50,35],[51,38,50,36,"substring"],[51,47,50,45],[51,48,50,46],[51,49,50,47],[51,51,50,49,"idx"],[51,54,50,52],[51,55,50,53],[51,58,50,56,"language"],[51,66,50,64],[52,4,51,2],[52,11,51,9,"props"],[52,16,51,14],[52,17,51,15,"auxLang"],[52,24,51,22],[52,25,51,23],[52,28,51,26,"auxLang"],[52,35,51,33],[52,38,51,36,"Object"],[52,44,51,42],[52,45,51,43,"keys"],[52,49,51,47],[52,50,51,48,"props"],[52,55,51,53],[52,56,51,54],[52,57,51,55],[52,58,51,56],[52,59,51,57],[53,2,52,0],[55,2,54,0],[56,0,55,0],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,2,59,0],[60,11,59,9,"validateTranslationKeys"],[60,34,59,32,"validateTranslationKeys"],[60,35,59,33,"translationKeys"],[60,50,59,48],[60,52,59,50],[61,4,60,2],[61,8,60,6,"reservedNames"],[61,21,60,19],[61,24,60,22],[61,25,60,23],[61,45,60,43],[61,47,60,45],[61,58,60,56],[61,60,60,58],[61,78,60,76],[61,80,60,78],[61,112,60,110],[61,114,60,112],[61,122,60,120],[61,123,60,121],[62,4,61,2,"translationKeys"],[62,19,61,17],[62,20,61,18,"forEach"],[62,27,61,25],[62,28,61,26],[62,38,61,36,"key"],[62,41,61,39],[62,43,61,41],[63,6,62,4],[63,10,62,8,"reservedNames"],[63,23,62,21],[63,24,62,22,"indexOf"],[63,31,62,29],[63,32,62,30,"key"],[63,35,62,33],[63,36,62,34],[63,41,62,39],[63,42,62,40],[63,43,62,41],[63,45,62,43],[64,8,63,6],[64,14,63,12],[64,18,63,16,"Error"],[64,23,63,21],[64,24,63,22,"key"],[64,27,63,25],[64,30,63,28],[64,80,63,78],[64,81,63,79],[65,6,64,4],[66,4,65,2],[66,5,65,3],[66,6,65,4],[67,2,66,0],[69,2,68,0],[70,0,69,0],[71,0,70,0],[72,0,71,0],[73,2,72,0],[73,11,72,9,"randomPseudo"],[73,23,72,21,"randomPseudo"],[73,24,72,22,"len"],[73,27,72,25],[73,29,72,27],[74,4,73,2],[74,8,73,6,"text"],[74,12,73,10],[74,15,73,13],[74,17,73,15],[75,4,74,2],[75,8,74,6,"possible"],[75,16,74,14],[75,19,74,17],[75,83,74,81],[76,4,75,2],[76,9,75,7],[76,13,75,11,"i"],[76,14,75,12],[76,17,75,15],[76,18,75,16],[76,20,75,18,"i"],[76,21,75,19],[76,24,75,22,"len"],[76,27,75,25],[76,29,75,27,"i"],[76,30,75,28],[76,34,75,32],[76,35,75,33],[76,37,75,35],[77,6,76,4,"text"],[77,10,76,8],[77,14,76,12,"possible"],[77,22,76,20],[77,23,76,21,"charAt"],[77,29,76,27],[77,30,76,28,"Math"],[77,34,76,32],[77,35,76,33,"floor"],[77,40,76,38],[77,41,76,39,"Math"],[77,45,76,43],[77,46,76,44,"random"],[77,52,76,50],[77,53,76,51],[77,54,76,52],[77,57,76,55,"possible"],[77,65,76,63],[77,66,76,64,"length"],[77,72,76,70],[77,73,76,71],[77,74,76,72],[78,4,77,2],[79,4,77,3],[79,11,77,10,"text"],[79,15,77,14],[80,2,78,0],[81,0,78,1],[81,3]],"functionMap":{"names":["<global>","getInterfaceLanguage","getBestMatchingLanguage","validateTranslationKeys","translationKeys.forEach$argument_0","randomPseudo"],"mappings":"AAA;ACe;CDqB;AEO;CFQ;AGO;0BCE;GDI;CHC;AKM"}},"type":"js/module"}]}