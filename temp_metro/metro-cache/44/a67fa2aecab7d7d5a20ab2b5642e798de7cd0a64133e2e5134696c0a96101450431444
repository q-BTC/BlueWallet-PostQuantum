{"dependencies":[{"name":"call-bound","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":16,"index":31},"end":{"line":3,"column":37,"index":52}}],"key":"xVV7LLeUILRahu/c6/GJ3JZjpdc="}},{"name":"is-regex","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":68},"end":{"line":4,"column":33,"index":87}}],"key":"L3k2lf/VKvL7PWw3fXbAiqADQQ4="}},{"name":"es-errors/type","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":17,"index":155},"end":{"line":7,"column":42,"index":180}}],"key":"JK6ql1q9XC7Vc2zUHS8FnD1mVEg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var $exec = _$$_REQUIRE(_dependencyMap[0], \"call-bound\")('RegExp.prototype.exec');\n  /** @type {import('.')} */\n  module.exports = function regexTester(regex) {\n    if (!_$$_REQUIRE(_dependencyMap[1], \"is-regex\")(regex)) {\n      throw new (_$$_REQUIRE(_dependencyMap[2], \"es-errors/type\"))('`regex` must be a RegExp');\n    }\n    return function test(s) {\n      return $exec(regex, s) !== null;\n    };\n  };\n});","lineCount":14,"map":[[2,2,1,0],[2,14,1,12],[4,2,6,0],[4,6,6,4,"$exec"],[4,11,6,9],[4,14,6,12,"_$$_REQUIRE"],[4,25,6,12],[4,26,6,12,"_dependencyMap"],[4,40,6,12],[4,59,6,22],[4,82,6,45],[4,83,6,46],[5,2,9,0],[6,2,10,0,"module"],[6,8,10,6],[6,9,10,7,"exports"],[6,16,10,14],[6,19,10,17],[6,28,10,26,"regexTester"],[6,39,10,37,"regexTester"],[6,40,10,38,"regex"],[6,45,10,43],[6,47,10,45],[7,4,11,1],[7,8,11,5],[7,9,11,6,"_$$_REQUIRE"],[7,20,11,6],[7,21,11,6,"_dependencyMap"],[7,35,11,6],[7,52,11,14,"regex"],[7,57,11,19],[7,58,11,20],[7,60,11,22],[8,6,12,2],[8,12,12,8],[8,17,12,8,"_$$_REQUIRE"],[8,28,12,8],[8,29,12,8,"_dependencyMap"],[8,43,12,8],[8,67,12,23],[8,93,12,49],[8,94,12,50],[9,4,13,1],[10,4,14,1],[10,11,14,8],[10,20,14,17,"test"],[10,24,14,21,"test"],[10,25,14,22,"s"],[10,26,14,23],[10,28,14,25],[11,6,15,2],[11,13,15,9,"$exec"],[11,18,15,14],[11,19,15,15,"regex"],[11,24,15,20],[11,26,15,22,"s"],[11,27,15,23],[11,28,15,24],[11,33,15,29],[11,37,15,33],[12,4,16,1],[12,5,16,2],[13,2,17,0],[13,3,17,1],[14,0,17,2],[14,3]],"functionMap":{"names":["<global>","regexTester","test"],"mappings":"AAA;iBCS;QCI;EDE;CDC"}},"type":"js/module"}]}