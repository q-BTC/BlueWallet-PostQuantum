{"dependencies":[{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":170},"end":{"line":5,"column":36,"index":189}},{"start":{"line":5,"column":17,"index":170},"end":{"line":5,"column":36,"index":189}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}},{"name":"./bip66","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":133},"end":{"line":4,"column":32,"index":151}},{"start":{"line":4,"column":14,"index":133},"end":{"line":4,"column":32,"index":151}}],"key":"AbcU9EdwrJAnkL2yLNTW6XVCYlA="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":0,"index":225},"end":{"line":7,"column":28,"index":253}},{"start":{"line":6,"column":14,"index":205},"end":{"line":6,"column":32,"index":223}},{"start":{"line":6,"column":14,"index":205},"end":{"line":6,"column":32,"index":223}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.encode = exports.decode = void 0;\n  var ZERO = Buffer.alloc(1, 0);\n  /**\n   * Converts a buffer to a DER-encoded buffer.\n   * @param x - The buffer to be converted.\n   * @returns The DER-encoded buffer.\n   */\n  function toDER(x) {\n    var i = 0;\n    while (x[i] === 0) ++i;\n    if (i === x.length) return ZERO;\n    x = x.slice(i);\n    if (x[0] & 0x80) return Buffer.concat([ZERO, x], 1 + x.length);\n    return x;\n  }\n  /**\n   * Converts a DER-encoded signature to a buffer.\n   * If the first byte of the input buffer is 0x00, it is skipped.\n   * The resulting buffer is 32 bytes long, filled with zeros if necessary.\n   * @param x - The DER-encoded signature.\n   * @returns The converted buffer.\n   */\n  function fromDER(x) {\n    if (x[0] === 0x00) x = x.slice(1);\n    var buffer = Buffer.alloc(32, 0);\n    var bstart = Math.max(0, 32 - x.length);\n    x.copy(buffer, bstart);\n    return buffer;\n  }\n  // BIP62: 1 byte hashType flag (only 0x01, 0x02, 0x03, 0x81, 0x82 and 0x83 are allowed)\n  /**\n   * Decodes a buffer into a ScriptSignature object.\n   * @param buffer - The buffer to decode.\n   * @returns The decoded ScriptSignature object.\n   * @throws Error if the hashType is invalid.\n   */\n  function decode(buffer) {\n    var hashType = buffer.readUInt8(buffer.length - 1);\n    if (!(0, _$$_REQUIRE(_dependencyMap[0], \"./script\").isDefinedHashType)(hashType)) {\n      throw new Error('Invalid hashType ' + hashType);\n    }\n    var decoded = _$$_REQUIRE(_dependencyMap[1], \"./bip66\").decode(buffer.slice(0, -1));\n    var r = fromDER(decoded.r);\n    var s = fromDER(decoded.s);\n    var signature = Buffer.concat([r, s], 64);\n    return {\n      signature: signature,\n      hashType: hashType\n    };\n  }\n  exports.decode = decode;\n  /**\n   * Encodes a signature and hash type into a buffer.\n   * @param signature - The signature to encode.\n   * @param hashType - The hash type to encode.\n   * @returns The encoded buffer.\n   * @throws Error if the hashType is invalid.\n   */\n  function encode(signature, hashType) {\n    _$$_REQUIRE(_dependencyMap[2], \"./types\").typeforce({\n      signature: _$$_REQUIRE(_dependencyMap[2], \"./types\").BufferN(64),\n      hashType: _$$_REQUIRE(_dependencyMap[2], \"./types\").UInt8\n    }, {\n      signature: signature,\n      hashType: hashType\n    });\n    if (!(0, _$$_REQUIRE(_dependencyMap[0], \"./script\").isDefinedHashType)(hashType)) {\n      throw new Error('Invalid hashType ' + hashType);\n    }\n    var hashTypeBuffer = Buffer.allocUnsafe(1);\n    hashTypeBuffer.writeUInt8(hashType, 0);\n    var r = toDER(signature.slice(0, 32));\n    var s = toDER(signature.slice(32, 64));\n    return Buffer.concat([_$$_REQUIRE(_dependencyMap[1], \"./bip66\").encode(r, s), hashTypeBuffer]);\n  }\n  exports.encode = encode;\n});","lineCount":83,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"encode"],[7,16,3,14],[7,19,3,17,"exports"],[7,26,3,24],[7,27,3,25,"decode"],[7,33,3,31],[7,36,3,34],[7,41,3,39],[7,42,3,40],[8,2,8,0],[8,6,8,6,"ZERO"],[8,10,8,10],[8,13,8,13,"Buffer"],[8,19,8,19],[8,20,8,20,"alloc"],[8,25,8,25],[8,26,8,26],[8,27,8,27],[8,29,8,29],[8,30,8,30],[8,31,8,31],[9,2,9,0],[10,0,10,0],[11,0,11,0],[12,0,12,0],[13,0,13,0],[14,2,14,0],[14,11,14,9,"toDER"],[14,16,14,14,"toDER"],[14,17,14,15,"x"],[14,18,14,16],[14,20,14,18],[15,4,15,2],[15,8,15,6,"i"],[15,9,15,7],[15,12,15,10],[15,13,15,11],[16,4,16,2],[16,11,16,9,"x"],[16,12,16,10],[16,13,16,11,"i"],[16,14,16,12],[16,15,16,13],[16,20,16,18],[16,21,16,19],[16,23,16,21],[16,25,16,23,"i"],[16,26,16,24],[17,4,17,2],[17,8,17,6,"i"],[17,9,17,7],[17,14,17,12,"x"],[17,15,17,13],[17,16,17,14,"length"],[17,22,17,20],[17,24,17,22],[17,31,17,29,"ZERO"],[17,35,17,33],[18,4,18,2,"x"],[18,5,18,3],[18,8,18,6,"x"],[18,9,18,7],[18,10,18,8,"slice"],[18,15,18,13],[18,16,18,14,"i"],[18,17,18,15],[18,18,18,16],[19,4,19,2],[19,8,19,6,"x"],[19,9,19,7],[19,10,19,8],[19,11,19,9],[19,12,19,10],[19,15,19,13],[19,19,19,17],[19,21,19,19],[19,28,19,26,"Buffer"],[19,34,19,32],[19,35,19,33,"concat"],[19,41,19,39],[19,42,19,40],[19,43,19,41,"ZERO"],[19,47,19,45],[19,49,19,47,"x"],[19,50,19,48],[19,51,19,49],[19,53,19,51],[19,54,19,52],[19,57,19,55,"x"],[19,58,19,56],[19,59,19,57,"length"],[19,65,19,63],[19,66,19,64],[20,4,20,2],[20,11,20,9,"x"],[20,12,20,10],[21,2,21,0],[22,2,22,0],[23,0,23,0],[24,0,24,0],[25,0,25,0],[26,0,26,0],[27,0,27,0],[28,0,28,0],[29,2,29,0],[29,11,29,9,"fromDER"],[29,18,29,16,"fromDER"],[29,19,29,17,"x"],[29,20,29,18],[29,22,29,20],[30,4,30,2],[30,8,30,6,"x"],[30,9,30,7],[30,10,30,8],[30,11,30,9],[30,12,30,10],[30,17,30,15],[30,21,30,19],[30,23,30,21,"x"],[30,24,30,22],[30,27,30,25,"x"],[30,28,30,26],[30,29,30,27,"slice"],[30,34,30,32],[30,35,30,33],[30,36,30,34],[30,37,30,35],[31,4,31,2],[31,8,31,8,"buffer"],[31,14,31,14],[31,17,31,17,"Buffer"],[31,23,31,23],[31,24,31,24,"alloc"],[31,29,31,29],[31,30,31,30],[31,32,31,32],[31,34,31,34],[31,35,31,35],[31,36,31,36],[32,4,32,2],[32,8,32,8,"bstart"],[32,14,32,14],[32,17,32,17,"Math"],[32,21,32,21],[32,22,32,22,"max"],[32,25,32,25],[32,26,32,26],[32,27,32,27],[32,29,32,29],[32,31,32,31],[32,34,32,34,"x"],[32,35,32,35],[32,36,32,36,"length"],[32,42,32,42],[32,43,32,43],[33,4,33,2,"x"],[33,5,33,3],[33,6,33,4,"copy"],[33,10,33,8],[33,11,33,9,"buffer"],[33,17,33,15],[33,19,33,17,"bstart"],[33,25,33,23],[33,26,33,24],[34,4,34,2],[34,11,34,9,"buffer"],[34,17,34,15],[35,2,35,0],[36,2,36,0],[37,2,37,0],[38,0,38,0],[39,0,39,0],[40,0,40,0],[41,0,41,0],[42,0,42,0],[43,2,43,0],[43,11,43,9,"decode"],[43,17,43,15,"decode"],[43,18,43,16,"buffer"],[43,24,43,22],[43,26,43,24],[44,4,44,2],[44,8,44,8,"hashType"],[44,16,44,16],[44,19,44,19,"buffer"],[44,25,44,25],[44,26,44,26,"readUInt8"],[44,35,44,35],[44,36,44,36,"buffer"],[44,42,44,42],[44,43,44,43,"length"],[44,49,44,49],[44,52,44,52],[44,53,44,53],[44,54,44,54],[45,4,45,2],[45,8,45,6],[45,9,45,7],[45,10,45,8],[45,11,45,9],[45,13,45,11,"_$$_REQUIRE"],[45,24,45,11],[45,25,45,11,"_dependencyMap"],[45,39,45,11],[45,56,45,20,"isDefinedHashType"],[45,73,45,37],[45,75,45,39,"hashType"],[45,83,45,47],[45,84,45,48],[45,86,45,50],[46,6,46,4],[46,12,46,10],[46,16,46,14,"Error"],[46,21,46,19],[46,22,46,20],[46,41,46,39],[46,44,46,42,"hashType"],[46,52,46,50],[46,53,46,51],[47,4,47,2],[48,4,48,2],[48,8,48,8,"decoded"],[48,15,48,15],[48,18,48,18,"_$$_REQUIRE"],[48,29,48,18],[48,30,48,18,"_dependencyMap"],[48,44,48,18],[48,60,48,24,"decode"],[48,66,48,30],[48,67,48,31,"buffer"],[48,73,48,37],[48,74,48,38,"slice"],[48,79,48,43],[48,80,48,44],[48,81,48,45],[48,83,48,47],[48,84,48,48],[48,85,48,49],[48,86,48,50],[48,87,48,51],[49,4,49,2],[49,8,49,8,"r"],[49,9,49,9],[49,12,49,12,"fromDER"],[49,19,49,19],[49,20,49,20,"decoded"],[49,27,49,27],[49,28,49,28,"r"],[49,29,49,29],[49,30,49,30],[50,4,50,2],[50,8,50,8,"s"],[50,9,50,9],[50,12,50,12,"fromDER"],[50,19,50,19],[50,20,50,20,"decoded"],[50,27,50,27],[50,28,50,28,"s"],[50,29,50,29],[50,30,50,30],[51,4,51,2],[51,8,51,8,"signature"],[51,17,51,17],[51,20,51,20,"Buffer"],[51,26,51,26],[51,27,51,27,"concat"],[51,33,51,33],[51,34,51,34],[51,35,51,35,"r"],[51,36,51,36],[51,38,51,38,"s"],[51,39,51,39],[51,40,51,40],[51,42,51,42],[51,44,51,44],[51,45,51,45],[52,4,52,2],[52,11,52,9],[53,6,52,11,"signature"],[53,15,52,20],[53,17,52,11,"signature"],[53,26,52,20],[54,6,52,22,"hashType"],[54,14,52,30],[54,16,52,22,"hashType"],[55,4,52,31],[55,5,52,32],[56,2,53,0],[57,2,54,0,"exports"],[57,9,54,7],[57,10,54,8,"decode"],[57,16,54,14],[57,19,54,17,"decode"],[57,25,54,23],[58,2,55,0],[59,0,56,0],[60,0,57,0],[61,0,58,0],[62,0,59,0],[63,0,60,0],[64,0,61,0],[65,2,62,0],[65,11,62,9,"encode"],[65,17,62,15,"encode"],[65,18,62,16,"signature"],[65,27,62,25],[65,29,62,27,"hashType"],[65,37,62,35],[65,39,62,37],[66,4,63,2,"_$$_REQUIRE"],[66,15,63,2],[66,16,63,2,"_dependencyMap"],[66,30,63,2],[66,46,63,2,"typeforce"],[66,55,63,2],[66,56,64,4],[67,6,65,6,"signature"],[67,15,65,15],[67,17,65,17,"_$$_REQUIRE"],[67,28,65,17],[67,29,65,17,"_dependencyMap"],[67,43,65,17],[67,59,65,23,"BufferN"],[67,66,65,30],[67,67,65,31],[67,69,65,33],[67,70,65,34],[68,6,66,6,"hashType"],[68,14,66,14],[68,16,66,16,"_$$_REQUIRE"],[68,27,66,16],[68,28,66,16,"_dependencyMap"],[68,42,66,16],[68,58,66,22,"UInt8"],[69,4,67,4],[69,5,67,5],[69,7,68,4],[70,6,68,6,"signature"],[70,15,68,15],[70,17,68,6,"signature"],[70,26,68,15],[71,6,68,17,"hashType"],[71,14,68,25],[71,16,68,17,"hashType"],[72,4,68,26],[72,5,69,2],[72,6,69,3],[73,4,70,2],[73,8,70,6],[73,9,70,7],[73,10,70,8],[73,11,70,9],[73,13,70,11,"_$$_REQUIRE"],[73,24,70,11],[73,25,70,11,"_dependencyMap"],[73,39,70,11],[73,56,70,20,"isDefinedHashType"],[73,73,70,37],[73,75,70,39,"hashType"],[73,83,70,47],[73,84,70,48],[73,86,70,50],[74,6,71,4],[74,12,71,10],[74,16,71,14,"Error"],[74,21,71,19],[74,22,71,20],[74,41,71,39],[74,44,71,42,"hashType"],[74,52,71,50],[74,53,71,51],[75,4,72,2],[76,4,73,2],[76,8,73,8,"hashTypeBuffer"],[76,22,73,22],[76,25,73,25,"Buffer"],[76,31,73,31],[76,32,73,32,"allocUnsafe"],[76,43,73,43],[76,44,73,44],[76,45,73,45],[76,46,73,46],[77,4,74,2,"hashTypeBuffer"],[77,18,74,16],[77,19,74,17,"writeUInt8"],[77,29,74,27],[77,30,74,28,"hashType"],[77,38,74,36],[77,40,74,38],[77,41,74,39],[77,42,74,40],[78,4,75,2],[78,8,75,8,"r"],[78,9,75,9],[78,12,75,12,"toDER"],[78,17,75,17],[78,18,75,18,"signature"],[78,27,75,27],[78,28,75,28,"slice"],[78,33,75,33],[78,34,75,34],[78,35,75,35],[78,37,75,37],[78,39,75,39],[78,40,75,40],[78,41,75,41],[79,4,76,2],[79,8,76,8,"s"],[79,9,76,9],[79,12,76,12,"toDER"],[79,17,76,17],[79,18,76,18,"signature"],[79,27,76,27],[79,28,76,28,"slice"],[79,33,76,33],[79,34,76,34],[79,36,76,36],[79,38,76,38],[79,40,76,40],[79,41,76,41],[79,42,76,42],[80,4,77,2],[80,11,77,9,"Buffer"],[80,17,77,15],[80,18,77,16,"concat"],[80,24,77,22],[80,25,77,23],[80,26,77,24,"_$$_REQUIRE"],[80,37,77,24],[80,38,77,24,"_dependencyMap"],[80,52,77,24],[80,68,77,30,"encode"],[80,74,77,36],[80,75,77,37,"r"],[80,76,77,38],[80,78,77,40,"s"],[80,79,77,41],[80,80,77,42],[80,82,77,44,"hashTypeBuffer"],[80,96,77,58],[80,97,77,59],[80,98,77,60],[81,2,78,0],[82,2,79,0,"exports"],[82,9,79,7],[82,10,79,8,"encode"],[82,16,79,14],[82,19,79,17,"encode"],[82,25,79,23],[83,0,79,24],[83,3]],"functionMap":{"names":["<global>","toDER","fromDER","decode","encode"],"mappings":"AAA;ACa;CDO;AEQ;CFM;AGQ;CHU;AIS;CJgB"}},"type":"js/module"}]}