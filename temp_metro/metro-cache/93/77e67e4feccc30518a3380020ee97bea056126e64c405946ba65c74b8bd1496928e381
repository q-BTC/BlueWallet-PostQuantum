{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.parseHermesStack = parseHermesStack;\n  /**\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  // Capturing groups:\n  // 1. function name\n  // 2. is this a native stack frame?\n  // 3. is this a bytecode address or a source location?\n  // 4. source URL (filename)\n  // 5. line number (1 based)\n  // 6. column number (1 based) or virtual offset (0 based)\n  var RE_FRAME = /^ {0,4}at (.+?)(?: \\((native)\\)?| \\((address at )?(.*?):(\\d+):(\\d+)\\))$/;\n\n  // Capturing groups:\n  // 1. count of skipped frames\n  var RE_SKIPPED = /^ {0,4}... skipping (\\d) frames$/;\n  function parseLine(line) {\n    var asFrame = line.match(RE_FRAME);\n    if (asFrame) {\n      return {\n        type: 'FRAME',\n        functionName: asFrame[1],\n        location: asFrame[2] === 'native' ? {\n          type: 'NATIVE'\n        } : asFrame[3] === 'address at ' ? {\n          type: 'BYTECODE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          virtualOffset0Based: Number.parseInt(asFrame[6], 10)\n        } : {\n          type: 'SOURCE',\n          sourceUrl: asFrame[4],\n          line1Based: Number.parseInt(asFrame[5], 10),\n          column1Based: Number.parseInt(asFrame[6], 10)\n        }\n      };\n    }\n    var asSkipped = line.match(RE_SKIPPED);\n    if (asSkipped) {\n      return {\n        type: 'SKIPPED',\n        count: Number.parseInt(asSkipped[1], 10)\n      };\n    }\n    return undefined;\n  }\n  function parseHermesStack(stack) {\n    var lines = stack.split(/\\n/);\n    var entries = [];\n    var lastMessageLine = -1;\n    for (var i = 0; i < lines.length; ++i) {\n      var line = lines[i];\n      if (!line) {\n        continue;\n      }\n      var entry = parseLine(line);\n      if (entry) {\n        entries.push(entry);\n        continue;\n      }\n      // No match - we're still in the message\n      lastMessageLine = i;\n      entries = [];\n    }\n    var message = lines.slice(0, lastMessageLine + 1).join('\\n');\n    return {\n      message: message,\n      entries: entries\n    };\n  }\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"Object"],[4,8,3,6],[4,9,3,7,"defineProperty"],[4,23,3,21],[4,24,3,22,"exports"],[4,31,3,29],[4,33,3,31],[4,45,3,43],[4,47,3,45],[5,4,4,2,"value"],[5,9,4,7],[5,11,4,9],[6,2,5,0],[6,3,5,1],[6,4,5,2],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"parseHermesStack"],[7,26,6,24],[7,29,6,27,"parseHermesStack"],[7,45,6,43],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[15,2,14,0],[16,2,15,0],[17,2,16,0],[18,2,17,0],[19,2,18,0],[20,2,19,0],[21,2,20,0],[22,2,21,0],[22,6,21,6,"RE_FRAME"],[22,14,21,14],[22,17,21,17],[22,90,21,90],[24,2,23,0],[25,2,24,0],[26,2,25,0],[26,6,25,6,"RE_SKIPPED"],[26,16,25,16],[26,19,25,19],[26,53,25,53],[27,2,26,0],[27,11,26,9,"parseLine"],[27,20,26,18,"parseLine"],[27,21,26,19,"line"],[27,25,26,23],[27,27,26,25],[28,4,27,2],[28,8,27,8,"asFrame"],[28,15,27,15],[28,18,27,18,"line"],[28,22,27,22],[28,23,27,23,"match"],[28,28,27,28],[28,29,27,29,"RE_FRAME"],[28,37,27,37],[28,38,27,38],[29,4,28,2],[29,8,28,6,"asFrame"],[29,15,28,13],[29,17,28,15],[30,6,29,4],[30,13,29,11],[31,8,30,6,"type"],[31,12,30,10],[31,14,30,12],[31,21,30,19],[32,8,31,6,"functionName"],[32,20,31,18],[32,22,31,20,"asFrame"],[32,29,31,27],[32,30,31,28],[32,31,31,29],[32,32,31,30],[33,8,32,6,"location"],[33,16,32,14],[33,18,32,16,"asFrame"],[33,25,32,23],[33,26,32,24],[33,27,32,25],[33,28,32,26],[33,33,32,31],[33,41,32,39],[33,44,32,42],[34,10,33,8,"type"],[34,14,33,12],[34,16,33,14],[35,8,34,6],[35,9,34,7],[35,12,34,10,"asFrame"],[35,19,34,17],[35,20,34,18],[35,21,34,19],[35,22,34,20],[35,27,34,25],[35,40,34,38],[35,43,34,41],[36,10,35,8,"type"],[36,14,35,12],[36,16,35,14],[36,26,35,24],[37,10,36,8,"sourceUrl"],[37,19,36,17],[37,21,36,19,"asFrame"],[37,28,36,26],[37,29,36,27],[37,30,36,28],[37,31,36,29],[38,10,37,8,"line1Based"],[38,20,37,18],[38,22,37,20,"Number"],[38,28,37,26],[38,29,37,27,"parseInt"],[38,37,37,35],[38,38,37,36,"asFrame"],[38,45,37,43],[38,46,37,44],[38,47,37,45],[38,48,37,46],[38,50,37,48],[38,52,37,50],[38,53,37,51],[39,10,38,8,"virtualOffset0Based"],[39,29,38,27],[39,31,38,29,"Number"],[39,37,38,35],[39,38,38,36,"parseInt"],[39,46,38,44],[39,47,38,45,"asFrame"],[39,54,38,52],[39,55,38,53],[39,56,38,54],[39,57,38,55],[39,59,38,57],[39,61,38,59],[40,8,39,6],[40,9,39,7],[40,12,39,10],[41,10,40,8,"type"],[41,14,40,12],[41,16,40,14],[41,24,40,22],[42,10,41,8,"sourceUrl"],[42,19,41,17],[42,21,41,19,"asFrame"],[42,28,41,26],[42,29,41,27],[42,30,41,28],[42,31,41,29],[43,10,42,8,"line1Based"],[43,20,42,18],[43,22,42,20,"Number"],[43,28,42,26],[43,29,42,27,"parseInt"],[43,37,42,35],[43,38,42,36,"asFrame"],[43,45,42,43],[43,46,42,44],[43,47,42,45],[43,48,42,46],[43,50,42,48],[43,52,42,50],[43,53,42,51],[44,10,43,8,"column1Based"],[44,22,43,20],[44,24,43,22,"Number"],[44,30,43,28],[44,31,43,29,"parseInt"],[44,39,43,37],[44,40,43,38,"asFrame"],[44,47,43,45],[44,48,43,46],[44,49,43,47],[44,50,43,48],[44,52,43,50],[44,54,43,52],[45,8,44,6],[46,6,45,4],[46,7,45,5],[47,4,46,2],[48,4,47,2],[48,8,47,8,"asSkipped"],[48,17,47,17],[48,20,47,20,"line"],[48,24,47,24],[48,25,47,25,"match"],[48,30,47,30],[48,31,47,31,"RE_SKIPPED"],[48,41,47,41],[48,42,47,42],[49,4,48,2],[49,8,48,6,"asSkipped"],[49,17,48,15],[49,19,48,17],[50,6,49,4],[50,13,49,11],[51,8,50,6,"type"],[51,12,50,10],[51,14,50,12],[51,23,50,21],[52,8,51,6,"count"],[52,13,51,11],[52,15,51,13,"Number"],[52,21,51,19],[52,22,51,20,"parseInt"],[52,30,51,28],[52,31,51,29,"asSkipped"],[52,40,51,38],[52,41,51,39],[52,42,51,40],[52,43,51,41],[52,45,51,43],[52,47,51,45],[53,6,52,4],[53,7,52,5],[54,4,53,2],[55,4,54,2],[55,11,54,9,"undefined"],[55,20,54,18],[56,2,55,0],[57,2,56,0],[57,11,56,9,"parseHermesStack"],[57,27,56,25,"parseHermesStack"],[57,28,56,26,"stack"],[57,33,56,31],[57,35,56,33],[58,4,57,2],[58,8,57,8,"lines"],[58,13,57,13],[58,16,57,16,"stack"],[58,21,57,21],[58,22,57,22,"split"],[58,27,57,27],[58,28,57,28],[58,32,57,32],[58,33,57,33],[59,4,58,2],[59,8,58,6,"entries"],[59,15,58,13],[59,18,58,16],[59,20,58,18],[60,4,59,2],[60,8,59,6,"lastMessageLine"],[60,23,59,21],[60,26,59,24],[60,27,59,25],[60,28,59,26],[61,4,60,2],[61,9,60,7],[61,13,60,11,"i"],[61,14,60,12],[61,17,60,15],[61,18,60,16],[61,20,60,18,"i"],[61,21,60,19],[61,24,60,22,"lines"],[61,29,60,27],[61,30,60,28,"length"],[61,36,60,34],[61,38,60,36],[61,40,60,38,"i"],[61,41,60,39],[61,43,60,41],[62,6,61,4],[62,10,61,10,"line"],[62,14,61,14],[62,17,61,17,"lines"],[62,22,61,22],[62,23,61,23,"i"],[62,24,61,24],[62,25,61,25],[63,6,62,4],[63,10,62,8],[63,11,62,9,"line"],[63,15,62,13],[63,17,62,15],[64,8,63,6],[65,6,64,4],[66,6,65,4],[66,10,65,10,"entry"],[66,15,65,15],[66,18,65,18,"parseLine"],[66,27,65,27],[66,28,65,28,"line"],[66,32,65,32],[66,33,65,33],[67,6,66,4],[67,10,66,8,"entry"],[67,15,66,13],[67,17,66,15],[68,8,67,6,"entries"],[68,15,67,13],[68,16,67,14,"push"],[68,20,67,18],[68,21,67,19,"entry"],[68,26,67,24],[68,27,67,25],[69,8,68,6],[70,6,69,4],[71,6,70,4],[72,6,71,4,"lastMessageLine"],[72,21,71,19],[72,24,71,22,"i"],[72,25,71,23],[73,6,72,4,"entries"],[73,13,72,11],[73,16,72,14],[73,18,72,16],[74,4,73,2],[75,4,74,2],[75,8,74,8,"message"],[75,15,74,15],[75,18,74,18,"lines"],[75,23,74,23],[75,24,74,24,"slice"],[75,29,74,29],[75,30,74,30],[75,31,74,31],[75,33,74,33,"lastMessageLine"],[75,48,74,48],[75,51,74,51],[75,52,74,52],[75,53,74,53],[75,54,74,54,"join"],[75,58,74,58],[75,59,74,59],[75,63,74,63],[75,64,74,64],[76,4,75,2],[76,11,75,9],[77,6,76,4,"message"],[77,13,76,11],[77,15,76,4,"message"],[77,22,76,11],[78,6,77,4,"entries"],[78,13,77,11],[78,15,77,4,"entries"],[79,4,78,2],[79,5,78,3],[80,2,79,0],[81,0,79,1],[81,3]],"functionMap":{"names":["<global>","parseLine","parseHermesStack"],"mappings":"AAA;ACyB;CD6B;AEC;CFuB"}},"type":"js/module"}]}