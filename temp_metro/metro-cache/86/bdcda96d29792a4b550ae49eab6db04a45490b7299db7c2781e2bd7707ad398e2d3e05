{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":108,"column":0,"index":3347}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":108,"column":0,"index":3347}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}},{"start":{"line":7,"column":18,"index":252},"end":{"line":7,"column":38,"index":272}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}},{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}},{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}},{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}},{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}},{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}},{"start":{"line":4,"column":14,"index":131},"end":{"line":4,"column":32,"index":149}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":38,"index":115}},{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":38,"index":115}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}},{"name":"tiny-secp256k1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}},{"start":{"line":5,"column":12,"index":163},"end":{"line":5,"column":37,"index":188}}],"key":"Whff8FUlwSwW4lSXzbcdkAvwS34="}},{"name":"wif","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":12,"index":286},"end":{"line":8,"column":26,"index":300}},{"start":{"line":8,"column":12,"index":286},"end":{"line":8,"column":26,"index":300}}],"key":"hbkfH+nYuAPDRbyK09Y/qV9whEg="}},{"name":"randombytes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":20,"index":210},"end":{"line":6,"column":42,"index":232}}],"key":"HRppB8l92kfLq10/yqHPiqGAuBY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var isOptions = _$$_REQUIRE(_dependencyMap[2], \"typeforce\").maybe(_$$_REQUIRE(_dependencyMap[2], \"typeforce\").compile({\n    compressed: _$$_REQUIRE(_dependencyMap[3], \"./types\").maybe(_$$_REQUIRE(_dependencyMap[3], \"./types\").Boolean),\n    network: _$$_REQUIRE(_dependencyMap[3], \"./types\").maybe(_$$_REQUIRE(_dependencyMap[3], \"./types\").Network)\n  }));\n  var ECPair = /*#__PURE__*/function () {\n    function ECPair(__D, __Q, options) {\n      _classCallCheck(this, ECPair);\n      this.__D = __D;\n      this.__Q = __Q;\n      this.lowR = false;\n      if (options === undefined) options = {};\n      this.compressed = options.compressed === undefined ? true : options.compressed;\n      this.network = options.network || _$$_REQUIRE(_dependencyMap[4], \"./networks\").bitcoin;\n      if (__Q !== undefined) this.__Q = _$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").pointCompress(__Q, this.compressed);\n    }\n    return _createClass(ECPair, [{\n      key: \"privateKey\",\n      get: function get() {\n        return this.__D;\n      }\n    }, {\n      key: \"publicKey\",\n      get: function get() {\n        if (!this.__Q) this.__Q = _$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").pointFromScalar(this.__D, this.compressed);\n        return this.__Q;\n      }\n    }, {\n      key: \"toWIF\",\n      value: function toWIF() {\n        if (!this.__D) throw new Error('Missing private key');\n        return _$$_REQUIRE(_dependencyMap[6], \"wif\").encode(this.network.wif, this.__D, this.compressed);\n      }\n    }, {\n      key: \"sign\",\n      value: function sign(hash, lowR) {\n        if (!this.__D) throw new Error('Missing private key');\n        if (lowR === undefined) lowR = this.lowR;\n        if (lowR === false) {\n          return _$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").sign(hash, this.__D);\n        } else {\n          var sig = _$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").sign(hash, this.__D);\n          var extraData = Buffer.alloc(32, 0);\n          var counter = 0;\n          // if first try is lowR, skip the loop\n          // for second try and on, add extra entropy counting up\n          while (sig[0] > 0x7f) {\n            counter++;\n            extraData.writeUIntLE(counter, 0, 6);\n            sig = _$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").signWithEntropy(hash, this.__D, extraData);\n          }\n          return sig;\n        }\n      }\n    }, {\n      key: \"verify\",\n      value: function verify(hash, signature) {\n        return _$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").verify(hash, this.publicKey, signature);\n      }\n    }]);\n  }();\n  function fromPrivateKey(buffer, options) {\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer256bit, buffer);\n    if (!_$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").isPrivate(buffer)) throw new TypeError('Private key not in range [1, n)');\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(isOptions, options);\n    return new ECPair(buffer, undefined, options);\n  }\n  exports.fromPrivateKey = fromPrivateKey;\n  function fromPublicKey(buffer, options) {\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").isPoint, buffer);\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(isOptions, options);\n    return new ECPair(undefined, buffer, options);\n  }\n  exports.fromPublicKey = fromPublicKey;\n  function fromWIF(wifString, network) {\n    var decoded = _$$_REQUIRE(_dependencyMap[6], \"wif\").decode(wifString);\n    var version = decoded.version;\n    // list of networks?\n    if (_$$_REQUIRE(_dependencyMap[3], \"./types\").Array(network)) {\n      network = network.filter(function (x) {\n        return version === x.wif;\n      }).pop();\n      if (!network) throw new Error('Unknown network version');\n      // otherwise, assume a network object (or default to bitcoin)\n    } else {\n      network = network || _$$_REQUIRE(_dependencyMap[4], \"./networks\").bitcoin;\n      if (version !== network.wif) throw new Error('Invalid network version');\n    }\n    return fromPrivateKey(decoded.privateKey, {\n      compressed: decoded.compressed,\n      network: network\n    });\n  }\n  exports.fromWIF = fromWIF;\n  function makeRandom(options) {\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(isOptions, options);\n    if (options === undefined) options = {};\n    var rng = options.rng || _$$_REQUIRE(_dependencyMap[7], \"randombytes\");\n    var d;\n    do {\n      d = rng(32);\n      _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[3], \"./types\").Buffer256bit, d);\n    } while (!_$$_REQUIRE(_dependencyMap[5], \"tiny-secp256k1\").isPrivate(d));\n    return fromPrivateKey(d, options);\n  }\n  exports.makeRandom = makeRandom;\n});","lineCount":114,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,9,0],[9,6,9,6,"isOptions"],[9,15,9,15],[9,18,9,18,"_$$_REQUIRE"],[9,29,9,18],[9,30,9,18,"_dependencyMap"],[9,44,9,18],[9,62,9,28,"maybe"],[9,67,9,33],[9,68,10,2,"_$$_REQUIRE"],[9,79,10,2],[9,80,10,2,"_dependencyMap"],[9,94,10,2],[9,112,10,12,"compile"],[9,119,10,19],[9,120,10,20],[10,4,11,4,"compressed"],[10,14,11,14],[10,16,11,16,"_$$_REQUIRE"],[10,27,11,16],[10,28,11,16,"_dependencyMap"],[10,42,11,16],[10,58,11,22,"maybe"],[10,63,11,27],[10,64,11,28,"_$$_REQUIRE"],[10,75,11,28],[10,76,11,28,"_dependencyMap"],[10,90,11,28],[10,106,11,34,"Boolean"],[10,113,11,41],[10,114,11,42],[11,4,12,4,"network"],[11,11,12,11],[11,13,12,13,"_$$_REQUIRE"],[11,24,12,13],[11,25,12,13,"_dependencyMap"],[11,39,12,13],[11,55,12,19,"maybe"],[11,60,12,24],[11,61,12,25,"_$$_REQUIRE"],[11,72,12,25],[11,73,12,25,"_dependencyMap"],[11,87,12,25],[11,103,12,31,"Network"],[11,110,12,38],[12,2,13,2],[12,3,13,3],[12,4,14,0],[12,5,14,1],[13,2,14,2],[13,6,15,6,"ECPair"],[13,12,15,12],[14,4,16,2],[14,13,16,2,"ECPair"],[14,20,16,14,"__D"],[14,23,16,17],[14,25,16,19,"__Q"],[14,28,16,22],[14,30,16,24,"options"],[14,37,16,31],[14,39,16,33],[15,6,16,33,"_classCallCheck"],[15,21,16,33],[15,28,16,33,"ECPair"],[15,34,16,33],[16,6,17,4],[16,10,17,8],[16,11,17,9,"__D"],[16,14,17,12],[16,17,17,15,"__D"],[16,20,17,18],[17,6,18,4],[17,10,18,8],[17,11,18,9,"__Q"],[17,14,18,12],[17,17,18,15,"__Q"],[17,20,18,18],[18,6,19,4],[18,10,19,8],[18,11,19,9,"lowR"],[18,15,19,13],[18,18,19,16],[18,23,19,21],[19,6,20,4],[19,10,20,8,"options"],[19,17,20,15],[19,22,20,20,"undefined"],[19,31,20,29],[19,33,20,31,"options"],[19,40,20,38],[19,43,20,41],[19,44,20,42],[19,45,20,43],[20,6,21,4],[20,10,21,8],[20,11,21,9,"compressed"],[20,21,21,19],[20,24,22,6,"options"],[20,31,22,13],[20,32,22,14,"compressed"],[20,42,22,24],[20,47,22,29,"undefined"],[20,56,22,38],[20,59,22,41],[20,63,22,45],[20,66,22,48,"options"],[20,73,22,55],[20,74,22,56,"compressed"],[20,84,22,66],[21,6,23,4],[21,10,23,8],[21,11,23,9,"network"],[21,18,23,16],[21,21,23,19,"options"],[21,28,23,26],[21,29,23,27,"network"],[21,36,23,34],[21,40,23,38,"_$$_REQUIRE"],[21,51,23,38],[21,52,23,38,"_dependencyMap"],[21,66,23,38],[21,85,23,47,"bitcoin"],[21,92,23,54],[22,6,24,4],[22,10,24,8,"__Q"],[22,13,24,11],[22,18,24,16,"undefined"],[22,27,24,25],[22,29,24,27],[22,33,24,31],[22,34,24,32,"__Q"],[22,37,24,35],[22,40,24,38,"_$$_REQUIRE"],[22,51,24,38],[22,52,24,38,"_dependencyMap"],[22,66,24,38],[22,89,24,42,"pointCompress"],[22,102,24,55],[22,103,24,56,"__Q"],[22,106,24,59],[22,108,24,61],[22,112,24,65],[22,113,24,66,"compressed"],[22,123,24,76],[22,124,24,77],[23,4,25,2],[24,4,25,3],[24,11,25,3,"_createClass"],[24,23,25,3],[24,24,25,3,"ECPair"],[24,30,25,3],[25,6,25,3,"key"],[25,9,25,3],[26,6,25,3,"get"],[26,9,25,3],[26,11,26,2],[26,20,26,2,"get"],[26,24,26,2],[26,26,26,19],[27,8,27,4],[27,15,27,11],[27,19,27,15],[27,20,27,16,"__D"],[27,23,27,19],[28,6,28,2],[29,4,28,3],[30,6,28,3,"key"],[30,9,28,3],[31,6,28,3,"get"],[31,9,28,3],[31,11,29,2],[31,20,29,2,"get"],[31,24,29,2],[31,26,29,18],[32,8,30,4],[32,12,30,8],[32,13,30,9],[32,17,30,13],[32,18,30,14,"__Q"],[32,21,30,17],[32,23,30,19],[32,27,30,23],[32,28,30,24,"__Q"],[32,31,30,27],[32,34,30,30,"_$$_REQUIRE"],[32,45,30,30],[32,46,30,30,"_dependencyMap"],[32,60,30,30],[32,83,30,34,"pointFromScalar"],[32,98,30,49],[32,99,30,50],[32,103,30,54],[32,104,30,55,"__D"],[32,107,30,58],[32,109,30,60],[32,113,30,64],[32,114,30,65,"compressed"],[32,124,30,75],[32,125,30,76],[33,8,31,4],[33,15,31,11],[33,19,31,15],[33,20,31,16,"__Q"],[33,23,31,19],[34,6,32,2],[35,4,32,3],[36,6,32,3,"key"],[36,9,32,3],[37,6,32,3,"value"],[37,11,32,3],[37,13,33,2],[37,22,33,2,"toWIF"],[37,27,33,7,"toWIF"],[37,28,33,7],[37,30,33,10],[38,8,34,4],[38,12,34,8],[38,13,34,9],[38,17,34,13],[38,18,34,14,"__D"],[38,21,34,17],[38,23,34,19],[38,29,34,25],[38,33,34,29,"Error"],[38,38,34,34],[38,39,34,35],[38,60,34,56],[38,61,34,57],[39,8,35,4],[39,15,35,11,"_$$_REQUIRE"],[39,26,35,11],[39,27,35,11,"_dependencyMap"],[39,41,35,11],[39,53,35,15,"encode"],[39,59,35,21],[39,60,35,22],[39,64,35,26],[39,65,35,27,"network"],[39,72,35,34],[39,73,35,35,"wif"],[39,76,35,38],[39,78,35,40],[39,82,35,44],[39,83,35,45,"__D"],[39,86,35,48],[39,88,35,50],[39,92,35,54],[39,93,35,55,"compressed"],[39,103,35,65],[39,104,35,66],[40,6,36,2],[41,4,36,3],[42,6,36,3,"key"],[42,9,36,3],[43,6,36,3,"value"],[43,11,36,3],[43,13,37,2],[43,22,37,2,"sign"],[43,26,37,6,"sign"],[43,27,37,7,"hash"],[43,31,37,11],[43,33,37,13,"lowR"],[43,37,37,17],[43,39,37,19],[44,8,38,4],[44,12,38,8],[44,13,38,9],[44,17,38,13],[44,18,38,14,"__D"],[44,21,38,17],[44,23,38,19],[44,29,38,25],[44,33,38,29,"Error"],[44,38,38,34],[44,39,38,35],[44,60,38,56],[44,61,38,57],[45,8,39,4],[45,12,39,8,"lowR"],[45,16,39,12],[45,21,39,17,"undefined"],[45,30,39,26],[45,32,39,28,"lowR"],[45,36,39,32],[45,39,39,35],[45,43,39,39],[45,44,39,40,"lowR"],[45,48,39,44],[46,8,40,4],[46,12,40,8,"lowR"],[46,16,40,12],[46,21,40,17],[46,26,40,22],[46,28,40,24],[47,10,41,6],[47,17,41,13,"_$$_REQUIRE"],[47,28,41,13],[47,29,41,13,"_dependencyMap"],[47,43,41,13],[47,66,41,17,"sign"],[47,70,41,21],[47,71,41,22,"hash"],[47,75,41,26],[47,77,41,28],[47,81,41,32],[47,82,41,33,"__D"],[47,85,41,36],[47,86,41,37],[48,8,42,4],[48,9,42,5],[48,15,42,11],[49,10,43,6],[49,14,43,10,"sig"],[49,17,43,13],[49,20,43,16,"_$$_REQUIRE"],[49,31,43,16],[49,32,43,16,"_dependencyMap"],[49,46,43,16],[49,69,43,20,"sign"],[49,73,43,24],[49,74,43,25,"hash"],[49,78,43,29],[49,80,43,31],[49,84,43,35],[49,85,43,36,"__D"],[49,88,43,39],[49,89,43,40],[50,10,44,6],[50,14,44,12,"extraData"],[50,23,44,21],[50,26,44,24,"Buffer"],[50,32,44,30],[50,33,44,31,"alloc"],[50,38,44,36],[50,39,44,37],[50,41,44,39],[50,43,44,41],[50,44,44,42],[50,45,44,43],[51,10,45,6],[51,14,45,10,"counter"],[51,21,45,17],[51,24,45,20],[51,25,45,21],[52,10,46,6],[53,10,47,6],[54,10,48,6],[54,17,48,13,"sig"],[54,20,48,16],[54,21,48,17],[54,22,48,18],[54,23,48,19],[54,26,48,22],[54,30,48,26],[54,32,48,28],[55,12,49,8,"counter"],[55,19,49,15],[55,21,49,17],[56,12,50,8,"extraData"],[56,21,50,17],[56,22,50,18,"writeUIntLE"],[56,33,50,29],[56,34,50,30,"counter"],[56,41,50,37],[56,43,50,39],[56,44,50,40],[56,46,50,42],[56,47,50,43],[56,48,50,44],[57,12,51,8,"sig"],[57,15,51,11],[57,18,51,14,"_$$_REQUIRE"],[57,29,51,14],[57,30,51,14,"_dependencyMap"],[57,44,51,14],[57,67,51,18,"signWithEntropy"],[57,82,51,33],[57,83,51,34,"hash"],[57,87,51,38],[57,89,51,40],[57,93,51,44],[57,94,51,45,"__D"],[57,97,51,48],[57,99,51,50,"extraData"],[57,108,51,59],[57,109,51,60],[58,10,52,6],[59,10,53,6],[59,17,53,13,"sig"],[59,20,53,16],[60,8,54,4],[61,6,55,2],[62,4,55,3],[63,6,55,3,"key"],[63,9,55,3],[64,6,55,3,"value"],[64,11,55,3],[64,13,56,2],[64,22,56,2,"verify"],[64,28,56,8,"verify"],[64,29,56,9,"hash"],[64,33,56,13],[64,35,56,15,"signature"],[64,44,56,24],[64,46,56,26],[65,8,57,4],[65,15,57,11,"_$$_REQUIRE"],[65,26,57,11],[65,27,57,11,"_dependencyMap"],[65,41,57,11],[65,64,57,15,"verify"],[65,70,57,21],[65,71,57,22,"hash"],[65,75,57,26],[65,77,57,28],[65,81,57,32],[65,82,57,33,"publicKey"],[65,91,57,42],[65,93,57,44,"signature"],[65,102,57,53],[65,103,57,54],[66,6,58,2],[67,4,58,3],[68,2,58,3],[69,2,60,0],[69,11,60,9,"fromPrivateKey"],[69,25,60,23,"fromPrivateKey"],[69,26,60,24,"buffer"],[69,32,60,30],[69,34,60,32,"options"],[69,41,60,39],[69,43,60,41],[70,4,61,2,"_$$_REQUIRE"],[70,15,61,2],[70,16,61,2,"_dependencyMap"],[70,30,61,2],[70,48,61,12,"_$$_REQUIRE"],[70,59,61,12],[70,60,61,12,"_dependencyMap"],[70,74,61,12],[70,90,61,18,"Buffer256bit"],[70,102,61,30],[70,104,61,32,"buffer"],[70,110,61,38],[70,111,61,39],[71,4,62,2],[71,8,62,6],[71,9,62,7,"_$$_REQUIRE"],[71,20,62,7],[71,21,62,7,"_dependencyMap"],[71,35,62,7],[71,58,62,11,"isPrivate"],[71,67,62,20],[71,68,62,21,"buffer"],[71,74,62,27],[71,75,62,28],[71,77,63,4],[71,83,63,10],[71,87,63,14,"TypeError"],[71,96,63,23],[71,97,63,24],[71,130,63,57],[71,131,63,58],[72,4,64,2,"_$$_REQUIRE"],[72,15,64,2],[72,16,64,2,"_dependencyMap"],[72,30,64,2],[72,48,64,12,"isOptions"],[72,57,64,21],[72,59,64,23,"options"],[72,66,64,30],[72,67,64,31],[73,4,65,2],[73,11,65,9],[73,15,65,13,"ECPair"],[73,21,65,19],[73,22,65,20,"buffer"],[73,28,65,26],[73,30,65,28,"undefined"],[73,39,65,37],[73,41,65,39,"options"],[73,48,65,46],[73,49,65,47],[74,2,66,0],[75,2,67,0,"exports"],[75,9,67,7],[75,10,67,8,"fromPrivateKey"],[75,24,67,22],[75,27,67,25,"fromPrivateKey"],[75,41,67,39],[76,2,68,0],[76,11,68,9,"fromPublicKey"],[76,24,68,22,"fromPublicKey"],[76,25,68,23,"buffer"],[76,31,68,29],[76,33,68,31,"options"],[76,40,68,38],[76,42,68,40],[77,4,69,2,"_$$_REQUIRE"],[77,15,69,2],[77,16,69,2,"_dependencyMap"],[77,30,69,2],[77,48,69,12,"_$$_REQUIRE"],[77,59,69,12],[77,60,69,12,"_dependencyMap"],[77,74,69,12],[77,97,69,16,"isPoint"],[77,104,69,23],[77,106,69,25,"buffer"],[77,112,69,31],[77,113,69,32],[78,4,70,2,"_$$_REQUIRE"],[78,15,70,2],[78,16,70,2,"_dependencyMap"],[78,30,70,2],[78,48,70,12,"isOptions"],[78,57,70,21],[78,59,70,23,"options"],[78,66,70,30],[78,67,70,31],[79,4,71,2],[79,11,71,9],[79,15,71,13,"ECPair"],[79,21,71,19],[79,22,71,20,"undefined"],[79,31,71,29],[79,33,71,31,"buffer"],[79,39,71,37],[79,41,71,39,"options"],[79,48,71,46],[79,49,71,47],[80,2,72,0],[81,2,73,0,"exports"],[81,9,73,7],[81,10,73,8,"fromPublicKey"],[81,23,73,21],[81,26,73,24,"fromPublicKey"],[81,39,73,37],[82,2,74,0],[82,11,74,9,"fromWIF"],[82,18,74,16,"fromWIF"],[82,19,74,17,"wifString"],[82,28,74,26],[82,30,74,28,"network"],[82,37,74,35],[82,39,74,37],[83,4,75,2],[83,8,75,8,"decoded"],[83,15,75,15],[83,18,75,18,"_$$_REQUIRE"],[83,29,75,18],[83,30,75,18,"_dependencyMap"],[83,44,75,18],[83,56,75,22,"decode"],[83,62,75,28],[83,63,75,29,"wifString"],[83,72,75,38],[83,73,75,39],[84,4,76,2],[84,8,76,8,"version"],[84,15,76,15],[84,18,76,18,"decoded"],[84,25,76,25],[84,26,76,26,"version"],[84,33,76,33],[85,4,77,2],[86,4,78,2],[86,8,78,6,"_$$_REQUIRE"],[86,19,78,6],[86,20,78,6,"_dependencyMap"],[86,34,78,6],[86,50,78,12,"Array"],[86,55,78,17],[86,56,78,18,"network"],[86,63,78,25],[86,64,78,26],[86,66,78,28],[87,6,79,4,"network"],[87,13,79,11],[87,16,79,14,"network"],[87,23,79,21],[87,24,80,7,"filter"],[87,30,80,13],[87,31,80,14],[87,41,80,14,"x"],[87,42,80,15],[87,44,80,19],[88,8,81,8],[88,15,81,15,"version"],[88,22,81,22],[88,27,81,27,"x"],[88,28,81,28],[88,29,81,29,"wif"],[88,32,81,32],[89,6,82,6],[89,7,82,7],[89,8,82,8],[89,9,83,7,"pop"],[89,12,83,10],[89,13,83,11],[89,14,83,12],[90,6,84,4],[90,10,84,8],[90,11,84,9,"network"],[90,18,84,16],[90,20,84,18],[90,26,84,24],[90,30,84,28,"Error"],[90,35,84,33],[90,36,84,34],[90,61,84,59],[90,62,84,60],[91,6,85,4],[92,4,86,2],[92,5,86,3],[92,11,86,9],[93,6,87,4,"network"],[93,13,87,11],[93,16,87,14,"network"],[93,23,87,21],[93,27,87,25,"_$$_REQUIRE"],[93,38,87,25],[93,39,87,25,"_dependencyMap"],[93,53,87,25],[93,72,87,34,"bitcoin"],[93,79,87,41],[94,6,88,4],[94,10,88,8,"version"],[94,17,88,15],[94,22,88,20,"network"],[94,29,88,27],[94,30,88,28,"wif"],[94,33,88,31],[94,35,88,33],[94,41,88,39],[94,45,88,43,"Error"],[94,50,88,48],[94,51,88,49],[94,76,88,74],[94,77,88,75],[95,4,89,2],[96,4,90,2],[96,11,90,9,"fromPrivateKey"],[96,25,90,23],[96,26,90,24,"decoded"],[96,33,90,31],[96,34,90,32,"privateKey"],[96,44,90,42],[96,46,90,44],[97,6,91,4,"compressed"],[97,16,91,14],[97,18,91,16,"decoded"],[97,25,91,23],[97,26,91,24,"compressed"],[97,36,91,34],[98,6,92,4,"network"],[98,13,92,11],[98,15,92,13,"network"],[99,4,93,2],[99,5,93,3],[99,6,93,4],[100,2,94,0],[101,2,95,0,"exports"],[101,9,95,7],[101,10,95,8,"fromWIF"],[101,17,95,15],[101,20,95,18,"fromWIF"],[101,27,95,25],[102,2,96,0],[102,11,96,9,"makeRandom"],[102,21,96,19,"makeRandom"],[102,22,96,20,"options"],[102,29,96,27],[102,31,96,29],[103,4,97,2,"_$$_REQUIRE"],[103,15,97,2],[103,16,97,2,"_dependencyMap"],[103,30,97,2],[103,48,97,12,"isOptions"],[103,57,97,21],[103,59,97,23,"options"],[103,66,97,30],[103,67,97,31],[104,4,98,2],[104,8,98,6,"options"],[104,15,98,13],[104,20,98,18,"undefined"],[104,29,98,27],[104,31,98,29,"options"],[104,38,98,36],[104,41,98,39],[104,42,98,40],[104,43,98,41],[105,4,99,2],[105,8,99,8,"rng"],[105,11,99,11],[105,14,99,14,"options"],[105,21,99,21],[105,22,99,22,"rng"],[105,25,99,25],[105,29,99,25,"_$$_REQUIRE"],[105,40,99,25],[105,41,99,25,"_dependencyMap"],[105,55,99,25],[105,74,99,40],[106,4,100,2],[106,8,100,6,"d"],[106,9,100,7],[107,4,101,2],[107,7,101,5],[108,6,102,4,"d"],[108,7,102,5],[108,10,102,8,"rng"],[108,13,102,11],[108,14,102,12],[108,16,102,14],[108,17,102,15],[109,6,103,4,"_$$_REQUIRE"],[109,17,103,4],[109,18,103,4,"_dependencyMap"],[109,32,103,4],[109,50,103,14,"_$$_REQUIRE"],[109,61,103,14],[109,62,103,14,"_dependencyMap"],[109,76,103,14],[109,92,103,20,"Buffer256bit"],[109,104,103,32],[109,106,103,34,"d"],[109,107,103,35],[109,108,103,36],[110,4,104,2],[110,5,104,3],[110,13,104,11],[110,14,104,12,"_$$_REQUIRE"],[110,25,104,12],[110,26,104,12,"_dependencyMap"],[110,40,104,12],[110,63,104,16,"isPrivate"],[110,72,104,25],[110,73,104,26,"d"],[110,74,104,27],[110,75,104,28],[111,4,105,2],[111,11,105,9,"fromPrivateKey"],[111,25,105,23],[111,26,105,24,"d"],[111,27,105,25],[111,29,105,27,"options"],[111,36,105,34],[111,37,105,35],[112,2,106,0],[113,2,107,0,"exports"],[113,9,107,7],[113,10,107,8,"makeRandom"],[113,20,107,18],[113,23,107,21,"makeRandom"],[113,33,107,31],[114,0,107,32],[114,3]],"functionMap":{"names":["<global>","ECPair","ECPair#constructor","ECPair#get__privateKey","ECPair#get__publicKey","ECPair#toWIF","ECPair#sign","ECPair#verify","fromPrivateKey","fromPublicKey","fromWIF","network.filter$argument_0","makeRandom"],"mappings":"AAA;ACc;ECC;GDS;EEC;GFE;EGC;GHG;EIC;GJG;EKC;GLkB;EMC;GNE;CDC;AQC;CRM;ASE;CTI;AUE;cCM;ODE;CVY;AYE;CZU"}},"type":"js/module"}]}