{"dependencies":[{"name":"parse-asn1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":302},"end":{"line":9,"column":37,"index":323}}],"key":"COzMkWIbbKvXpM5KBuLue1rYJxE="}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}},{"start":{"line":4,"column":13,"index":117},"end":{"line":4,"column":42,"index":146}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"browserify-rsa","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":10,"index":199},"end":{"line":6,"column":35,"index":224}}],"key":"i91NB5S6fkkom0NK1NSlNMPM/ZQ="}},{"name":"./curves.json","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":338},"end":{"line":10,"column":37,"index":362}}],"key":"asYIj/9Lslhm8Hnwqpi8fA5Jt4c="}},{"name":"elliptic","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":9,"index":235},"end":{"line":7,"column":31,"index":257}}],"key":"h6RIsoF9GgRhyZAr3TXxz6R4meA="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":9,"index":268},"end":{"line":8,"column":25,"index":284}},{"start":{"line":8,"column":9,"index":268},"end":{"line":8,"column":25,"index":284}},{"start":{"line":8,"column":9,"index":268},"end":{"line":8,"column":25,"index":284}},{"start":{"line":8,"column":9,"index":268},"end":{"line":8,"column":25,"index":284}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"create-hmac","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}},{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}},{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}},{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}},{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}},{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}},{"start":{"line":5,"column":17,"index":165},"end":{"line":5,"column":39,"index":187}}],"key":"Hb4O2fQ/eTYGCsl146rR3M0LxJk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  // much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\n  var RSA_PKCS1_PADDING = 1;\n  function sign(hash, key, hashType, signType, tag) {\n    var priv = _$$_REQUIRE(_dependencyMap[0], \"parse-asn1\")(key);\n    if (priv.curve) {\n      // rsa keys can be interpreted as ecdsa ones in openssl\n      if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') {\n        throw new Error('wrong private key type');\n      }\n      return ecSign(hash, priv);\n    } else if (priv.type === 'dsa') {\n      if (signType !== 'dsa') {\n        throw new Error('wrong private key type');\n      }\n      return dsaSign(hash, priv, hashType);\n    }\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') {\n      throw new Error('wrong private key type');\n    }\n    if (key.padding !== undefined && key.padding !== RSA_PKCS1_PADDING) {\n      throw new Error('illegal or unsupported padding mode');\n    }\n    hash = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([tag, hash]);\n    var len = priv.modulus.byteLength();\n    var pad = [0, 1];\n    while (hash.length + pad.length + 1 < len) {\n      pad.push(0xff);\n    }\n    pad.push(0x00);\n    var i = -1;\n    while (++i < hash.length) {\n      pad.push(hash[i]);\n    }\n    var out = _$$_REQUIRE(_dependencyMap[2], \"browserify-rsa\")(pad, priv);\n    return out;\n  }\n  function ecSign(hash, priv) {\n    var curveId = _$$_REQUIRE(_dependencyMap[3], \"./curves.json\")[priv.curve.join('.')];\n    if (!curveId) {\n      throw new Error('unknown curve ' + priv.curve.join('.'));\n    }\n    var curve = new (_$$_REQUIRE(_dependencyMap[4], \"elliptic\").ec)(curveId);\n    var key = curve.keyFromPrivate(priv.privateKey);\n    var out = key.sign(hash);\n    return _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from(out.toDER());\n  }\n  function dsaSign(hash, priv, algo) {\n    var x = priv.params.priv_key;\n    var p = priv.params.p;\n    var q = priv.params.q;\n    var g = priv.params.g;\n    var r = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(0);\n    var k;\n    var H = bits2int(hash, q).mod(q);\n    var s = false;\n    var kv = getKey(x, q, hash, algo);\n    while (s === false) {\n      k = makeKey(q, kv, algo);\n      r = makeR(g, k, p, q);\n      s = k.invm(q).imul(H.add(x.mul(r))).mod(q);\n      if (s.cmpn(0) === 0) {\n        s = false;\n        r = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(0);\n      }\n    }\n    return toDER(r, s);\n  }\n  function toDER(r, s) {\n    r = r.toArray();\n    s = s.toArray();\n\n    // Pad values\n    if (r[0] & 0x80) {\n      r = [0].concat(r);\n    }\n    if (s[0] & 0x80) {\n      s = [0].concat(s);\n    }\n    var total = r.length + s.length + 4;\n    var res = [0x30, total, 0x02, r.length];\n    res = res.concat(r, [0x02, s.length], s);\n    return _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from(res);\n  }\n  function getKey(x, q, hash, algo) {\n    x = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from(x.toArray());\n    if (x.length < q.byteLength()) {\n      var zeros = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.alloc(q.byteLength() - x.length);\n      x = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([zeros, x]);\n    }\n    var hlen = hash.length;\n    var hbits = bits2octets(hash, q);\n    var v = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.alloc(hlen);\n    v.fill(1);\n    var k = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.alloc(hlen);\n    k = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, k).update(v).update(_$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from([0])).update(x).update(hbits).digest();\n    v = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, k).update(v).digest();\n    k = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, k).update(v).update(_$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from([1])).update(x).update(hbits).digest();\n    v = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, k).update(v).digest();\n    return {\n      k: k,\n      v: v\n    };\n  }\n  function bits2int(obits, q) {\n    var bits = new (_$$_REQUIRE(_dependencyMap[5], \"bn.js\"))(obits);\n    var shift = (obits.length << 3) - q.bitLength();\n    if (shift > 0) {\n      bits.ishrn(shift);\n    }\n    return bits;\n  }\n  function bits2octets(bits, q) {\n    bits = bits2int(bits, q);\n    bits = bits.mod(q);\n    var out = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from(bits.toArray());\n    if (out.length < q.byteLength()) {\n      var zeros = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.alloc(q.byteLength() - out.length);\n      out = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([zeros, out]);\n    }\n    return out;\n  }\n  function makeKey(q, kv, algo) {\n    var t;\n    var k;\n    do {\n      t = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.alloc(0);\n      while (t.length * 8 < q.bitLength()) {\n        kv.v = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, kv.k).update(kv.v).digest();\n        t = _$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.concat([t, kv.v]);\n      }\n      k = bits2int(t, q);\n      kv.k = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, kv.k).update(kv.v).update(_$$_REQUIRE(_dependencyMap[1], \"safe-buffer\").Buffer.from([0])).digest();\n      kv.v = _$$_REQUIRE(_dependencyMap[6], \"create-hmac\")(algo, kv.k).update(kv.v).digest();\n    } while (k.cmp(q) !== -1);\n    return k;\n  }\n  function makeR(g, k, p, q) {\n    return g.toRed(_$$_REQUIRE(_dependencyMap[5], \"bn.js\").mont(p)).redPow(k).fromRed().mod(q);\n  }\n  module.exports = sign;\n  module.exports.getKey = getKey;\n  module.exports.makeKey = makeKey;\n});","lineCount":146,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,12,0],[5,6,12,4,"RSA_PKCS1_PADDING"],[5,23,12,21],[5,26,12,24],[5,27,12,25],[6,2,14,0],[6,11,14,9,"sign"],[6,15,14,13,"sign"],[6,16,14,14,"hash"],[6,20,14,18],[6,22,14,20,"key"],[6,25,14,23],[6,27,14,25,"hashType"],[6,35,14,33],[6,37,14,35,"signType"],[6,45,14,43],[6,47,14,45,"tag"],[6,50,14,48],[6,52,14,50],[7,4,15,2],[7,8,15,6,"priv"],[7,12,15,10],[7,15,15,13,"_$$_REQUIRE"],[7,26,15,13],[7,27,15,13,"_dependencyMap"],[7,41,15,13],[7,60,15,23,"key"],[7,63,15,26],[7,64,15,27],[8,4,16,2],[8,8,16,6,"priv"],[8,12,16,10],[8,13,16,11,"curve"],[8,18,16,16],[8,20,16,18],[9,6,17,4],[10,6,18,4],[10,10,18,8,"signType"],[10,18,18,16],[10,23,18,21],[10,30,18,28],[10,34,18,32,"signType"],[10,42,18,40],[10,47,18,45],[10,58,18,56],[10,60,18,58],[11,8,18,60],[11,14,18,66],[11,18,18,70,"Error"],[11,23,18,75],[11,24,18,76],[11,48,18,100],[11,49,18,101],[12,6,18,103],[13,6,19,4],[13,13,19,11,"ecSign"],[13,19,19,17],[13,20,19,18,"hash"],[13,24,19,22],[13,26,19,24,"priv"],[13,30,19,28],[13,31,19,29],[14,4,20,2],[14,5,20,3],[14,11,20,9],[14,15,20,13,"priv"],[14,19,20,17],[14,20,20,18,"type"],[14,24,20,22],[14,29,20,27],[14,34,20,32],[14,36,20,34],[15,6,21,4],[15,10,21,8,"signType"],[15,18,21,16],[15,23,21,21],[15,28,21,26],[15,30,21,28],[16,8,21,30],[16,14,21,36],[16,18,21,40,"Error"],[16,23,21,45],[16,24,21,46],[16,48,21,70],[16,49,21,71],[17,6,21,73],[18,6,22,4],[18,13,22,11,"dsaSign"],[18,20,22,18],[18,21,22,19,"hash"],[18,25,22,23],[18,27,22,25,"priv"],[18,31,22,29],[18,33,22,31,"hashType"],[18,41,22,39],[18,42,22,40],[19,4,23,2],[20,4,24,2],[20,8,24,6,"signType"],[20,16,24,14],[20,21,24,19],[20,26,24,24],[20,30,24,28,"signType"],[20,38,24,36],[20,43,24,41],[20,54,24,52],[20,56,24,54],[21,6,24,56],[21,12,24,62],[21,16,24,66,"Error"],[21,21,24,71],[21,22,24,72],[21,46,24,96],[21,47,24,97],[22,4,24,99],[23,4,25,2],[23,8,25,6,"key"],[23,11,25,9],[23,12,25,10,"padding"],[23,19,25,17],[23,24,25,22,"undefined"],[23,33,25,31],[23,37,25,35,"key"],[23,40,25,38],[23,41,25,39,"padding"],[23,48,25,46],[23,53,25,51,"RSA_PKCS1_PADDING"],[23,70,25,68],[23,72,25,70],[24,6,25,72],[24,12,25,78],[24,16,25,82,"Error"],[24,21,25,87],[24,22,25,88],[24,59,25,125],[24,60,25,126],[25,4,25,128],[26,4,27,2,"hash"],[26,8,27,6],[26,11,27,9,"_$$_REQUIRE"],[26,22,27,9],[26,23,27,9,"_dependencyMap"],[26,37,27,9],[26,57,27,9,"Buffer"],[26,63,27,9],[26,64,27,16,"concat"],[26,70,27,22],[26,71,27,23],[26,72,27,24,"tag"],[26,75,27,27],[26,77,27,29,"hash"],[26,81,27,33],[26,82,27,34],[26,83,27,35],[27,4,28,2],[27,8,28,6,"len"],[27,11,28,9],[27,14,28,12,"priv"],[27,18,28,16],[27,19,28,17,"modulus"],[27,26,28,24],[27,27,28,25,"byteLength"],[27,37,28,35],[27,38,28,36],[27,39,28,37],[28,4,29,2],[28,8,29,6,"pad"],[28,11,29,9],[28,14,29,12],[28,15,29,13],[28,16,29,14],[28,18,29,16],[28,19,29,17],[28,20,29,18],[29,4,30,2],[29,11,30,9,"hash"],[29,15,30,13],[29,16,30,14,"length"],[29,22,30,20],[29,25,30,23,"pad"],[29,28,30,26],[29,29,30,27,"length"],[29,35,30,33],[29,38,30,36],[29,39,30,37],[29,42,30,40,"len"],[29,45,30,43],[29,47,30,45],[30,6,30,47,"pad"],[30,9,30,50],[30,10,30,51,"push"],[30,14,30,55],[30,15,30,56],[30,19,30,60],[30,20,30,61],[31,4,30,63],[32,4,31,2,"pad"],[32,7,31,5],[32,8,31,6,"push"],[32,12,31,10],[32,13,31,11],[32,17,31,15],[32,18,31,16],[33,4,32,2],[33,8,32,6,"i"],[33,9,32,7],[33,12,32,10],[33,13,32,11],[33,14,32,12],[34,4,33,2],[34,11,33,9],[34,13,33,11,"i"],[34,14,33,12],[34,17,33,15,"hash"],[34,21,33,19],[34,22,33,20,"length"],[34,28,33,26],[34,30,33,28],[35,6,33,30,"pad"],[35,9,33,33],[35,10,33,34,"push"],[35,14,33,38],[35,15,33,39,"hash"],[35,19,33,43],[35,20,33,44,"i"],[35,21,33,45],[35,22,33,46],[35,23,33,47],[36,4,33,49],[37,4,35,2],[37,8,35,6,"out"],[37,11,35,9],[37,14,35,12,"_$$_REQUIRE"],[37,25,35,12],[37,26,35,12,"_dependencyMap"],[37,40,35,12],[37,63,35,16,"pad"],[37,66,35,19],[37,68,35,21,"priv"],[37,72,35,25],[37,73,35,26],[38,4,36,2],[38,11,36,9,"out"],[38,14,36,12],[39,2,37,0],[40,2,39,0],[40,11,39,9,"ecSign"],[40,17,39,15,"ecSign"],[40,18,39,16,"hash"],[40,22,39,20],[40,24,39,22,"priv"],[40,28,39,26],[40,30,39,28],[41,4,40,2],[41,8,40,6,"curveId"],[41,15,40,13],[41,18,40,16,"_$$_REQUIRE"],[41,29,40,16],[41,30,40,16,"_dependencyMap"],[41,44,40,16],[41,66,40,23,"priv"],[41,70,40,27],[41,71,40,28,"curve"],[41,76,40,33],[41,77,40,34,"join"],[41,81,40,38],[41,82,40,39],[41,85,40,42],[41,86,40,43],[41,87,40,44],[42,4,41,2],[42,8,41,6],[42,9,41,7,"curveId"],[42,16,41,14],[42,18,41,16],[43,6,41,18],[43,12,41,24],[43,16,41,28,"Error"],[43,21,41,33],[43,22,41,34],[43,38,41,50],[43,41,41,53,"priv"],[43,45,41,57],[43,46,41,58,"curve"],[43,51,41,63],[43,52,41,64,"join"],[43,56,41,68],[43,57,41,69],[43,60,41,72],[43,61,41,73],[43,62,41,74],[44,4,41,76],[45,4,43,2],[45,8,43,6,"curve"],[45,13,43,11],[45,16,43,14],[45,21,43,14,"_$$_REQUIRE"],[45,32,43,14],[45,33,43,14,"_dependencyMap"],[45,47,43,14],[45,64,43,14,"ec"],[45,66,43,14],[45,68,43,21,"curveId"],[45,75,43,28],[45,76,43,29],[46,4,44,2],[46,8,44,6,"key"],[46,11,44,9],[46,14,44,12,"curve"],[46,19,44,17],[46,20,44,18,"keyFromPrivate"],[46,34,44,32],[46,35,44,33,"priv"],[46,39,44,37],[46,40,44,38,"privateKey"],[46,50,44,48],[46,51,44,49],[47,4,45,2],[47,8,45,6,"out"],[47,11,45,9],[47,14,45,12,"key"],[47,17,45,15],[47,18,45,16,"sign"],[47,22,45,20],[47,23,45,21,"hash"],[47,27,45,25],[47,28,45,26],[48,4,47,2],[48,11,47,9,"_$$_REQUIRE"],[48,22,47,9],[48,23,47,9,"_dependencyMap"],[48,37,47,9],[48,57,47,9,"Buffer"],[48,63,47,9],[48,64,47,16,"from"],[48,68,47,20],[48,69,47,21,"out"],[48,72,47,24],[48,73,47,25,"toDER"],[48,78,47,30],[48,79,47,31],[48,80,47,32],[48,81,47,33],[49,2,48,0],[50,2,50,0],[50,11,50,9,"dsaSign"],[50,18,50,16,"dsaSign"],[50,19,50,17,"hash"],[50,23,50,21],[50,25,50,23,"priv"],[50,29,50,27],[50,31,50,29,"algo"],[50,35,50,33],[50,37,50,35],[51,4,51,2],[51,8,51,6,"x"],[51,9,51,7],[51,12,51,10,"priv"],[51,16,51,14],[51,17,51,15,"params"],[51,23,51,21],[51,24,51,22,"priv_key"],[51,32,51,30],[52,4,52,2],[52,8,52,6,"p"],[52,9,52,7],[52,12,52,10,"priv"],[52,16,52,14],[52,17,52,15,"params"],[52,23,52,21],[52,24,52,22,"p"],[52,25,52,23],[53,4,53,2],[53,8,53,6,"q"],[53,9,53,7],[53,12,53,10,"priv"],[53,16,53,14],[53,17,53,15,"params"],[53,23,53,21],[53,24,53,22,"q"],[53,25,53,23],[54,4,54,2],[54,8,54,6,"g"],[54,9,54,7],[54,12,54,10,"priv"],[54,16,54,14],[54,17,54,15,"params"],[54,23,54,21],[54,24,54,22,"g"],[54,25,54,23],[55,4,55,2],[55,8,55,6,"r"],[55,9,55,7],[55,12,55,10],[55,17,55,10,"_$$_REQUIRE"],[55,28,55,10],[55,29,55,10,"_dependencyMap"],[55,43,55,10],[55,58,55,17],[55,59,55,18],[55,60,55,19],[56,4,56,2],[56,8,56,6,"k"],[56,9,56,7],[57,4,57,2],[57,8,57,6,"H"],[57,9,57,7],[57,12,57,10,"bits2int"],[57,20,57,18],[57,21,57,19,"hash"],[57,25,57,23],[57,27,57,25,"q"],[57,28,57,26],[57,29,57,27],[57,30,57,28,"mod"],[57,33,57,31],[57,34,57,32,"q"],[57,35,57,33],[57,36,57,34],[58,4,58,2],[58,8,58,6,"s"],[58,9,58,7],[58,12,58,10],[58,17,58,15],[59,4,59,2],[59,8,59,6,"kv"],[59,10,59,8],[59,13,59,11,"getKey"],[59,19,59,17],[59,20,59,18,"x"],[59,21,59,19],[59,23,59,21,"q"],[59,24,59,22],[59,26,59,24,"hash"],[59,30,59,28],[59,32,59,30,"algo"],[59,36,59,34],[59,37,59,35],[60,4,60,2],[60,11,60,9,"s"],[60,12,60,10],[60,17,60,15],[60,22,60,20],[60,24,60,22],[61,6,61,4,"k"],[61,7,61,5],[61,10,61,8,"makeKey"],[61,17,61,15],[61,18,61,16,"q"],[61,19,61,17],[61,21,61,19,"kv"],[61,23,61,21],[61,25,61,23,"algo"],[61,29,61,27],[61,30,61,28],[62,6,62,4,"r"],[62,7,62,5],[62,10,62,8,"makeR"],[62,15,62,13],[62,16,62,14,"g"],[62,17,62,15],[62,19,62,17,"k"],[62,20,62,18],[62,22,62,20,"p"],[62,23,62,21],[62,25,62,23,"q"],[62,26,62,24],[62,27,62,25],[63,6,63,4,"s"],[63,7,63,5],[63,10,63,8,"k"],[63,11,63,9],[63,12,63,10,"invm"],[63,16,63,14],[63,17,63,15,"q"],[63,18,63,16],[63,19,63,17],[63,20,63,18,"imul"],[63,24,63,22],[63,25,63,23,"H"],[63,26,63,24],[63,27,63,25,"add"],[63,30,63,28],[63,31,63,29,"x"],[63,32,63,30],[63,33,63,31,"mul"],[63,36,63,34],[63,37,63,35,"r"],[63,38,63,36],[63,39,63,37],[63,40,63,38],[63,41,63,39],[63,42,63,40,"mod"],[63,45,63,43],[63,46,63,44,"q"],[63,47,63,45],[63,48,63,46],[64,6,64,4],[64,10,64,8,"s"],[64,11,64,9],[64,12,64,10,"cmpn"],[64,16,64,14],[64,17,64,15],[64,18,64,16],[64,19,64,17],[64,24,64,22],[64,25,64,23],[64,27,64,25],[65,8,65,6,"s"],[65,9,65,7],[65,12,65,10],[65,17,65,15],[66,8,66,6,"r"],[66,9,66,7],[66,12,66,10],[66,17,66,10,"_$$_REQUIRE"],[66,28,66,10],[66,29,66,10,"_dependencyMap"],[66,43,66,10],[66,58,66,17],[66,59,66,18],[66,60,66,19],[67,6,67,4],[68,4,68,2],[69,4,69,2],[69,11,69,9,"toDER"],[69,16,69,14],[69,17,69,15,"r"],[69,18,69,16],[69,20,69,18,"s"],[69,21,69,19],[69,22,69,20],[70,2,70,0],[71,2,72,0],[71,11,72,9,"toDER"],[71,16,72,14,"toDER"],[71,17,72,15,"r"],[71,18,72,16],[71,20,72,18,"s"],[71,21,72,19],[71,23,72,21],[72,4,73,2,"r"],[72,5,73,3],[72,8,73,6,"r"],[72,9,73,7],[72,10,73,8,"toArray"],[72,17,73,15],[72,18,73,16],[72,19,73,17],[73,4,74,2,"s"],[73,5,74,3],[73,8,74,6,"s"],[73,9,74,7],[73,10,74,8,"toArray"],[73,17,74,15],[73,18,74,16],[73,19,74,17],[75,4,76,2],[76,4,77,2],[76,8,77,6,"r"],[76,9,77,7],[76,10,77,8],[76,11,77,9],[76,12,77,10],[76,15,77,13],[76,19,77,17],[76,21,77,19],[77,6,77,21,"r"],[77,7,77,22],[77,10,77,25],[77,11,77,26],[77,12,77,27],[77,13,77,28],[77,14,77,29,"concat"],[77,20,77,35],[77,21,77,36,"r"],[77,22,77,37],[77,23,77,38],[78,4,77,40],[79,4,78,2],[79,8,78,6,"s"],[79,9,78,7],[79,10,78,8],[79,11,78,9],[79,12,78,10],[79,15,78,13],[79,19,78,17],[79,21,78,19],[80,6,78,21,"s"],[80,7,78,22],[80,10,78,25],[80,11,78,26],[80,12,78,27],[80,13,78,28],[80,14,78,29,"concat"],[80,20,78,35],[80,21,78,36,"s"],[80,22,78,37],[80,23,78,38],[81,4,78,40],[82,4,80,2],[82,8,80,6,"total"],[82,13,80,11],[82,16,80,14,"r"],[82,17,80,15],[82,18,80,16,"length"],[82,24,80,22],[82,27,80,25,"s"],[82,28,80,26],[82,29,80,27,"length"],[82,35,80,33],[82,38,80,36],[82,39,80,37],[83,4,81,2],[83,8,81,6,"res"],[83,11,81,9],[83,14,81,12],[83,15,82,4],[83,19,82,8],[83,21,82,10,"total"],[83,26,82,15],[83,28,82,17],[83,32,82,21],[83,34,82,23,"r"],[83,35,82,24],[83,36,82,25,"length"],[83,42,82,31],[83,43,83,3],[84,4,84,2,"res"],[84,7,84,5],[84,10,84,8,"res"],[84,13,84,11],[84,14,84,12,"concat"],[84,20,84,18],[84,21,84,19,"r"],[84,22,84,20],[84,24,84,22],[84,25,84,23],[84,29,84,27],[84,31,84,29,"s"],[84,32,84,30],[84,33,84,31,"length"],[84,39,84,37],[84,40,84,38],[84,42,84,40,"s"],[84,43,84,41],[84,44,84,42],[85,4,85,2],[85,11,85,9,"_$$_REQUIRE"],[85,22,85,9],[85,23,85,9,"_dependencyMap"],[85,37,85,9],[85,57,85,9,"Buffer"],[85,63,85,9],[85,64,85,16,"from"],[85,68,85,20],[85,69,85,21,"res"],[85,72,85,24],[85,73,85,25],[86,2,86,0],[87,2,88,0],[87,11,88,9,"getKey"],[87,17,88,15,"getKey"],[87,18,88,16,"x"],[87,19,88,17],[87,21,88,19,"q"],[87,22,88,20],[87,24,88,22,"hash"],[87,28,88,26],[87,30,88,28,"algo"],[87,34,88,32],[87,36,88,34],[88,4,89,2,"x"],[88,5,89,3],[88,8,89,6,"_$$_REQUIRE"],[88,19,89,6],[88,20,89,6,"_dependencyMap"],[88,34,89,6],[88,54,89,6,"Buffer"],[88,60,89,6],[88,61,89,13,"from"],[88,65,89,17],[88,66,89,18,"x"],[88,67,89,19],[88,68,89,20,"toArray"],[88,75,89,27],[88,76,89,28],[88,77,89,29],[88,78,89,30],[89,4,90,2],[89,8,90,6,"x"],[89,9,90,7],[89,10,90,8,"length"],[89,16,90,14],[89,19,90,17,"q"],[89,20,90,18],[89,21,90,19,"byteLength"],[89,31,90,29],[89,32,90,30],[89,33,90,31],[89,35,90,33],[90,6,91,4],[90,10,91,8,"zeros"],[90,15,91,13],[90,18,91,16,"_$$_REQUIRE"],[90,29,91,16],[90,30,91,16,"_dependencyMap"],[90,44,91,16],[90,64,91,16,"Buffer"],[90,70,91,16],[90,71,91,23,"alloc"],[90,76,91,28],[90,77,91,29,"q"],[90,78,91,30],[90,79,91,31,"byteLength"],[90,89,91,41],[90,90,91,42],[90,91,91,43],[90,94,91,46,"x"],[90,95,91,47],[90,96,91,48,"length"],[90,102,91,54],[90,103,91,55],[91,6,92,4,"x"],[91,7,92,5],[91,10,92,8,"_$$_REQUIRE"],[91,21,92,8],[91,22,92,8,"_dependencyMap"],[91,36,92,8],[91,56,92,8,"Buffer"],[91,62,92,8],[91,63,92,15,"concat"],[91,69,92,21],[91,70,92,22],[91,71,92,23,"zeros"],[91,76,92,28],[91,78,92,30,"x"],[91,79,92,31],[91,80,92,32],[91,81,92,33],[92,4,93,2],[93,4,94,2],[93,8,94,6,"hlen"],[93,12,94,10],[93,15,94,13,"hash"],[93,19,94,17],[93,20,94,18,"length"],[93,26,94,24],[94,4,95,2],[94,8,95,6,"hbits"],[94,13,95,11],[94,16,95,14,"bits2octets"],[94,27,95,25],[94,28,95,26,"hash"],[94,32,95,30],[94,34,95,32,"q"],[94,35,95,33],[94,36,95,34],[95,4,96,2],[95,8,96,6,"v"],[95,9,96,7],[95,12,96,10,"_$$_REQUIRE"],[95,23,96,10],[95,24,96,10,"_dependencyMap"],[95,38,96,10],[95,58,96,10,"Buffer"],[95,64,96,10],[95,65,96,17,"alloc"],[95,70,96,22],[95,71,96,23,"hlen"],[95,75,96,27],[95,76,96,28],[96,4,97,2,"v"],[96,5,97,3],[96,6,97,4,"fill"],[96,10,97,8],[96,11,97,9],[96,12,97,10],[96,13,97,11],[97,4,98,2],[97,8,98,6,"k"],[97,9,98,7],[97,12,98,10,"_$$_REQUIRE"],[97,23,98,10],[97,24,98,10,"_dependencyMap"],[97,38,98,10],[97,58,98,10,"Buffer"],[97,64,98,10],[97,65,98,17,"alloc"],[97,70,98,22],[97,71,98,23,"hlen"],[97,75,98,27],[97,76,98,28],[98,4,99,2,"k"],[98,5,99,3],[98,8,99,6,"_$$_REQUIRE"],[98,19,99,6],[98,20,99,6,"_dependencyMap"],[98,34,99,6],[98,54,99,17,"algo"],[98,58,99,21],[98,60,99,23,"k"],[98,61,99,24],[98,62,99,25],[98,63,99,26,"update"],[98,69,99,32],[98,70,99,33,"v"],[98,71,99,34],[98,72,99,35],[98,73,99,36,"update"],[98,79,99,42],[98,80,99,43,"_$$_REQUIRE"],[98,91,99,43],[98,92,99,43,"_dependencyMap"],[98,106,99,43],[98,126,99,43,"Buffer"],[98,132,99,43],[98,133,99,50,"from"],[98,137,99,54],[98,138,99,55],[98,139,99,56],[98,140,99,57],[98,141,99,58],[98,142,99,59],[98,143,99,60],[98,144,99,61,"update"],[98,150,99,67],[98,151,99,68,"x"],[98,152,99,69],[98,153,99,70],[98,154,99,71,"update"],[98,160,99,77],[98,161,99,78,"hbits"],[98,166,99,83],[98,167,99,84],[98,168,99,85,"digest"],[98,174,99,91],[98,175,99,92],[98,176,99,93],[99,4,100,2,"v"],[99,5,100,3],[99,8,100,6,"_$$_REQUIRE"],[99,19,100,6],[99,20,100,6,"_dependencyMap"],[99,34,100,6],[99,54,100,17,"algo"],[99,58,100,21],[99,60,100,23,"k"],[99,61,100,24],[99,62,100,25],[99,63,100,26,"update"],[99,69,100,32],[99,70,100,33,"v"],[99,71,100,34],[99,72,100,35],[99,73,100,36,"digest"],[99,79,100,42],[99,80,100,43],[99,81,100,44],[100,4,101,2,"k"],[100,5,101,3],[100,8,101,6,"_$$_REQUIRE"],[100,19,101,6],[100,20,101,6,"_dependencyMap"],[100,34,101,6],[100,54,101,17,"algo"],[100,58,101,21],[100,60,101,23,"k"],[100,61,101,24],[100,62,101,25],[100,63,101,26,"update"],[100,69,101,32],[100,70,101,33,"v"],[100,71,101,34],[100,72,101,35],[100,73,101,36,"update"],[100,79,101,42],[100,80,101,43,"_$$_REQUIRE"],[100,91,101,43],[100,92,101,43,"_dependencyMap"],[100,106,101,43],[100,126,101,43,"Buffer"],[100,132,101,43],[100,133,101,50,"from"],[100,137,101,54],[100,138,101,55],[100,139,101,56],[100,140,101,57],[100,141,101,58],[100,142,101,59],[100,143,101,60],[100,144,101,61,"update"],[100,150,101,67],[100,151,101,68,"x"],[100,152,101,69],[100,153,101,70],[100,154,101,71,"update"],[100,160,101,77],[100,161,101,78,"hbits"],[100,166,101,83],[100,167,101,84],[100,168,101,85,"digest"],[100,174,101,91],[100,175,101,92],[100,176,101,93],[101,4,102,2,"v"],[101,5,102,3],[101,8,102,6,"_$$_REQUIRE"],[101,19,102,6],[101,20,102,6,"_dependencyMap"],[101,34,102,6],[101,54,102,17,"algo"],[101,58,102,21],[101,60,102,23,"k"],[101,61,102,24],[101,62,102,25],[101,63,102,26,"update"],[101,69,102,32],[101,70,102,33,"v"],[101,71,102,34],[101,72,102,35],[101,73,102,36,"digest"],[101,79,102,42],[101,80,102,43],[101,81,102,44],[102,4,103,2],[102,11,103,9],[103,6,103,11,"k"],[103,7,103,12],[103,9,103,14,"k"],[103,10,103,15],[104,6,103,17,"v"],[104,7,103,18],[104,9,103,20,"v"],[105,4,103,22],[105,5,103,23],[106,2,104,0],[107,2,106,0],[107,11,106,9,"bits2int"],[107,19,106,17,"bits2int"],[107,20,106,18,"obits"],[107,25,106,23],[107,27,106,25,"q"],[107,28,106,26],[107,30,106,28],[108,4,107,2],[108,8,107,6,"bits"],[108,12,107,10],[108,15,107,13],[108,20,107,13,"_$$_REQUIRE"],[108,31,107,13],[108,32,107,13,"_dependencyMap"],[108,46,107,13],[108,61,107,20,"obits"],[108,66,107,25],[108,67,107,26],[109,4,108,2],[109,8,108,6,"shift"],[109,13,108,11],[109,16,108,14],[109,17,108,15,"obits"],[109,22,108,20],[109,23,108,21,"length"],[109,29,108,27],[109,33,108,31],[109,34,108,32],[109,38,108,36,"q"],[109,39,108,37],[109,40,108,38,"bitLength"],[109,49,108,47],[109,50,108,48],[109,51,108,49],[110,4,109,2],[110,8,109,6,"shift"],[110,13,109,11],[110,16,109,14],[110,17,109,15],[110,19,109,17],[111,6,109,19,"bits"],[111,10,109,23],[111,11,109,24,"ishrn"],[111,16,109,29],[111,17,109,30,"shift"],[111,22,109,35],[111,23,109,36],[112,4,109,38],[113,4,110,2],[113,11,110,9,"bits"],[113,15,110,13],[114,2,111,0],[115,2,113,0],[115,11,113,9,"bits2octets"],[115,22,113,20,"bits2octets"],[115,23,113,21,"bits"],[115,27,113,25],[115,29,113,27,"q"],[115,30,113,28],[115,32,113,30],[116,4,114,2,"bits"],[116,8,114,6],[116,11,114,9,"bits2int"],[116,19,114,17],[116,20,114,18,"bits"],[116,24,114,22],[116,26,114,24,"q"],[116,27,114,25],[116,28,114,26],[117,4,115,2,"bits"],[117,8,115,6],[117,11,115,9,"bits"],[117,15,115,13],[117,16,115,14,"mod"],[117,19,115,17],[117,20,115,18,"q"],[117,21,115,19],[117,22,115,20],[118,4,116,2],[118,8,116,6,"out"],[118,11,116,9],[118,14,116,12,"_$$_REQUIRE"],[118,25,116,12],[118,26,116,12,"_dependencyMap"],[118,40,116,12],[118,60,116,12,"Buffer"],[118,66,116,12],[118,67,116,19,"from"],[118,71,116,23],[118,72,116,24,"bits"],[118,76,116,28],[118,77,116,29,"toArray"],[118,84,116,36],[118,85,116,37],[118,86,116,38],[118,87,116,39],[119,4,117,2],[119,8,117,6,"out"],[119,11,117,9],[119,12,117,10,"length"],[119,18,117,16],[119,21,117,19,"q"],[119,22,117,20],[119,23,117,21,"byteLength"],[119,33,117,31],[119,34,117,32],[119,35,117,33],[119,37,117,35],[120,6,118,4],[120,10,118,8,"zeros"],[120,15,118,13],[120,18,118,16,"_$$_REQUIRE"],[120,29,118,16],[120,30,118,16,"_dependencyMap"],[120,44,118,16],[120,64,118,16,"Buffer"],[120,70,118,16],[120,71,118,23,"alloc"],[120,76,118,28],[120,77,118,29,"q"],[120,78,118,30],[120,79,118,31,"byteLength"],[120,89,118,41],[120,90,118,42],[120,91,118,43],[120,94,118,46,"out"],[120,97,118,49],[120,98,118,50,"length"],[120,104,118,56],[120,105,118,57],[121,6,119,4,"out"],[121,9,119,7],[121,12,119,10,"_$$_REQUIRE"],[121,23,119,10],[121,24,119,10,"_dependencyMap"],[121,38,119,10],[121,58,119,10,"Buffer"],[121,64,119,10],[121,65,119,17,"concat"],[121,71,119,23],[121,72,119,24],[121,73,119,25,"zeros"],[121,78,119,30],[121,80,119,32,"out"],[121,83,119,35],[121,84,119,36],[121,85,119,37],[122,4,120,2],[123,4,121,2],[123,11,121,9,"out"],[123,14,121,12],[124,2,122,0],[125,2,124,0],[125,11,124,9,"makeKey"],[125,18,124,16,"makeKey"],[125,19,124,17,"q"],[125,20,124,18],[125,22,124,20,"kv"],[125,24,124,22],[125,26,124,24,"algo"],[125,30,124,28],[125,32,124,30],[126,4,125,2],[126,8,125,6,"t"],[126,9,125,7],[127,4,126,2],[127,8,126,6,"k"],[127,9,126,7],[128,4,128,2],[128,7,128,5],[129,6,129,4,"t"],[129,7,129,5],[129,10,129,8,"_$$_REQUIRE"],[129,21,129,8],[129,22,129,8,"_dependencyMap"],[129,36,129,8],[129,56,129,8,"Buffer"],[129,62,129,8],[129,63,129,15,"alloc"],[129,68,129,20],[129,69,129,21],[129,70,129,22],[129,71,129,23],[130,6,131,4],[130,13,131,11,"t"],[130,14,131,12],[130,15,131,13,"length"],[130,21,131,19],[130,24,131,22],[130,25,131,23],[130,28,131,26,"q"],[130,29,131,27],[130,30,131,28,"bitLength"],[130,39,131,37],[130,40,131,38],[130,41,131,39],[130,43,131,41],[131,8,132,6,"kv"],[131,10,132,8],[131,11,132,9,"v"],[131,12,132,10],[131,15,132,13,"_$$_REQUIRE"],[131,26,132,13],[131,27,132,13,"_dependencyMap"],[131,41,132,13],[131,61,132,24,"algo"],[131,65,132,28],[131,67,132,30,"kv"],[131,69,132,32],[131,70,132,33,"k"],[131,71,132,34],[131,72,132,35],[131,73,132,36,"update"],[131,79,132,42],[131,80,132,43,"kv"],[131,82,132,45],[131,83,132,46,"v"],[131,84,132,47],[131,85,132,48],[131,86,132,49,"digest"],[131,92,132,55],[131,93,132,56],[131,94,132,57],[132,8,133,6,"t"],[132,9,133,7],[132,12,133,10,"_$$_REQUIRE"],[132,23,133,10],[132,24,133,10,"_dependencyMap"],[132,38,133,10],[132,58,133,10,"Buffer"],[132,64,133,10],[132,65,133,17,"concat"],[132,71,133,23],[132,72,133,24],[132,73,133,25,"t"],[132,74,133,26],[132,76,133,28,"kv"],[132,78,133,30],[132,79,133,31,"v"],[132,80,133,32],[132,81,133,33],[132,82,133,34],[133,6,134,4],[134,6,136,4,"k"],[134,7,136,5],[134,10,136,8,"bits2int"],[134,18,136,16],[134,19,136,17,"t"],[134,20,136,18],[134,22,136,20,"q"],[134,23,136,21],[134,24,136,22],[135,6,137,4,"kv"],[135,8,137,6],[135,9,137,7,"k"],[135,10,137,8],[135,13,137,11,"_$$_REQUIRE"],[135,24,137,11],[135,25,137,11,"_dependencyMap"],[135,39,137,11],[135,59,137,22,"algo"],[135,63,137,26],[135,65,137,28,"kv"],[135,67,137,30],[135,68,137,31,"k"],[135,69,137,32],[135,70,137,33],[135,71,137,34,"update"],[135,77,137,40],[135,78,137,41,"kv"],[135,80,137,43],[135,81,137,44,"v"],[135,82,137,45],[135,83,137,46],[135,84,137,47,"update"],[135,90,137,53],[135,91,137,54,"_$$_REQUIRE"],[135,102,137,54],[135,103,137,54,"_dependencyMap"],[135,117,137,54],[135,137,137,54,"Buffer"],[135,143,137,54],[135,144,137,61,"from"],[135,148,137,65],[135,149,137,66],[135,150,137,67],[135,151,137,68],[135,152,137,69],[135,153,137,70],[135,154,137,71],[135,155,137,72,"digest"],[135,161,137,78],[135,162,137,79],[135,163,137,80],[136,6,138,4,"kv"],[136,8,138,6],[136,9,138,7,"v"],[136,10,138,8],[136,13,138,11,"_$$_REQUIRE"],[136,24,138,11],[136,25,138,11,"_dependencyMap"],[136,39,138,11],[136,59,138,22,"algo"],[136,63,138,26],[136,65,138,28,"kv"],[136,67,138,30],[136,68,138,31,"k"],[136,69,138,32],[136,70,138,33],[136,71,138,34,"update"],[136,77,138,40],[136,78,138,41,"kv"],[136,80,138,43],[136,81,138,44,"v"],[136,82,138,45],[136,83,138,46],[136,84,138,47,"digest"],[136,90,138,53],[136,91,138,54],[136,92,138,55],[137,4,139,2],[137,5,139,3],[137,13,139,11,"k"],[137,14,139,12],[137,15,139,13,"cmp"],[137,18,139,16],[137,19,139,17,"q"],[137,20,139,18],[137,21,139,19],[137,26,139,24],[137,27,139,25],[137,28,139,26],[138,4,141,2],[138,11,141,9,"k"],[138,12,141,10],[139,2,142,0],[140,2,144,0],[140,11,144,9,"makeR"],[140,16,144,14,"makeR"],[140,17,144,15,"g"],[140,18,144,16],[140,20,144,18,"k"],[140,21,144,19],[140,23,144,21,"p"],[140,24,144,22],[140,26,144,24,"q"],[140,27,144,25],[140,29,144,27],[141,4,145,2],[141,11,145,9,"g"],[141,12,145,10],[141,13,145,11,"toRed"],[141,18,145,16],[141,19,145,17,"_$$_REQUIRE"],[141,30,145,17],[141,31,145,17,"_dependencyMap"],[141,45,145,17],[141,59,145,20,"mont"],[141,63,145,24],[141,64,145,25,"p"],[141,65,145,26],[141,66,145,27],[141,67,145,28],[141,68,145,29,"redPow"],[141,74,145,35],[141,75,145,36,"k"],[141,76,145,37],[141,77,145,38],[141,78,145,39,"fromRed"],[141,85,145,46],[141,86,145,47],[141,87,145,48],[141,88,145,49,"mod"],[141,91,145,52],[141,92,145,53,"q"],[141,93,145,54],[141,94,145,55],[142,2,146,0],[143,2,148,0,"module"],[143,8,148,6],[143,9,148,7,"exports"],[143,16,148,14],[143,19,148,17,"sign"],[143,23,148,21],[144,2,149,0,"module"],[144,8,149,6],[144,9,149,7,"exports"],[144,16,149,14],[144,17,149,15,"getKey"],[144,23,149,21],[144,26,149,24,"getKey"],[144,32,149,30],[145,2,150,0,"module"],[145,8,150,6],[145,9,150,7,"exports"],[145,16,150,14],[145,17,150,15,"makeKey"],[145,24,150,22],[145,27,150,25,"makeKey"],[145,34,150,32],[146,0,150,33],[146,3]],"functionMap":{"names":["<global>","sign","ecSign","dsaSign","toDER","getKey","bits2int","bits2octets","makeKey","makeR"],"mappings":"AAA;ACa;CDuB;AEE;CFS;AGE;CHoB;AIE;CJc;AKE;CLgB;AME;CNK;AOE;CPS;AQE;CRkB;ASE;CTE"}},"type":"js/module"}]}