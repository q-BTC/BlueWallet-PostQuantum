{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":27,"index":405},"end":{"line":14,"column":54,"index":432}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  function makeConverter(TYPE_BYTE) {\n    function decode(keyVal) {\n      if (keyVal.key[0] !== TYPE_BYTE || keyVal.key.length !== 1) {\n        throw new Error('Decode Error: could not decode tapInternalKey with key 0x' + tools.toHex(keyVal.key));\n      }\n      if (keyVal.value.length !== 32) {\n        throw new Error('Decode Error: tapInternalKey not a 32-byte x-only pubkey');\n      }\n      return keyVal.value;\n    }\n    function encode(value) {\n      var key = Uint8Array.from([TYPE_BYTE]);\n      return {\n        key: key,\n        value: value\n      };\n    }\n    var expected = 'Uint8Array';\n    function check(data) {\n      return data instanceof Uint8Array && data.length === 32;\n    }\n    function canAdd(currentData, newData) {\n      return !!currentData && !!newData && currentData.tapInternalKey === undefined;\n    }\n    return {\n      decode: decode,\n      encode: encode,\n      check: check,\n      expected: expected,\n      canAdd: canAdd\n    };\n  }\n  exports.makeConverter = makeConverter;\n});","lineCount":48,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importStar"],[4,18,2,16],[4,21,3,3],[4,25,3,7],[4,29,3,11],[4,33,3,15],[4,34,3,16,"__importStar"],[4,46,3,28],[4,50,4,2],[4,60,4,11,"mod"],[4,63,4,14],[4,65,4,16],[5,4,5,4],[5,8,5,8,"mod"],[5,11,5,11],[5,15,5,15,"mod"],[5,18,5,18],[5,19,5,19,"__esModule"],[5,29,5,29],[5,31,5,31],[5,38,5,38,"mod"],[5,41,5,41],[6,4,6,4],[6,8,6,8,"result"],[6,14,6,14],[6,17,6,17],[6,18,6,18],[6,19,6,19],[7,4,7,4],[7,8,7,8,"mod"],[7,11,7,11],[7,15,7,15],[7,19,7,19],[7,21,8,6],[7,26,8,11],[7,30,8,15,"k"],[7,31,8,16],[7,35,8,20,"mod"],[7,38,8,23],[7,40,9,8],[7,44,9,12,"Object"],[7,50,9,18],[7,51,9,19,"hasOwnProperty"],[7,65,9,33],[7,66,9,34,"call"],[7,70,9,38],[7,71,9,39,"mod"],[7,74,9,42],[7,76,9,44,"k"],[7,77,9,45],[7,78,9,46],[7,80,9,48,"result"],[7,86,9,54],[7,87,9,55,"k"],[7,88,9,56],[7,89,9,57],[7,92,9,60,"mod"],[7,95,9,63],[7,96,9,64,"k"],[7,97,9,65],[7,98,9,66],[8,4,10,4,"result"],[8,10,10,10],[8,11,10,11],[8,20,10,20],[8,21,10,21],[8,24,10,24,"mod"],[8,27,10,27],[9,4,11,4],[9,11,11,11,"result"],[9,17,11,17],[10,2,12,2],[10,3,12,3],[11,2,13,0,"Object"],[11,8,13,6],[11,9,13,7,"defineProperty"],[11,23,13,21],[11,24,13,22,"exports"],[11,31,13,29],[11,33,13,31],[11,45,13,43],[11,47,13,45],[12,4,13,47,"value"],[12,9,13,52],[12,11,13,54],[13,2,13,59],[13,3,13,60],[13,4,13,61],[14,2,14,0],[14,6,14,6,"tools"],[14,11,14,11],[14,14,14,14,"__importStar"],[14,26,14,26],[14,27,14,27,"require"],[14,38,14,34],[14,39,14,34,"_dependencyMap"],[14,53,14,34],[14,76,14,53],[14,77,14,54],[14,78,14,55],[15,2,15,0],[15,11,15,9,"makeConverter"],[15,24,15,22,"makeConverter"],[15,25,15,23,"TYPE_BYTE"],[15,34,15,32],[15,36,15,34],[16,4,16,2],[16,13,16,11,"decode"],[16,19,16,17,"decode"],[16,20,16,18,"keyVal"],[16,26,16,24],[16,28,16,26],[17,6,17,4],[17,10,17,8,"keyVal"],[17,16,17,14],[17,17,17,15,"key"],[17,20,17,18],[17,21,17,19],[17,22,17,20],[17,23,17,21],[17,28,17,26,"TYPE_BYTE"],[17,37,17,35],[17,41,17,39,"keyVal"],[17,47,17,45],[17,48,17,46,"key"],[17,51,17,49],[17,52,17,50,"length"],[17,58,17,56],[17,63,17,61],[17,64,17,62],[17,66,17,64],[18,8,18,6],[18,14,18,12],[18,18,18,16,"Error"],[18,23,18,21],[18,24,19,8],[18,83,19,67],[18,86,20,10,"tools"],[18,91,20,15],[18,92,20,16,"toHex"],[18,97,20,21],[18,98,20,22,"keyVal"],[18,104,20,28],[18,105,20,29,"key"],[18,108,20,32],[18,109,21,6],[18,110,21,7],[19,6,22,4],[20,6,23,4],[20,10,23,8,"keyVal"],[20,16,23,14],[20,17,23,15,"value"],[20,22,23,20],[20,23,23,21,"length"],[20,29,23,27],[20,34,23,32],[20,36,23,34],[20,38,23,36],[21,8,24,6],[21,14,24,12],[21,18,24,16,"Error"],[21,23,24,21],[21,24,25,8],[21,82,26,6],[21,83,26,7],[22,6,27,4],[23,6,28,4],[23,13,28,11,"keyVal"],[23,19,28,17],[23,20,28,18,"value"],[23,25,28,23],[24,4,29,2],[25,4,30,2],[25,13,30,11,"encode"],[25,19,30,17,"encode"],[25,20,30,18,"value"],[25,25,30,23],[25,27,30,25],[26,6,31,4],[26,10,31,10,"key"],[26,13,31,13],[26,16,31,16,"Uint8Array"],[26,26,31,26],[26,27,31,27,"from"],[26,31,31,31],[26,32,31,32],[26,33,31,33,"TYPE_BYTE"],[26,42,31,42],[26,43,31,43],[26,44,31,44],[27,6,32,4],[27,13,32,11],[28,8,32,13,"key"],[28,11,32,16],[28,13,32,13,"key"],[28,16,32,16],[29,8,32,18,"value"],[29,13,32,23],[29,15,32,18,"value"],[30,6,32,24],[30,7,32,25],[31,4,33,2],[32,4,34,2],[32,8,34,8,"expected"],[32,16,34,16],[32,19,34,19],[32,31,34,31],[33,4,35,2],[33,13,35,11,"check"],[33,18,35,16,"check"],[33,19,35,17,"data"],[33,23,35,21],[33,25,35,23],[34,6,36,4],[34,13,36,11,"data"],[34,17,36,15],[34,29,36,27,"Uint8Array"],[34,39,36,37],[34,43,36,41,"data"],[34,47,36,45],[34,48,36,46,"length"],[34,54,36,52],[34,59,36,57],[34,61,36,59],[35,4,37,2],[36,4,38,2],[36,13,38,11,"canAdd"],[36,19,38,17,"canAdd"],[36,20,38,18,"currentData"],[36,31,38,29],[36,33,38,31,"newData"],[36,40,38,38],[36,42,38,40],[37,6,39,4],[37,13,40,6],[37,14,40,7],[37,15,40,8,"currentData"],[37,26,40,19],[37,30,40,23],[37,31,40,24],[37,32,40,25,"newData"],[37,39,40,32],[37,43,40,36,"currentData"],[37,54,40,47],[37,55,40,48,"tapInternalKey"],[37,69,40,62],[37,74,40,67,"undefined"],[37,83,40,76],[38,4,42,2],[39,4,43,2],[39,11,43,9],[40,6,44,4,"decode"],[40,12,44,10],[40,14,44,4,"decode"],[40,20,44,10],[41,6,45,4,"encode"],[41,12,45,10],[41,14,45,4,"encode"],[41,20,45,10],[42,6,46,4,"check"],[42,11,46,9],[42,13,46,4,"check"],[42,18,46,9],[43,6,47,4,"expected"],[43,14,47,12],[43,16,47,4,"expected"],[43,24,47,12],[44,6,48,4,"canAdd"],[44,12,48,10],[44,14,48,4,"canAdd"],[45,4,49,2],[45,5,49,3],[46,2,50,0],[47,2,51,0,"exports"],[47,9,51,7],[47,10,51,8,"makeConverter"],[47,23,51,21],[47,26,51,24,"makeConverter"],[47,39,51,37],[48,0,51,38],[48,3]],"functionMap":{"names":["<global>","<anonymous>","makeConverter","decode","encode","check","canAdd"],"mappings":"AAA;ECG;GDQ;AEG;ECC;GDa;EEC;GFG;EGE;GHE;EIC;GJI;CFQ"}},"type":"js/module"}]}