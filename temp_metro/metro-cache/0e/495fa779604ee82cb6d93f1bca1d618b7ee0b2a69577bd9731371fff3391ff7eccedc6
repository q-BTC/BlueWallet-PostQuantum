{"dependencies":[{"name":"react-native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":21,"index":481},"end":{"line":14,"column":44,"index":504}}],"key":"lGv6jwyWtmgghjjYvCX5yhM2Jt0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var __assign = this && this.__assign || function () {\n    __assign = Object.assign || function (t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n    };\n    return __assign.apply(this, arguments);\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var react_native_1 = _$$_REQUIRE(_dependencyMap[0], \"react-native\");\n  var bridge = react_native_1.NativeModules.ReactNativeBiometrics;\n  /**\n   * Enum for touch id sensor type\n   */\n  exports.TouchID = 'TouchID';\n  /**\n   * Enum for face id sensor type\n   */\n  exports.FaceID = 'FaceID';\n  /**\n   * Enum for generic biometrics (this is the only value available on android)\n   */\n  exports.Biometrics = 'Biometrics';\n  exports.BiometryTypes = {\n    TouchID: exports.TouchID,\n    FaceID: exports.FaceID,\n    Biometrics: exports.Biometrics\n  };\n  var ReactNativeBiometricsLegacy;\n  (function (ReactNativeBiometricsLegacy) {\n    /**\n     * Returns promise that resolves to an object with object.biometryType = Biometrics | TouchID | FaceID\n     * @returns {Promise<Object>} Promise that resolves to an object with details about biometrics available\n     */\n    function isSensorAvailable() {\n      return new ReactNativeBiometrics().isSensorAvailable();\n    }\n    ReactNativeBiometricsLegacy.isSensorAvailable = isSensorAvailable;\n    /**\n     * Creates a public private key pair,returns promise that resolves to\n     * an object with object.publicKey, which is the public key of the newly generated key pair\n     * @returns {Promise<Object>}  Promise that resolves to object with details about the newly generated public key\n     */\n    function createKeys() {\n      return new ReactNativeBiometrics().createKeys();\n    }\n    ReactNativeBiometricsLegacy.createKeys = createKeys;\n    /**\n     * Returns promise that resolves to an object with object.keysExists = true | false\n     * indicating if the keys were found to exist or not\n     * @returns {Promise<Object>} Promise that resolves to object with details aobut the existence of keys\n     */\n    function biometricKeysExist() {\n      return new ReactNativeBiometrics().biometricKeysExist();\n    }\n    ReactNativeBiometricsLegacy.biometricKeysExist = biometricKeysExist;\n    /**\n     * Returns promise that resolves to an object with true | false\n     * indicating if the keys were properly deleted\n     * @returns {Promise<Object>} Promise that resolves to an object with details about the deletion\n     */\n    function deleteKeys() {\n      return new ReactNativeBiometrics().deleteKeys();\n    }\n    ReactNativeBiometricsLegacy.deleteKeys = deleteKeys;\n    /**\n     * Prompts user with biometrics dialog using the passed in prompt message and\n     * returns promise that resolves to an object with object.signature,\n     * which is cryptographic signature of the payload\n     * @param {Object} createSignatureOptions\n     * @param {string} createSignatureOptions.promptMessage\n     * @param {string} createSignatureOptions.payload\n     * @returns {Promise<Object>}  Promise that resolves to an object cryptographic signature details\n     */\n    function createSignature(createSignatureOptions) {\n      return new ReactNativeBiometrics().createSignature(createSignatureOptions);\n    }\n    ReactNativeBiometricsLegacy.createSignature = createSignature;\n    /**\n     * Prompts user with biometrics dialog using the passed in prompt message and\n     * returns promise that resolves to an object with object.success = true if the user passes,\n     * object.success = false if the user cancels, and rejects if anything fails\n     * @param {Object} simplePromptOptions\n     * @param {string} simplePromptOptions.promptMessage\n     * @param {string} simplePromptOptions.fallbackPromptMessage\n     * @returns {Promise<Object>}  Promise that resolves an object with details about the biometrics result\n     */\n    function simplePrompt(simplePromptOptions) {\n      return new ReactNativeBiometrics().simplePrompt(simplePromptOptions);\n    }\n    ReactNativeBiometricsLegacy.simplePrompt = simplePrompt;\n  })(ReactNativeBiometricsLegacy = exports.ReactNativeBiometricsLegacy || (exports.ReactNativeBiometricsLegacy = {}));\n  var ReactNativeBiometrics = /** @class */function () {\n    /**\n     * @param {Object} rnBiometricsOptions\n     * @param {boolean} rnBiometricsOptions.allowDeviceCredentials\n     */\n    function ReactNativeBiometrics(rnBiometricsOptions) {\n      var _a, _b;\n      this.allowDeviceCredentials = false;\n      var allowDeviceCredentials = (_b = (_a = rnBiometricsOptions) === null || _a === void 0 ? void 0 : _a.allowDeviceCredentials, _b !== null && _b !== void 0 ? _b : false);\n      this.allowDeviceCredentials = allowDeviceCredentials;\n    }\n    /**\n     * Returns promise that resolves to an object with object.biometryType = Biometrics | TouchID | FaceID\n     * @returns {Promise<Object>} Promise that resolves to an object with details about biometrics available\n     */\n    ReactNativeBiometrics.prototype.isSensorAvailable = function () {\n      return bridge.isSensorAvailable({\n        allowDeviceCredentials: this.allowDeviceCredentials\n      });\n    };\n    /**\n     * Creates a public private key pair,returns promise that resolves to\n     * an object with object.publicKey, which is the public key of the newly generated key pair\n     * @returns {Promise<Object>}  Promise that resolves to object with details about the newly generated public key\n     */\n    ReactNativeBiometrics.prototype.createKeys = function () {\n      return bridge.createKeys({\n        allowDeviceCredentials: this.allowDeviceCredentials\n      });\n    };\n    /**\n     * Returns promise that resolves to an object with object.keysExists = true | false\n     * indicating if the keys were found to exist or not\n     * @returns {Promise<Object>} Promise that resolves to object with details aobut the existence of keys\n     */\n    ReactNativeBiometrics.prototype.biometricKeysExist = function () {\n      return bridge.biometricKeysExist();\n    };\n    /**\n     * Returns promise that resolves to an object with true | false\n     * indicating if the keys were properly deleted\n     * @returns {Promise<Object>} Promise that resolves to an object with details about the deletion\n     */\n    ReactNativeBiometrics.prototype.deleteKeys = function () {\n      return bridge.deleteKeys();\n    };\n    /**\n     * Prompts user with biometrics dialog using the passed in prompt message and\n     * returns promise that resolves to an object with object.signature,\n     * which is cryptographic signature of the payload\n     * @param {Object} createSignatureOptions\n     * @param {string} createSignatureOptions.promptMessage\n     * @param {string} createSignatureOptions.payload\n     * @returns {Promise<Object>}  Promise that resolves to an object cryptographic signature details\n     */\n    ReactNativeBiometrics.prototype.createSignature = function (createSignatureOptions) {\n      var _a;\n      createSignatureOptions.cancelButtonText = (_a = createSignatureOptions.cancelButtonText, _a !== null && _a !== void 0 ? _a : 'Cancel');\n      return bridge.createSignature(__assign({\n        allowDeviceCredentials: this.allowDeviceCredentials\n      }, createSignatureOptions));\n    };\n    /**\n     * Prompts user with biometrics dialog using the passed in prompt message and\n     * returns promise that resolves to an object with object.success = true if the user passes,\n     * object.success = false if the user cancels, and rejects if anything fails\n     * @param {Object} simplePromptOptions\n     * @param {string} simplePromptOptions.promptMessage\n     * @param {string} simplePromptOptions.fallbackPromptMessage\n     * @returns {Promise<Object>}  Promise that resolves an object with details about the biometrics result\n     */\n    ReactNativeBiometrics.prototype.simplePrompt = function (simplePromptOptions) {\n      var _a, _b;\n      simplePromptOptions.cancelButtonText = (_a = simplePromptOptions.cancelButtonText, _a !== null && _a !== void 0 ? _a : 'Cancel');\n      simplePromptOptions.fallbackPromptMessage = (_b = simplePromptOptions.fallbackPromptMessage, _b !== null && _b !== void 0 ? _b : 'Use Passcode');\n      return bridge.simplePrompt(__assign({\n        allowDeviceCredentials: this.allowDeviceCredentials\n      }, simplePromptOptions));\n    };\n    return ReactNativeBiometrics;\n  }();\n  exports.default = ReactNativeBiometrics;\n});","lineCount":182,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__assign"],[4,14,2,12],[4,17,2,16],[4,21,2,20],[4,25,2,24],[4,29,2,28],[4,30,2,29,"__assign"],[4,38,2,37],[4,42,2,42],[4,54,2,54],[5,4,3,4,"__assign"],[5,12,3,12],[5,15,3,15,"Object"],[5,21,3,21],[5,22,3,22,"assign"],[5,28,3,28],[5,32,3,32],[5,42,3,41,"t"],[5,43,3,42],[5,45,3,44],[6,6,4,8],[6,11,4,13],[6,15,4,17,"s"],[6,16,4,18],[6,18,4,20,"i"],[6,19,4,21],[6,22,4,24],[6,23,4,25],[6,25,4,27,"n"],[6,26,4,28],[6,29,4,31,"arguments"],[6,38,4,40],[6,39,4,41,"length"],[6,45,4,47],[6,47,4,49,"i"],[6,48,4,50],[6,51,4,53,"n"],[6,52,4,54],[6,54,4,56,"i"],[6,55,4,57],[6,57,4,59],[6,59,4,61],[7,8,5,12,"s"],[7,9,5,13],[7,12,5,16,"arguments"],[7,21,5,25],[7,22,5,26,"i"],[7,23,5,27],[7,24,5,28],[8,8,6,12],[8,13,6,17],[8,17,6,21,"p"],[8,18,6,22],[8,22,6,26,"s"],[8,23,6,27],[8,25,6,29],[8,29,6,33,"Object"],[8,35,6,39],[8,36,6,40,"prototype"],[8,45,6,49],[8,46,6,50,"hasOwnProperty"],[8,60,6,64],[8,61,6,65,"call"],[8,65,6,69],[8,66,6,70,"s"],[8,67,6,71],[8,69,6,73,"p"],[8,70,6,74],[8,71,6,75],[8,73,7,16,"t"],[8,74,7,17],[8,75,7,18,"p"],[8,76,7,19],[8,77,7,20],[8,80,7,23,"s"],[8,81,7,24],[8,82,7,25,"p"],[8,83,7,26],[8,84,7,27],[9,6,8,8],[10,6,9,8],[10,13,9,15,"t"],[10,14,9,16],[11,4,10,4],[11,5,10,5],[12,4,11,4],[12,11,11,11,"__assign"],[12,19,11,19],[12,20,11,20,"apply"],[12,25,11,25],[12,26,11,26],[12,30,11,30],[12,32,11,32,"arguments"],[12,41,11,41],[12,42,11,42],[13,2,12,0],[13,3,12,1],[14,2,13,0,"Object"],[14,8,13,6],[14,9,13,7,"defineProperty"],[14,23,13,21],[14,24,13,22,"exports"],[14,31,13,29],[14,33,13,31],[14,45,13,43],[14,47,13,45],[15,4,13,47,"value"],[15,9,13,52],[15,11,13,54],[16,2,13,59],[16,3,13,60],[16,4,13,61],[17,2,14,0],[17,6,14,4,"react_native_1"],[17,20,14,18],[17,23,14,21,"require"],[17,34,14,28],[17,35,14,28,"_dependencyMap"],[17,49,14,28],[17,68,14,43],[17,69,14,44],[18,2,15,0],[18,6,15,4,"bridge"],[18,12,15,10],[18,15,15,13,"react_native_1"],[18,29,15,27],[18,30,15,28,"NativeModules"],[18,43,15,41],[18,44,15,42,"ReactNativeBiometrics"],[18,65,15,63],[19,2,16,0],[20,0,17,0],[21,0,18,0],[22,2,19,0,"exports"],[22,9,19,7],[22,10,19,8,"TouchID"],[22,17,19,15],[22,20,19,18],[22,29,19,27],[23,2,20,0],[24,0,21,0],[25,0,22,0],[26,2,23,0,"exports"],[26,9,23,7],[26,10,23,8,"FaceID"],[26,16,23,14],[26,19,23,17],[26,27,23,25],[27,2,24,0],[28,0,25,0],[29,0,26,0],[30,2,27,0,"exports"],[30,9,27,7],[30,10,27,8,"Biometrics"],[30,20,27,18],[30,23,27,21],[30,35,27,33],[31,2,28,0,"exports"],[31,9,28,7],[31,10,28,8,"BiometryTypes"],[31,23,28,21],[31,26,28,24],[32,4,29,4,"TouchID"],[32,11,29,11],[32,13,29,13,"exports"],[32,20,29,20],[32,21,29,21,"TouchID"],[32,28,29,28],[33,4,30,4,"FaceID"],[33,10,30,10],[33,12,30,12,"exports"],[33,19,30,19],[33,20,30,20,"FaceID"],[33,26,30,26],[34,4,31,4,"Biometrics"],[34,14,31,14],[34,16,31,16,"exports"],[34,23,31,23],[34,24,31,24,"Biometrics"],[35,2,32,0],[35,3,32,1],[36,2,33,0],[36,6,33,4,"ReactNativeBiometricsLegacy"],[36,33,33,31],[37,2,34,0],[37,3,34,1],[37,13,34,11,"ReactNativeBiometricsLegacy"],[37,40,34,38],[37,42,34,40],[38,4,35,4],[39,0,36,0],[40,0,37,0],[41,0,38,0],[42,4,39,4],[42,13,39,13,"isSensorAvailable"],[42,30,39,30,"isSensorAvailable"],[42,31,39,30],[42,33,39,33],[43,6,40,8],[43,13,40,15],[43,17,40,19,"ReactNativeBiometrics"],[43,38,40,40],[43,39,40,41],[43,40,40,42],[43,41,40,43,"isSensorAvailable"],[43,58,40,60],[43,59,40,61],[43,60,40,62],[44,4,41,4],[45,4,42,4,"ReactNativeBiometricsLegacy"],[45,31,42,31],[45,32,42,32,"isSensorAvailable"],[45,49,42,49],[45,52,42,52,"isSensorAvailable"],[45,69,42,69],[46,4,43,4],[47,0,44,0],[48,0,45,0],[49,0,46,0],[50,0,47,0],[51,4,48,4],[51,13,48,13,"createKeys"],[51,23,48,23,"createKeys"],[51,24,48,23],[51,26,48,26],[52,6,49,8],[52,13,49,15],[52,17,49,19,"ReactNativeBiometrics"],[52,38,49,40],[52,39,49,41],[52,40,49,42],[52,41,49,43,"createKeys"],[52,51,49,53],[52,52,49,54],[52,53,49,55],[53,4,50,4],[54,4,51,4,"ReactNativeBiometricsLegacy"],[54,31,51,31],[54,32,51,32,"createKeys"],[54,42,51,42],[54,45,51,45,"createKeys"],[54,55,51,55],[55,4,52,4],[56,0,53,0],[57,0,54,0],[58,0,55,0],[59,0,56,0],[60,4,57,4],[60,13,57,13,"biometricKeysExist"],[60,31,57,31,"biometricKeysExist"],[60,32,57,31],[60,34,57,34],[61,6,58,8],[61,13,58,15],[61,17,58,19,"ReactNativeBiometrics"],[61,38,58,40],[61,39,58,41],[61,40,58,42],[61,41,58,43,"biometricKeysExist"],[61,59,58,61],[61,60,58,62],[61,61,58,63],[62,4,59,4],[63,4,60,4,"ReactNativeBiometricsLegacy"],[63,31,60,31],[63,32,60,32,"biometricKeysExist"],[63,50,60,50],[63,53,60,53,"biometricKeysExist"],[63,71,60,71],[64,4,61,4],[65,0,62,0],[66,0,63,0],[67,0,64,0],[68,0,65,0],[69,4,66,4],[69,13,66,13,"deleteKeys"],[69,23,66,23,"deleteKeys"],[69,24,66,23],[69,26,66,26],[70,6,67,8],[70,13,67,15],[70,17,67,19,"ReactNativeBiometrics"],[70,38,67,40],[70,39,67,41],[70,40,67,42],[70,41,67,43,"deleteKeys"],[70,51,67,53],[70,52,67,54],[70,53,67,55],[71,4,68,4],[72,4,69,4,"ReactNativeBiometricsLegacy"],[72,31,69,31],[72,32,69,32,"deleteKeys"],[72,42,69,42],[72,45,69,45,"deleteKeys"],[72,55,69,55],[73,4,70,4],[74,0,71,0],[75,0,72,0],[76,0,73,0],[77,0,74,0],[78,0,75,0],[79,0,76,0],[80,0,77,0],[81,0,78,0],[82,4,79,4],[82,13,79,13,"createSignature"],[82,28,79,28,"createSignature"],[82,29,79,29,"createSignatureOptions"],[82,51,79,51],[82,53,79,53],[83,6,80,8],[83,13,80,15],[83,17,80,19,"ReactNativeBiometrics"],[83,38,80,40],[83,39,80,41],[83,40,80,42],[83,41,80,43,"createSignature"],[83,56,80,58],[83,57,80,59,"createSignatureOptions"],[83,79,80,81],[83,80,80,82],[84,4,81,4],[85,4,82,4,"ReactNativeBiometricsLegacy"],[85,31,82,31],[85,32,82,32,"createSignature"],[85,47,82,47],[85,50,82,50,"createSignature"],[85,65,82,65],[86,4,83,4],[87,0,84,0],[88,0,85,0],[89,0,86,0],[90,0,87,0],[91,0,88,0],[92,0,89,0],[93,0,90,0],[94,0,91,0],[95,4,92,4],[95,13,92,13,"simplePrompt"],[95,25,92,25,"simplePrompt"],[95,26,92,26,"simplePromptOptions"],[95,45,92,45],[95,47,92,47],[96,6,93,8],[96,13,93,15],[96,17,93,19,"ReactNativeBiometrics"],[96,38,93,40],[96,39,93,41],[96,40,93,42],[96,41,93,43,"simplePrompt"],[96,53,93,55],[96,54,93,56,"simplePromptOptions"],[96,73,93,75],[96,74,93,76],[97,4,94,4],[98,4,95,4,"ReactNativeBiometricsLegacy"],[98,31,95,31],[98,32,95,32,"simplePrompt"],[98,44,95,44],[98,47,95,47,"simplePrompt"],[98,59,95,59],[99,2,96,0],[99,3,96,1],[99,5,96,3,"ReactNativeBiometricsLegacy"],[99,32,96,30],[99,35,96,33,"exports"],[99,42,96,40],[99,43,96,41,"ReactNativeBiometricsLegacy"],[99,70,96,68],[99,75,96,73,"exports"],[99,82,96,80],[99,83,96,81,"ReactNativeBiometricsLegacy"],[99,110,96,108],[99,113,96,111],[99,114,96,112],[99,115,96,113],[99,116,96,114],[99,117,96,115],[100,2,97,0],[100,6,97,4,"ReactNativeBiometrics"],[100,27,97,25],[100,30,97,28],[100,43,97,43],[100,55,97,55],[101,4,98,4],[102,0,99,0],[103,0,100,0],[104,0,101,0],[105,4,102,4],[105,13,102,13,"ReactNativeBiometrics"],[105,34,102,34,"ReactNativeBiometrics"],[105,35,102,35,"rnBiometricsOptions"],[105,54,102,54],[105,56,102,56],[106,6,103,8],[106,10,103,12,"_a"],[106,12,103,14],[106,14,103,16,"_b"],[106,16,103,18],[107,6,104,8],[107,10,104,12],[107,11,104,13,"allowDeviceCredentials"],[107,33,104,35],[107,36,104,38],[107,41,104,43],[108,6,105,8],[108,10,105,12,"allowDeviceCredentials"],[108,32,105,34],[108,36,105,38,"_b"],[108,38,105,40],[108,41,105,43],[108,42,105,44,"_a"],[108,44,105,46],[108,47,105,49,"rnBiometricsOptions"],[108,66,105,68],[108,72,105,74],[108,76,105,78],[108,80,105,82,"_a"],[108,82,105,84],[108,87,105,89],[108,92,105,94],[108,93,105,95],[108,96,105,98],[108,101,105,103],[108,102,105,104],[108,105,105,107,"_a"],[108,107,105,109],[108,108,105,110,"allowDeviceCredentials"],[108,130,105,132],[108,132,105,135,"_b"],[108,134,105,137],[108,139,105,142],[108,143,105,146],[108,147,105,150,"_b"],[108,149,105,152],[108,154,105,157],[108,159,105,162],[108,160,105,163],[108,163,105,166,"_b"],[108,165,105,168],[108,168,105,171],[108,173,105,177],[108,174,105,178],[109,6,106,8],[109,10,106,12],[109,11,106,13,"allowDeviceCredentials"],[109,33,106,35],[109,36,106,38,"allowDeviceCredentials"],[109,58,106,60],[110,4,107,4],[111,4,108,4],[112,0,109,0],[113,0,110,0],[114,0,111,0],[115,4,112,4,"ReactNativeBiometrics"],[115,25,112,25],[115,26,112,26,"prototype"],[115,35,112,35],[115,36,112,36,"isSensorAvailable"],[115,53,112,53],[115,56,112,56],[115,68,112,68],[116,6,113,8],[116,13,113,15,"bridge"],[116,19,113,21],[116,20,113,22,"isSensorAvailable"],[116,37,113,39],[116,38,113,40],[117,8,114,12,"allowDeviceCredentials"],[117,30,114,34],[117,32,114,36],[117,36,114,40],[117,37,114,41,"allowDeviceCredentials"],[118,6,115,8],[118,7,115,9],[118,8,115,10],[119,4,116,4],[119,5,116,5],[120,4,117,4],[121,0,118,0],[122,0,119,0],[123,0,120,0],[124,0,121,0],[125,4,122,4,"ReactNativeBiometrics"],[125,25,122,25],[125,26,122,26,"prototype"],[125,35,122,35],[125,36,122,36,"createKeys"],[125,46,122,46],[125,49,122,49],[125,61,122,61],[126,6,123,8],[126,13,123,15,"bridge"],[126,19,123,21],[126,20,123,22,"createKeys"],[126,30,123,32],[126,31,123,33],[127,8,124,12,"allowDeviceCredentials"],[127,30,124,34],[127,32,124,36],[127,36,124,40],[127,37,124,41,"allowDeviceCredentials"],[128,6,125,8],[128,7,125,9],[128,8,125,10],[129,4,126,4],[129,5,126,5],[130,4,127,4],[131,0,128,0],[132,0,129,0],[133,0,130,0],[134,0,131,0],[135,4,132,4,"ReactNativeBiometrics"],[135,25,132,25],[135,26,132,26,"prototype"],[135,35,132,35],[135,36,132,36,"biometricKeysExist"],[135,54,132,54],[135,57,132,57],[135,69,132,69],[136,6,133,8],[136,13,133,15,"bridge"],[136,19,133,21],[136,20,133,22,"biometricKeysExist"],[136,38,133,40],[136,39,133,41],[136,40,133,42],[137,4,134,4],[137,5,134,5],[138,4,135,4],[139,0,136,0],[140,0,137,0],[141,0,138,0],[142,0,139,0],[143,4,140,4,"ReactNativeBiometrics"],[143,25,140,25],[143,26,140,26,"prototype"],[143,35,140,35],[143,36,140,36,"deleteKeys"],[143,46,140,46],[143,49,140,49],[143,61,140,61],[144,6,141,8],[144,13,141,15,"bridge"],[144,19,141,21],[144,20,141,22,"deleteKeys"],[144,30,141,32],[144,31,141,33],[144,32,141,34],[145,4,142,4],[145,5,142,5],[146,4,143,4],[147,0,144,0],[148,0,145,0],[149,0,146,0],[150,0,147,0],[151,0,148,0],[152,0,149,0],[153,0,150,0],[154,0,151,0],[155,4,152,4,"ReactNativeBiometrics"],[155,25,152,25],[155,26,152,26,"prototype"],[155,35,152,35],[155,36,152,36,"createSignature"],[155,51,152,51],[155,54,152,54],[155,64,152,64,"createSignatureOptions"],[155,86,152,86],[155,88,152,88],[156,6,153,8],[156,10,153,12,"_a"],[156,12,153,14],[157,6,154,8,"createSignatureOptions"],[157,28,154,30],[157,29,154,31,"cancelButtonText"],[157,45,154,47],[157,49,154,51,"_a"],[157,51,154,53],[157,54,154,56,"createSignatureOptions"],[157,76,154,78],[157,77,154,79,"cancelButtonText"],[157,93,154,95],[157,95,154,98,"_a"],[157,97,154,100],[157,102,154,105],[157,106,154,109],[157,110,154,113,"_a"],[157,112,154,115],[157,117,154,120],[157,122,154,125],[157,123,154,126],[157,126,154,129,"_a"],[157,128,154,131],[157,131,154,134],[157,139,154,143],[157,140,154,144],[158,6,155,8],[158,13,155,15,"bridge"],[158,19,155,21],[158,20,155,22,"createSignature"],[158,35,155,37],[158,36,155,38,"__assign"],[158,44,155,46],[158,45,155,47],[159,8,155,49,"allowDeviceCredentials"],[159,30,155,71],[159,32,155,73],[159,36,155,77],[159,37,155,78,"allowDeviceCredentials"],[160,6,155,101],[160,7,155,102],[160,9,155,104,"createSignatureOptions"],[160,31,155,126],[160,32,155,127],[160,33,155,128],[161,4,156,4],[161,5,156,5],[162,4,157,4],[163,0,158,0],[164,0,159,0],[165,0,160,0],[166,0,161,0],[167,0,162,0],[168,0,163,0],[169,0,164,0],[170,0,165,0],[171,4,166,4,"ReactNativeBiometrics"],[171,25,166,25],[171,26,166,26,"prototype"],[171,35,166,35],[171,36,166,36,"simplePrompt"],[171,48,166,48],[171,51,166,51],[171,61,166,61,"simplePromptOptions"],[171,80,166,80],[171,82,166,82],[172,6,167,8],[172,10,167,12,"_a"],[172,12,167,14],[172,14,167,16,"_b"],[172,16,167,18],[173,6,168,8,"simplePromptOptions"],[173,25,168,27],[173,26,168,28,"cancelButtonText"],[173,42,168,44],[173,46,168,48,"_a"],[173,48,168,50],[173,51,168,53,"simplePromptOptions"],[173,70,168,72],[173,71,168,73,"cancelButtonText"],[173,87,168,89],[173,89,168,92,"_a"],[173,91,168,94],[173,96,168,99],[173,100,168,103],[173,104,168,107,"_a"],[173,106,168,109],[173,111,168,114],[173,116,168,119],[173,117,168,120],[173,120,168,123,"_a"],[173,122,168,125],[173,125,168,128],[173,133,168,137],[173,134,168,138],[174,6,169,8,"simplePromptOptions"],[174,25,169,27],[174,26,169,28,"fallbackPromptMessage"],[174,47,169,49],[174,51,169,53,"_b"],[174,53,169,55],[174,56,169,58,"simplePromptOptions"],[174,75,169,77],[174,76,169,78,"fallbackPromptMessage"],[174,97,169,99],[174,99,169,102,"_b"],[174,101,169,104],[174,106,169,109],[174,110,169,113],[174,114,169,117,"_b"],[174,116,169,119],[174,121,169,124],[174,126,169,129],[174,127,169,130],[174,130,169,133,"_b"],[174,132,169,135],[174,135,169,138],[174,149,169,153],[174,150,169,154],[175,6,170,8],[175,13,170,15,"bridge"],[175,19,170,21],[175,20,170,22,"simplePrompt"],[175,32,170,34],[175,33,170,35,"__assign"],[175,41,170,43],[175,42,170,44],[176,8,170,46,"allowDeviceCredentials"],[176,30,170,68],[176,32,170,70],[176,36,170,74],[176,37,170,75,"allowDeviceCredentials"],[177,6,170,98],[177,7,170,99],[177,9,170,101,"simplePromptOptions"],[177,28,170,120],[177,29,170,121],[177,30,170,122],[178,4,171,4],[178,5,171,5],[179,4,172,4],[179,11,172,11,"ReactNativeBiometrics"],[179,32,172,32],[180,2,173,0],[180,3,173,1],[180,4,173,2],[180,5,173,4],[181,2,174,0,"exports"],[181,9,174,7],[181,10,174,8,"default"],[181,17,174,15],[181,20,174,18,"ReactNativeBiometrics"],[181,41,174,39],[182,0,174,40],[182,3]],"functionMap":{"names":["<global>","<anonymous>","isSensorAvailable","createKeys","biometricKeysExist","deleteKeys","createSignature","simplePrompt","ReactNativeBiometrics","ReactNativeBiometrics.prototype.isSensorAvailable","ReactNativeBiometrics.prototype.createKeys","ReactNativeBiometrics.prototype.biometricKeysExist","ReactNativeBiometrics.prototype.deleteKeys","ReactNativeBiometrics.prototype.createSignature","ReactNativeBiometrics.prototype.simplePrompt"],"mappings":"AAA;0CCC;CDU;CCsB;ICK;KDE;IEO;KFE;IGO;KHE;IIO;KJE;IKW;KLE;IMW;KNE;CDE;2CCC;IOK;KPK;wDQK;KRI;iDSM;KTI;yDUM;KVE;iDWM;KXE;sDYU;KZI;mDaU;KbK;CDE"}},"type":"js/module"}]}