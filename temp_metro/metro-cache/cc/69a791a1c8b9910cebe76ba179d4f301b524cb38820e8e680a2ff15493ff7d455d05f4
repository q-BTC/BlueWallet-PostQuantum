{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var ZEROES = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(16, 0);\n  function toArray(buf) {\n    return [buf.readUInt32BE(0), buf.readUInt32BE(4), buf.readUInt32BE(8), buf.readUInt32BE(12)];\n  }\n  function fromArray(out) {\n    var buf = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.allocUnsafe(16);\n    buf.writeUInt32BE(out[0] >>> 0, 0);\n    buf.writeUInt32BE(out[1] >>> 0, 4);\n    buf.writeUInt32BE(out[2] >>> 0, 8);\n    buf.writeUInt32BE(out[3] >>> 0, 12);\n    return buf;\n  }\n  function GHASH(key) {\n    this.h = key;\n    this.state = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(16, 0);\n    this.cache = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.allocUnsafe(0);\n  }\n\n  // from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n  // by Juho Vähä-Herttua\n  GHASH.prototype.ghash = function (block) {\n    var i = -1;\n    while (++i < block.length) {\n      this.state[i] ^= block[i];\n    }\n    this._multiply();\n  };\n  GHASH.prototype._multiply = function () {\n    var Vi = toArray(this.h);\n    var Zi = [0, 0, 0, 0];\n    var j, xi, lsbVi;\n    var i = -1;\n    while (++i < 128) {\n      xi = (this.state[~~(i / 8)] & 1 << 7 - i % 8) !== 0;\n      if (xi) {\n        // Z_i+1 = Z_i ^ V_i\n        Zi[0] ^= Vi[0];\n        Zi[1] ^= Vi[1];\n        Zi[2] ^= Vi[2];\n        Zi[3] ^= Vi[3];\n      }\n\n      // Store the value of LSB(V_i)\n      lsbVi = (Vi[3] & 1) !== 0;\n\n      // V_i+1 = V_i >> 1\n      for (j = 3; j > 0; j--) {\n        Vi[j] = Vi[j] >>> 1 | (Vi[j - 1] & 1) << 31;\n      }\n      Vi[0] = Vi[0] >>> 1;\n\n      // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n      if (lsbVi) {\n        Vi[0] = Vi[0] ^ 0xe1 << 24;\n      }\n    }\n    this.state = fromArray(Zi);\n  };\n  GHASH.prototype.update = function (buf) {\n    this.cache = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.concat([this.cache, buf]);\n    var chunk;\n    while (this.cache.length >= 16) {\n      chunk = this.cache.slice(0, 16);\n      this.cache = this.cache.slice(16);\n      this.ghash(chunk);\n    }\n  };\n  GHASH.prototype.final = function (abl, bl) {\n    if (this.cache.length) {\n      this.ghash(_$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.concat([this.cache, ZEROES], 16));\n    }\n    this.ghash(fromArray([0, abl, 0, bl]));\n    return this.state;\n  };\n  module.exports = GHASH;\n});","lineCount":77,"map":[[2,2,2,0],[2,6,2,4,"ZEROES"],[2,12,2,10],[2,15,2,13,"_$$_REQUIRE"],[2,26,2,13],[2,27,2,13,"_dependencyMap"],[2,41,2,13],[2,61,2,13,"Buffer"],[2,67,2,13],[2,68,2,20,"alloc"],[2,73,2,25],[2,74,2,26],[2,76,2,28],[2,78,2,30],[2,79,2,31],[2,80,2,32],[3,2,4,0],[3,11,4,9,"toArray"],[3,18,4,16,"toArray"],[3,19,4,18,"buf"],[3,22,4,21],[3,24,4,23],[4,4,5,2],[4,11,5,9],[4,12,6,4,"buf"],[4,15,6,7],[4,16,6,8,"readUInt32BE"],[4,28,6,20],[4,29,6,21],[4,30,6,22],[4,31,6,23],[4,33,7,4,"buf"],[4,36,7,7],[4,37,7,8,"readUInt32BE"],[4,49,7,20],[4,50,7,21],[4,51,7,22],[4,52,7,23],[4,54,8,4,"buf"],[4,57,8,7],[4,58,8,8,"readUInt32BE"],[4,70,8,20],[4,71,8,21],[4,72,8,22],[4,73,8,23],[4,75,9,4,"buf"],[4,78,9,7],[4,79,9,8,"readUInt32BE"],[4,91,9,20],[4,92,9,21],[4,94,9,23],[4,95,9,24],[4,96,10,3],[5,2,11,0],[6,2,13,0],[6,11,13,9,"fromArray"],[6,20,13,18,"fromArray"],[6,21,13,20,"out"],[6,24,13,23],[6,26,13,25],[7,4,14,2],[7,8,14,6,"buf"],[7,11,14,9],[7,14,14,12,"_$$_REQUIRE"],[7,25,14,12],[7,26,14,12,"_dependencyMap"],[7,40,14,12],[7,60,14,12,"Buffer"],[7,66,14,12],[7,67,14,19,"allocUnsafe"],[7,78,14,30],[7,79,14,31],[7,81,14,33],[7,82,14,34],[8,4,15,2,"buf"],[8,7,15,5],[8,8,15,6,"writeUInt32BE"],[8,21,15,19],[8,22,15,20,"out"],[8,25,15,23],[8,26,15,24],[8,27,15,25],[8,28,15,26],[8,33,15,31],[8,34,15,32],[8,36,15,34],[8,37,15,35],[8,38,15,36],[9,4,16,2,"buf"],[9,7,16,5],[9,8,16,6,"writeUInt32BE"],[9,21,16,19],[9,22,16,20,"out"],[9,25,16,23],[9,26,16,24],[9,27,16,25],[9,28,16,26],[9,33,16,31],[9,34,16,32],[9,36,16,34],[9,37,16,35],[9,38,16,36],[10,4,17,2,"buf"],[10,7,17,5],[10,8,17,6,"writeUInt32BE"],[10,21,17,19],[10,22,17,20,"out"],[10,25,17,23],[10,26,17,24],[10,27,17,25],[10,28,17,26],[10,33,17,31],[10,34,17,32],[10,36,17,34],[10,37,17,35],[10,38,17,36],[11,4,18,2,"buf"],[11,7,18,5],[11,8,18,6,"writeUInt32BE"],[11,21,18,19],[11,22,18,20,"out"],[11,25,18,23],[11,26,18,24],[11,27,18,25],[11,28,18,26],[11,33,18,31],[11,34,18,32],[11,36,18,34],[11,38,18,36],[11,39,18,37],[12,4,19,2],[12,11,19,9,"buf"],[12,14,19,12],[13,2,20,0],[14,2,22,0],[14,11,22,9,"GHASH"],[14,16,22,14,"GHASH"],[14,17,22,16,"key"],[14,20,22,19],[14,22,22,21],[15,4,23,2],[15,8,23,6],[15,9,23,7,"h"],[15,10,23,8],[15,13,23,11,"key"],[15,16,23,14],[16,4,24,2],[16,8,24,6],[16,9,24,7,"state"],[16,14,24,12],[16,17,24,15,"_$$_REQUIRE"],[16,28,24,15],[16,29,24,15,"_dependencyMap"],[16,43,24,15],[16,63,24,15,"Buffer"],[16,69,24,15],[16,70,24,22,"alloc"],[16,75,24,27],[16,76,24,28],[16,78,24,30],[16,80,24,32],[16,81,24,33],[16,82,24,34],[17,4,25,2],[17,8,25,6],[17,9,25,7,"cache"],[17,14,25,12],[17,17,25,15,"_$$_REQUIRE"],[17,28,25,15],[17,29,25,15,"_dependencyMap"],[17,43,25,15],[17,63,25,15,"Buffer"],[17,69,25,15],[17,70,25,22,"allocUnsafe"],[17,81,25,33],[17,82,25,34],[17,83,25,35],[17,84,25,36],[18,2,26,0],[20,2,28,0],[21,2,29,0],[22,2,30,0,"GHASH"],[22,7,30,5],[22,8,30,6,"prototype"],[22,17,30,15],[22,18,30,16,"ghash"],[22,23,30,21],[22,26,30,24],[22,36,30,34,"block"],[22,41,30,39],[22,43,30,41],[23,4,31,2],[23,8,31,6,"i"],[23,9,31,7],[23,12,31,10],[23,13,31,11],[23,14,31,12],[24,4,32,2],[24,11,32,9],[24,13,32,11,"i"],[24,14,32,12],[24,17,32,15,"block"],[24,22,32,20],[24,23,32,21,"length"],[24,29,32,27],[24,31,32,29],[25,6,33,4],[25,10,33,8],[25,11,33,9,"state"],[25,16,33,14],[25,17,33,15,"i"],[25,18,33,16],[25,19,33,17],[25,23,33,21,"block"],[25,28,33,26],[25,29,33,27,"i"],[25,30,33,28],[25,31,33,29],[26,4,34,2],[27,4,35,2],[27,8,35,6],[27,9,35,7,"_multiply"],[27,18,35,16],[27,19,35,17],[27,20,35,18],[28,2,36,0],[28,3,36,1],[29,2,38,0,"GHASH"],[29,7,38,5],[29,8,38,6,"prototype"],[29,17,38,15],[29,18,38,16,"_multiply"],[29,27,38,25],[29,30,38,28],[29,42,38,40],[30,4,39,2],[30,8,39,6,"Vi"],[30,10,39,8],[30,13,39,11,"toArray"],[30,20,39,18],[30,21,39,19],[30,25,39,23],[30,26,39,24,"h"],[30,27,39,25],[30,28,39,26],[31,4,40,2],[31,8,40,6,"Zi"],[31,10,40,8],[31,13,40,11],[31,14,40,12],[31,15,40,13],[31,17,40,15],[31,18,40,16],[31,20,40,18],[31,21,40,19],[31,23,40,21],[31,24,40,22],[31,25,40,23],[32,4,41,2],[32,8,41,6,"j"],[32,9,41,7],[32,11,41,9,"xi"],[32,13,41,11],[32,15,41,13,"lsbVi"],[32,20,41,18],[33,4,42,2],[33,8,42,6,"i"],[33,9,42,7],[33,12,42,10],[33,13,42,11],[33,14,42,12],[34,4,43,2],[34,11,43,9],[34,13,43,11,"i"],[34,14,43,12],[34,17,43,15],[34,20,43,18],[34,22,43,20],[35,6,44,4,"xi"],[35,8,44,6],[35,11,44,9],[35,12,44,10],[35,16,44,14],[35,17,44,15,"state"],[35,22,44,20],[35,23,44,21],[35,24,44,22],[35,26,44,24,"i"],[35,27,44,25],[35,30,44,28],[35,31,44,29],[35,32,44,30],[35,33,44,31],[35,36,44,35],[35,37,44,36],[35,41,44,41],[35,42,44,42],[35,45,44,46,"i"],[35,46,44,47],[35,49,44,50],[35,50,44,54],[35,56,44,60],[35,57,44,61],[36,6,45,4],[36,10,45,8,"xi"],[36,12,45,10],[36,14,45,12],[37,8,46,6],[38,8,47,6,"Zi"],[38,10,47,8],[38,11,47,9],[38,12,47,10],[38,13,47,11],[38,17,47,15,"Vi"],[38,19,47,17],[38,20,47,18],[38,21,47,19],[38,22,47,20],[39,8,48,6,"Zi"],[39,10,48,8],[39,11,48,9],[39,12,48,10],[39,13,48,11],[39,17,48,15,"Vi"],[39,19,48,17],[39,20,48,18],[39,21,48,19],[39,22,48,20],[40,8,49,6,"Zi"],[40,10,49,8],[40,11,49,9],[40,12,49,10],[40,13,49,11],[40,17,49,15,"Vi"],[40,19,49,17],[40,20,49,18],[40,21,49,19],[40,22,49,20],[41,8,50,6,"Zi"],[41,10,50,8],[41,11,50,9],[41,12,50,10],[41,13,50,11],[41,17,50,15,"Vi"],[41,19,50,17],[41,20,50,18],[41,21,50,19],[41,22,50,20],[42,6,51,4],[44,6,53,4],[45,6,54,4,"lsbVi"],[45,11,54,9],[45,14,54,12],[45,15,54,13,"Vi"],[45,17,54,15],[45,18,54,16],[45,19,54,17],[45,20,54,18],[45,23,54,21],[45,24,54,22],[45,30,54,28],[45,31,54,29],[47,6,56,4],[48,6,57,4],[48,11,57,9,"j"],[48,12,57,10],[48,15,57,13],[48,16,57,14],[48,18,57,16,"j"],[48,19,57,17],[48,22,57,20],[48,23,57,21],[48,25,57,23,"j"],[48,26,57,24],[48,28,57,26],[48,30,57,28],[49,8,58,6,"Vi"],[49,10,58,8],[49,11,58,9,"j"],[49,12,58,10],[49,13,58,11],[49,16,58,15,"Vi"],[49,18,58,17],[49,19,58,18,"j"],[49,20,58,19],[49,21,58,20],[49,26,58,25],[49,27,58,26],[49,30,58,31],[49,31,58,32,"Vi"],[49,33,58,34],[49,34,58,35,"j"],[49,35,58,36],[49,38,58,39],[49,39,58,40],[49,40,58,41],[49,43,58,44],[49,44,58,45],[49,49,58,50],[49,51,58,53],[50,6,59,4],[51,6,60,4,"Vi"],[51,8,60,6],[51,9,60,7],[51,10,60,8],[51,11,60,9],[51,14,60,12,"Vi"],[51,16,60,14],[51,17,60,15],[51,18,60,16],[51,19,60,17],[51,24,60,22],[51,25,60,23],[53,6,62,4],[54,6,63,4],[54,10,63,8,"lsbVi"],[54,15,63,13],[54,17,63,15],[55,8,64,6,"Vi"],[55,10,64,8],[55,11,64,9],[55,12,64,10],[55,13,64,11],[55,16,64,14,"Vi"],[55,18,64,16],[55,19,64,17],[55,20,64,18],[55,21,64,19],[55,24,64,23],[55,28,64,27],[55,32,64,31],[55,34,64,34],[56,6,65,4],[57,4,66,2],[58,4,67,2],[58,8,67,6],[58,9,67,7,"state"],[58,14,67,12],[58,17,67,15,"fromArray"],[58,26,67,24],[58,27,67,25,"Zi"],[58,29,67,27],[58,30,67,28],[59,2,68,0],[59,3,68,1],[60,2,70,0,"GHASH"],[60,7,70,5],[60,8,70,6,"prototype"],[60,17,70,15],[60,18,70,16,"update"],[60,24,70,22],[60,27,70,25],[60,37,70,35,"buf"],[60,40,70,38],[60,42,70,40],[61,4,71,2],[61,8,71,6],[61,9,71,7,"cache"],[61,14,71,12],[61,17,71,15,"_$$_REQUIRE"],[61,28,71,15],[61,29,71,15,"_dependencyMap"],[61,43,71,15],[61,63,71,15,"Buffer"],[61,69,71,15],[61,70,71,22,"concat"],[61,76,71,28],[61,77,71,29],[61,78,71,30],[61,82,71,34],[61,83,71,35,"cache"],[61,88,71,40],[61,90,71,42,"buf"],[61,93,71,45],[61,94,71,46],[61,95,71,47],[62,4,72,2],[62,8,72,6,"chunk"],[62,13,72,11],[63,4,73,2],[63,11,73,9],[63,15,73,13],[63,16,73,14,"cache"],[63,21,73,19],[63,22,73,20,"length"],[63,28,73,26],[63,32,73,30],[63,34,73,32],[63,36,73,34],[64,6,74,4,"chunk"],[64,11,74,9],[64,14,74,12],[64,18,74,16],[64,19,74,17,"cache"],[64,24,74,22],[64,25,74,23,"slice"],[64,30,74,28],[64,31,74,29],[64,32,74,30],[64,34,74,32],[64,36,74,34],[64,37,74,35],[65,6,75,4],[65,10,75,8],[65,11,75,9,"cache"],[65,16,75,14],[65,19,75,17],[65,23,75,21],[65,24,75,22,"cache"],[65,29,75,27],[65,30,75,28,"slice"],[65,35,75,33],[65,36,75,34],[65,38,75,36],[65,39,75,37],[66,6,76,4],[66,10,76,8],[66,11,76,9,"ghash"],[66,16,76,14],[66,17,76,15,"chunk"],[66,22,76,20],[66,23,76,21],[67,4,77,2],[68,2,78,0],[68,3,78,1],[69,2,80,0,"GHASH"],[69,7,80,5],[69,8,80,6,"prototype"],[69,17,80,15],[69,18,80,16,"final"],[69,23,80,21],[69,26,80,24],[69,36,80,34,"abl"],[69,39,80,37],[69,41,80,39,"bl"],[69,43,80,41],[69,45,80,43],[70,4,81,2],[70,8,81,6],[70,12,81,10],[70,13,81,11,"cache"],[70,18,81,16],[70,19,81,17,"length"],[70,25,81,23],[70,27,81,25],[71,6,82,4],[71,10,82,8],[71,11,82,9,"ghash"],[71,16,82,14],[71,17,82,15,"_$$_REQUIRE"],[71,28,82,15],[71,29,82,15,"_dependencyMap"],[71,43,82,15],[71,63,82,15,"Buffer"],[71,69,82,15],[71,70,82,22,"concat"],[71,76,82,28],[71,77,82,29],[71,78,82,30],[71,82,82,34],[71,83,82,35,"cache"],[71,88,82,40],[71,90,82,42,"ZEROES"],[71,96,82,48],[71,97,82,49],[71,99,82,51],[71,101,82,53],[71,102,82,54],[71,103,82,55],[72,4,83,2],[73,4,85,2],[73,8,85,6],[73,9,85,7,"ghash"],[73,14,85,12],[73,15,85,13,"fromArray"],[73,24,85,22],[73,25,85,23],[73,26,85,24],[73,27,85,25],[73,29,85,27,"abl"],[73,32,85,30],[73,34,85,32],[73,35,85,33],[73,37,85,35,"bl"],[73,39,85,37],[73,40,85,38],[73,41,85,39],[73,42,85,40],[74,4,86,2],[74,11,86,9],[74,15,86,13],[74,16,86,14,"state"],[74,21,86,19],[75,2,87,0],[75,3,87,1],[76,2,89,0,"module"],[76,8,89,6],[76,9,89,7,"exports"],[76,16,89,14],[76,19,89,17,"GHASH"],[76,24,89,22],[77,0,89,22],[77,3]],"functionMap":{"names":["<global>","toArray","fromArray","GHASH","GHASH.prototype.ghash","GHASH.prototype._multiply","GHASH.prototype.update","GHASH.prototype.final"],"mappings":"AAA;ACG;CDO;AEE;CFO;AGE;CHI;wBII;CJM;4BKE;CL8B;yBME;CNQ;wBOE;CPO"}},"type":"js/module"}]}