{"dependencies":[{"name":"./hash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":11,"index":324},"end":{"line":11,"column":28,"index":341}}],"key":"L/Mz7Z04KQ2K0uE4jiLtxBljGvg="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":15,"index":260},"end":{"line":9,"column":34,"index":279}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"./sha256","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":13,"index":293},"end":{"line":10,"column":32,"index":312}}],"key":"szC2YQtlpKalon91OETq/wSftHg="}},{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":355},"end":{"line":12,"column":42,"index":384}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n   * in FIPS 180-2\n   * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n   * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n   *\n   */\n\n  var W = new Array(64);\n  function Sha224() {\n    this.init();\n    this._w = W; // new Array(64)\n\n    _$$_REQUIRE(_dependencyMap[0], \"./hash\").call(this, 64, 56);\n  }\n  _$$_REQUIRE(_dependencyMap[1], \"inherits\")(Sha224, _$$_REQUIRE(_dependencyMap[2], \"./sha256\"));\n  Sha224.prototype.init = function () {\n    this._a = 0xc1059ed8;\n    this._b = 0x367cd507;\n    this._c = 0x3070dd17;\n    this._d = 0xf70e5939;\n    this._e = 0xffc00b31;\n    this._f = 0x68581511;\n    this._g = 0x64f98fa7;\n    this._h = 0xbefa4fa4;\n    return this;\n  };\n  Sha224.prototype._hash = function () {\n    var H = _$$_REQUIRE(_dependencyMap[3], \"safe-buffer\").Buffer.allocUnsafe(28);\n    H.writeInt32BE(this._a, 0);\n    H.writeInt32BE(this._b, 4);\n    H.writeInt32BE(this._c, 8);\n    H.writeInt32BE(this._d, 12);\n    H.writeInt32BE(this._e, 16);\n    H.writeInt32BE(this._f, 20);\n    H.writeInt32BE(this._g, 24);\n    return H;\n  };\n  module.exports = Sha224;\n});","lineCount":41,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[10,2,14,0],[10,6,14,4,"W"],[10,7,14,5],[10,10,14,8],[10,14,14,12,"Array"],[10,19,14,17],[10,20,14,18],[10,22,14,20],[10,23,14,21],[11,2,16,0],[11,11,16,9,"Sha224"],[11,17,16,15,"Sha224"],[11,18,16,15],[11,20,16,19],[12,4,17,2],[12,8,17,6],[12,9,17,7,"init"],[12,13,17,11],[12,14,17,12],[12,15,17,13],[13,4,19,2],[13,8,19,6],[13,9,19,7,"_w"],[13,11,19,9],[13,14,19,12,"W"],[13,15,19,13],[13,17,19,14],[15,4,21,2,"_$$_REQUIRE"],[15,15,21,2],[15,16,21,2,"_dependencyMap"],[15,30,21,2],[15,45,21,7,"call"],[15,49,21,11],[15,50,21,12],[15,54,21,16],[15,56,21,18],[15,58,21,20],[15,60,21,22],[15,62,21,24],[15,63,21,25],[16,2,22,0],[17,2,24,0,"_$$_REQUIRE"],[17,13,24,0],[17,14,24,0,"_dependencyMap"],[17,28,24,0],[17,45,24,9,"Sha224"],[17,51,24,15],[17,53,24,15,"_$$_REQUIRE"],[17,64,24,15],[17,65,24,15,"_dependencyMap"],[17,79,24,15],[17,95,24,23],[17,96,24,24],[18,2,26,0,"Sha224"],[18,8,26,6],[18,9,26,7,"prototype"],[18,18,26,16],[18,19,26,17,"init"],[18,23,26,21],[18,26,26,24],[18,38,26,36],[19,4,27,2],[19,8,27,6],[19,9,27,7,"_a"],[19,11,27,9],[19,14,27,12],[19,24,27,22],[20,4,28,2],[20,8,28,6],[20,9,28,7,"_b"],[20,11,28,9],[20,14,28,12],[20,24,28,22],[21,4,29,2],[21,8,29,6],[21,9,29,7,"_c"],[21,11,29,9],[21,14,29,12],[21,24,29,22],[22,4,30,2],[22,8,30,6],[22,9,30,7,"_d"],[22,11,30,9],[22,14,30,12],[22,24,30,22],[23,4,31,2],[23,8,31,6],[23,9,31,7,"_e"],[23,11,31,9],[23,14,31,12],[23,24,31,22],[24,4,32,2],[24,8,32,6],[24,9,32,7,"_f"],[24,11,32,9],[24,14,32,12],[24,24,32,22],[25,4,33,2],[25,8,33,6],[25,9,33,7,"_g"],[25,11,33,9],[25,14,33,12],[25,24,33,22],[26,4,34,2],[26,8,34,6],[26,9,34,7,"_h"],[26,11,34,9],[26,14,34,12],[26,24,34,22],[27,4,36,2],[27,11,36,9],[27,15,36,13],[28,2,37,0],[28,3,37,1],[29,2,39,0,"Sha224"],[29,8,39,6],[29,9,39,7,"prototype"],[29,18,39,16],[29,19,39,17,"_hash"],[29,24,39,22],[29,27,39,25],[29,39,39,37],[30,4,40,2],[30,8,40,6,"H"],[30,9,40,7],[30,12,40,10,"_$$_REQUIRE"],[30,23,40,10],[30,24,40,10,"_dependencyMap"],[30,38,40,10],[30,58,40,10,"Buffer"],[30,64,40,10],[30,65,40,17,"allocUnsafe"],[30,76,40,28],[30,77,40,29],[30,79,40,31],[30,80,40,32],[31,4,42,2,"H"],[31,5,42,3],[31,6,42,4,"writeInt32BE"],[31,18,42,16],[31,19,42,17],[31,23,42,21],[31,24,42,22,"_a"],[31,26,42,24],[31,28,42,26],[31,29,42,27],[31,30,42,28],[32,4,43,2,"H"],[32,5,43,3],[32,6,43,4,"writeInt32BE"],[32,18,43,16],[32,19,43,17],[32,23,43,21],[32,24,43,22,"_b"],[32,26,43,24],[32,28,43,26],[32,29,43,27],[32,30,43,28],[33,4,44,2,"H"],[33,5,44,3],[33,6,44,4,"writeInt32BE"],[33,18,44,16],[33,19,44,17],[33,23,44,21],[33,24,44,22,"_c"],[33,26,44,24],[33,28,44,26],[33,29,44,27],[33,30,44,28],[34,4,45,2,"H"],[34,5,45,3],[34,6,45,4,"writeInt32BE"],[34,18,45,16],[34,19,45,17],[34,23,45,21],[34,24,45,22,"_d"],[34,26,45,24],[34,28,45,26],[34,30,45,28],[34,31,45,29],[35,4,46,2,"H"],[35,5,46,3],[35,6,46,4,"writeInt32BE"],[35,18,46,16],[35,19,46,17],[35,23,46,21],[35,24,46,22,"_e"],[35,26,46,24],[35,28,46,26],[35,30,46,28],[35,31,46,29],[36,4,47,2,"H"],[36,5,47,3],[36,6,47,4,"writeInt32BE"],[36,18,47,16],[36,19,47,17],[36,23,47,21],[36,24,47,22,"_f"],[36,26,47,24],[36,28,47,26],[36,30,47,28],[36,31,47,29],[37,4,48,2,"H"],[37,5,48,3],[37,6,48,4,"writeInt32BE"],[37,18,48,16],[37,19,48,17],[37,23,48,21],[37,24,48,22,"_g"],[37,26,48,24],[37,28,48,26],[37,30,48,28],[37,31,48,29],[38,4,50,2],[38,11,50,9,"H"],[38,12,50,10],[39,2,51,0],[39,3,51,1],[40,2,53,0,"module"],[40,8,53,6],[40,9,53,7,"exports"],[40,16,53,14],[40,19,53,17,"Sha224"],[40,25,53,23],[41,0,53,23],[41,3]],"functionMap":{"names":["<global>","Sha224","Sha224.prototype.init","Sha224.prototype._hash"],"mappings":"AAA;ACe;CDM;wBEI;CFW;yBGE;CHY"}},"type":"js/module"}]}