{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":221,"column":0,"index":7605}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":221,"column":0,"index":7605}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./bufferutils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}},{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}},{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}},{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}},{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}},{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}},{"start":{"line":4,"column":22,"index":123},"end":{"line":4,"column":46,"index":147}}],"key":"8h+4nPdiw4lgWqmpJE4tN3Ks+fM="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":165},"end":{"line":5,"column":35,"index":184}},{"start":{"line":5,"column":16,"index":165},"end":{"line":5,"column":35,"index":184}},{"start":{"line":5,"column":16,"index":165},"end":{"line":5,"column":35,"index":184}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}},{"name":"./transaction","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":22,"index":246},"end":{"line":7,"column":46,"index":270}}],"key":"QyHAamlaDdme9J9SOOQ5bKZGvis="}},{"name":"./types","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":9,"column":0,"index":306},"end":{"line":9,"column":28,"index":334}}],"key":"iV91Bk2eI9buML90FP6cK2SM5h0="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":14,"index":286},"end":{"line":8,"column":32,"index":304}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./merkle","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":17,"index":203},"end":{"line":6,"column":36,"index":222}}],"key":"6WRMt9sBfTIzGdWsopxxUtzs+YM="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.Block = void 0;\n  var errorMerkleNoTxes = new TypeError('Cannot compute merkle root for zero transactions');\n  var errorWitnessNotSegwit = new TypeError('Cannot compute witness commit for non-segwit block');\n  var Block = /*#__PURE__*/function () {\n    function Block() {\n      _classCallCheck(this, Block);\n      this.version = 1;\n      this.prevHash = undefined;\n      this.merkleRoot = undefined;\n      this.timestamp = 0;\n      this.witnessCommit = undefined;\n      this.bits = 0;\n      this.nonce = 0;\n      this.transactions = undefined;\n    }\n    return _createClass(Block, [{\n      key: \"getWitnessCommit\",\n      value: function getWitnessCommit() {\n        if (!txesHaveWitnessCommit(this.transactions)) return null;\n        // The merkle root for the witness data is in an OP_RETURN output.\n        // There is no rule for the index of the output, so use filter to find it.\n        // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n        // If multiple commits are found, the output with highest index is assumed.\n        var witnessCommits = this.transactions[0].outs.filter(function (out) {\n          return out.script.slice(0, 6).equals(Buffer.from('6a24aa21a9ed', 'hex'));\n        }).map(function (out) {\n          return out.script.slice(6, 38);\n        });\n        if (witnessCommits.length === 0) return null;\n        // Use the commit with the highest output (should only be one though)\n        var result = witnessCommits[witnessCommits.length - 1];\n        if (!(result instanceof Buffer && result.length === 32)) return null;\n        return result;\n      }\n    }, {\n      key: \"hasWitnessCommit\",\n      value: function hasWitnessCommit() {\n        if (this.witnessCommit instanceof Buffer && this.witnessCommit.length === 32) return true;\n        if (this.getWitnessCommit() !== null) return true;\n        return false;\n      }\n    }, {\n      key: \"hasWitness\",\n      value: function hasWitness() {\n        return anyTxHasWitness(this.transactions);\n      }\n    }, {\n      key: \"weight\",\n      value: function weight() {\n        var base = this.byteLength(false, false);\n        var total = this.byteLength(false, true);\n        return base * 3 + total;\n      }\n    }, {\n      key: \"byteLength\",\n      value: function byteLength(headersOnly) {\n        var allowWitness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        if (headersOnly || !this.transactions) return 80;\n        return 80 + _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encodingLength(this.transactions.length) + this.transactions.reduce(function (a, x) {\n          return a + x.byteLength(allowWitness);\n        }, 0);\n      }\n    }, {\n      key: \"getHash\",\n      value: function getHash() {\n        return _$$_REQUIRE(_dependencyMap[3], \"./crypto\").hash256(this.toBuffer(true));\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        return (0, _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").reverseBuffer)(this.getHash()).toString('hex');\n      }\n    }, {\n      key: \"getUTCDate\",\n      value: function getUTCDate() {\n        var date = new Date(0); // epoch\n        date.setUTCSeconds(this.timestamp);\n        return date;\n      }\n      // TODO: buffer, offset compatibility\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer(headersOnly) {\n        var buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n        var bufferWriter = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferWriter)(buffer);\n        bufferWriter.writeInt32(this.version);\n        bufferWriter.writeSlice(this.prevHash);\n        bufferWriter.writeSlice(this.merkleRoot);\n        bufferWriter.writeUInt32(this.timestamp);\n        bufferWriter.writeUInt32(this.bits);\n        bufferWriter.writeUInt32(this.nonce);\n        if (headersOnly || !this.transactions) return buffer;\n        _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encode(this.transactions.length, buffer, bufferWriter.offset);\n        bufferWriter.offset += _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").varuint.encode.bytes;\n        this.transactions.forEach(function (tx) {\n          var txSize = tx.byteLength(); // TODO: extract from toBuffer?\n          tx.toBuffer(buffer, bufferWriter.offset);\n          bufferWriter.offset += txSize;\n        });\n        return buffer;\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex(headersOnly) {\n        return this.toBuffer(headersOnly).toString('hex');\n      }\n    }, {\n      key: \"checkTxRoots\",\n      value: function checkTxRoots() {\n        // If the Block has segwit transactions but no witness commit,\n        // there's no way it can be valid, so fail the check.\n        var hasWitnessCommit = this.hasWitnessCommit();\n        if (!hasWitnessCommit && this.hasWitness()) return false;\n        return this.__checkMerkleRoot() && (hasWitnessCommit ? this.__checkWitnessCommit() : true);\n      }\n    }, {\n      key: \"checkProofOfWork\",\n      value: function checkProofOfWork() {\n        var hash = (0, _$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").reverseBuffer)(this.getHash());\n        var target = Block.calculateTarget(this.bits);\n        return hash.compare(target) <= 0;\n      }\n    }, {\n      key: \"__checkMerkleRoot\",\n      value: function __checkMerkleRoot() {\n        if (!this.transactions) throw errorMerkleNoTxes;\n        var actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n        return this.merkleRoot.compare(actualMerkleRoot) === 0;\n      }\n    }, {\n      key: \"__checkWitnessCommit\",\n      value: function __checkWitnessCommit() {\n        if (!this.transactions) throw errorMerkleNoTxes;\n        if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n        var actualWitnessCommit = Block.calculateMerkleRoot(this.transactions, true);\n        return this.witnessCommit.compare(actualWitnessCommit) === 0;\n      }\n    }], [{\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer) {\n        if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n        var bufferReader = new (_$$_REQUIRE(_dependencyMap[2], \"./bufferutils\").BufferReader)(buffer);\n        var block = new Block();\n        block.version = bufferReader.readInt32();\n        block.prevHash = bufferReader.readSlice(32);\n        block.merkleRoot = bufferReader.readSlice(32);\n        block.timestamp = bufferReader.readUInt32();\n        block.bits = bufferReader.readUInt32();\n        block.nonce = bufferReader.readUInt32();\n        if (buffer.length === 80) return block;\n        var readTransaction = function readTransaction() {\n          var tx = _$$_REQUIRE(_dependencyMap[4], \"./transaction\").Transaction.fromBuffer(bufferReader.buffer.slice(bufferReader.offset), true);\n          bufferReader.offset += tx.byteLength();\n          return tx;\n        };\n        var nTransactions = bufferReader.readVarInt();\n        block.transactions = [];\n        for (var i = 0; i < nTransactions; ++i) {\n          var tx = readTransaction();\n          block.transactions.push(tx);\n        }\n        var witnessCommit = block.getWitnessCommit();\n        // This Block contains a witness commit\n        if (witnessCommit) block.witnessCommit = witnessCommit;\n        return block;\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(hex) {\n        return Block.fromBuffer(Buffer.from(hex, 'hex'));\n      }\n    }, {\n      key: \"calculateTarget\",\n      value: function calculateTarget(bits) {\n        var exponent = ((bits & 0xff000000) >> 24) - 3;\n        var mantissa = bits & 0x007fffff;\n        var target = Buffer.alloc(32, 0);\n        target.writeUIntBE(mantissa, 29 - exponent, 3);\n        return target;\n      }\n    }, {\n      key: \"calculateMerkleRoot\",\n      value: function calculateMerkleRoot(transactions, forWitness) {\n        _$$_REQUIRE(_dependencyMap[5], \"./types\").typeforce([{\n          getHash: _$$_REQUIRE(_dependencyMap[6], \"./types\").Function\n        }], transactions);\n        if (transactions.length === 0) throw errorMerkleNoTxes;\n        if (forWitness && !txesHaveWitnessCommit(transactions)) throw errorWitnessNotSegwit;\n        var hashes = transactions.map(function (transaction) {\n          return transaction.getHash(forWitness);\n        });\n        var rootHash = (0, _$$_REQUIRE(_dependencyMap[7], \"./merkle\").fastMerkleRoot)(hashes, _$$_REQUIRE(_dependencyMap[3], \"./crypto\").hash256);\n        return forWitness ? _$$_REQUIRE(_dependencyMap[3], \"./crypto\").hash256(Buffer.concat([rootHash, transactions[0].ins[0].witness[0]])) : rootHash;\n      }\n    }]);\n  }();\n  exports.Block = Block;\n  function txesHaveWitnessCommit(transactions) {\n    return transactions instanceof Array && transactions[0] && transactions[0].ins && transactions[0].ins instanceof Array && transactions[0].ins[0] && transactions[0].ins[0].witness && transactions[0].ins[0].witness instanceof Array && transactions[0].ins[0].witness.length > 0;\n  }\n  function anyTxHasWitness(transactions) {\n    return transactions instanceof Array && transactions.some(function (tx) {\n      return typeof tx === 'object' && tx.ins instanceof Array && tx.ins.some(function (input) {\n        return typeof input === 'object' && input.witness instanceof Array && input.witness.length > 0;\n      });\n    });\n  }\n});","lineCount":216,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0,"exports"],[9,9,3,7],[9,10,3,8,"Block"],[9,15,3,13],[9,18,3,16],[9,23,3,21],[9,24,3,22],[10,2,10,0],[10,6,10,6,"errorMerkleNoTxes"],[10,23,10,23],[10,26,10,26],[10,30,10,30,"TypeError"],[10,39,10,39],[10,40,11,2],[10,90,12,0],[10,91,12,1],[11,2,13,0],[11,6,13,6,"errorWitnessNotSegwit"],[11,27,13,27],[11,30,13,30],[11,34,13,34,"TypeError"],[11,43,13,43],[11,44,14,2],[11,96,15,0],[11,97,15,1],[12,2,15,2],[12,6,16,6,"Block"],[12,11,16,11],[13,4,17,2],[13,13,17,2,"Block"],[13,19,17,2],[13,21,17,16],[14,6,17,16,"_classCallCheck"],[14,21,17,16],[14,28,17,16,"Block"],[14,33,17,16],[15,6,18,4],[15,10,18,8],[15,11,18,9,"version"],[15,18,18,16],[15,21,18,19],[15,22,18,20],[16,6,19,4],[16,10,19,8],[16,11,19,9,"prevHash"],[16,19,19,17],[16,22,19,20,"undefined"],[16,31,19,29],[17,6,20,4],[17,10,20,8],[17,11,20,9,"merkleRoot"],[17,21,20,19],[17,24,20,22,"undefined"],[17,33,20,31],[18,6,21,4],[18,10,21,8],[18,11,21,9,"timestamp"],[18,20,21,18],[18,23,21,21],[18,24,21,22],[19,6,22,4],[19,10,22,8],[19,11,22,9,"witnessCommit"],[19,24,22,22],[19,27,22,25,"undefined"],[19,36,22,34],[20,6,23,4],[20,10,23,8],[20,11,23,9,"bits"],[20,15,23,13],[20,18,23,16],[20,19,23,17],[21,6,24,4],[21,10,24,8],[21,11,24,9,"nonce"],[21,16,24,14],[21,19,24,17],[21,20,24,18],[22,6,25,4],[22,10,25,8],[22,11,25,9,"transactions"],[22,23,25,21],[22,26,25,24,"undefined"],[22,35,25,33],[23,4,26,2],[24,4,26,3],[24,11,26,3,"_createClass"],[24,23,26,3],[24,24,26,3,"Block"],[24,29,26,3],[25,6,26,3,"key"],[25,9,26,3],[26,6,26,3,"value"],[26,11,26,3],[26,13,82,2],[26,22,82,2,"getWitnessCommit"],[26,38,82,18,"getWitnessCommit"],[26,39,82,18],[26,41,82,21],[27,8,83,4],[27,12,83,8],[27,13,83,9,"txesHaveWitnessCommit"],[27,34,83,30],[27,35,83,31],[27,39,83,35],[27,40,83,36,"transactions"],[27,52,83,48],[27,53,83,49],[27,55,83,51],[27,62,83,58],[27,66,83,62],[28,8,84,4],[29,8,85,4],[30,8,86,4],[31,8,87,4],[32,8,88,4],[32,12,88,10,"witnessCommits"],[32,26,88,24],[32,29,88,27],[32,33,88,31],[32,34,88,32,"transactions"],[32,46,88,44],[32,47,88,45],[32,48,88,46],[32,49,88,47],[32,50,88,48,"outs"],[32,54,88,52],[32,55,89,7,"filter"],[32,61,89,13],[32,62,89,14],[32,72,89,14,"out"],[32,75,89,17],[33,10,89,17],[33,17,90,8,"out"],[33,20,90,11],[33,21,90,12,"script"],[33,27,90,18],[33,28,90,19,"slice"],[33,33,90,24],[33,34,90,25],[33,35,90,26],[33,37,90,28],[33,38,90,29],[33,39,90,30],[33,40,90,31,"equals"],[33,46,90,37],[33,47,90,38,"Buffer"],[33,53,90,44],[33,54,90,45,"from"],[33,58,90,49],[33,59,90,50],[33,73,90,64],[33,75,90,66],[33,80,90,71],[33,81,90,72],[33,82,90,73],[34,8,90,73],[34,9,91,6],[34,10,91,7],[34,11,92,7,"map"],[34,14,92,10],[34,15,92,11],[34,25,92,11,"out"],[34,28,92,14],[35,10,92,14],[35,17,92,18,"out"],[35,20,92,21],[35,21,92,22,"script"],[35,27,92,28],[35,28,92,29,"slice"],[35,33,92,34],[35,34,92,35],[35,35,92,36],[35,37,92,38],[35,39,92,40],[35,40,92,41],[36,8,92,41],[36,10,92,42],[37,8,93,4],[37,12,93,8,"witnessCommits"],[37,26,93,22],[37,27,93,23,"length"],[37,33,93,29],[37,38,93,34],[37,39,93,35],[37,41,93,37],[37,48,93,44],[37,52,93,48],[38,8,94,4],[39,8,95,4],[39,12,95,10,"result"],[39,18,95,16],[39,21,95,19,"witnessCommits"],[39,35,95,33],[39,36,95,34,"witnessCommits"],[39,50,95,48],[39,51,95,49,"length"],[39,57,95,55],[39,60,95,58],[39,61,95,59],[39,62,95,60],[40,8,96,4],[40,12,96,8],[40,14,96,10,"result"],[40,20,96,16],[40,32,96,28,"Buffer"],[40,38,96,34],[40,42,96,38,"result"],[40,48,96,44],[40,49,96,45,"length"],[40,55,96,51],[40,60,96,56],[40,62,96,58],[40,63,96,59],[40,65,96,61],[40,72,96,68],[40,76,96,72],[41,8,97,4],[41,15,97,11,"result"],[41,21,97,17],[42,6,98,2],[43,4,98,3],[44,6,98,3,"key"],[44,9,98,3],[45,6,98,3,"value"],[45,11,98,3],[45,13,99,2],[45,22,99,2,"hasWitnessCommit"],[45,38,99,18,"hasWitnessCommit"],[45,39,99,18],[45,41,99,21],[46,8,100,4],[46,12,101,6],[46,16,101,10],[46,17,101,11,"witnessCommit"],[46,30,101,24],[46,42,101,36,"Buffer"],[46,48,101,42],[46,52,102,6],[46,56,102,10],[46,57,102,11,"witnessCommit"],[46,70,102,24],[46,71,102,25,"length"],[46,77,102,31],[46,82,102,36],[46,84,102,38],[46,86,104,6],[46,93,104,13],[46,97,104,17],[47,8,105,4],[47,12,105,8],[47,16,105,12],[47,17,105,13,"getWitnessCommit"],[47,33,105,29],[47,34,105,30],[47,35,105,31],[47,40,105,36],[47,44,105,40],[47,46,105,42],[47,53,105,49],[47,57,105,53],[48,8,106,4],[48,15,106,11],[48,20,106,16],[49,6,107,2],[50,4,107,3],[51,6,107,3,"key"],[51,9,107,3],[52,6,107,3,"value"],[52,11,107,3],[52,13,108,2],[52,22,108,2,"hasWitness"],[52,32,108,12,"hasWitness"],[52,33,108,12],[52,35,108,15],[53,8,109,4],[53,15,109,11,"anyTxHasWitness"],[53,30,109,26],[53,31,109,27],[53,35,109,31],[53,36,109,32,"transactions"],[53,48,109,44],[53,49,109,45],[54,6,110,2],[55,4,110,3],[56,6,110,3,"key"],[56,9,110,3],[57,6,110,3,"value"],[57,11,110,3],[57,13,111,2],[57,22,111,2,"weight"],[57,28,111,8,"weight"],[57,29,111,8],[57,31,111,11],[58,8,112,4],[58,12,112,10,"base"],[58,16,112,14],[58,19,112,17],[58,23,112,21],[58,24,112,22,"byteLength"],[58,34,112,32],[58,35,112,33],[58,40,112,38],[58,42,112,40],[58,47,112,45],[58,48,112,46],[59,8,113,4],[59,12,113,10,"total"],[59,17,113,15],[59,20,113,18],[59,24,113,22],[59,25,113,23,"byteLength"],[59,35,113,33],[59,36,113,34],[59,41,113,39],[59,43,113,41],[59,47,113,45],[59,48,113,46],[60,8,114,4],[60,15,114,11,"base"],[60,19,114,15],[60,22,114,18],[60,23,114,19],[60,26,114,22,"total"],[60,31,114,27],[61,6,115,2],[62,4,115,3],[63,6,115,3,"key"],[63,9,115,3],[64,6,115,3,"value"],[64,11,115,3],[64,13,116,2],[64,22,116,2,"byteLength"],[64,32,116,12,"byteLength"],[64,33,116,13,"headersOnly"],[64,44,116,24],[64,46,116,47],[65,8,116,47],[65,12,116,26,"allowWitness"],[65,24,116,38],[65,27,116,38,"arguments"],[65,36,116,38],[65,37,116,38,"length"],[65,43,116,38],[65,51,116,38,"arguments"],[65,60,116,38],[65,68,116,38,"undefined"],[65,77,116,38],[65,80,116,38,"arguments"],[65,89,116,38],[65,95,116,41],[65,99,116,45],[66,8,117,4],[66,12,117,8,"headersOnly"],[66,23,117,19],[66,27,117,23],[66,28,117,24],[66,32,117,28],[66,33,117,29,"transactions"],[66,45,117,41],[66,47,117,43],[66,54,117,50],[66,56,117,52],[67,8,118,4],[67,15,119,6],[67,17,119,8],[67,20,120,6,"_$$_REQUIRE"],[67,31,120,6],[67,32,120,6,"_dependencyMap"],[67,46,120,6],[67,68,120,20,"varuint"],[67,75,120,27],[67,76,120,28,"encodingLength"],[67,90,120,42],[67,91,120,43],[67,95,120,47],[67,96,120,48,"transactions"],[67,108,120,60],[67,109,120,61,"length"],[67,115,120,67],[67,116,120,68],[67,119,121,6],[67,123,121,10],[67,124,121,11,"transactions"],[67,136,121,23],[67,137,121,24,"reduce"],[67,143,121,30],[67,144,121,31],[67,154,121,32,"a"],[67,155,121,33],[67,157,121,35,"x"],[67,158,121,36],[68,10,121,36],[68,17,121,41,"a"],[68,18,121,42],[68,21,121,45,"x"],[68,22,121,46],[68,23,121,47,"byteLength"],[68,33,121,57],[68,34,121,58,"allowWitness"],[68,46,121,70],[68,47,121,71],[69,8,121,71],[69,11,121,73],[69,12,121,74],[69,13,121,75],[70,6,123,2],[71,4,123,3],[72,6,123,3,"key"],[72,9,123,3],[73,6,123,3,"value"],[73,11,123,3],[73,13,124,2],[73,22,124,2,"getHash"],[73,29,124,9,"getHash"],[73,30,124,9],[73,32,124,12],[74,8,125,4],[74,15,125,11,"_$$_REQUIRE"],[74,26,125,11],[74,27,125,11,"_dependencyMap"],[74,41,125,11],[74,58,125,19,"hash256"],[74,65,125,26],[74,66,125,27],[74,70,125,31],[74,71,125,32,"toBuffer"],[74,79,125,40],[74,80,125,41],[74,84,125,45],[74,85,125,46],[74,86,125,47],[75,6,126,2],[76,4,126,3],[77,6,126,3,"key"],[77,9,126,3],[78,6,126,3,"value"],[78,11,126,3],[78,13,127,2],[78,22,127,2,"getId"],[78,27,127,7,"getId"],[78,28,127,7],[78,30,127,10],[79,8,128,4],[79,15,128,11],[79,16,128,12],[79,17,128,13],[79,19,128,15,"_$$_REQUIRE"],[79,30,128,15],[79,31,128,15,"_dependencyMap"],[79,45,128,15],[79,67,128,29,"reverseBuffer"],[79,80,128,42],[79,82,128,44],[79,86,128,48],[79,87,128,49,"getHash"],[79,94,128,56],[79,95,128,57],[79,96,128,58],[79,97,128,59],[79,98,128,60,"toString"],[79,106,128,68],[79,107,128,69],[79,112,128,74],[79,113,128,75],[80,6,129,2],[81,4,129,3],[82,6,129,3,"key"],[82,9,129,3],[83,6,129,3,"value"],[83,11,129,3],[83,13,130,2],[83,22,130,2,"getUTCDate"],[83,32,130,12,"getUTCDate"],[83,33,130,12],[83,35,130,15],[84,8,131,4],[84,12,131,10,"date"],[84,16,131,14],[84,19,131,17],[84,23,131,21,"Date"],[84,27,131,25],[84,28,131,26],[84,29,131,27],[84,30,131,28],[84,31,131,29],[84,32,131,30],[85,8,132,4,"date"],[85,12,132,8],[85,13,132,9,"setUTCSeconds"],[85,26,132,22],[85,27,132,23],[85,31,132,27],[85,32,132,28,"timestamp"],[85,41,132,37],[85,42,132,38],[86,8,133,4],[86,15,133,11,"date"],[86,19,133,15],[87,6,134,2],[88,6,135,2],[89,4,135,2],[90,6,135,2,"key"],[90,9,135,2],[91,6,135,2,"value"],[91,11,135,2],[91,13,136,2],[91,22,136,2,"toBuffer"],[91,30,136,10,"toBuffer"],[91,31,136,11,"headersOnly"],[91,42,136,22],[91,44,136,24],[92,8,137,4],[92,12,137,10,"buffer"],[92,18,137,16],[92,21,137,19,"Buffer"],[92,27,137,25],[92,28,137,26,"allocUnsafe"],[92,39,137,37],[92,40,137,38],[92,44,137,42],[92,45,137,43,"byteLength"],[92,55,137,53],[92,56,137,54,"headersOnly"],[92,67,137,65],[92,68,137,66],[92,69,137,67],[93,8,138,4],[93,12,138,10,"bufferWriter"],[93,24,138,22],[93,27,138,25],[93,32,138,29,"_$$_REQUIRE"],[93,43,138,29],[93,44,138,29,"_dependencyMap"],[93,58,138,29],[93,80,138,43,"BufferWriter"],[93,92,138,55],[93,94,138,56,"buffer"],[93,100,138,62],[93,101,138,63],[94,8,139,4,"bufferWriter"],[94,20,139,16],[94,21,139,17,"writeInt32"],[94,31,139,27],[94,32,139,28],[94,36,139,32],[94,37,139,33,"version"],[94,44,139,40],[94,45,139,41],[95,8,140,4,"bufferWriter"],[95,20,140,16],[95,21,140,17,"writeSlice"],[95,31,140,27],[95,32,140,28],[95,36,140,32],[95,37,140,33,"prevHash"],[95,45,140,41],[95,46,140,42],[96,8,141,4,"bufferWriter"],[96,20,141,16],[96,21,141,17,"writeSlice"],[96,31,141,27],[96,32,141,28],[96,36,141,32],[96,37,141,33,"merkleRoot"],[96,47,141,43],[96,48,141,44],[97,8,142,4,"bufferWriter"],[97,20,142,16],[97,21,142,17,"writeUInt32"],[97,32,142,28],[97,33,142,29],[97,37,142,33],[97,38,142,34,"timestamp"],[97,47,142,43],[97,48,142,44],[98,8,143,4,"bufferWriter"],[98,20,143,16],[98,21,143,17,"writeUInt32"],[98,32,143,28],[98,33,143,29],[98,37,143,33],[98,38,143,34,"bits"],[98,42,143,38],[98,43,143,39],[99,8,144,4,"bufferWriter"],[99,20,144,16],[99,21,144,17,"writeUInt32"],[99,32,144,28],[99,33,144,29],[99,37,144,33],[99,38,144,34,"nonce"],[99,43,144,39],[99,44,144,40],[100,8,145,4],[100,12,145,8,"headersOnly"],[100,23,145,19],[100,27,145,23],[100,28,145,24],[100,32,145,28],[100,33,145,29,"transactions"],[100,45,145,41],[100,47,145,43],[100,54,145,50,"buffer"],[100,60,145,56],[101,8,146,4,"_$$_REQUIRE"],[101,19,146,4],[101,20,146,4,"_dependencyMap"],[101,34,146,4],[101,56,146,18,"varuint"],[101,63,146,25],[101,64,146,26,"encode"],[101,70,146,32],[101,71,147,6],[101,75,147,10],[101,76,147,11,"transactions"],[101,88,147,23],[101,89,147,24,"length"],[101,95,147,30],[101,97,148,6,"buffer"],[101,103,148,12],[101,105,149,6,"bufferWriter"],[101,117,149,18],[101,118,149,19,"offset"],[101,124,150,4],[101,125,150,5],[102,8,151,4,"bufferWriter"],[102,20,151,16],[102,21,151,17,"offset"],[102,27,151,23],[102,31,151,27,"_$$_REQUIRE"],[102,42,151,27],[102,43,151,27,"_dependencyMap"],[102,57,151,27],[102,79,151,41,"varuint"],[102,86,151,48],[102,87,151,49,"encode"],[102,93,151,55],[102,94,151,56,"bytes"],[102,99,151,61],[103,8,152,4],[103,12,152,8],[103,13,152,9,"transactions"],[103,25,152,21],[103,26,152,22,"forEach"],[103,33,152,29],[103,34,152,30],[103,44,152,30,"tx"],[103,46,152,32],[103,48,152,36],[104,10,153,6],[104,14,153,12,"txSize"],[104,20,153,18],[104,23,153,21,"tx"],[104,25,153,23],[104,26,153,24,"byteLength"],[104,36,153,34],[104,37,153,35],[104,38,153,36],[104,39,153,37],[104,40,153,38],[105,10,154,6,"tx"],[105,12,154,8],[105,13,154,9,"toBuffer"],[105,21,154,17],[105,22,154,18,"buffer"],[105,28,154,24],[105,30,154,26,"bufferWriter"],[105,42,154,38],[105,43,154,39,"offset"],[105,49,154,45],[105,50,154,46],[106,10,155,6,"bufferWriter"],[106,22,155,18],[106,23,155,19,"offset"],[106,29,155,25],[106,33,155,29,"txSize"],[106,39,155,35],[107,8,156,4],[107,9,156,5],[107,10,156,6],[108,8,157,4],[108,15,157,11,"buffer"],[108,21,157,17],[109,6,158,2],[110,4,158,3],[111,6,158,3,"key"],[111,9,158,3],[112,6,158,3,"value"],[112,11,158,3],[112,13,159,2],[112,22,159,2,"toHex"],[112,27,159,7,"toHex"],[112,28,159,8,"headersOnly"],[112,39,159,19],[112,41,159,21],[113,8,160,4],[113,15,160,11],[113,19,160,15],[113,20,160,16,"toBuffer"],[113,28,160,24],[113,29,160,25,"headersOnly"],[113,40,160,36],[113,41,160,37],[113,42,160,38,"toString"],[113,50,160,46],[113,51,160,47],[113,56,160,52],[113,57,160,53],[114,6,161,2],[115,4,161,3],[116,6,161,3,"key"],[116,9,161,3],[117,6,161,3,"value"],[117,11,161,3],[117,13,162,2],[117,22,162,2,"checkTxRoots"],[117,34,162,14,"checkTxRoots"],[117,35,162,14],[117,37,162,17],[118,8,163,4],[119,8,164,4],[120,8,165,4],[120,12,165,10,"hasWitnessCommit"],[120,28,165,26],[120,31,165,29],[120,35,165,33],[120,36,165,34,"hasWitnessCommit"],[120,52,165,50],[120,53,165,51],[120,54,165,52],[121,8,166,4],[121,12,166,8],[121,13,166,9,"hasWitnessCommit"],[121,29,166,25],[121,33,166,29],[121,37,166,33],[121,38,166,34,"hasWitness"],[121,48,166,44],[121,49,166,45],[121,50,166,46],[121,52,166,48],[121,59,166,55],[121,64,166,60],[122,8,167,4],[122,15,168,6],[122,19,168,10],[122,20,168,11,"__checkMerkleRoot"],[122,37,168,28],[122,38,168,29],[122,39,168,30],[122,44,169,7,"hasWitnessCommit"],[122,60,169,23],[122,63,169,26],[122,67,169,30],[122,68,169,31,"__checkWitnessCommit"],[122,88,169,51],[122,89,169,52],[122,90,169,53],[122,93,169,56],[122,97,169,60],[122,98,169,61],[123,6,171,2],[124,4,171,3],[125,6,171,3,"key"],[125,9,171,3],[126,6,171,3,"value"],[126,11,171,3],[126,13,172,2],[126,22,172,2,"checkProofOfWork"],[126,38,172,18,"checkProofOfWork"],[126,39,172,18],[126,41,172,21],[127,8,173,4],[127,12,173,10,"hash"],[127,16,173,14],[127,19,173,17],[127,20,173,18],[127,21,173,19],[127,23,173,21,"_$$_REQUIRE"],[127,34,173,21],[127,35,173,21,"_dependencyMap"],[127,49,173,21],[127,71,173,35,"reverseBuffer"],[127,84,173,48],[127,86,173,50],[127,90,173,54],[127,91,173,55,"getHash"],[127,98,173,62],[127,99,173,63],[127,100,173,64],[127,101,173,65],[128,8,174,4],[128,12,174,10,"target"],[128,18,174,16],[128,21,174,19,"Block"],[128,26,174,24],[128,27,174,25,"calculateTarget"],[128,42,174,40],[128,43,174,41],[128,47,174,45],[128,48,174,46,"bits"],[128,52,174,50],[128,53,174,51],[129,8,175,4],[129,15,175,11,"hash"],[129,19,175,15],[129,20,175,16,"compare"],[129,27,175,23],[129,28,175,24,"target"],[129,34,175,30],[129,35,175,31],[129,39,175,35],[129,40,175,36],[130,6,176,2],[131,4,176,3],[132,6,176,3,"key"],[132,9,176,3],[133,6,176,3,"value"],[133,11,176,3],[133,13,177,2],[133,22,177,2,"__checkMerkleRoot"],[133,39,177,19,"__checkMerkleRoot"],[133,40,177,19],[133,42,177,22],[134,8,178,4],[134,12,178,8],[134,13,178,9],[134,17,178,13],[134,18,178,14,"transactions"],[134,30,178,26],[134,32,178,28],[134,38,178,34,"errorMerkleNoTxes"],[134,55,178,51],[135,8,179,4],[135,12,179,10,"actualMerkleRoot"],[135,28,179,26],[135,31,179,29,"Block"],[135,36,179,34],[135,37,179,35,"calculateMerkleRoot"],[135,56,179,54],[135,57,179,55],[135,61,179,59],[135,62,179,60,"transactions"],[135,74,179,72],[135,75,179,73],[136,8,180,4],[136,15,180,11],[136,19,180,15],[136,20,180,16,"merkleRoot"],[136,30,180,26],[136,31,180,27,"compare"],[136,38,180,34],[136,39,180,35,"actualMerkleRoot"],[136,55,180,51],[136,56,180,52],[136,61,180,57],[136,62,180,58],[137,6,181,2],[138,4,181,3],[139,6,181,3,"key"],[139,9,181,3],[140,6,181,3,"value"],[140,11,181,3],[140,13,182,2],[140,22,182,2,"__checkWitnessCommit"],[140,42,182,22,"__checkWitnessCommit"],[140,43,182,22],[140,45,182,25],[141,8,183,4],[141,12,183,8],[141,13,183,9],[141,17,183,13],[141,18,183,14,"transactions"],[141,30,183,26],[141,32,183,28],[141,38,183,34,"errorMerkleNoTxes"],[141,55,183,51],[142,8,184,4],[142,12,184,8],[142,13,184,9],[142,17,184,13],[142,18,184,14,"hasWitnessCommit"],[142,34,184,30],[142,35,184,31],[142,36,184,32],[142,38,184,34],[142,44,184,40,"errorWitnessNotSegwit"],[142,65,184,61],[143,8,185,4],[143,12,185,10,"actualWitnessCommit"],[143,31,185,29],[143,34,185,32,"Block"],[143,39,185,37],[143,40,185,38,"calculateMerkleRoot"],[143,59,185,57],[143,60,186,6],[143,64,186,10],[143,65,186,11,"transactions"],[143,77,186,23],[143,79,187,6],[143,83,188,4],[143,84,188,5],[144,8,189,4],[144,15,189,11],[144,19,189,15],[144,20,189,16,"witnessCommit"],[144,33,189,29],[144,34,189,30,"compare"],[144,41,189,37],[144,42,189,38,"actualWitnessCommit"],[144,61,189,57],[144,62,189,58],[144,67,189,63],[144,68,189,64],[145,6,190,2],[146,4,190,3],[147,6,190,3,"key"],[147,9,190,3],[148,6,190,3,"value"],[148,11,190,3],[148,13,27,2],[148,22,27,9,"fromBuffer"],[148,32,27,19,"fromBuffer"],[148,33,27,20,"buffer"],[148,39,27,26],[148,41,27,28],[149,8,28,4],[149,12,28,8,"buffer"],[149,18,28,14],[149,19,28,15,"length"],[149,25,28,21],[149,28,28,24],[149,30,28,26],[149,32,28,28],[149,38,28,34],[149,42,28,38,"Error"],[149,47,28,43],[149,48,28,44],[149,79,28,75],[149,80,28,76],[150,8,29,4],[150,12,29,10,"bufferReader"],[150,24,29,22],[150,27,29,25],[150,32,29,29,"_$$_REQUIRE"],[150,43,29,29],[150,44,29,29,"_dependencyMap"],[150,58,29,29],[150,80,29,43,"BufferReader"],[150,92,29,55],[150,94,29,56,"buffer"],[150,100,29,62],[150,101,29,63],[151,8,30,4],[151,12,30,10,"block"],[151,17,30,15],[151,20,30,18],[151,24,30,22,"Block"],[151,29,30,27],[151,30,30,28],[151,31,30,29],[152,8,31,4,"block"],[152,13,31,9],[152,14,31,10,"version"],[152,21,31,17],[152,24,31,20,"bufferReader"],[152,36,31,32],[152,37,31,33,"readInt32"],[152,46,31,42],[152,47,31,43],[152,48,31,44],[153,8,32,4,"block"],[153,13,32,9],[153,14,32,10,"prevHash"],[153,22,32,18],[153,25,32,21,"bufferReader"],[153,37,32,33],[153,38,32,34,"readSlice"],[153,47,32,43],[153,48,32,44],[153,50,32,46],[153,51,32,47],[154,8,33,4,"block"],[154,13,33,9],[154,14,33,10,"merkleRoot"],[154,24,33,20],[154,27,33,23,"bufferReader"],[154,39,33,35],[154,40,33,36,"readSlice"],[154,49,33,45],[154,50,33,46],[154,52,33,48],[154,53,33,49],[155,8,34,4,"block"],[155,13,34,9],[155,14,34,10,"timestamp"],[155,23,34,19],[155,26,34,22,"bufferReader"],[155,38,34,34],[155,39,34,35,"readUInt32"],[155,49,34,45],[155,50,34,46],[155,51,34,47],[156,8,35,4,"block"],[156,13,35,9],[156,14,35,10,"bits"],[156,18,35,14],[156,21,35,17,"bufferReader"],[156,33,35,29],[156,34,35,30,"readUInt32"],[156,44,35,40],[156,45,35,41],[156,46,35,42],[157,8,36,4,"block"],[157,13,36,9],[157,14,36,10,"nonce"],[157,19,36,15],[157,22,36,18,"bufferReader"],[157,34,36,30],[157,35,36,31,"readUInt32"],[157,45,36,41],[157,46,36,42],[157,47,36,43],[158,8,37,4],[158,12,37,8,"buffer"],[158,18,37,14],[158,19,37,15,"length"],[158,25,37,21],[158,30,37,26],[158,32,37,28],[158,34,37,30],[158,41,37,37,"block"],[158,46,37,42],[159,8,38,4],[159,12,38,10,"readTransaction"],[159,27,38,25],[159,30,38,28],[159,39,38,10,"readTransaction"],[159,54,38,25,"readTransaction"],[159,55,38,25],[159,57,38,34],[160,10,39,6],[160,14,39,12,"tx"],[160,16,39,14],[160,19,39,17,"_$$_REQUIRE"],[160,30,39,17],[160,31,39,17,"_dependencyMap"],[160,45,39,17],[160,67,39,31,"Transaction"],[160,78,39,42],[160,79,39,43,"fromBuffer"],[160,89,39,53],[160,90,40,8,"bufferReader"],[160,102,40,20],[160,103,40,21,"buffer"],[160,109,40,27],[160,110,40,28,"slice"],[160,115,40,33],[160,116,40,34,"bufferReader"],[160,128,40,46],[160,129,40,47,"offset"],[160,135,40,53],[160,136,40,54],[160,138,41,8],[160,142,42,6],[160,143,42,7],[161,10,43,6,"bufferReader"],[161,22,43,18],[161,23,43,19,"offset"],[161,29,43,25],[161,33,43,29,"tx"],[161,35,43,31],[161,36,43,32,"byteLength"],[161,46,43,42],[161,47,43,43],[161,48,43,44],[162,10,44,6],[162,17,44,13,"tx"],[162,19,44,15],[163,8,45,4],[163,9,45,5],[164,8,46,4],[164,12,46,10,"nTransactions"],[164,25,46,23],[164,28,46,26,"bufferReader"],[164,40,46,38],[164,41,46,39,"readVarInt"],[164,51,46,49],[164,52,46,50],[164,53,46,51],[165,8,47,4,"block"],[165,13,47,9],[165,14,47,10,"transactions"],[165,26,47,22],[165,29,47,25],[165,31,47,27],[166,8,48,4],[166,13,48,9],[166,17,48,13,"i"],[166,18,48,14],[166,21,48,17],[166,22,48,18],[166,24,48,20,"i"],[166,25,48,21],[166,28,48,24,"nTransactions"],[166,41,48,37],[166,43,48,39],[166,45,48,41,"i"],[166,46,48,42],[166,48,48,44],[167,10,49,6],[167,14,49,12,"tx"],[167,16,49,14],[167,19,49,17,"readTransaction"],[167,34,49,32],[167,35,49,33],[167,36,49,34],[168,10,50,6,"block"],[168,15,50,11],[168,16,50,12,"transactions"],[168,28,50,24],[168,29,50,25,"push"],[168,33,50,29],[168,34,50,30,"tx"],[168,36,50,32],[168,37,50,33],[169,8,51,4],[170,8,52,4],[170,12,52,10,"witnessCommit"],[170,25,52,23],[170,28,52,26,"block"],[170,33,52,31],[170,34,52,32,"getWitnessCommit"],[170,50,52,48],[170,51,52,49],[170,52,52,50],[171,8,53,4],[172,8,54,4],[172,12,54,8,"witnessCommit"],[172,25,54,21],[172,27,54,23,"block"],[172,32,54,28],[172,33,54,29,"witnessCommit"],[172,46,54,42],[172,49,54,45,"witnessCommit"],[172,62,54,58],[173,8,55,4],[173,15,55,11,"block"],[173,20,55,16],[174,6,56,2],[175,4,56,3],[176,6,56,3,"key"],[176,9,56,3],[177,6,56,3,"value"],[177,11,56,3],[177,13,57,2],[177,22,57,9,"fromHex"],[177,29,57,16,"fromHex"],[177,30,57,17,"hex"],[177,33,57,20],[177,35,57,22],[178,8,58,4],[178,15,58,11,"Block"],[178,20,58,16],[178,21,58,17,"fromBuffer"],[178,31,58,27],[178,32,58,28,"Buffer"],[178,38,58,34],[178,39,58,35,"from"],[178,43,58,39],[178,44,58,40,"hex"],[178,47,58,43],[178,49,58,45],[178,54,58,50],[178,55,58,51],[178,56,58,52],[179,6,59,2],[180,4,59,3],[181,6,59,3,"key"],[181,9,59,3],[182,6,59,3,"value"],[182,11,59,3],[182,13,60,2],[182,22,60,9,"calculateTarget"],[182,37,60,24,"calculateTarget"],[182,38,60,25,"bits"],[182,42,60,29],[182,44,60,31],[183,8,61,4],[183,12,61,10,"exponent"],[183,20,61,18],[183,23,61,21],[183,24,61,22],[183,25,61,23,"bits"],[183,29,61,27],[183,32,61,30],[183,42,61,40],[183,47,61,45],[183,49,61,47],[183,53,61,51],[183,54,61,52],[184,8,62,4],[184,12,62,10,"mantissa"],[184,20,62,18],[184,23,62,21,"bits"],[184,27,62,25],[184,30,62,28],[184,40,62,38],[185,8,63,4],[185,12,63,10,"target"],[185,18,63,16],[185,21,63,19,"Buffer"],[185,27,63,25],[185,28,63,26,"alloc"],[185,33,63,31],[185,34,63,32],[185,36,63,34],[185,38,63,36],[185,39,63,37],[185,40,63,38],[186,8,64,4,"target"],[186,14,64,10],[186,15,64,11,"writeUIntBE"],[186,26,64,22],[186,27,64,23,"mantissa"],[186,35,64,31],[186,37,64,33],[186,39,64,35],[186,42,64,38,"exponent"],[186,50,64,46],[186,52,64,48],[186,53,64,49],[186,54,64,50],[187,8,65,4],[187,15,65,11,"target"],[187,21,65,17],[188,6,66,2],[189,4,66,3],[190,6,66,3,"key"],[190,9,66,3],[191,6,66,3,"value"],[191,11,66,3],[191,13,67,2],[191,22,67,9,"calculateMerkleRoot"],[191,41,67,28,"calculateMerkleRoot"],[191,42,67,29,"transactions"],[191,54,67,41],[191,56,67,43,"forWitness"],[191,66,67,53],[191,68,67,55],[192,8,68,4,"_$$_REQUIRE"],[192,19,68,4],[192,20,68,4,"_dependencyMap"],[192,34,68,4],[192,50,68,4,"typeforce"],[192,59,68,4],[192,60,68,14],[192,61,68,15],[193,10,68,17,"getHash"],[193,17,68,24],[193,19,68,26,"_$$_REQUIRE"],[193,30,68,26],[193,31,68,26,"_dependencyMap"],[193,45,68,26],[193,61,68,32,"Function"],[194,8,68,41],[194,9,68,42],[194,10,68,43],[194,12,68,45,"transactions"],[194,24,68,57],[194,25,68,58],[195,8,69,4],[195,12,69,8,"transactions"],[195,24,69,20],[195,25,69,21,"length"],[195,31,69,27],[195,36,69,32],[195,37,69,33],[195,39,69,35],[195,45,69,41,"errorMerkleNoTxes"],[195,62,69,58],[196,8,70,4],[196,12,70,8,"forWitness"],[196,22,70,18],[196,26,70,22],[196,27,70,23,"txesHaveWitnessCommit"],[196,48,70,44],[196,49,70,45,"transactions"],[196,61,70,57],[196,62,70,58],[196,64,71,6],[196,70,71,12,"errorWitnessNotSegwit"],[196,91,71,33],[197,8,72,4],[197,12,72,10,"hashes"],[197,18,72,16],[197,21,72,19,"transactions"],[197,33,72,31],[197,34,72,32,"map"],[197,37,72,35],[197,38,72,36],[197,48,72,36,"transaction"],[197,59,72,47],[198,10,72,47],[198,17,73,6,"transaction"],[198,28,73,17],[198,29,73,18,"getHash"],[198,36,73,25],[198,37,73,26,"forWitness"],[198,47,73,36],[198,48,73,37],[199,8,73,37],[199,9,74,4],[199,10,74,5],[200,8,75,4],[200,12,75,10,"rootHash"],[200,20,75,18],[200,23,75,21],[200,24,75,22],[200,25,75,23],[200,27,75,25,"_$$_REQUIRE"],[200,38,75,25],[200,39,75,25,"_dependencyMap"],[200,53,75,25],[200,70,75,34,"fastMerkleRoot"],[200,84,75,48],[200,86,75,50,"hashes"],[200,92,75,56],[200,94,75,58,"_$$_REQUIRE"],[200,105,75,58],[200,106,75,58,"_dependencyMap"],[200,120,75,58],[200,137,75,66,"hash256"],[200,144,75,73],[200,145,75,74],[201,8,76,4],[201,15,76,11,"forWitness"],[201,25,76,21],[201,28,77,8,"_$$_REQUIRE"],[201,39,77,8],[201,40,77,8,"_dependencyMap"],[201,54,77,8],[201,71,77,16,"hash256"],[201,78,77,23],[201,79,78,10,"Buffer"],[201,85,78,16],[201,86,78,17,"concat"],[201,92,78,23],[201,93,78,24],[201,94,78,25,"rootHash"],[201,102,78,33],[201,104,78,35,"transactions"],[201,116,78,47],[201,117,78,48],[201,118,78,49],[201,119,78,50],[201,120,78,51,"ins"],[201,123,78,54],[201,124,78,55],[201,125,78,56],[201,126,78,57],[201,127,78,58,"witness"],[201,134,78,65],[201,135,78,66],[201,136,78,67],[201,137,78,68],[201,138,78,69],[201,139,79,8],[201,140,79,9],[201,143,80,8,"rootHash"],[201,151,80,16],[202,6,81,2],[203,4,81,3],[204,2,81,3],[205,2,192,0,"exports"],[205,9,192,7],[205,10,192,8,"Block"],[205,15,192,13],[205,18,192,16,"Block"],[205,23,192,21],[206,2,193,0],[206,11,193,9,"txesHaveWitnessCommit"],[206,32,193,30,"txesHaveWitnessCommit"],[206,33,193,31,"transactions"],[206,45,193,43],[206,47,193,45],[207,4,194,2],[207,11,195,4,"transactions"],[207,23,195,16],[207,35,195,28,"Array"],[207,40,195,33],[207,44,196,4,"transactions"],[207,56,196,16],[207,57,196,17],[207,58,196,18],[207,59,196,19],[207,63,197,4,"transactions"],[207,75,197,16],[207,76,197,17],[207,77,197,18],[207,78,197,19],[207,79,197,20,"ins"],[207,82,197,23],[207,86,198,4,"transactions"],[207,98,198,16],[207,99,198,17],[207,100,198,18],[207,101,198,19],[207,102,198,20,"ins"],[207,105,198,23],[207,117,198,35,"Array"],[207,122,198,40],[207,126,199,4,"transactions"],[207,138,199,16],[207,139,199,17],[207,140,199,18],[207,141,199,19],[207,142,199,20,"ins"],[207,145,199,23],[207,146,199,24],[207,147,199,25],[207,148,199,26],[207,152,200,4,"transactions"],[207,164,200,16],[207,165,200,17],[207,166,200,18],[207,167,200,19],[207,168,200,20,"ins"],[207,171,200,23],[207,172,200,24],[207,173,200,25],[207,174,200,26],[207,175,200,27,"witness"],[207,182,200,34],[207,186,201,4,"transactions"],[207,198,201,16],[207,199,201,17],[207,200,201,18],[207,201,201,19],[207,202,201,20,"ins"],[207,205,201,23],[207,206,201,24],[207,207,201,25],[207,208,201,26],[207,209,201,27,"witness"],[207,216,201,34],[207,228,201,46,"Array"],[207,233,201,51],[207,237,202,4,"transactions"],[207,249,202,16],[207,250,202,17],[207,251,202,18],[207,252,202,19],[207,253,202,20,"ins"],[207,256,202,23],[207,257,202,24],[207,258,202,25],[207,259,202,26],[207,260,202,27,"witness"],[207,267,202,34],[207,268,202,35,"length"],[207,274,202,41],[207,277,202,44],[207,278,202,45],[208,2,204,0],[209,2,205,0],[209,11,205,9,"anyTxHasWitness"],[209,26,205,24,"anyTxHasWitness"],[209,27,205,25,"transactions"],[209,39,205,37],[209,41,205,39],[210,4,206,2],[210,11,207,4,"transactions"],[210,23,207,16],[210,35,207,28,"Array"],[210,40,207,33],[210,44,208,4,"transactions"],[210,56,208,16],[210,57,208,17,"some"],[210,61,208,21],[210,62,209,6],[210,72,209,6,"tx"],[210,74,209,8],[211,6,209,8],[211,13,210,8],[211,20,210,15,"tx"],[211,22,210,17],[211,27,210,22],[211,35,210,30],[211,39,211,8,"tx"],[211,41,211,10],[211,42,211,11,"ins"],[211,45,211,14],[211,57,211,26,"Array"],[211,62,211,31],[211,66,212,8,"tx"],[211,68,212,10],[211,69,212,11,"ins"],[211,72,212,14],[211,73,212,15,"some"],[211,77,212,19],[211,78,213,10],[211,88,213,10,"input"],[211,93,213,15],[212,8,213,15],[212,15,214,12],[212,22,214,19,"input"],[212,27,214,24],[212,32,214,29],[212,40,214,37],[212,44,215,12,"input"],[212,49,215,17],[212,50,215,18,"witness"],[212,57,215,25],[212,69,215,37,"Array"],[212,74,215,42],[212,78,216,12,"input"],[212,83,216,17],[212,84,216,18,"witness"],[212,91,216,25],[212,92,216,26,"length"],[212,98,216,32],[212,101,216,35],[212,102,216,36],[213,6,216,36],[213,7,217,8],[213,8,217,9],[214,4,217,9],[214,5,218,4],[214,6,218,5],[215,2,220,0],[216,0,220,1],[216,3]],"functionMap":{"names":["<global>","Block","Block#constructor","Block.fromBuffer","readTransaction","Block.fromHex","Block.calculateTarget","Block.calculateMerkleRoot","transactions.map$argument_0","Block#getWitnessCommit","transactions._.outs.filter$argument_0","transactions._.outs.filter.map$argument_0","Block#hasWitnessCommit","Block#hasWitness","Block#weight","Block#byteLength","transactions.reduce$argument_0","Block#getHash","Block#getId","Block#getUTCDate","Block#toBuffer","transactions.forEach$argument_0","Block#toHex","Block#checkTxRoots","Block#checkProofOfWork","Block#__checkMerkleRoot","Block#__checkWitnessCommit","txesHaveWitnessCommit","anyTxHasWitness","transactions.some$argument_0","tx.ins.some$argument_0"],"mappings":"AAA;ACe;ECC;GDS;EEC;4BCW;KDO;GFW;EIC;GJE;EKC;GLM;EMC;oCCK;qCDC;GNQ;EQC;cCO;yEDC;WEE,8BF;GRM;EWC;GXQ;EYC;GZE;EaC;GbI;EcC;+BCK,wCD;GdE;EgBC;GhBE;EiBC;GjBE;EkBC;GlBI;EmBE;8BCgB;KDI;GnBE;EqBC;GrBE;EsBC;GtBS;EuBC;GvBI;EwBC;GxBI;EyBC;GzBQ;CDC;A2BE;C3BW;A4BC;MCI;UCI;oCDG;SDC;C5BG"}},"type":"js/module"}]}