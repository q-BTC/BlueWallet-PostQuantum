{"dependencies":[{"name":"@bugsnag/core/lib/es-utils/map","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":53,"index":53}}],"key":"E0QgmDd5Gg5oKIUkufkI+g6GUqc="}},{"name":"@bugsnag/core/lib/es-utils/reduce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":15,"index":69},"end":{"line":2,"column":59,"index":113}}],"key":"6yBJM13EiefD54dnwyRfWXASaiU="}},{"name":"@bugsnag/core/lib/es-utils/filter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":15,"index":129},"end":{"line":3,"column":59,"index":173}}],"key":"5c1SYBnszguHssGEuizrQQF9rI0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /*\n   * Leaves breadcrumbs when console log methods are called\n   */\n  exports.load = function (client) {\n    var isDev = /^(local-)?dev(elopment)?$/.test(client._config.releaseStage);\n    if (isDev || !client._isBreadcrumbTypeEnabled('log')) return;\n    _$$_REQUIRE(_dependencyMap[0], \"@bugsnag/core/lib/es-utils/map\")(CONSOLE_LOG_METHODS, function (method) {\n      var original = console[method];\n      console[method] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        client.leaveBreadcrumb('Console output', _$$_REQUIRE(_dependencyMap[1], \"@bugsnag/core/lib/es-utils/reduce\")(args, function (accum, arg, i) {\n          // do the best/simplest stringification of each argument\n          var stringified = '[Unknown value]';\n          // this may fail if the input is:\n          // - an object whose [[Prototype]] is null (no toString)\n          // - an object with a broken toString or @@toPrimitive implementation\n          try {\n            stringified = String(arg);\n          } catch (e) {}\n          // if it stringifies to [object Object] attempt to JSON stringify\n          if (stringified === '[object Object]') {\n            // catch stringify errors and fallback to [object Object]\n            try {\n              stringified = JSON.stringify(arg);\n            } catch (e) {}\n          }\n          accum[`[${i}]`] = stringified;\n          return accum;\n        }, {\n          severity: method.indexOf('group') === 0 ? 'log' : method\n        }), 'log');\n        original.apply(console, args);\n      };\n      console[method]._restore = function () {\n        console[method] = original;\n      };\n    });\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    exports.destroy = function () {\n      return CONSOLE_LOG_METHODS.forEach(function (method) {\n        if (typeof console[method]._restore === 'function') console[method]._restore();\n      });\n    };\n  }\n  var CONSOLE_LOG_METHODS = _$$_REQUIRE(_dependencyMap[2], \"@bugsnag/core/lib/es-utils/filter\")(['log', 'debug', 'info', 'warn', 'error'], function (method) {\n    return typeof console !== 'undefined' && typeof console[method] === 'function';\n  });\n});","lineCount":52,"map":[[2,2,5,0],[3,0,6,0],[4,0,7,0],[5,2,8,0,"exports"],[5,9,8,7],[5,10,8,8,"load"],[5,14,8,12],[5,17,8,15],[5,27,8,16,"client"],[5,33,8,22],[5,35,8,27],[6,4,9,2],[6,8,9,8,"isDev"],[6,13,9,13],[6,16,9,16],[6,43,9,43],[6,44,9,44,"test"],[6,48,9,48],[6,49,9,49,"client"],[6,55,9,55],[6,56,9,56,"_config"],[6,63,9,63],[6,64,9,64,"releaseStage"],[6,76,9,76],[6,77,9,77],[7,4,11,2],[7,8,11,6,"isDev"],[7,13,11,11],[7,17,11,15],[7,18,11,16,"client"],[7,24,11,22],[7,25,11,23,"_isBreadcrumbTypeEnabled"],[7,49,11,47],[7,50,11,48],[7,55,11,53],[7,56,11,54],[7,58,11,56],[8,4,13,2,"_$$_REQUIRE"],[8,15,13,2],[8,16,13,2,"_dependencyMap"],[8,30,13,2],[8,69,13,6,"CONSOLE_LOG_METHODS"],[8,88,13,25],[8,90,13,27],[8,100,13,27,"method"],[8,106,13,33],[8,108,13,37],[9,6,14,4],[9,10,14,10,"original"],[9,18,14,18],[9,21,14,21,"console"],[9,28,14,28],[9,29,14,29,"method"],[9,35,14,35],[9,36,14,36],[10,6,15,4,"console"],[10,13,15,11],[10,14,15,12,"method"],[10,20,15,18],[10,21,15,19],[10,24,15,22],[10,36,15,35],[11,8,15,35],[11,17,15,35,"_len"],[11,21,15,35],[11,24,15,35,"arguments"],[11,33,15,35],[11,34,15,35,"length"],[11,40,15,35],[11,42,15,26,"args"],[11,46,15,30],[11,53,15,30,"Array"],[11,58,15,30],[11,59,15,30,"_len"],[11,63,15,30],[11,66,15,30,"_key"],[11,70,15,30],[11,76,15,30,"_key"],[11,80,15,30],[11,83,15,30,"_len"],[11,87,15,30],[11,89,15,30,"_key"],[11,93,15,30],[12,10,15,26,"args"],[12,14,15,30],[12,15,15,30,"_key"],[12,19,15,30],[12,23,15,30,"arguments"],[12,32,15,30],[12,33,15,30,"_key"],[12,37,15,30],[13,8,15,30],[14,8,16,6,"client"],[14,14,16,12],[14,15,16,13,"leaveBreadcrumb"],[14,30,16,28],[14,31,16,29],[14,47,16,45],[14,49,16,47,"_$$_REQUIRE"],[14,60,16,47],[14,61,16,47,"_dependencyMap"],[14,75,16,47],[14,117,16,54,"args"],[14,121,16,58],[14,123,16,60],[14,133,16,61,"accum"],[14,138,16,66],[14,140,16,68,"arg"],[14,143,16,71],[14,145,16,73,"i"],[14,146,16,74],[14,148,16,79],[15,10,17,8],[16,10,18,8],[16,14,18,12,"stringified"],[16,25,18,23],[16,28,18,26],[16,45,18,43],[17,10,19,8],[18,10,20,8],[19,10,21,8],[20,10,22,8],[20,14,22,12],[21,12,22,14,"stringified"],[21,23,22,25],[21,26,22,28,"String"],[21,32,22,34],[21,33,22,35,"arg"],[21,36,22,38],[21,37,22,39],[22,10,22,40],[22,11,22,41],[22,12,22,42],[22,19,22,49,"e"],[22,20,22,50],[22,22,22,52],[22,23,22,53],[23,10,23,8],[24,10,24,8],[24,14,24,12,"stringified"],[24,25,24,23],[24,30,24,28],[24,47,24,45],[24,49,24,47],[25,12,25,10],[26,12,26,10],[26,16,26,14],[27,14,26,16,"stringified"],[27,25,26,27],[27,28,26,30,"JSON"],[27,32,26,34],[27,33,26,35,"stringify"],[27,42,26,44],[27,43,26,45,"arg"],[27,46,26,48],[27,47,26,49],[28,12,26,50],[28,13,26,51],[28,14,26,52],[28,21,26,59,"e"],[28,22,26,60],[28,24,26,62],[28,25,26,63],[29,10,27,8],[30,10,28,8,"accum"],[30,15,28,13],[30,16,28,14],[30,20,28,18,"i"],[30,21,28,19],[30,24,28,22],[30,25,28,23],[30,28,28,26,"stringified"],[30,39,28,37],[31,10,29,8],[31,17,29,15,"accum"],[31,22,29,20],[32,8,30,6],[32,9,30,7],[32,11,30,9],[33,10,31,8,"severity"],[33,18,31,16],[33,20,31,18,"method"],[33,26,31,24],[33,27,31,25,"indexOf"],[33,34,31,32],[33,35,31,33],[33,42,31,40],[33,43,31,41],[33,48,31,46],[33,49,31,47],[33,52,31,50],[33,57,31,55],[33,60,31,58,"method"],[34,8,32,6],[34,9,32,7],[34,10,32,8],[34,12,32,10],[34,17,32,15],[34,18,32,16],[35,8,33,6,"original"],[35,16,33,14],[35,17,33,15,"apply"],[35,22,33,20],[35,23,33,21,"console"],[35,30,33,28],[35,32,33,30,"args"],[35,36,33,34],[35,37,33,35],[36,6,34,4],[36,7,34,5],[37,6,35,4,"console"],[37,13,35,11],[37,14,35,12,"method"],[37,20,35,18],[37,21,35,19],[37,22,35,20,"_restore"],[37,30,35,28],[37,33,35,31],[37,45,35,37],[38,8,35,39,"console"],[38,15,35,46],[38,16,35,47,"method"],[38,22,35,53],[38,23,35,54],[38,26,35,57,"original"],[38,34,35,65],[39,6,35,66],[39,7,35,67],[40,4,36,2],[40,5,36,3],[40,6,36,4],[41,2,37,0],[41,3,37,1],[42,2,39,0],[42,6,39,4,"process"],[42,13,39,11],[42,14,39,12,"env"],[42,17,39,15],[42,18,39,16,"NODE_ENV"],[42,26,39,24],[42,31,39,29],[42,43,39,41],[42,45,39,43],[43,4,40,2,"exports"],[43,11,40,9],[43,12,40,10,"destroy"],[43,19,40,17],[43,22,40,20],[44,6,40,20],[44,13,40,26,"CONSOLE_LOG_METHODS"],[44,32,40,45],[44,33,40,46,"forEach"],[44,40,40,53],[44,41,40,54],[44,51,40,54,"method"],[44,57,40,60],[44,59,40,64],[45,8,41,4],[45,12,41,8],[45,19,41,15,"console"],[45,26,41,22],[45,27,41,23,"method"],[45,33,41,29],[45,34,41,30],[45,35,41,31,"_restore"],[45,43,41,39],[45,48,41,44],[45,58,41,54],[45,60,41,56,"console"],[45,67,41,63],[45,68,41,64,"method"],[45,74,41,70],[45,75,41,71],[45,76,41,72,"_restore"],[45,84,41,80],[45,85,41,81],[45,86,41,82],[46,6,42,2],[46,7,42,3],[46,8,42,4],[47,4,42,4],[48,2,43,0],[49,2,45,0],[49,6,45,6,"CONSOLE_LOG_METHODS"],[49,25,45,25],[49,28,45,28,"_$$_REQUIRE"],[49,39,45,28],[49,40,45,28,"_dependencyMap"],[49,54,45,28],[49,96,45,35],[49,97,45,36],[49,102,45,41],[49,104,45,43],[49,111,45,50],[49,113,45,52],[49,119,45,58],[49,121,45,60],[49,127,45,66],[49,129,45,68],[49,136,45,75],[49,137,45,76],[49,139,45,78],[49,149,45,78,"method"],[49,155,45,84],[50,4,45,84],[50,11,46,2],[50,18,46,9,"console"],[50,25,46,16],[50,30,46,21],[50,41,46,32],[50,45,46,36],[50,52,46,43,"console"],[50,59,46,50],[50,60,46,51,"method"],[50,66,46,57],[50,67,46,58],[50,72,46,63],[50,82,46,73],[51,2,46,73],[51,3,47,0],[51,4,47,1],[52,0,47,1],[52,3]],"functionMap":{"names":["<global>","exports.load","map$argument_1","console.method","reduce$argument_1","console.method._restore","exports.destroy","CONSOLE_LOG_METHODS.forEach$argument_0","filter$argument_1"],"mappings":"AAA;eCO;2BCK;sBCE;4DCC;ODc;KDI;+BGC,oCH;GDC;CDC;oBMG,kCC;GDE,CN;8EQG;yERC"}},"type":"js/module"}]}