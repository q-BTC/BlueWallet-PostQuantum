{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":198},"end":{"line":6,"column":32,"index":216}},{"start":{"line":6,"column":14,"index":198},"end":{"line":6,"column":32,"index":216}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}},{"name":"./miniCbor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":17,"index":121},"end":{"line":4,"column":38,"index":142}}],"key":"JMZpWZg45onUIwuHobM8i3qagqs="}},{"name":"bc-bech32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":18,"index":162},"end":{"line":5,"column":38,"index":182}},{"start":{"line":5,"column":18,"index":162},"end":{"line":5,"column":38,"index":182}}],"key":"1IA0Ib80ijcSCTvmq3bv7FxoDPw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encodeUR = void 0;\n  var composeUR = function composeUR(payload, type) {\n    if (type === void 0) {\n      type = 'bytes';\n    }\n    return \"ur:\" + type + \"/\" + payload;\n  };\n  var composeDigest = function composeDigest(payload, digest) {\n    return digest + \"/\" + payload;\n  };\n  var composeSequencing = function composeSequencing(payload, index, total) {\n    return index + 1 + \"of\" + total + \"/\" + payload;\n  };\n  var composeHeadersToFragments = function composeHeadersToFragments(fragments, digest, type) {\n    if (type === void 0) {\n      type = 'bytes';\n    }\n    if (fragments.length === 1) {\n      return [composeUR(fragments[0])];\n    } else {\n      return fragments.map(function (f, index) {\n        return _$$_REQUIRE(_dependencyMap[0], \"./utils\").compose3(function (payload) {\n          return composeUR(payload, type);\n        }, function (payload) {\n          return composeSequencing(payload, index, fragments.length);\n        }, function (payload) {\n          return composeDigest(payload, digest);\n        })(f);\n      });\n    }\n  };\n  exports.encodeUR = function (payload, fragmentCapacity) {\n    if (fragmentCapacity === void 0) {\n      fragmentCapacity = 200;\n    }\n    var cborPayload = _$$_REQUIRE(_dependencyMap[1], \"./miniCbor\").encodeSimpleCBOR(payload);\n    var bc32Payload = _$$_REQUIRE(_dependencyMap[2], \"bc-bech32\").encodeBc32Data(cborPayload);\n    var digest = _$$_REQUIRE(_dependencyMap[0], \"./utils\").sha256Hash(Buffer.from(cborPayload, 'hex')).toString('hex');\n    var bc32Digest = _$$_REQUIRE(_dependencyMap[2], \"bc-bech32\").encodeBc32Data(digest);\n    var fragments = bc32Payload.match(new RegExp('.{1,' + fragmentCapacity + '}', 'g'));\n    return composeHeadersToFragments(fragments, bc32Digest, 'bytes');\n  };\n});","lineCount":49,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"encodeUR"],[7,18,3,16],[7,21,3,19],[7,26,3,24],[7,27,3,25],[8,2,7,0],[8,6,7,4,"composeUR"],[8,15,7,13],[8,18,7,16],[8,27,7,4,"composeUR"],[8,36,7,13,"composeUR"],[8,37,7,26,"payload"],[8,44,7,33],[8,46,7,35,"type"],[8,50,7,39],[8,52,7,41],[9,4,8,4],[9,8,8,8,"type"],[9,12,8,12],[9,17,8,17],[9,22,8,22],[9,23,8,23],[9,25,8,25],[10,6,8,27,"type"],[10,10,8,31],[10,13,8,34],[10,20,8,41],[11,4,8,43],[12,4,9,4],[12,11,9,11],[12,16,9,16],[12,19,9,19,"type"],[12,23,9,23],[12,26,9,26],[12,29,9,29],[12,32,9,32,"payload"],[12,39,9,39],[13,2,10,0],[13,3,10,1],[14,2,11,0],[14,6,11,4,"composeDigest"],[14,19,11,17],[14,22,11,20],[14,31,11,4,"composeDigest"],[14,44,11,17,"composeDigest"],[14,45,11,30,"payload"],[14,52,11,37],[14,54,11,39,"digest"],[14,60,11,45],[14,62,11,47],[15,4,12,4],[15,11,12,11,"digest"],[15,17,12,17],[15,20,12,20],[15,23,12,23],[15,26,12,26,"payload"],[15,33,12,33],[16,2,13,0],[16,3,13,1],[17,2,14,0],[17,6,14,4,"composeSequencing"],[17,23,14,21],[17,26,14,24],[17,35,14,4,"composeSequencing"],[17,52,14,21,"composeSequencing"],[17,53,14,34,"payload"],[17,60,14,41],[17,62,14,43,"index"],[17,67,14,48],[17,69,14,50,"total"],[17,74,14,55],[17,76,14,57],[18,4,15,4],[18,11,15,11,"index"],[18,16,15,16],[18,19,15,19],[18,20,15,20],[18,23,15,23],[18,27,15,27],[18,30,15,30,"total"],[18,35,15,35],[18,38,15,38],[18,41,15,41],[18,44,15,44,"payload"],[18,51,15,51],[19,2,16,0],[19,3,16,1],[20,2,17,0],[20,6,17,4,"composeHeadersToFragments"],[20,31,17,29],[20,34,17,32],[20,43,17,4,"composeHeadersToFragments"],[20,68,17,29,"composeHeadersToFragments"],[20,69,17,42,"fragments"],[20,78,17,51],[20,80,17,53,"digest"],[20,86,17,59],[20,88,17,61,"type"],[20,92,17,65],[20,94,17,67],[21,4,18,4],[21,8,18,8,"type"],[21,12,18,12],[21,17,18,17],[21,22,18,22],[21,23,18,23],[21,25,18,25],[22,6,18,27,"type"],[22,10,18,31],[22,13,18,34],[22,20,18,41],[23,4,18,43],[24,4,19,4],[24,8,19,8,"fragments"],[24,17,19,17],[24,18,19,18,"length"],[24,24,19,24],[24,29,19,29],[24,30,19,30],[24,32,19,32],[25,6,20,8],[25,13,20,15],[25,14,20,16,"composeUR"],[25,23,20,25],[25,24,20,26,"fragments"],[25,33,20,35],[25,34,20,36],[25,35,20,37],[25,36,20,38],[25,37,20,39],[25,38,20,40],[26,4,21,4],[26,5,21,5],[26,11,22,9],[27,6,23,8],[27,13,23,15,"fragments"],[27,22,23,24],[27,23,23,25,"map"],[27,26,23,28],[27,27,23,29],[27,37,23,39,"f"],[27,38,23,40],[27,40,23,42,"index"],[27,45,23,47],[27,47,23,49],[28,8,24,12],[28,15,24,19,"_$$_REQUIRE"],[28,26,24,19],[28,27,24,19,"_dependencyMap"],[28,41,24,19],[28,57,24,27,"compose3"],[28,65,24,35],[28,66,24,36],[28,76,24,46,"payload"],[28,83,24,53],[28,85,24,55],[29,10,24,57],[29,17,24,64,"composeUR"],[29,26,24,73],[29,27,24,74,"payload"],[29,34,24,81],[29,36,24,83,"type"],[29,40,24,87],[29,41,24,88],[30,8,24,90],[30,9,24,91],[30,11,24,93],[30,21,24,103,"payload"],[30,28,24,110],[30,30,24,112],[31,10,24,114],[31,17,24,121,"composeSequencing"],[31,34,24,138],[31,35,24,139,"payload"],[31,42,24,146],[31,44,24,148,"index"],[31,49,24,153],[31,51,24,155,"fragments"],[31,60,24,164],[31,61,24,165,"length"],[31,67,24,171],[31,68,24,172],[32,8,24,174],[32,9,24,175],[32,11,24,177],[32,21,24,187,"payload"],[32,28,24,194],[32,30,24,196],[33,10,24,198],[33,17,24,205,"composeDigest"],[33,30,24,218],[33,31,24,219,"payload"],[33,38,24,226],[33,40,24,228,"digest"],[33,46,24,234],[33,47,24,235],[34,8,24,237],[34,9,24,238],[34,10,24,239],[34,11,24,240,"f"],[34,12,24,241],[34,13,24,242],[35,6,25,8],[35,7,25,9],[35,8,25,10],[36,4,26,4],[37,2,27,0],[37,3,27,1],[38,2,28,0,"exports"],[38,9,28,7],[38,10,28,8,"encodeUR"],[38,18,28,16],[38,21,28,19],[38,31,28,29,"payload"],[38,38,28,36],[38,40,28,38,"fragmentCapacity"],[38,56,28,54],[38,58,28,56],[39,4,29,4],[39,8,29,8,"fragmentCapacity"],[39,24,29,24],[39,29,29,29],[39,34,29,34],[39,35,29,35],[39,37,29,37],[40,6,29,39,"fragmentCapacity"],[40,22,29,55],[40,25,29,58],[40,28,29,61],[41,4,29,63],[42,4,30,4],[42,8,30,8,"cborPayload"],[42,19,30,19],[42,22,30,22,"_$$_REQUIRE"],[42,33,30,22],[42,34,30,22,"_dependencyMap"],[42,48,30,22],[42,67,30,33,"encodeSimpleCBOR"],[42,83,30,49],[42,84,30,50,"payload"],[42,91,30,57],[42,92,30,58],[43,4,31,4],[43,8,31,8,"bc32Payload"],[43,19,31,19],[43,22,31,22,"_$$_REQUIRE"],[43,33,31,22],[43,34,31,22,"_dependencyMap"],[43,48,31,22],[43,66,31,34,"encodeBc32Data"],[43,80,31,48],[43,81,31,49,"cborPayload"],[43,92,31,60],[43,93,31,61],[44,4,32,4],[44,8,32,8,"digest"],[44,14,32,14],[44,17,32,17,"_$$_REQUIRE"],[44,28,32,17],[44,29,32,17,"_dependencyMap"],[44,43,32,17],[44,59,32,25,"sha256Hash"],[44,69,32,35],[44,70,32,36,"Buffer"],[44,76,32,42],[44,77,32,43,"from"],[44,81,32,47],[44,82,32,48,"cborPayload"],[44,93,32,59],[44,95,32,61],[44,100,32,66],[44,101,32,67],[44,102,32,68],[44,103,32,69,"toString"],[44,111,32,77],[44,112,32,78],[44,117,32,83],[44,118,32,84],[45,4,33,4],[45,8,33,8,"bc32Digest"],[45,18,33,18],[45,21,33,21,"_$$_REQUIRE"],[45,32,33,21],[45,33,33,21,"_dependencyMap"],[45,47,33,21],[45,65,33,33,"encodeBc32Data"],[45,79,33,47],[45,80,33,48,"digest"],[45,86,33,54],[45,87,33,55],[46,4,34,4],[46,8,34,8,"fragments"],[46,17,34,17],[46,20,34,20,"bc32Payload"],[46,31,34,31],[46,32,34,32,"match"],[46,37,34,37],[46,38,34,38],[46,42,34,42,"RegExp"],[46,48,34,48],[46,49,34,49],[46,55,34,55],[46,58,34,58,"fragmentCapacity"],[46,74,34,74],[46,77,34,77],[46,80,34,80],[46,82,34,82],[46,85,34,85],[46,86,34,86],[46,87,34,87],[47,4,35,4],[47,11,35,11,"composeHeadersToFragments"],[47,36,35,36],[47,37,35,37,"fragments"],[47,46,35,46],[47,48,35,48,"bc32Digest"],[47,58,35,58],[47,60,35,60],[47,67,35,67],[47,68,35,68],[48,2,36,0],[48,3,36,1],[49,0,36,2],[49,3]],"functionMap":{"names":["<global>","composeUR","composeDigest","composeSequencing","composeHeadersToFragments","fragments.map$argument_0","utils_1.compose3$argument_0","utils_1.compose3$argument_1","utils_1.compose3$argument_2","exports.encodeUR"],"mappings":"AAA;gBCM;CDG;oBEC;CFE;wBGC;CHE;gCIC;6BCM;oCCC,uDD,EE,kFF,EG,6DH;SDC;CJE;mBSC;CTQ"}},"type":"js/module"}]}