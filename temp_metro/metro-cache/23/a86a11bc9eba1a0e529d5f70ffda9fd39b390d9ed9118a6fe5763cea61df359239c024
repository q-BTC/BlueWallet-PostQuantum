{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"aU3Lrys8xTVpYSDJal2nhppojC8="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"4DwyfFXBA53CJWVTVj5w3kH1PUg="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":513,"column":0,"index":17129}}],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA="}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":45,"index":60}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g="}},{"name":"eventemitter3","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":61},"end":{"line":4,"column":41,"index":102}}],"key":"KCIqL5fIlk4FNNic7+TqcYLMlYo="}},{"name":"buffer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":32,"index":135}},{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":32,"index":135}},{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":32,"index":135}},{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":32,"index":135}},{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":32,"index":135}},{"start":{"line":5,"column":0,"index":103},"end":{"line":5,"column":32,"index":135}}],"key":"L2R9OUI0/cSYwzijo34ce4VujKY="}},{"name":"./Globals","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":178},"end":{"line":7,"column":58,"index":236}},{"start":{"line":7,"column":0,"index":178},"end":{"line":7,"column":58,"index":236}}],"key":"itQEVnR/TofPyrBk3pjHUol1gJA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n  var _reactNative = _$$_REQUIRE(_dependencyMap[7], \"react-native\");\n  var _eventemitter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"eventemitter3\"));\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\n  var Sockets = _reactNative.NativeModules.TcpSockets;\n  /**\n   * @typedef {\"ascii\" | \"utf8\" | \"utf-8\" | \"utf16le\" | \"ucs2\" | \"ucs-2\" | \"base64\" | \"latin1\" | \"binary\" | \"hex\"} BufferEncoding\n   *\n   * @typedef {import('react-native').NativeEventEmitter} NativeEventEmitter\n   *\n   * @typedef {{address: string, family: string, port: number}} AddressInfo\n   *\n   * @typedef {{localAddress: string, localPort: number, remoteAddress: string, remotePort: number, remoteFamily: string}} NativeConnectionInfo\n   *\n   * @typedef {{\n   * port: number;\n   * host?: string;\n   * localAddress?: string,\n   * localPort?: number,\n   * interface?: 'wifi' | 'cellular' | 'ethernet',\n   * reuseAddress?: boolean,\n   * tls?: boolean,\n   * tlsCheckValidity?: boolean,\n   * tlsCert?: any,\n   * }} ConnectionOptions\n   *\n   * @typedef {object} ReadableEvents\n   * @property {() => void} pause\n   * @property {() => void} resume\n   *\n   * @typedef {object} SocketEvents\n   * @property {(had_error: boolean) => void} close\n   * @property {() => void} connect\n   * @property {(data: Buffer | string) => void} data\n   * @property {() => void} drain\n   * @property {(err: Error) => void} error\n   * @property {() => void} timeout\n   * @property {() => void} secureConnect\n   *\n   * @extends {EventEmitter<SocketEvents & ReadableEvents, any>}\n   */\n  var Socket = exports.default = /*#__PURE__*/function (_EventEmitter) {\n    /**\n     * Creates a new socket object.\n     */\n    function Socket() {\n      var _this;\n      (0, _classCallCheck2.default)(this, Socket);\n      _this = _callSuper(this, Socket);\n      /** @package */\n      /**\n       * @private\n       */\n      _this._onDeviceDataEvt = function (/** @type {{ id: number; data: string; }} */evt) {\n        if (evt.id !== _this._id) return;\n        _this._resetTimeout();\n        if (!_this._paused) {\n          var bufferData = _$$_REQUIRE(_dependencyMap[9], \"buffer\").Buffer.from(evt.data, 'base64');\n          _this._bytesRead += bufferData.byteLength;\n          var finalData = _this._encoding ? bufferData.toString(_this._encoding) : bufferData;\n          _this.emit('data', finalData);\n        } else {\n          // If the socket is paused, save the data events for later\n          _this._pausedDataEvents.push(evt);\n        }\n      };\n      _this._id = (0, _$$_REQUIRE(_dependencyMap[10], \"./Globals\").getNextId)();\n      /** @private */\n      _this._eventEmitter = _$$_REQUIRE(_dependencyMap[10], \"./Globals\").nativeEventEmitter;\n      /** @type {EventEmitter<'written', any>} @private */\n      _this._msgEvtEmitter = new _eventemitter.default();\n      /** @type {number} @private */\n      _this._timeoutMsecs = 0;\n      /** @type {number | undefined} @private */\n      _this._timeout = undefined;\n      /** @private */\n      _this._encoding = undefined;\n      /** @private */\n      _this._msgId = 0;\n      /** @private */\n      _this._lastRcvMsgId = Number.MAX_SAFE_INTEGER - 1;\n      /** @private */\n      _this._lastSentMsgId = 0;\n      /** @private */\n      _this._paused = false;\n      /** @private */\n      _this._resuming = false;\n      /** @private */\n      _this._writeBufferSize = 0;\n      /** @private */\n      _this._bytesRead = 0;\n      /** @private */\n      _this._bytesWritten = 0;\n      /** @private */\n      _this._connecting = false;\n      /** @private */\n      _this._pending = true;\n      /** @private */\n      _this._destroyed = false;\n      // TODO: Add readOnly and writeOnly states\n      /** @type {'opening' | 'open' | 'readOnly' | 'writeOnly'} @private */\n      _this._readyState = 'open'; // Incorrect, but matches NodeJS behavior\n      /** @type {{ id: number; data: string; }[]} @private */\n      _this._pausedDataEvents = [];\n      _this.readableHighWaterMark = 16384;\n      _this.writableHighWaterMark = 16384;\n      _this.writableNeedDrain = false;\n      _this.localAddress = undefined;\n      _this.localPort = undefined;\n      _this.remoteAddress = undefined;\n      _this.remotePort = undefined;\n      _this.remoteFamily = undefined;\n      _this._registerEvents();\n      return _this;\n    }\n    (0, _inherits2.default)(Socket, _EventEmitter);\n    return (0, _createClass2.default)(Socket, [{\n      key: \"readyState\",\n      get: function get() {\n        return this._readyState;\n      }\n    }, {\n      key: \"destroyed\",\n      get: function get() {\n        return this._destroyed;\n      }\n    }, {\n      key: \"pending\",\n      get: function get() {\n        return this._pending;\n      }\n    }, {\n      key: \"connecting\",\n      get: function get() {\n        return this._connecting;\n      }\n    }, {\n      key: \"bytesWritten\",\n      get: function get() {\n        return this._bytesWritten;\n      }\n    }, {\n      key: \"bytesRead\",\n      get: function get() {\n        return this._bytesRead;\n      }\n    }, {\n      key: \"timeout\",\n      get: function get() {\n        return this._timeout;\n      }\n\n      /**\n       * @package\n       * @param {number} id\n       */\n    }, {\n      key: \"_setId\",\n      value: function _setId(id) {\n        this._id = id;\n        this._registerEvents();\n      }\n\n      /**\n       * @package\n       * @param {NativeConnectionInfo} connectionInfo\n       */\n    }, {\n      key: \"_setConnected\",\n      value: function _setConnected(connectionInfo) {\n        this._connecting = false;\n        this._readyState = 'open';\n        this._pending = false;\n        this.localAddress = connectionInfo.localAddress;\n        this.localPort = connectionInfo.localPort;\n        this.remoteAddress = connectionInfo.remoteAddress;\n        this.remoteFamily = connectionInfo.remoteFamily;\n        this.remotePort = connectionInfo.remotePort;\n      }\n\n      /**\n       * @param {ConnectionOptions} options\n       * @param {() => void} [callback]\n       */\n    }, {\n      key: \"connect\",\n      value: function connect(options, callback) {\n        var customOptions = Object.assign({}, options);\n        // Normalize args\n        customOptions.host = customOptions.host || 'localhost';\n        customOptions.port = Number(customOptions.port) || 0;\n        this.once('connect', function () {\n          if (callback) callback();\n        });\n        this._connecting = true;\n        this._readyState = 'opening';\n        Sockets.connect(this._id, customOptions.host, customOptions.port, customOptions);\n        return this;\n      }\n\n      /**\n       * Sets the socket to timeout after `timeout` milliseconds of inactivity on the socket. By default `TcpSocket` do not have a timeout.\n       *\n       * When an idle timeout is triggered the socket will receive a `'timeout'` event but the connection will not be severed.\n       * The user must manually call `socket.end()` or `socket.destroy()` to end the connection.\n       *\n       * If `timeout` is 0, then the existing idle timeout is disabled.\n       *\n       * The optional `callback` parameter will be added as a one-time listener for the `'timeout'` event.\n       *\n       * @param {number} timeout\n       * @param {() => void} [callback]\n       */\n    }, {\n      key: \"setTimeout\",\n      value: function setTimeout(timeout, callback) {\n        this._timeoutMsecs = timeout;\n        if (this._timeoutMsecs === 0) {\n          this._clearTimeout();\n        } else {\n          this._resetTimeout();\n        }\n        if (callback) this.once('timeout', callback);\n        return this;\n      }\n\n      /**\n       * @private\n       */\n    }, {\n      key: \"_resetTimeout\",\n      value: function _resetTimeout() {\n        var _this2 = this;\n        if (this._timeoutMsecs !== 0) {\n          this._clearTimeout();\n          this._timeout = setTimeout(function () {\n            _this2._clearTimeout();\n            _this2.emit('timeout');\n          }, this._timeoutMsecs);\n        }\n      }\n\n      /**\n       * @private\n       */\n    }, {\n      key: \"_clearTimeout\",\n      value: function _clearTimeout() {\n        if (this._timeout !== undefined) {\n          clearTimeout(this._timeout);\n          this._timeout = undefined;\n        }\n      }\n\n      /**\n       * Set the encoding for the socket as a Readable Stream. By default, no encoding is assigned and stream data will be returned as `Buffer` objects.\n       * Setting an encoding causes the stream data to be returned as strings of the specified encoding rather than as Buffer objects.\n       *\n       * For instance, calling `socket.setEncoding('utf8')` will cause the output data to be interpreted as UTF-8 data, and passed as strings.\n       * Calling `socket.setEncoding('hex')` will cause the data to be encoded in hexadecimal string format.\n       *\n       * @param {BufferEncoding} [encoding]\n       */\n    }, {\n      key: \"setEncoding\",\n      value: function setEncoding(encoding) {\n        this._encoding = encoding;\n        return this;\n      }\n\n      /**\n       * Enable/disable the use of Nagle's algorithm. When a TCP connection is created, it will have Nagle's algorithm enabled.\n       *\n       * Nagle's algorithm delays data before it is sent via the network. It attempts to optimize throughput at the expense of latency.\n       *\n       * Passing `true` for `noDelay` or not passing an argument will disable Nagle's algorithm for the socket. Passing false for noDelay will enable Nagle's algorithm.\n       *\n       * @param {boolean} noDelay Default: `true`\n       */\n    }, {\n      key: \"setNoDelay\",\n      value: function setNoDelay() {\n        var _this3 = this;\n        var noDelay = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        if (this._pending) {\n          this.once('connect', function () {\n            return _this3.setNoDelay(noDelay);\n          });\n          return this;\n        }\n        Sockets.setNoDelay(this._id, noDelay);\n        return this;\n      }\n\n      /**\n       * Enable/disable keep-alive functionality, and optionally set the initial delay before the first keepalive probe is sent on an idle socket.\n       *\n       * `initialDelay` is ignored.\n       *\n       * @param {boolean} enable Default: `false`\n       * @param {number} initialDelay ***IGNORED**. Default: `0`\n       */\n    }, {\n      key: \"setKeepAlive\",\n      value: function setKeepAlive() {\n        var _this4 = this;\n        var enable = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        var initialDelay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n        if (this._pending) {\n          this.once('connect', function () {\n            return _this4.setKeepAlive(enable, initialDelay);\n          });\n          return this;\n        }\n        if (initialDelay !== 0) {\n          console.warn('react-native-tcp-socket: initialDelay param in socket.setKeepAlive() is ignored');\n        }\n        Sockets.setKeepAlive(this._id, enable, Math.floor(initialDelay));\n        return this;\n      }\n\n      /**\n       * Returns the bound `address`, the address `family` name and `port` of the socket as reported\n       * by the operating system: `{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`.\n       *\n       * @returns {AddressInfo | {}}\n       */\n    }, {\n      key: \"address\",\n      value: function address() {\n        if (!this.localAddress) return {};\n        return {\n          address: this.localAddress,\n          family: this.remoteFamily,\n          port: this.localPort\n        };\n      }\n\n      /**\n       * Half-closes the socket. i.e., it sends a FIN packet. It is possible the server will still send some data.\n       *\n       * @param {string | Buffer | Uint8Array} [data]\n       * @param {BufferEncoding} [encoding]\n       */\n    }, {\n      key: \"end\",\n      value: function end(data, encoding) {\n        var _this5 = this;\n        if (data) {\n          this.write(data, encoding, function () {\n            Sockets.end(_this5._id);\n          });\n          return this;\n        }\n        if (this._pending || this._destroyed) return this;\n        this._clearTimeout();\n        Sockets.end(this._id);\n        return this;\n      }\n\n      /**\n       * Ensures that no more I/O activity happens on this socket. Destroys the stream and closes the connection.\n       */\n    }, {\n      key: \"destroy\",\n      value: function destroy() {\n        if (this._destroyed) return this;\n        this._destroyed = true;\n        this._clearTimeout();\n        Sockets.destroy(this._id);\n        return this;\n      }\n\n      /**\n       * Sends data on the socket. The second parameter specifies the encoding in the case of a string — it defaults to UTF8 encoding.\n       *\n       * Returns `true` if the entire data was flushed successfully to the kernel buffer. Returns `false` if all or part of the data\n       * was queued in user memory. `'drain'` will be emitted when the buffer is again free.\n       *\n       * The optional callback parameter will be executed when the data is finally written out, which may not be immediately.\n       *\n       * @param {string | Buffer | Uint8Array} buffer\n       * @param {BufferEncoding} [encoding]\n       * @param {(err?: Error) => void} [cb]\n       *\n       * @return {boolean}\n       */\n    }, {\n      key: \"write\",\n      value: function write(buffer, encoding, cb) {\n        var _this6 = this;\n        if (this._pending || this._destroyed) throw new Error('Socket is closed.');\n        var generatedBuffer = this._generateSendBuffer(buffer, encoding);\n        this._writeBufferSize += generatedBuffer.byteLength;\n        var currentMsgId = this._msgId;\n        this._msgId = (this._msgId + 1) % Number.MAX_SAFE_INTEGER;\n        var _msgEvtHandler = function msgEvtHandler(/** @type {{id: number, msgId: number, err?: string}} */evt) {\n          var msgId = evt.msgId,\n            err = evt.err;\n          if (msgId === currentMsgId) {\n            _this6._msgEvtEmitter.removeListener('written', _msgEvtHandler);\n            _this6._writeBufferSize -= generatedBuffer.byteLength;\n            _this6._lastRcvMsgId = msgId;\n            _this6._resetTimeout();\n            if (_this6.writableNeedDrain && _this6._lastSentMsgId === msgId) {\n              _this6.writableNeedDrain = false;\n              _this6.emit('drain');\n            }\n            if (cb) {\n              if (err) cb(new Error(err));else cb();\n            }\n          }\n        };\n        // Callback equivalent with better performance\n        this._msgEvtEmitter.on('written', _msgEvtHandler, this);\n        var ok = this._writeBufferSize < this.writableHighWaterMark;\n        if (!ok) this.writableNeedDrain = true;\n        this._lastSentMsgId = currentMsgId;\n        this._bytesWritten += generatedBuffer.byteLength;\n        Sockets.write(this._id, generatedBuffer.toString('base64'), currentMsgId);\n        return ok;\n      }\n\n      /**\n       * Pauses the reading of data. That is, `'data'` events will not be emitted. Useful to throttle back an upload.\n       */\n    }, {\n      key: \"pause\",\n      value: function pause() {\n        if (this._paused) return;\n        this._paused = true;\n        Sockets.pause(this._id);\n        this.emit('pause');\n      }\n\n      /**\n       * Resumes reading after a call to `socket.pause()`.\n       */\n    }, {\n      key: \"resume\",\n      value: function resume() {\n        if (!this._paused) return;\n        this._paused = false;\n        this.emit('resume');\n        this._recoverDataEventsAfterPause();\n      }\n    }, {\n      key: \"ref\",\n      value: function ref() {\n        console.warn('react-native-tcp-socket: Socket.ref() method will have no effect.');\n      }\n    }, {\n      key: \"unref\",\n      value: function unref() {\n        console.warn('react-native-tcp-socket: Socket.unref() method will have no effect.');\n      }\n\n      /**\n       * @private\n       */\n    }, {\n      key: \"_recoverDataEventsAfterPause\",\n      value: (function () {\n        var _recoverDataEventsAfterPause2 = (0, _asyncToGenerator2.default)(function* () {\n          if (this._resuming) return;\n          this._resuming = true;\n          while (this._pausedDataEvents.length > 0) {\n            // Concat all buffered events for better performance\n            var buffArray = [];\n            var readBytes = 0;\n            var i = 0;\n            for (; i < this._pausedDataEvents.length; i++) {\n              var evtData = _$$_REQUIRE(_dependencyMap[9], \"buffer\").Buffer.from(this._pausedDataEvents[i].data, 'base64');\n              readBytes += evtData.byteLength;\n              if (readBytes <= this.readableHighWaterMark) {\n                buffArray.push(evtData);\n              } else {\n                var buffOffset = this.readableHighWaterMark - readBytes;\n                buffArray.push(evtData.slice(0, buffOffset));\n                this._pausedDataEvents[i].data = evtData.slice(buffOffset).toString('base64');\n                break;\n              }\n            }\n            // Generate new event with the concatenated events\n            var evt = {\n              id: this._pausedDataEvents[0].id,\n              data: _$$_REQUIRE(_dependencyMap[9], \"buffer\").Buffer.concat(buffArray).toString('base64')\n            };\n            // Clean the old events\n            this._pausedDataEvents = this._pausedDataEvents.slice(i);\n            this._onDeviceDataEvt(evt);\n            if (this._paused) {\n              this._resuming = false;\n              return;\n            }\n          }\n          this._resuming = false;\n          Sockets.resume(this._id);\n        });\n        function _recoverDataEventsAfterPause() {\n          return _recoverDataEventsAfterPause2.apply(this, arguments);\n        }\n        return _recoverDataEventsAfterPause;\n      }())\n    }, {\n      key: \"_registerEvents\",\n      value:\n      /**\n       * @private\n       */\n      function _registerEvents() {\n        var _this7 = this;\n        this._unregisterEvents();\n        this._dataListener = this._eventEmitter.addListener('data', this._onDeviceDataEvt);\n        this._errorListener = this._eventEmitter.addListener('error', function (evt) {\n          if (evt.id !== _this7._id) return;\n          _this7.destroy();\n          _this7.emit('error', evt.error);\n        });\n        this._closeListener = this._eventEmitter.addListener('close', function (evt) {\n          if (evt.id !== _this7._id) return;\n          _this7._setDisconnected();\n          _this7.emit('close', evt.error);\n        });\n        this._connectListener = this._eventEmitter.addListener('connect', function (evt) {\n          if (evt.id !== _this7._id) return;\n          _this7._setConnected(evt.connection);\n          _this7.emit('connect');\n        });\n        this._writtenListener = this._eventEmitter.addListener('written', function (evt) {\n          if (evt.id !== _this7._id) return;\n          _this7._msgEvtEmitter.emit('written', evt);\n        });\n      }\n\n      /**\n       * @package\n       */\n    }, {\n      key: \"_unregisterEvents\",\n      value: function _unregisterEvents() {\n        var _this$_dataListener, _this$_errorListener, _this$_closeListener, _this$_connectListene, _this$_writtenListene;\n        (_this$_dataListener = this._dataListener) == null || _this$_dataListener.remove();\n        (_this$_errorListener = this._errorListener) == null || _this$_errorListener.remove();\n        (_this$_closeListener = this._closeListener) == null || _this$_closeListener.remove();\n        (_this$_connectListene = this._connectListener) == null || _this$_connectListene.remove();\n        (_this$_writtenListene = this._writtenListener) == null || _this$_writtenListene.remove();\n      }\n\n      /**\n       * @private\n       * @param {string | Buffer | Uint8Array} buffer\n       * @param {BufferEncoding} [encoding]\n       */\n    }, {\n      key: \"_generateSendBuffer\",\n      value: function _generateSendBuffer(buffer, encoding) {\n        if (typeof buffer === 'string') {\n          return _$$_REQUIRE(_dependencyMap[9], \"buffer\").Buffer.from(buffer, encoding);\n        } else if (_$$_REQUIRE(_dependencyMap[9], \"buffer\").Buffer.isBuffer(buffer)) {\n          return buffer;\n        } else if (buffer instanceof Uint8Array || Array.isArray(buffer)) {\n          return _$$_REQUIRE(_dependencyMap[9], \"buffer\").Buffer.from(buffer);\n        } else {\n          throw new TypeError(`Invalid data, chunk must be a string or buffer, not ${typeof buffer}`);\n        }\n      }\n\n      /**\n       * @private\n       */\n    }, {\n      key: \"_setDisconnected\",\n      value: function _setDisconnected() {\n        this._unregisterEvents();\n      }\n    }]);\n  }(_eventemitter.default);\n});","lineCount":593,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"_$$_REQUIRE"],[4,42,1,13],[4,43,1,13,"_dependencyMap"],[4,57,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"default"],[8,17,1,13],[9,2,1,13],[9,6,1,13,"_asyncToGenerator2"],[9,24,1,13],[9,27,1,13,"_interopRequireDefault"],[9,49,1,13],[9,50,1,13,"_$$_REQUIRE"],[9,61,1,13],[9,62,1,13,"_dependencyMap"],[9,76,1,13],[10,2,1,13],[10,6,1,13,"_classCallCheck2"],[10,22,1,13],[10,25,1,13,"_interopRequireDefault"],[10,47,1,13],[10,48,1,13,"_$$_REQUIRE"],[10,59,1,13],[10,60,1,13,"_dependencyMap"],[10,74,1,13],[11,2,1,13],[11,6,1,13,"_createClass2"],[11,19,1,13],[11,22,1,13,"_interopRequireDefault"],[11,44,1,13],[11,45,1,13,"_$$_REQUIRE"],[11,56,1,13],[11,57,1,13,"_dependencyMap"],[11,71,1,13],[12,2,1,13],[12,6,1,13,"_possibleConstructorReturn2"],[12,33,1,13],[12,36,1,13,"_interopRequireDefault"],[12,58,1,13],[12,59,1,13,"_$$_REQUIRE"],[12,70,1,13],[12,71,1,13,"_dependencyMap"],[12,85,1,13],[13,2,1,13],[13,6,1,13,"_getPrototypeOf2"],[13,22,1,13],[13,25,1,13,"_interopRequireDefault"],[13,47,1,13],[13,48,1,13,"_$$_REQUIRE"],[13,59,1,13],[13,60,1,13,"_dependencyMap"],[13,74,1,13],[14,2,1,13],[14,6,1,13,"_inherits2"],[14,16,1,13],[14,19,1,13,"_interopRequireDefault"],[14,41,1,13],[14,42,1,13,"_$$_REQUIRE"],[14,53,1,13],[14,54,1,13,"_dependencyMap"],[14,68,1,13],[15,2,3,0],[15,6,3,0,"_reactNative"],[15,18,3,0],[15,21,3,0,"_$$_REQUIRE"],[15,32,3,0],[15,33,3,0,"_dependencyMap"],[15,47,3,0],[16,2,4,0],[16,6,4,0,"_eventemitter"],[16,19,4,0],[16,22,4,0,"_interopRequireDefault"],[16,44,4,0],[16,45,4,0,"_$$_REQUIRE"],[16,56,4,0],[16,57,4,0,"_dependencyMap"],[16,71,4,0],[17,2,4,41],[17,11,4,41,"_callSuper"],[17,22,4,41,"t"],[17,23,4,41],[17,25,4,41,"o"],[17,26,4,41],[17,28,4,41,"e"],[17,29,4,41],[17,40,4,41,"o"],[17,41,4,41],[17,48,4,41,"_getPrototypeOf2"],[17,64,4,41],[17,65,4,41,"default"],[17,72,4,41],[17,74,4,41,"o"],[17,75,4,41],[17,82,4,41,"_possibleConstructorReturn2"],[17,109,4,41],[17,110,4,41,"default"],[17,117,4,41],[17,119,4,41,"t"],[17,120,4,41],[17,122,4,41,"_isNativeReflectConstruct"],[17,147,4,41],[17,152,4,41,"Reflect"],[17,159,4,41],[17,160,4,41,"construct"],[17,169,4,41],[17,170,4,41,"o"],[17,171,4,41],[17,173,4,41,"e"],[17,174,4,41],[17,186,4,41,"_getPrototypeOf2"],[17,202,4,41],[17,203,4,41,"default"],[17,210,4,41],[17,212,4,41,"t"],[17,213,4,41],[17,215,4,41,"constructor"],[17,226,4,41],[17,230,4,41,"o"],[17,231,4,41],[17,232,4,41,"apply"],[17,237,4,41],[17,238,4,41,"t"],[17,239,4,41],[17,241,4,41,"e"],[17,242,4,41],[18,2,4,41],[18,11,4,41,"_isNativeReflectConstruct"],[18,37,4,41],[18,51,4,41,"t"],[18,52,4,41],[18,56,4,41,"Boolean"],[18,63,4,41],[18,64,4,41,"prototype"],[18,73,4,41],[18,74,4,41,"valueOf"],[18,81,4,41],[18,82,4,41,"call"],[18,86,4,41],[18,87,4,41,"Reflect"],[18,94,4,41],[18,95,4,41,"construct"],[18,104,4,41],[18,105,4,41,"Boolean"],[18,112,4,41],[18,145,4,41,"t"],[18,146,4,41],[18,159,4,41,"_isNativeReflectConstruct"],[18,184,4,41],[18,196,4,41,"_isNativeReflectConstruct"],[18,222,4,41],[18,235,4,41,"t"],[18,236,4,41],[19,2,6,0],[19,6,6,6,"Sockets"],[19,13,6,13],[19,16,6,16,"NativeModules"],[19,42,6,29],[19,43,6,30,"TcpSockets"],[19,53,6,40],[20,2,9,0],[21,0,10,0],[22,0,11,0],[23,0,12,0],[24,0,13,0],[25,0,14,0],[26,0,15,0],[27,0,16,0],[28,0,17,0],[29,0,18,0],[30,0,19,0],[31,0,20,0],[32,0,21,0],[33,0,22,0],[34,0,23,0],[35,0,24,0],[36,0,25,0],[37,0,26,0],[38,0,27,0],[39,0,28,0],[40,0,29,0],[41,0,30,0],[42,0,31,0],[43,0,32,0],[44,0,33,0],[45,0,34,0],[46,0,35,0],[47,0,36,0],[48,0,37,0],[49,0,38,0],[50,0,39,0],[51,0,40,0],[52,0,41,0],[53,0,42,0],[54,0,43,0],[55,0,44,0],[56,2,9,0],[56,6,45,21,"Socket"],[56,12,45,27],[56,15,45,27,"exports"],[56,22,45,27],[56,23,45,27,"default"],[56,30,45,27],[56,56,45,27,"_EventEmitter"],[56,69,45,27],[57,4,46,4],[58,0,47,0],[59,0,48,0],[60,4,49,4],[60,13,49,4,"Socket"],[60,20,49,4],[60,22,49,18],[61,6,49,18],[61,10,49,18,"_this"],[61,15,49,18],[62,6,49,18],[62,10,49,18,"_classCallCheck2"],[62,26,49,18],[62,27,49,18,"default"],[62,34,49,18],[62,42,49,18,"Socket"],[62,48,49,18],[63,6,50,8,"_this"],[63,11,50,8],[63,14,50,8,"_callSuper"],[63,24,50,8],[63,31,50,8,"Socket"],[63,37,50,8],[64,6,51,8],[65,6,432,4],[66,0,433,0],[67,0,434,0],[68,6,432,4,"_this"],[68,11,432,4],[68,12,435,4,"_onDeviceDataEvt"],[68,28,435,20],[68,31,435,23],[68,41,435,24],[68,85,435,69,"evt"],[68,88,435,72],[68,90,435,77],[69,8,436,8],[69,12,436,12,"evt"],[69,15,436,15],[69,16,436,16,"id"],[69,18,436,18],[69,23,436,23,"_this"],[69,28,436,23],[69,29,436,28,"_id"],[69,32,436,31],[69,34,436,33],[70,8,437,8,"_this"],[70,13,437,8],[70,14,437,13,"_resetTimeout"],[70,27,437,26],[70,28,437,27],[70,29,437,28],[71,8,438,8],[71,12,438,12],[71,13,438,13,"_this"],[71,18,438,13],[71,19,438,18,"_paused"],[71,26,438,25],[71,28,438,27],[72,10,439,12],[72,14,439,18,"bufferData"],[72,24,439,28],[72,27,439,31,"Buffer"],[72,57,439,31],[72,58,439,31,"Buffer"],[72,74,439,37],[72,75,439,38,"from"],[72,79,439,42],[72,80,439,43,"evt"],[72,83,439,46],[72,84,439,47,"data"],[72,88,439,51],[72,90,439,53],[72,98,439,61],[72,99,439,62],[73,10,440,12,"_this"],[73,15,440,12],[73,16,440,17,"_bytesRead"],[73,26,440,27],[73,30,440,31,"bufferData"],[73,40,440,41],[73,41,440,42,"byteLength"],[73,51,440,52],[74,10,441,12],[74,14,441,18,"finalData"],[74,23,441,27],[74,26,441,30,"_this"],[74,31,441,30],[74,32,441,35,"_encoding"],[74,41,441,44],[74,44,441,47,"bufferData"],[74,54,441,57],[74,55,441,58,"toString"],[74,63,441,66],[74,64,441,67,"_this"],[74,69,441,67],[74,70,441,72,"_encoding"],[74,79,441,81],[74,80,441,82],[74,83,441,85,"bufferData"],[74,93,441,95],[75,10,442,12,"_this"],[75,15,442,12],[75,16,442,17,"emit"],[75,20,442,21],[75,21,442,22],[75,27,442,28],[75,29,442,30,"finalData"],[75,38,442,39],[75,39,442,40],[76,8,443,8],[76,9,443,9],[76,15,443,15],[77,10,444,12],[78,10,445,12,"_this"],[78,15,445,12],[78,16,445,17,"_pausedDataEvents"],[78,33,445,34],[78,34,445,35,"push"],[78,38,445,39],[78,39,445,40,"evt"],[78,42,445,43],[78,43,445,44],[79,8,446,8],[80,6,447,4],[80,7,447,5],[81,6,52,8,"_this"],[81,11,52,8],[81,12,52,13,"_id"],[81,15,52,16],[81,18,52,19],[81,22,52,19,"getNextId"],[81,53,52,19],[81,54,52,19,"getNextId"],[81,76,52,28],[81,78,52,29],[81,79,52,30],[82,6,53,8],[83,6,54,8,"_this"],[83,11,54,8],[83,12,54,13,"_eventEmitter"],[83,25,54,26],[83,28,54,29,"nativeEventEmitter"],[83,59,54,29],[83,60,54,29,"nativeEventEmitter"],[83,91,54,47],[84,6,55,8],[85,6,56,8,"_this"],[85,11,56,8],[85,12,56,13,"_msgEvtEmitter"],[85,26,56,27],[85,29,56,30],[85,33,56,34,"EventEmitter"],[85,54,56,46],[85,55,56,47],[85,56,56,48],[86,6,57,8],[87,6,58,8,"_this"],[87,11,58,8],[87,12,58,13,"_timeoutMsecs"],[87,25,58,26],[87,28,58,29],[87,29,58,30],[88,6,59,8],[89,6,60,8,"_this"],[89,11,60,8],[89,12,60,13,"_timeout"],[89,20,60,21],[89,23,60,24,"undefined"],[89,32,60,33],[90,6,61,8],[91,6,62,8,"_this"],[91,11,62,8],[91,12,62,13,"_encoding"],[91,21,62,22],[91,24,62,25,"undefined"],[91,33,62,34],[92,6,63,8],[93,6,64,8,"_this"],[93,11,64,8],[93,12,64,13,"_msgId"],[93,18,64,19],[93,21,64,22],[93,22,64,23],[94,6,65,8],[95,6,66,8,"_this"],[95,11,66,8],[95,12,66,13,"_lastRcvMsgId"],[95,25,66,26],[95,28,66,29,"Number"],[95,34,66,35],[95,35,66,36,"MAX_SAFE_INTEGER"],[95,51,66,52],[95,54,66,55],[95,55,66,56],[96,6,67,8],[97,6,68,8,"_this"],[97,11,68,8],[97,12,68,13,"_lastSentMsgId"],[97,26,68,27],[97,29,68,30],[97,30,68,31],[98,6,69,8],[99,6,70,8,"_this"],[99,11,70,8],[99,12,70,13,"_paused"],[99,19,70,20],[99,22,70,23],[99,27,70,28],[100,6,71,8],[101,6,72,8,"_this"],[101,11,72,8],[101,12,72,13,"_resuming"],[101,21,72,22],[101,24,72,25],[101,29,72,30],[102,6,73,8],[103,6,74,8,"_this"],[103,11,74,8],[103,12,74,13,"_writeBufferSize"],[103,28,74,29],[103,31,74,32],[103,32,74,33],[104,6,75,8],[105,6,76,8,"_this"],[105,11,76,8],[105,12,76,13,"_bytesRead"],[105,22,76,23],[105,25,76,26],[105,26,76,27],[106,6,77,8],[107,6,78,8,"_this"],[107,11,78,8],[107,12,78,13,"_bytesWritten"],[107,25,78,26],[107,28,78,29],[107,29,78,30],[108,6,79,8],[109,6,80,8,"_this"],[109,11,80,8],[109,12,80,13,"_connecting"],[109,23,80,24],[109,26,80,27],[109,31,80,32],[110,6,81,8],[111,6,82,8,"_this"],[111,11,82,8],[111,12,82,13,"_pending"],[111,20,82,21],[111,23,82,24],[111,27,82,28],[112,6,83,8],[113,6,84,8,"_this"],[113,11,84,8],[113,12,84,13,"_destroyed"],[113,22,84,23],[113,25,84,26],[113,30,84,31],[114,6,85,8],[115,6,86,8],[116,6,87,8,"_this"],[116,11,87,8],[116,12,87,13,"_readyState"],[116,23,87,24],[116,26,87,27],[116,32,87,33],[116,33,87,34],[116,34,87,35],[117,6,88,8],[118,6,89,8,"_this"],[118,11,89,8],[118,12,89,13,"_pausedDataEvents"],[118,29,89,30],[118,32,89,33],[118,34,89,35],[119,6,90,8,"_this"],[119,11,90,8],[119,12,90,13,"readableHighWaterMark"],[119,33,90,34],[119,36,90,37],[119,41,90,42],[120,6,91,8,"_this"],[120,11,91,8],[120,12,91,13,"writableHighWaterMark"],[120,33,91,34],[120,36,91,37],[120,41,91,42],[121,6,92,8,"_this"],[121,11,92,8],[121,12,92,13,"writableNeedDrain"],[121,29,92,30],[121,32,92,33],[121,37,92,38],[122,6,93,8,"_this"],[122,11,93,8],[122,12,93,13,"localAddress"],[122,24,93,25],[122,27,93,28,"undefined"],[122,36,93,37],[123,6,94,8,"_this"],[123,11,94,8],[123,12,94,13,"localPort"],[123,21,94,22],[123,24,94,25,"undefined"],[123,33,94,34],[124,6,95,8,"_this"],[124,11,95,8],[124,12,95,13,"remoteAddress"],[124,25,95,26],[124,28,95,29,"undefined"],[124,37,95,38],[125,6,96,8,"_this"],[125,11,96,8],[125,12,96,13,"remotePort"],[125,22,96,23],[125,25,96,26,"undefined"],[125,34,96,35],[126,6,97,8,"_this"],[126,11,97,8],[126,12,97,13,"remoteFamily"],[126,24,97,25],[126,27,97,28,"undefined"],[126,36,97,37],[127,6,98,8,"_this"],[127,11,98,8],[127,12,98,13,"_registerEvents"],[127,27,98,28],[127,28,98,29],[127,29,98,30],[128,6,98,31],[128,13,98,31,"_this"],[128,18,98,31],[129,4,99,4],[130,4,99,5],[130,8,99,5,"_inherits2"],[130,18,99,5],[130,19,99,5,"default"],[130,26,99,5],[130,28,99,5,"Socket"],[130,34,99,5],[130,36,99,5,"_EventEmitter"],[130,49,99,5],[131,4,99,5],[131,15,99,5,"_createClass2"],[131,28,99,5],[131,29,99,5,"default"],[131,36,99,5],[131,38,99,5,"Socket"],[131,44,99,5],[132,6,99,5,"key"],[132,9,99,5],[133,6,99,5,"get"],[133,9,99,5],[133,11,101,4],[133,20,101,4,"get"],[133,24,101,4],[133,26,101,21],[134,8,102,8],[134,15,102,15],[134,19,102,19],[134,20,102,20,"_readyState"],[134,31,102,31],[135,6,103,4],[136,4,103,5],[137,6,103,5,"key"],[137,9,103,5],[138,6,103,5,"get"],[138,9,103,5],[138,11,105,4],[138,20,105,4,"get"],[138,24,105,4],[138,26,105,20],[139,8,106,8],[139,15,106,15],[139,19,106,19],[139,20,106,20,"_destroyed"],[139,30,106,30],[140,6,107,4],[141,4,107,5],[142,6,107,5,"key"],[142,9,107,5],[143,6,107,5,"get"],[143,9,107,5],[143,11,109,4],[143,20,109,4,"get"],[143,24,109,4],[143,26,109,18],[144,8,110,8],[144,15,110,15],[144,19,110,19],[144,20,110,20,"_pending"],[144,28,110,28],[145,6,111,4],[146,4,111,5],[147,6,111,5,"key"],[147,9,111,5],[148,6,111,5,"get"],[148,9,111,5],[148,11,113,4],[148,20,113,4,"get"],[148,24,113,4],[148,26,113,21],[149,8,114,8],[149,15,114,15],[149,19,114,19],[149,20,114,20,"_connecting"],[149,31,114,31],[150,6,115,4],[151,4,115,5],[152,6,115,5,"key"],[152,9,115,5],[153,6,115,5,"get"],[153,9,115,5],[153,11,117,4],[153,20,117,4,"get"],[153,24,117,4],[153,26,117,23],[154,8,118,8],[154,15,118,15],[154,19,118,19],[154,20,118,20,"_bytesWritten"],[154,33,118,33],[155,6,119,4],[156,4,119,5],[157,6,119,5,"key"],[157,9,119,5],[158,6,119,5,"get"],[158,9,119,5],[158,11,121,4],[158,20,121,4,"get"],[158,24,121,4],[158,26,121,20],[159,8,122,8],[159,15,122,15],[159,19,122,19],[159,20,122,20,"_bytesRead"],[159,30,122,30],[160,6,123,4],[161,4,123,5],[162,6,123,5,"key"],[162,9,123,5],[163,6,123,5,"get"],[163,9,123,5],[163,11,125,4],[163,20,125,4,"get"],[163,24,125,4],[163,26,125,18],[164,8,126,8],[164,15,126,15],[164,19,126,19],[164,20,126,20,"_timeout"],[164,28,126,28],[165,6,127,4],[167,6,129,4],[168,0,130,0],[169,0,131,0],[170,0,132,0],[171,4,129,4],[172,6,129,4,"key"],[172,9,129,4],[173,6,129,4,"value"],[173,11,129,4],[173,13,133,4],[173,22,133,4,"_setId"],[173,28,133,10,"_setId"],[173,29,133,11,"id"],[173,31,133,13],[173,33,133,15],[174,8,134,8],[174,12,134,12],[174,13,134,13,"_id"],[174,16,134,16],[174,19,134,19,"id"],[174,21,134,21],[175,8,135,8],[175,12,135,12],[175,13,135,13,"_registerEvents"],[175,28,135,28],[175,29,135,29],[175,30,135,30],[176,6,136,4],[178,6,138,4],[179,0,139,0],[180,0,140,0],[181,0,141,0],[182,4,138,4],[183,6,138,4,"key"],[183,9,138,4],[184,6,138,4,"value"],[184,11,138,4],[184,13,142,4],[184,22,142,4,"_setConnected"],[184,35,142,17,"_setConnected"],[184,36,142,18,"connectionInfo"],[184,50,142,32],[184,52,142,34],[185,8,143,8],[185,12,143,12],[185,13,143,13,"_connecting"],[185,24,143,24],[185,27,143,27],[185,32,143,32],[186,8,144,8],[186,12,144,12],[186,13,144,13,"_readyState"],[186,24,144,24],[186,27,144,27],[186,33,144,33],[187,8,145,8],[187,12,145,12],[187,13,145,13,"_pending"],[187,21,145,21],[187,24,145,24],[187,29,145,29],[188,8,146,8],[188,12,146,12],[188,13,146,13,"localAddress"],[188,25,146,25],[188,28,146,28,"connectionInfo"],[188,42,146,42],[188,43,146,43,"localAddress"],[188,55,146,55],[189,8,147,8],[189,12,147,12],[189,13,147,13,"localPort"],[189,22,147,22],[189,25,147,25,"connectionInfo"],[189,39,147,39],[189,40,147,40,"localPort"],[189,49,147,49],[190,8,148,8],[190,12,148,12],[190,13,148,13,"remoteAddress"],[190,26,148,26],[190,29,148,29,"connectionInfo"],[190,43,148,43],[190,44,148,44,"remoteAddress"],[190,57,148,57],[191,8,149,8],[191,12,149,12],[191,13,149,13,"remoteFamily"],[191,25,149,25],[191,28,149,28,"connectionInfo"],[191,42,149,42],[191,43,149,43,"remoteFamily"],[191,55,149,55],[192,8,150,8],[192,12,150,12],[192,13,150,13,"remotePort"],[192,23,150,23],[192,26,150,26,"connectionInfo"],[192,40,150,40],[192,41,150,41,"remotePort"],[192,51,150,51],[193,6,151,4],[195,6,153,4],[196,0,154,0],[197,0,155,0],[198,0,156,0],[199,4,153,4],[200,6,153,4,"key"],[200,9,153,4],[201,6,153,4,"value"],[201,11,153,4],[201,13,157,4],[201,22,157,4,"connect"],[201,29,157,11,"connect"],[201,30,157,12,"options"],[201,37,157,19],[201,39,157,21,"callback"],[201,47,157,29],[201,49,157,31],[202,8,158,8],[202,12,158,14,"customOptions"],[202,25,158,27],[202,28,158,27,"Object"],[202,34,158,27],[202,35,158,27,"assign"],[202,41,158,27],[202,46,158,35,"options"],[202,53,158,42],[202,54,158,44],[203,8,159,8],[204,8,160,8,"customOptions"],[204,21,160,21],[204,22,160,22,"host"],[204,26,160,26],[204,29,160,29,"customOptions"],[204,42,160,42],[204,43,160,43,"host"],[204,47,160,47],[204,51,160,51],[204,62,160,62],[205,8,161,8,"customOptions"],[205,21,161,21],[205,22,161,22,"port"],[205,26,161,26],[205,29,161,29,"Number"],[205,35,161,35],[205,36,161,36,"customOptions"],[205,49,161,49],[205,50,161,50,"port"],[205,54,161,54],[205,55,161,55],[205,59,161,59],[205,60,161,60],[206,8,162,8],[206,12,162,12],[206,13,162,13,"once"],[206,17,162,17],[206,18,162,18],[206,27,162,27],[206,29,162,29],[206,41,162,35],[207,10,163,12],[207,14,163,16,"callback"],[207,22,163,24],[207,24,163,26,"callback"],[207,32,163,34],[207,33,163,35],[207,34,163,36],[208,8,164,8],[208,9,164,9],[208,10,164,10],[209,8,165,8],[209,12,165,12],[209,13,165,13,"_connecting"],[209,24,165,24],[209,27,165,27],[209,31,165,31],[210,8,166,8],[210,12,166,12],[210,13,166,13,"_readyState"],[210,24,166,24],[210,27,166,27],[210,36,166,36],[211,8,167,8,"Sockets"],[211,15,167,15],[211,16,167,16,"connect"],[211,23,167,23],[211,24,167,24],[211,28,167,28],[211,29,167,29,"_id"],[211,32,167,32],[211,34,167,34,"customOptions"],[211,47,167,47],[211,48,167,48,"host"],[211,52,167,52],[211,54,167,54,"customOptions"],[211,67,167,67],[211,68,167,68,"port"],[211,72,167,72],[211,74,167,74,"customOptions"],[211,87,167,87],[211,88,167,88],[212,8,168,8],[212,15,168,15],[212,19,168,19],[213,6,169,4],[215,6,171,4],[216,0,172,0],[217,0,173,0],[218,0,174,0],[219,0,175,0],[220,0,176,0],[221,0,177,0],[222,0,178,0],[223,0,179,0],[224,0,180,0],[225,0,181,0],[226,0,182,0],[227,0,183,0],[228,4,171,4],[229,6,171,4,"key"],[229,9,171,4],[230,6,171,4,"value"],[230,11,171,4],[230,13,184,4],[230,22,184,4,"setTimeout"],[230,32,184,14,"setTimeout"],[230,33,184,15,"timeout"],[230,40,184,22],[230,42,184,24,"callback"],[230,50,184,32],[230,52,184,34],[231,8,185,8],[231,12,185,12],[231,13,185,13,"_timeoutMsecs"],[231,26,185,26],[231,29,185,29,"timeout"],[231,36,185,36],[232,8,186,8],[232,12,186,12],[232,16,186,16],[232,17,186,17,"_timeoutMsecs"],[232,30,186,30],[232,35,186,35],[232,36,186,36],[232,38,186,38],[233,10,187,12],[233,14,187,16],[233,15,187,17,"_clearTimeout"],[233,28,187,30],[233,29,187,31],[233,30,187,32],[234,8,188,8],[234,9,188,9],[234,15,188,15],[235,10,189,12],[235,14,189,16],[235,15,189,17,"_resetTimeout"],[235,28,189,30],[235,29,189,31],[235,30,189,32],[236,8,190,8],[237,8,191,8],[237,12,191,12,"callback"],[237,20,191,20],[237,22,191,22],[237,26,191,26],[237,27,191,27,"once"],[237,31,191,31],[237,32,191,32],[237,41,191,41],[237,43,191,43,"callback"],[237,51,191,51],[237,52,191,52],[238,8,192,8],[238,15,192,15],[238,19,192,19],[239,6,193,4],[241,6,195,4],[242,0,196,0],[243,0,197,0],[244,4,195,4],[245,6,195,4,"key"],[245,9,195,4],[246,6,195,4,"value"],[246,11,195,4],[246,13,198,4],[246,22,198,4,"_resetTimeout"],[246,35,198,17,"_resetTimeout"],[246,36,198,17],[246,38,198,20],[247,8,198,20],[247,12,198,20,"_this2"],[247,18,198,20],[248,8,199,8],[248,12,199,12],[248,16,199,16],[248,17,199,17,"_timeoutMsecs"],[248,30,199,30],[248,35,199,35],[248,36,199,36],[248,38,199,38],[249,10,200,12],[249,14,200,16],[249,15,200,17,"_clearTimeout"],[249,28,200,30],[249,29,200,31],[249,30,200,32],[250,10,201,12],[250,14,201,16],[250,15,201,17,"_timeout"],[250,23,201,25],[250,26,201,28,"setTimeout"],[250,36,201,38],[250,37,201,39],[250,49,201,45],[251,12,202,16,"_this2"],[251,18,202,20],[251,19,202,21,"_clearTimeout"],[251,32,202,34],[251,33,202,35],[251,34,202,36],[252,12,203,16,"_this2"],[252,18,203,20],[252,19,203,21,"emit"],[252,23,203,25],[252,24,203,26],[252,33,203,35],[252,34,203,36],[253,10,204,12],[253,11,204,13],[253,13,204,15],[253,17,204,19],[253,18,204,20,"_timeoutMsecs"],[253,31,204,33],[253,32,204,34],[254,8,205,8],[255,6,206,4],[257,6,208,4],[258,0,209,0],[259,0,210,0],[260,4,208,4],[261,6,208,4,"key"],[261,9,208,4],[262,6,208,4,"value"],[262,11,208,4],[262,13,211,4],[262,22,211,4,"_clearTimeout"],[262,35,211,17,"_clearTimeout"],[262,36,211,17],[262,38,211,20],[263,8,212,8],[263,12,212,12],[263,16,212,16],[263,17,212,17,"_timeout"],[263,25,212,25],[263,30,212,30,"undefined"],[263,39,212,39],[263,41,212,41],[264,10,213,12,"clearTimeout"],[264,22,213,24],[264,23,213,25],[264,27,213,29],[264,28,213,30,"_timeout"],[264,36,213,38],[264,37,213,39],[265,10,214,12],[265,14,214,16],[265,15,214,17,"_timeout"],[265,23,214,25],[265,26,214,28,"undefined"],[265,35,214,37],[266,8,215,8],[267,6,216,4],[269,6,218,4],[270,0,219,0],[271,0,220,0],[272,0,221,0],[273,0,222,0],[274,0,223,0],[275,0,224,0],[276,0,225,0],[277,0,226,0],[278,4,218,4],[279,6,218,4,"key"],[279,9,218,4],[280,6,218,4,"value"],[280,11,218,4],[280,13,227,4],[280,22,227,4,"setEncoding"],[280,33,227,15,"setEncoding"],[280,34,227,16,"encoding"],[280,42,227,24],[280,44,227,26],[281,8,228,8],[281,12,228,12],[281,13,228,13,"_encoding"],[281,22,228,22],[281,25,228,25,"encoding"],[281,33,228,33],[282,8,229,8],[282,15,229,15],[282,19,229,19],[283,6,230,4],[285,6,232,4],[286,0,233,0],[287,0,234,0],[288,0,235,0],[289,0,236,0],[290,0,237,0],[291,0,238,0],[292,0,239,0],[293,0,240,0],[294,4,232,4],[295,6,232,4,"key"],[295,9,232,4],[296,6,232,4,"value"],[296,11,232,4],[296,13,241,4],[296,22,241,4,"setNoDelay"],[296,32,241,14,"setNoDelay"],[296,33,241,14],[296,35,241,31],[297,8,241,31],[297,12,241,31,"_this3"],[297,18,241,31],[298,8,241,31],[298,12,241,15,"noDelay"],[298,19,241,22],[298,22,241,22,"arguments"],[298,31,241,22],[298,32,241,22,"length"],[298,38,241,22],[298,46,241,22,"arguments"],[298,55,241,22],[298,63,241,22,"undefined"],[298,72,241,22],[298,75,241,22,"arguments"],[298,84,241,22],[298,90,241,25],[298,94,241,29],[299,8,242,8],[299,12,242,12],[299,16,242,16],[299,17,242,17,"_pending"],[299,25,242,25],[299,27,242,27],[300,10,243,12],[300,14,243,16],[300,15,243,17,"once"],[300,19,243,21],[300,20,243,22],[300,29,243,31],[300,31,243,33],[301,12,243,33],[301,19,243,39,"_this3"],[301,25,243,43],[301,26,243,44,"setNoDelay"],[301,36,243,54],[301,37,243,55,"noDelay"],[301,44,243,62],[301,45,243,63],[302,10,243,63],[302,12,243,64],[303,10,244,12],[303,17,244,19],[303,21,244,23],[304,8,245,8],[305,8,246,8,"Sockets"],[305,15,246,15],[305,16,246,16,"setNoDelay"],[305,26,246,26],[305,27,246,27],[305,31,246,31],[305,32,246,32,"_id"],[305,35,246,35],[305,37,246,37,"noDelay"],[305,44,246,44],[305,45,246,45],[306,8,247,8],[306,15,247,15],[306,19,247,19],[307,6,248,4],[309,6,250,4],[310,0,251,0],[311,0,252,0],[312,0,253,0],[313,0,254,0],[314,0,255,0],[315,0,256,0],[316,0,257,0],[317,4,250,4],[318,6,250,4,"key"],[318,9,250,4],[319,6,250,4,"value"],[319,11,250,4],[319,13,258,4],[319,22,258,4,"setKeepAlive"],[319,34,258,16,"setKeepAlive"],[319,35,258,16],[319,37,258,51],[320,8,258,51],[320,12,258,51,"_this4"],[320,18,258,51],[321,8,258,51],[321,12,258,17,"enable"],[321,18,258,23],[321,21,258,23,"arguments"],[321,30,258,23],[321,31,258,23,"length"],[321,37,258,23],[321,45,258,23,"arguments"],[321,54,258,23],[321,62,258,23,"undefined"],[321,71,258,23],[321,74,258,23,"arguments"],[321,83,258,23],[321,89,258,26],[321,94,258,31],[322,8,258,31],[322,12,258,33,"initialDelay"],[322,24,258,45],[322,27,258,45,"arguments"],[322,36,258,45],[322,37,258,45,"length"],[322,43,258,45],[322,51,258,45,"arguments"],[322,60,258,45],[322,68,258,45,"undefined"],[322,77,258,45],[322,80,258,45,"arguments"],[322,89,258,45],[322,95,258,48],[322,96,258,49],[323,8,259,8],[323,12,259,12],[323,16,259,16],[323,17,259,17,"_pending"],[323,25,259,25],[323,27,259,27],[324,10,260,12],[324,14,260,16],[324,15,260,17,"once"],[324,19,260,21],[324,20,260,22],[324,29,260,31],[324,31,260,33],[325,12,260,33],[325,19,260,39,"_this4"],[325,25,260,43],[325,26,260,44,"setKeepAlive"],[325,38,260,56],[325,39,260,57,"enable"],[325,45,260,63],[325,47,260,65,"initialDelay"],[325,59,260,77],[325,60,260,78],[326,10,260,78],[326,12,260,79],[327,10,261,12],[327,17,261,19],[327,21,261,23],[328,8,262,8],[329,8,264,8],[329,12,264,12,"initialDelay"],[329,24,264,24],[329,29,264,29],[329,30,264,30],[329,32,264,32],[330,10,265,12,"console"],[330,17,265,19],[330,18,265,20,"warn"],[330,22,265,24],[330,23,266,16],[330,104,267,12],[330,105,267,13],[331,8,268,8],[332,8,270,8,"Sockets"],[332,15,270,15],[332,16,270,16,"setKeepAlive"],[332,28,270,28],[332,29,270,29],[332,33,270,33],[332,34,270,34,"_id"],[332,37,270,37],[332,39,270,39,"enable"],[332,45,270,45],[332,47,270,47,"Math"],[332,51,270,51],[332,52,270,52,"floor"],[332,57,270,57],[332,58,270,58,"initialDelay"],[332,70,270,70],[332,71,270,71],[332,72,270,72],[333,8,271,8],[333,15,271,15],[333,19,271,19],[334,6,272,4],[336,6,274,4],[337,0,275,0],[338,0,276,0],[339,0,277,0],[340,0,278,0],[341,0,279,0],[342,4,274,4],[343,6,274,4,"key"],[343,9,274,4],[344,6,274,4,"value"],[344,11,274,4],[344,13,280,4],[344,22,280,4,"address"],[344,29,280,11,"address"],[344,30,280,11],[344,32,280,14],[345,8,281,8],[345,12,281,12],[345,13,281,13],[345,17,281,17],[345,18,281,18,"localAddress"],[345,30,281,30],[345,32,281,32],[345,39,281,39],[345,40,281,40],[345,41,281,41],[346,8,282,8],[346,15,282,15],[347,10,282,17,"address"],[347,17,282,24],[347,19,282,26],[347,23,282,30],[347,24,282,31,"localAddress"],[347,36,282,43],[348,10,282,45,"family"],[348,16,282,51],[348,18,282,53],[348,22,282,57],[348,23,282,58,"remoteFamily"],[348,35,282,70],[349,10,282,72,"port"],[349,14,282,76],[349,16,282,78],[349,20,282,82],[349,21,282,83,"localPort"],[350,8,282,93],[350,9,282,94],[351,6,283,4],[353,6,285,4],[354,0,286,0],[355,0,287,0],[356,0,288,0],[357,0,289,0],[358,0,290,0],[359,4,285,4],[360,6,285,4,"key"],[360,9,285,4],[361,6,285,4,"value"],[361,11,285,4],[361,13,291,4],[361,22,291,4,"end"],[361,25,291,7,"end"],[361,26,291,8,"data"],[361,30,291,12],[361,32,291,14,"encoding"],[361,40,291,22],[361,42,291,24],[362,8,291,24],[362,12,291,24,"_this5"],[362,18,291,24],[363,8,292,8],[363,12,292,12,"data"],[363,16,292,16],[363,18,292,18],[364,10,293,12],[364,14,293,16],[364,15,293,17,"write"],[364,20,293,22],[364,21,293,23,"data"],[364,25,293,27],[364,27,293,29,"encoding"],[364,35,293,37],[364,37,293,39],[364,49,293,45],[365,12,294,16,"Sockets"],[365,19,294,23],[365,20,294,24,"end"],[365,23,294,27],[365,24,294,28,"_this5"],[365,30,294,32],[365,31,294,33,"_id"],[365,34,294,36],[365,35,294,37],[366,10,295,12],[366,11,295,13],[366,12,295,14],[367,10,296,12],[367,17,296,19],[367,21,296,23],[368,8,297,8],[369,8,298,8],[369,12,298,12],[369,16,298,16],[369,17,298,17,"_pending"],[369,25,298,25],[369,29,298,29],[369,33,298,33],[369,34,298,34,"_destroyed"],[369,44,298,44],[369,46,298,46],[369,53,298,53],[369,57,298,57],[370,8,300,8],[370,12,300,12],[370,13,300,13,"_clearTimeout"],[370,26,300,26],[370,27,300,27],[370,28,300,28],[371,8,301,8,"Sockets"],[371,15,301,15],[371,16,301,16,"end"],[371,19,301,19],[371,20,301,20],[371,24,301,24],[371,25,301,25,"_id"],[371,28,301,28],[371,29,301,29],[372,8,302,8],[372,15,302,15],[372,19,302,19],[373,6,303,4],[375,6,305,4],[376,0,306,0],[377,0,307,0],[378,4,305,4],[379,6,305,4,"key"],[379,9,305,4],[380,6,305,4,"value"],[380,11,305,4],[380,13,308,4],[380,22,308,4,"destroy"],[380,29,308,11,"destroy"],[380,30,308,11],[380,32,308,14],[381,8,309,8],[381,12,309,12],[381,16,309,16],[381,17,309,17,"_destroyed"],[381,27,309,27],[381,29,309,29],[381,36,309,36],[381,40,309,40],[382,8,310,8],[382,12,310,12],[382,13,310,13,"_destroyed"],[382,23,310,23],[382,26,310,26],[382,30,310,30],[383,8,311,8],[383,12,311,12],[383,13,311,13,"_clearTimeout"],[383,26,311,26],[383,27,311,27],[383,28,311,28],[384,8,312,8,"Sockets"],[384,15,312,15],[384,16,312,16,"destroy"],[384,23,312,23],[384,24,312,24],[384,28,312,28],[384,29,312,29,"_id"],[384,32,312,32],[384,33,312,33],[385,8,313,8],[385,15,313,15],[385,19,313,19],[386,6,314,4],[388,6,316,4],[389,0,317,0],[390,0,318,0],[391,0,319,0],[392,0,320,0],[393,0,321,0],[394,0,322,0],[395,0,323,0],[396,0,324,0],[397,0,325,0],[398,0,326,0],[399,0,327,0],[400,0,328,0],[401,0,329,0],[402,4,316,4],[403,6,316,4,"key"],[403,9,316,4],[404,6,316,4,"value"],[404,11,316,4],[404,13,330,4],[404,22,330,4,"write"],[404,27,330,9,"write"],[404,28,330,10,"buffer"],[404,34,330,16],[404,36,330,18,"encoding"],[404,44,330,26],[404,46,330,28,"cb"],[404,48,330,30],[404,50,330,32],[405,8,330,32],[405,12,330,32,"_this6"],[405,18,330,32],[406,8,331,8],[406,12,331,12],[406,16,331,16],[406,17,331,17,"_pending"],[406,25,331,25],[406,29,331,29],[406,33,331,33],[406,34,331,34,"_destroyed"],[406,44,331,44],[406,46,331,46],[406,52,331,52],[406,56,331,56,"Error"],[406,61,331,61],[406,62,331,62],[406,81,331,81],[406,82,331,82],[407,8,333,8],[407,12,333,14,"generatedBuffer"],[407,27,333,29],[407,30,333,32],[407,34,333,36],[407,35,333,37,"_generateSendBuffer"],[407,54,333,56],[407,55,333,57,"buffer"],[407,61,333,63],[407,63,333,65,"encoding"],[407,71,333,73],[407,72,333,74],[408,8,334,8],[408,12,334,12],[408,13,334,13,"_writeBufferSize"],[408,29,334,29],[408,33,334,33,"generatedBuffer"],[408,48,334,48],[408,49,334,49,"byteLength"],[408,59,334,59],[409,8,335,8],[409,12,335,14,"currentMsgId"],[409,24,335,26],[409,27,335,29],[409,31,335,33],[409,32,335,34,"_msgId"],[409,38,335,40],[410,8,336,8],[410,12,336,12],[410,13,336,13,"_msgId"],[410,19,336,19],[410,22,336,22],[410,23,336,23],[410,27,336,27],[410,28,336,28,"_msgId"],[410,34,336,34],[410,37,336,37],[410,38,336,38],[410,42,336,42,"Number"],[410,48,336,48],[410,49,336,49,"MAX_SAFE_INTEGER"],[410,65,336,65],[411,8,337,8],[411,12,337,14,"msgEvtHandler"],[411,26,337,27],[411,29,337,30],[411,38,337,14,"msgEvtHandler"],[411,51,337,27,"msgEvtHandler"],[411,52,337,31],[411,108,337,88,"evt"],[411,111,337,91],[411,113,337,96],[412,10,338,12],[412,14,338,20,"msgId"],[412,19,338,25],[412,22,338,35,"evt"],[412,25,338,38],[412,26,338,20,"msgId"],[412,31,338,25],[413,12,338,27,"err"],[413,15,338,30],[413,18,338,35,"evt"],[413,21,338,38],[413,22,338,27,"err"],[413,25,338,30],[414,10,339,12],[414,14,339,16,"msgId"],[414,19,339,21],[414,24,339,26,"currentMsgId"],[414,36,339,38],[414,38,339,40],[415,12,340,16,"_this6"],[415,18,340,20],[415,19,340,21,"_msgEvtEmitter"],[415,33,340,35],[415,34,340,36,"removeListener"],[415,48,340,50],[415,49,340,51],[415,58,340,60],[415,60,340,62,"msgEvtHandler"],[415,74,340,75],[415,75,340,76],[416,12,341,16,"_this6"],[416,18,341,20],[416,19,341,21,"_writeBufferSize"],[416,35,341,37],[416,39,341,41,"generatedBuffer"],[416,54,341,56],[416,55,341,57,"byteLength"],[416,65,341,67],[417,12,342,16,"_this6"],[417,18,342,20],[417,19,342,21,"_lastRcvMsgId"],[417,32,342,34],[417,35,342,37,"msgId"],[417,40,342,42],[418,12,343,16,"_this6"],[418,18,343,20],[418,19,343,21,"_resetTimeout"],[418,32,343,34],[418,33,343,35],[418,34,343,36],[419,12,344,16],[419,16,344,20,"_this6"],[419,22,344,24],[419,23,344,25,"writableNeedDrain"],[419,40,344,42],[419,44,344,46,"_this6"],[419,50,344,50],[419,51,344,51,"_lastSentMsgId"],[419,65,344,65],[419,70,344,70,"msgId"],[419,75,344,75],[419,77,344,77],[420,14,345,20,"_this6"],[420,20,345,24],[420,21,345,25,"writableNeedDrain"],[420,38,345,42],[420,41,345,45],[420,46,345,50],[421,14,346,20,"_this6"],[421,20,346,24],[421,21,346,25,"emit"],[421,25,346,29],[421,26,346,30],[421,33,346,37],[421,34,346,38],[422,12,347,16],[423,12,348,16],[423,16,348,20,"cb"],[423,18,348,22],[423,20,348,24],[424,14,349,20],[424,18,349,24,"err"],[424,21,349,27],[424,23,349,29,"cb"],[424,25,349,31],[424,26,349,32],[424,30,349,36,"Error"],[424,35,349,41],[424,36,349,42,"err"],[424,39,349,45],[424,40,349,46],[424,41,349,47],[424,42,349,48],[424,47,350,25,"cb"],[424,49,350,27],[424,50,350,28],[424,51,350,29],[425,12,351,16],[426,10,352,12],[427,8,353,8],[427,9,353,9],[428,8,354,8],[429,8,355,8],[429,12,355,12],[429,13,355,13,"_msgEvtEmitter"],[429,27,355,27],[429,28,355,28,"on"],[429,30,355,30],[429,31,355,31],[429,40,355,40],[429,42,355,42,"msgEvtHandler"],[429,56,355,55],[429,58,355,57],[429,62,355,61],[429,63,355,62],[430,8,356,8],[430,12,356,14,"ok"],[430,14,356,16],[430,17,356,19],[430,21,356,23],[430,22,356,24,"_writeBufferSize"],[430,38,356,40],[430,41,356,43],[430,45,356,47],[430,46,356,48,"writableHighWaterMark"],[430,67,356,69],[431,8,357,8],[431,12,357,12],[431,13,357,13,"ok"],[431,15,357,15],[431,17,357,17],[431,21,357,21],[431,22,357,22,"writableNeedDrain"],[431,39,357,39],[431,42,357,42],[431,46,357,46],[432,8,358,8],[432,12,358,12],[432,13,358,13,"_lastSentMsgId"],[432,27,358,27],[432,30,358,30,"currentMsgId"],[432,42,358,42],[433,8,359,8],[433,12,359,12],[433,13,359,13,"_bytesWritten"],[433,26,359,26],[433,30,359,30,"generatedBuffer"],[433,45,359,45],[433,46,359,46,"byteLength"],[433,56,359,56],[434,8,360,8,"Sockets"],[434,15,360,15],[434,16,360,16,"write"],[434,21,360,21],[434,22,360,22],[434,26,360,26],[434,27,360,27,"_id"],[434,30,360,30],[434,32,360,32,"generatedBuffer"],[434,47,360,47],[434,48,360,48,"toString"],[434,56,360,56],[434,57,360,57],[434,65,360,65],[434,66,360,66],[434,68,360,68,"currentMsgId"],[434,80,360,80],[434,81,360,81],[435,8,361,8],[435,15,361,15,"ok"],[435,17,361,17],[436,6,362,4],[438,6,364,4],[439,0,365,0],[440,0,366,0],[441,4,364,4],[442,6,364,4,"key"],[442,9,364,4],[443,6,364,4,"value"],[443,11,364,4],[443,13,367,4],[443,22,367,4,"pause"],[443,27,367,9,"pause"],[443,28,367,9],[443,30,367,12],[444,8,368,8],[444,12,368,12],[444,16,368,16],[444,17,368,17,"_paused"],[444,24,368,24],[444,26,368,26],[445,8,369,8],[445,12,369,12],[445,13,369,13,"_paused"],[445,20,369,20],[445,23,369,23],[445,27,369,27],[446,8,370,8,"Sockets"],[446,15,370,15],[446,16,370,16,"pause"],[446,21,370,21],[446,22,370,22],[446,26,370,26],[446,27,370,27,"_id"],[446,30,370,30],[446,31,370,31],[447,8,371,8],[447,12,371,12],[447,13,371,13,"emit"],[447,17,371,17],[447,18,371,18],[447,25,371,25],[447,26,371,26],[448,6,372,4],[450,6,374,4],[451,0,375,0],[452,0,376,0],[453,4,374,4],[454,6,374,4,"key"],[454,9,374,4],[455,6,374,4,"value"],[455,11,374,4],[455,13,377,4],[455,22,377,4,"resume"],[455,28,377,10,"resume"],[455,29,377,10],[455,31,377,13],[456,8,378,8],[456,12,378,12],[456,13,378,13],[456,17,378,17],[456,18,378,18,"_paused"],[456,25,378,25],[456,27,378,27],[457,8,379,8],[457,12,379,12],[457,13,379,13,"_paused"],[457,20,379,20],[457,23,379,23],[457,28,379,28],[458,8,380,8],[458,12,380,12],[458,13,380,13,"emit"],[458,17,380,17],[458,18,380,18],[458,26,380,26],[458,27,380,27],[459,8,381,8],[459,12,381,12],[459,13,381,13,"_recoverDataEventsAfterPause"],[459,41,381,41],[459,42,381,42],[459,43,381,43],[460,6,382,4],[461,4,382,5],[462,6,382,5,"key"],[462,9,382,5],[463,6,382,5,"value"],[463,11,382,5],[463,13,384,4],[463,22,384,4,"ref"],[463,25,384,7,"ref"],[463,26,384,7],[463,28,384,10],[464,8,385,8,"console"],[464,15,385,15],[464,16,385,16,"warn"],[464,20,385,20],[464,21,385,21],[464,88,385,88],[464,89,385,89],[465,6,386,4],[466,4,386,5],[467,6,386,5,"key"],[467,9,386,5],[468,6,386,5,"value"],[468,11,386,5],[468,13,388,4],[468,22,388,4,"unref"],[468,27,388,9,"unref"],[468,28,388,9],[468,30,388,12],[469,8,389,8,"console"],[469,15,389,15],[469,16,389,16,"warn"],[469,20,389,20],[469,21,389,21],[469,90,389,90],[469,91,389,91],[470,6,390,4],[472,6,392,4],[473,0,393,0],[474,0,394,0],[475,4,392,4],[476,6,392,4,"key"],[476,9,392,4],[477,6,392,4,"value"],[477,11,392,4],[478,8,392,4],[478,12,392,4,"_recoverDataEventsAfterPause2"],[478,41,392,4],[478,48,392,4,"_asyncToGenerator2"],[478,66,392,4],[478,67,392,4,"default"],[478,74,392,4],[478,76,395,4],[478,89,395,41],[479,10,396,8],[479,14,396,12],[479,18,396,16],[479,19,396,17,"_resuming"],[479,28,396,26],[479,30,396,28],[480,10,397,8],[480,14,397,12],[480,15,397,13,"_resuming"],[480,24,397,22],[480,27,397,25],[480,31,397,29],[481,10,398,8],[481,17,398,15],[481,21,398,19],[481,22,398,20,"_pausedDataEvents"],[481,39,398,37],[481,40,398,38,"length"],[481,46,398,44],[481,49,398,47],[481,50,398,48],[481,52,398,50],[482,12,399,12],[483,12,400,12],[483,16,400,18,"buffArray"],[483,25,400,27],[483,28,400,30],[483,30,400,32],[484,12,401,12],[484,16,401,16,"readBytes"],[484,25,401,25],[484,28,401,28],[484,29,401,29],[485,12,402,12],[485,16,402,16,"i"],[485,17,402,17],[485,20,402,20],[485,21,402,21],[486,12,403,12],[486,19,403,19,"i"],[486,20,403,20],[486,23,403,23],[486,27,403,27],[486,28,403,28,"_pausedDataEvents"],[486,45,403,45],[486,46,403,46,"length"],[486,52,403,52],[486,54,403,54,"i"],[486,55,403,55],[486,57,403,57],[486,59,403,59],[487,14,404,16],[487,18,404,22,"evtData"],[487,25,404,29],[487,28,404,32,"Buffer"],[487,58,404,32],[487,59,404,32,"Buffer"],[487,75,404,38],[487,76,404,39,"from"],[487,80,404,43],[487,81,404,44],[487,85,404,48],[487,86,404,49,"_pausedDataEvents"],[487,103,404,66],[487,104,404,67,"i"],[487,105,404,68],[487,106,404,69],[487,107,404,70,"data"],[487,111,404,74],[487,113,404,76],[487,121,404,84],[487,122,404,85],[488,14,405,16,"readBytes"],[488,23,405,25],[488,27,405,29,"evtData"],[488,34,405,36],[488,35,405,37,"byteLength"],[488,45,405,47],[489,14,406,16],[489,18,406,20,"readBytes"],[489,27,406,29],[489,31,406,33],[489,35,406,37],[489,36,406,38,"readableHighWaterMark"],[489,57,406,59],[489,59,406,61],[490,16,407,20,"buffArray"],[490,25,407,29],[490,26,407,30,"push"],[490,30,407,34],[490,31,407,35,"evtData"],[490,38,407,42],[490,39,407,43],[491,14,408,16],[491,15,408,17],[491,21,408,23],[492,16,409,20],[492,20,409,26,"buffOffset"],[492,30,409,36],[492,33,409,39],[492,37,409,43],[492,38,409,44,"readableHighWaterMark"],[492,59,409,65],[492,62,409,68,"readBytes"],[492,71,409,77],[493,16,410,20,"buffArray"],[493,25,410,29],[493,26,410,30,"push"],[493,30,410,34],[493,31,410,35,"evtData"],[493,38,410,42],[493,39,410,43,"slice"],[493,44,410,48],[493,45,410,49],[493,46,410,50],[493,48,410,52,"buffOffset"],[493,58,410,62],[493,59,410,63],[493,60,410,64],[494,16,411,20],[494,20,411,24],[494,21,411,25,"_pausedDataEvents"],[494,38,411,42],[494,39,411,43,"i"],[494,40,411,44],[494,41,411,45],[494,42,411,46,"data"],[494,46,411,50],[494,49,411,53,"evtData"],[494,56,411,60],[494,57,411,61,"slice"],[494,62,411,66],[494,63,411,67,"buffOffset"],[494,73,411,77],[494,74,411,78],[494,75,411,79,"toString"],[494,83,411,87],[494,84,411,88],[494,92,411,96],[494,93,411,97],[495,16,412,20],[496,14,413,16],[497,12,414,12],[498,12,415,12],[499,12,416,12],[499,16,416,18,"evt"],[499,19,416,21],[499,22,416,24],[500,14,417,16,"id"],[500,16,417,18],[500,18,417,20],[500,22,417,24],[500,23,417,25,"_pausedDataEvents"],[500,40,417,42],[500,41,417,43],[500,42,417,44],[500,43,417,45],[500,44,417,46,"id"],[500,46,417,48],[501,14,418,16,"data"],[501,18,418,20],[501,20,418,22,"Buffer"],[501,50,418,22],[501,51,418,22,"Buffer"],[501,67,418,28],[501,68,418,29,"concat"],[501,74,418,35],[501,75,418,36,"buffArray"],[501,84,418,45],[501,85,418,46],[501,86,418,47,"toString"],[501,94,418,55],[501,95,418,56],[501,103,418,64],[502,12,419,12],[502,13,419,13],[503,12,420,12],[504,12,421,12],[504,16,421,16],[504,17,421,17,"_pausedDataEvents"],[504,34,421,34],[504,37,421,37],[504,41,421,41],[504,42,421,42,"_pausedDataEvents"],[504,59,421,59],[504,60,421,60,"slice"],[504,65,421,65],[504,66,421,66,"i"],[504,67,421,67],[504,68,421,68],[505,12,422,12],[505,16,422,16],[505,17,422,17,"_onDeviceDataEvt"],[505,33,422,33],[505,34,422,34,"evt"],[505,37,422,37],[505,38,422,38],[506,12,423,12],[506,16,423,16],[506,20,423,20],[506,21,423,21,"_paused"],[506,28,423,28],[506,30,423,30],[507,14,424,16],[507,18,424,20],[507,19,424,21,"_resuming"],[507,28,424,30],[507,31,424,33],[507,36,424,38],[508,14,425,16],[509,12,426,12],[510,10,427,8],[511,10,428,8],[511,14,428,12],[511,15,428,13,"_resuming"],[511,24,428,22],[511,27,428,25],[511,32,428,30],[512,10,429,8,"Sockets"],[512,17,429,15],[512,18,429,16,"resume"],[512,24,429,22],[512,25,429,23],[512,29,429,27],[512,30,429,28,"_id"],[512,33,429,31],[512,34,429,32],[513,8,430,4],[513,9,430,5],[514,8,430,5],[514,17,395,10,"_recoverDataEventsAfterPause"],[514,45,395,38,"_recoverDataEventsAfterPause"],[514,46,395,38],[515,10,395,38],[515,17,395,38,"_recoverDataEventsAfterPause2"],[515,46,395,38],[515,47,395,38,"apply"],[515,52,395,38],[515,59,395,38,"arguments"],[515,68,395,38],[516,8,395,38],[517,8,395,38],[517,15,395,10,"_recoverDataEventsAfterPause"],[517,43,395,38],[518,6,395,38],[519,4,395,38],[520,6,395,38,"key"],[520,9,395,38],[521,6,395,38,"value"],[521,11,395,38],[522,6,449,4],[523,0,450,0],[524,0,451,0],[525,6,452,4],[525,15,452,4,"_registerEvents"],[525,30,452,19,"_registerEvents"],[525,31,452,19],[525,33,452,22],[526,8,452,22],[526,12,452,22,"_this7"],[526,18,452,22],[527,8,453,8],[527,12,453,12],[527,13,453,13,"_unregisterEvents"],[527,30,453,30],[527,31,453,31],[527,32,453,32],[528,8,454,8],[528,12,454,12],[528,13,454,13,"_dataListener"],[528,26,454,26],[528,29,454,29],[528,33,454,33],[528,34,454,34,"_eventEmitter"],[528,47,454,47],[528,48,454,48,"addListener"],[528,59,454,59],[528,60,454,60],[528,66,454,66],[528,68,454,68],[528,72,454,72],[528,73,454,73,"_onDeviceDataEvt"],[528,89,454,89],[528,90,454,90],[529,8,455,8],[529,12,455,12],[529,13,455,13,"_errorListener"],[529,27,455,27],[529,30,455,30],[529,34,455,34],[529,35,455,35,"_eventEmitter"],[529,48,455,48],[529,49,455,49,"addListener"],[529,60,455,60],[529,61,455,61],[529,68,455,68],[529,70,455,70],[529,80,455,71,"evt"],[529,83,455,74],[529,85,455,79],[530,10,456,12],[530,14,456,16,"evt"],[530,17,456,19],[530,18,456,20,"id"],[530,20,456,22],[530,25,456,27,"_this7"],[530,31,456,31],[530,32,456,32,"_id"],[530,35,456,35],[530,37,456,37],[531,10,457,12,"_this7"],[531,16,457,16],[531,17,457,17,"destroy"],[531,24,457,24],[531,25,457,25],[531,26,457,26],[532,10,458,12,"_this7"],[532,16,458,16],[532,17,458,17,"emit"],[532,21,458,21],[532,22,458,22],[532,29,458,29],[532,31,458,31,"evt"],[532,34,458,34],[532,35,458,35,"error"],[532,40,458,40],[532,41,458,41],[533,8,459,8],[533,9,459,9],[533,10,459,10],[534,8,460,8],[534,12,460,12],[534,13,460,13,"_closeListener"],[534,27,460,27],[534,30,460,30],[534,34,460,34],[534,35,460,35,"_eventEmitter"],[534,48,460,48],[534,49,460,49,"addListener"],[534,60,460,60],[534,61,460,61],[534,68,460,68],[534,70,460,70],[534,80,460,71,"evt"],[534,83,460,74],[534,85,460,79],[535,10,461,12],[535,14,461,16,"evt"],[535,17,461,19],[535,18,461,20,"id"],[535,20,461,22],[535,25,461,27,"_this7"],[535,31,461,31],[535,32,461,32,"_id"],[535,35,461,35],[535,37,461,37],[536,10,462,12,"_this7"],[536,16,462,16],[536,17,462,17,"_setDisconnected"],[536,33,462,33],[536,34,462,34],[536,35,462,35],[537,10,463,12,"_this7"],[537,16,463,16],[537,17,463,17,"emit"],[537,21,463,21],[537,22,463,22],[537,29,463,29],[537,31,463,31,"evt"],[537,34,463,34],[537,35,463,35,"error"],[537,40,463,40],[537,41,463,41],[538,8,464,8],[538,9,464,9],[538,10,464,10],[539,8,465,8],[539,12,465,12],[539,13,465,13,"_connectListener"],[539,29,465,29],[539,32,465,32],[539,36,465,36],[539,37,465,37,"_eventEmitter"],[539,50,465,50],[539,51,465,51,"addListener"],[539,62,465,62],[539,63,465,63],[539,72,465,72],[539,74,465,74],[539,84,465,75,"evt"],[539,87,465,78],[539,89,465,83],[540,10,466,12],[540,14,466,16,"evt"],[540,17,466,19],[540,18,466,20,"id"],[540,20,466,22],[540,25,466,27,"_this7"],[540,31,466,31],[540,32,466,32,"_id"],[540,35,466,35],[540,37,466,37],[541,10,467,12,"_this7"],[541,16,467,16],[541,17,467,17,"_setConnected"],[541,30,467,30],[541,31,467,31,"evt"],[541,34,467,34],[541,35,467,35,"connection"],[541,45,467,45],[541,46,467,46],[542,10,468,12,"_this7"],[542,16,468,16],[542,17,468,17,"emit"],[542,21,468,21],[542,22,468,22],[542,31,468,31],[542,32,468,32],[543,8,469,8],[543,9,469,9],[543,10,469,10],[544,8,470,8],[544,12,470,12],[544,13,470,13,"_writtenListener"],[544,29,470,29],[544,32,470,32],[544,36,470,36],[544,37,470,37,"_eventEmitter"],[544,50,470,50],[544,51,470,51,"addListener"],[544,62,470,62],[544,63,470,63],[544,72,470,72],[544,74,470,74],[544,84,470,75,"evt"],[544,87,470,78],[544,89,470,83],[545,10,471,12],[545,14,471,16,"evt"],[545,17,471,19],[545,18,471,20,"id"],[545,20,471,22],[545,25,471,27,"_this7"],[545,31,471,31],[545,32,471,32,"_id"],[545,35,471,35],[545,37,471,37],[546,10,472,12,"_this7"],[546,16,472,16],[546,17,472,17,"_msgEvtEmitter"],[546,31,472,31],[546,32,472,32,"emit"],[546,36,472,36],[546,37,472,37],[546,46,472,46],[546,48,472,48,"evt"],[546,51,472,51],[546,52,472,52],[547,8,473,8],[547,9,473,9],[547,10,473,10],[548,6,474,4],[550,6,476,4],[551,0,477,0],[552,0,478,0],[553,4,476,4],[554,6,476,4,"key"],[554,9,476,4],[555,6,476,4,"value"],[555,11,476,4],[555,13,479,4],[555,22,479,4,"_unregisterEvents"],[555,39,479,21,"_unregisterEvents"],[555,40,479,21],[555,42,479,24],[556,8,479,24],[556,12,479,24,"_this$_dataListener"],[556,31,479,24],[556,33,479,24,"_this$_errorListener"],[556,53,479,24],[556,55,479,24,"_this$_closeListener"],[556,75,479,24],[556,77,479,24,"_this$_connectListene"],[556,98,479,24],[556,100,479,24,"_this$_writtenListene"],[556,121,479,24],[557,8,480,8],[557,9,480,8,"_this$_dataListener"],[557,28,480,8],[557,35,480,12],[557,36,480,13,"_dataListener"],[557,49,480,26],[557,62,480,8,"_this$_dataListener"],[557,81,480,8],[557,82,480,28,"remove"],[557,88,480,34],[557,89,480,35],[557,90,480,36],[558,8,481,8],[558,9,481,8,"_this$_errorListener"],[558,29,481,8],[558,36,481,12],[558,37,481,13,"_errorListener"],[558,51,481,27],[558,64,481,8,"_this$_errorListener"],[558,84,481,8],[558,85,481,29,"remove"],[558,91,481,35],[558,92,481,36],[558,93,481,37],[559,8,482,8],[559,9,482,8,"_this$_closeListener"],[559,29,482,8],[559,36,482,12],[559,37,482,13,"_closeListener"],[559,51,482,27],[559,64,482,8,"_this$_closeListener"],[559,84,482,8],[559,85,482,29,"remove"],[559,91,482,35],[559,92,482,36],[559,93,482,37],[560,8,483,8],[560,9,483,8,"_this$_connectListene"],[560,30,483,8],[560,37,483,12],[560,38,483,13,"_connectListener"],[560,54,483,29],[560,67,483,8,"_this$_connectListene"],[560,88,483,8],[560,89,483,31,"remove"],[560,95,483,37],[560,96,483,38],[560,97,483,39],[561,8,484,8],[561,9,484,8,"_this$_writtenListene"],[561,30,484,8],[561,37,484,12],[561,38,484,13,"_writtenListener"],[561,54,484,29],[561,67,484,8,"_this$_writtenListene"],[561,88,484,8],[561,89,484,31,"remove"],[561,95,484,37],[561,96,484,38],[561,97,484,39],[562,6,485,4],[564,6,487,4],[565,0,488,0],[566,0,489,0],[567,0,490,0],[568,0,491,0],[569,4,487,4],[570,6,487,4,"key"],[570,9,487,4],[571,6,487,4,"value"],[571,11,487,4],[571,13,492,4],[571,22,492,4,"_generateSendBuffer"],[571,41,492,23,"_generateSendBuffer"],[571,42,492,24,"buffer"],[571,48,492,30],[571,50,492,32,"encoding"],[571,58,492,40],[571,60,492,42],[572,8,493,8],[572,12,493,12],[572,19,493,19,"buffer"],[572,25,493,25],[572,30,493,30],[572,38,493,38],[572,40,493,40],[573,10,494,12],[573,17,494,19,"Buffer"],[573,47,494,19],[573,48,494,19,"Buffer"],[573,64,494,25],[573,65,494,26,"from"],[573,69,494,30],[573,70,494,31,"buffer"],[573,76,494,37],[573,78,494,39,"encoding"],[573,86,494,47],[573,87,494,48],[574,8,495,8],[574,9,495,9],[574,15,495,15],[574,19,495,19,"Buffer"],[574,49,495,19],[574,50,495,19,"Buffer"],[574,66,495,25],[574,67,495,26,"isBuffer"],[574,75,495,34],[574,76,495,35,"buffer"],[574,82,495,41],[574,83,495,42],[574,85,495,44],[575,10,496,12],[575,17,496,19,"buffer"],[575,23,496,25],[576,8,497,8],[576,9,497,9],[576,15,497,15],[576,19,497,19,"buffer"],[576,25,497,25],[576,37,497,37,"Uint8Array"],[576,47,497,47],[576,51,497,51,"Array"],[576,56,497,56],[576,57,497,57,"isArray"],[576,64,497,64],[576,65,497,65,"buffer"],[576,71,497,71],[576,72,497,72],[576,74,497,74],[577,10,498,12],[577,17,498,19,"Buffer"],[577,47,498,19],[577,48,498,19,"Buffer"],[577,64,498,25],[577,65,498,26,"from"],[577,69,498,30],[577,70,498,31,"buffer"],[577,76,498,37],[577,77,498,38],[578,8,499,8],[578,9,499,9],[578,15,499,15],[579,10,500,12],[579,16,500,18],[579,20,500,22,"TypeError"],[579,29,500,31],[579,30,501,16],[579,85,501,71],[579,92,501,78,"buffer"],[579,98,501,84],[579,100,502,12],[579,101,502,13],[580,8,503,8],[581,6,504,4],[583,6,506,4],[584,0,507,0],[585,0,508,0],[586,4,506,4],[587,6,506,4,"key"],[587,9,506,4],[588,6,506,4,"value"],[588,11,506,4],[588,13,509,4],[588,22,509,4,"_setDisconnected"],[588,38,509,20,"_setDisconnected"],[588,39,509,20],[588,41,509,23],[589,8,510,8],[589,12,510,12],[589,13,510,13,"_unregisterEvents"],[589,30,510,30],[589,31,510,31],[589,32,510,32],[590,6,511,4],[591,4,511,5],[592,2,511,5],[592,4,45,36,"EventEmitter"],[592,25,45,48],[593,0,45,48],[593,3]],"functionMap":{"names":["<global>","Socket","constructor","get__readyState","get__destroyed","get__pending","get__connecting","get__bytesWritten","get__bytesRead","get__timeout","_setId","_setConnected","connect","once$argument_1","setTimeout","_resetTimeout","setTimeout$argument_0","_clearTimeout","setEncoding","setNoDelay","setKeepAlive","address","end","write$argument_2","destroy","write","msgEvtHandler","pause","resume","ref","unref","_recoverDataEventsAfterPause","_onDeviceDataEvt","_registerEvents","_eventEmitter.addListener$argument_1","_unregisterEvents","_generateSendBuffer","_setDisconnected"],"mappings":"AAA;eC4C;ICI;KDkD;IEE;KFE;IGE;KHE;IIE;KJE;IKE;KLE;IME;KNE;IOE;KPE;IQE;KRE;ISM;KTG;IUM;KVS;IWM;6BCK;SDE;KXK;Iae;KbS;IcK;uCCG;aDG;KdE;IgBK;KhBK;IiBW;KjBG;IkBW;iCNE,8BM;KlBK;ImBU;iCPE,6CO;KnBY;IoBQ;KpBG;IqBQ;uCCE;aDE;KrBQ;IuBK;KvBM;IwBgB;8BCO;SDgB;KxBS;I0BK;K1BK;I2BK;K3BK;I4BE;K5BE;I6BE;K7BE;I8BK;K9BmC;uB+BK;K/BY;IgCK;sECG;SDI;sECC;SDI;0ECC;SDI;0ECC;SDG;KhCC;IkCK;KlCM;ImCO;KnCY;IoCK;KpCE;CDC"}},"type":"js/module"}]}