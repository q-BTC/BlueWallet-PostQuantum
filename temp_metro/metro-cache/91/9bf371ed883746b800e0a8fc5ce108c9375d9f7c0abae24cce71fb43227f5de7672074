{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":603,"column":0,"index":20442}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":603,"column":0,"index":20442}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./crypto.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":49,"column":29,"index":1426},"end":{"line":49,"column":52,"index":1449}}],"key":"/a2Czi08SAMOBS5DoixqW+rCl4A="}},{"name":"./script.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":51,"column":29,"index":1531},"end":{"line":51,"column":52,"index":1554}},{"start":{"line":52,"column":20,"index":1577},"end":{"line":52,"column":43,"index":1600}}],"key":"YwKathlCh3lFwWqarM8qXink2No="}},{"name":"./types.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":53,"column":27,"index":1629},"end":{"line":53,"column":49,"index":1651}}],"key":"WQrrQSPUEy7ImSCQXvQAA3uXTs4="}},{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":54,"column":27,"index":1681},"end":{"line":54,"column":54,"index":1708}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"valibot","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":55,"column":23,"index":1734},"end":{"line":55,"column":41,"index":1752}}],"key":"rRKi8w2T+ZK7uQFy8MRs6k6j9DA="}},{"name":"./bufferutils.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}},{"start":{"line":48,"column":25,"index":1367},"end":{"line":48,"column":53,"index":1395}}],"key":"zB1dBFCakJ6gZt6wDMvzXihj8Jk="}},{"name":"@noble/hashes/sha256","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}},{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}},{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}},{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}},{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}},{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}},{"start":{"line":50,"column":17,"index":1469},"end":{"line":50,"column":48,"index":1500}}],"key":"EfhdhA5Ga0BuepmWq7uP+xrNUyw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || ('get' in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, 'default', {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o['default'] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== 'default' && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.Transaction = void 0;\n  var bcrypto = __importStar(_$$_REQUIRE(_dependencyMap[2], \"./crypto.cjs\"));\n  var bscript = __importStar(_$$_REQUIRE(_dependencyMap[3], \"./script.cjs\"));\n  var types = __importStar(_$$_REQUIRE(_dependencyMap[4], \"./types.cjs\"));\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[5], \"uint8array-tools\"));\n  var v = __importStar(_$$_REQUIRE(_dependencyMap[6], \"valibot\"));\n  function varSliceSize(someScript) {\n    var length = someScript.length;\n    return _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").varuint.encodingLength(length) + length;\n  }\n  function vectorSize(someVector) {\n    var length = someVector.length;\n    return _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").varuint.encodingLength(length) + someVector.reduce(function (sum, witness) {\n      return sum + varSliceSize(witness);\n    }, 0);\n  }\n  var EMPTY_BUFFER = new Uint8Array(0);\n  var EMPTY_WITNESS = [];\n  var ZERO = tools.fromHex('0000000000000000000000000000000000000000000000000000000000000000');\n  var ONE = tools.fromHex('0000000000000000000000000000000000000000000000000000000000000001');\n  var VALUE_UINT64_MAX = tools.fromHex('ffffffffffffffff');\n  var BLANK_OUTPUT = {\n    script: EMPTY_BUFFER,\n    valueBuffer: VALUE_UINT64_MAX\n  };\n  function isOutput(out) {\n    return out.value !== undefined;\n  }\n  /**\n   * Represents a Bitcoin transaction.\n   */\n  var Transaction = /*#__PURE__*/function () {\n    function Transaction() {\n      _classCallCheck(this, Transaction);\n      this.version = 1;\n      this.locktime = 0;\n      this.ins = [];\n      this.outs = [];\n    }\n    return _createClass(Transaction, [{\n      key: \"isCoinbase\",\n      value: function isCoinbase() {\n        return this.ins.length === 1 && Transaction.isCoinbaseHash(this.ins[0].hash);\n      }\n    }, {\n      key: \"addInput\",\n      value: function addInput(hash, index, sequence, scriptSig) {\n        v.parse(v.tuple([types.Hash256bitSchema, types.UInt32Schema, v.nullable(v.optional(types.UInt32Schema)), v.nullable(v.optional(types.BufferSchema))]), [hash, index, sequence, scriptSig]);\n        if (sequence === undefined || sequence === null) {\n          sequence = Transaction.DEFAULT_SEQUENCE;\n        }\n        // Add the input and return the input's index\n        return this.ins.push({\n          hash: hash,\n          index: index,\n          script: scriptSig || EMPTY_BUFFER,\n          sequence: sequence,\n          witness: EMPTY_WITNESS\n        }) - 1;\n      }\n    }, {\n      key: \"addOutput\",\n      value: function addOutput(scriptPubKey, value) {\n        v.parse(v.tuple([types.BufferSchema, types.SatoshiSchema]), [scriptPubKey, value]);\n        // Add the output and return the output's index\n        return this.outs.push({\n          script: scriptPubKey,\n          value: value\n        }) - 1;\n      }\n    }, {\n      key: \"hasWitnesses\",\n      value: function hasWitnesses() {\n        return this.ins.some(function (x) {\n          return x.witness.length !== 0;\n        });\n      }\n    }, {\n      key: \"weight\",\n      value: function weight() {\n        var base = this.byteLength(false);\n        var total = this.byteLength(true);\n        return base * 3 + total;\n      }\n    }, {\n      key: \"virtualSize\",\n      value: function virtualSize() {\n        return Math.ceil(this.weight() / 4);\n      }\n    }, {\n      key: \"byteLength\",\n      value: function byteLength() {\n        var _ALLOW_WITNESS = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n        var hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n        return (hasWitnesses ? 10 : 8) + _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").varuint.encodingLength(this.ins.length) + _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").varuint.encodingLength(this.outs.length) + this.ins.reduce(function (sum, input) {\n          return sum + 40 + varSliceSize(input.script);\n        }, 0) + this.outs.reduce(function (sum, output) {\n          return sum + 8 + varSliceSize(output.script);\n        }, 0) + (hasWitnesses ? this.ins.reduce(function (sum, input) {\n          return sum + vectorSize(input.witness);\n        }, 0) : 0);\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var newTx = new Transaction();\n        newTx.version = this.version;\n        newTx.locktime = this.locktime;\n        newTx.ins = this.ins.map(function (txIn) {\n          return {\n            hash: txIn.hash,\n            index: txIn.index,\n            script: txIn.script,\n            sequence: txIn.sequence,\n            witness: txIn.witness\n          };\n        });\n        newTx.outs = this.outs.map(function (txOut) {\n          return {\n            script: txOut.script,\n            value: txOut.value\n          };\n        });\n        return newTx;\n      }\n      /**\n       * Hash transaction for signing a specific input.\n       *\n       * Bitcoin uses a different hash for each signed transaction input.\n       * This method copies the transaction, makes the necessary changes based on the\n       * hashType, and then hashes the result.\n       * This hash can then be used to sign the provided transaction input.\n       */\n    }, {\n      key: \"hashForSignature\",\n      value: function hashForSignature(inIndex, prevOutScript, hashType) {\n        v.parse(v.tuple([types.UInt32Schema, types.BufferSchema, v.number()]), [inIndex, prevOutScript, hashType]);\n        // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L29\n        if (inIndex >= this.ins.length) return ONE;\n        // ignore OP_CODESEPARATOR\n        var ourScript = bscript.compile(bscript.decompile(prevOutScript).filter(function (x) {\n          return x !== _$$_REQUIRE(_dependencyMap[3], \"./script.cjs\").OPS.OP_CODESEPARATOR;\n        }));\n        var txTmp = this.clone();\n        // SIGHASH_NONE: ignore all outputs? (wildcard payee)\n        if ((hashType & 0x1f) === Transaction.SIGHASH_NONE) {\n          txTmp.outs = [];\n          // ignore sequence numbers (except at inIndex)\n          txTmp.ins.forEach(function (input, i) {\n            if (i === inIndex) return;\n            input.sequence = 0;\n          });\n          // SIGHASH_SINGLE: ignore all outputs, except at the same index?\n        } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE) {\n          // https://github.com/bitcoin/bitcoin/blob/master/src/test/sighash_tests.cpp#L60\n          if (inIndex >= this.outs.length) return ONE;\n          // truncate outputs after\n          txTmp.outs.length = inIndex + 1;\n          // \"blank\" outputs before\n          for (var i = 0; i < inIndex; i++) {\n            txTmp.outs[i] = BLANK_OUTPUT;\n          }\n          // ignore sequence numbers (except at inIndex)\n          txTmp.ins.forEach(function (input, y) {\n            if (y === inIndex) return;\n            input.sequence = 0;\n          });\n        }\n        // SIGHASH_ANYONECANPAY: ignore inputs entirely?\n        if (hashType & Transaction.SIGHASH_ANYONECANPAY) {\n          txTmp.ins = [txTmp.ins[inIndex]];\n          txTmp.ins[0].script = ourScript;\n          // SIGHASH_ALL: only ignore input scripts\n        } else {\n          // \"blank\" others input scripts\n          txTmp.ins.forEach(function (input) {\n            input.script = EMPTY_BUFFER;\n          });\n          txTmp.ins[inIndex].script = ourScript;\n        }\n        // serialize and hash\n        var buffer = new Uint8Array(txTmp.byteLength(false) + 4);\n        tools.writeInt32(buffer, buffer.length - 4, hashType, 'LE');\n        txTmp.__toBuffer(buffer, 0, false);\n        return bcrypto.hash256(buffer);\n      }\n    }, {\n      key: \"hashForWitnessV1\",\n      value: function hashForWitnessV1(inIndex, prevOutScripts, values, hashType, leafHash, annex) {\n        // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#common-signature-message\n        v.parse(v.tuple([types.UInt32Schema, v.array(types.BufferSchema), v.array(types.SatoshiSchema), types.UInt32Schema]), [inIndex, prevOutScripts, values, hashType]);\n        if (values.length !== this.ins.length || prevOutScripts.length !== this.ins.length) {\n          throw new Error('Must supply prevout script and value for all inputs');\n        }\n        var outputType = hashType === Transaction.SIGHASH_DEFAULT ? Transaction.SIGHASH_ALL : hashType & Transaction.SIGHASH_OUTPUT_MASK;\n        var inputType = hashType & Transaction.SIGHASH_INPUT_MASK;\n        var isAnyoneCanPay = inputType === Transaction.SIGHASH_ANYONECANPAY;\n        var isNone = outputType === Transaction.SIGHASH_NONE;\n        var isSingle = outputType === Transaction.SIGHASH_SINGLE;\n        var hashPrevouts = EMPTY_BUFFER;\n        var hashAmounts = EMPTY_BUFFER;\n        var hashScriptPubKeys = EMPTY_BUFFER;\n        var hashSequences = EMPTY_BUFFER;\n        var hashOutputs = EMPTY_BUFFER;\n        if (!isAnyoneCanPay) {\n          var bufferWriter = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(36 * this.ins.length);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeSlice(txIn.hash);\n            bufferWriter.writeUInt32(txIn.index);\n          });\n          hashPrevouts = (0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(bufferWriter.end());\n          bufferWriter = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(8 * this.ins.length);\n          values.forEach(function (value) {\n            return bufferWriter.writeInt64(value);\n          });\n          hashAmounts = (0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(bufferWriter.end());\n          bufferWriter = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(prevOutScripts.map(varSliceSize).reduce(function (a, b) {\n            return a + b;\n          }));\n          prevOutScripts.forEach(function (prevOutScript) {\n            return bufferWriter.writeVarSlice(prevOutScript);\n          });\n          hashScriptPubKeys = (0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(bufferWriter.end());\n          bufferWriter = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(4 * this.ins.length);\n          this.ins.forEach(function (txIn) {\n            return bufferWriter.writeUInt32(txIn.sequence);\n          });\n          hashSequences = (0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(bufferWriter.end());\n        }\n        if (!(isNone || isSingle)) {\n          if (!this.outs.length) throw new Error('Add outputs to the transaction before signing.');\n          var txOutsSize = this.outs.map(function (output) {\n            return 8 + varSliceSize(output.script);\n          }).reduce(function (a, b) {\n            return a + b;\n          });\n          var _bufferWriter = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(txOutsSize);\n          this.outs.forEach(function (out) {\n            _bufferWriter.writeInt64(out.value);\n            _bufferWriter.writeVarSlice(out.script);\n          });\n          hashOutputs = (0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(_bufferWriter.end());\n        } else if (isSingle && inIndex < this.outs.length) {\n          var output = this.outs[inIndex];\n          var _bufferWriter2 = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(8 + varSliceSize(output.script));\n          _bufferWriter2.writeInt64(output.value);\n          _bufferWriter2.writeVarSlice(output.script);\n          hashOutputs = (0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(_bufferWriter2.end());\n        }\n        var spendType = (leafHash ? 2 : 0) + (annex ? 1 : 0);\n        // Length calculation from:\n        // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-14\n        // With extension from:\n        // https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki#signature-validation\n        var sigMsgSize = 174 - (isAnyoneCanPay ? 49 : 0) - (isNone ? 32 : 0) + (annex ? 32 : 0) + (leafHash ? 37 : 0);\n        var sigMsgWriter = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(sigMsgSize);\n        sigMsgWriter.writeUInt8(hashType);\n        // Transaction\n        sigMsgWriter.writeInt32(this.version);\n        sigMsgWriter.writeUInt32(this.locktime);\n        sigMsgWriter.writeSlice(hashPrevouts);\n        sigMsgWriter.writeSlice(hashAmounts);\n        sigMsgWriter.writeSlice(hashScriptPubKeys);\n        sigMsgWriter.writeSlice(hashSequences);\n        if (!(isNone || isSingle)) {\n          sigMsgWriter.writeSlice(hashOutputs);\n        }\n        // Input\n        sigMsgWriter.writeUInt8(spendType);\n        if (isAnyoneCanPay) {\n          var input = this.ins[inIndex];\n          sigMsgWriter.writeSlice(input.hash);\n          sigMsgWriter.writeUInt32(input.index);\n          sigMsgWriter.writeInt64(values[inIndex]);\n          sigMsgWriter.writeVarSlice(prevOutScripts[inIndex]);\n          sigMsgWriter.writeUInt32(input.sequence);\n        } else {\n          sigMsgWriter.writeUInt32(inIndex);\n        }\n        if (annex) {\n          var _bufferWriter3 = _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter.withCapacity(varSliceSize(annex));\n          _bufferWriter3.writeVarSlice(annex);\n          sigMsgWriter.writeSlice((0, _$$_REQUIRE(_dependencyMap[8], \"@noble/hashes/sha256\").sha256)(_bufferWriter3.end()));\n        }\n        // Output\n        if (isSingle) {\n          sigMsgWriter.writeSlice(hashOutputs);\n        }\n        // BIP342 extension\n        if (leafHash) {\n          sigMsgWriter.writeSlice(leafHash);\n          sigMsgWriter.writeUInt8(0);\n          sigMsgWriter.writeUInt32(0xffffffff);\n        }\n        // Extra zero byte because:\n        // https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki#cite_note-19\n        return bcrypto.taggedHash('TapSighash', tools.concat([Uint8Array.from([0x00]), sigMsgWriter.end()]));\n      }\n    }, {\n      key: \"hashForWitnessV0\",\n      value: function hashForWitnessV0(inIndex, prevOutScript, value, hashType) {\n        v.parse(v.tuple([types.UInt32Schema, types.BufferSchema, types.SatoshiSchema, types.UInt32Schema]), [inIndex, prevOutScript, value, hashType]);\n        var tbuffer = Uint8Array.from([]);\n        var bufferWriter;\n        var hashOutputs = ZERO;\n        var hashPrevouts = ZERO;\n        var hashSequence = ZERO;\n        if (!(hashType & Transaction.SIGHASH_ANYONECANPAY)) {\n          tbuffer = new Uint8Array(36 * this.ins.length);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter)(tbuffer, 0);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeSlice(txIn.hash);\n            bufferWriter.writeUInt32(txIn.index);\n          });\n          hashPrevouts = bcrypto.hash256(tbuffer);\n        }\n        if (!(hashType & Transaction.SIGHASH_ANYONECANPAY) && (hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n          tbuffer = new Uint8Array(4 * this.ins.length);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter)(tbuffer, 0);\n          this.ins.forEach(function (txIn) {\n            bufferWriter.writeUInt32(txIn.sequence);\n          });\n          hashSequence = bcrypto.hash256(tbuffer);\n        }\n        if ((hashType & 0x1f) !== Transaction.SIGHASH_SINGLE && (hashType & 0x1f) !== Transaction.SIGHASH_NONE) {\n          var txOutsSize = this.outs.reduce(function (sum, output) {\n            return sum + 8 + varSliceSize(output.script);\n          }, 0);\n          tbuffer = new Uint8Array(txOutsSize);\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter)(tbuffer, 0);\n          this.outs.forEach(function (out) {\n            bufferWriter.writeInt64(out.value);\n            bufferWriter.writeVarSlice(out.script);\n          });\n          hashOutputs = bcrypto.hash256(tbuffer);\n        } else if ((hashType & 0x1f) === Transaction.SIGHASH_SINGLE && inIndex < this.outs.length) {\n          var output = this.outs[inIndex];\n          tbuffer = new Uint8Array(8 + varSliceSize(output.script));\n          bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter)(tbuffer, 0);\n          bufferWriter.writeInt64(output.value);\n          bufferWriter.writeVarSlice(output.script);\n          hashOutputs = bcrypto.hash256(tbuffer);\n        }\n        tbuffer = new Uint8Array(156 + varSliceSize(prevOutScript));\n        bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter)(tbuffer, 0);\n        var input = this.ins[inIndex];\n        bufferWriter.writeInt32(this.version);\n        bufferWriter.writeSlice(hashPrevouts);\n        bufferWriter.writeSlice(hashSequence);\n        bufferWriter.writeSlice(input.hash);\n        bufferWriter.writeUInt32(input.index);\n        bufferWriter.writeVarSlice(prevOutScript);\n        bufferWriter.writeInt64(value);\n        bufferWriter.writeUInt32(input.sequence);\n        bufferWriter.writeSlice(hashOutputs);\n        bufferWriter.writeUInt32(this.locktime);\n        bufferWriter.writeUInt32(hashType);\n        return bcrypto.hash256(tbuffer);\n      }\n    }, {\n      key: \"getHash\",\n      value: function getHash(forWitness) {\n        // wtxid for coinbase is always 32 bytes of 0x00\n        if (forWitness && this.isCoinbase()) return new Uint8Array(32);\n        return bcrypto.hash256(this.__toBuffer(undefined, undefined, forWitness));\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        // transaction hash's are displayed in reverse order\n        return tools.toHex((0, _$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").reverseBuffer)(this.getHash(false)));\n      }\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer(buffer, initialOffset) {\n        return this.__toBuffer(buffer, initialOffset, true);\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex() {\n        return tools.toHex(this.toBuffer(undefined, undefined));\n      }\n    }, {\n      key: \"setInputScript\",\n      value: function setInputScript(index, scriptSig) {\n        v.parse(v.tuple([v.number(), types.BufferSchema]), [index, scriptSig]);\n        this.ins[index].script = scriptSig;\n      }\n    }, {\n      key: \"setWitness\",\n      value: function setWitness(index, witness) {\n        v.parse(v.tuple([v.number(), v.array(types.BufferSchema)]), [index, witness]);\n        this.ins[index].witness = witness;\n      }\n    }, {\n      key: \"__toBuffer\",\n      value: function __toBuffer(buffer, initialOffset) {\n        var _ALLOW_WITNESS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (!buffer) buffer = new Uint8Array(this.byteLength(_ALLOW_WITNESS));\n        var bufferWriter = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferWriter)(buffer, initialOffset || 0);\n        bufferWriter.writeInt32(this.version);\n        var hasWitnesses = _ALLOW_WITNESS && this.hasWitnesses();\n        if (hasWitnesses) {\n          bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_MARKER);\n          bufferWriter.writeUInt8(Transaction.ADVANCED_TRANSACTION_FLAG);\n        }\n        bufferWriter.writeVarInt(this.ins.length);\n        this.ins.forEach(function (txIn) {\n          bufferWriter.writeSlice(txIn.hash);\n          bufferWriter.writeUInt32(txIn.index);\n          bufferWriter.writeVarSlice(txIn.script);\n          bufferWriter.writeUInt32(txIn.sequence);\n        });\n        bufferWriter.writeVarInt(this.outs.length);\n        this.outs.forEach(function (txOut) {\n          if (isOutput(txOut)) {\n            bufferWriter.writeInt64(txOut.value);\n          } else {\n            bufferWriter.writeSlice(txOut.valueBuffer);\n          }\n          bufferWriter.writeVarSlice(txOut.script);\n        });\n        if (hasWitnesses) {\n          this.ins.forEach(function (input) {\n            bufferWriter.writeVector(input.witness);\n          });\n        }\n        bufferWriter.writeUInt32(this.locktime);\n        // avoid slicing unless necessary\n        if (initialOffset !== undefined) return buffer.slice(initialOffset, bufferWriter.offset);\n        return buffer;\n      }\n    }], [{\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer, _NO_STRICT) {\n        var bufferReader = new (_$$_REQUIRE(_dependencyMap[7], \"./bufferutils.cjs\").BufferReader)(buffer);\n        var tx = new Transaction();\n        tx.version = bufferReader.readInt32();\n        var marker = bufferReader.readUInt8();\n        var flag = bufferReader.readUInt8();\n        var hasWitnesses = false;\n        if (marker === Transaction.ADVANCED_TRANSACTION_MARKER && flag === Transaction.ADVANCED_TRANSACTION_FLAG) {\n          hasWitnesses = true;\n        } else {\n          bufferReader.offset -= 2;\n        }\n        var vinLen = bufferReader.readVarInt();\n        for (var i = 0; i < vinLen; ++i) {\n          tx.ins.push({\n            hash: bufferReader.readSlice(32),\n            index: bufferReader.readUInt32(),\n            script: bufferReader.readVarSlice(),\n            sequence: bufferReader.readUInt32(),\n            witness: EMPTY_WITNESS\n          });\n        }\n        var voutLen = bufferReader.readVarInt();\n        for (var _i = 0; _i < voutLen; ++_i) {\n          tx.outs.push({\n            value: bufferReader.readInt64(),\n            script: bufferReader.readVarSlice()\n          });\n        }\n        if (hasWitnesses) {\n          for (var _i2 = 0; _i2 < vinLen; ++_i2) {\n            tx.ins[_i2].witness = bufferReader.readVector();\n          }\n          // was this pointless?\n          if (!tx.hasWitnesses()) throw new Error('Transaction has superfluous witness data');\n        }\n        tx.locktime = bufferReader.readUInt32();\n        if (_NO_STRICT) return tx;\n        if (bufferReader.offset !== buffer.length) throw new Error('Transaction has unexpected data');\n        return tx;\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(hex) {\n        return Transaction.fromBuffer(tools.fromHex(hex), false);\n      }\n    }, {\n      key: \"isCoinbaseHash\",\n      value: function isCoinbaseHash(buffer) {\n        v.parse(types.Hash256bitSchema, buffer);\n        for (var i = 0; i < 32; ++i) {\n          if (buffer[i] !== 0) return false;\n        }\n        return true;\n      }\n    }]);\n  }();\n  Transaction.DEFAULT_SEQUENCE = 0xffffffff;\n  Transaction.SIGHASH_DEFAULT = 0x00;\n  Transaction.SIGHASH_ALL = 0x01;\n  Transaction.SIGHASH_NONE = 0x02;\n  Transaction.SIGHASH_SINGLE = 0x03;\n  Transaction.SIGHASH_ANYONECANPAY = 0x80;\n  Transaction.SIGHASH_OUTPUT_MASK = 0x03;\n  Transaction.SIGHASH_INPUT_MASK = 0x80;\n  Transaction.ADVANCED_TRANSACTION_MARKER = 0x00;\n  Transaction.ADVANCED_TRANSACTION_FLAG = 0x01;\n  exports.Transaction = Transaction;\n});","lineCount":542,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0],[6,6,2,4,"__createBinding"],[6,21,2,19],[6,24,3,3],[6,28,3,7],[6,32,3,11],[6,36,3,15],[6,37,3,16,"__createBinding"],[6,52,3,31],[6,57,4,3,"Object"],[6,63,4,9],[6,64,4,10,"create"],[6,70,4,16],[6,73,5,6],[6,83,5,16,"o"],[6,84,5,17],[6,86,5,19,"m"],[6,87,5,20],[6,89,5,22,"k"],[6,90,5,23],[6,92,5,25,"k2"],[6,94,5,27],[6,96,5,29],[7,4,6,8],[7,8,6,12,"k2"],[7,10,6,14],[7,15,6,19,"undefined"],[7,24,6,28],[7,26,6,30,"k2"],[7,28,6,32],[7,31,6,35,"k"],[7,32,6,36],[8,4,7,8],[8,8,7,12,"desc"],[8,12,7,16],[8,15,7,19,"Object"],[8,21,7,25],[8,22,7,26,"getOwnPropertyDescriptor"],[8,46,7,50],[8,47,7,51,"m"],[8,48,7,52],[8,50,7,54,"k"],[8,51,7,55],[8,52,7,56],[9,4,8,8],[9,8,9,10],[9,9,9,11,"desc"],[9,13,9,15],[9,18,10,11],[9,23,10,16],[9,27,10,20,"desc"],[9,31,10,24],[9,34,10,27],[9,35,10,28,"m"],[9,36,10,29],[9,37,10,30,"__esModule"],[9,47,10,40],[9,50,10,43,"desc"],[9,54,10,47],[9,55,10,48,"writable"],[9,63,10,56],[9,67,10,60,"desc"],[9,71,10,64],[9,72,10,65,"configurable"],[9,84,10,77],[9,85,10,78],[9,87,11,10],[10,6,12,10,"desc"],[10,10,12,14],[10,13,12,17],[11,8,13,12,"enumerable"],[11,18,13,22],[11,20,13,24],[11,24,13,28],[12,8,14,12,"get"],[12,11,14,15],[12,13,14,17],[12,22,14,12,"get"],[12,25,14,15,"get"],[12,26,14,15],[12,28,14,29],[13,10,15,14],[13,17,15,21,"m"],[13,18,15,22],[13,19,15,23,"k"],[13,20,15,24],[13,21,15,25],[14,8,16,12],[15,6,17,10],[15,7,17,11],[16,4,18,8],[17,4,19,8,"Object"],[17,10,19,14],[17,11,19,15,"defineProperty"],[17,25,19,29],[17,26,19,30,"o"],[17,27,19,31],[17,29,19,33,"k2"],[17,31,19,35],[17,33,19,37,"desc"],[17,37,19,41],[17,38,19,42],[18,2,20,6],[18,3,20,7],[18,6,21,6],[18,16,21,16,"o"],[18,17,21,17],[18,19,21,19,"m"],[18,20,21,20],[18,22,21,22,"k"],[18,23,21,23],[18,25,21,25,"k2"],[18,27,21,27],[18,29,21,29],[19,4,22,8],[19,8,22,12,"k2"],[19,10,22,14],[19,15,22,19,"undefined"],[19,24,22,28],[19,26,22,30,"k2"],[19,28,22,32],[19,31,22,35,"k"],[19,32,22,36],[20,4,23,8,"o"],[20,5,23,9],[20,6,23,10,"k2"],[20,8,23,12],[20,9,23,13],[20,12,23,16,"m"],[20,13,23,17],[20,14,23,18,"k"],[20,15,23,19],[20,16,23,20],[21,2,24,6],[21,3,24,7],[21,4,24,8],[22,2,25,0],[22,6,25,4,"__setModuleDefault"],[22,24,25,22],[22,27,26,3],[22,31,26,7],[22,35,26,11],[22,39,26,15],[22,40,26,16,"__setModuleDefault"],[22,58,26,34],[22,63,27,3,"Object"],[22,69,27,9],[22,70,27,10,"create"],[22,76,27,16],[22,79,28,6],[22,89,28,16,"o"],[22,90,28,17],[22,92,28,19,"v"],[22,93,28,20],[22,95,28,22],[23,4,29,8,"Object"],[23,10,29,14],[23,11,29,15,"defineProperty"],[23,25,29,29],[23,26,29,30,"o"],[23,27,29,31],[23,29,29,33],[23,38,29,42],[23,40,29,44],[24,6,29,46,"enumerable"],[24,16,29,56],[24,18,29,58],[24,22,29,62],[25,6,29,64,"value"],[25,11,29,69],[25,13,29,71,"v"],[26,4,29,73],[26,5,29,74],[26,6,29,75],[27,2,30,6],[27,3,30,7],[27,6,31,6],[27,16,31,16,"o"],[27,17,31,17],[27,19,31,19,"v"],[27,20,31,20],[27,22,31,22],[28,4,32,8,"o"],[28,5,32,9],[28,6,32,10],[28,15,32,19],[28,16,32,20],[28,19,32,23,"v"],[28,20,32,24],[29,2,33,6],[29,3,33,7],[29,4,33,8],[30,2,34,0],[30,6,34,4,"__importStar"],[30,18,34,16],[30,21,35,3],[30,25,35,7],[30,29,35,11],[30,33,35,15],[30,34,35,16,"__importStar"],[30,46,35,28],[30,50,36,2],[30,60,36,12,"mod"],[30,63,36,15],[30,65,36,17],[31,4,37,4],[31,8,37,8,"mod"],[31,11,37,11],[31,15,37,15,"mod"],[31,18,37,18],[31,19,37,19,"__esModule"],[31,29,37,29],[31,31,37,31],[31,38,37,38,"mod"],[31,41,37,41],[32,4,38,4],[32,8,38,8,"result"],[32,14,38,14],[32,17,38,17],[32,18,38,18],[32,19,38,19],[33,4,39,4],[33,8,39,8,"mod"],[33,11,39,11],[33,15,39,15],[33,19,39,19],[33,21,40,6],[33,26,40,11],[33,30,40,15,"k"],[33,31,40,16],[33,35,40,20,"mod"],[33,38,40,23],[33,40,41,8],[33,44,41,12,"k"],[33,45,41,13],[33,50,41,18],[33,59,41,27],[33,63,41,31,"Object"],[33,69,41,37],[33,70,41,38,"prototype"],[33,79,41,47],[33,80,41,48,"hasOwnProperty"],[33,94,41,62],[33,95,41,63,"call"],[33,99,41,67],[33,100,41,68,"mod"],[33,103,41,71],[33,105,41,73,"k"],[33,106,41,74],[33,107,41,75],[33,109,42,10,"__createBinding"],[33,124,42,25],[33,125,42,26,"result"],[33,131,42,32],[33,133,42,34,"mod"],[33,136,42,37],[33,138,42,39,"k"],[33,139,42,40],[33,140,42,41],[34,4,43,4,"__setModuleDefault"],[34,22,43,22],[34,23,43,23,"result"],[34,29,43,29],[34,31,43,31,"mod"],[34,34,43,34],[34,35,43,35],[35,4,44,4],[35,11,44,11,"result"],[35,17,44,17],[36,2,45,2],[36,3,45,3],[37,2,46,0,"Object"],[37,8,46,6],[37,9,46,7,"defineProperty"],[37,23,46,21],[37,24,46,22,"exports"],[37,31,46,29],[37,33,46,31],[37,45,46,43],[37,47,46,45],[38,4,46,47,"value"],[38,9,46,52],[38,11,46,54],[39,2,46,59],[39,3,46,60],[39,4,46,61],[40,2,47,0,"exports"],[40,9,47,7],[40,10,47,8,"Transaction"],[40,21,47,19],[40,24,47,22],[40,29,47,27],[40,30,47,28],[41,2,49,0],[41,6,49,6,"bcrypto"],[41,13,49,13],[41,16,49,16,"__importStar"],[41,28,49,28],[41,29,49,29,"require"],[41,40,49,36],[41,41,49,36,"_dependencyMap"],[41,55,49,36],[41,74,49,51],[41,75,49,52],[41,76,49,53],[42,2,51,0],[42,6,51,6,"bscript"],[42,13,51,13],[42,16,51,16,"__importStar"],[42,28,51,28],[42,29,51,29,"require"],[42,40,51,36],[42,41,51,36,"_dependencyMap"],[42,55,51,36],[42,74,51,51],[42,75,51,52],[42,76,51,53],[43,2,53,0],[43,6,53,6,"types"],[43,11,53,11],[43,14,53,14,"__importStar"],[43,26,53,26],[43,27,53,27,"require"],[43,38,53,34],[43,39,53,34,"_dependencyMap"],[43,53,53,34],[43,71,53,48],[43,72,53,49],[43,73,53,50],[44,2,54,0],[44,6,54,6,"tools"],[44,11,54,11],[44,14,54,14,"__importStar"],[44,26,54,26],[44,27,54,27,"require"],[44,38,54,34],[44,39,54,34,"_dependencyMap"],[44,53,54,34],[44,76,54,53],[44,77,54,54],[44,78,54,55],[45,2,55,0],[45,6,55,6,"v"],[45,7,55,7],[45,10,55,10,"__importStar"],[45,22,55,22],[45,23,55,23,"require"],[45,34,55,30],[45,35,55,30,"_dependencyMap"],[45,49,55,30],[45,63,55,40],[45,64,55,41],[45,65,55,42],[46,2,56,0],[46,11,56,9,"varSliceSize"],[46,23,56,21,"varSliceSize"],[46,24,56,22,"someScript"],[46,34,56,32],[46,36,56,34],[47,4,57,2],[47,8,57,8,"length"],[47,14,57,14],[47,17,57,17,"someScript"],[47,27,57,27],[47,28,57,28,"length"],[47,34,57,34],[48,4,58,2],[48,11,58,9,"_$$_REQUIRE"],[48,22,58,9],[48,23,58,9,"_dependencyMap"],[48,37,58,9],[48,63,58,26,"varuint"],[48,70,58,33],[48,71,58,34,"encodingLength"],[48,85,58,48],[48,86,58,49,"length"],[48,92,58,55],[48,93,58,56],[48,96,58,59,"length"],[48,102,58,65],[49,2,59,0],[50,2,60,0],[50,11,60,9,"vectorSize"],[50,21,60,19,"vectorSize"],[50,22,60,20,"someVector"],[50,32,60,30],[50,34,60,32],[51,4,61,2],[51,8,61,8,"length"],[51,14,61,14],[51,17,61,17,"someVector"],[51,27,61,27],[51,28,61,28,"length"],[51,34,61,34],[52,4,62,2],[52,11,63,4,"_$$_REQUIRE"],[52,22,63,4],[52,23,63,4,"_dependencyMap"],[52,37,63,4],[52,63,63,21,"varuint"],[52,70,63,28],[52,71,63,29,"encodingLength"],[52,85,63,43],[52,86,63,44,"length"],[52,92,63,50],[52,93,63,51],[52,96,64,4,"someVector"],[52,106,64,14],[52,107,64,15,"reduce"],[52,113,64,21],[52,114,64,22],[52,124,64,23,"sum"],[52,127,64,26],[52,129,64,28,"witness"],[52,136,64,35],[52,138,64,40],[53,6,65,6],[53,13,65,13,"sum"],[53,16,65,16],[53,19,65,19,"varSliceSize"],[53,31,65,31],[53,32,65,32,"witness"],[53,39,65,39],[53,40,65,40],[54,4,66,4],[54,5,66,5],[54,7,66,7],[54,8,66,8],[54,9,66,9],[55,2,68,0],[56,2,69,0],[56,6,69,6,"EMPTY_BUFFER"],[56,18,69,18],[56,21,69,21],[56,25,69,25,"Uint8Array"],[56,35,69,35],[56,36,69,36],[56,37,69,37],[56,38,69,38],[57,2,70,0],[57,6,70,6,"EMPTY_WITNESS"],[57,19,70,19],[57,22,70,22],[57,24,70,24],[58,2,71,0],[58,6,71,6,"ZERO"],[58,10,71,10],[58,13,71,13,"tools"],[58,18,71,18],[58,19,71,19,"fromHex"],[58,26,71,26],[58,27,72,2],[58,93,73,0],[58,94,73,1],[59,2,74,0],[59,6,74,6,"ONE"],[59,9,74,9],[59,12,74,12,"tools"],[59,17,74,17],[59,18,74,18,"fromHex"],[59,25,74,25],[59,26,75,2],[59,92,76,0],[59,93,76,1],[60,2,77,0],[60,6,77,6,"VALUE_UINT64_MAX"],[60,22,77,22],[60,25,77,25,"tools"],[60,30,77,30],[60,31,77,31,"fromHex"],[60,38,77,38],[60,39,77,39],[60,57,77,57],[60,58,77,58],[61,2,78,0],[61,6,78,6,"BLANK_OUTPUT"],[61,18,78,18],[61,21,78,21],[62,4,79,2,"script"],[62,10,79,8],[62,12,79,10,"EMPTY_BUFFER"],[62,24,79,22],[63,4,80,2,"valueBuffer"],[63,15,80,13],[63,17,80,15,"VALUE_UINT64_MAX"],[64,2,81,0],[64,3,81,1],[65,2,82,0],[65,11,82,9,"isOutput"],[65,19,82,17,"isOutput"],[65,20,82,18,"out"],[65,23,82,21],[65,25,82,23],[66,4,83,2],[66,11,83,9,"out"],[66,14,83,12],[66,15,83,13,"value"],[66,20,83,18],[66,25,83,23,"undefined"],[66,34,83,32],[67,2,84,0],[68,2,85,0],[69,0,86,0],[70,0,87,0],[71,2,85,0],[71,6,88,6,"Transaction"],[71,17,88,17],[72,4,88,17],[72,13,88,17,"Transaction"],[72,25,88,17],[73,6,88,17,"_classCallCheck"],[73,21,88,17],[73,28,88,17,"Transaction"],[73,39,88,17],[74,6,88,17],[74,11,155,2,"version"],[74,18,155,9],[74,21,155,12],[74,22,155,13],[75,6,155,13],[75,11,156,2,"locktime"],[75,19,156,10],[75,22,156,13],[75,23,156,14],[76,6,156,14],[76,11,157,2,"ins"],[76,14,157,5],[76,17,157,8],[76,19,157,10],[77,6,157,10],[77,11,158,2,"outs"],[77,15,158,6],[77,18,158,9],[77,20,158,11],[78,4,158,11],[79,4,158,11],[79,11,158,11,"_createClass"],[79,23,158,11],[79,24,158,11,"Transaction"],[79,35,158,11],[80,6,158,11,"key"],[80,9,158,11],[81,6,158,11,"value"],[81,11,158,11],[81,13,159,2],[81,22,159,2,"isCoinbase"],[81,32,159,12,"isCoinbase"],[81,33,159,12],[81,35,159,15],[82,8,160,4],[82,15,161,6],[82,19,161,10],[82,20,161,11,"ins"],[82,23,161,14],[82,24,161,15,"length"],[82,30,161,21],[82,35,161,26],[82,36,161,27],[82,40,161,31,"Transaction"],[82,51,161,42],[82,52,161,43,"isCoinbaseHash"],[82,66,161,57],[82,67,161,58],[82,71,161,62],[82,72,161,63,"ins"],[82,75,161,66],[82,76,161,67],[82,77,161,68],[82,78,161,69],[82,79,161,70,"hash"],[82,83,161,74],[82,84,161,75],[83,6,163,2],[84,4,163,3],[85,6,163,3,"key"],[85,9,163,3],[86,6,163,3,"value"],[86,11,163,3],[86,13,164,2],[86,22,164,2,"addInput"],[86,30,164,10,"addInput"],[86,31,164,11,"hash"],[86,35,164,15],[86,37,164,17,"index"],[86,42,164,22],[86,44,164,24,"sequence"],[86,52,164,32],[86,54,164,34,"scriptSig"],[86,63,164,43],[86,65,164,45],[87,8,165,4,"v"],[87,9,165,5],[87,10,165,6,"parse"],[87,15,165,11],[87,16,166,6,"v"],[87,17,166,7],[87,18,166,8,"tuple"],[87,23,166,13],[87,24,166,14],[87,25,167,8,"types"],[87,30,167,13],[87,31,167,14,"Hash256bitSchema"],[87,47,167,30],[87,49,168,8,"types"],[87,54,168,13],[87,55,168,14,"UInt32Schema"],[87,67,168,26],[87,69,169,8,"v"],[87,70,169,9],[87,71,169,10,"nullable"],[87,79,169,18],[87,80,169,19,"v"],[87,81,169,20],[87,82,169,21,"optional"],[87,90,169,29],[87,91,169,30,"types"],[87,96,169,35],[87,97,169,36,"UInt32Schema"],[87,109,169,48],[87,110,169,49],[87,111,169,50],[87,113,170,8,"v"],[87,114,170,9],[87,115,170,10,"nullable"],[87,123,170,18],[87,124,170,19,"v"],[87,125,170,20],[87,126,170,21,"optional"],[87,134,170,29],[87,135,170,30,"types"],[87,140,170,35],[87,141,170,36,"BufferSchema"],[87,153,170,48],[87,154,170,49],[87,155,170,50],[87,156,171,7],[87,157,171,8],[87,159,172,6],[87,160,172,7,"hash"],[87,164,172,11],[87,166,172,13,"index"],[87,171,172,18],[87,173,172,20,"sequence"],[87,181,172,28],[87,183,172,30,"scriptSig"],[87,192,172,39],[87,193,173,4],[87,194,173,5],[88,8,174,4],[88,12,174,8,"sequence"],[88,20,174,16],[88,25,174,21,"undefined"],[88,34,174,30],[88,38,174,34,"sequence"],[88,46,174,42],[88,51,174,47],[88,55,174,51],[88,57,174,53],[89,10,175,6,"sequence"],[89,18,175,14],[89,21,175,17,"Transaction"],[89,32,175,28],[89,33,175,29,"DEFAULT_SEQUENCE"],[89,49,175,45],[90,8,176,4],[91,8,177,4],[92,8,178,4],[92,15,179,6],[92,19,179,10],[92,20,179,11,"ins"],[92,23,179,14],[92,24,179,15,"push"],[92,28,179,19],[92,29,179,20],[93,10,180,8,"hash"],[93,14,180,12],[93,16,180,8,"hash"],[93,20,180,12],[94,10,181,8,"index"],[94,15,181,13],[94,17,181,8,"index"],[94,22,181,13],[95,10,182,8,"script"],[95,16,182,14],[95,18,182,16,"scriptSig"],[95,27,182,25],[95,31,182,29,"EMPTY_BUFFER"],[95,43,182,41],[96,10,183,8,"sequence"],[96,18,183,16],[96,20,183,18,"sequence"],[96,28,183,26],[97,10,184,8,"witness"],[97,17,184,15],[97,19,184,17,"EMPTY_WITNESS"],[98,8,185,6],[98,9,185,7],[98,10,185,8],[98,13,185,11],[98,14,185,12],[99,6,187,2],[100,4,187,3],[101,6,187,3,"key"],[101,9,187,3],[102,6,187,3,"value"],[102,11,187,3],[102,13,188,2],[102,22,188,2,"addOutput"],[102,31,188,11,"addOutput"],[102,32,188,12,"scriptPubKey"],[102,44,188,24],[102,46,188,26,"value"],[102,51,188,31],[102,53,188,33],[103,8,189,4,"v"],[103,9,189,5],[103,10,189,6,"parse"],[103,15,189,11],[103,16,189,12,"v"],[103,17,189,13],[103,18,189,14,"tuple"],[103,23,189,19],[103,24,189,20],[103,25,189,21,"types"],[103,30,189,26],[103,31,189,27,"BufferSchema"],[103,43,189,39],[103,45,189,41,"types"],[103,50,189,46],[103,51,189,47,"SatoshiSchema"],[103,64,189,60],[103,65,189,61],[103,66,189,62],[103,68,189,64],[103,69,190,6,"scriptPubKey"],[103,81,190,18],[103,83,191,6,"value"],[103,88,191,11],[103,89,192,5],[103,90,192,6],[104,8,193,4],[105,8,194,4],[105,15,195,6],[105,19,195,10],[105,20,195,11,"outs"],[105,24,195,15],[105,25,195,16,"push"],[105,29,195,20],[105,30,195,21],[106,10,196,8,"script"],[106,16,196,14],[106,18,196,16,"scriptPubKey"],[106,30,196,28],[107,10,197,8,"value"],[107,15,197,13],[107,17,197,8,"value"],[108,8,198,6],[108,9,198,7],[108,10,198,8],[108,13,198,11],[108,14,198,12],[109,6,200,2],[110,4,200,3],[111,6,200,3,"key"],[111,9,200,3],[112,6,200,3,"value"],[112,11,200,3],[112,13,201,2],[112,22,201,2,"hasWitnesses"],[112,34,201,14,"hasWitnesses"],[112,35,201,14],[112,37,201,17],[113,8,202,4],[113,15,202,11],[113,19,202,15],[113,20,202,16,"ins"],[113,23,202,19],[113,24,202,20,"some"],[113,28,202,24],[113,29,202,25],[113,39,202,25,"x"],[113,40,202,26],[113,42,202,30],[114,10,203,6],[114,17,203,13,"x"],[114,18,203,14],[114,19,203,15,"witness"],[114,26,203,22],[114,27,203,23,"length"],[114,33,203,29],[114,38,203,34],[114,39,203,35],[115,8,204,4],[115,9,204,5],[115,10,204,6],[116,6,205,2],[117,4,205,3],[118,6,205,3,"key"],[118,9,205,3],[119,6,205,3,"value"],[119,11,205,3],[119,13,206,2],[119,22,206,2,"weight"],[119,28,206,8,"weight"],[119,29,206,8],[119,31,206,11],[120,8,207,4],[120,12,207,10,"base"],[120,16,207,14],[120,19,207,17],[120,23,207,21],[120,24,207,22,"byteLength"],[120,34,207,32],[120,35,207,33],[120,40,207,38],[120,41,207,39],[121,8,208,4],[121,12,208,10,"total"],[121,17,208,15],[121,20,208,18],[121,24,208,22],[121,25,208,23,"byteLength"],[121,35,208,33],[121,36,208,34],[121,40,208,38],[121,41,208,39],[122,8,209,4],[122,15,209,11,"base"],[122,19,209,15],[122,22,209,18],[122,23,209,19],[122,26,209,22,"total"],[122,31,209,27],[123,6,210,2],[124,4,210,3],[125,6,210,3,"key"],[125,9,210,3],[126,6,210,3,"value"],[126,11,210,3],[126,13,211,2],[126,22,211,2,"virtualSize"],[126,33,211,13,"virtualSize"],[126,34,211,13],[126,36,211,16],[127,8,212,4],[127,15,212,11,"Math"],[127,19,212,15],[127,20,212,16,"ceil"],[127,24,212,20],[127,25,212,21],[127,29,212,25],[127,30,212,26,"weight"],[127,36,212,32],[127,37,212,33],[127,38,212,34],[127,41,212,37],[127,42,212,38],[127,43,212,39],[128,6,213,2],[129,4,213,3],[130,6,213,3,"key"],[130,9,213,3],[131,6,213,3,"value"],[131,11,213,3],[131,13,214,2],[131,22,214,2,"byteLength"],[131,32,214,12,"byteLength"],[131,33,214,12],[131,35,214,36],[132,8,214,36],[132,12,214,13,"_ALLOW_WITNESS"],[132,26,214,27],[132,29,214,27,"arguments"],[132,38,214,27],[132,39,214,27,"length"],[132,45,214,27],[132,53,214,27,"arguments"],[132,62,214,27],[132,70,214,27,"undefined"],[132,79,214,27],[132,82,214,27,"arguments"],[132,91,214,27],[132,97,214,30],[132,101,214,34],[133,8,215,4],[133,12,215,10,"hasWitnesses"],[133,24,215,22],[133,27,215,25,"_ALLOW_WITNESS"],[133,41,215,39],[133,45,215,43],[133,49,215,47],[133,50,215,48,"hasWitnesses"],[133,62,215,60],[133,63,215,61],[133,64,215,62],[134,8,216,4],[134,15,217,6],[134,16,217,7,"hasWitnesses"],[134,28,217,19],[134,31,217,22],[134,33,217,24],[134,36,217,27],[134,37,217,28],[134,41,218,6,"_$$_REQUIRE"],[134,52,218,6],[134,53,218,6,"_dependencyMap"],[134,67,218,6],[134,93,218,23,"varuint"],[134,100,218,30],[134,101,218,31,"encodingLength"],[134,115,218,45],[134,116,218,46],[134,120,218,50],[134,121,218,51,"ins"],[134,124,218,54],[134,125,218,55,"length"],[134,131,218,61],[134,132,218,62],[134,135,219,6,"_$$_REQUIRE"],[134,146,219,6],[134,147,219,6,"_dependencyMap"],[134,161,219,6],[134,187,219,23,"varuint"],[134,194,219,30],[134,195,219,31,"encodingLength"],[134,209,219,45],[134,210,219,46],[134,214,219,50],[134,215,219,51,"outs"],[134,219,219,55],[134,220,219,56,"length"],[134,226,219,62],[134,227,219,63],[134,230,220,6],[134,234,220,10],[134,235,220,11,"ins"],[134,238,220,14],[134,239,220,15,"reduce"],[134,245,220,21],[134,246,220,22],[134,256,220,23,"sum"],[134,259,220,26],[134,261,220,28,"input"],[134,266,220,33],[134,268,220,38],[135,10,221,8],[135,17,221,15,"sum"],[135,20,221,18],[135,23,221,21],[135,25,221,23],[135,28,221,26,"varSliceSize"],[135,40,221,38],[135,41,221,39,"input"],[135,46,221,44],[135,47,221,45,"script"],[135,53,221,51],[135,54,221,52],[136,8,222,6],[136,9,222,7],[136,11,222,9],[136,12,222,10],[136,13,222,11],[136,16,223,6],[136,20,223,10],[136,21,223,11,"outs"],[136,25,223,15],[136,26,223,16,"reduce"],[136,32,223,22],[136,33,223,23],[136,43,223,24,"sum"],[136,46,223,27],[136,48,223,29,"output"],[136,54,223,35],[136,56,223,40],[137,10,224,8],[137,17,224,15,"sum"],[137,20,224,18],[137,23,224,21],[137,24,224,22],[137,27,224,25,"varSliceSize"],[137,39,224,37],[137,40,224,38,"output"],[137,46,224,44],[137,47,224,45,"script"],[137,53,224,51],[137,54,224,52],[138,8,225,6],[138,9,225,7],[138,11,225,9],[138,12,225,10],[138,13,225,11],[138,17,226,7,"hasWitnesses"],[138,29,226,19],[138,32,227,10],[138,36,227,14],[138,37,227,15,"ins"],[138,40,227,18],[138,41,227,19,"reduce"],[138,47,227,25],[138,48,227,26],[138,58,227,27,"sum"],[138,61,227,30],[138,63,227,32,"input"],[138,68,227,37],[138,70,227,42],[139,10,228,12],[139,17,228,19,"sum"],[139,20,228,22],[139,23,228,25,"vectorSize"],[139,33,228,35],[139,34,228,36,"input"],[139,39,228,41],[139,40,228,42,"witness"],[139,47,228,49],[139,48,228,50],[140,8,229,10],[140,9,229,11],[140,11,229,13],[140,12,229,14],[140,13,229,15],[140,16,230,10],[140,17,230,11],[140,18,230,12],[141,6,232,2],[142,4,232,3],[143,6,232,3,"key"],[143,9,232,3],[144,6,232,3,"value"],[144,11,232,3],[144,13,233,2],[144,22,233,2,"clone"],[144,27,233,7,"clone"],[144,28,233,7],[144,30,233,10],[145,8,234,4],[145,12,234,10,"newTx"],[145,17,234,15],[145,20,234,18],[145,24,234,22,"Transaction"],[145,35,234,33],[145,36,234,34],[145,37,234,35],[146,8,235,4,"newTx"],[146,13,235,9],[146,14,235,10,"version"],[146,21,235,17],[146,24,235,20],[146,28,235,24],[146,29,235,25,"version"],[146,36,235,32],[147,8,236,4,"newTx"],[147,13,236,9],[147,14,236,10,"locktime"],[147,22,236,18],[147,25,236,21],[147,29,236,25],[147,30,236,26,"locktime"],[147,38,236,34],[148,8,237,4,"newTx"],[148,13,237,9],[148,14,237,10,"ins"],[148,17,237,13],[148,20,237,16],[148,24,237,20],[148,25,237,21,"ins"],[148,28,237,24],[148,29,237,25,"map"],[148,32,237,28],[148,33,237,29],[148,43,237,29,"txIn"],[148,47,237,33],[148,49,237,37],[149,10,238,6],[149,17,238,13],[150,12,239,8,"hash"],[150,16,239,12],[150,18,239,14,"txIn"],[150,22,239,18],[150,23,239,19,"hash"],[150,27,239,23],[151,12,240,8,"index"],[151,17,240,13],[151,19,240,15,"txIn"],[151,23,240,19],[151,24,240,20,"index"],[151,29,240,25],[152,12,241,8,"script"],[152,18,241,14],[152,20,241,16,"txIn"],[152,24,241,20],[152,25,241,21,"script"],[152,31,241,27],[153,12,242,8,"sequence"],[153,20,242,16],[153,22,242,18,"txIn"],[153,26,242,22],[153,27,242,23,"sequence"],[153,35,242,31],[154,12,243,8,"witness"],[154,19,243,15],[154,21,243,17,"txIn"],[154,25,243,21],[154,26,243,22,"witness"],[155,10,244,6],[155,11,244,7],[156,8,245,4],[156,9,245,5],[156,10,245,6],[157,8,246,4,"newTx"],[157,13,246,9],[157,14,246,10,"outs"],[157,18,246,14],[157,21,246,17],[157,25,246,21],[157,26,246,22,"outs"],[157,30,246,26],[157,31,246,27,"map"],[157,34,246,30],[157,35,246,31],[157,45,246,31,"txOut"],[157,50,246,36],[157,52,246,40],[158,10,247,6],[158,17,247,13],[159,12,248,8,"script"],[159,18,248,14],[159,20,248,16,"txOut"],[159,25,248,21],[159,26,248,22,"script"],[159,32,248,28],[160,12,249,8,"value"],[160,17,249,13],[160,19,249,15,"txOut"],[160,24,249,20],[160,25,249,21,"value"],[161,10,250,6],[161,11,250,7],[162,8,251,4],[162,9,251,5],[162,10,251,6],[163,8,252,4],[163,15,252,11,"newTx"],[163,20,252,16],[164,6,253,2],[165,6,254,2],[166,0,255,0],[167,0,256,0],[168,0,257,0],[169,0,258,0],[170,0,259,0],[171,0,260,0],[172,0,261,0],[173,4,254,2],[174,6,254,2,"key"],[174,9,254,2],[175,6,254,2,"value"],[175,11,254,2],[175,13,262,2],[175,22,262,2,"hashForSignature"],[175,38,262,18,"hashForSignature"],[175,39,262,19,"inIndex"],[175,46,262,26],[175,48,262,28,"prevOutScript"],[175,61,262,41],[175,63,262,43,"hashType"],[175,71,262,51],[175,73,262,53],[176,8,263,4,"v"],[176,9,263,5],[176,10,263,6,"parse"],[176,15,263,11],[176,16,263,12,"v"],[176,17,263,13],[176,18,263,14,"tuple"],[176,23,263,19],[176,24,263,20],[176,25,263,21,"types"],[176,30,263,26],[176,31,263,27,"UInt32Schema"],[176,43,263,39],[176,45,263,41,"types"],[176,50,263,46],[176,51,263,47,"BufferSchema"],[176,63,263,59],[176,65,263,61,"v"],[176,66,263,62],[176,67,263,63,"number"],[176,73,263,69],[176,74,263,70],[176,75,263,71],[176,76,263,72],[176,77,263,73],[176,79,263,75],[176,80,264,6,"inIndex"],[176,87,264,13],[176,89,265,6,"prevOutScript"],[176,102,265,19],[176,104,266,6,"hashType"],[176,112,266,14],[176,113,267,5],[176,114,267,6],[177,8,268,4],[178,8,269,4],[178,12,269,8,"inIndex"],[178,19,269,15],[178,23,269,19],[178,27,269,23],[178,28,269,24,"ins"],[178,31,269,27],[178,32,269,28,"length"],[178,38,269,34],[178,40,269,36],[178,47,269,43,"ONE"],[178,50,269,46],[179,8,270,4],[180,8,271,4],[180,12,271,10,"ourScript"],[180,21,271,19],[180,24,271,22,"bscript"],[180,31,271,29],[180,32,271,30,"compile"],[180,39,271,37],[180,40,272,6,"bscript"],[180,47,272,13],[180,48,272,14,"decompile"],[180,57,272,23],[180,58,272,24,"prevOutScript"],[180,71,272,37],[180,72,272,38],[180,73,272,39,"filter"],[180,79,272,45],[180,80,272,46],[180,90,272,46,"x"],[180,91,272,47],[180,93,272,51],[181,10,273,8],[181,17,273,15,"x"],[181,18,273,16],[181,23,273,21,"_$$_REQUIRE"],[181,34,273,21],[181,35,273,21,"_dependencyMap"],[181,49,273,21],[181,70,273,33,"OPS"],[181,73,273,36],[181,74,273,37,"OP_CODESEPARATOR"],[181,90,273,53],[182,8,274,6],[182,9,274,7],[182,10,275,4],[182,11,275,5],[183,8,276,4],[183,12,276,10,"txTmp"],[183,17,276,15],[183,20,276,18],[183,24,276,22],[183,25,276,23,"clone"],[183,30,276,28],[183,31,276,29],[183,32,276,30],[184,8,277,4],[185,8,278,4],[185,12,278,8],[185,13,278,9,"hashType"],[185,21,278,17],[185,24,278,20],[185,28,278,24],[185,34,278,30,"Transaction"],[185,45,278,41],[185,46,278,42,"SIGHASH_NONE"],[185,58,278,54],[185,60,278,56],[186,10,279,6,"txTmp"],[186,15,279,11],[186,16,279,12,"outs"],[186,20,279,16],[186,23,279,19],[186,25,279,21],[187,10,280,6],[188,10,281,6,"txTmp"],[188,15,281,11],[188,16,281,12,"ins"],[188,19,281,15],[188,20,281,16,"forEach"],[188,27,281,23],[188,28,281,24],[188,38,281,25,"input"],[188,43,281,30],[188,45,281,32,"i"],[188,46,281,33],[188,48,281,38],[189,12,282,8],[189,16,282,12,"i"],[189,17,282,13],[189,22,282,18,"inIndex"],[189,29,282,25],[189,31,282,27],[190,12,283,8,"input"],[190,17,283,13],[190,18,283,14,"sequence"],[190,26,283,22],[190,29,283,25],[190,30,283,26],[191,10,284,6],[191,11,284,7],[191,12,284,8],[192,10,285,6],[193,8,286,4],[193,9,286,5],[193,15,286,11],[193,19,286,15],[193,20,286,16,"hashType"],[193,28,286,24],[193,31,286,27],[193,35,286,31],[193,41,286,37,"Transaction"],[193,52,286,48],[193,53,286,49,"SIGHASH_SINGLE"],[193,67,286,63],[193,69,286,65],[194,10,287,6],[195,10,288,6],[195,14,288,10,"inIndex"],[195,21,288,17],[195,25,288,21],[195,29,288,25],[195,30,288,26,"outs"],[195,34,288,30],[195,35,288,31,"length"],[195,41,288,37],[195,43,288,39],[195,50,288,46,"ONE"],[195,53,288,49],[196,10,289,6],[197,10,290,6,"txTmp"],[197,15,290,11],[197,16,290,12,"outs"],[197,20,290,16],[197,21,290,17,"length"],[197,27,290,23],[197,30,290,26,"inIndex"],[197,37,290,33],[197,40,290,36],[197,41,290,37],[198,10,291,6],[199,10,292,6],[199,15,292,11],[199,19,292,15,"i"],[199,20,292,16],[199,23,292,19],[199,24,292,20],[199,26,292,22,"i"],[199,27,292,23],[199,30,292,26,"inIndex"],[199,37,292,33],[199,39,292,35,"i"],[199,40,292,36],[199,42,292,38],[199,44,292,40],[200,12,293,8,"txTmp"],[200,17,293,13],[200,18,293,14,"outs"],[200,22,293,18],[200,23,293,19,"i"],[200,24,293,20],[200,25,293,21],[200,28,293,24,"BLANK_OUTPUT"],[200,40,293,36],[201,10,294,6],[202,10,295,6],[203,10,296,6,"txTmp"],[203,15,296,11],[203,16,296,12,"ins"],[203,19,296,15],[203,20,296,16,"forEach"],[203,27,296,23],[203,28,296,24],[203,38,296,25,"input"],[203,43,296,30],[203,45,296,32,"y"],[203,46,296,33],[203,48,296,38],[204,12,297,8],[204,16,297,12,"y"],[204,17,297,13],[204,22,297,18,"inIndex"],[204,29,297,25],[204,31,297,27],[205,12,298,8,"input"],[205,17,298,13],[205,18,298,14,"sequence"],[205,26,298,22],[205,29,298,25],[205,30,298,26],[206,10,299,6],[206,11,299,7],[206,12,299,8],[207,8,300,4],[208,8,301,4],[209,8,302,4],[209,12,302,8,"hashType"],[209,20,302,16],[209,23,302,19,"Transaction"],[209,34,302,30],[209,35,302,31,"SIGHASH_ANYONECANPAY"],[209,55,302,51],[209,57,302,53],[210,10,303,6,"txTmp"],[210,15,303,11],[210,16,303,12,"ins"],[210,19,303,15],[210,22,303,18],[210,23,303,19,"txTmp"],[210,28,303,24],[210,29,303,25,"ins"],[210,32,303,28],[210,33,303,29,"inIndex"],[210,40,303,36],[210,41,303,37],[210,42,303,38],[211,10,304,6,"txTmp"],[211,15,304,11],[211,16,304,12,"ins"],[211,19,304,15],[211,20,304,16],[211,21,304,17],[211,22,304,18],[211,23,304,19,"script"],[211,29,304,25],[211,32,304,28,"ourScript"],[211,41,304,37],[212,10,305,6],[213,8,306,4],[213,9,306,5],[213,15,306,11],[214,10,307,6],[215,10,308,6,"txTmp"],[215,15,308,11],[215,16,308,12,"ins"],[215,19,308,15],[215,20,308,16,"forEach"],[215,27,308,23],[215,28,308,24],[215,38,308,24,"input"],[215,43,308,29],[215,45,308,33],[216,12,309,8,"input"],[216,17,309,13],[216,18,309,14,"script"],[216,24,309,20],[216,27,309,23,"EMPTY_BUFFER"],[216,39,309,35],[217,10,310,6],[217,11,310,7],[217,12,310,8],[218,10,311,6,"txTmp"],[218,15,311,11],[218,16,311,12,"ins"],[218,19,311,15],[218,20,311,16,"inIndex"],[218,27,311,23],[218,28,311,24],[218,29,311,25,"script"],[218,35,311,31],[218,38,311,34,"ourScript"],[218,47,311,43],[219,8,312,4],[220,8,313,4],[221,8,314,4],[221,12,314,10,"buffer"],[221,18,314,16],[221,21,314,19],[221,25,314,23,"Uint8Array"],[221,35,314,33],[221,36,314,34,"txTmp"],[221,41,314,39],[221,42,314,40,"byteLength"],[221,52,314,50],[221,53,314,51],[221,58,314,56],[221,59,314,57],[221,62,314,60],[221,63,314,61],[221,64,314,62],[222,8,315,4,"tools"],[222,13,315,9],[222,14,315,10,"writeInt32"],[222,24,315,20],[222,25,315,21,"buffer"],[222,31,315,27],[222,33,315,29,"buffer"],[222,39,315,35],[222,40,315,36,"length"],[222,46,315,42],[222,49,315,45],[222,50,315,46],[222,52,315,48,"hashType"],[222,60,315,56],[222,62,315,58],[222,66,315,62],[222,67,315,63],[223,8,316,4,"txTmp"],[223,13,316,9],[223,14,316,10,"__toBuffer"],[223,24,316,20],[223,25,316,21,"buffer"],[223,31,316,27],[223,33,316,29],[223,34,316,30],[223,36,316,32],[223,41,316,37],[223,42,316,38],[224,8,317,4],[224,15,317,11,"bcrypto"],[224,22,317,18],[224,23,317,19,"hash256"],[224,30,317,26],[224,31,317,27,"buffer"],[224,37,317,33],[224,38,317,34],[225,6,318,2],[226,4,318,3],[227,6,318,3,"key"],[227,9,318,3],[228,6,318,3,"value"],[228,11,318,3],[228,13,319,2],[228,22,319,2,"hashForWitnessV1"],[228,38,319,18,"hashForWitnessV1"],[228,39,319,19,"inIndex"],[228,46,319,26],[228,48,319,28,"prevOutScripts"],[228,62,319,42],[228,64,319,44,"values"],[228,70,319,50],[228,72,319,52,"hashType"],[228,80,319,60],[228,82,319,62,"leafHash"],[228,90,319,70],[228,92,319,72,"annex"],[228,97,319,77],[228,99,319,79],[229,8,320,4],[230,8,321,4,"v"],[230,9,321,5],[230,10,321,6,"parse"],[230,15,321,11],[230,16,322,6,"v"],[230,17,322,7],[230,18,322,8,"tuple"],[230,23,322,13],[230,24,322,14],[230,25,323,8,"types"],[230,30,323,13],[230,31,323,14,"UInt32Schema"],[230,43,323,26],[230,45,324,8,"v"],[230,46,324,9],[230,47,324,10,"array"],[230,52,324,15],[230,53,324,16,"types"],[230,58,324,21],[230,59,324,22,"BufferSchema"],[230,71,324,34],[230,72,324,35],[230,74,325,8,"v"],[230,75,325,9],[230,76,325,10,"array"],[230,81,325,15],[230,82,325,16,"types"],[230,87,325,21],[230,88,325,22,"SatoshiSchema"],[230,101,325,35],[230,102,325,36],[230,104,326,8,"types"],[230,109,326,13],[230,110,326,14,"UInt32Schema"],[230,122,326,26],[230,123,327,7],[230,124,327,8],[230,126,328,6],[230,127,328,7,"inIndex"],[230,134,328,14],[230,136,328,16,"prevOutScripts"],[230,150,328,30],[230,152,328,32,"values"],[230,158,328,38],[230,160,328,40,"hashType"],[230,168,328,48],[230,169,329,4],[230,170,329,5],[231,8,330,4],[231,12,331,6,"values"],[231,18,331,12],[231,19,331,13,"length"],[231,25,331,19],[231,30,331,24],[231,34,331,28],[231,35,331,29,"ins"],[231,38,331,32],[231,39,331,33,"length"],[231,45,331,39],[231,49,332,6,"prevOutScripts"],[231,63,332,20],[231,64,332,21,"length"],[231,70,332,27],[231,75,332,32],[231,79,332,36],[231,80,332,37,"ins"],[231,83,332,40],[231,84,332,41,"length"],[231,90,332,47],[231,92,333,6],[232,10,334,6],[232,16,334,12],[232,20,334,16,"Error"],[232,25,334,21],[232,26,334,22],[232,79,334,75],[232,80,334,76],[233,8,335,4],[234,8,336,4],[234,12,336,10,"outputType"],[234,22,336,20],[234,25,337,6,"hashType"],[234,33,337,14],[234,38,337,19,"Transaction"],[234,49,337,30],[234,50,337,31,"SIGHASH_DEFAULT"],[234,65,337,46],[234,68,338,10,"Transaction"],[234,79,338,21],[234,80,338,22,"SIGHASH_ALL"],[234,91,338,33],[234,94,339,10,"hashType"],[234,102,339,18],[234,105,339,21,"Transaction"],[234,116,339,32],[234,117,339,33,"SIGHASH_OUTPUT_MASK"],[234,136,339,52],[235,8,340,4],[235,12,340,10,"inputType"],[235,21,340,19],[235,24,340,22,"hashType"],[235,32,340,30],[235,35,340,33,"Transaction"],[235,46,340,44],[235,47,340,45,"SIGHASH_INPUT_MASK"],[235,65,340,63],[236,8,341,4],[236,12,341,10,"isAnyoneCanPay"],[236,26,341,24],[236,29,341,27,"inputType"],[236,38,341,36],[236,43,341,41,"Transaction"],[236,54,341,52],[236,55,341,53,"SIGHASH_ANYONECANPAY"],[236,75,341,73],[237,8,342,4],[237,12,342,10,"isNone"],[237,18,342,16],[237,21,342,19,"outputType"],[237,31,342,29],[237,36,342,34,"Transaction"],[237,47,342,45],[237,48,342,46,"SIGHASH_NONE"],[237,60,342,58],[238,8,343,4],[238,12,343,10,"isSingle"],[238,20,343,18],[238,23,343,21,"outputType"],[238,33,343,31],[238,38,343,36,"Transaction"],[238,49,343,47],[238,50,343,48,"SIGHASH_SINGLE"],[238,64,343,62],[239,8,344,4],[239,12,344,8,"hashPrevouts"],[239,24,344,20],[239,27,344,23,"EMPTY_BUFFER"],[239,39,344,35],[240,8,345,4],[240,12,345,8,"hashAmounts"],[240,23,345,19],[240,26,345,22,"EMPTY_BUFFER"],[240,38,345,34],[241,8,346,4],[241,12,346,8,"hashScriptPubKeys"],[241,29,346,25],[241,32,346,28,"EMPTY_BUFFER"],[241,44,346,40],[242,8,347,4],[242,12,347,8,"hashSequences"],[242,25,347,21],[242,28,347,24,"EMPTY_BUFFER"],[242,40,347,36],[243,8,348,4],[243,12,348,8,"hashOutputs"],[243,23,348,19],[243,26,348,22,"EMPTY_BUFFER"],[243,38,348,34],[244,8,349,4],[244,12,349,8],[244,13,349,9,"isAnyoneCanPay"],[244,27,349,23],[244,29,349,25],[245,10,350,6],[245,14,350,10,"bufferWriter"],[245,26,350,22],[245,29,350,25,"_$$_REQUIRE"],[245,40,350,25],[245,41,350,25,"_dependencyMap"],[245,55,350,25],[245,81,350,42,"BufferWriter"],[245,93,350,54],[245,94,350,55,"withCapacity"],[245,106,350,67],[245,107,351,8],[245,109,351,10],[245,112,351,13],[245,116,351,17],[245,117,351,18,"ins"],[245,120,351,21],[245,121,351,22,"length"],[245,127,352,6],[245,128,352,7],[246,10,353,6],[246,14,353,10],[246,15,353,11,"ins"],[246,18,353,14],[246,19,353,15,"forEach"],[246,26,353,22],[246,27,353,23],[246,37,353,23,"txIn"],[246,41,353,27],[246,43,353,31],[247,12,354,8,"bufferWriter"],[247,24,354,20],[247,25,354,21,"writeSlice"],[247,35,354,31],[247,36,354,32,"txIn"],[247,40,354,36],[247,41,354,37,"hash"],[247,45,354,41],[247,46,354,42],[248,12,355,8,"bufferWriter"],[248,24,355,20],[248,25,355,21,"writeUInt32"],[248,36,355,32],[248,37,355,33,"txIn"],[248,41,355,37],[248,42,355,38,"index"],[248,47,355,43],[248,48,355,44],[249,10,356,6],[249,11,356,7],[249,12,356,8],[250,10,357,6,"hashPrevouts"],[250,22,357,18],[250,25,357,21],[250,26,357,22],[250,27,357,23],[250,29,357,25,"_$$_REQUIRE"],[250,40,357,25],[250,41,357,25,"_dependencyMap"],[250,55,357,25],[250,84,357,34,"sha256"],[250,90,357,40],[250,92,357,42,"bufferWriter"],[250,104,357,54],[250,105,357,55,"end"],[250,108,357,58],[250,109,357,59],[250,110,357,60],[250,111,357,61],[251,10,358,6,"bufferWriter"],[251,22,358,18],[251,25,358,21,"_$$_REQUIRE"],[251,36,358,21],[251,37,358,21,"_dependencyMap"],[251,51,358,21],[251,77,358,38,"BufferWriter"],[251,89,358,50],[251,90,358,51,"withCapacity"],[251,102,358,63],[251,103,359,8],[251,104,359,9],[251,107,359,12],[251,111,359,16],[251,112,359,17,"ins"],[251,115,359,20],[251,116,359,21,"length"],[251,122,360,6],[251,123,360,7],[252,10,361,6,"values"],[252,16,361,12],[252,17,361,13,"forEach"],[252,24,361,20],[252,25,361,21],[252,35,361,21,"value"],[252,40,361,26],[253,12,361,26],[253,19,361,30,"bufferWriter"],[253,31,361,42],[253,32,361,43,"writeInt64"],[253,42,361,53],[253,43,361,54,"value"],[253,48,361,59],[253,49,361,60],[254,10,361,60],[254,12,361,61],[255,10,362,6,"hashAmounts"],[255,21,362,17],[255,24,362,20],[255,25,362,21],[255,26,362,22],[255,28,362,24,"_$$_REQUIRE"],[255,39,362,24],[255,40,362,24,"_dependencyMap"],[255,54,362,24],[255,83,362,33,"sha256"],[255,89,362,39],[255,91,362,41,"bufferWriter"],[255,103,362,53],[255,104,362,54,"end"],[255,107,362,57],[255,108,362,58],[255,109,362,59],[255,110,362,60],[256,10,363,6,"bufferWriter"],[256,22,363,18],[256,25,363,21,"_$$_REQUIRE"],[256,36,363,21],[256,37,363,21,"_dependencyMap"],[256,51,363,21],[256,77,363,38,"BufferWriter"],[256,89,363,50],[256,90,363,51,"withCapacity"],[256,102,363,63],[256,103,364,8,"prevOutScripts"],[256,117,364,22],[256,118,364,23,"map"],[256,121,364,26],[256,122,364,27,"varSliceSize"],[256,134,364,39],[256,135,364,40],[256,136,364,41,"reduce"],[256,142,364,47],[256,143,364,48],[256,153,364,49,"a"],[256,154,364,50],[256,156,364,52,"b"],[256,157,364,53],[257,12,364,53],[257,19,364,58,"a"],[257,20,364,59],[257,23,364,62,"b"],[257,24,364,63],[258,10,364,63],[258,12,365,6],[258,13,365,7],[259,10,366,6,"prevOutScripts"],[259,24,366,20],[259,25,366,21,"forEach"],[259,32,366,28],[259,33,366,29],[259,43,366,29,"prevOutScript"],[259,56,366,42],[260,12,366,42],[260,19,367,8,"bufferWriter"],[260,31,367,20],[260,32,367,21,"writeVarSlice"],[260,45,367,34],[260,46,367,35,"prevOutScript"],[260,59,367,48],[260,60,367,49],[261,10,367,49],[261,11,368,6],[261,12,368,7],[262,10,369,6,"hashScriptPubKeys"],[262,27,369,23],[262,30,369,26],[262,31,369,27],[262,32,369,28],[262,34,369,30,"_$$_REQUIRE"],[262,45,369,30],[262,46,369,30,"_dependencyMap"],[262,60,369,30],[262,89,369,39,"sha256"],[262,95,369,45],[262,97,369,47,"bufferWriter"],[262,109,369,59],[262,110,369,60,"end"],[262,113,369,63],[262,114,369,64],[262,115,369,65],[262,116,369,66],[263,10,370,6,"bufferWriter"],[263,22,370,18],[263,25,370,21,"_$$_REQUIRE"],[263,36,370,21],[263,37,370,21,"_dependencyMap"],[263,51,370,21],[263,77,370,38,"BufferWriter"],[263,89,370,50],[263,90,370,51,"withCapacity"],[263,102,370,63],[263,103,371,8],[263,104,371,9],[263,107,371,12],[263,111,371,16],[263,112,371,17,"ins"],[263,115,371,20],[263,116,371,21,"length"],[263,122,372,6],[263,123,372,7],[264,10,373,6],[264,14,373,10],[264,15,373,11,"ins"],[264,18,373,14],[264,19,373,15,"forEach"],[264,26,373,22],[264,27,373,23],[264,37,373,23,"txIn"],[264,41,373,27],[265,12,373,27],[265,19,373,31,"bufferWriter"],[265,31,373,43],[265,32,373,44,"writeUInt32"],[265,43,373,55],[265,44,373,56,"txIn"],[265,48,373,60],[265,49,373,61,"sequence"],[265,57,373,69],[265,58,373,70],[266,10,373,70],[266,12,373,71],[267,10,374,6,"hashSequences"],[267,23,374,19],[267,26,374,22],[267,27,374,23],[267,28,374,24],[267,30,374,26,"_$$_REQUIRE"],[267,41,374,26],[267,42,374,26,"_dependencyMap"],[267,56,374,26],[267,85,374,35,"sha256"],[267,91,374,41],[267,93,374,43,"bufferWriter"],[267,105,374,55],[267,106,374,56,"end"],[267,109,374,59],[267,110,374,60],[267,111,374,61],[267,112,374,62],[268,8,375,4],[269,8,376,4],[269,12,376,8],[269,14,376,10,"isNone"],[269,20,376,16],[269,24,376,20,"isSingle"],[269,32,376,28],[269,33,376,29],[269,35,376,31],[270,10,377,6],[270,14,377,10],[270,15,377,11],[270,19,377,15],[270,20,377,16,"outs"],[270,24,377,20],[270,25,377,21,"length"],[270,31,377,27],[270,33,378,8],[270,39,378,14],[270,43,378,18,"Error"],[270,48,378,23],[270,49,378,24],[270,97,378,72],[270,98,378,73],[271,10,379,6],[271,14,379,12,"txOutsSize"],[271,24,379,22],[271,27,379,25],[271,31,379,29],[271,32,379,30,"outs"],[271,36,379,34],[271,37,380,9,"map"],[271,40,380,12],[271,41,380,13],[271,51,380,13,"output"],[271,57,380,19],[272,12,380,19],[272,19,380,23],[272,20,380,24],[272,23,380,27,"varSliceSize"],[272,35,380,39],[272,36,380,40,"output"],[272,42,380,46],[272,43,380,47,"script"],[272,49,380,53],[272,50,380,54],[273,10,380,54],[273,12,380,55],[273,13,381,9,"reduce"],[273,19,381,15],[273,20,381,16],[273,30,381,17,"a"],[273,31,381,18],[273,33,381,20,"b"],[273,34,381,21],[274,12,381,21],[274,19,381,26,"a"],[274,20,381,27],[274,23,381,30,"b"],[274,24,381,31],[275,10,381,31],[275,12,381,32],[276,10,382,6],[276,14,382,12,"bufferWriter"],[276,27,382,24],[276,30,383,8,"_$$_REQUIRE"],[276,41,383,8],[276,42,383,8,"_dependencyMap"],[276,56,383,8],[276,82,383,25,"BufferWriter"],[276,94,383,37],[276,95,383,38,"withCapacity"],[276,107,383,50],[276,108,383,51,"txOutsSize"],[276,118,383,61],[276,119,383,62],[277,10,384,6],[277,14,384,10],[277,15,384,11,"outs"],[277,19,384,15],[277,20,384,16,"forEach"],[277,27,384,23],[277,28,384,24],[277,38,384,24,"out"],[277,41,384,27],[277,43,384,31],[278,12,385,8,"bufferWriter"],[278,25,385,20],[278,26,385,21,"writeInt64"],[278,36,385,31],[278,37,385,32,"out"],[278,40,385,35],[278,41,385,36,"value"],[278,46,385,41],[278,47,385,42],[279,12,386,8,"bufferWriter"],[279,25,386,20],[279,26,386,21,"writeVarSlice"],[279,39,386,34],[279,40,386,35,"out"],[279,43,386,38],[279,44,386,39,"script"],[279,50,386,45],[279,51,386,46],[280,10,387,6],[280,11,387,7],[280,12,387,8],[281,10,388,6,"hashOutputs"],[281,21,388,17],[281,24,388,20],[281,25,388,21],[281,26,388,22],[281,28,388,24,"_$$_REQUIRE"],[281,39,388,24],[281,40,388,24,"_dependencyMap"],[281,54,388,24],[281,83,388,33,"sha256"],[281,89,388,39],[281,91,388,41,"bufferWriter"],[281,104,388,53],[281,105,388,54,"end"],[281,108,388,57],[281,109,388,58],[281,110,388,59],[281,111,388,60],[282,8,389,4],[282,9,389,5],[282,15,389,11],[282,19,389,15,"isSingle"],[282,27,389,23],[282,31,389,27,"inIndex"],[282,38,389,34],[282,41,389,37],[282,45,389,41],[282,46,389,42,"outs"],[282,50,389,46],[282,51,389,47,"length"],[282,57,389,53],[282,59,389,55],[283,10,390,6],[283,14,390,12,"output"],[283,20,390,18],[283,23,390,21],[283,27,390,25],[283,28,390,26,"outs"],[283,32,390,30],[283,33,390,31,"inIndex"],[283,40,390,38],[283,41,390,39],[284,10,391,6],[284,14,391,12,"bufferWriter"],[284,28,391,24],[284,31,391,27,"_$$_REQUIRE"],[284,42,391,27],[284,43,391,27,"_dependencyMap"],[284,57,391,27],[284,83,391,44,"BufferWriter"],[284,95,391,56],[284,96,391,57,"withCapacity"],[284,108,391,69],[284,109,392,8],[284,110,392,9],[284,113,392,12,"varSliceSize"],[284,125,392,24],[284,126,392,25,"output"],[284,132,392,31],[284,133,392,32,"script"],[284,139,392,38],[284,140,393,6],[284,141,393,7],[285,10,394,6,"bufferWriter"],[285,24,394,18],[285,25,394,19,"writeInt64"],[285,35,394,29],[285,36,394,30,"output"],[285,42,394,36],[285,43,394,37,"value"],[285,48,394,42],[285,49,394,43],[286,10,395,6,"bufferWriter"],[286,24,395,18],[286,25,395,19,"writeVarSlice"],[286,38,395,32],[286,39,395,33,"output"],[286,45,395,39],[286,46,395,40,"script"],[286,52,395,46],[286,53,395,47],[287,10,396,6,"hashOutputs"],[287,21,396,17],[287,24,396,20],[287,25,396,21],[287,26,396,22],[287,28,396,24,"_$$_REQUIRE"],[287,39,396,24],[287,40,396,24,"_dependencyMap"],[287,54,396,24],[287,83,396,33,"sha256"],[287,89,396,39],[287,91,396,41,"bufferWriter"],[287,105,396,53],[287,106,396,54,"end"],[287,109,396,57],[287,110,396,58],[287,111,396,59],[287,112,396,60],[288,8,397,4],[289,8,398,4],[289,12,398,10,"spendType"],[289,21,398,19],[289,24,398,22],[289,25,398,23,"leafHash"],[289,33,398,31],[289,36,398,34],[289,37,398,35],[289,40,398,38],[289,41,398,39],[289,46,398,44,"annex"],[289,51,398,49],[289,54,398,52],[289,55,398,53],[289,58,398,56],[289,59,398,57],[289,60,398,58],[290,8,399,4],[291,8,400,4],[292,8,401,4],[293,8,402,4],[294,8,403,4],[294,12,403,10,"sigMsgSize"],[294,22,403,20],[294,25,404,6],[294,28,404,9],[294,32,405,7,"isAnyoneCanPay"],[294,46,405,21],[294,49,405,24],[294,51,405,26],[294,54,405,29],[294,55,405,30],[294,56,405,31],[294,60,406,7,"isNone"],[294,66,406,13],[294,69,406,16],[294,71,406,18],[294,74,406,21],[294,75,406,22],[294,76,406,23],[294,80,407,7,"annex"],[294,85,407,12],[294,88,407,15],[294,90,407,17],[294,93,407,20],[294,94,407,21],[294,95,407,22],[294,99,408,7,"leafHash"],[294,107,408,15],[294,110,408,18],[294,112,408,20],[294,115,408,23],[294,116,408,24],[294,117,408,25],[295,8,409,4],[295,12,409,10,"sigMsgWriter"],[295,24,409,22],[295,27,409,25,"_$$_REQUIRE"],[295,38,409,25],[295,39,409,25,"_dependencyMap"],[295,53,409,25],[295,79,409,42,"BufferWriter"],[295,91,409,54],[295,92,409,55,"withCapacity"],[295,104,409,67],[295,105,409,68,"sigMsgSize"],[295,115,409,78],[295,116,409,79],[296,8,410,4,"sigMsgWriter"],[296,20,410,16],[296,21,410,17,"writeUInt8"],[296,31,410,27],[296,32,410,28,"hashType"],[296,40,410,36],[296,41,410,37],[297,8,411,4],[298,8,412,4,"sigMsgWriter"],[298,20,412,16],[298,21,412,17,"writeInt32"],[298,31,412,27],[298,32,412,28],[298,36,412,32],[298,37,412,33,"version"],[298,44,412,40],[298,45,412,41],[299,8,413,4,"sigMsgWriter"],[299,20,413,16],[299,21,413,17,"writeUInt32"],[299,32,413,28],[299,33,413,29],[299,37,413,33],[299,38,413,34,"locktime"],[299,46,413,42],[299,47,413,43],[300,8,414,4,"sigMsgWriter"],[300,20,414,16],[300,21,414,17,"writeSlice"],[300,31,414,27],[300,32,414,28,"hashPrevouts"],[300,44,414,40],[300,45,414,41],[301,8,415,4,"sigMsgWriter"],[301,20,415,16],[301,21,415,17,"writeSlice"],[301,31,415,27],[301,32,415,28,"hashAmounts"],[301,43,415,39],[301,44,415,40],[302,8,416,4,"sigMsgWriter"],[302,20,416,16],[302,21,416,17,"writeSlice"],[302,31,416,27],[302,32,416,28,"hashScriptPubKeys"],[302,49,416,45],[302,50,416,46],[303,8,417,4,"sigMsgWriter"],[303,20,417,16],[303,21,417,17,"writeSlice"],[303,31,417,27],[303,32,417,28,"hashSequences"],[303,45,417,41],[303,46,417,42],[304,8,418,4],[304,12,418,8],[304,14,418,10,"isNone"],[304,20,418,16],[304,24,418,20,"isSingle"],[304,32,418,28],[304,33,418,29],[304,35,418,31],[305,10,419,6,"sigMsgWriter"],[305,22,419,18],[305,23,419,19,"writeSlice"],[305,33,419,29],[305,34,419,30,"hashOutputs"],[305,45,419,41],[305,46,419,42],[306,8,420,4],[307,8,421,4],[308,8,422,4,"sigMsgWriter"],[308,20,422,16],[308,21,422,17,"writeUInt8"],[308,31,422,27],[308,32,422,28,"spendType"],[308,41,422,37],[308,42,422,38],[309,8,423,4],[309,12,423,8,"isAnyoneCanPay"],[309,26,423,22],[309,28,423,24],[310,10,424,6],[310,14,424,12,"input"],[310,19,424,17],[310,22,424,20],[310,26,424,24],[310,27,424,25,"ins"],[310,30,424,28],[310,31,424,29,"inIndex"],[310,38,424,36],[310,39,424,37],[311,10,425,6,"sigMsgWriter"],[311,22,425,18],[311,23,425,19,"writeSlice"],[311,33,425,29],[311,34,425,30,"input"],[311,39,425,35],[311,40,425,36,"hash"],[311,44,425,40],[311,45,425,41],[312,10,426,6,"sigMsgWriter"],[312,22,426,18],[312,23,426,19,"writeUInt32"],[312,34,426,30],[312,35,426,31,"input"],[312,40,426,36],[312,41,426,37,"index"],[312,46,426,42],[312,47,426,43],[313,10,427,6,"sigMsgWriter"],[313,22,427,18],[313,23,427,19,"writeInt64"],[313,33,427,29],[313,34,427,30,"values"],[313,40,427,36],[313,41,427,37,"inIndex"],[313,48,427,44],[313,49,427,45],[313,50,427,46],[314,10,428,6,"sigMsgWriter"],[314,22,428,18],[314,23,428,19,"writeVarSlice"],[314,36,428,32],[314,37,428,33,"prevOutScripts"],[314,51,428,47],[314,52,428,48,"inIndex"],[314,59,428,55],[314,60,428,56],[314,61,428,57],[315,10,429,6,"sigMsgWriter"],[315,22,429,18],[315,23,429,19,"writeUInt32"],[315,34,429,30],[315,35,429,31,"input"],[315,40,429,36],[315,41,429,37,"sequence"],[315,49,429,45],[315,50,429,46],[316,8,430,4],[316,9,430,5],[316,15,430,11],[317,10,431,6,"sigMsgWriter"],[317,22,431,18],[317,23,431,19,"writeUInt32"],[317,34,431,30],[317,35,431,31,"inIndex"],[317,42,431,38],[317,43,431,39],[318,8,432,4],[319,8,433,4],[319,12,433,8,"annex"],[319,17,433,13],[319,19,433,15],[320,10,434,6],[320,14,434,12,"bufferWriter"],[320,28,434,24],[320,31,434,27,"_$$_REQUIRE"],[320,42,434,27],[320,43,434,27,"_dependencyMap"],[320,57,434,27],[320,83,434,44,"BufferWriter"],[320,95,434,56],[320,96,434,57,"withCapacity"],[320,108,434,69],[320,109,435,8,"varSliceSize"],[320,121,435,20],[320,122,435,21,"annex"],[320,127,435,26],[320,128,436,6],[320,129,436,7],[321,10,437,6,"bufferWriter"],[321,24,437,18],[321,25,437,19,"writeVarSlice"],[321,38,437,32],[321,39,437,33,"annex"],[321,44,437,38],[321,45,437,39],[322,10,438,6,"sigMsgWriter"],[322,22,438,18],[322,23,438,19,"writeSlice"],[322,33,438,29],[322,34,438,30],[322,35,438,31],[322,36,438,32],[322,38,438,34,"_$$_REQUIRE"],[322,49,438,34],[322,50,438,34,"_dependencyMap"],[322,64,438,34],[322,93,438,43,"sha256"],[322,99,438,49],[322,101,438,51,"bufferWriter"],[322,115,438,63],[322,116,438,64,"end"],[322,119,438,67],[322,120,438,68],[322,121,438,69],[322,122,438,70],[322,123,438,71],[323,8,439,4],[324,8,440,4],[325,8,441,4],[325,12,441,8,"isSingle"],[325,20,441,16],[325,22,441,18],[326,10,442,6,"sigMsgWriter"],[326,22,442,18],[326,23,442,19,"writeSlice"],[326,33,442,29],[326,34,442,30,"hashOutputs"],[326,45,442,41],[326,46,442,42],[327,8,443,4],[328,8,444,4],[329,8,445,4],[329,12,445,8,"leafHash"],[329,20,445,16],[329,22,445,18],[330,10,446,6,"sigMsgWriter"],[330,22,446,18],[330,23,446,19,"writeSlice"],[330,33,446,29],[330,34,446,30,"leafHash"],[330,42,446,38],[330,43,446,39],[331,10,447,6,"sigMsgWriter"],[331,22,447,18],[331,23,447,19,"writeUInt8"],[331,33,447,29],[331,34,447,30],[331,35,447,31],[331,36,447,32],[332,10,448,6,"sigMsgWriter"],[332,22,448,18],[332,23,448,19,"writeUInt32"],[332,34,448,30],[332,35,448,31],[332,45,448,41],[332,46,448,42],[333,8,449,4],[334,8,450,4],[335,8,451,4],[336,8,452,4],[336,15,452,11,"bcrypto"],[336,22,452,18],[336,23,452,19,"taggedHash"],[336,33,452,29],[336,34,453,6],[336,46,453,18],[336,48,454,6,"tools"],[336,53,454,11],[336,54,454,12,"concat"],[336,60,454,18],[336,61,454,19],[336,62,454,20,"Uint8Array"],[336,72,454,30],[336,73,454,31,"from"],[336,77,454,35],[336,78,454,36],[336,79,454,37],[336,83,454,41],[336,84,454,42],[336,85,454,43],[336,87,454,45,"sigMsgWriter"],[336,99,454,57],[336,100,454,58,"end"],[336,103,454,61],[336,104,454,62],[336,105,454,63],[336,106,454,64],[336,107,455,4],[336,108,455,5],[337,6,456,2],[338,4,456,3],[339,6,456,3,"key"],[339,9,456,3],[340,6,456,3,"value"],[340,11,456,3],[340,13,457,2],[340,22,457,2,"hashForWitnessV0"],[340,38,457,18,"hashForWitnessV0"],[340,39,457,19,"inIndex"],[340,46,457,26],[340,48,457,28,"prevOutScript"],[340,61,457,41],[340,63,457,43,"value"],[340,68,457,48],[340,70,457,50,"hashType"],[340,78,457,58],[340,80,457,60],[341,8,458,4,"v"],[341,9,458,5],[341,10,458,6,"parse"],[341,15,458,11],[341,16,459,6,"v"],[341,17,459,7],[341,18,459,8,"tuple"],[341,23,459,13],[341,24,459,14],[341,25,460,8,"types"],[341,30,460,13],[341,31,460,14,"UInt32Schema"],[341,43,460,26],[341,45,461,8,"types"],[341,50,461,13],[341,51,461,14,"BufferSchema"],[341,63,461,26],[341,65,462,8,"types"],[341,70,462,13],[341,71,462,14,"SatoshiSchema"],[341,84,462,27],[341,86,463,8,"types"],[341,91,463,13],[341,92,463,14,"UInt32Schema"],[341,104,463,26],[341,105,464,7],[341,106,464,8],[341,108,465,6],[341,109,465,7,"inIndex"],[341,116,465,14],[341,118,465,16,"prevOutScript"],[341,131,465,29],[341,133,465,31,"value"],[341,138,465,36],[341,140,465,38,"hashType"],[341,148,465,46],[341,149,466,4],[341,150,466,5],[342,8,467,4],[342,12,467,8,"tbuffer"],[342,19,467,15],[342,22,467,18,"Uint8Array"],[342,32,467,28],[342,33,467,29,"from"],[342,37,467,33],[342,38,467,34],[342,40,467,36],[342,41,467,37],[343,8,468,4],[343,12,468,8,"bufferWriter"],[343,24,468,20],[344,8,469,4],[344,12,469,8,"hashOutputs"],[344,23,469,19],[344,26,469,22,"ZERO"],[344,30,469,26],[345,8,470,4],[345,12,470,8,"hashPrevouts"],[345,24,470,20],[345,27,470,23,"ZERO"],[345,31,470,27],[346,8,471,4],[346,12,471,8,"hashSequence"],[346,24,471,20],[346,27,471,23,"ZERO"],[346,31,471,27],[347,8,472,4],[347,12,472,8],[347,14,472,10,"hashType"],[347,22,472,18],[347,25,472,21,"Transaction"],[347,36,472,32],[347,37,472,33,"SIGHASH_ANYONECANPAY"],[347,57,472,53],[347,58,472,54],[347,60,472,56],[348,10,473,6,"tbuffer"],[348,17,473,13],[348,20,473,16],[348,24,473,20,"Uint8Array"],[348,34,473,30],[348,35,473,31],[348,37,473,33],[348,40,473,36],[348,44,473,40],[348,45,473,41,"ins"],[348,48,473,44],[348,49,473,45,"length"],[348,55,473,51],[348,56,473,52],[349,10,474,6,"bufferWriter"],[349,22,474,18],[349,25,474,21],[349,30,474,25,"_$$_REQUIRE"],[349,41,474,25],[349,42,474,25,"_dependencyMap"],[349,56,474,25],[349,82,474,42,"BufferWriter"],[349,94,474,54],[349,96,474,55,"tbuffer"],[349,103,474,62],[349,105,474,64],[349,106,474,65],[349,107,474,66],[350,10,475,6],[350,14,475,10],[350,15,475,11,"ins"],[350,18,475,14],[350,19,475,15,"forEach"],[350,26,475,22],[350,27,475,23],[350,37,475,23,"txIn"],[350,41,475,27],[350,43,475,31],[351,12,476,8,"bufferWriter"],[351,24,476,20],[351,25,476,21,"writeSlice"],[351,35,476,31],[351,36,476,32,"txIn"],[351,40,476,36],[351,41,476,37,"hash"],[351,45,476,41],[351,46,476,42],[352,12,477,8,"bufferWriter"],[352,24,477,20],[352,25,477,21,"writeUInt32"],[352,36,477,32],[352,37,477,33,"txIn"],[352,41,477,37],[352,42,477,38,"index"],[352,47,477,43],[352,48,477,44],[353,10,478,6],[353,11,478,7],[353,12,478,8],[354,10,479,6,"hashPrevouts"],[354,22,479,18],[354,25,479,21,"bcrypto"],[354,32,479,28],[354,33,479,29,"hash256"],[354,40,479,36],[354,41,479,37,"tbuffer"],[354,48,479,44],[354,49,479,45],[355,8,480,4],[356,8,481,4],[356,12,482,6],[356,14,482,8,"hashType"],[356,22,482,16],[356,25,482,19,"Transaction"],[356,36,482,30],[356,37,482,31,"SIGHASH_ANYONECANPAY"],[356,57,482,51],[356,58,482,52],[356,62,483,6],[356,63,483,7,"hashType"],[356,71,483,15],[356,74,483,18],[356,78,483,22],[356,84,483,28,"Transaction"],[356,95,483,39],[356,96,483,40,"SIGHASH_SINGLE"],[356,110,483,54],[356,114,484,6],[356,115,484,7,"hashType"],[356,123,484,15],[356,126,484,18],[356,130,484,22],[356,136,484,28,"Transaction"],[356,147,484,39],[356,148,484,40,"SIGHASH_NONE"],[356,160,484,52],[356,162,485,6],[357,10,486,6,"tbuffer"],[357,17,486,13],[357,20,486,16],[357,24,486,20,"Uint8Array"],[357,34,486,30],[357,35,486,31],[357,36,486,32],[357,39,486,35],[357,43,486,39],[357,44,486,40,"ins"],[357,47,486,43],[357,48,486,44,"length"],[357,54,486,50],[357,55,486,51],[358,10,487,6,"bufferWriter"],[358,22,487,18],[358,25,487,21],[358,30,487,25,"_$$_REQUIRE"],[358,41,487,25],[358,42,487,25,"_dependencyMap"],[358,56,487,25],[358,82,487,42,"BufferWriter"],[358,94,487,54],[358,96,487,55,"tbuffer"],[358,103,487,62],[358,105,487,64],[358,106,487,65],[358,107,487,66],[359,10,488,6],[359,14,488,10],[359,15,488,11,"ins"],[359,18,488,14],[359,19,488,15,"forEach"],[359,26,488,22],[359,27,488,23],[359,37,488,23,"txIn"],[359,41,488,27],[359,43,488,31],[360,12,489,8,"bufferWriter"],[360,24,489,20],[360,25,489,21,"writeUInt32"],[360,36,489,32],[360,37,489,33,"txIn"],[360,41,489,37],[360,42,489,38,"sequence"],[360,50,489,46],[360,51,489,47],[361,10,490,6],[361,11,490,7],[361,12,490,8],[362,10,491,6,"hashSequence"],[362,22,491,18],[362,25,491,21,"bcrypto"],[362,32,491,28],[362,33,491,29,"hash256"],[362,40,491,36],[362,41,491,37,"tbuffer"],[362,48,491,44],[362,49,491,45],[363,8,492,4],[364,8,493,4],[364,12,494,6],[364,13,494,7,"hashType"],[364,21,494,15],[364,24,494,18],[364,28,494,22],[364,34,494,28,"Transaction"],[364,45,494,39],[364,46,494,40,"SIGHASH_SINGLE"],[364,60,494,54],[364,64,495,6],[364,65,495,7,"hashType"],[364,73,495,15],[364,76,495,18],[364,80,495,22],[364,86,495,28,"Transaction"],[364,97,495,39],[364,98,495,40,"SIGHASH_NONE"],[364,110,495,52],[364,112,496,6],[365,10,497,6],[365,14,497,12,"txOutsSize"],[365,24,497,22],[365,27,497,25],[365,31,497,29],[365,32,497,30,"outs"],[365,36,497,34],[365,37,497,35,"reduce"],[365,43,497,41],[365,44,497,42],[365,54,497,43,"sum"],[365,57,497,46],[365,59,497,48,"output"],[365,65,497,54],[365,67,497,59],[366,12,498,8],[366,19,498,15,"sum"],[366,22,498,18],[366,25,498,21],[366,26,498,22],[366,29,498,25,"varSliceSize"],[366,41,498,37],[366,42,498,38,"output"],[366,48,498,44],[366,49,498,45,"script"],[366,55,498,51],[366,56,498,52],[367,10,499,6],[367,11,499,7],[367,13,499,9],[367,14,499,10],[367,15,499,11],[368,10,500,6,"tbuffer"],[368,17,500,13],[368,20,500,16],[368,24,500,20,"Uint8Array"],[368,34,500,30],[368,35,500,31,"txOutsSize"],[368,45,500,41],[368,46,500,42],[369,10,501,6,"bufferWriter"],[369,22,501,18],[369,25,501,21],[369,30,501,25,"_$$_REQUIRE"],[369,41,501,25],[369,42,501,25,"_dependencyMap"],[369,56,501,25],[369,82,501,42,"BufferWriter"],[369,94,501,54],[369,96,501,55,"tbuffer"],[369,103,501,62],[369,105,501,64],[369,106,501,65],[369,107,501,66],[370,10,502,6],[370,14,502,10],[370,15,502,11,"outs"],[370,19,502,15],[370,20,502,16,"forEach"],[370,27,502,23],[370,28,502,24],[370,38,502,24,"out"],[370,41,502,27],[370,43,502,31],[371,12,503,8,"bufferWriter"],[371,24,503,20],[371,25,503,21,"writeInt64"],[371,35,503,31],[371,36,503,32,"out"],[371,39,503,35],[371,40,503,36,"value"],[371,45,503,41],[371,46,503,42],[372,12,504,8,"bufferWriter"],[372,24,504,20],[372,25,504,21,"writeVarSlice"],[372,38,504,34],[372,39,504,35,"out"],[372,42,504,38],[372,43,504,39,"script"],[372,49,504,45],[372,50,504,46],[373,10,505,6],[373,11,505,7],[373,12,505,8],[374,10,506,6,"hashOutputs"],[374,21,506,17],[374,24,506,20,"bcrypto"],[374,31,506,27],[374,32,506,28,"hash256"],[374,39,506,35],[374,40,506,36,"tbuffer"],[374,47,506,43],[374,48,506,44],[375,8,507,4],[375,9,507,5],[375,15,507,11],[375,19,508,6],[375,20,508,7,"hashType"],[375,28,508,15],[375,31,508,18],[375,35,508,22],[375,41,508,28,"Transaction"],[375,52,508,39],[375,53,508,40,"SIGHASH_SINGLE"],[375,67,508,54],[375,71,509,6,"inIndex"],[375,78,509,13],[375,81,509,16],[375,85,509,20],[375,86,509,21,"outs"],[375,90,509,25],[375,91,509,26,"length"],[375,97,509,32],[375,99,510,6],[376,10,511,6],[376,14,511,12,"output"],[376,20,511,18],[376,23,511,21],[376,27,511,25],[376,28,511,26,"outs"],[376,32,511,30],[376,33,511,31,"inIndex"],[376,40,511,38],[376,41,511,39],[377,10,512,6,"tbuffer"],[377,17,512,13],[377,20,512,16],[377,24,512,20,"Uint8Array"],[377,34,512,30],[377,35,512,31],[377,36,512,32],[377,39,512,35,"varSliceSize"],[377,51,512,47],[377,52,512,48,"output"],[377,58,512,54],[377,59,512,55,"script"],[377,65,512,61],[377,66,512,62],[377,67,512,63],[378,10,513,6,"bufferWriter"],[378,22,513,18],[378,25,513,21],[378,30,513,25,"_$$_REQUIRE"],[378,41,513,25],[378,42,513,25,"_dependencyMap"],[378,56,513,25],[378,82,513,42,"BufferWriter"],[378,94,513,54],[378,96,513,55,"tbuffer"],[378,103,513,62],[378,105,513,64],[378,106,513,65],[378,107,513,66],[379,10,514,6,"bufferWriter"],[379,22,514,18],[379,23,514,19,"writeInt64"],[379,33,514,29],[379,34,514,30,"output"],[379,40,514,36],[379,41,514,37,"value"],[379,46,514,42],[379,47,514,43],[380,10,515,6,"bufferWriter"],[380,22,515,18],[380,23,515,19,"writeVarSlice"],[380,36,515,32],[380,37,515,33,"output"],[380,43,515,39],[380,44,515,40,"script"],[380,50,515,46],[380,51,515,47],[381,10,516,6,"hashOutputs"],[381,21,516,17],[381,24,516,20,"bcrypto"],[381,31,516,27],[381,32,516,28,"hash256"],[381,39,516,35],[381,40,516,36,"tbuffer"],[381,47,516,43],[381,48,516,44],[382,8,517,4],[383,8,518,4,"tbuffer"],[383,15,518,11],[383,18,518,14],[383,22,518,18,"Uint8Array"],[383,32,518,28],[383,33,518,29],[383,36,518,32],[383,39,518,35,"varSliceSize"],[383,51,518,47],[383,52,518,48,"prevOutScript"],[383,65,518,61],[383,66,518,62],[383,67,518,63],[384,8,519,4,"bufferWriter"],[384,20,519,16],[384,23,519,19],[384,28,519,23,"_$$_REQUIRE"],[384,39,519,23],[384,40,519,23,"_dependencyMap"],[384,54,519,23],[384,80,519,40,"BufferWriter"],[384,92,519,52],[384,94,519,53,"tbuffer"],[384,101,519,60],[384,103,519,62],[384,104,519,63],[384,105,519,64],[385,8,520,4],[385,12,520,10,"input"],[385,17,520,15],[385,20,520,18],[385,24,520,22],[385,25,520,23,"ins"],[385,28,520,26],[385,29,520,27,"inIndex"],[385,36,520,34],[385,37,520,35],[386,8,521,4,"bufferWriter"],[386,20,521,16],[386,21,521,17,"writeInt32"],[386,31,521,27],[386,32,521,28],[386,36,521,32],[386,37,521,33,"version"],[386,44,521,40],[386,45,521,41],[387,8,522,4,"bufferWriter"],[387,20,522,16],[387,21,522,17,"writeSlice"],[387,31,522,27],[387,32,522,28,"hashPrevouts"],[387,44,522,40],[387,45,522,41],[388,8,523,4,"bufferWriter"],[388,20,523,16],[388,21,523,17,"writeSlice"],[388,31,523,27],[388,32,523,28,"hashSequence"],[388,44,523,40],[388,45,523,41],[389,8,524,4,"bufferWriter"],[389,20,524,16],[389,21,524,17,"writeSlice"],[389,31,524,27],[389,32,524,28,"input"],[389,37,524,33],[389,38,524,34,"hash"],[389,42,524,38],[389,43,524,39],[390,8,525,4,"bufferWriter"],[390,20,525,16],[390,21,525,17,"writeUInt32"],[390,32,525,28],[390,33,525,29,"input"],[390,38,525,34],[390,39,525,35,"index"],[390,44,525,40],[390,45,525,41],[391,8,526,4,"bufferWriter"],[391,20,526,16],[391,21,526,17,"writeVarSlice"],[391,34,526,30],[391,35,526,31,"prevOutScript"],[391,48,526,44],[391,49,526,45],[392,8,527,4,"bufferWriter"],[392,20,527,16],[392,21,527,17,"writeInt64"],[392,31,527,27],[392,32,527,28,"value"],[392,37,527,33],[392,38,527,34],[393,8,528,4,"bufferWriter"],[393,20,528,16],[393,21,528,17,"writeUInt32"],[393,32,528,28],[393,33,528,29,"input"],[393,38,528,34],[393,39,528,35,"sequence"],[393,47,528,43],[393,48,528,44],[394,8,529,4,"bufferWriter"],[394,20,529,16],[394,21,529,17,"writeSlice"],[394,31,529,27],[394,32,529,28,"hashOutputs"],[394,43,529,39],[394,44,529,40],[395,8,530,4,"bufferWriter"],[395,20,530,16],[395,21,530,17,"writeUInt32"],[395,32,530,28],[395,33,530,29],[395,37,530,33],[395,38,530,34,"locktime"],[395,46,530,42],[395,47,530,43],[396,8,531,4,"bufferWriter"],[396,20,531,16],[396,21,531,17,"writeUInt32"],[396,32,531,28],[396,33,531,29,"hashType"],[396,41,531,37],[396,42,531,38],[397,8,532,4],[397,15,532,11,"bcrypto"],[397,22,532,18],[397,23,532,19,"hash256"],[397,30,532,26],[397,31,532,27,"tbuffer"],[397,38,532,34],[397,39,532,35],[398,6,533,2],[399,4,533,3],[400,6,533,3,"key"],[400,9,533,3],[401,6,533,3,"value"],[401,11,533,3],[401,13,534,2],[401,22,534,2,"getHash"],[401,29,534,9,"getHash"],[401,30,534,10,"forWitness"],[401,40,534,20],[401,42,534,22],[402,8,535,4],[403,8,536,4],[403,12,536,8,"forWitness"],[403,22,536,18],[403,26,536,22],[403,30,536,26],[403,31,536,27,"isCoinbase"],[403,41,536,37],[403,42,536,38],[403,43,536,39],[403,45,536,41],[403,52,536,48],[403,56,536,52,"Uint8Array"],[403,66,536,62],[403,67,536,63],[403,69,536,65],[403,70,536,66],[404,8,537,4],[404,15,537,11,"bcrypto"],[404,22,537,18],[404,23,537,19,"hash256"],[404,30,537,26],[404,31,537,27],[404,35,537,31],[404,36,537,32,"__toBuffer"],[404,46,537,42],[404,47,537,43,"undefined"],[404,56,537,52],[404,58,537,54,"undefined"],[404,67,537,63],[404,69,537,65,"forWitness"],[404,79,537,75],[404,80,537,76],[404,81,537,77],[405,6,538,2],[406,4,538,3],[407,6,538,3,"key"],[407,9,538,3],[408,6,538,3,"value"],[408,11,538,3],[408,13,539,2],[408,22,539,2,"getId"],[408,27,539,7,"getId"],[408,28,539,7],[408,30,539,10],[409,8,540,4],[410,8,541,4],[410,15,541,11,"tools"],[410,20,541,16],[410,21,541,17,"toHex"],[410,26,541,22],[410,27,542,6],[410,28,542,7],[410,29,542,8],[410,31,542,10,"_$$_REQUIRE"],[410,42,542,10],[410,43,542,10,"_dependencyMap"],[410,57,542,10],[410,83,542,27,"reverseBuffer"],[410,96,542,40],[410,98,542,42],[410,102,542,46],[410,103,542,47,"getHash"],[410,110,542,54],[410,111,542,55],[410,116,542,60],[410,117,542,61],[410,118,543,4],[410,119,543,5],[411,6,544,2],[412,4,544,3],[413,6,544,3,"key"],[413,9,544,3],[414,6,544,3,"value"],[414,11,544,3],[414,13,545,2],[414,22,545,2,"toBuffer"],[414,30,545,10,"toBuffer"],[414,31,545,11,"buffer"],[414,37,545,17],[414,39,545,19,"initialOffset"],[414,52,545,32],[414,54,545,34],[415,8,546,4],[415,15,546,11],[415,19,546,15],[415,20,546,16,"__toBuffer"],[415,30,546,26],[415,31,546,27,"buffer"],[415,37,546,33],[415,39,546,35,"initialOffset"],[415,52,546,48],[415,54,546,50],[415,58,546,54],[415,59,546,55],[416,6,547,2],[417,4,547,3],[418,6,547,3,"key"],[418,9,547,3],[419,6,547,3,"value"],[419,11,547,3],[419,13,548,2],[419,22,548,2,"toHex"],[419,27,548,7,"toHex"],[419,28,548,7],[419,30,548,10],[420,8,549,4],[420,15,549,11,"tools"],[420,20,549,16],[420,21,549,17,"toHex"],[420,26,549,22],[420,27,549,23],[420,31,549,27],[420,32,549,28,"toBuffer"],[420,40,549,36],[420,41,549,37,"undefined"],[420,50,549,46],[420,52,549,48,"undefined"],[420,61,549,57],[420,62,549,58],[420,63,549,59],[421,6,550,2],[422,4,550,3],[423,6,550,3,"key"],[423,9,550,3],[424,6,550,3,"value"],[424,11,550,3],[424,13,551,2],[424,22,551,2,"setInputScript"],[424,36,551,16,"setInputScript"],[424,37,551,17,"index"],[424,42,551,22],[424,44,551,24,"scriptSig"],[424,53,551,33],[424,55,551,35],[425,8,552,4,"v"],[425,9,552,5],[425,10,552,6,"parse"],[425,15,552,11],[425,16,552,12,"v"],[425,17,552,13],[425,18,552,14,"tuple"],[425,23,552,19],[425,24,552,20],[425,25,552,21,"v"],[425,26,552,22],[425,27,552,23,"number"],[425,33,552,29],[425,34,552,30],[425,35,552,31],[425,37,552,33,"types"],[425,42,552,38],[425,43,552,39,"BufferSchema"],[425,55,552,51],[425,56,552,52],[425,57,552,53],[425,59,552,55],[425,60,552,56,"index"],[425,65,552,61],[425,67,552,63,"scriptSig"],[425,76,552,72],[425,77,552,73],[425,78,552,74],[426,8,553,4],[426,12,553,8],[426,13,553,9,"ins"],[426,16,553,12],[426,17,553,13,"index"],[426,22,553,18],[426,23,553,19],[426,24,553,20,"script"],[426,30,553,26],[426,33,553,29,"scriptSig"],[426,42,553,38],[427,6,554,2],[428,4,554,3],[429,6,554,3,"key"],[429,9,554,3],[430,6,554,3,"value"],[430,11,554,3],[430,13,555,2],[430,22,555,2,"setWitness"],[430,32,555,12,"setWitness"],[430,33,555,13,"index"],[430,38,555,18],[430,40,555,20,"witness"],[430,47,555,27],[430,49,555,29],[431,8,556,4,"v"],[431,9,556,5],[431,10,556,6,"parse"],[431,15,556,11],[431,16,556,12,"v"],[431,17,556,13],[431,18,556,14,"tuple"],[431,23,556,19],[431,24,556,20],[431,25,556,21,"v"],[431,26,556,22],[431,27,556,23,"number"],[431,33,556,29],[431,34,556,30],[431,35,556,31],[431,37,556,33,"v"],[431,38,556,34],[431,39,556,35,"array"],[431,44,556,40],[431,45,556,41,"types"],[431,50,556,46],[431,51,556,47,"BufferSchema"],[431,63,556,59],[431,64,556,60],[431,65,556,61],[431,66,556,62],[431,68,556,64],[431,69,557,6,"index"],[431,74,557,11],[431,76,558,6,"witness"],[431,83,558,13],[431,84,559,5],[431,85,559,6],[432,8,560,4],[432,12,560,8],[432,13,560,9,"ins"],[432,16,560,12],[432,17,560,13,"index"],[432,22,560,18],[432,23,560,19],[432,24,560,20,"witness"],[432,31,560,27],[432,34,560,30,"witness"],[432,41,560,37],[433,6,561,2],[434,4,561,3],[435,6,561,3,"key"],[435,9,561,3],[436,6,561,3,"value"],[436,11,561,3],[436,13,562,2],[436,22,562,2,"__toBuffer"],[436,32,562,12,"__toBuffer"],[436,33,562,13,"buffer"],[436,39,562,19],[436,41,562,21,"initialOffset"],[436,54,562,34],[436,56,562,60],[437,8,562,60],[437,12,562,36,"_ALLOW_WITNESS"],[437,26,562,50],[437,29,562,50,"arguments"],[437,38,562,50],[437,39,562,50,"length"],[437,45,562,50],[437,53,562,50,"arguments"],[437,62,562,50],[437,70,562,50,"undefined"],[437,79,562,50],[437,82,562,50,"arguments"],[437,91,562,50],[437,97,562,53],[437,102,562,58],[438,8,563,4],[438,12,563,8],[438,13,563,9,"buffer"],[438,19,563,15],[438,21,563,17,"buffer"],[438,27,563,23],[438,30,563,26],[438,34,563,30,"Uint8Array"],[438,44,563,40],[438,45,563,41],[438,49,563,45],[438,50,563,46,"byteLength"],[438,60,563,56],[438,61,563,57,"_ALLOW_WITNESS"],[438,75,563,71],[438,76,563,72],[438,77,563,73],[439,8,564,4],[439,12,564,10,"bufferWriter"],[439,24,564,22],[439,27,564,25],[439,32,564,29,"_$$_REQUIRE"],[439,43,564,29],[439,44,564,29,"_dependencyMap"],[439,58,564,29],[439,84,564,46,"BufferWriter"],[439,96,564,58],[439,98,565,6,"buffer"],[439,104,565,12],[439,106,566,6,"initialOffset"],[439,119,566,19],[439,123,566,23],[439,124,567,4],[439,125,567,5],[440,8,568,4,"bufferWriter"],[440,20,568,16],[440,21,568,17,"writeInt32"],[440,31,568,27],[440,32,568,28],[440,36,568,32],[440,37,568,33,"version"],[440,44,568,40],[440,45,568,41],[441,8,569,4],[441,12,569,10,"hasWitnesses"],[441,24,569,22],[441,27,569,25,"_ALLOW_WITNESS"],[441,41,569,39],[441,45,569,43],[441,49,569,47],[441,50,569,48,"hasWitnesses"],[441,62,569,60],[441,63,569,61],[441,64,569,62],[442,8,570,4],[442,12,570,8,"hasWitnesses"],[442,24,570,20],[442,26,570,22],[443,10,571,6,"bufferWriter"],[443,22,571,18],[443,23,571,19,"writeUInt8"],[443,33,571,29],[443,34,571,30,"Transaction"],[443,45,571,41],[443,46,571,42,"ADVANCED_TRANSACTION_MARKER"],[443,73,571,69],[443,74,571,70],[444,10,572,6,"bufferWriter"],[444,22,572,18],[444,23,572,19,"writeUInt8"],[444,33,572,29],[444,34,572,30,"Transaction"],[444,45,572,41],[444,46,572,42,"ADVANCED_TRANSACTION_FLAG"],[444,71,572,67],[444,72,572,68],[445,8,573,4],[446,8,574,4,"bufferWriter"],[446,20,574,16],[446,21,574,17,"writeVarInt"],[446,32,574,28],[446,33,574,29],[446,37,574,33],[446,38,574,34,"ins"],[446,41,574,37],[446,42,574,38,"length"],[446,48,574,44],[446,49,574,45],[447,8,575,4],[447,12,575,8],[447,13,575,9,"ins"],[447,16,575,12],[447,17,575,13,"forEach"],[447,24,575,20],[447,25,575,21],[447,35,575,21,"txIn"],[447,39,575,25],[447,41,575,29],[448,10,576,6,"bufferWriter"],[448,22,576,18],[448,23,576,19,"writeSlice"],[448,33,576,29],[448,34,576,30,"txIn"],[448,38,576,34],[448,39,576,35,"hash"],[448,43,576,39],[448,44,576,40],[449,10,577,6,"bufferWriter"],[449,22,577,18],[449,23,577,19,"writeUInt32"],[449,34,577,30],[449,35,577,31,"txIn"],[449,39,577,35],[449,40,577,36,"index"],[449,45,577,41],[449,46,577,42],[450,10,578,6,"bufferWriter"],[450,22,578,18],[450,23,578,19,"writeVarSlice"],[450,36,578,32],[450,37,578,33,"txIn"],[450,41,578,37],[450,42,578,38,"script"],[450,48,578,44],[450,49,578,45],[451,10,579,6,"bufferWriter"],[451,22,579,18],[451,23,579,19,"writeUInt32"],[451,34,579,30],[451,35,579,31,"txIn"],[451,39,579,35],[451,40,579,36,"sequence"],[451,48,579,44],[451,49,579,45],[452,8,580,4],[452,9,580,5],[452,10,580,6],[453,8,581,4,"bufferWriter"],[453,20,581,16],[453,21,581,17,"writeVarInt"],[453,32,581,28],[453,33,581,29],[453,37,581,33],[453,38,581,34,"outs"],[453,42,581,38],[453,43,581,39,"length"],[453,49,581,45],[453,50,581,46],[454,8,582,4],[454,12,582,8],[454,13,582,9,"outs"],[454,17,582,13],[454,18,582,14,"forEach"],[454,25,582,21],[454,26,582,22],[454,36,582,22,"txOut"],[454,41,582,27],[454,43,582,31],[455,10,583,6],[455,14,583,10,"isOutput"],[455,22,583,18],[455,23,583,19,"txOut"],[455,28,583,24],[455,29,583,25],[455,31,583,27],[456,12,584,8,"bufferWriter"],[456,24,584,20],[456,25,584,21,"writeInt64"],[456,35,584,31],[456,36,584,32,"txOut"],[456,41,584,37],[456,42,584,38,"value"],[456,47,584,43],[456,48,584,44],[457,10,585,6],[457,11,585,7],[457,17,585,13],[458,12,586,8,"bufferWriter"],[458,24,586,20],[458,25,586,21,"writeSlice"],[458,35,586,31],[458,36,586,32,"txOut"],[458,41,586,37],[458,42,586,38,"valueBuffer"],[458,53,586,49],[458,54,586,50],[459,10,587,6],[460,10,588,6,"bufferWriter"],[460,22,588,18],[460,23,588,19,"writeVarSlice"],[460,36,588,32],[460,37,588,33,"txOut"],[460,42,588,38],[460,43,588,39,"script"],[460,49,588,45],[460,50,588,46],[461,8,589,4],[461,9,589,5],[461,10,589,6],[462,8,590,4],[462,12,590,8,"hasWitnesses"],[462,24,590,20],[462,26,590,22],[463,10,591,6],[463,14,591,10],[463,15,591,11,"ins"],[463,18,591,14],[463,19,591,15,"forEach"],[463,26,591,22],[463,27,591,23],[463,37,591,23,"input"],[463,42,591,28],[463,44,591,32],[464,12,592,8,"bufferWriter"],[464,24,592,20],[464,25,592,21,"writeVector"],[464,36,592,32],[464,37,592,33,"input"],[464,42,592,38],[464,43,592,39,"witness"],[464,50,592,46],[464,51,592,47],[465,10,593,6],[465,11,593,7],[465,12,593,8],[466,8,594,4],[467,8,595,4,"bufferWriter"],[467,20,595,16],[467,21,595,17,"writeUInt32"],[467,32,595,28],[467,33,595,29],[467,37,595,33],[467,38,595,34,"locktime"],[467,46,595,42],[467,47,595,43],[468,8,596,4],[469,8,597,4],[469,12,597,8,"initialOffset"],[469,25,597,21],[469,30,597,26,"undefined"],[469,39,597,35],[469,41,598,6],[469,48,598,13,"buffer"],[469,54,598,19],[469,55,598,20,"slice"],[469,60,598,25],[469,61,598,26,"initialOffset"],[469,74,598,39],[469,76,598,41,"bufferWriter"],[469,88,598,53],[469,89,598,54,"offset"],[469,95,598,60],[469,96,598,61],[470,8,599,4],[470,15,599,11,"buffer"],[470,21,599,17],[471,6,600,2],[472,4,600,3],[473,6,600,3,"key"],[473,9,600,3],[474,6,600,3,"value"],[474,11,600,3],[474,13,99,2],[474,22,99,9,"fromBuffer"],[474,32,99,19,"fromBuffer"],[474,33,99,20,"buffer"],[474,39,99,26],[474,41,99,28,"_NO_STRICT"],[474,51,99,38],[474,53,99,40],[475,8,100,4],[475,12,100,10,"bufferReader"],[475,24,100,22],[475,27,100,25],[475,32,100,29,"_$$_REQUIRE"],[475,43,100,29],[475,44,100,29,"_dependencyMap"],[475,58,100,29],[475,84,100,46,"BufferReader"],[475,96,100,58],[475,98,100,59,"buffer"],[475,104,100,65],[475,105,100,66],[476,8,101,4],[476,12,101,10,"tx"],[476,14,101,12],[476,17,101,15],[476,21,101,19,"Transaction"],[476,32,101,30],[476,33,101,31],[476,34,101,32],[477,8,102,4,"tx"],[477,10,102,6],[477,11,102,7,"version"],[477,18,102,14],[477,21,102,17,"bufferReader"],[477,33,102,29],[477,34,102,30,"readInt32"],[477,43,102,39],[477,44,102,40],[477,45,102,41],[478,8,103,4],[478,12,103,10,"marker"],[478,18,103,16],[478,21,103,19,"bufferReader"],[478,33,103,31],[478,34,103,32,"readUInt8"],[478,43,103,41],[478,44,103,42],[478,45,103,43],[479,8,104,4],[479,12,104,10,"flag"],[479,16,104,14],[479,19,104,17,"bufferReader"],[479,31,104,29],[479,32,104,30,"readUInt8"],[479,41,104,39],[479,42,104,40],[479,43,104,41],[480,8,105,4],[480,12,105,8,"hasWitnesses"],[480,24,105,20],[480,27,105,23],[480,32,105,28],[481,8,106,4],[481,12,107,6,"marker"],[481,18,107,12],[481,23,107,17,"Transaction"],[481,34,107,28],[481,35,107,29,"ADVANCED_TRANSACTION_MARKER"],[481,62,107,56],[481,66,108,6,"flag"],[481,70,108,10],[481,75,108,15,"Transaction"],[481,86,108,26],[481,87,108,27,"ADVANCED_TRANSACTION_FLAG"],[481,112,108,52],[481,114,109,6],[482,10,110,6,"hasWitnesses"],[482,22,110,18],[482,25,110,21],[482,29,110,25],[483,8,111,4],[483,9,111,5],[483,15,111,11],[484,10,112,6,"bufferReader"],[484,22,112,18],[484,23,112,19,"offset"],[484,29,112,25],[484,33,112,29],[484,34,112,30],[485,8,113,4],[486,8,114,4],[486,12,114,10,"vinLen"],[486,18,114,16],[486,21,114,19,"bufferReader"],[486,33,114,31],[486,34,114,32,"readVarInt"],[486,44,114,42],[486,45,114,43],[486,46,114,44],[487,8,115,4],[487,13,115,9],[487,17,115,13,"i"],[487,18,115,14],[487,21,115,17],[487,22,115,18],[487,24,115,20,"i"],[487,25,115,21],[487,28,115,24,"vinLen"],[487,34,115,30],[487,36,115,32],[487,38,115,34,"i"],[487,39,115,35],[487,41,115,37],[488,10,116,6,"tx"],[488,12,116,8],[488,13,116,9,"ins"],[488,16,116,12],[488,17,116,13,"push"],[488,21,116,17],[488,22,116,18],[489,12,117,8,"hash"],[489,16,117,12],[489,18,117,14,"bufferReader"],[489,30,117,26],[489,31,117,27,"readSlice"],[489,40,117,36],[489,41,117,37],[489,43,117,39],[489,44,117,40],[490,12,118,8,"index"],[490,17,118,13],[490,19,118,15,"bufferReader"],[490,31,118,27],[490,32,118,28,"readUInt32"],[490,42,118,38],[490,43,118,39],[490,44,118,40],[491,12,119,8,"script"],[491,18,119,14],[491,20,119,16,"bufferReader"],[491,32,119,28],[491,33,119,29,"readVarSlice"],[491,45,119,41],[491,46,119,42],[491,47,119,43],[492,12,120,8,"sequence"],[492,20,120,16],[492,22,120,18,"bufferReader"],[492,34,120,30],[492,35,120,31,"readUInt32"],[492,45,120,41],[492,46,120,42],[492,47,120,43],[493,12,121,8,"witness"],[493,19,121,15],[493,21,121,17,"EMPTY_WITNESS"],[494,10,122,6],[494,11,122,7],[494,12,122,8],[495,8,123,4],[496,8,124,4],[496,12,124,10,"voutLen"],[496,19,124,17],[496,22,124,20,"bufferReader"],[496,34,124,32],[496,35,124,33,"readVarInt"],[496,45,124,43],[496,46,124,44],[496,47,124,45],[497,8,125,4],[497,13,125,9],[497,17,125,13,"i"],[497,19,125,14],[497,22,125,17],[497,23,125,18],[497,25,125,20,"i"],[497,27,125,21],[497,30,125,24,"voutLen"],[497,37,125,31],[497,39,125,33],[497,41,125,35,"i"],[497,43,125,36],[497,45,125,38],[498,10,126,6,"tx"],[498,12,126,8],[498,13,126,9,"outs"],[498,17,126,13],[498,18,126,14,"push"],[498,22,126,18],[498,23,126,19],[499,12,127,8,"value"],[499,17,127,13],[499,19,127,15,"bufferReader"],[499,31,127,27],[499,32,127,28,"readInt64"],[499,41,127,37],[499,42,127,38],[499,43,127,39],[500,12,128,8,"script"],[500,18,128,14],[500,20,128,16,"bufferReader"],[500,32,128,28],[500,33,128,29,"readVarSlice"],[500,45,128,41],[500,46,128,42],[501,10,129,6],[501,11,129,7],[501,12,129,8],[502,8,130,4],[503,8,131,4],[503,12,131,8,"hasWitnesses"],[503,24,131,20],[503,26,131,22],[504,10,132,6],[504,15,132,11],[504,19,132,15,"i"],[504,22,132,16],[504,25,132,19],[504,26,132,20],[504,28,132,22,"i"],[504,31,132,23],[504,34,132,26,"vinLen"],[504,40,132,32],[504,42,132,34],[504,44,132,36,"i"],[504,47,132,37],[504,49,132,39],[505,12,133,8,"tx"],[505,14,133,10],[505,15,133,11,"ins"],[505,18,133,14],[505,19,133,15,"i"],[505,22,133,16],[505,23,133,17],[505,24,133,18,"witness"],[505,31,133,25],[505,34,133,28,"bufferReader"],[505,46,133,40],[505,47,133,41,"readVector"],[505,57,133,51],[505,58,133,52],[505,59,133,53],[506,10,134,6],[507,10,135,6],[508,10,136,6],[508,14,136,10],[508,15,136,11,"tx"],[508,17,136,13],[508,18,136,14,"hasWitnesses"],[508,30,136,26],[508,31,136,27],[508,32,136,28],[508,34,137,8],[508,40,137,14],[508,44,137,18,"Error"],[508,49,137,23],[508,50,137,24],[508,92,137,66],[508,93,137,67],[509,8,138,4],[510,8,139,4,"tx"],[510,10,139,6],[510,11,139,7,"locktime"],[510,19,139,15],[510,22,139,18,"bufferReader"],[510,34,139,30],[510,35,139,31,"readUInt32"],[510,45,139,41],[510,46,139,42],[510,47,139,43],[511,8,140,4],[511,12,140,8,"_NO_STRICT"],[511,22,140,18],[511,24,140,20],[511,31,140,27,"tx"],[511,33,140,29],[512,8,141,4],[512,12,141,8,"bufferReader"],[512,24,141,20],[512,25,141,21,"offset"],[512,31,141,27],[512,36,141,32,"buffer"],[512,42,141,38],[512,43,141,39,"length"],[512,49,141,45],[512,51,142,6],[512,57,142,12],[512,61,142,16,"Error"],[512,66,142,21],[512,67,142,22],[512,100,142,55],[512,101,142,56],[513,8,143,4],[513,15,143,11,"tx"],[513,17,143,13],[514,6,144,2],[515,4,144,3],[516,6,144,3,"key"],[516,9,144,3],[517,6,144,3,"value"],[517,11,144,3],[517,13,145,2],[517,22,145,9,"fromHex"],[517,29,145,16,"fromHex"],[517,30,145,17,"hex"],[517,33,145,20],[517,35,145,22],[518,8,146,4],[518,15,146,11,"Transaction"],[518,26,146,22],[518,27,146,23,"fromBuffer"],[518,37,146,33],[518,38,146,34,"tools"],[518,43,146,39],[518,44,146,40,"fromHex"],[518,51,146,47],[518,52,146,48,"hex"],[518,55,146,51],[518,56,146,52],[518,58,146,54],[518,63,146,59],[518,64,146,60],[519,6,147,2],[520,4,147,3],[521,6,147,3,"key"],[521,9,147,3],[522,6,147,3,"value"],[522,11,147,3],[522,13,148,2],[522,22,148,9,"isCoinbaseHash"],[522,36,148,23,"isCoinbaseHash"],[522,37,148,24,"buffer"],[522,43,148,30],[522,45,148,32],[523,8,149,4,"v"],[523,9,149,5],[523,10,149,6,"parse"],[523,15,149,11],[523,16,149,12,"types"],[523,21,149,17],[523,22,149,18,"Hash256bitSchema"],[523,38,149,34],[523,40,149,36,"buffer"],[523,46,149,42],[523,47,149,43],[524,8,150,4],[524,13,150,9],[524,17,150,13,"i"],[524,18,150,14],[524,21,150,17],[524,22,150,18],[524,24,150,20,"i"],[524,25,150,21],[524,28,150,24],[524,30,150,26],[524,32,150,28],[524,34,150,30,"i"],[524,35,150,31],[524,37,150,33],[525,10,151,6],[525,14,151,10,"buffer"],[525,20,151,16],[525,21,151,17,"i"],[525,22,151,18],[525,23,151,19],[525,28,151,24],[525,29,151,25],[525,31,151,27],[525,38,151,34],[525,43,151,39],[526,8,152,4],[527,8,153,4],[527,15,153,11],[527,19,153,15],[528,6,154,2],[529,4,154,3],[530,2,154,3],[531,2,88,6,"Transaction"],[531,13,88,17],[531,14,89,9,"DEFAULT_SEQUENCE"],[531,30,89,25],[531,33,89,28],[531,43,89,38],[532,2,88,6,"Transaction"],[532,13,88,17],[532,14,90,9,"SIGHASH_DEFAULT"],[532,29,90,24],[532,32,90,27],[532,36,90,31],[533,2,88,6,"Transaction"],[533,13,88,17],[533,14,91,9,"SIGHASH_ALL"],[533,25,91,20],[533,28,91,23],[533,32,91,27],[534,2,88,6,"Transaction"],[534,13,88,17],[534,14,92,9,"SIGHASH_NONE"],[534,26,92,21],[534,29,92,24],[534,33,92,28],[535,2,88,6,"Transaction"],[535,13,88,17],[535,14,93,9,"SIGHASH_SINGLE"],[535,28,93,23],[535,31,93,26],[535,35,93,30],[536,2,88,6,"Transaction"],[536,13,88,17],[536,14,94,9,"SIGHASH_ANYONECANPAY"],[536,34,94,29],[536,37,94,32],[536,41,94,36],[537,2,88,6,"Transaction"],[537,13,88,17],[537,14,95,9,"SIGHASH_OUTPUT_MASK"],[537,33,95,28],[537,36,95,31],[537,40,95,35],[538,2,88,6,"Transaction"],[538,13,88,17],[538,14,96,9,"SIGHASH_INPUT_MASK"],[538,32,96,27],[538,35,96,30],[538,39,96,34],[539,2,88,6,"Transaction"],[539,13,88,17],[539,14,97,9,"ADVANCED_TRANSACTION_MARKER"],[539,41,97,36],[539,44,97,39],[539,48,97,43],[540,2,88,6,"Transaction"],[540,13,88,17],[540,14,98,9,"ADVANCED_TRANSACTION_FLAG"],[540,39,98,34],[540,42,98,37],[540,46,98,41],[541,2,602,0,"exports"],[541,9,602,7],[541,10,602,8,"Transaction"],[541,21,602,19],[541,24,602,22,"Transaction"],[541,35,602,33],[542,0,602,34],[542,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","varSliceSize","vectorSize","someVector.reduce$argument_0","isOutput","Transaction","Transaction.fromBuffer","Transaction.fromHex","Transaction.isCoinbaseHash","Transaction#isCoinbase","Transaction#addInput","Transaction#addOutput","Transaction#hasWitnesses","ins.some$argument_0","Transaction#weight","Transaction#virtualSize","Transaction#byteLength","ins.reduce$argument_0","outs.reduce$argument_0","Transaction#clone","ins.map$argument_0","outs.map$argument_0","Transaction#hashForSignature","bscript.decompile.filter$argument_0","txTmp.ins.forEach$argument_0","Transaction#hashForWitnessV1","ins.forEach$argument_0","values.forEach$argument_0","prevOutScripts.map.reduce$argument_0","prevOutScripts.forEach$argument_0","outs.map.reduce$argument_0","outs.forEach$argument_0","Transaction#hashForWitnessV0","Transaction#getHash","Transaction#getId","Transaction#toBuffer","Transaction#toHex","Transaction#setInputScript","Transaction#setWitness","Transaction#__toBuffer"],"mappings":"AAA;MCI;iBCS;aDE;ODI;MCC;ODG;MCI;ODE;MCC;ODE;ECG;GDS;AGW;CHG;AIC;sBCI;KDE;CJE;AMc;CNE;AOI;ECW;GD6C;EEC;GFE;EGC;GHM;EIK;GJI;EKC;GLuB;EMC;GNY;EOC;yBCC;KDE;GPC;ESC;GTI;EUC;GVE;EWC;sBCM;ODE;uBEC;OFE;0BCE;WDE;GXG;EcC;6BCI;KDQ;+BEC;KFK;GdE;EiBS;8CCU;ODE;wBEO;OFG;wBEY;OFG;wBES;OFE;GjBQ;EoBC;uBCkC;ODG;qBEK,uCF;gDGG,eH;6BIE;iDJC;uBCM,+CD;aJO,yCI;gBKC,eL;wBMG;ONG;GpBqE;E2BC;uBNkB;OMG;uBNU;OME;0CdO;OcE;wBDG;OCG;G3B4B;E4BC;G5BI;E6BC;G7BK;E8BC;G9BE;E+BC;G/BE;EgCC;GhCG;EiCC;GjCM;EkCC;qBba;KaK;sBRE;KQO;uBbE;OaE;GlCO;CPC"}},"type":"js/module"}]}