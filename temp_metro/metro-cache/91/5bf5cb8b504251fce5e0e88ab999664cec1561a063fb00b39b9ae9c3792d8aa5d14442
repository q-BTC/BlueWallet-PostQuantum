{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":27,"index":462},"end":{"line":15,"column":54,"index":489}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}},{"name":"../../typeFields.cjs","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":24,"index":402},"end":{"line":14,"column":55,"index":433}},{"start":{"line":14,"column":24,"index":402},"end":{"line":14,"column":55,"index":433}}],"key":"6VKrghDrlipK/Kkfa9oBo7LMnas="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result['default'] = mod;\n    return result;\n  };\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[1], \"../../typeFields.cjs\").InputTypes.SIGHASH_TYPE) {\n      throw new Error('Decode Error: could not decode sighashType with key 0x' + tools.toHex(keyVal.key));\n    }\n    return Number(tools.readUInt32(keyVal.value, 0, 'LE'));\n  }\n  exports.decode = decode;\n  function encode(data) {\n    var key = Uint8Array.from([_$$_REQUIRE(_dependencyMap[1], \"../../typeFields.cjs\").InputTypes.SIGHASH_TYPE]);\n    var value = new Uint8Array(4);\n    tools.writeUInt32(value, 0, data, 'LE');\n    return {\n      key: key,\n      value: value\n    };\n  }\n  exports.encode = encode;\n  exports.expected = 'number';\n  function check(data) {\n    return typeof data === 'number';\n  }\n  exports.check = check;\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.sighashType === undefined;\n  }\n  exports.canAdd = canAdd;\n});","lineCount":41,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__importStar"],[4,18,2,16],[4,21,3,3],[4,25,3,7],[4,29,3,11],[4,33,3,15],[4,34,3,16,"__importStar"],[4,46,3,28],[4,50,4,2],[4,60,4,11,"mod"],[4,63,4,14],[4,65,4,16],[5,4,5,4],[5,8,5,8,"mod"],[5,11,5,11],[5,15,5,15,"mod"],[5,18,5,18],[5,19,5,19,"__esModule"],[5,29,5,29],[5,31,5,31],[5,38,5,38,"mod"],[5,41,5,41],[6,4,6,4],[6,8,6,8,"result"],[6,14,6,14],[6,17,6,17],[6,18,6,18],[6,19,6,19],[7,4,7,4],[7,8,7,8,"mod"],[7,11,7,11],[7,15,7,15],[7,19,7,19],[7,21,8,6],[7,26,8,11],[7,30,8,15,"k"],[7,31,8,16],[7,35,8,20,"mod"],[7,38,8,23],[7,40,9,8],[7,44,9,12,"Object"],[7,50,9,18],[7,51,9,19,"hasOwnProperty"],[7,65,9,33],[7,66,9,34,"call"],[7,70,9,38],[7,71,9,39,"mod"],[7,74,9,42],[7,76,9,44,"k"],[7,77,9,45],[7,78,9,46],[7,80,9,48,"result"],[7,86,9,54],[7,87,9,55,"k"],[7,88,9,56],[7,89,9,57],[7,92,9,60,"mod"],[7,95,9,63],[7,96,9,64,"k"],[7,97,9,65],[7,98,9,66],[8,4,10,4,"result"],[8,10,10,10],[8,11,10,11],[8,20,10,20],[8,21,10,21],[8,24,10,24,"mod"],[8,27,10,27],[9,4,11,4],[9,11,11,11,"result"],[9,17,11,17],[10,2,12,2],[10,3,12,3],[11,2,13,0,"Object"],[11,8,13,6],[11,9,13,7,"defineProperty"],[11,23,13,21],[11,24,13,22,"exports"],[11,31,13,29],[11,33,13,31],[11,45,13,43],[11,47,13,45],[12,4,13,47,"value"],[12,9,13,52],[12,11,13,54],[13,2,13,59],[13,3,13,60],[13,4,13,61],[14,2,15,0],[14,6,15,6,"tools"],[14,11,15,11],[14,14,15,14,"__importStar"],[14,26,15,26],[14,27,15,27,"require"],[14,38,15,34],[14,39,15,34,"_dependencyMap"],[14,53,15,34],[14,76,15,53],[14,77,15,54],[14,78,15,55],[15,2,16,0],[15,11,16,9,"decode"],[15,17,16,15,"decode"],[15,18,16,16,"keyVal"],[15,24,16,22],[15,26,16,24],[16,4,17,2],[16,8,17,6,"keyVal"],[16,14,17,12],[16,15,17,13,"key"],[16,18,17,16],[16,19,17,17],[16,20,17,18],[16,21,17,19],[16,26,17,24,"_$$_REQUIRE"],[16,37,17,24],[16,38,17,24,"_dependencyMap"],[16,52,17,24],[16,81,17,40,"InputTypes"],[16,91,17,50],[16,92,17,51,"SIGHASH_TYPE"],[16,104,17,63],[16,106,17,65],[17,6,18,4],[17,12,18,10],[17,16,18,14,"Error"],[17,21,18,19],[17,22,19,6],[17,78,19,62],[17,81,20,8,"tools"],[17,86,20,13],[17,87,20,14,"toHex"],[17,92,20,19],[17,93,20,20,"keyVal"],[17,99,20,26],[17,100,20,27,"key"],[17,103,20,30],[17,104,21,4],[17,105,21,5],[18,4,22,2],[19,4,23,2],[19,11,23,9,"Number"],[19,17,23,15],[19,18,23,16,"tools"],[19,23,23,21],[19,24,23,22,"readUInt32"],[19,34,23,32],[19,35,23,33,"keyVal"],[19,41,23,39],[19,42,23,40,"value"],[19,47,23,45],[19,49,23,47],[19,50,23,48],[19,52,23,50],[19,56,23,54],[19,57,23,55],[19,58,23,56],[20,2,24,0],[21,2,25,0,"exports"],[21,9,25,7],[21,10,25,8,"decode"],[21,16,25,14],[21,19,25,17,"decode"],[21,25,25,23],[22,2,26,0],[22,11,26,9,"encode"],[22,17,26,15,"encode"],[22,18,26,16,"data"],[22,22,26,20],[22,24,26,22],[23,4,27,2],[23,8,27,8,"key"],[23,11,27,11],[23,14,27,14,"Uint8Array"],[23,24,27,24],[23,25,27,25,"from"],[23,29,27,29],[23,30,27,30],[23,31,27,31,"_$$_REQUIRE"],[23,42,27,31],[23,43,27,31,"_dependencyMap"],[23,57,27,31],[23,86,27,47,"InputTypes"],[23,96,27,57],[23,97,27,58,"SIGHASH_TYPE"],[23,109,27,70],[23,110,27,71],[23,111,27,72],[24,4,28,2],[24,8,28,8,"value"],[24,13,28,13],[24,16,28,16],[24,20,28,20,"Uint8Array"],[24,30,28,30],[24,31,28,31],[24,32,28,32],[24,33,28,33],[25,4,29,2,"tools"],[25,9,29,7],[25,10,29,8,"writeUInt32"],[25,21,29,19],[25,22,29,20,"value"],[25,27,29,25],[25,29,29,27],[25,30,29,28],[25,32,29,30,"data"],[25,36,29,34],[25,38,29,36],[25,42,29,40],[25,43,29,41],[26,4,30,2],[26,11,30,9],[27,6,31,4,"key"],[27,9,31,7],[27,11,31,4,"key"],[27,14,31,7],[28,6,32,4,"value"],[28,11,32,9],[28,13,32,4,"value"],[29,4,33,2],[29,5,33,3],[30,2,34,0],[31,2,35,0,"exports"],[31,9,35,7],[31,10,35,8,"encode"],[31,16,35,14],[31,19,35,17,"encode"],[31,25,35,23],[32,2,36,0,"exports"],[32,9,36,7],[32,10,36,8,"expected"],[32,18,36,16],[32,21,36,19],[32,29,36,27],[33,2,37,0],[33,11,37,9,"check"],[33,16,37,14,"check"],[33,17,37,15,"data"],[33,21,37,19],[33,23,37,21],[34,4,38,2],[34,11,38,9],[34,18,38,16,"data"],[34,22,38,20],[34,27,38,25],[34,35,38,33],[35,2,39,0],[36,2,40,0,"exports"],[36,9,40,7],[36,10,40,8,"check"],[36,15,40,13],[36,18,40,16,"check"],[36,23,40,21],[37,2,41,0],[37,11,41,9,"canAdd"],[37,17,41,15,"canAdd"],[37,18,41,16,"currentData"],[37,29,41,27],[37,31,41,29,"newData"],[37,38,41,36],[37,40,41,38],[38,4,42,2],[38,11,42,9],[38,12,42,10],[38,13,42,11,"currentData"],[38,24,42,22],[38,28,42,26],[38,29,42,27],[38,30,42,28,"newData"],[38,37,42,35],[38,41,42,39,"currentData"],[38,52,42,50],[38,53,42,51,"sighashType"],[38,64,42,62],[38,69,42,67,"undefined"],[38,78,42,76],[39,2,43,0],[40,2,44,0,"exports"],[40,9,44,7],[40,10,44,8,"canAdd"],[40,16,44,14],[40,19,44,17,"canAdd"],[40,25,44,23],[41,0,44,24],[41,3]],"functionMap":{"names":["<global>","<anonymous>","decode","encode","check","canAdd"],"mappings":"AAA;ECG;GDQ;AEI;CFQ;AGE;CHQ;AIG;CJE;AKE;CLE"}},"type":"js/module"}]}