{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":217,"column":0,"index":7562}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":217,"column":0,"index":7562}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"varuint-bitcoin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":355},"end":{"line":9,"column":42,"index":381}},{"start":{"line":9,"column":16,"index":355},"end":{"line":9,"column":42,"index":381}},{"start":{"line":9,"column":16,"index":355},"end":{"line":9,"column":42,"index":381}}],"key":"d/MLbboLwipJSIgxTfEgzKAp95s="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}},{"start":{"line":4,"column":16,"index":141},"end":{"line":4,"column":35,"index":160}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}},{"name":"./bufferutils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}},{"start":{"line":3,"column":22,"index":99},"end":{"line":3,"column":46,"index":123}}],"key":"8h+4nPdiw4lgWqmpJE4tN3Ks+fM="}},{"name":"./transaction","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":22,"index":184},"end":{"line":5,"column":46,"index":208}}],"key":"QyHAamlaDdme9J9SOOQ5bKZGvis="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":18,"index":317},"end":{"line":8,"column":38,"index":337}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":224},"end":{"line":6,"column":32,"index":242}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"merkle-lib/fastRoot","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":23,"index":267},"end":{"line":7,"column":53,"index":297}}],"key":"VacIRjHbTuii+xpJ0g+7ruHlHhA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  var errorMerkleNoTxes = new TypeError('Cannot compute merkle root for zero transactions');\n  var errorWitnessNotSegwit = new TypeError('Cannot compute witness commit for non-segwit block');\n  var Block = /*#__PURE__*/function () {\n    function Block() {\n      _classCallCheck(this, Block);\n      this.version = 1;\n      this.prevHash = undefined;\n      this.merkleRoot = undefined;\n      this.timestamp = 0;\n      this.witnessCommit = undefined;\n      this.bits = 0;\n      this.nonce = 0;\n      this.transactions = undefined;\n    }\n    return _createClass(Block, [{\n      key: \"getWitnessCommit\",\n      value: function getWitnessCommit() {\n        if (!txesHaveWitnessCommit(this.transactions)) return null;\n        // The merkle root for the witness data is in an OP_RETURN output.\n        // There is no rule for the index of the output, so use filter to find it.\n        // The root is prepended with 0xaa21a9ed so check for 0x6a24aa21a9ed\n        // If multiple commits are found, the output with highest index is assumed.\n        var witnessCommits = this.transactions[0].outs.filter(function (out) {\n          return out.script.slice(0, 6).equals(Buffer.from('6a24aa21a9ed', 'hex'));\n        }).map(function (out) {\n          return out.script.slice(6, 38);\n        });\n        if (witnessCommits.length === 0) return null;\n        // Use the commit with the highest output (should only be one though)\n        var result = witnessCommits[witnessCommits.length - 1];\n        if (!(result instanceof Buffer && result.length === 32)) return null;\n        return result;\n      }\n    }, {\n      key: \"hasWitnessCommit\",\n      value: function hasWitnessCommit() {\n        if (this.witnessCommit instanceof Buffer && this.witnessCommit.length === 32) return true;\n        if (this.getWitnessCommit() !== null) return true;\n        return false;\n      }\n    }, {\n      key: \"hasWitness\",\n      value: function hasWitness() {\n        return anyTxHasWitness(this.transactions);\n      }\n    }, {\n      key: \"weight\",\n      value: function weight() {\n        var base = this.byteLength(false, false);\n        var total = this.byteLength(false, true);\n        return base * 3 + total;\n      }\n    }, {\n      key: \"byteLength\",\n      value: function byteLength(headersOnly) {\n        var allowWitness = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n        if (headersOnly || !this.transactions) return 80;\n        return 80 + _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encodingLength(this.transactions.length) + this.transactions.reduce(function (a, x) {\n          return a + x.byteLength(allowWitness);\n        }, 0);\n      }\n    }, {\n      key: \"getHash\",\n      value: function getHash() {\n        return _$$_REQUIRE(_dependencyMap[3], \"./crypto\").hash256(this.toBuffer(true));\n      }\n    }, {\n      key: \"getId\",\n      value: function getId() {\n        return _$$_REQUIRE(_dependencyMap[4], \"./bufferutils\").reverseBuffer(this.getHash()).toString('hex');\n      }\n    }, {\n      key: \"getUTCDate\",\n      value: function getUTCDate() {\n        var date = new Date(0); // epoch\n        date.setUTCSeconds(this.timestamp);\n        return date;\n      }\n      // TODO: buffer, offset compatibility\n    }, {\n      key: \"toBuffer\",\n      value: function toBuffer(headersOnly) {\n        var buffer = Buffer.allocUnsafe(this.byteLength(headersOnly));\n        var bufferWriter = new (_$$_REQUIRE(_dependencyMap[4], \"./bufferutils\").BufferWriter)(buffer);\n        bufferWriter.writeInt32(this.version);\n        bufferWriter.writeSlice(this.prevHash);\n        bufferWriter.writeSlice(this.merkleRoot);\n        bufferWriter.writeUInt32(this.timestamp);\n        bufferWriter.writeUInt32(this.bits);\n        bufferWriter.writeUInt32(this.nonce);\n        if (headersOnly || !this.transactions) return buffer;\n        _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encode(this.transactions.length, buffer, bufferWriter.offset);\n        bufferWriter.offset += _$$_REQUIRE(_dependencyMap[2], \"varuint-bitcoin\").encode.bytes;\n        this.transactions.forEach(function (tx) {\n          var txSize = tx.byteLength(); // TODO: extract from toBuffer?\n          tx.toBuffer(buffer, bufferWriter.offset);\n          bufferWriter.offset += txSize;\n        });\n        return buffer;\n      }\n    }, {\n      key: \"toHex\",\n      value: function toHex(headersOnly) {\n        return this.toBuffer(headersOnly).toString('hex');\n      }\n    }, {\n      key: \"checkTxRoots\",\n      value: function checkTxRoots() {\n        // If the Block has segwit transactions but no witness commit,\n        // there's no way it can be valid, so fail the check.\n        var hasWitnessCommit = this.hasWitnessCommit();\n        if (!hasWitnessCommit && this.hasWitness()) return false;\n        return this.__checkMerkleRoot() && (hasWitnessCommit ? this.__checkWitnessCommit() : true);\n      }\n    }, {\n      key: \"checkProofOfWork\",\n      value: function checkProofOfWork() {\n        var hash = _$$_REQUIRE(_dependencyMap[4], \"./bufferutils\").reverseBuffer(this.getHash());\n        var target = Block.calculateTarget(this.bits);\n        return hash.compare(target) <= 0;\n      }\n    }, {\n      key: \"__checkMerkleRoot\",\n      value: function __checkMerkleRoot() {\n        if (!this.transactions) throw errorMerkleNoTxes;\n        var actualMerkleRoot = Block.calculateMerkleRoot(this.transactions);\n        return this.merkleRoot.compare(actualMerkleRoot) === 0;\n      }\n    }, {\n      key: \"__checkWitnessCommit\",\n      value: function __checkWitnessCommit() {\n        if (!this.transactions) throw errorMerkleNoTxes;\n        if (!this.hasWitnessCommit()) throw errorWitnessNotSegwit;\n        var actualWitnessCommit = Block.calculateMerkleRoot(this.transactions, true);\n        return this.witnessCommit.compare(actualWitnessCommit) === 0;\n      }\n    }], [{\n      key: \"fromBuffer\",\n      value: function fromBuffer(buffer) {\n        if (buffer.length < 80) throw new Error('Buffer too small (< 80 bytes)');\n        var bufferReader = new (_$$_REQUIRE(_dependencyMap[4], \"./bufferutils\").BufferReader)(buffer);\n        var block = new Block();\n        block.version = bufferReader.readInt32();\n        block.prevHash = bufferReader.readSlice(32);\n        block.merkleRoot = bufferReader.readSlice(32);\n        block.timestamp = bufferReader.readUInt32();\n        block.bits = bufferReader.readUInt32();\n        block.nonce = bufferReader.readUInt32();\n        if (buffer.length === 80) return block;\n        var readTransaction = function readTransaction() {\n          var tx = _$$_REQUIRE(_dependencyMap[5], \"./transaction\").Transaction.fromBuffer(bufferReader.buffer.slice(bufferReader.offset), true);\n          bufferReader.offset += tx.byteLength();\n          return tx;\n        };\n        var nTransactions = bufferReader.readVarInt();\n        block.transactions = [];\n        for (var i = 0; i < nTransactions; ++i) {\n          var tx = readTransaction();\n          block.transactions.push(tx);\n        }\n        var witnessCommit = block.getWitnessCommit();\n        // This Block contains a witness commit\n        if (witnessCommit) block.witnessCommit = witnessCommit;\n        return block;\n      }\n    }, {\n      key: \"fromHex\",\n      value: function fromHex(hex) {\n        return Block.fromBuffer(Buffer.from(hex, 'hex'));\n      }\n    }, {\n      key: \"calculateTarget\",\n      value: function calculateTarget(bits) {\n        var exponent = ((bits & 0xff000000) >> 24) - 3;\n        var mantissa = bits & 0x007fffff;\n        var target = Buffer.alloc(32, 0);\n        target.writeUIntBE(mantissa, 29 - exponent, 3);\n        return target;\n      }\n    }, {\n      key: \"calculateMerkleRoot\",\n      value: function calculateMerkleRoot(transactions, forWitness) {\n        _$$_REQUIRE(_dependencyMap[6], \"typeforce\")([{\n          getHash: _$$_REQUIRE(_dependencyMap[7], \"./types\").Function\n        }], transactions);\n        if (transactions.length === 0) throw errorMerkleNoTxes;\n        if (forWitness && !txesHaveWitnessCommit(transactions)) throw errorWitnessNotSegwit;\n        var hashes = transactions.map(function (transaction) {\n          return transaction.getHash(forWitness);\n        });\n        var rootHash = _$$_REQUIRE(_dependencyMap[8], \"merkle-lib/fastRoot\")(hashes, _$$_REQUIRE(_dependencyMap[3], \"./crypto\").hash256);\n        return forWitness ? _$$_REQUIRE(_dependencyMap[3], \"./crypto\").hash256(Buffer.concat([rootHash, transactions[0].ins[0].witness[0]])) : rootHash;\n      }\n    }]);\n  }();\n  exports.Block = Block;\n  function txesHaveWitnessCommit(transactions) {\n    return transactions instanceof Array && transactions[0] && transactions[0].ins && transactions[0].ins instanceof Array && transactions[0].ins[0] && transactions[0].ins[0].witness && transactions[0].ins[0].witness instanceof Array && transactions[0].ins[0].witness.length > 0;\n  }\n  function anyTxHasWitness(transactions) {\n    return transactions instanceof Array && transactions.some(function (tx) {\n      return typeof tx === 'object' && tx.ins instanceof Array && tx.ins.some(function (input) {\n        return typeof input === 'object' && input.witness instanceof Array && input.witness.length > 0;\n      });\n    });\n  }\n});","lineCount":215,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,10,0],[9,6,10,6,"errorMerkleNoTxes"],[9,23,10,23],[9,26,10,26],[9,30,10,30,"TypeError"],[9,39,10,39],[9,40,11,2],[9,90,12,0],[9,91,12,1],[10,2,13,0],[10,6,13,6,"errorWitnessNotSegwit"],[10,27,13,27],[10,30,13,30],[10,34,13,34,"TypeError"],[10,43,13,43],[10,44,14,2],[10,96,15,0],[10,97,15,1],[11,2,15,2],[11,6,16,6,"Block"],[11,11,16,11],[12,4,17,2],[12,13,17,2,"Block"],[12,19,17,2],[12,21,17,16],[13,6,17,16,"_classCallCheck"],[13,21,17,16],[13,28,17,16,"Block"],[13,33,17,16],[14,6,18,4],[14,10,18,8],[14,11,18,9,"version"],[14,18,18,16],[14,21,18,19],[14,22,18,20],[15,6,19,4],[15,10,19,8],[15,11,19,9,"prevHash"],[15,19,19,17],[15,22,19,20,"undefined"],[15,31,19,29],[16,6,20,4],[16,10,20,8],[16,11,20,9,"merkleRoot"],[16,21,20,19],[16,24,20,22,"undefined"],[16,33,20,31],[17,6,21,4],[17,10,21,8],[17,11,21,9,"timestamp"],[17,20,21,18],[17,23,21,21],[17,24,21,22],[18,6,22,4],[18,10,22,8],[18,11,22,9,"witnessCommit"],[18,24,22,22],[18,27,22,25,"undefined"],[18,36,22,34],[19,6,23,4],[19,10,23,8],[19,11,23,9,"bits"],[19,15,23,13],[19,18,23,16],[19,19,23,17],[20,6,24,4],[20,10,24,8],[20,11,24,9,"nonce"],[20,16,24,14],[20,19,24,17],[20,20,24,18],[21,6,25,4],[21,10,25,8],[21,11,25,9,"transactions"],[21,23,25,21],[21,26,25,24,"undefined"],[21,35,25,33],[22,4,26,2],[23,4,26,3],[23,11,26,3,"_createClass"],[23,23,26,3],[23,24,26,3,"Block"],[23,29,26,3],[24,6,26,3,"key"],[24,9,26,3],[25,6,26,3,"value"],[25,11,26,3],[25,13,82,2],[25,22,82,2,"getWitnessCommit"],[25,38,82,18,"getWitnessCommit"],[25,39,82,18],[25,41,82,21],[26,8,83,4],[26,12,83,8],[26,13,83,9,"txesHaveWitnessCommit"],[26,34,83,30],[26,35,83,31],[26,39,83,35],[26,40,83,36,"transactions"],[26,52,83,48],[26,53,83,49],[26,55,83,51],[26,62,83,58],[26,66,83,62],[27,8,84,4],[28,8,85,4],[29,8,86,4],[30,8,87,4],[31,8,88,4],[31,12,88,10,"witnessCommits"],[31,26,88,24],[31,29,88,27],[31,33,88,31],[31,34,88,32,"transactions"],[31,46,88,44],[31,47,88,45],[31,48,88,46],[31,49,88,47],[31,50,88,48,"outs"],[31,54,88,52],[31,55,89,7,"filter"],[31,61,89,13],[31,62,89,14],[31,72,89,14,"out"],[31,75,89,17],[32,10,89,17],[32,17,90,8,"out"],[32,20,90,11],[32,21,90,12,"script"],[32,27,90,18],[32,28,90,19,"slice"],[32,33,90,24],[32,34,90,25],[32,35,90,26],[32,37,90,28],[32,38,90,29],[32,39,90,30],[32,40,90,31,"equals"],[32,46,90,37],[32,47,90,38,"Buffer"],[32,53,90,44],[32,54,90,45,"from"],[32,58,90,49],[32,59,90,50],[32,73,90,64],[32,75,90,66],[32,80,90,71],[32,81,90,72],[32,82,90,73],[33,8,90,73],[33,9,91,6],[33,10,91,7],[33,11,92,7,"map"],[33,14,92,10],[33,15,92,11],[33,25,92,11,"out"],[33,28,92,14],[34,10,92,14],[34,17,92,18,"out"],[34,20,92,21],[34,21,92,22,"script"],[34,27,92,28],[34,28,92,29,"slice"],[34,33,92,34],[34,34,92,35],[34,35,92,36],[34,37,92,38],[34,39,92,40],[34,40,92,41],[35,8,92,41],[35,10,92,42],[36,8,93,4],[36,12,93,8,"witnessCommits"],[36,26,93,22],[36,27,93,23,"length"],[36,33,93,29],[36,38,93,34],[36,39,93,35],[36,41,93,37],[36,48,93,44],[36,52,93,48],[37,8,94,4],[38,8,95,4],[38,12,95,10,"result"],[38,18,95,16],[38,21,95,19,"witnessCommits"],[38,35,95,33],[38,36,95,34,"witnessCommits"],[38,50,95,48],[38,51,95,49,"length"],[38,57,95,55],[38,60,95,58],[38,61,95,59],[38,62,95,60],[39,8,96,4],[39,12,96,8],[39,14,96,10,"result"],[39,20,96,16],[39,32,96,28,"Buffer"],[39,38,96,34],[39,42,96,38,"result"],[39,48,96,44],[39,49,96,45,"length"],[39,55,96,51],[39,60,96,56],[39,62,96,58],[39,63,96,59],[39,65,96,61],[39,72,96,68],[39,76,96,72],[40,8,97,4],[40,15,97,11,"result"],[40,21,97,17],[41,6,98,2],[42,4,98,3],[43,6,98,3,"key"],[43,9,98,3],[44,6,98,3,"value"],[44,11,98,3],[44,13,99,2],[44,22,99,2,"hasWitnessCommit"],[44,38,99,18,"hasWitnessCommit"],[44,39,99,18],[44,41,99,21],[45,8,100,4],[45,12,101,6],[45,16,101,10],[45,17,101,11,"witnessCommit"],[45,30,101,24],[45,42,101,36,"Buffer"],[45,48,101,42],[45,52,102,6],[45,56,102,10],[45,57,102,11,"witnessCommit"],[45,70,102,24],[45,71,102,25,"length"],[45,77,102,31],[45,82,102,36],[45,84,102,38],[45,86,104,6],[45,93,104,13],[45,97,104,17],[46,8,105,4],[46,12,105,8],[46,16,105,12],[46,17,105,13,"getWitnessCommit"],[46,33,105,29],[46,34,105,30],[46,35,105,31],[46,40,105,36],[46,44,105,40],[46,46,105,42],[46,53,105,49],[46,57,105,53],[47,8,106,4],[47,15,106,11],[47,20,106,16],[48,6,107,2],[49,4,107,3],[50,6,107,3,"key"],[50,9,107,3],[51,6,107,3,"value"],[51,11,107,3],[51,13,108,2],[51,22,108,2,"hasWitness"],[51,32,108,12,"hasWitness"],[51,33,108,12],[51,35,108,15],[52,8,109,4],[52,15,109,11,"anyTxHasWitness"],[52,30,109,26],[52,31,109,27],[52,35,109,31],[52,36,109,32,"transactions"],[52,48,109,44],[52,49,109,45],[53,6,110,2],[54,4,110,3],[55,6,110,3,"key"],[55,9,110,3],[56,6,110,3,"value"],[56,11,110,3],[56,13,111,2],[56,22,111,2,"weight"],[56,28,111,8,"weight"],[56,29,111,8],[56,31,111,11],[57,8,112,4],[57,12,112,10,"base"],[57,16,112,14],[57,19,112,17],[57,23,112,21],[57,24,112,22,"byteLength"],[57,34,112,32],[57,35,112,33],[57,40,112,38],[57,42,112,40],[57,47,112,45],[57,48,112,46],[58,8,113,4],[58,12,113,10,"total"],[58,17,113,15],[58,20,113,18],[58,24,113,22],[58,25,113,23,"byteLength"],[58,35,113,33],[58,36,113,34],[58,41,113,39],[58,43,113,41],[58,47,113,45],[58,48,113,46],[59,8,114,4],[59,15,114,11,"base"],[59,19,114,15],[59,22,114,18],[59,23,114,19],[59,26,114,22,"total"],[59,31,114,27],[60,6,115,2],[61,4,115,3],[62,6,115,3,"key"],[62,9,115,3],[63,6,115,3,"value"],[63,11,115,3],[63,13,116,2],[63,22,116,2,"byteLength"],[63,32,116,12,"byteLength"],[63,33,116,13,"headersOnly"],[63,44,116,24],[63,46,116,47],[64,8,116,47],[64,12,116,26,"allowWitness"],[64,24,116,38],[64,27,116,38,"arguments"],[64,36,116,38],[64,37,116,38,"length"],[64,43,116,38],[64,51,116,38,"arguments"],[64,60,116,38],[64,68,116,38,"undefined"],[64,77,116,38],[64,80,116,38,"arguments"],[64,89,116,38],[64,95,116,41],[64,99,116,45],[65,8,117,4],[65,12,117,8,"headersOnly"],[65,23,117,19],[65,27,117,23],[65,28,117,24],[65,32,117,28],[65,33,117,29,"transactions"],[65,45,117,41],[65,47,117,43],[65,54,117,50],[65,56,117,52],[66,8,118,4],[66,15,119,6],[66,17,119,8],[66,20,120,6,"_$$_REQUIRE"],[66,31,120,6],[66,32,120,6,"_dependencyMap"],[66,46,120,6],[66,70,120,14,"encodingLength"],[66,84,120,28],[66,85,120,29],[66,89,120,33],[66,90,120,34,"transactions"],[66,102,120,46],[66,103,120,47,"length"],[66,109,120,53],[66,110,120,54],[66,113,121,6],[66,117,121,10],[66,118,121,11,"transactions"],[66,130,121,23],[66,131,121,24,"reduce"],[66,137,121,30],[66,138,121,31],[66,148,121,32,"a"],[66,149,121,33],[66,151,121,35,"x"],[66,152,121,36],[67,10,121,36],[67,17,121,41,"a"],[67,18,121,42],[67,21,121,45,"x"],[67,22,121,46],[67,23,121,47,"byteLength"],[67,33,121,57],[67,34,121,58,"allowWitness"],[67,46,121,70],[67,47,121,71],[68,8,121,71],[68,11,121,73],[68,12,121,74],[68,13,121,75],[69,6,123,2],[70,4,123,3],[71,6,123,3,"key"],[71,9,123,3],[72,6,123,3,"value"],[72,11,123,3],[72,13,124,2],[72,22,124,2,"getHash"],[72,29,124,9,"getHash"],[72,30,124,9],[72,32,124,12],[73,8,125,4],[73,15,125,11,"_$$_REQUIRE"],[73,26,125,11],[73,27,125,11,"_dependencyMap"],[73,41,125,11],[73,58,125,19,"hash256"],[73,65,125,26],[73,66,125,27],[73,70,125,31],[73,71,125,32,"toBuffer"],[73,79,125,40],[73,80,125,41],[73,84,125,45],[73,85,125,46],[73,86,125,47],[74,6,126,2],[75,4,126,3],[76,6,126,3,"key"],[76,9,126,3],[77,6,126,3,"value"],[77,11,126,3],[77,13,127,2],[77,22,127,2,"getId"],[77,27,127,7,"getId"],[77,28,127,7],[77,30,127,10],[78,8,128,4],[78,15,128,11,"_$$_REQUIRE"],[78,26,128,11],[78,27,128,11,"_dependencyMap"],[78,41,128,11],[78,63,128,25,"reverseBuffer"],[78,76,128,38],[78,77,128,39],[78,81,128,43],[78,82,128,44,"getHash"],[78,89,128,51],[78,90,128,52],[78,91,128,53],[78,92,128,54],[78,93,128,55,"toString"],[78,101,128,63],[78,102,128,64],[78,107,128,69],[78,108,128,70],[79,6,129,2],[80,4,129,3],[81,6,129,3,"key"],[81,9,129,3],[82,6,129,3,"value"],[82,11,129,3],[82,13,130,2],[82,22,130,2,"getUTCDate"],[82,32,130,12,"getUTCDate"],[82,33,130,12],[82,35,130,15],[83,8,131,4],[83,12,131,10,"date"],[83,16,131,14],[83,19,131,17],[83,23,131,21,"Date"],[83,27,131,25],[83,28,131,26],[83,29,131,27],[83,30,131,28],[83,31,131,29],[83,32,131,30],[84,8,132,4,"date"],[84,12,132,8],[84,13,132,9,"setUTCSeconds"],[84,26,132,22],[84,27,132,23],[84,31,132,27],[84,32,132,28,"timestamp"],[84,41,132,37],[84,42,132,38],[85,8,133,4],[85,15,133,11,"date"],[85,19,133,15],[86,6,134,2],[87,6,135,2],[88,4,135,2],[89,6,135,2,"key"],[89,9,135,2],[90,6,135,2,"value"],[90,11,135,2],[90,13,136,2],[90,22,136,2,"toBuffer"],[90,30,136,10,"toBuffer"],[90,31,136,11,"headersOnly"],[90,42,136,22],[90,44,136,24],[91,8,137,4],[91,12,137,10,"buffer"],[91,18,137,16],[91,21,137,19,"Buffer"],[91,27,137,25],[91,28,137,26,"allocUnsafe"],[91,39,137,37],[91,40,137,38],[91,44,137,42],[91,45,137,43,"byteLength"],[91,55,137,53],[91,56,137,54,"headersOnly"],[91,67,137,65],[91,68,137,66],[91,69,137,67],[92,8,138,4],[92,12,138,10,"bufferWriter"],[92,24,138,22],[92,27,138,25],[92,32,138,29,"_$$_REQUIRE"],[92,43,138,29],[92,44,138,29,"_dependencyMap"],[92,58,138,29],[92,80,138,43,"BufferWriter"],[92,92,138,55],[92,94,138,56,"buffer"],[92,100,138,62],[92,101,138,63],[93,8,139,4,"bufferWriter"],[93,20,139,16],[93,21,139,17,"writeInt32"],[93,31,139,27],[93,32,139,28],[93,36,139,32],[93,37,139,33,"version"],[93,44,139,40],[93,45,139,41],[94,8,140,4,"bufferWriter"],[94,20,140,16],[94,21,140,17,"writeSlice"],[94,31,140,27],[94,32,140,28],[94,36,140,32],[94,37,140,33,"prevHash"],[94,45,140,41],[94,46,140,42],[95,8,141,4,"bufferWriter"],[95,20,141,16],[95,21,141,17,"writeSlice"],[95,31,141,27],[95,32,141,28],[95,36,141,32],[95,37,141,33,"merkleRoot"],[95,47,141,43],[95,48,141,44],[96,8,142,4,"bufferWriter"],[96,20,142,16],[96,21,142,17,"writeUInt32"],[96,32,142,28],[96,33,142,29],[96,37,142,33],[96,38,142,34,"timestamp"],[96,47,142,43],[96,48,142,44],[97,8,143,4,"bufferWriter"],[97,20,143,16],[97,21,143,17,"writeUInt32"],[97,32,143,28],[97,33,143,29],[97,37,143,33],[97,38,143,34,"bits"],[97,42,143,38],[97,43,143,39],[98,8,144,4,"bufferWriter"],[98,20,144,16],[98,21,144,17,"writeUInt32"],[98,32,144,28],[98,33,144,29],[98,37,144,33],[98,38,144,34,"nonce"],[98,43,144,39],[98,44,144,40],[99,8,145,4],[99,12,145,8,"headersOnly"],[99,23,145,19],[99,27,145,23],[99,28,145,24],[99,32,145,28],[99,33,145,29,"transactions"],[99,45,145,41],[99,47,145,43],[99,54,145,50,"buffer"],[99,60,145,56],[100,8,146,4,"_$$_REQUIRE"],[100,19,146,4],[100,20,146,4,"_dependencyMap"],[100,34,146,4],[100,58,146,12,"encode"],[100,64,146,18],[100,65,146,19],[100,69,146,23],[100,70,146,24,"transactions"],[100,82,146,36],[100,83,146,37,"length"],[100,89,146,43],[100,91,146,45,"buffer"],[100,97,146,51],[100,99,146,53,"bufferWriter"],[100,111,146,65],[100,112,146,66,"offset"],[100,118,146,72],[100,119,146,73],[101,8,147,4,"bufferWriter"],[101,20,147,16],[101,21,147,17,"offset"],[101,27,147,23],[101,31,147,27,"_$$_REQUIRE"],[101,42,147,27],[101,43,147,27,"_dependencyMap"],[101,57,147,27],[101,81,147,35,"encode"],[101,87,147,41],[101,88,147,42,"bytes"],[101,93,147,47],[102,8,148,4],[102,12,148,8],[102,13,148,9,"transactions"],[102,25,148,21],[102,26,148,22,"forEach"],[102,33,148,29],[102,34,148,30],[102,44,148,30,"tx"],[102,46,148,32],[102,48,148,36],[103,10,149,6],[103,14,149,12,"txSize"],[103,20,149,18],[103,23,149,21,"tx"],[103,25,149,23],[103,26,149,24,"byteLength"],[103,36,149,34],[103,37,149,35],[103,38,149,36],[103,39,149,37],[103,40,149,38],[104,10,150,6,"tx"],[104,12,150,8],[104,13,150,9,"toBuffer"],[104,21,150,17],[104,22,150,18,"buffer"],[104,28,150,24],[104,30,150,26,"bufferWriter"],[104,42,150,38],[104,43,150,39,"offset"],[104,49,150,45],[104,50,150,46],[105,10,151,6,"bufferWriter"],[105,22,151,18],[105,23,151,19,"offset"],[105,29,151,25],[105,33,151,29,"txSize"],[105,39,151,35],[106,8,152,4],[106,9,152,5],[106,10,152,6],[107,8,153,4],[107,15,153,11,"buffer"],[107,21,153,17],[108,6,154,2],[109,4,154,3],[110,6,154,3,"key"],[110,9,154,3],[111,6,154,3,"value"],[111,11,154,3],[111,13,155,2],[111,22,155,2,"toHex"],[111,27,155,7,"toHex"],[111,28,155,8,"headersOnly"],[111,39,155,19],[111,41,155,21],[112,8,156,4],[112,15,156,11],[112,19,156,15],[112,20,156,16,"toBuffer"],[112,28,156,24],[112,29,156,25,"headersOnly"],[112,40,156,36],[112,41,156,37],[112,42,156,38,"toString"],[112,50,156,46],[112,51,156,47],[112,56,156,52],[112,57,156,53],[113,6,157,2],[114,4,157,3],[115,6,157,3,"key"],[115,9,157,3],[116,6,157,3,"value"],[116,11,157,3],[116,13,158,2],[116,22,158,2,"checkTxRoots"],[116,34,158,14,"checkTxRoots"],[116,35,158,14],[116,37,158,17],[117,8,159,4],[118,8,160,4],[119,8,161,4],[119,12,161,10,"hasWitnessCommit"],[119,28,161,26],[119,31,161,29],[119,35,161,33],[119,36,161,34,"hasWitnessCommit"],[119,52,161,50],[119,53,161,51],[119,54,161,52],[120,8,162,4],[120,12,162,8],[120,13,162,9,"hasWitnessCommit"],[120,29,162,25],[120,33,162,29],[120,37,162,33],[120,38,162,34,"hasWitness"],[120,48,162,44],[120,49,162,45],[120,50,162,46],[120,52,162,48],[120,59,162,55],[120,64,162,60],[121,8,163,4],[121,15,164,6],[121,19,164,10],[121,20,164,11,"__checkMerkleRoot"],[121,37,164,28],[121,38,164,29],[121,39,164,30],[121,44,165,7,"hasWitnessCommit"],[121,60,165,23],[121,63,165,26],[121,67,165,30],[121,68,165,31,"__checkWitnessCommit"],[121,88,165,51],[121,89,165,52],[121,90,165,53],[121,93,165,56],[121,97,165,60],[121,98,165,61],[122,6,167,2],[123,4,167,3],[124,6,167,3,"key"],[124,9,167,3],[125,6,167,3,"value"],[125,11,167,3],[125,13,168,2],[125,22,168,2,"checkProofOfWork"],[125,38,168,18,"checkProofOfWork"],[125,39,168,18],[125,41,168,21],[126,8,169,4],[126,12,169,10,"hash"],[126,16,169,14],[126,19,169,17,"_$$_REQUIRE"],[126,30,169,17],[126,31,169,17,"_dependencyMap"],[126,45,169,17],[126,67,169,31,"reverseBuffer"],[126,80,169,44],[126,81,169,45],[126,85,169,49],[126,86,169,50,"getHash"],[126,93,169,57],[126,94,169,58],[126,95,169,59],[126,96,169,60],[127,8,170,4],[127,12,170,10,"target"],[127,18,170,16],[127,21,170,19,"Block"],[127,26,170,24],[127,27,170,25,"calculateTarget"],[127,42,170,40],[127,43,170,41],[127,47,170,45],[127,48,170,46,"bits"],[127,52,170,50],[127,53,170,51],[128,8,171,4],[128,15,171,11,"hash"],[128,19,171,15],[128,20,171,16,"compare"],[128,27,171,23],[128,28,171,24,"target"],[128,34,171,30],[128,35,171,31],[128,39,171,35],[128,40,171,36],[129,6,172,2],[130,4,172,3],[131,6,172,3,"key"],[131,9,172,3],[132,6,172,3,"value"],[132,11,172,3],[132,13,173,2],[132,22,173,2,"__checkMerkleRoot"],[132,39,173,19,"__checkMerkleRoot"],[132,40,173,19],[132,42,173,22],[133,8,174,4],[133,12,174,8],[133,13,174,9],[133,17,174,13],[133,18,174,14,"transactions"],[133,30,174,26],[133,32,174,28],[133,38,174,34,"errorMerkleNoTxes"],[133,55,174,51],[134,8,175,4],[134,12,175,10,"actualMerkleRoot"],[134,28,175,26],[134,31,175,29,"Block"],[134,36,175,34],[134,37,175,35,"calculateMerkleRoot"],[134,56,175,54],[134,57,175,55],[134,61,175,59],[134,62,175,60,"transactions"],[134,74,175,72],[134,75,175,73],[135,8,176,4],[135,15,176,11],[135,19,176,15],[135,20,176,16,"merkleRoot"],[135,30,176,26],[135,31,176,27,"compare"],[135,38,176,34],[135,39,176,35,"actualMerkleRoot"],[135,55,176,51],[135,56,176,52],[135,61,176,57],[135,62,176,58],[136,6,177,2],[137,4,177,3],[138,6,177,3,"key"],[138,9,177,3],[139,6,177,3,"value"],[139,11,177,3],[139,13,178,2],[139,22,178,2,"__checkWitnessCommit"],[139,42,178,22,"__checkWitnessCommit"],[139,43,178,22],[139,45,178,25],[140,8,179,4],[140,12,179,8],[140,13,179,9],[140,17,179,13],[140,18,179,14,"transactions"],[140,30,179,26],[140,32,179,28],[140,38,179,34,"errorMerkleNoTxes"],[140,55,179,51],[141,8,180,4],[141,12,180,8],[141,13,180,9],[141,17,180,13],[141,18,180,14,"hasWitnessCommit"],[141,34,180,30],[141,35,180,31],[141,36,180,32],[141,38,180,34],[141,44,180,40,"errorWitnessNotSegwit"],[141,65,180,61],[142,8,181,4],[142,12,181,10,"actualWitnessCommit"],[142,31,181,29],[142,34,181,32,"Block"],[142,39,181,37],[142,40,181,38,"calculateMerkleRoot"],[142,59,181,57],[142,60,182,6],[142,64,182,10],[142,65,182,11,"transactions"],[142,77,182,23],[142,79,183,6],[142,83,184,4],[142,84,184,5],[143,8,185,4],[143,15,185,11],[143,19,185,15],[143,20,185,16,"witnessCommit"],[143,33,185,29],[143,34,185,30,"compare"],[143,41,185,37],[143,42,185,38,"actualWitnessCommit"],[143,61,185,57],[143,62,185,58],[143,67,185,63],[143,68,185,64],[144,6,186,2],[145,4,186,3],[146,6,186,3,"key"],[146,9,186,3],[147,6,186,3,"value"],[147,11,186,3],[147,13,27,2],[147,22,27,9,"fromBuffer"],[147,32,27,19,"fromBuffer"],[147,33,27,20,"buffer"],[147,39,27,26],[147,41,27,28],[148,8,28,4],[148,12,28,8,"buffer"],[148,18,28,14],[148,19,28,15,"length"],[148,25,28,21],[148,28,28,24],[148,30,28,26],[148,32,28,28],[148,38,28,34],[148,42,28,38,"Error"],[148,47,28,43],[148,48,28,44],[148,79,28,75],[148,80,28,76],[149,8,29,4],[149,12,29,10,"bufferReader"],[149,24,29,22],[149,27,29,25],[149,32,29,29,"_$$_REQUIRE"],[149,43,29,29],[149,44,29,29,"_dependencyMap"],[149,58,29,29],[149,80,29,43,"BufferReader"],[149,92,29,55],[149,94,29,56,"buffer"],[149,100,29,62],[149,101,29,63],[150,8,30,4],[150,12,30,10,"block"],[150,17,30,15],[150,20,30,18],[150,24,30,22,"Block"],[150,29,30,27],[150,30,30,28],[150,31,30,29],[151,8,31,4,"block"],[151,13,31,9],[151,14,31,10,"version"],[151,21,31,17],[151,24,31,20,"bufferReader"],[151,36,31,32],[151,37,31,33,"readInt32"],[151,46,31,42],[151,47,31,43],[151,48,31,44],[152,8,32,4,"block"],[152,13,32,9],[152,14,32,10,"prevHash"],[152,22,32,18],[152,25,32,21,"bufferReader"],[152,37,32,33],[152,38,32,34,"readSlice"],[152,47,32,43],[152,48,32,44],[152,50,32,46],[152,51,32,47],[153,8,33,4,"block"],[153,13,33,9],[153,14,33,10,"merkleRoot"],[153,24,33,20],[153,27,33,23,"bufferReader"],[153,39,33,35],[153,40,33,36,"readSlice"],[153,49,33,45],[153,50,33,46],[153,52,33,48],[153,53,33,49],[154,8,34,4,"block"],[154,13,34,9],[154,14,34,10,"timestamp"],[154,23,34,19],[154,26,34,22,"bufferReader"],[154,38,34,34],[154,39,34,35,"readUInt32"],[154,49,34,45],[154,50,34,46],[154,51,34,47],[155,8,35,4,"block"],[155,13,35,9],[155,14,35,10,"bits"],[155,18,35,14],[155,21,35,17,"bufferReader"],[155,33,35,29],[155,34,35,30,"readUInt32"],[155,44,35,40],[155,45,35,41],[155,46,35,42],[156,8,36,4,"block"],[156,13,36,9],[156,14,36,10,"nonce"],[156,19,36,15],[156,22,36,18,"bufferReader"],[156,34,36,30],[156,35,36,31,"readUInt32"],[156,45,36,41],[156,46,36,42],[156,47,36,43],[157,8,37,4],[157,12,37,8,"buffer"],[157,18,37,14],[157,19,37,15,"length"],[157,25,37,21],[157,30,37,26],[157,32,37,28],[157,34,37,30],[157,41,37,37,"block"],[157,46,37,42],[158,8,38,4],[158,12,38,10,"readTransaction"],[158,27,38,25],[158,30,38,28],[158,39,38,10,"readTransaction"],[158,54,38,25,"readTransaction"],[158,55,38,25],[158,57,38,34],[159,10,39,6],[159,14,39,12,"tx"],[159,16,39,14],[159,19,39,17,"_$$_REQUIRE"],[159,30,39,17],[159,31,39,17,"_dependencyMap"],[159,45,39,17],[159,67,39,31,"Transaction"],[159,78,39,42],[159,79,39,43,"fromBuffer"],[159,89,39,53],[159,90,40,8,"bufferReader"],[159,102,40,20],[159,103,40,21,"buffer"],[159,109,40,27],[159,110,40,28,"slice"],[159,115,40,33],[159,116,40,34,"bufferReader"],[159,128,40,46],[159,129,40,47,"offset"],[159,135,40,53],[159,136,40,54],[159,138,41,8],[159,142,42,6],[159,143,42,7],[160,10,43,6,"bufferReader"],[160,22,43,18],[160,23,43,19,"offset"],[160,29,43,25],[160,33,43,29,"tx"],[160,35,43,31],[160,36,43,32,"byteLength"],[160,46,43,42],[160,47,43,43],[160,48,43,44],[161,10,44,6],[161,17,44,13,"tx"],[161,19,44,15],[162,8,45,4],[162,9,45,5],[163,8,46,4],[163,12,46,10,"nTransactions"],[163,25,46,23],[163,28,46,26,"bufferReader"],[163,40,46,38],[163,41,46,39,"readVarInt"],[163,51,46,49],[163,52,46,50],[163,53,46,51],[164,8,47,4,"block"],[164,13,47,9],[164,14,47,10,"transactions"],[164,26,47,22],[164,29,47,25],[164,31,47,27],[165,8,48,4],[165,13,48,9],[165,17,48,13,"i"],[165,18,48,14],[165,21,48,17],[165,22,48,18],[165,24,48,20,"i"],[165,25,48,21],[165,28,48,24,"nTransactions"],[165,41,48,37],[165,43,48,39],[165,45,48,41,"i"],[165,46,48,42],[165,48,48,44],[166,10,49,6],[166,14,49,12,"tx"],[166,16,49,14],[166,19,49,17,"readTransaction"],[166,34,49,32],[166,35,49,33],[166,36,49,34],[167,10,50,6,"block"],[167,15,50,11],[167,16,50,12,"transactions"],[167,28,50,24],[167,29,50,25,"push"],[167,33,50,29],[167,34,50,30,"tx"],[167,36,50,32],[167,37,50,33],[168,8,51,4],[169,8,52,4],[169,12,52,10,"witnessCommit"],[169,25,52,23],[169,28,52,26,"block"],[169,33,52,31],[169,34,52,32,"getWitnessCommit"],[169,50,52,48],[169,51,52,49],[169,52,52,50],[170,8,53,4],[171,8,54,4],[171,12,54,8,"witnessCommit"],[171,25,54,21],[171,27,54,23,"block"],[171,32,54,28],[171,33,54,29,"witnessCommit"],[171,46,54,42],[171,49,54,45,"witnessCommit"],[171,62,54,58],[172,8,55,4],[172,15,55,11,"block"],[172,20,55,16],[173,6,56,2],[174,4,56,3],[175,6,56,3,"key"],[175,9,56,3],[176,6,56,3,"value"],[176,11,56,3],[176,13,57,2],[176,22,57,9,"fromHex"],[176,29,57,16,"fromHex"],[176,30,57,17,"hex"],[176,33,57,20],[176,35,57,22],[177,8,58,4],[177,15,58,11,"Block"],[177,20,58,16],[177,21,58,17,"fromBuffer"],[177,31,58,27],[177,32,58,28,"Buffer"],[177,38,58,34],[177,39,58,35,"from"],[177,43,58,39],[177,44,58,40,"hex"],[177,47,58,43],[177,49,58,45],[177,54,58,50],[177,55,58,51],[177,56,58,52],[178,6,59,2],[179,4,59,3],[180,6,59,3,"key"],[180,9,59,3],[181,6,59,3,"value"],[181,11,59,3],[181,13,60,2],[181,22,60,9,"calculateTarget"],[181,37,60,24,"calculateTarget"],[181,38,60,25,"bits"],[181,42,60,29],[181,44,60,31],[182,8,61,4],[182,12,61,10,"exponent"],[182,20,61,18],[182,23,61,21],[182,24,61,22],[182,25,61,23,"bits"],[182,29,61,27],[182,32,61,30],[182,42,61,40],[182,47,61,45],[182,49,61,47],[182,53,61,51],[182,54,61,52],[183,8,62,4],[183,12,62,10,"mantissa"],[183,20,62,18],[183,23,62,21,"bits"],[183,27,62,25],[183,30,62,28],[183,40,62,38],[184,8,63,4],[184,12,63,10,"target"],[184,18,63,16],[184,21,63,19,"Buffer"],[184,27,63,25],[184,28,63,26,"alloc"],[184,33,63,31],[184,34,63,32],[184,36,63,34],[184,38,63,36],[184,39,63,37],[184,40,63,38],[185,8,64,4,"target"],[185,14,64,10],[185,15,64,11,"writeUIntBE"],[185,26,64,22],[185,27,64,23,"mantissa"],[185,35,64,31],[185,37,64,33],[185,39,64,35],[185,42,64,38,"exponent"],[185,50,64,46],[185,52,64,48],[185,53,64,49],[185,54,64,50],[186,8,65,4],[186,15,65,11,"target"],[186,21,65,17],[187,6,66,2],[188,4,66,3],[189,6,66,3,"key"],[189,9,66,3],[190,6,66,3,"value"],[190,11,66,3],[190,13,67,2],[190,22,67,9,"calculateMerkleRoot"],[190,41,67,28,"calculateMerkleRoot"],[190,42,67,29,"transactions"],[190,54,67,41],[190,56,67,43,"forWitness"],[190,66,67,53],[190,68,67,55],[191,8,68,4,"_$$_REQUIRE"],[191,19,68,4],[191,20,68,4,"_dependencyMap"],[191,34,68,4],[191,52,68,14],[191,53,68,15],[192,10,68,17,"getHash"],[192,17,68,24],[192,19,68,26,"_$$_REQUIRE"],[192,30,68,26],[192,31,68,26,"_dependencyMap"],[192,45,68,26],[192,61,68,32,"Function"],[193,8,68,41],[193,9,68,42],[193,10,68,43],[193,12,68,45,"transactions"],[193,24,68,57],[193,25,68,58],[194,8,69,4],[194,12,69,8,"transactions"],[194,24,69,20],[194,25,69,21,"length"],[194,31,69,27],[194,36,69,32],[194,37,69,33],[194,39,69,35],[194,45,69,41,"errorMerkleNoTxes"],[194,62,69,58],[195,8,70,4],[195,12,70,8,"forWitness"],[195,22,70,18],[195,26,70,22],[195,27,70,23,"txesHaveWitnessCommit"],[195,48,70,44],[195,49,70,45,"transactions"],[195,61,70,57],[195,62,70,58],[195,64,71,6],[195,70,71,12,"errorWitnessNotSegwit"],[195,91,71,33],[196,8,72,4],[196,12,72,10,"hashes"],[196,18,72,16],[196,21,72,19,"transactions"],[196,33,72,31],[196,34,72,32,"map"],[196,37,72,35],[196,38,72,36],[196,48,72,36,"transaction"],[196,59,72,47],[197,10,72,47],[197,17,73,6,"transaction"],[197,28,73,17],[197,29,73,18,"getHash"],[197,36,73,25],[197,37,73,26,"forWitness"],[197,47,73,36],[197,48,73,37],[198,8,73,37],[198,9,74,4],[198,10,74,5],[199,8,75,4],[199,12,75,10,"rootHash"],[199,20,75,18],[199,23,75,21,"_$$_REQUIRE"],[199,34,75,21],[199,35,75,21,"_dependencyMap"],[199,49,75,21],[199,77,75,36,"hashes"],[199,83,75,42],[199,85,75,44,"_$$_REQUIRE"],[199,96,75,44],[199,97,75,44,"_dependencyMap"],[199,111,75,44],[199,128,75,52,"hash256"],[199,135,75,59],[199,136,75,60],[200,8,76,4],[200,15,76,11,"forWitness"],[200,25,76,21],[200,28,77,8,"_$$_REQUIRE"],[200,39,77,8],[200,40,77,8,"_dependencyMap"],[200,54,77,8],[200,71,77,16,"hash256"],[200,78,77,23],[200,79,78,10,"Buffer"],[200,85,78,16],[200,86,78,17,"concat"],[200,92,78,23],[200,93,78,24],[200,94,78,25,"rootHash"],[200,102,78,33],[200,104,78,35,"transactions"],[200,116,78,47],[200,117,78,48],[200,118,78,49],[200,119,78,50],[200,120,78,51,"ins"],[200,123,78,54],[200,124,78,55],[200,125,78,56],[200,126,78,57],[200,127,78,58,"witness"],[200,134,78,65],[200,135,78,66],[200,136,78,67],[200,137,78,68],[200,138,78,69],[200,139,79,8],[200,140,79,9],[200,143,80,8,"rootHash"],[200,151,80,16],[201,6,81,2],[202,4,81,3],[203,2,81,3],[204,2,188,0,"exports"],[204,9,188,7],[204,10,188,8,"Block"],[204,15,188,13],[204,18,188,16,"Block"],[204,23,188,21],[205,2,189,0],[205,11,189,9,"txesHaveWitnessCommit"],[205,32,189,30,"txesHaveWitnessCommit"],[205,33,189,31,"transactions"],[205,45,189,43],[205,47,189,45],[206,4,190,2],[206,11,191,4,"transactions"],[206,23,191,16],[206,35,191,28,"Array"],[206,40,191,33],[206,44,192,4,"transactions"],[206,56,192,16],[206,57,192,17],[206,58,192,18],[206,59,192,19],[206,63,193,4,"transactions"],[206,75,193,16],[206,76,193,17],[206,77,193,18],[206,78,193,19],[206,79,193,20,"ins"],[206,82,193,23],[206,86,194,4,"transactions"],[206,98,194,16],[206,99,194,17],[206,100,194,18],[206,101,194,19],[206,102,194,20,"ins"],[206,105,194,23],[206,117,194,35,"Array"],[206,122,194,40],[206,126,195,4,"transactions"],[206,138,195,16],[206,139,195,17],[206,140,195,18],[206,141,195,19],[206,142,195,20,"ins"],[206,145,195,23],[206,146,195,24],[206,147,195,25],[206,148,195,26],[206,152,196,4,"transactions"],[206,164,196,16],[206,165,196,17],[206,166,196,18],[206,167,196,19],[206,168,196,20,"ins"],[206,171,196,23],[206,172,196,24],[206,173,196,25],[206,174,196,26],[206,175,196,27,"witness"],[206,182,196,34],[206,186,197,4,"transactions"],[206,198,197,16],[206,199,197,17],[206,200,197,18],[206,201,197,19],[206,202,197,20,"ins"],[206,205,197,23],[206,206,197,24],[206,207,197,25],[206,208,197,26],[206,209,197,27,"witness"],[206,216,197,34],[206,228,197,46,"Array"],[206,233,197,51],[206,237,198,4,"transactions"],[206,249,198,16],[206,250,198,17],[206,251,198,18],[206,252,198,19],[206,253,198,20,"ins"],[206,256,198,23],[206,257,198,24],[206,258,198,25],[206,259,198,26],[206,260,198,27,"witness"],[206,267,198,34],[206,268,198,35,"length"],[206,274,198,41],[206,277,198,44],[206,278,198,45],[207,2,200,0],[208,2,201,0],[208,11,201,9,"anyTxHasWitness"],[208,26,201,24,"anyTxHasWitness"],[208,27,201,25,"transactions"],[208,39,201,37],[208,41,201,39],[209,4,202,2],[209,11,203,4,"transactions"],[209,23,203,16],[209,35,203,28,"Array"],[209,40,203,33],[209,44,204,4,"transactions"],[209,56,204,16],[209,57,204,17,"some"],[209,61,204,21],[209,62,205,6],[209,72,205,6,"tx"],[209,74,205,8],[210,6,205,8],[210,13,206,8],[210,20,206,15,"tx"],[210,22,206,17],[210,27,206,22],[210,35,206,30],[210,39,207,8,"tx"],[210,41,207,10],[210,42,207,11,"ins"],[210,45,207,14],[210,57,207,26,"Array"],[210,62,207,31],[210,66,208,8,"tx"],[210,68,208,10],[210,69,208,11,"ins"],[210,72,208,14],[210,73,208,15,"some"],[210,77,208,19],[210,78,209,10],[210,88,209,10,"input"],[210,93,209,15],[211,8,209,15],[211,15,210,12],[211,22,210,19,"input"],[211,27,210,24],[211,32,210,29],[211,40,210,37],[211,44,211,12,"input"],[211,49,211,17],[211,50,211,18,"witness"],[211,57,211,25],[211,69,211,37,"Array"],[211,74,211,42],[211,78,212,12,"input"],[211,83,212,17],[211,84,212,18,"witness"],[211,91,212,25],[211,92,212,26,"length"],[211,98,212,32],[211,101,212,35],[211,102,212,36],[212,6,212,36],[212,7,213,8],[212,8,213,9],[213,4,213,9],[213,5,214,4],[213,6,214,5],[214,2,216,0],[215,0,216,1],[215,3]],"functionMap":{"names":["<global>","Block","Block#constructor","Block.fromBuffer","readTransaction","Block.fromHex","Block.calculateTarget","Block.calculateMerkleRoot","transactions.map$argument_0","Block#getWitnessCommit","transactions._.outs.filter$argument_0","transactions._.outs.filter.map$argument_0","Block#hasWitnessCommit","Block#hasWitness","Block#weight","Block#byteLength","transactions.reduce$argument_0","Block#getHash","Block#getId","Block#getUTCDate","Block#toBuffer","transactions.forEach$argument_0","Block#toHex","Block#checkTxRoots","Block#checkProofOfWork","Block#__checkMerkleRoot","Block#__checkWitnessCommit","txesHaveWitnessCommit","anyTxHasWitness","transactions.some$argument_0","tx.ins.some$argument_0"],"mappings":"AAA;ACe;ECC;GDS;EEC;4BCW;KDO;GFW;EIC;GJE;EKC;GLM;EMC;oCCK;qCDC;GNQ;EQC;cCO;yEDC;WEE,8BF;GRM;EWC;GXQ;EYC;GZE;EaC;GbI;EcC;+BCK,wCD;GdE;EgBC;GhBE;EiBC;GjBE;EkBC;GlBI;EmBE;8BCY;KDI;GnBE;EqBC;GrBE;EsBC;GtBS;EuBC;GvBI;EwBC;GxBI;EyBC;GzBQ;CDC;A2BE;C3BW;A4BC;MCI;UCI;oCDG;SDC;C5BG"}},"type":"js/module"}]}