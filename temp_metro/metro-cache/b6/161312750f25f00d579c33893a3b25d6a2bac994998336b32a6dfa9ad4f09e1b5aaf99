{"dependencies":[{"name":"stackframe","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":33,"index":369},"end":{"line":9,"column":54,"index":390}}],"key":"dZPDJKyYJyrQnzdEmzWiowCBMas="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (root, factory) {\n    'use strict';\n\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n      define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n      module.exports = factory(_$$_REQUIRE(_dependencyMap[0], \"stackframe\"));\n    } else {\n      root.ErrorStackParser = factory(root.StackFrame);\n    }\n  })(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n    return {\n      /**\n       * Given an Error object, extract the most information from it.\n       *\n       * @param {Error} error object\n       * @return {Array} of StackFrames\n       */\n      parse: function ErrorStackParser$$parse(error) {\n        if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n          return this.parseOpera(error);\n        } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n          return this.parseV8OrIE(error);\n        } else if (error.stack) {\n          return this.parseFFOrSafari(error);\n        } else {\n          throw new Error('Cannot parse given Error object');\n        }\n      },\n      // Separate line and column numbers from a string of the form: (URI:Line:Column)\n      extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n        // Fail-fast but return locations like \"(native)\"\n        if (urlLike.indexOf(':') === -1) {\n          return [urlLike];\n        }\n        var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n        var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n        return [parts[1], parts[2] || undefined, parts[3] || undefined];\n      },\n      parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n        var filtered = error.stack.split('\\n').filter(function (line) {\n          return !!line.match(CHROME_IE_STACK_REGEXP);\n        }, this);\n        return filtered.map(function (line) {\n          if (line.indexOf('(eval ') > -1) {\n            // Throw away eval information until we implement stacktrace.js/stackframe#8\n            line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n          }\n          var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n          // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n          // case it has spaces in it, as the string is split on \\s+ later on\n          var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n          // remove the parenthesized location from the line, if it was matched\n          sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n          // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n          // because this line doesn't have function name\n          var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n          var functionName = location && sanitizedLine || undefined;\n          var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n          return new StackFrame({\n            functionName: functionName,\n            fileName: fileName,\n            lineNumber: locationParts[1],\n            columnNumber: locationParts[2],\n            source: line\n          });\n        }, this);\n      },\n      parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n        var filtered = error.stack.split('\\n').filter(function (line) {\n          return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n        }, this);\n        return filtered.map(function (line) {\n          // Throw away eval information until we implement stacktrace.js/stackframe#8\n          if (line.indexOf(' > eval') > -1) {\n            line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n          }\n          if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n            // Safari eval frames only have function names and nothing else\n            return new StackFrame({\n              functionName: line\n            });\n          } else {\n            var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n            var matches = line.match(functionNameRegex);\n            var functionName = matches && matches[1] ? matches[1] : undefined;\n            var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n            return new StackFrame({\n              functionName: functionName,\n              fileName: locationParts[0],\n              lineNumber: locationParts[1],\n              columnNumber: locationParts[2],\n              source: line\n            });\n          }\n        }, this);\n      },\n      parseOpera: function ErrorStackParser$$parseOpera(e) {\n        if (!e.stacktrace || e.message.indexOf('\\n') > -1 && e.message.split('\\n').length > e.stacktrace.split('\\n').length) {\n          return this.parseOpera9(e);\n        } else if (!e.stack) {\n          return this.parseOpera10(e);\n        } else {\n          return this.parseOpera11(e);\n        }\n      },\n      parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n        var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n        var lines = e.message.split('\\n');\n        var result = [];\n        for (var i = 2, len = lines.length; i < len; i += 2) {\n          var match = lineRE.exec(lines[i]);\n          if (match) {\n            result.push(new StackFrame({\n              fileName: match[2],\n              lineNumber: match[1],\n              source: lines[i]\n            }));\n          }\n        }\n        return result;\n      },\n      parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n        var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n        var lines = e.stacktrace.split('\\n');\n        var result = [];\n        for (var i = 0, len = lines.length; i < len; i += 2) {\n          var match = lineRE.exec(lines[i]);\n          if (match) {\n            result.push(new StackFrame({\n              functionName: match[3] || undefined,\n              fileName: match[2],\n              lineNumber: match[1],\n              source: lines[i]\n            }));\n          }\n        }\n        return result;\n      },\n      // Opera 10.65+ Error.stack very similar to FF/Safari\n      parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n        var filtered = error.stack.split('\\n').filter(function (line) {\n          return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n        }, this);\n        return filtered.map(function (line) {\n          var tokens = line.split('@');\n          var locationParts = this.extractLocation(tokens.pop());\n          var functionCall = tokens.shift() || '';\n          var functionName = functionCall.replace(/<anonymous function(: (\\w+))?>/, '$2').replace(/\\([^)]*\\)/g, '') || undefined;\n          var argsRaw;\n          if (functionCall.match(/\\(([^)]*)\\)/)) {\n            argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n          }\n          var args = argsRaw === undefined || argsRaw === '[arguments not available]' ? undefined : argsRaw.split(',');\n          return new StackFrame({\n            functionName: functionName,\n            args: args,\n            fileName: locationParts[0],\n            lineNumber: locationParts[1],\n            columnNumber: locationParts[2],\n            source: line\n          });\n        }, this);\n      }\n    };\n  });\n});","lineCount":179,"map":[[2,2,1,1],[2,13,1,10,"root"],[2,17,1,14],[2,19,1,16,"factory"],[2,26,1,23],[2,28,1,25],[3,4,2,4],[3,16,2,16],[5,4,3,4],[7,4,5,4],[8,4,6,4],[8,8,6,8],[8,15,6,15,"define"],[8,21,6,21],[8,26,6,26],[8,36,6,36],[8,40,6,40,"define"],[8,46,6,46],[8,47,6,47,"amd"],[8,50,6,50],[8,52,6,52],[9,6,7,8,"define"],[9,12,7,14],[9,13,7,15],[9,33,7,35],[9,35,7,37],[9,36,7,38],[9,48,7,50],[9,49,7,51],[9,51,7,53,"factory"],[9,58,7,60],[9,59,7,61],[10,4,8,4],[10,5,8,5],[10,11,8,11],[10,15,8,15],[10,22,8,22,"exports"],[10,29,8,29],[10,34,8,34],[10,42,8,42],[10,44,8,44],[11,6,9,8,"module"],[11,12,9,14],[11,13,9,15,"exports"],[11,20,9,22],[11,23,9,25,"factory"],[11,30,9,32],[11,31,9,33,"require"],[11,42,9,40],[11,43,9,40,"_dependencyMap"],[11,57,9,40],[11,74,9,53],[11,75,9,54],[11,76,9,55],[12,4,10,4],[12,5,10,5],[12,11,10,11],[13,6,11,8,"root"],[13,10,11,12],[13,11,11,13,"ErrorStackParser"],[13,27,11,29],[13,30,11,32,"factory"],[13,37,11,39],[13,38,11,40,"root"],[13,42,11,44],[13,43,11,45,"StackFrame"],[13,53,11,55],[13,54,11,56],[14,4,12,4],[15,2,13,0],[15,3,13,1],[15,5,13,2],[15,9,13,6],[15,11,13,8],[15,20,13,17,"ErrorStackParser"],[15,36,13,33,"ErrorStackParser"],[15,37,13,34,"StackFrame"],[15,47,13,44],[15,49,13,46],[16,4,14,4],[16,16,14,16],[18,4,16,4],[18,8,16,8,"FIREFOX_SAFARI_STACK_REGEXP"],[18,35,16,35],[18,38,16,38],[18,52,16,52],[19,4,17,4],[19,8,17,8,"CHROME_IE_STACK_REGEXP"],[19,30,17,30],[19,33,17,33],[19,65,17,65],[20,4,18,4],[20,8,18,8,"SAFARI_NATIVE_CODE_REGEXP"],[20,33,18,33],[20,36,18,36],[20,65,18,65],[21,4,20,4],[21,11,20,11],[22,6,21,8],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,6,27,8,"parse"],[28,11,27,13],[28,13,27,15],[28,22,27,24,"ErrorStackParser$$parse"],[28,45,27,47,"ErrorStackParser$$parse"],[28,46,27,48,"error"],[28,51,27,53],[28,53,27,55],[29,8,28,12],[29,12,28,16],[29,19,28,23,"error"],[29,24,28,28],[29,25,28,29,"stacktrace"],[29,35,28,39],[29,40,28,44],[29,51,28,55],[29,55,28,59],[29,62,28,66,"error"],[29,67,28,71],[29,68,28,72],[29,85,28,89],[29,86,28,90],[29,91,28,95],[29,102,28,106],[29,104,28,108],[30,10,29,16],[30,17,29,23],[30,21,29,27],[30,22,29,28,"parseOpera"],[30,32,29,38],[30,33,29,39,"error"],[30,38,29,44],[30,39,29,45],[31,8,30,12],[31,9,30,13],[31,15,30,19],[31,19,30,23,"error"],[31,24,30,28],[31,25,30,29,"stack"],[31,30,30,34],[31,34,30,38,"error"],[31,39,30,43],[31,40,30,44,"stack"],[31,45,30,49],[31,46,30,50,"match"],[31,51,30,55],[31,52,30,56,"CHROME_IE_STACK_REGEXP"],[31,74,30,78],[31,75,30,79],[31,77,30,81],[32,10,31,16],[32,17,31,23],[32,21,31,27],[32,22,31,28,"parseV8OrIE"],[32,33,31,39],[32,34,31,40,"error"],[32,39,31,45],[32,40,31,46],[33,8,32,12],[33,9,32,13],[33,15,32,19],[33,19,32,23,"error"],[33,24,32,28],[33,25,32,29,"stack"],[33,30,32,34],[33,32,32,36],[34,10,33,16],[34,17,33,23],[34,21,33,27],[34,22,33,28,"parseFFOrSafari"],[34,37,33,43],[34,38,33,44,"error"],[34,43,33,49],[34,44,33,50],[35,8,34,12],[35,9,34,13],[35,15,34,19],[36,10,35,16],[36,16,35,22],[36,20,35,26,"Error"],[36,25,35,31],[36,26,35,32],[36,59,35,65],[36,60,35,66],[37,8,36,12],[38,6,37,8],[38,7,37,9],[39,6,39,8],[40,6,40,8,"extractLocation"],[40,21,40,23],[40,23,40,25],[40,32,40,34,"ErrorStackParser$$extractLocation"],[40,65,40,67,"ErrorStackParser$$extractLocation"],[40,66,40,68,"urlLike"],[40,73,40,75],[40,75,40,77],[41,8,41,12],[42,8,42,12],[42,12,42,16,"urlLike"],[42,19,42,23],[42,20,42,24,"indexOf"],[42,27,42,31],[42,28,42,32],[42,31,42,35],[42,32,42,36],[42,37,42,41],[42,38,42,42],[42,39,42,43],[42,41,42,45],[43,10,43,16],[43,17,43,23],[43,18,43,24,"urlLike"],[43,25,43,31],[43,26,43,32],[44,8,44,12],[45,8,46,12],[45,12,46,16,"regExp"],[45,18,46,22],[45,21,46,25],[45,51,46,55],[46,8,47,12],[46,12,47,16,"parts"],[46,17,47,21],[46,20,47,24,"regExp"],[46,26,47,30],[46,27,47,31,"exec"],[46,31,47,35],[46,32,47,36,"urlLike"],[46,39,47,43],[46,40,47,44,"replace"],[46,47,47,51],[46,48,47,52],[46,55,47,59],[46,57,47,61],[46,59,47,63],[46,60,47,64],[46,61,47,65],[47,8,48,12],[47,15,48,19],[47,16,48,20,"parts"],[47,21,48,25],[47,22,48,26],[47,23,48,27],[47,24,48,28],[47,26,48,30,"parts"],[47,31,48,35],[47,32,48,36],[47,33,48,37],[47,34,48,38],[47,38,48,42,"undefined"],[47,47,48,51],[47,49,48,53,"parts"],[47,54,48,58],[47,55,48,59],[47,56,48,60],[47,57,48,61],[47,61,48,65,"undefined"],[47,70,48,74],[47,71,48,75],[48,6,49,8],[48,7,49,9],[49,6,51,8,"parseV8OrIE"],[49,17,51,19],[49,19,51,21],[49,28,51,30,"ErrorStackParser$$parseV8OrIE"],[49,57,51,59,"ErrorStackParser$$parseV8OrIE"],[49,58,51,60,"error"],[49,63,51,65],[49,65,51,67],[50,8,52,12],[50,12,52,16,"filtered"],[50,20,52,24],[50,23,52,27,"error"],[50,28,52,32],[50,29,52,33,"stack"],[50,34,52,38],[50,35,52,39,"split"],[50,40,52,44],[50,41,52,45],[50,45,52,49],[50,46,52,50],[50,47,52,51,"filter"],[50,53,52,57],[50,54,52,58],[50,64,52,67,"line"],[50,68,52,71],[50,70,52,73],[51,10,53,16],[51,17,53,23],[51,18,53,24],[51,19,53,25,"line"],[51,23,53,29],[51,24,53,30,"match"],[51,29,53,35],[51,30,53,36,"CHROME_IE_STACK_REGEXP"],[51,52,53,58],[51,53,53,59],[52,8,54,12],[52,9,54,13],[52,11,54,15],[52,15,54,19],[52,16,54,20],[53,8,56,12],[53,15,56,19,"filtered"],[53,23,56,27],[53,24,56,28,"map"],[53,27,56,31],[53,28,56,32],[53,38,56,41,"line"],[53,42,56,45],[53,44,56,47],[54,10,57,16],[54,14,57,20,"line"],[54,18,57,24],[54,19,57,25,"indexOf"],[54,26,57,32],[54,27,57,33],[54,35,57,41],[54,36,57,42],[54,39,57,45],[54,40,57,46],[54,41,57,47],[54,43,57,49],[55,12,58,20],[56,12,59,20,"line"],[56,16,59,24],[56,19,59,27,"line"],[56,23,59,31],[56,24,59,32,"replace"],[56,31,59,39],[56,32,59,40],[56,44,59,52],[56,46,59,54],[56,52,59,60],[56,53,59,61],[56,54,59,62,"replace"],[56,61,59,69],[56,62,59,70],[56,90,59,98],[56,92,59,100],[56,94,59,102],[56,95,59,103],[57,10,60,16],[58,10,61,16],[58,14,61,20,"sanitizedLine"],[58,27,61,33],[58,30,61,36,"line"],[58,34,61,40],[58,35,61,41,"replace"],[58,42,61,48],[58,43,61,49],[58,49,61,55],[58,51,61,57],[58,53,61,59],[58,54,61,60],[58,55,61,61,"replace"],[58,62,61,68],[58,63,61,69],[58,77,61,83],[58,79,61,85],[58,82,61,88],[58,83,61,89],[58,84,61,90,"replace"],[58,91,61,97],[58,92,61,98],[58,101,61,107],[58,103,61,109],[58,105,61,111],[58,106,61,112],[60,10,63,16],[61,10,64,16],[62,10,65,16],[62,14,65,20,"location"],[62,22,65,28],[62,25,65,31,"sanitizedLine"],[62,38,65,44],[62,39,65,45,"match"],[62,44,65,50],[62,45,65,51],[62,57,65,63],[62,58,65,64],[64,10,67,16],[65,10,68,16,"sanitizedLine"],[65,23,68,29],[65,26,68,32,"location"],[65,34,68,40],[65,37,68,43,"sanitizedLine"],[65,50,68,56],[65,51,68,57,"replace"],[65,58,68,64],[65,59,68,65,"location"],[65,67,68,73],[65,68,68,74],[65,69,68,75],[65,70,68,76],[65,72,68,78],[65,74,68,80],[65,75,68,81],[65,78,68,84,"sanitizedLine"],[65,91,68,97],[67,10,70,16],[68,10,71,16],[69,10,72,16],[69,14,72,20,"locationParts"],[69,27,72,33],[69,30,72,36],[69,34,72,40],[69,35,72,41,"extractLocation"],[69,50,72,56],[69,51,72,57,"location"],[69,59,72,65],[69,62,72,68,"location"],[69,70,72,76],[69,71,72,77],[69,72,72,78],[69,73,72,79],[69,76,72,82,"sanitizedLine"],[69,89,72,95],[69,90,72,96],[70,10,73,16],[70,14,73,20,"functionName"],[70,26,73,32],[70,29,73,35,"location"],[70,37,73,43],[70,41,73,47,"sanitizedLine"],[70,54,73,60],[70,58,73,64,"undefined"],[70,67,73,73],[71,10,74,16],[71,14,74,20,"fileName"],[71,22,74,28],[71,25,74,31],[71,26,74,32],[71,32,74,38],[71,34,74,40],[71,47,74,53],[71,48,74,54],[71,49,74,55,"indexOf"],[71,56,74,62],[71,57,74,63,"locationParts"],[71,70,74,76],[71,71,74,77],[71,72,74,78],[71,73,74,79],[71,74,74,80],[71,77,74,83],[71,78,74,84],[71,79,74,85],[71,82,74,88,"undefined"],[71,91,74,97],[71,94,74,100,"locationParts"],[71,107,74,113],[71,108,74,114],[71,109,74,115],[71,110,74,116],[72,10,76,16],[72,17,76,23],[72,21,76,27,"StackFrame"],[72,31,76,37],[72,32,76,38],[73,12,77,20,"functionName"],[73,24,77,32],[73,26,77,34,"functionName"],[73,38,77,46],[74,12,78,20,"fileName"],[74,20,78,28],[74,22,78,30,"fileName"],[74,30,78,38],[75,12,79,20,"lineNumber"],[75,22,79,30],[75,24,79,32,"locationParts"],[75,37,79,45],[75,38,79,46],[75,39,79,47],[75,40,79,48],[76,12,80,20,"columnNumber"],[76,24,80,32],[76,26,80,34,"locationParts"],[76,39,80,47],[76,40,80,48],[76,41,80,49],[76,42,80,50],[77,12,81,20,"source"],[77,18,81,26],[77,20,81,28,"line"],[78,10,82,16],[78,11,82,17],[78,12,82,18],[79,8,83,12],[79,9,83,13],[79,11,83,15],[79,15,83,19],[79,16,83,20],[80,6,84,8],[80,7,84,9],[81,6,86,8,"parseFFOrSafari"],[81,21,86,23],[81,23,86,25],[81,32,86,34,"ErrorStackParser$$parseFFOrSafari"],[81,65,86,67,"ErrorStackParser$$parseFFOrSafari"],[81,66,86,68,"error"],[81,71,86,73],[81,73,86,75],[82,8,87,12],[82,12,87,16,"filtered"],[82,20,87,24],[82,23,87,27,"error"],[82,28,87,32],[82,29,87,33,"stack"],[82,34,87,38],[82,35,87,39,"split"],[82,40,87,44],[82,41,87,45],[82,45,87,49],[82,46,87,50],[82,47,87,51,"filter"],[82,53,87,57],[82,54,87,58],[82,64,87,67,"line"],[82,68,87,71],[82,70,87,73],[83,10,88,16],[83,17,88,23],[83,18,88,24,"line"],[83,22,88,28],[83,23,88,29,"match"],[83,28,88,34],[83,29,88,35,"SAFARI_NATIVE_CODE_REGEXP"],[83,54,88,60],[83,55,88,61],[84,8,89,12],[84,9,89,13],[84,11,89,15],[84,15,89,19],[84,16,89,20],[85,8,91,12],[85,15,91,19,"filtered"],[85,23,91,27],[85,24,91,28,"map"],[85,27,91,31],[85,28,91,32],[85,38,91,41,"line"],[85,42,91,45],[85,44,91,47],[86,10,92,16],[87,10,93,16],[87,14,93,20,"line"],[87,18,93,24],[87,19,93,25,"indexOf"],[87,26,93,32],[87,27,93,33],[87,36,93,42],[87,37,93,43],[87,40,93,46],[87,41,93,47],[87,42,93,48],[87,44,93,50],[88,12,94,20,"line"],[88,16,94,24],[88,19,94,27,"line"],[88,23,94,31],[88,24,94,32,"replace"],[88,31,94,39],[88,32,94,40],[88,82,94,90],[88,84,94,92],[88,89,94,97],[88,90,94,98],[89,10,95,16],[90,10,97,16],[90,14,97,20,"line"],[90,18,97,24],[90,19,97,25,"indexOf"],[90,26,97,32],[90,27,97,33],[90,30,97,36],[90,31,97,37],[90,36,97,42],[90,37,97,43],[90,38,97,44],[90,42,97,48,"line"],[90,46,97,52],[90,47,97,53,"indexOf"],[90,54,97,60],[90,55,97,61],[90,58,97,64],[90,59,97,65],[90,64,97,70],[90,65,97,71],[90,66,97,72],[90,68,97,74],[91,12,98,20],[92,12,99,20],[92,19,99,27],[92,23,99,31,"StackFrame"],[92,33,99,41],[92,34,99,42],[93,14,100,24,"functionName"],[93,26,100,36],[93,28,100,38,"line"],[94,12,101,20],[94,13,101,21],[94,14,101,22],[95,10,102,16],[95,11,102,17],[95,17,102,23],[96,12,103,20],[96,16,103,24,"functionNameRegex"],[96,33,103,41],[96,36,103,44],[96,64,103,72],[97,12,104,20],[97,16,104,24,"matches"],[97,23,104,31],[97,26,104,34,"line"],[97,30,104,38],[97,31,104,39,"match"],[97,36,104,44],[97,37,104,45,"functionNameRegex"],[97,54,104,62],[97,55,104,63],[98,12,105,20],[98,16,105,24,"functionName"],[98,28,105,36],[98,31,105,39,"matches"],[98,38,105,46],[98,42,105,50,"matches"],[98,49,105,57],[98,50,105,58],[98,51,105,59],[98,52,105,60],[98,55,105,63,"matches"],[98,62,105,70],[98,63,105,71],[98,64,105,72],[98,65,105,73],[98,68,105,76,"undefined"],[98,77,105,85],[99,12,106,20],[99,16,106,24,"locationParts"],[99,29,106,37],[99,32,106,40],[99,36,106,44],[99,37,106,45,"extractLocation"],[99,52,106,60],[99,53,106,61,"line"],[99,57,106,65],[99,58,106,66,"replace"],[99,65,106,73],[99,66,106,74,"functionNameRegex"],[99,83,106,91],[99,85,106,93],[99,87,106,95],[99,88,106,96],[99,89,106,97],[100,12,108,20],[100,19,108,27],[100,23,108,31,"StackFrame"],[100,33,108,41],[100,34,108,42],[101,14,109,24,"functionName"],[101,26,109,36],[101,28,109,38,"functionName"],[101,40,109,50],[102,14,110,24,"fileName"],[102,22,110,32],[102,24,110,34,"locationParts"],[102,37,110,47],[102,38,110,48],[102,39,110,49],[102,40,110,50],[103,14,111,24,"lineNumber"],[103,24,111,34],[103,26,111,36,"locationParts"],[103,39,111,49],[103,40,111,50],[103,41,111,51],[103,42,111,52],[104,14,112,24,"columnNumber"],[104,26,112,36],[104,28,112,38,"locationParts"],[104,41,112,51],[104,42,112,52],[104,43,112,53],[104,44,112,54],[105,14,113,24,"source"],[105,20,113,30],[105,22,113,32,"line"],[106,12,114,20],[106,13,114,21],[106,14,114,22],[107,10,115,16],[108,8,116,12],[108,9,116,13],[108,11,116,15],[108,15,116,19],[108,16,116,20],[109,6,117,8],[109,7,117,9],[110,6,119,8,"parseOpera"],[110,16,119,18],[110,18,119,20],[110,27,119,29,"ErrorStackParser$$parseOpera"],[110,55,119,57,"ErrorStackParser$$parseOpera"],[110,56,119,58,"e"],[110,57,119,59],[110,59,119,61],[111,8,120,12],[111,12,120,16],[111,13,120,17,"e"],[111,14,120,18],[111,15,120,19,"stacktrace"],[111,25,120,29],[111,29,120,34,"e"],[111,30,120,35],[111,31,120,36,"message"],[111,38,120,43],[111,39,120,44,"indexOf"],[111,46,120,51],[111,47,120,52],[111,51,120,56],[111,52,120,57],[111,55,120,60],[111,56,120,61],[111,57,120,62],[111,61,121,16,"e"],[111,62,121,17],[111,63,121,18,"message"],[111,70,121,25],[111,71,121,26,"split"],[111,76,121,31],[111,77,121,32],[111,81,121,36],[111,82,121,37],[111,83,121,38,"length"],[111,89,121,44],[111,92,121,47,"e"],[111,93,121,48],[111,94,121,49,"stacktrace"],[111,104,121,59],[111,105,121,60,"split"],[111,110,121,65],[111,111,121,66],[111,115,121,70],[111,116,121,71],[111,117,121,72,"length"],[111,123,121,79],[111,125,121,81],[112,10,122,16],[112,17,122,23],[112,21,122,27],[112,22,122,28,"parseOpera9"],[112,33,122,39],[112,34,122,40,"e"],[112,35,122,41],[112,36,122,42],[113,8,123,12],[113,9,123,13],[113,15,123,19],[113,19,123,23],[113,20,123,24,"e"],[113,21,123,25],[113,22,123,26,"stack"],[113,27,123,31],[113,29,123,33],[114,10,124,16],[114,17,124,23],[114,21,124,27],[114,22,124,28,"parseOpera10"],[114,34,124,40],[114,35,124,41,"e"],[114,36,124,42],[114,37,124,43],[115,8,125,12],[115,9,125,13],[115,15,125,19],[116,10,126,16],[116,17,126,23],[116,21,126,27],[116,22,126,28,"parseOpera11"],[116,34,126,40],[116,35,126,41,"e"],[116,36,126,42],[116,37,126,43],[117,8,127,12],[118,6,128,8],[118,7,128,9],[119,6,130,8,"parseOpera9"],[119,17,130,19],[119,19,130,21],[119,28,130,30,"ErrorStackParser$$parseOpera9"],[119,57,130,59,"ErrorStackParser$$parseOpera9"],[119,58,130,60,"e"],[119,59,130,61],[119,61,130,63],[120,8,131,12],[120,12,131,16,"lineRE"],[120,18,131,22],[120,21,131,25],[120,56,131,60],[121,8,132,12],[121,12,132,16,"lines"],[121,17,132,21],[121,20,132,24,"e"],[121,21,132,25],[121,22,132,26,"message"],[121,29,132,33],[121,30,132,34,"split"],[121,35,132,39],[121,36,132,40],[121,40,132,44],[121,41,132,45],[122,8,133,12],[122,12,133,16,"result"],[122,18,133,22],[122,21,133,25],[122,23,133,27],[123,8,135,12],[123,13,135,17],[123,17,135,21,"i"],[123,18,135,22],[123,21,135,25],[123,22,135,26],[123,24,135,28,"len"],[123,27,135,31],[123,30,135,34,"lines"],[123,35,135,39],[123,36,135,40,"length"],[123,42,135,46],[123,44,135,48,"i"],[123,45,135,49],[123,48,135,52,"len"],[123,51,135,55],[123,53,135,57,"i"],[123,54,135,58],[123,58,135,62],[123,59,135,63],[123,61,135,65],[124,10,136,16],[124,14,136,20,"match"],[124,19,136,25],[124,22,136,28,"lineRE"],[124,28,136,34],[124,29,136,35,"exec"],[124,33,136,39],[124,34,136,40,"lines"],[124,39,136,45],[124,40,136,46,"i"],[124,41,136,47],[124,42,136,48],[124,43,136,49],[125,10,137,16],[125,14,137,20,"match"],[125,19,137,25],[125,21,137,27],[126,12,138,20,"result"],[126,18,138,26],[126,19,138,27,"push"],[126,23,138,31],[126,24,138,32],[126,28,138,36,"StackFrame"],[126,38,138,46],[126,39,138,47],[127,14,139,24,"fileName"],[127,22,139,32],[127,24,139,34,"match"],[127,29,139,39],[127,30,139,40],[127,31,139,41],[127,32,139,42],[128,14,140,24,"lineNumber"],[128,24,140,34],[128,26,140,36,"match"],[128,31,140,41],[128,32,140,42],[128,33,140,43],[128,34,140,44],[129,14,141,24,"source"],[129,20,141,30],[129,22,141,32,"lines"],[129,27,141,37],[129,28,141,38,"i"],[129,29,141,39],[130,12,142,20],[130,13,142,21],[130,14,142,22],[130,15,142,23],[131,10,143,16],[132,8,144,12],[133,8,146,12],[133,15,146,19,"result"],[133,21,146,25],[134,6,147,8],[134,7,147,9],[135,6,149,8,"parseOpera10"],[135,18,149,20],[135,20,149,22],[135,29,149,31,"ErrorStackParser$$parseOpera10"],[135,59,149,61,"ErrorStackParser$$parseOpera10"],[135,60,149,62,"e"],[135,61,149,63],[135,63,149,65],[136,8,150,12],[136,12,150,16,"lineRE"],[136,18,150,22],[136,21,150,25],[136,81,150,85],[137,8,151,12],[137,12,151,16,"lines"],[137,17,151,21],[137,20,151,24,"e"],[137,21,151,25],[137,22,151,26,"stacktrace"],[137,32,151,36],[137,33,151,37,"split"],[137,38,151,42],[137,39,151,43],[137,43,151,47],[137,44,151,48],[138,8,152,12],[138,12,152,16,"result"],[138,18,152,22],[138,21,152,25],[138,23,152,27],[139,8,154,12],[139,13,154,17],[139,17,154,21,"i"],[139,18,154,22],[139,21,154,25],[139,22,154,26],[139,24,154,28,"len"],[139,27,154,31],[139,30,154,34,"lines"],[139,35,154,39],[139,36,154,40,"length"],[139,42,154,46],[139,44,154,48,"i"],[139,45,154,49],[139,48,154,52,"len"],[139,51,154,55],[139,53,154,57,"i"],[139,54,154,58],[139,58,154,62],[139,59,154,63],[139,61,154,65],[140,10,155,16],[140,14,155,20,"match"],[140,19,155,25],[140,22,155,28,"lineRE"],[140,28,155,34],[140,29,155,35,"exec"],[140,33,155,39],[140,34,155,40,"lines"],[140,39,155,45],[140,40,155,46,"i"],[140,41,155,47],[140,42,155,48],[140,43,155,49],[141,10,156,16],[141,14,156,20,"match"],[141,19,156,25],[141,21,156,27],[142,12,157,20,"result"],[142,18,157,26],[142,19,157,27,"push"],[142,23,157,31],[142,24,158,24],[142,28,158,28,"StackFrame"],[142,38,158,38],[142,39,158,39],[143,14,159,28,"functionName"],[143,26,159,40],[143,28,159,42,"match"],[143,33,159,47],[143,34,159,48],[143,35,159,49],[143,36,159,50],[143,40,159,54,"undefined"],[143,49,159,63],[144,14,160,28,"fileName"],[144,22,160,36],[144,24,160,38,"match"],[144,29,160,43],[144,30,160,44],[144,31,160,45],[144,32,160,46],[145,14,161,28,"lineNumber"],[145,24,161,38],[145,26,161,40,"match"],[145,31,161,45],[145,32,161,46],[145,33,161,47],[145,34,161,48],[146,14,162,28,"source"],[146,20,162,34],[146,22,162,36,"lines"],[146,27,162,41],[146,28,162,42,"i"],[146,29,162,43],[147,12,163,24],[147,13,163,25],[147,14,164,20],[147,15,164,21],[148,10,165,16],[149,8,166,12],[150,8,168,12],[150,15,168,19,"result"],[150,21,168,25],[151,6,169,8],[151,7,169,9],[152,6,171,8],[153,6,172,8,"parseOpera11"],[153,18,172,20],[153,20,172,22],[153,29,172,31,"ErrorStackParser$$parseOpera11"],[153,59,172,61,"ErrorStackParser$$parseOpera11"],[153,60,172,62,"error"],[153,65,172,67],[153,67,172,69],[154,8,173,12],[154,12,173,16,"filtered"],[154,20,173,24],[154,23,173,27,"error"],[154,28,173,32],[154,29,173,33,"stack"],[154,34,173,38],[154,35,173,39,"split"],[154,40,173,44],[154,41,173,45],[154,45,173,49],[154,46,173,50],[154,47,173,51,"filter"],[154,53,173,57],[154,54,173,58],[154,64,173,67,"line"],[154,68,173,71],[154,70,173,73],[155,10,174,16],[155,17,174,23],[155,18,174,24],[155,19,174,25,"line"],[155,23,174,29],[155,24,174,30,"match"],[155,29,174,35],[155,30,174,36,"FIREFOX_SAFARI_STACK_REGEXP"],[155,57,174,63],[155,58,174,64],[155,62,174,68],[155,63,174,69,"line"],[155,67,174,73],[155,68,174,74,"match"],[155,73,174,79],[155,74,174,80],[155,93,174,99],[155,94,174,100],[156,8,175,12],[156,9,175,13],[156,11,175,15],[156,15,175,19],[156,16,175,20],[157,8,177,12],[157,15,177,19,"filtered"],[157,23,177,27],[157,24,177,28,"map"],[157,27,177,31],[157,28,177,32],[157,38,177,41,"line"],[157,42,177,45],[157,44,177,47],[158,10,178,16],[158,14,178,20,"tokens"],[158,20,178,26],[158,23,178,29,"line"],[158,27,178,33],[158,28,178,34,"split"],[158,33,178,39],[158,34,178,40],[158,37,178,43],[158,38,178,44],[159,10,179,16],[159,14,179,20,"locationParts"],[159,27,179,33],[159,30,179,36],[159,34,179,40],[159,35,179,41,"extractLocation"],[159,50,179,56],[159,51,179,57,"tokens"],[159,57,179,63],[159,58,179,64,"pop"],[159,61,179,67],[159,62,179,68],[159,63,179,69],[159,64,179,70],[160,10,180,16],[160,14,180,20,"functionCall"],[160,26,180,32],[160,29,180,36,"tokens"],[160,35,180,42],[160,36,180,43,"shift"],[160,41,180,48],[160,42,180,49],[160,43,180,50],[160,47,180,54],[160,49,180,57],[161,10,181,16],[161,14,181,20,"functionName"],[161,26,181,32],[161,29,181,35,"functionCall"],[161,41,181,47],[161,42,182,21,"replace"],[161,49,182,28],[161,50,182,29],[161,82,182,61],[161,84,182,63],[161,88,182,67],[161,89,182,68],[161,90,183,21,"replace"],[161,97,183,28],[161,98,183,29],[161,110,183,41],[161,112,183,43],[161,114,183,45],[161,115,183,46],[161,119,183,50,"undefined"],[161,128,183,59],[162,10,184,16],[162,14,184,20,"argsRaw"],[162,21,184,27],[163,10,185,16],[163,14,185,20,"functionCall"],[163,26,185,32],[163,27,185,33,"match"],[163,32,185,38],[163,33,185,39],[163,46,185,52],[163,47,185,53],[163,49,185,55],[164,12,186,20,"argsRaw"],[164,19,186,27],[164,22,186,30,"functionCall"],[164,34,186,42],[164,35,186,43,"replace"],[164,42,186,50],[164,43,186,51],[164,63,186,71],[164,65,186,73],[164,69,186,77],[164,70,186,78],[165,10,187,16],[166,10,188,16],[166,14,188,20,"args"],[166,18,188,24],[166,21,188,28,"argsRaw"],[166,28,188,35],[166,33,188,40,"undefined"],[166,42,188,49],[166,46,188,53,"argsRaw"],[166,53,188,60],[166,58,188,65],[166,85,188,92],[166,88,189,20,"undefined"],[166,97,189,29],[166,100,189,32,"argsRaw"],[166,107,189,39],[166,108,189,40,"split"],[166,113,189,45],[166,114,189,46],[166,117,189,49],[166,118,189,50],[167,10,191,16],[167,17,191,23],[167,21,191,27,"StackFrame"],[167,31,191,37],[167,32,191,38],[168,12,192,20,"functionName"],[168,24,192,32],[168,26,192,34,"functionName"],[168,38,192,46],[169,12,193,20,"args"],[169,16,193,24],[169,18,193,26,"args"],[169,22,193,30],[170,12,194,20,"fileName"],[170,20,194,28],[170,22,194,30,"locationParts"],[170,35,194,43],[170,36,194,44],[170,37,194,45],[170,38,194,46],[171,12,195,20,"lineNumber"],[171,22,195,30],[171,24,195,32,"locationParts"],[171,37,195,45],[171,38,195,46],[171,39,195,47],[171,40,195,48],[172,12,196,20,"columnNumber"],[172,24,196,32],[172,26,196,34,"locationParts"],[172,39,196,47],[172,40,196,48],[172,41,196,49],[172,42,196,50],[173,12,197,20,"source"],[173,18,197,26],[173,20,197,28,"line"],[174,10,198,16],[174,11,198,17],[174,12,198,18],[175,8,199,12],[175,9,199,13],[175,11,199,15],[175,15,199,19],[175,16,199,20],[176,6,200,8],[177,4,201,4],[177,5,201,5],[178,2,202,0],[178,3,202,1],[178,4,202,2],[179,0,202,4],[179,3]],"functionMap":{"names":["<global>","<anonymous>","ErrorStackParser","ErrorStackParser$$parse","ErrorStackParser$$extractLocation","ErrorStackParser$$parseV8OrIE","error.stack.split.filter$argument_0","filtered.map$argument_0","ErrorStackParser$$parseFFOrSafari","ErrorStackParser$$parseOpera","ErrorStackParser$$parseOpera9","ErrorStackParser$$parseOpera10","ErrorStackParser$$parseOpera11"],"mappings":"AAA,CC;CDY,OE;eCc;SDU;yBEG;SFS;qBGE;0DCC;aDE;gCEE;aF2B;SHC;yBME;0DFC;aEE;gCDE;aCyB;SNC;oBOE;SPS;qBQE;SRiB;sBSE;SToB;sBUG;0DNC;aME;gCLE;aKsB;SVC;CFE"}},"type":"js/module"}]}