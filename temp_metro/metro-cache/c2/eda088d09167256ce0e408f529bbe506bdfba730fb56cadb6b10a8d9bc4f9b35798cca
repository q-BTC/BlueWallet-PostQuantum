{"dependencies":[{"name":"./base","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":11,"index":89},"end":{"line":5,"column":28,"index":106}},{"start":{"line":5,"column":11,"index":89},"end":{"line":5,"column":28,"index":106}},{"start":{"line":5,"column":11,"index":89},"end":{"line":5,"column":28,"index":106}},{"start":{"line":5,"column":11,"index":89},"end":{"line":5,"column":28,"index":106}}],"key":"cAa/j2PXTeXj4b1JbTLYHmmEU2Q="}},{"name":"bn.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}},{"start":{"line":3,"column":9,"index":24},"end":{"line":3,"column":25,"index":40}}],"key":"h/AEHknS6KAnKragIfqHUjGvuRM="}},{"name":"inherits","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":15,"index":57},"end":{"line":4,"column":34,"index":76}},{"start":{"line":4,"column":15,"index":57},"end":{"line":4,"column":34,"index":76}}],"key":"UFs2L1Ma7NUz/WYD3lQMkA8Bn/s="}},{"name":"../utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":12,"index":121},"end":{"line":7,"column":31,"index":140}}],"key":"RFGtgFE/Tu4zdfnbMKbFHDM/T4I="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function MontCurve(conf) {\n    _$$_REQUIRE(_dependencyMap[0], \"./base\").call(this, 'mont', conf);\n    this.a = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(conf.a, 16).toRed(this.red);\n    this.b = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(conf.b, 16).toRed(this.red);\n    this.i4 = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(4).toRed(this.red).redInvm();\n    this.two = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(2).toRed(this.red);\n    this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n  }\n  _$$_REQUIRE(_dependencyMap[2], \"inherits\")(MontCurve, _$$_REQUIRE(_dependencyMap[0], \"./base\"));\n  module.exports = MontCurve;\n  MontCurve.prototype.validate = function validate(point) {\n    var x = point.normalize().x;\n    var x2 = x.redSqr();\n    var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n    var y = rhs.redSqrt();\n    return y.redSqr().cmp(rhs) === 0;\n  };\n  function Point(curve, x, z) {\n    _$$_REQUIRE(_dependencyMap[0], \"./base\").BasePoint.call(this, curve, 'projective');\n    if (x === null && z === null) {\n      this.x = this.curve.one;\n      this.z = this.curve.zero;\n    } else {\n      this.x = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(x, 16);\n      this.z = new (_$$_REQUIRE(_dependencyMap[1], \"bn.js\"))(z, 16);\n      if (!this.x.red) this.x = this.x.toRed(this.curve.red);\n      if (!this.z.red) this.z = this.z.toRed(this.curve.red);\n    }\n  }\n  _$$_REQUIRE(_dependencyMap[2], \"inherits\")(Point, _$$_REQUIRE(_dependencyMap[0], \"./base\").BasePoint);\n  MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n    return this.point(_$$_REQUIRE(_dependencyMap[3], \"../utils\").toArray(bytes, enc), 1);\n  };\n  MontCurve.prototype.point = function point(x, z) {\n    return new Point(this, x, z);\n  };\n  MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n    return Point.fromJSON(this, obj);\n  };\n  Point.prototype.precompute = function precompute() {\n    // No-op\n  };\n  Point.prototype._encode = function _encode() {\n    return this.getX().toArray('be', this.curve.p.byteLength());\n  };\n  Point.fromJSON = function fromJSON(curve, obj) {\n    return new Point(curve, obj[0], obj[1] || curve.one);\n  };\n  Point.prototype.inspect = function inspect() {\n    if (this.isInfinity()) return '<EC Point Infinity>';\n    return '<EC Point x: ' + this.x.fromRed().toString(16, 2) + ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n  };\n  Point.prototype.isInfinity = function isInfinity() {\n    // XXX This code assumes that zero is always zero in red\n    return this.z.cmpn(0) === 0;\n  };\n  Point.prototype.dbl = function dbl() {\n    // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n    // 2M + 2S + 4A\n\n    // A = X1 + Z1\n    var a = this.x.redAdd(this.z);\n    // AA = A^2\n    var aa = a.redSqr();\n    // B = X1 - Z1\n    var b = this.x.redSub(this.z);\n    // BB = B^2\n    var bb = b.redSqr();\n    // C = AA - BB\n    var c = aa.redSub(bb);\n    // X3 = AA * BB\n    var nx = aa.redMul(bb);\n    // Z3 = C * (BB + A24 * C)\n    var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n    return this.curve.point(nx, nz);\n  };\n  Point.prototype.add = function add() {\n    throw new Error('Not supported on Montgomery curve');\n  };\n  Point.prototype.diffAdd = function diffAdd(p, diff) {\n    // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n    // 4M + 2S + 6A\n\n    // A = X2 + Z2\n    var a = this.x.redAdd(this.z);\n    // B = X2 - Z2\n    var b = this.x.redSub(this.z);\n    // C = X3 + Z3\n    var c = p.x.redAdd(p.z);\n    // D = X3 - Z3\n    var d = p.x.redSub(p.z);\n    // DA = D * A\n    var da = d.redMul(a);\n    // CB = C * B\n    var cb = c.redMul(b);\n    // X5 = Z1 * (DA + CB)^2\n    var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n    // Z5 = X1 * (DA - CB)^2\n    var nz = diff.x.redMul(da.redISub(cb).redSqr());\n    return this.curve.point(nx, nz);\n  };\n  Point.prototype.mul = function mul(k) {\n    var t = k.clone();\n    var a = this; // (N / 2) * Q + Q\n    var b = this.curve.point(null, null); // (N / 2) * Q\n    var c = this; // Q\n\n    for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1)) bits.push(t.andln(1));\n    for (var i = bits.length - 1; i >= 0; i--) {\n      if (bits[i] === 0) {\n        // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n        a = a.diffAdd(b, c);\n        // N * Q = 2 * ((N / 2) * Q + Q))\n        b = b.dbl();\n      } else {\n        // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n        b = a.diffAdd(b, c);\n        // N * Q + Q = 2 * ((N / 2) * Q + Q)\n        a = a.dbl();\n      }\n    }\n    return b;\n  };\n  Point.prototype.mulAdd = function mulAdd() {\n    throw new Error('Not supported on Montgomery curve');\n  };\n  Point.prototype.jumlAdd = function jumlAdd() {\n    throw new Error('Not supported on Montgomery curve');\n  };\n  Point.prototype.eq = function eq(other) {\n    return this.getX().cmp(other.getX()) === 0;\n  };\n  Point.prototype.normalize = function normalize() {\n    this.x = this.x.redMul(this.z.redInvm());\n    this.z = this.curve.one;\n    return this;\n  };\n  Point.prototype.getX = function getX() {\n    // Normalize coordinates\n    this.normalize();\n    return this.x.fromRed();\n  };\n});","lineCount":146,"map":[[2,2,1,0],[2,14,1,12],[4,2,9,0],[4,11,9,9,"MontCurve"],[4,20,9,18,"MontCurve"],[4,21,9,19,"conf"],[4,25,9,23],[4,27,9,25],[5,4,10,2,"_$$_REQUIRE"],[5,15,10,2],[5,16,10,2,"_dependencyMap"],[5,30,10,2],[5,45,10,7,"call"],[5,49,10,11],[5,50,10,12],[5,54,10,16],[5,56,10,18],[5,62,10,24],[5,64,10,26,"conf"],[5,68,10,30],[5,69,10,31],[6,4,12,2],[6,8,12,6],[6,9,12,7,"a"],[6,10,12,8],[6,13,12,11],[6,18,12,11,"_$$_REQUIRE"],[6,29,12,11],[6,30,12,11,"_dependencyMap"],[6,44,12,11],[6,59,12,18,"conf"],[6,63,12,22],[6,64,12,23,"a"],[6,65,12,24],[6,67,12,26],[6,69,12,28],[6,70,12,29],[6,71,12,30,"toRed"],[6,76,12,35],[6,77,12,36],[6,81,12,40],[6,82,12,41,"red"],[6,85,12,44],[6,86,12,45],[7,4,13,2],[7,8,13,6],[7,9,13,7,"b"],[7,10,13,8],[7,13,13,11],[7,18,13,11,"_$$_REQUIRE"],[7,29,13,11],[7,30,13,11,"_dependencyMap"],[7,44,13,11],[7,59,13,18,"conf"],[7,63,13,22],[7,64,13,23,"b"],[7,65,13,24],[7,67,13,26],[7,69,13,28],[7,70,13,29],[7,71,13,30,"toRed"],[7,76,13,35],[7,77,13,36],[7,81,13,40],[7,82,13,41,"red"],[7,85,13,44],[7,86,13,45],[8,4,14,2],[8,8,14,6],[8,9,14,7,"i4"],[8,11,14,9],[8,14,14,12],[8,19,14,12,"_$$_REQUIRE"],[8,30,14,12],[8,31,14,12,"_dependencyMap"],[8,45,14,12],[8,60,14,19],[8,61,14,20],[8,62,14,21],[8,63,14,22,"toRed"],[8,68,14,27],[8,69,14,28],[8,73,14,32],[8,74,14,33,"red"],[8,77,14,36],[8,78,14,37],[8,79,14,38,"redInvm"],[8,86,14,45],[8,87,14,46],[8,88,14,47],[9,4,15,2],[9,8,15,6],[9,9,15,7,"two"],[9,12,15,10],[9,15,15,13],[9,20,15,13,"_$$_REQUIRE"],[9,31,15,13],[9,32,15,13,"_dependencyMap"],[9,46,15,13],[9,61,15,20],[9,62,15,21],[9,63,15,22],[9,64,15,23,"toRed"],[9,69,15,28],[9,70,15,29],[9,74,15,33],[9,75,15,34,"red"],[9,78,15,37],[9,79,15,38],[10,4,16,2],[10,8,16,6],[10,9,16,7,"a24"],[10,12,16,10],[10,15,16,13],[10,19,16,17],[10,20,16,18,"i4"],[10,22,16,20],[10,23,16,21,"redMul"],[10,29,16,27],[10,30,16,28],[10,34,16,32],[10,35,16,33,"a"],[10,36,16,34],[10,37,16,35,"redAdd"],[10,43,16,41],[10,44,16,42],[10,48,16,46],[10,49,16,47,"two"],[10,52,16,50],[10,53,16,51],[10,54,16,52],[11,2,17,0],[12,2,18,0,"_$$_REQUIRE"],[12,13,18,0],[12,14,18,0,"_dependencyMap"],[12,28,18,0],[12,45,18,9,"MontCurve"],[12,54,18,18],[12,56,18,18,"_$$_REQUIRE"],[12,67,18,18],[12,68,18,18,"_dependencyMap"],[12,82,18,18],[12,96,18,24],[12,97,18,25],[13,2,19,0,"module"],[13,8,19,6],[13,9,19,7,"exports"],[13,16,19,14],[13,19,19,17,"MontCurve"],[13,28,19,26],[14,2,21,0,"MontCurve"],[14,11,21,9],[14,12,21,10,"prototype"],[14,21,21,19],[14,22,21,20,"validate"],[14,30,21,28],[14,33,21,31],[14,42,21,40,"validate"],[14,50,21,48,"validate"],[14,51,21,49,"point"],[14,56,21,54],[14,58,21,56],[15,4,22,2],[15,8,22,6,"x"],[15,9,22,7],[15,12,22,10,"point"],[15,17,22,15],[15,18,22,16,"normalize"],[15,27,22,25],[15,28,22,26],[15,29,22,27],[15,30,22,28,"x"],[15,31,22,29],[16,4,23,2],[16,8,23,6,"x2"],[16,10,23,8],[16,13,23,11,"x"],[16,14,23,12],[16,15,23,13,"redSqr"],[16,21,23,19],[16,22,23,20],[16,23,23,21],[17,4,24,2],[17,8,24,6,"rhs"],[17,11,24,9],[17,14,24,12,"x2"],[17,16,24,14],[17,17,24,15,"redMul"],[17,23,24,21],[17,24,24,22,"x"],[17,25,24,23],[17,26,24,24],[17,27,24,25,"redAdd"],[17,33,24,31],[17,34,24,32,"x2"],[17,36,24,34],[17,37,24,35,"redMul"],[17,43,24,41],[17,44,24,42],[17,48,24,46],[17,49,24,47,"a"],[17,50,24,48],[17,51,24,49],[17,52,24,50],[17,53,24,51,"redAdd"],[17,59,24,57],[17,60,24,58,"x"],[17,61,24,59],[17,62,24,60],[18,4,25,2],[18,8,25,6,"y"],[18,9,25,7],[18,12,25,10,"rhs"],[18,15,25,13],[18,16,25,14,"redSqrt"],[18,23,25,21],[18,24,25,22],[18,25,25,23],[19,4,27,2],[19,11,27,9,"y"],[19,12,27,10],[19,13,27,11,"redSqr"],[19,19,27,17],[19,20,27,18],[19,21,27,19],[19,22,27,20,"cmp"],[19,25,27,23],[19,26,27,24,"rhs"],[19,29,27,27],[19,30,27,28],[19,35,27,33],[19,36,27,34],[20,2,28,0],[20,3,28,1],[21,2,30,0],[21,11,30,9,"Point"],[21,16,30,14,"Point"],[21,17,30,15,"curve"],[21,22,30,20],[21,24,30,22,"x"],[21,25,30,23],[21,27,30,25,"z"],[21,28,30,26],[21,30,30,28],[22,4,31,2,"_$$_REQUIRE"],[22,15,31,2],[22,16,31,2,"_dependencyMap"],[22,30,31,2],[22,45,31,7,"BasePoint"],[22,54,31,16],[22,55,31,17,"call"],[22,59,31,21],[22,60,31,22],[22,64,31,26],[22,66,31,28,"curve"],[22,71,31,33],[22,73,31,35],[22,85,31,47],[22,86,31,48],[23,4,32,2],[23,8,32,6,"x"],[23,9,32,7],[23,14,32,12],[23,18,32,16],[23,22,32,20,"z"],[23,23,32,21],[23,28,32,26],[23,32,32,30],[23,34,32,32],[24,6,33,4],[24,10,33,8],[24,11,33,9,"x"],[24,12,33,10],[24,15,33,13],[24,19,33,17],[24,20,33,18,"curve"],[24,25,33,23],[24,26,33,24,"one"],[24,29,33,27],[25,6,34,4],[25,10,34,8],[25,11,34,9,"z"],[25,12,34,10],[25,15,34,13],[25,19,34,17],[25,20,34,18,"curve"],[25,25,34,23],[25,26,34,24,"zero"],[25,30,34,28],[26,4,35,2],[26,5,35,3],[26,11,35,9],[27,6,36,4],[27,10,36,8],[27,11,36,9,"x"],[27,12,36,10],[27,15,36,13],[27,20,36,13,"_$$_REQUIRE"],[27,31,36,13],[27,32,36,13,"_dependencyMap"],[27,46,36,13],[27,61,36,20,"x"],[27,62,36,21],[27,64,36,23],[27,66,36,25],[27,67,36,26],[28,6,37,4],[28,10,37,8],[28,11,37,9,"z"],[28,12,37,10],[28,15,37,13],[28,20,37,13,"_$$_REQUIRE"],[28,31,37,13],[28,32,37,13,"_dependencyMap"],[28,46,37,13],[28,61,37,20,"z"],[28,62,37,21],[28,64,37,23],[28,66,37,25],[28,67,37,26],[29,6,38,4],[29,10,38,8],[29,11,38,9],[29,15,38,13],[29,16,38,14,"x"],[29,17,38,15],[29,18,38,16,"red"],[29,21,38,19],[29,23,39,6],[29,27,39,10],[29,28,39,11,"x"],[29,29,39,12],[29,32,39,15],[29,36,39,19],[29,37,39,20,"x"],[29,38,39,21],[29,39,39,22,"toRed"],[29,44,39,27],[29,45,39,28],[29,49,39,32],[29,50,39,33,"curve"],[29,55,39,38],[29,56,39,39,"red"],[29,59,39,42],[29,60,39,43],[30,6,40,4],[30,10,40,8],[30,11,40,9],[30,15,40,13],[30,16,40,14,"z"],[30,17,40,15],[30,18,40,16,"red"],[30,21,40,19],[30,23,41,6],[30,27,41,10],[30,28,41,11,"z"],[30,29,41,12],[30,32,41,15],[30,36,41,19],[30,37,41,20,"z"],[30,38,41,21],[30,39,41,22,"toRed"],[30,44,41,27],[30,45,41,28],[30,49,41,32],[30,50,41,33,"curve"],[30,55,41,38],[30,56,41,39,"red"],[30,59,41,42],[30,60,41,43],[31,4,42,2],[32,2,43,0],[33,2,44,0,"_$$_REQUIRE"],[33,13,44,0],[33,14,44,0,"_dependencyMap"],[33,28,44,0],[33,45,44,9,"Point"],[33,50,44,14],[33,52,44,16,"_$$_REQUIRE"],[33,63,44,16],[33,64,44,16,"_dependencyMap"],[33,78,44,16],[33,93,44,21,"BasePoint"],[33,102,44,30],[33,103,44,31],[34,2,46,0,"MontCurve"],[34,11,46,9],[34,12,46,10,"prototype"],[34,21,46,19],[34,22,46,20,"decodePoint"],[34,33,46,31],[34,36,46,34],[34,45,46,43,"decodePoint"],[34,56,46,54,"decodePoint"],[34,57,46,55,"bytes"],[34,62,46,60],[34,64,46,62,"enc"],[34,67,46,65],[34,69,46,67],[35,4,47,2],[35,11,47,9],[35,15,47,13],[35,16,47,14,"point"],[35,21,47,19],[35,22,47,20,"_$$_REQUIRE"],[35,33,47,20],[35,34,47,20,"_dependencyMap"],[35,48,47,20],[35,65,47,26,"toArray"],[35,72,47,33],[35,73,47,34,"bytes"],[35,78,47,39],[35,80,47,41,"enc"],[35,83,47,44],[35,84,47,45],[35,86,47,47],[35,87,47,48],[35,88,47,49],[36,2,48,0],[36,3,48,1],[37,2,50,0,"MontCurve"],[37,11,50,9],[37,12,50,10,"prototype"],[37,21,50,19],[37,22,50,20,"point"],[37,27,50,25],[37,30,50,28],[37,39,50,37,"point"],[37,44,50,42,"point"],[37,45,50,43,"x"],[37,46,50,44],[37,48,50,46,"z"],[37,49,50,47],[37,51,50,49],[38,4,51,2],[38,11,51,9],[38,15,51,13,"Point"],[38,20,51,18],[38,21,51,19],[38,25,51,23],[38,27,51,25,"x"],[38,28,51,26],[38,30,51,28,"z"],[38,31,51,29],[38,32,51,30],[39,2,52,0],[39,3,52,1],[40,2,54,0,"MontCurve"],[40,11,54,9],[40,12,54,10,"prototype"],[40,21,54,19],[40,22,54,20,"pointFromJSON"],[40,35,54,33],[40,38,54,36],[40,47,54,45,"pointFromJSON"],[40,60,54,58,"pointFromJSON"],[40,61,54,59,"obj"],[40,64,54,62],[40,66,54,64],[41,4,55,2],[41,11,55,9,"Point"],[41,16,55,14],[41,17,55,15,"fromJSON"],[41,25,55,23],[41,26,55,24],[41,30,55,28],[41,32,55,30,"obj"],[41,35,55,33],[41,36,55,34],[42,2,56,0],[42,3,56,1],[43,2,58,0,"Point"],[43,7,58,5],[43,8,58,6,"prototype"],[43,17,58,15],[43,18,58,16,"precompute"],[43,28,58,26],[43,31,58,29],[43,40,58,38,"precompute"],[43,50,58,48,"precompute"],[43,51,58,48],[43,53,58,51],[44,4,59,2],[45,2,59,2],[45,3,60,1],[46,2,62,0,"Point"],[46,7,62,5],[46,8,62,6,"prototype"],[46,17,62,15],[46,18,62,16,"_encode"],[46,25,62,23],[46,28,62,26],[46,37,62,35,"_encode"],[46,44,62,42,"_encode"],[46,45,62,42],[46,47,62,45],[47,4,63,2],[47,11,63,9],[47,15,63,13],[47,16,63,14,"getX"],[47,20,63,18],[47,21,63,19],[47,22,63,20],[47,23,63,21,"toArray"],[47,30,63,28],[47,31,63,29],[47,35,63,33],[47,37,63,35],[47,41,63,39],[47,42,63,40,"curve"],[47,47,63,45],[47,48,63,46,"p"],[47,49,63,47],[47,50,63,48,"byteLength"],[47,60,63,58],[47,61,63,59],[47,62,63,60],[47,63,63,61],[48,2,64,0],[48,3,64,1],[49,2,66,0,"Point"],[49,7,66,5],[49,8,66,6,"fromJSON"],[49,16,66,14],[49,19,66,17],[49,28,66,26,"fromJSON"],[49,36,66,34,"fromJSON"],[49,37,66,35,"curve"],[49,42,66,40],[49,44,66,42,"obj"],[49,47,66,45],[49,49,66,47],[50,4,67,2],[50,11,67,9],[50,15,67,13,"Point"],[50,20,67,18],[50,21,67,19,"curve"],[50,26,67,24],[50,28,67,26,"obj"],[50,31,67,29],[50,32,67,30],[50,33,67,31],[50,34,67,32],[50,36,67,34,"obj"],[50,39,67,37],[50,40,67,38],[50,41,67,39],[50,42,67,40],[50,46,67,44,"curve"],[50,51,67,49],[50,52,67,50,"one"],[50,55,67,53],[50,56,67,54],[51,2,68,0],[51,3,68,1],[52,2,70,0,"Point"],[52,7,70,5],[52,8,70,6,"prototype"],[52,17,70,15],[52,18,70,16,"inspect"],[52,25,70,23],[52,28,70,26],[52,37,70,35,"inspect"],[52,44,70,42,"inspect"],[52,45,70,42],[52,47,70,45],[53,4,71,2],[53,8,71,6],[53,12,71,10],[53,13,71,11,"isInfinity"],[53,23,71,21],[53,24,71,22],[53,25,71,23],[53,27,72,4],[53,34,72,11],[53,55,72,32],[54,4,73,2],[54,11,73,9],[54,26,73,24],[54,29,73,27],[54,33,73,31],[54,34,73,32,"x"],[54,35,73,33],[54,36,73,34,"fromRed"],[54,43,73,41],[54,44,73,42],[54,45,73,43],[54,46,73,44,"toString"],[54,54,73,52],[54,55,73,53],[54,57,73,55],[54,59,73,57],[54,60,73,58],[54,61,73,59],[54,64,74,6],[54,70,74,12],[54,73,74,15],[54,77,74,19],[54,78,74,20,"z"],[54,79,74,21],[54,80,74,22,"fromRed"],[54,87,74,29],[54,88,74,30],[54,89,74,31],[54,90,74,32,"toString"],[54,98,74,40],[54,99,74,41],[54,101,74,43],[54,103,74,45],[54,104,74,46],[54,105,74,47],[54,108,74,50],[54,111,74,53],[55,2,75,0],[55,3,75,1],[56,2,77,0,"Point"],[56,7,77,5],[56,8,77,6,"prototype"],[56,17,77,15],[56,18,77,16,"isInfinity"],[56,28,77,26],[56,31,77,29],[56,40,77,38,"isInfinity"],[56,50,77,48,"isInfinity"],[56,51,77,48],[56,53,77,51],[57,4,78,2],[58,4,79,2],[58,11,79,9],[58,15,79,13],[58,16,79,14,"z"],[58,17,79,15],[58,18,79,16,"cmpn"],[58,22,79,20],[58,23,79,21],[58,24,79,22],[58,25,79,23],[58,30,79,28],[58,31,79,29],[59,2,80,0],[59,3,80,1],[60,2,82,0,"Point"],[60,7,82,5],[60,8,82,6,"prototype"],[60,17,82,15],[60,18,82,16,"dbl"],[60,21,82,19],[60,24,82,22],[60,33,82,31,"dbl"],[60,36,82,34,"dbl"],[60,37,82,34],[60,39,82,37],[61,4,83,2],[62,4,84,2],[64,4,86,2],[65,4,87,2],[65,8,87,6,"a"],[65,9,87,7],[65,12,87,10],[65,16,87,14],[65,17,87,15,"x"],[65,18,87,16],[65,19,87,17,"redAdd"],[65,25,87,23],[65,26,87,24],[65,30,87,28],[65,31,87,29,"z"],[65,32,87,30],[65,33,87,31],[66,4,88,2],[67,4,89,2],[67,8,89,6,"aa"],[67,10,89,8],[67,13,89,11,"a"],[67,14,89,12],[67,15,89,13,"redSqr"],[67,21,89,19],[67,22,89,20],[67,23,89,21],[68,4,90,2],[69,4,91,2],[69,8,91,6,"b"],[69,9,91,7],[69,12,91,10],[69,16,91,14],[69,17,91,15,"x"],[69,18,91,16],[69,19,91,17,"redSub"],[69,25,91,23],[69,26,91,24],[69,30,91,28],[69,31,91,29,"z"],[69,32,91,30],[69,33,91,31],[70,4,92,2],[71,4,93,2],[71,8,93,6,"bb"],[71,10,93,8],[71,13,93,11,"b"],[71,14,93,12],[71,15,93,13,"redSqr"],[71,21,93,19],[71,22,93,20],[71,23,93,21],[72,4,94,2],[73,4,95,2],[73,8,95,6,"c"],[73,9,95,7],[73,12,95,10,"aa"],[73,14,95,12],[73,15,95,13,"redSub"],[73,21,95,19],[73,22,95,20,"bb"],[73,24,95,22],[73,25,95,23],[74,4,96,2],[75,4,97,2],[75,8,97,6,"nx"],[75,10,97,8],[75,13,97,11,"aa"],[75,15,97,13],[75,16,97,14,"redMul"],[75,22,97,20],[75,23,97,21,"bb"],[75,25,97,23],[75,26,97,24],[76,4,98,2],[77,4,99,2],[77,8,99,6,"nz"],[77,10,99,8],[77,13,99,11,"c"],[77,14,99,12],[77,15,99,13,"redMul"],[77,21,99,19],[77,22,99,20,"bb"],[77,24,99,22],[77,25,99,23,"redAdd"],[77,31,99,29],[77,32,99,30],[77,36,99,34],[77,37,99,35,"curve"],[77,42,99,40],[77,43,99,41,"a24"],[77,46,99,44],[77,47,99,45,"redMul"],[77,53,99,51],[77,54,99,52,"c"],[77,55,99,53],[77,56,99,54],[77,57,99,55],[77,58,99,56],[78,4,100,2],[78,11,100,9],[78,15,100,13],[78,16,100,14,"curve"],[78,21,100,19],[78,22,100,20,"point"],[78,27,100,25],[78,28,100,26,"nx"],[78,30,100,28],[78,32,100,30,"nz"],[78,34,100,32],[78,35,100,33],[79,2,101,0],[79,3,101,1],[80,2,103,0,"Point"],[80,7,103,5],[80,8,103,6,"prototype"],[80,17,103,15],[80,18,103,16,"add"],[80,21,103,19],[80,24,103,22],[80,33,103,31,"add"],[80,36,103,34,"add"],[80,37,103,34],[80,39,103,37],[81,4,104,2],[81,10,104,8],[81,14,104,12,"Error"],[81,19,104,17],[81,20,104,18],[81,55,104,53],[81,56,104,54],[82,2,105,0],[82,3,105,1],[83,2,107,0,"Point"],[83,7,107,5],[83,8,107,6,"prototype"],[83,17,107,15],[83,18,107,16,"diffAdd"],[83,25,107,23],[83,28,107,26],[83,37,107,35,"diffAdd"],[83,44,107,42,"diffAdd"],[83,45,107,43,"p"],[83,46,107,44],[83,48,107,46,"diff"],[83,52,107,50],[83,54,107,52],[84,4,108,2],[85,4,109,2],[87,4,111,2],[88,4,112,2],[88,8,112,6,"a"],[88,9,112,7],[88,12,112,10],[88,16,112,14],[88,17,112,15,"x"],[88,18,112,16],[88,19,112,17,"redAdd"],[88,25,112,23],[88,26,112,24],[88,30,112,28],[88,31,112,29,"z"],[88,32,112,30],[88,33,112,31],[89,4,113,2],[90,4,114,2],[90,8,114,6,"b"],[90,9,114,7],[90,12,114,10],[90,16,114,14],[90,17,114,15,"x"],[90,18,114,16],[90,19,114,17,"redSub"],[90,25,114,23],[90,26,114,24],[90,30,114,28],[90,31,114,29,"z"],[90,32,114,30],[90,33,114,31],[91,4,115,2],[92,4,116,2],[92,8,116,6,"c"],[92,9,116,7],[92,12,116,10,"p"],[92,13,116,11],[92,14,116,12,"x"],[92,15,116,13],[92,16,116,14,"redAdd"],[92,22,116,20],[92,23,116,21,"p"],[92,24,116,22],[92,25,116,23,"z"],[92,26,116,24],[92,27,116,25],[93,4,117,2],[94,4,118,2],[94,8,118,6,"d"],[94,9,118,7],[94,12,118,10,"p"],[94,13,118,11],[94,14,118,12,"x"],[94,15,118,13],[94,16,118,14,"redSub"],[94,22,118,20],[94,23,118,21,"p"],[94,24,118,22],[94,25,118,23,"z"],[94,26,118,24],[94,27,118,25],[95,4,119,2],[96,4,120,2],[96,8,120,6,"da"],[96,10,120,8],[96,13,120,11,"d"],[96,14,120,12],[96,15,120,13,"redMul"],[96,21,120,19],[96,22,120,20,"a"],[96,23,120,21],[96,24,120,22],[97,4,121,2],[98,4,122,2],[98,8,122,6,"cb"],[98,10,122,8],[98,13,122,11,"c"],[98,14,122,12],[98,15,122,13,"redMul"],[98,21,122,19],[98,22,122,20,"b"],[98,23,122,21],[98,24,122,22],[99,4,123,2],[100,4,124,2],[100,8,124,6,"nx"],[100,10,124,8],[100,13,124,11,"diff"],[100,17,124,15],[100,18,124,16,"z"],[100,19,124,17],[100,20,124,18,"redMul"],[100,26,124,24],[100,27,124,25,"da"],[100,29,124,27],[100,30,124,28,"redAdd"],[100,36,124,34],[100,37,124,35,"cb"],[100,39,124,37],[100,40,124,38],[100,41,124,39,"redSqr"],[100,47,124,45],[100,48,124,46],[100,49,124,47],[100,50,124,48],[101,4,125,2],[102,4,126,2],[102,8,126,6,"nz"],[102,10,126,8],[102,13,126,11,"diff"],[102,17,126,15],[102,18,126,16,"x"],[102,19,126,17],[102,20,126,18,"redMul"],[102,26,126,24],[102,27,126,25,"da"],[102,29,126,27],[102,30,126,28,"redISub"],[102,37,126,35],[102,38,126,36,"cb"],[102,40,126,38],[102,41,126,39],[102,42,126,40,"redSqr"],[102,48,126,46],[102,49,126,47],[102,50,126,48],[102,51,126,49],[103,4,127,2],[103,11,127,9],[103,15,127,13],[103,16,127,14,"curve"],[103,21,127,19],[103,22,127,20,"point"],[103,27,127,25],[103,28,127,26,"nx"],[103,30,127,28],[103,32,127,30,"nz"],[103,34,127,32],[103,35,127,33],[104,2,128,0],[104,3,128,1],[105,2,130,0,"Point"],[105,7,130,5],[105,8,130,6,"prototype"],[105,17,130,15],[105,18,130,16,"mul"],[105,21,130,19],[105,24,130,22],[105,33,130,31,"mul"],[105,36,130,34,"mul"],[105,37,130,35,"k"],[105,38,130,36],[105,40,130,38],[106,4,131,2],[106,8,131,6,"t"],[106,9,131,7],[106,12,131,10,"k"],[106,13,131,11],[106,14,131,12,"clone"],[106,19,131,17],[106,20,131,18],[106,21,131,19],[107,4,132,2],[107,8,132,6,"a"],[107,9,132,7],[107,12,132,10],[107,16,132,14],[107,17,132,15],[107,18,132,16],[108,4,133,2],[108,8,133,6,"b"],[108,9,133,7],[108,12,133,10],[108,16,133,14],[108,17,133,15,"curve"],[108,22,133,20],[108,23,133,21,"point"],[108,28,133,26],[108,29,133,27],[108,33,133,31],[108,35,133,33],[108,39,133,37],[108,40,133,38],[108,41,133,39],[108,42,133,40],[109,4,134,2],[109,8,134,6,"c"],[109,9,134,7],[109,12,134,10],[109,16,134,14],[109,17,134,15],[109,18,134,16],[111,4,136,2],[111,9,136,7],[111,13,136,11,"bits"],[111,17,136,15],[111,20,136,18],[111,22,136,20],[111,24,136,22,"t"],[111,25,136,23],[111,26,136,24,"cmpn"],[111,30,136,28],[111,31,136,29],[111,32,136,30],[111,33,136,31],[111,38,136,36],[111,39,136,37],[111,41,136,39,"t"],[111,42,136,40],[111,43,136,41,"iushrn"],[111,49,136,47],[111,50,136,48],[111,51,136,49],[111,52,136,50],[111,54,137,4,"bits"],[111,58,137,8],[111,59,137,9,"push"],[111,63,137,13],[111,64,137,14,"t"],[111,65,137,15],[111,66,137,16,"andln"],[111,71,137,21],[111,72,137,22],[111,73,137,23],[111,74,137,24],[111,75,137,25],[112,4,139,2],[112,9,139,7],[112,13,139,11,"i"],[112,14,139,12],[112,17,139,15,"bits"],[112,21,139,19],[112,22,139,20,"length"],[112,28,139,26],[112,31,139,29],[112,32,139,30],[112,34,139,32,"i"],[112,35,139,33],[112,39,139,37],[112,40,139,38],[112,42,139,40,"i"],[112,43,139,41],[112,45,139,43],[112,47,139,45],[113,6,140,4],[113,10,140,8,"bits"],[113,14,140,12],[113,15,140,13,"i"],[113,16,140,14],[113,17,140,15],[113,22,140,20],[113,23,140,21],[113,25,140,23],[114,8,141,6],[115,8,142,6,"a"],[115,9,142,7],[115,12,142,10,"a"],[115,13,142,11],[115,14,142,12,"diffAdd"],[115,21,142,19],[115,22,142,20,"b"],[115,23,142,21],[115,25,142,23,"c"],[115,26,142,24],[115,27,142,25],[116,8,143,6],[117,8,144,6,"b"],[117,9,144,7],[117,12,144,10,"b"],[117,13,144,11],[117,14,144,12,"dbl"],[117,17,144,15],[117,18,144,16],[117,19,144,17],[118,6,145,4],[118,7,145,5],[118,13,145,11],[119,8,146,6],[120,8,147,6,"b"],[120,9,147,7],[120,12,147,10,"a"],[120,13,147,11],[120,14,147,12,"diffAdd"],[120,21,147,19],[120,22,147,20,"b"],[120,23,147,21],[120,25,147,23,"c"],[120,26,147,24],[120,27,147,25],[121,8,148,6],[122,8,149,6,"a"],[122,9,149,7],[122,12,149,10,"a"],[122,13,149,11],[122,14,149,12,"dbl"],[122,17,149,15],[122,18,149,16],[122,19,149,17],[123,6,150,4],[124,4,151,2],[125,4,152,2],[125,11,152,9,"b"],[125,12,152,10],[126,2,153,0],[126,3,153,1],[127,2,155,0,"Point"],[127,7,155,5],[127,8,155,6,"prototype"],[127,17,155,15],[127,18,155,16,"mulAdd"],[127,24,155,22],[127,27,155,25],[127,36,155,34,"mulAdd"],[127,42,155,40,"mulAdd"],[127,43,155,40],[127,45,155,43],[128,4,156,2],[128,10,156,8],[128,14,156,12,"Error"],[128,19,156,17],[128,20,156,18],[128,55,156,53],[128,56,156,54],[129,2,157,0],[129,3,157,1],[130,2,159,0,"Point"],[130,7,159,5],[130,8,159,6,"prototype"],[130,17,159,15],[130,18,159,16,"jumlAdd"],[130,25,159,23],[130,28,159,26],[130,37,159,35,"jumlAdd"],[130,44,159,42,"jumlAdd"],[130,45,159,42],[130,47,159,45],[131,4,160,2],[131,10,160,8],[131,14,160,12,"Error"],[131,19,160,17],[131,20,160,18],[131,55,160,53],[131,56,160,54],[132,2,161,0],[132,3,161,1],[133,2,163,0,"Point"],[133,7,163,5],[133,8,163,6,"prototype"],[133,17,163,15],[133,18,163,16,"eq"],[133,20,163,18],[133,23,163,21],[133,32,163,30,"eq"],[133,34,163,32,"eq"],[133,35,163,33,"other"],[133,40,163,38],[133,42,163,40],[134,4,164,2],[134,11,164,9],[134,15,164,13],[134,16,164,14,"getX"],[134,20,164,18],[134,21,164,19],[134,22,164,20],[134,23,164,21,"cmp"],[134,26,164,24],[134,27,164,25,"other"],[134,32,164,30],[134,33,164,31,"getX"],[134,37,164,35],[134,38,164,36],[134,39,164,37],[134,40,164,38],[134,45,164,43],[134,46,164,44],[135,2,165,0],[135,3,165,1],[136,2,167,0,"Point"],[136,7,167,5],[136,8,167,6,"prototype"],[136,17,167,15],[136,18,167,16,"normalize"],[136,27,167,25],[136,30,167,28],[136,39,167,37,"normalize"],[136,48,167,46,"normalize"],[136,49,167,46],[136,51,167,49],[137,4,168,2],[137,8,168,6],[137,9,168,7,"x"],[137,10,168,8],[137,13,168,11],[137,17,168,15],[137,18,168,16,"x"],[137,19,168,17],[137,20,168,18,"redMul"],[137,26,168,24],[137,27,168,25],[137,31,168,29],[137,32,168,30,"z"],[137,33,168,31],[137,34,168,32,"redInvm"],[137,41,168,39],[137,42,168,40],[137,43,168,41],[137,44,168,42],[138,4,169,2],[138,8,169,6],[138,9,169,7,"z"],[138,10,169,8],[138,13,169,11],[138,17,169,15],[138,18,169,16,"curve"],[138,23,169,21],[138,24,169,22,"one"],[138,27,169,25],[139,4,170,2],[139,11,170,9],[139,15,170,13],[140,2,171,0],[140,3,171,1],[141,2,173,0,"Point"],[141,7,173,5],[141,8,173,6,"prototype"],[141,17,173,15],[141,18,173,16,"getX"],[141,22,173,20],[141,25,173,23],[141,34,173,32,"getX"],[141,38,173,36,"getX"],[141,39,173,36],[141,41,173,39],[142,4,174,2],[143,4,175,2],[143,8,175,6],[143,9,175,7,"normalize"],[143,18,175,16],[143,19,175,17],[143,20,175,18],[144,4,177,2],[144,11,177,9],[144,15,177,13],[144,16,177,14,"x"],[144,17,177,15],[144,18,177,16,"fromRed"],[144,25,177,23],[144,26,177,24],[144,27,177,25],[145,2,178,0],[145,3,178,1],[146,0,178,2],[146,3]],"functionMap":{"names":["<global>","MontCurve","validate","Point","decodePoint","point","pointFromJSON","precompute","_encode","fromJSON","inspect","isInfinity","dbl","add","diffAdd","mul","mulAdd","jumlAdd","eq","normalize","getX"],"mappings":"AAA;ACQ;CDQ;+BEI;CFO;AGE;CHa;kCIG;CJE;4BKE;CLE;oCME;CNE;6BOE;CPE;0BQE;CRE;iBSE;CTE;0BUE;CVK;6BWE;CXG;sBYE;CZmB;sBaE;CbE;0BcE;CdqB;sBeE;CfuB;yBgBE;ChBE;0BiBE;CjBE;qBkBE;ClBE;4BmBE;CnBI;uBoBE;CpBK"}},"type":"js/module"}]}