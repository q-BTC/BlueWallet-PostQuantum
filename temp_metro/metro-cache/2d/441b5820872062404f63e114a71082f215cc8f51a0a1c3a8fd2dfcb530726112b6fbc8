{"dependencies":[{"name":"crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":11,"index":71},"end":{"line":4,"column":28,"index":88}}],"key":"qkQHogusroKbdlr5of4h1Mv5pUg=","isOptional":true}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* eslint-disable no-array-constructor */\n  var crypto;\n  try {\n    crypto = _$$_REQUIRE(_dependencyMap[0], \"crypto\");\n  } catch (err) {\n    throw new Error(\"crypto support must be enabled\");\n  }\n\n  // The length of the radix in bits.\n  var RADIX_BITS = 10;\n\n  // The length of the random identifier in bits.\n  var ID_BITS_LENGTH = 15;\n\n  // The length of the iteration exponent in bits.\n  var ITERATION_EXP_BITS_LENGTH = 4;\n\n  // The length of the extendable backup flag in bits.\n  var EXTENDABLE_BACKUP_FLAG_BITS_LENGTH = 1;\n\n  // The length of the random identifier, extendable backup flag and iteration exponent in words.\n  var ITERATION_EXP_WORDS_LENGTH = parseInt((ID_BITS_LENGTH + EXTENDABLE_BACKUP_FLAG_BITS_LENGTH + ITERATION_EXP_BITS_LENGTH + RADIX_BITS - 1) / RADIX_BITS, 10);\n\n  // The maximum iteration exponent\n  var MAX_ITERATION_EXP = Math.pow(2, ITERATION_EXP_BITS_LENGTH);\n\n  // The maximum number of shares that can be created.\n  var MAX_SHARE_COUNT = 16;\n\n  // The length of the RS1024 checksum in words.\n  var CHECKSUM_WORDS_LENGTH = 3;\n\n  // The length of the digest of the shared secret in bytes.\n  var DIGEST_LENGTH = 4;\n\n  // The customization string used in the RS1024 checksum and in the PBKDF2 salt when the extendable backup flag is not set.\n  var CUSTOMIZATION_STRING_NON_EXTENDABLE = \"shamir\";\n\n  // The customization string used in RS1024 checksum when the extendable backup flag is set.\n  var CUSTOMIZATION_STRING_EXTENDABLE = \"shamir_extendable\";\n\n  // The minimum allowed entropy of the master secret.\n  var MIN_ENTROPY_BITS = 128;\n\n  // The minimum allowed length of the mnemonic in words.\n  var METADATA_WORDS_LENGTH = ITERATION_EXP_WORDS_LENGTH + 2 + CHECKSUM_WORDS_LENGTH;\n\n  // The length of the mnemonic in words without the share value.\n  var MNEMONICS_WORDS_LENGTH = parseInt(METADATA_WORDS_LENGTH + (MIN_ENTROPY_BITS + RADIX_BITS - 1) / RADIX_BITS, 10);\n\n  // The minimum number of iterations to use in PBKDF2.\n  var ITERATION_COUNT = 10000;\n\n  // The number of rounds to use in the Feistel cipher.\n  var ROUND_COUNT = 4;\n\n  // The index of the share containing the digest of the shared secret.\n  var DIGEST_INDEX = 254;\n\n  // The index of the share containing the shared secret.\n  var SECRET_INDEX = 255;\n\n  //\n  // Helper functions for SLIP39 implementation.\n  //\n  String.prototype.slip39EncodeHex = function () {\n    var bytes = [];\n    for (var i = 0; i < this.length; ++i) {\n      bytes.push(this.charCodeAt(i));\n    }\n    return bytes;\n  };\n  Array.prototype.slip39DecodeHex = function () {\n    var str = [];\n    var hex = this.toString().split(\",\");\n    for (var i = 0; i < hex.length; i++) {\n      str.push(String.fromCharCode(hex[i]));\n    }\n    return str.toString().replace(/,/g, \"\");\n  };\n  Array.prototype.slip39Generate = function (m) {\n    var v = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (_) {\n      return _;\n    };\n    var n = m || this.length;\n    for (var i = 0; i < n; i++) {\n      this[i] = v(i);\n    }\n    return this;\n  };\n  Array.prototype.toHexString = function () {\n    return Array.prototype.map.call(this, function (byte) {\n      return (\"0\" + (byte & 0xff).toString(16)).slice(-2);\n    }).join(\"\");\n  };\n  Array.prototype.toByteArray = function (hexString) {\n    for (var i = 0; i < hexString.length; i = i + 2) {\n      this.push(parseInt(hexString.substr(i, 2), 16));\n    }\n    return this;\n  };\n  var BIGINT_WORD_BITS = BigInt(8);\n  function decodeBigInt(bytes) {\n    var result = BigInt(0);\n    for (var i = 0; i < bytes.length; i++) {\n      var b = BigInt(bytes[bytes.length - i - 1]);\n      result = result + (b << BIGINT_WORD_BITS * BigInt(i));\n    }\n    return result;\n  }\n  function encodeBigInt(number) {\n    var paddedLength = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var num = number;\n    var BYTE_MASK = BigInt(0xff);\n    var BIGINT_ZERO = BigInt(0);\n    var result = new Array(0);\n    while (num > BIGINT_ZERO) {\n      var i = parseInt(num & BYTE_MASK, 10);\n      result.unshift(i);\n      num = num >> BIGINT_WORD_BITS;\n    }\n\n    // Zero padding to the length\n    for (var _i = result.length; _i < paddedLength; _i++) {\n      result.unshift(0);\n    }\n    if (paddedLength !== 0 && result.length > paddedLength) {\n      throw new Error(`Error in encoding BigInt value, expected less than ${paddedLength} length value, got ${result.length}`);\n    }\n    return result;\n  }\n  function bitsToBytes(n) {\n    var res = (n + 7) / 8;\n    var b = parseInt(res, RADIX_BITS);\n    return b;\n  }\n  function bitsToWords(n) {\n    var res = (n + RADIX_BITS - 1) / RADIX_BITS;\n    var b = parseInt(res, RADIX_BITS);\n    return b;\n  }\n\n  //\n  // Returns a randomly generated integer in the range 0, ... , 2**ID_LENGTH_BITS - 1.\n  //\n  function randomBytes() {\n    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;\n    var randoms = crypto.randomBytes(length);\n    return Array.prototype.slice.call(randoms, 0);\n  }\n\n  //\n  // The round function used internally by the Feistel cipher.\n  //\n  function roundFunction(round, passphrase, exp, salt, secret) {\n    var saltedSecret = salt.concat(secret);\n    var roundedPhrase = [round].concat(passphrase);\n    var count = (ITERATION_COUNT << exp) / ROUND_COUNT;\n    var key = crypto.pbkdf2Sync(Buffer.from(roundedPhrase), Buffer.from(saltedSecret), count, secret.length, \"sha256\");\n    return Array.prototype.slice.call(key, 0);\n  }\n  function crypt(masterSecret, passphrase, iterationExponent, identifier, extendableBackupFlag) {\n    var encrypt = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n    // Iteration exponent validated here.\n    if (iterationExponent < 0 || iterationExponent > MAX_ITERATION_EXP) {\n      throw Error(`Invalid iteration exponent (${iterationExponent}). Expected between 0 and ${MAX_ITERATION_EXP}`);\n    }\n    var IL = masterSecret.slice().slice(0, masterSecret.length / 2);\n    var IR = masterSecret.slice().slice(masterSecret.length / 2);\n    var pwd = passphrase.slip39EncodeHex();\n    var salt = getSalt(identifier, extendableBackupFlag);\n    var range = Array().slip39Generate(ROUND_COUNT);\n    range = encrypt ? range : range.reverse();\n    range.forEach(function (round) {\n      var f = roundFunction(round, pwd, iterationExponent, salt, IR);\n      var t = xor(IL, f);\n      IL = IR;\n      IR = t;\n    });\n    return IR.concat(IL);\n  }\n  function createDigest(randomData, sharedSecret) {\n    var hmac = crypto.createHmac(\"sha256\", Buffer.from(randomData));\n    hmac.update(Buffer.from(sharedSecret));\n    var result = hmac.digest();\n    result = result.slice(0, 4);\n    return Array.prototype.slice.call(result, 0);\n  }\n  function splitSecret(threshold, shareCount, sharedSecret) {\n    if (threshold <= 0) {\n      throw Error(`The requested threshold (${threshold}) must be a positive integer.`);\n    }\n    if (threshold > shareCount) {\n      throw Error(`The requested threshold (${threshold}) must not exceed the number of shares (${shareCount}).`);\n    }\n    if (shareCount > MAX_SHARE_COUNT) {\n      throw Error(`The requested number of shares (${shareCount}) must not exceed ${MAX_SHARE_COUNT}.`);\n    }\n    //  If the threshold is 1, then the digest of the shared secret is not used.\n    if (threshold === 1) {\n      return Array().slip39Generate(shareCount, function () {\n        return sharedSecret;\n      });\n    }\n    var randomShareCount = threshold - 2;\n    var randomPart = randomBytes(sharedSecret.length - DIGEST_LENGTH);\n    var digest = createDigest(randomPart, sharedSecret);\n    var baseShares = new Map();\n    var shares = [];\n    if (randomShareCount) {\n      shares = Array().slip39Generate(randomShareCount, function () {\n        return randomBytes(sharedSecret.length);\n      });\n      shares.forEach(function (item, idx) {\n        baseShares.set(idx, item);\n      });\n    }\n    baseShares.set(DIGEST_INDEX, digest.concat(randomPart));\n    baseShares.set(SECRET_INDEX, sharedSecret);\n    for (var i = randomShareCount; i < shareCount; i++) {\n      var rr = interpolate(baseShares, i);\n      shares.push(rr);\n    }\n    return shares;\n  }\n\n  //\n  // Returns a randomly generated integer in the range 0, ... , 2**ID_BITS_LENGTH - 1.\n  //\n  function generateIdentifier() {\n    var byte = bitsToBytes(ID_BITS_LENGTH);\n    var bits = ID_BITS_LENGTH % 8;\n    var identifier = randomBytes(byte);\n    identifier[0] = identifier[0] & (1 << bits) - 1;\n    return identifier;\n  }\n  function xor(a, b) {\n    if (a.length !== b.length) {\n      throw new Error(`Invalid padding in mnemonic or insufficient length of mnemonics (${a.length} or ${b.length})`);\n    }\n    return Array().slip39Generate(a.length, function (i) {\n      return a[i] ^ b[i];\n    });\n  }\n  function getSalt(identifier, extendableBackupFlag) {\n    if (extendableBackupFlag) {\n      return [];\n    } else {\n      var salt = CUSTOMIZATION_STRING_NON_EXTENDABLE.slip39EncodeHex();\n      return salt.concat(identifier);\n    }\n  }\n  function interpolate(shares, x) {\n    var xCoord = new Set(shares.keys());\n    var arr = Array.from(shares.values(), function (v) {\n      return v.length;\n    });\n    var sharesValueLengths = new Set(arr);\n    if (sharesValueLengths.size !== 1) {\n      throw new Error(\"Invalid set of shares. All share values must have the same length.\");\n    }\n    if (xCoord.has(x)) {\n      shares.forEach(function (v, k) {\n        if (k === x) {\n          return v;\n        }\n      });\n    }\n\n    // Logarithm of the product of (x_i - x) for i = 1, ... , k.\n    var logProd = 0;\n    shares.forEach(function (v, k) {\n      logProd = logProd + LOG_TABLE[k ^ x];\n    });\n    var results = Array().slip39Generate(sharesValueLengths.values().next().value, function () {\n      return 0;\n    });\n    shares.forEach(function (v, k) {\n      // The logarithm of the Lagrange basis polynomial evaluated at x.\n      var sum = 0;\n      shares.forEach(function (vv, kk) {\n        sum = sum + LOG_TABLE[k ^ kk];\n      });\n\n      // FIXME: -18 % 255 = 237. IT shoulud be 237 and not -18 as it's\n      // implemented in javascript.\n      var basis = (logProd - LOG_TABLE[k ^ x] - sum) % 255;\n      var logBasisEval = basis < 0 ? 255 + basis : basis;\n      v.forEach(function (item, idx) {\n        var shareVal = item;\n        var intermediateSum = results[idx];\n        var r = shareVal !== 0 ? EXP_TABLE[(LOG_TABLE[shareVal] + logBasisEval) % 255] : 0;\n        var res = intermediateSum ^ r;\n        results[idx] = res;\n      });\n    });\n    return results;\n  }\n  function rs1024Polymod(data) {\n    var GEN = [0xe0e040, 0x1c1c080, 0x3838100, 0x7070200, 0xe0e0009, 0x1c0c2412, 0x38086c24, 0x3090fc48, 0x21b1f890, 0x3f3f120];\n    var chk = 1;\n    data.forEach(function (byte) {\n      var b = chk >> 20;\n      chk = (chk & 0xfffff) << 10 ^ byte;\n      for (var i = 0; i < 10; i++) {\n        var gen = (b >> i & 1) !== 0 ? GEN[i] : 0;\n        chk = chk ^ gen;\n      }\n    });\n    return chk;\n  }\n  function get_customization_string(extendableBackupFlag) {\n    return extendableBackupFlag ? CUSTOMIZATION_STRING_EXTENDABLE : CUSTOMIZATION_STRING_NON_EXTENDABLE;\n  }\n  function rs1024CreateChecksum(data, extendableBackupFlag) {\n    var values = get_customization_string(extendableBackupFlag).slip39EncodeHex().concat(data).concat(Array().slip39Generate(CHECKSUM_WORDS_LENGTH, function () {\n      return 0;\n    }));\n    var polymod = rs1024Polymod(values) ^ 1;\n    var result = Array().slip39Generate(CHECKSUM_WORDS_LENGTH, function (i) {\n      return polymod >> 10 * i & 1023;\n    }).reverse();\n    return result;\n  }\n  function rs1024VerifyChecksum(data, extendableBackupFlag) {\n    return rs1024Polymod(get_customization_string(extendableBackupFlag).slip39EncodeHex().concat(data)) === 1;\n  }\n\n  //\n  // Converts a list of base 1024 indices in big endian order to an integer value.\n  //\n  function intFromIndices(indices) {\n    var value = BigInt(0);\n    var radix = BigInt(Math.pow(2, RADIX_BITS));\n    indices.forEach(function (index) {\n      value = value * radix + BigInt(index);\n    });\n    return value;\n  }\n\n  //\n  // Converts a Big integer value to indices in big endian order.\n  //\n  function intToIndices(value, length, bits) {\n    var mask = BigInt((1 << bits) - 1);\n    var result = Array().slip39Generate(length, function (i) {\n      return parseInt(value >> BigInt(i) * BigInt(bits) & mask, 10);\n    });\n    return result.reverse();\n  }\n  function mnemonicFromIndices(indices) {\n    var result = indices.map(function (index) {\n      return WORD_LIST[index];\n    });\n    return result.toString().split(\",\").join(\" \");\n  }\n  function mnemonicToIndices(mnemonic) {\n    if (typeof mnemonic !== \"string\") {\n      throw new Error(`Mnemonic expected to be typeof string with white space separated words. Instead found typeof ${typeof mnemonic}.`);\n    }\n    var words = mnemonic.toLowerCase().split(\" \");\n    var result = words.reduce(function (prev, item) {\n      var index = WORD_LIST_MAP[item];\n      if (typeof index === \"undefined\") {\n        throw new Error(`Invalid mnemonic word ${item}.`);\n      }\n      return prev.concat(index);\n    }, []);\n    return result;\n  }\n  function recoverSecret(threshold, shares) {\n    // If the threshold is 1, then the digest of the shared secret is not used.\n    if (threshold === 1) {\n      return shares.values().next().value;\n    }\n    var sharedSecret = interpolate(shares, SECRET_INDEX);\n    var digestShare = interpolate(shares, DIGEST_INDEX);\n    var digest = digestShare.slice(0, DIGEST_LENGTH);\n    var randomPart = digestShare.slice(DIGEST_LENGTH);\n    var recoveredDigest = createDigest(randomPart, sharedSecret);\n    if (!listsAreEqual(digest, recoveredDigest)) {\n      throw new Error(\"Invalid digest of the shared secret.\");\n    }\n    return sharedSecret;\n  }\n\n  //\n  // Combines mnemonic shares to obtain the master secret which was previously\n  // split using Shamir's secret sharing scheme.\n  //\n  function combineMnemonics(mnemonics) {\n    var passphrase = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n    if (mnemonics === null || mnemonics.length === 0) {\n      throw new Error(\"The list of mnemonics is empty.\");\n    }\n    var decoded = decodeMnemonics(mnemonics);\n    var identifier = decoded.identifier;\n    var extendableBackupFlag = decoded.extendableBackupFlag;\n    var iterationExponent = decoded.iterationExponent;\n    var groupThreshold = decoded.groupThreshold;\n    var groupCount = decoded.groupCount;\n    var groups = decoded.groups;\n    if (groups.size < groupThreshold) {\n      throw new Error(`Insufficient number of mnemonic groups (${groups.size}). The required number of groups is ${groupThreshold}.`);\n    }\n    if (groups.size !== groupThreshold) {\n      throw new Error(`Wrong number of mnemonic groups. Expected ${groupThreshold} groups, but ${groups.size} were provided.`);\n    }\n    var allShares = new Map();\n    groups.forEach(function (members, groupIndex) {\n      var threshold = members.keys().next().value;\n      var shares = members.values().next().value;\n      if (shares.size !== threshold) {\n        var prefix = groupPrefix(identifier, extendableBackupFlag, iterationExponent, groupIndex, groupThreshold, groupCount);\n        throw new Error(`Wrong number of mnemonics. Expected ${threshold} mnemonics starting with \"${mnemonicFromIndices(prefix)}\", \\n but ${shares.size} were provided.`);\n      }\n      var recovered = recoverSecret(threshold, shares);\n      allShares.set(groupIndex, recovered);\n    });\n    var ems = recoverSecret(groupThreshold, allShares);\n    var id = intToIndices(BigInt(identifier), ITERATION_EXP_WORDS_LENGTH, 8);\n    var ms = crypt(ems, passphrase, iterationExponent, id, extendableBackupFlag, false);\n    return ms;\n  }\n  function decodeMnemonics(mnemonics) {\n    if (!(mnemonics instanceof Array)) {\n      throw new Error(\"Mnemonics should be an array of strings\");\n    }\n    var identifiers = new Set();\n    var extendableBackupFlags = new Set();\n    var iterationExponents = new Set();\n    var groupThresholds = new Set();\n    var groupCounts = new Set();\n    var groups = new Map();\n    mnemonics.forEach(function (mnemonic) {\n      var decoded = decodeMnemonic(mnemonic);\n      identifiers.add(decoded.identifier);\n      extendableBackupFlags.add(decoded.extendableBackupFlag);\n      iterationExponents.add(decoded.iterationExponent);\n      var groupIndex = decoded.groupIndex;\n      groupThresholds.add(decoded.groupThreshold);\n      groupCounts.add(decoded.groupCount);\n      var memberIndex = decoded.memberIndex;\n      var memberThreshold = decoded.memberThreshold;\n      var share = decoded.share;\n      var group = !groups.has(groupIndex) ? new Map() : groups.get(groupIndex);\n      var member = !group.has(memberThreshold) ? new Map() : group.get(memberThreshold);\n      member.set(memberIndex, share);\n      group.set(memberThreshold, member);\n      if (group.size !== 1) {\n        throw new Error(\"Invalid set of mnemonics. All mnemonics in a group must have the same member threshold.\");\n      }\n      groups.set(groupIndex, group);\n    });\n    if (identifiers.size !== 1 || extendableBackupFlags.size !== 1 || iterationExponents.size !== 1) {\n      throw new Error(`Invalid set of mnemonics. All mnemonics must begin with the same ${ITERATION_EXP_WORDS_LENGTH} words.`);\n    }\n    if (groupThresholds.size !== 1) {\n      throw new Error(\"Invalid set of mnemonics. All mnemonics must have the same group threshold.\");\n    }\n    if (groupCounts.size !== 1) {\n      throw new Error(\"Invalid set of mnemonics. All mnemonics must have the same group count.\");\n    }\n    return {\n      identifier: identifiers.values().next().value,\n      extendableBackupFlag: extendableBackupFlags.values().next().value,\n      iterationExponent: iterationExponents.values().next().value,\n      groupThreshold: groupThresholds.values().next().value,\n      groupCount: groupCounts.values().next().value,\n      groups: groups\n    };\n  }\n\n  //\n  // Converts a share mnemonic to share data.\n  //\n  function decodeMnemonic(mnemonic) {\n    var data = mnemonicToIndices(mnemonic);\n    if (data.length < MNEMONICS_WORDS_LENGTH) {\n      throw new Error(`Invalid mnemonic length. The length of each mnemonic must be at least ${MNEMONICS_WORDS_LENGTH} words.`);\n    }\n    var paddingLen = RADIX_BITS * (data.length - METADATA_WORDS_LENGTH) % 16;\n    if (paddingLen > 8) {\n      throw new Error(\"Invalid mnemonic length.\");\n    }\n    var idExpExtInt = parseInt(intFromIndices(data.slice(0, ITERATION_EXP_WORDS_LENGTH)), 10);\n    var identifier = idExpExtInt >> ITERATION_EXP_BITS_LENGTH + EXTENDABLE_BACKUP_FLAG_BITS_LENGTH;\n    var extendableBackupFlag = idExpExtInt >> ITERATION_EXP_BITS_LENGTH & (1 << EXTENDABLE_BACKUP_FLAG_BITS_LENGTH) - 1;\n    var iterationExponent = idExpExtInt & (1 << ITERATION_EXP_BITS_LENGTH) - 1;\n    if (!rs1024VerifyChecksum(data, extendableBackupFlag)) {\n      throw new Error(\"Invalid mnemonic checksum\");\n    }\n    var tmp = intFromIndices(data.slice(ITERATION_EXP_WORDS_LENGTH, ITERATION_EXP_WORDS_LENGTH + 2));\n    var indices = intToIndices(tmp, 5, 4);\n    var groupIndex = indices[0];\n    var groupThreshold = indices[1];\n    var groupCount = indices[2];\n    var memberIndex = indices[3];\n    var memberThreshold = indices[4];\n    var valueData = data.slice(ITERATION_EXP_WORDS_LENGTH + 2, data.length - CHECKSUM_WORDS_LENGTH);\n    if (groupCount < groupThreshold) {\n      throw new Error(`Invalid mnemonic: ${mnemonic}.\\n Group threshold (${groupThreshold}) cannot be greater than group count (${groupCount}).`);\n    }\n    var valueInt = intFromIndices(valueData);\n    try {\n      var valueByteCount = bitsToBytes(RADIX_BITS * valueData.length - paddingLen);\n      var share = encodeBigInt(valueInt, valueByteCount);\n      return {\n        identifier: identifier,\n        extendableBackupFlag: extendableBackupFlag,\n        iterationExponent: iterationExponent,\n        groupIndex: groupIndex,\n        groupThreshold: groupThreshold + 1,\n        groupCount: groupCount + 1,\n        memberIndex: memberIndex,\n        memberThreshold: memberThreshold + 1,\n        share: share\n      };\n    } catch (e) {\n      throw new Error(`Invalid mnemonic padding (${e})`);\n    }\n  }\n  function validateMnemonic(mnemonic) {\n    try {\n      decodeMnemonic(mnemonic);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  }\n  function groupPrefix(identifier, extendableBackupFlag, iterationExponent, groupIndex, groupThreshold, groupCount) {\n    var idExpInt = BigInt((identifier << ITERATION_EXP_BITS_LENGTH + EXTENDABLE_BACKUP_FLAG_BITS_LENGTH) + (extendableBackupFlag << ITERATION_EXP_BITS_LENGTH) + iterationExponent);\n    var indc = intToIndices(idExpInt, ITERATION_EXP_WORDS_LENGTH, RADIX_BITS);\n    var indc2 = (groupIndex << 6) + (groupThreshold - 1 << 2) + (groupCount - 1 >> 2);\n    indc.push(indc2);\n    return indc;\n  }\n  function listsAreEqual(a, b) {\n    if (a === null || b === null || a.length !== b.length) {\n      return false;\n    }\n    var i = 0;\n    return a.every(function (item) {\n      return b[i++] === item;\n    });\n  }\n\n  //\n  //  Converts share data to a share mnemonic.\n  //\n  function encodeMnemonic(identifier, extendableBackupFlag, iterationExponent, groupIndex, groupThreshold, groupCount, memberIndex, memberThreshold, value) {\n    // Convert the share value from bytes to wordlist indices.\n    var valueWordCount = bitsToWords(value.length * 8);\n    var valueInt = decodeBigInt(value);\n    var newIdentifier = parseInt(decodeBigInt(identifier), 10);\n    var gp = groupPrefix(newIdentifier, extendableBackupFlag, iterationExponent, groupIndex, groupThreshold, groupCount);\n    var tp = intToIndices(valueInt, valueWordCount, RADIX_BITS);\n    var calc = ((groupCount - 1 & 3) << 8) + (memberIndex << 4) + (memberThreshold - 1);\n    gp.push(calc);\n    var shareData = gp.concat(tp);\n    var checksum = rs1024CreateChecksum(shareData, extendableBackupFlag);\n    return mnemonicFromIndices(shareData.concat(checksum));\n  }\n\n  // The precomputed exponent and log tables.\n  // ```\n  //    const exp = List<int>.filled(255, 0)\n  //    const log = List<int>.filled(256, 0)\n  //    const poly = 1\n  //\n  //    for (let i = 0; i < exp.length; i++) {\n  //      exp[i] = poly\n  //      log[poly] = i\n  //      // Multiply poly by the polynomial x + 1.\n  //      poly = (poly << 1) ^ poly\n  //      // Reduce poly by x^8 + x^4 + x^3 + x + 1.\n  //      if (poly & 0x100 === 0x100) poly ^= 0x11B\n  //   }\n  // ```\n  var EXP_TABLE = [1, 3, 5, 15, 17, 51, 85, 255, 26, 46, 114, 150, 161, 248, 19, 53, 95, 225, 56, 72, 216, 115, 149, 164, 247, 2, 6, 10, 30, 34, 102, 170, 229, 52, 92, 228, 55, 89, 235, 38, 106, 190, 217, 112, 144, 171, 230, 49, 83, 245, 4, 12, 20, 60, 68, 204, 79, 209, 104, 184, 211, 110, 178, 205, 76, 212, 103, 169, 224, 59, 77, 215, 98, 166, 241, 8, 24, 40, 120, 136, 131, 158, 185, 208, 107, 189, 220, 127, 129, 152, 179, 206, 73, 219, 118, 154, 181, 196, 87, 249, 16, 48, 80, 240, 11, 29, 39, 105, 187, 214, 97, 163, 254, 25, 43, 125, 135, 146, 173, 236, 47, 113, 147, 174, 233, 32, 96, 160, 251, 22, 58, 78, 210, 109, 183, 194, 93, 231, 50, 86, 250, 21, 63, 65, 195, 94, 226, 61, 71, 201, 64, 192, 91, 237, 44, 116, 156, 191, 218, 117, 159, 186, 213, 100, 172, 239, 42, 126, 130, 157, 188, 223, 122, 142, 137, 128, 155, 182, 193, 88, 232, 35, 101, 175, 234, 37, 111, 177, 200, 67, 197, 84, 252, 31, 33, 99, 165, 244, 7, 9, 27, 45, 119, 153, 176, 203, 70, 202, 69, 207, 74, 222, 121, 139, 134, 145, 168, 227, 62, 66, 198, 81, 243, 14, 18, 54, 90, 238, 41, 123, 141, 140, 143, 138, 133, 148, 167, 242, 13, 23, 57, 75, 221, 124, 132, 151, 162, 253, 28, 36, 108, 180, 199, 82, 246];\n  var LOG_TABLE = [0, 0, 25, 1, 50, 2, 26, 198, 75, 199, 27, 104, 51, 238, 223, 3, 100, 4, 224, 14, 52, 141, 129, 239, 76, 113, 8, 200, 248, 105, 28, 193, 125, 194, 29, 181, 249, 185, 39, 106, 77, 228, 166, 114, 154, 201, 9, 120, 101, 47, 138, 5, 33, 15, 225, 36, 18, 240, 130, 69, 53, 147, 218, 142, 150, 143, 219, 189, 54, 208, 206, 148, 19, 92, 210, 241, 64, 70, 131, 56, 102, 221, 253, 48, 191, 6, 139, 98, 179, 37, 226, 152, 34, 136, 145, 16, 126, 110, 72, 195, 163, 182, 30, 66, 58, 107, 40, 84, 250, 133, 61, 186, 43, 121, 10, 21, 155, 159, 94, 202, 78, 212, 172, 229, 243, 115, 167, 87, 175, 88, 168, 80, 244, 234, 214, 116, 79, 174, 233, 213, 231, 230, 173, 232, 44, 215, 117, 122, 235, 22, 11, 245, 89, 203, 95, 176, 156, 169, 81, 160, 127, 12, 246, 111, 23, 196, 73, 236, 216, 67, 31, 45, 164, 118, 123, 183, 204, 187, 62, 90, 251, 96, 177, 134, 59, 82, 161, 108, 170, 85, 41, 157, 151, 178, 135, 144, 97, 190, 220, 252, 188, 149, 207, 205, 55, 63, 91, 209, 83, 57, 132, 60, 65, 162, 109, 71, 20, 42, 158, 93, 86, 242, 211, 171, 68, 17, 146, 217, 35, 32, 46, 137, 180, 124, 184, 38, 119, 153, 227, 165, 103, 74, 237, 222, 197, 49, 254, 24, 13, 99, 140, 128, 192, 247, 112, 7];\n\n  //\n  // SLIP39 wordlist\n  //\n  var WORD_LIST = [\"academic\", \"acid\", \"acne\", \"acquire\", \"acrobat\", \"activity\", \"actress\", \"adapt\", \"adequate\", \"adjust\", \"admit\", \"adorn\", \"adult\", \"advance\", \"advocate\", \"afraid\", \"again\", \"agency\", \"agree\", \"aide\", \"aircraft\", \"airline\", \"airport\", \"ajar\", \"alarm\", \"album\", \"alcohol\", \"alien\", \"alive\", \"alpha\", \"already\", \"alto\", \"aluminum\", \"always\", \"amazing\", \"ambition\", \"amount\", \"amuse\", \"analysis\", \"anatomy\", \"ancestor\", \"ancient\", \"angel\", \"angry\", \"animal\", \"answer\", \"antenna\", \"anxiety\", \"apart\", \"aquatic\", \"arcade\", \"arena\", \"argue\", \"armed\", \"artist\", \"artwork\", \"aspect\", \"auction\", \"august\", \"aunt\", \"average\", \"aviation\", \"avoid\", \"award\", \"away\", \"axis\", \"axle\", \"beam\", \"beard\", \"beaver\", \"become\", \"bedroom\", \"behavior\", \"being\", \"believe\", \"belong\", \"benefit\", \"best\", \"beyond\", \"bike\", \"biology\", \"birthday\", \"bishop\", \"black\", \"blanket\", \"blessing\", \"blimp\", \"blind\", \"blue\", \"body\", \"bolt\", \"boring\", \"born\", \"both\", \"boundary\", \"bracelet\", \"branch\", \"brave\", \"breathe\", \"briefing\", \"broken\", \"brother\", \"browser\", \"bucket\", \"budget\", \"building\", \"bulb\", \"bulge\", \"bumpy\", \"bundle\", \"burden\", \"burning\", \"busy\", \"buyer\", \"cage\", \"calcium\", \"camera\", \"campus\", \"canyon\", \"capacity\", \"capital\", \"capture\", \"carbon\", \"cards\", \"careful\", \"cargo\", \"carpet\", \"carve\", \"category\", \"cause\", \"ceiling\", \"center\", \"ceramic\", \"champion\", \"change\", \"charity\", \"check\", \"chemical\", \"chest\", \"chew\", \"chubby\", \"cinema\", \"civil\", \"class\", \"clay\", \"cleanup\", \"client\", \"climate\", \"clinic\", \"clock\", \"clogs\", \"closet\", \"clothes\", \"club\", \"cluster\", \"coal\", \"coastal\", \"coding\", \"column\", \"company\", \"corner\", \"costume\", \"counter\", \"course\", \"cover\", \"cowboy\", \"cradle\", \"craft\", \"crazy\", \"credit\", \"cricket\", \"criminal\", \"crisis\", \"critical\", \"crowd\", \"crucial\", \"crunch\", \"crush\", \"crystal\", \"cubic\", \"cultural\", \"curious\", \"curly\", \"custody\", \"cylinder\", \"daisy\", \"damage\", \"dance\", \"darkness\", \"database\", \"daughter\", \"deadline\", \"deal\", \"debris\", \"debut\", \"decent\", \"decision\", \"declare\", \"decorate\", \"decrease\", \"deliver\", \"demand\", \"density\", \"deny\", \"depart\", \"depend\", \"depict\", \"deploy\", \"describe\", \"desert\", \"desire\", \"desktop\", \"destroy\", \"detailed\", \"detect\", \"device\", \"devote\", \"diagnose\", \"dictate\", \"diet\", \"dilemma\", \"diminish\", \"dining\", \"diploma\", \"disaster\", \"discuss\", \"disease\", \"dish\", \"dismiss\", \"display\", \"distance\", \"dive\", \"divorce\", \"document\", \"domain\", \"domestic\", \"dominant\", \"dough\", \"downtown\", \"dragon\", \"dramatic\", \"dream\", \"dress\", \"drift\", \"drink\", \"drove\", \"drug\", \"dryer\", \"duckling\", \"duke\", \"duration\", \"dwarf\", \"dynamic\", \"early\", \"earth\", \"easel\", \"easy\", \"echo\", \"eclipse\", \"ecology\", \"edge\", \"editor\", \"educate\", \"either\", \"elbow\", \"elder\", \"election\", \"elegant\", \"element\", \"elephant\", \"elevator\", \"elite\", \"else\", \"email\", \"emerald\", \"emission\", \"emperor\", \"emphasis\", \"employer\", \"empty\", \"ending\", \"endless\", \"endorse\", \"enemy\", \"energy\", \"enforce\", \"engage\", \"enjoy\", \"enlarge\", \"entrance\", \"envelope\", \"envy\", \"epidemic\", \"episode\", \"equation\", \"equip\", \"eraser\", \"erode\", \"escape\", \"estate\", \"estimate\", \"evaluate\", \"evening\", \"evidence\", \"evil\", \"evoke\", \"exact\", \"example\", \"exceed\", \"exchange\", \"exclude\", \"excuse\", \"execute\", \"exercise\", \"exhaust\", \"exotic\", \"expand\", \"expect\", \"explain\", \"express\", \"extend\", \"extra\", \"eyebrow\", \"facility\", \"fact\", \"failure\", \"faint\", \"fake\", \"false\", \"family\", \"famous\", \"fancy\", \"fangs\", \"fantasy\", \"fatal\", \"fatigue\", \"favorite\", \"fawn\", \"fiber\", \"fiction\", \"filter\", \"finance\", \"findings\", \"finger\", \"firefly\", \"firm\", \"fiscal\", \"fishing\", \"fitness\", \"flame\", \"flash\", \"flavor\", \"flea\", \"flexible\", \"flip\", \"float\", \"floral\", \"fluff\", \"focus\", \"forbid\", \"force\", \"forecast\", \"forget\", \"formal\", \"fortune\", \"forward\", \"founder\", \"fraction\", \"fragment\", \"frequent\", \"freshman\", \"friar\", \"fridge\", \"friendly\", \"frost\", \"froth\", \"frozen\", \"fumes\", \"funding\", \"furl\", \"fused\", \"galaxy\", \"game\", \"garbage\", \"garden\", \"garlic\", \"gasoline\", \"gather\", \"general\", \"genius\", \"genre\", \"genuine\", \"geology\", \"gesture\", \"glad\", \"glance\", \"glasses\", \"glen\", \"glimpse\", \"goat\", \"golden\", \"graduate\", \"grant\", \"grasp\", \"gravity\", \"gray\", \"greatest\", \"grief\", \"grill\", \"grin\", \"grocery\", \"gross\", \"group\", \"grownup\", \"grumpy\", \"guard\", \"guest\", \"guilt\", \"guitar\", \"gums\", \"hairy\", \"hamster\", \"hand\", \"hanger\", \"harvest\", \"have\", \"havoc\", \"hawk\", \"hazard\", \"headset\", \"health\", \"hearing\", \"heat\", \"helpful\", \"herald\", \"herd\", \"hesitate\", \"hobo\", \"holiday\", \"holy\", \"home\", \"hormone\", \"hospital\", \"hour\", \"huge\", \"human\", \"humidity\", \"hunting\", \"husband\", \"hush\", \"husky\", \"hybrid\", \"idea\", \"identify\", \"idle\", \"image\", \"impact\", \"imply\", \"improve\", \"impulse\", \"include\", \"income\", \"increase\", \"index\", \"indicate\", \"industry\", \"infant\", \"inform\", \"inherit\", \"injury\", \"inmate\", \"insect\", \"inside\", \"install\", \"intend\", \"intimate\", \"invasion\", \"involve\", \"iris\", \"island\", \"isolate\", \"item\", \"ivory\", \"jacket\", \"jerky\", \"jewelry\", \"join\", \"judicial\", \"juice\", \"jump\", \"junction\", \"junior\", \"junk\", \"jury\", \"justice\", \"kernel\", \"keyboard\", \"kidney\", \"kind\", \"kitchen\", \"knife\", \"knit\", \"laden\", \"ladle\", \"ladybug\", \"lair\", \"lamp\", \"language\", \"large\", \"laser\", \"laundry\", \"lawsuit\", \"leader\", \"leaf\", \"learn\", \"leaves\", \"lecture\", \"legal\", \"legend\", \"legs\", \"lend\", \"length\", \"level\", \"liberty\", \"library\", \"license\", \"lift\", \"likely\", \"lilac\", \"lily\", \"lips\", \"liquid\", \"listen\", \"literary\", \"living\", \"lizard\", \"loan\", \"lobe\", \"location\", \"losing\", \"loud\", \"loyalty\", \"luck\", \"lunar\", \"lunch\", \"lungs\", \"luxury\", \"lying\", \"lyrics\", \"machine\", \"magazine\", \"maiden\", \"mailman\", \"main\", \"makeup\", \"making\", \"mama\", \"manager\", \"mandate\", \"mansion\", \"manual\", \"marathon\", \"march\", \"market\", \"marvel\", \"mason\", \"material\", \"math\", \"maximum\", \"mayor\", \"meaning\", \"medal\", \"medical\", \"member\", \"memory\", \"mental\", \"merchant\", \"merit\", \"method\", \"metric\", \"midst\", \"mild\", \"military\", \"mineral\", \"minister\", \"miracle\", \"mixed\", \"mixture\", \"mobile\", \"modern\", \"modify\", \"moisture\", \"moment\", \"morning\", \"mortgage\", \"mother\", \"mountain\", \"mouse\", \"move\", \"much\", \"mule\", \"multiple\", \"muscle\", \"museum\", \"music\", \"mustang\", \"nail\", \"national\", \"necklace\", \"negative\", \"nervous\", \"network\", \"news\", \"nuclear\", \"numb\", \"numerous\", \"nylon\", \"oasis\", \"obesity\", \"object\", \"observe\", \"obtain\", \"ocean\", \"often\", \"olympic\", \"omit\", \"oral\", \"orange\", \"orbit\", \"order\", \"ordinary\", \"organize\", \"ounce\", \"oven\", \"overall\", \"owner\", \"paces\", \"pacific\", \"package\", \"paid\", \"painting\", \"pajamas\", \"pancake\", \"pants\", \"papa\", \"paper\", \"parcel\", \"parking\", \"party\", \"patent\", \"patrol\", \"payment\", \"payroll\", \"peaceful\", \"peanut\", \"peasant\", \"pecan\", \"penalty\", \"pencil\", \"percent\", \"perfect\", \"permit\", \"petition\", \"phantom\", \"pharmacy\", \"photo\", \"phrase\", \"physics\", \"pickup\", \"picture\", \"piece\", \"pile\", \"pink\", \"pipeline\", \"pistol\", \"pitch\", \"plains\", \"plan\", \"plastic\", \"platform\", \"playoff\", \"pleasure\", \"plot\", \"plunge\", \"practice\", \"prayer\", \"preach\", \"predator\", \"pregnant\", \"premium\", \"prepare\", \"presence\", \"prevent\", \"priest\", \"primary\", \"priority\", \"prisoner\", \"privacy\", \"prize\", \"problem\", \"process\", \"profile\", \"program\", \"promise\", \"prospect\", \"provide\", \"prune\", \"public\", \"pulse\", \"pumps\", \"punish\", \"puny\", \"pupal\", \"purchase\", \"purple\", \"python\", \"quantity\", \"quarter\", \"quick\", \"quiet\", \"race\", \"racism\", \"radar\", \"railroad\", \"rainbow\", \"raisin\", \"random\", \"ranked\", \"rapids\", \"raspy\", \"reaction\", \"realize\", \"rebound\", \"rebuild\", \"recall\", \"receiver\", \"recover\", \"regret\", \"regular\", \"reject\", \"relate\", \"remember\", \"remind\", \"remove\", \"render\", \"repair\", \"repeat\", \"replace\", \"require\", \"rescue\", \"research\", \"resident\", \"response\", \"result\", \"retailer\", \"retreat\", \"reunion\", \"revenue\", \"review\", \"reward\", \"rhyme\", \"rhythm\", \"rich\", \"rival\", \"river\", \"robin\", \"rocky\", \"romantic\", \"romp\", \"roster\", \"round\", \"royal\", \"ruin\", \"ruler\", \"rumor\", \"sack\", \"safari\", \"salary\", \"salon\", \"salt\", \"satisfy\", \"satoshi\", \"saver\", \"says\", \"scandal\", \"scared\", \"scatter\", \"scene\", \"scholar\", \"science\", \"scout\", \"scramble\", \"screw\", \"script\", \"scroll\", \"seafood\", \"season\", \"secret\", \"security\", \"segment\", \"senior\", \"shadow\", \"shaft\", \"shame\", \"shaped\", \"sharp\", \"shelter\", \"sheriff\", \"short\", \"should\", \"shrimp\", \"sidewalk\", \"silent\", \"silver\", \"similar\", \"simple\", \"single\", \"sister\", \"skin\", \"skunk\", \"slap\", \"slavery\", \"sled\", \"slice\", \"slim\", \"slow\", \"slush\", \"smart\", \"smear\", \"smell\", \"smirk\", \"smith\", \"smoking\", \"smug\", \"snake\", \"snapshot\", \"sniff\", \"society\", \"software\", \"soldier\", \"solution\", \"soul\", \"source\", \"space\", \"spark\", \"speak\", \"species\", \"spelling\", \"spend\", \"spew\", \"spider\", \"spill\", \"spine\", \"spirit\", \"spit\", \"spray\", \"sprinkle\", \"square\", \"squeeze\", \"stadium\", \"staff\", \"standard\", \"starting\", \"station\", \"stay\", \"steady\", \"step\", \"stick\", \"stilt\", \"story\", \"strategy\", \"strike\", \"style\", \"subject\", \"submit\", \"sugar\", \"suitable\", \"sunlight\", \"superior\", \"surface\", \"surprise\", \"survive\", \"sweater\", \"swimming\", \"swing\", \"switch\", \"symbolic\", \"sympathy\", \"syndrome\", \"system\", \"tackle\", \"tactics\", \"tadpole\", \"talent\", \"task\", \"taste\", \"taught\", \"taxi\", \"teacher\", \"teammate\", \"teaspoon\", \"temple\", \"tenant\", \"tendency\", \"tension\", \"terminal\", \"testify\", \"texture\", \"thank\", \"that\", \"theater\", \"theory\", \"therapy\", \"thorn\", \"threaten\", \"thumb\", \"thunder\", \"ticket\", \"tidy\", \"timber\", \"timely\", \"ting\", \"tofu\", \"together\", \"tolerate\", \"total\", \"toxic\", \"tracks\", \"traffic\", \"training\", \"transfer\", \"trash\", \"traveler\", \"treat\", \"trend\", \"trial\", \"tricycle\", \"trip\", \"triumph\", \"trouble\", \"true\", \"trust\", \"twice\", \"twin\", \"type\", \"typical\", \"ugly\", \"ultimate\", \"umbrella\", \"uncover\", \"undergo\", \"unfair\", \"unfold\", \"unhappy\", \"union\", \"universe\", \"unkind\", \"unknown\", \"unusual\", \"unwrap\", \"upgrade\", \"upstairs\", \"username\", \"usher\", \"usual\", \"valid\", \"valuable\", \"vampire\", \"vanish\", \"various\", \"vegan\", \"velvet\", \"venture\", \"verdict\", \"verify\", \"very\", \"veteran\", \"vexed\", \"victim\", \"video\", \"view\", \"vintage\", \"violence\", \"viral\", \"visitor\", \"visual\", \"vitamins\", \"vocal\", \"voice\", \"volume\", \"voter\", \"voting\", \"walnut\", \"warmth\", \"warn\", \"watch\", \"wavy\", \"wealthy\", \"weapon\", \"webcam\", \"welcome\", \"welfare\", \"western\", \"width\", \"wildlife\", \"window\", \"wine\", \"wireless\", \"wisdom\", \"withdraw\", \"wits\", \"wolf\", \"woman\", \"work\", \"worthy\", \"wrap\", \"wrist\", \"writing\", \"wrote\", \"year\", \"yelp\", \"yield\", \"yoga\", \"zero\"];\n  var WORD_LIST_MAP = WORD_LIST.reduce(function (obj, val, idx) {\n    obj[val] = idx;\n    return obj;\n  }, {});\n  exports = module.exports = {\n    MIN_ENTROPY_BITS: MIN_ENTROPY_BITS,\n    generateIdentifier: generateIdentifier,\n    encodeMnemonic: encodeMnemonic,\n    validateMnemonic: validateMnemonic,\n    splitSecret: splitSecret,\n    combineMnemonics: combineMnemonics,\n    crypt: crypt,\n    bitsToBytes: bitsToBytes,\n    WORD_LIST: WORD_LIST\n  };\n});","lineCount":603,"map":[[2,2,1,0],[3,2,2,0],[3,6,2,4,"crypto"],[3,12,2,10],[4,2,3,0],[4,6,3,4],[5,4,4,2,"crypto"],[5,10,4,8],[5,13,4,11,"require"],[5,24,4,18],[5,25,4,18,"_dependencyMap"],[5,39,4,18],[5,52,4,27],[5,53,4,28],[6,2,5,0],[6,3,5,1],[6,4,5,2],[6,11,5,9,"err"],[6,14,5,12],[6,16,5,14],[7,4,6,2],[7,10,6,8],[7,14,6,12,"Error"],[7,19,6,17],[7,20,6,18],[7,52,6,50],[7,53,6,51],[8,2,7,0],[10,2,9,0],[11,2,10,0],[11,6,10,6,"RADIX_BITS"],[11,16,10,16],[11,19,10,19],[11,21,10,21],[13,2,12,0],[14,2,13,0],[14,6,13,6,"ID_BITS_LENGTH"],[14,20,13,20],[14,23,13,23],[14,25,13,25],[16,2,15,0],[17,2,16,0],[17,6,16,6,"ITERATION_EXP_BITS_LENGTH"],[17,31,16,31],[17,34,16,34],[17,35,16,35],[19,2,18,0],[20,2,19,0],[20,6,19,6,"EXTENDABLE_BACKUP_FLAG_BITS_LENGTH"],[20,40,19,40],[20,43,19,43],[20,44,19,44],[22,2,21,0],[23,2,22,0],[23,6,22,6,"ITERATION_EXP_WORDS_LENGTH"],[23,32,22,32],[23,35,22,35,"parseInt"],[23,43,22,43],[23,44,23,2],[23,45,23,3,"ID_BITS_LENGTH"],[23,59,23,17],[23,62,24,4,"EXTENDABLE_BACKUP_FLAG_BITS_LENGTH"],[23,96,24,38],[23,99,25,4,"ITERATION_EXP_BITS_LENGTH"],[23,124,25,29],[23,127,26,4,"RADIX_BITS"],[23,137,26,14],[23,140,27,4],[23,141,27,5],[23,145,28,4,"RADIX_BITS"],[23,155,28,14],[23,157,29,2],[23,159,30,0],[23,160,30,1],[25,2,32,0],[26,2,33,0],[26,6,33,6,"MAX_ITERATION_EXP"],[26,23,33,23],[26,26,33,26,"Math"],[26,30,33,30],[26,31,33,31,"pow"],[26,34,33,34],[26,35,33,35],[26,36,33,36],[26,38,33,38,"ITERATION_EXP_BITS_LENGTH"],[26,63,33,63],[26,64,33,64],[28,2,35,0],[29,2,36,0],[29,6,36,6,"MAX_SHARE_COUNT"],[29,21,36,21],[29,24,36,24],[29,26,36,26],[31,2,38,0],[32,2,39,0],[32,6,39,6,"CHECKSUM_WORDS_LENGTH"],[32,27,39,27],[32,30,39,30],[32,31,39,31],[34,2,41,0],[35,2,42,0],[35,6,42,6,"DIGEST_LENGTH"],[35,19,42,19],[35,22,42,22],[35,23,42,23],[37,2,44,0],[38,2,45,0],[38,6,45,6,"CUSTOMIZATION_STRING_NON_EXTENDABLE"],[38,41,45,41],[38,44,45,44],[38,52,45,52],[40,2,47,0],[41,2,48,0],[41,6,48,6,"CUSTOMIZATION_STRING_EXTENDABLE"],[41,37,48,37],[41,40,48,40],[41,59,48,59],[43,2,50,0],[44,2,51,0],[44,6,51,6,"MIN_ENTROPY_BITS"],[44,22,51,22],[44,25,51,25],[44,28,51,28],[46,2,53,0],[47,2,54,0],[47,6,54,6,"METADATA_WORDS_LENGTH"],[47,27,54,27],[47,30,55,2,"ITERATION_EXP_WORDS_LENGTH"],[47,56,55,28],[47,59,55,31],[47,60,55,32],[47,63,55,35,"CHECKSUM_WORDS_LENGTH"],[47,84,55,56],[49,2,57,0],[50,2,58,0],[50,6,58,6,"MNEMONICS_WORDS_LENGTH"],[50,28,58,28],[50,31,58,31,"parseInt"],[50,39,58,39],[50,40,59,2,"METADATA_WORDS_LENGTH"],[50,61,59,23],[50,64,59,26],[50,65,59,27,"MIN_ENTROPY_BITS"],[50,81,59,43],[50,84,59,46,"RADIX_BITS"],[50,94,59,56],[50,97,59,59],[50,98,59,60],[50,102,59,64,"RADIX_BITS"],[50,112,59,74],[50,114,60,2],[50,116,61,0],[50,117,61,1],[52,2,63,0],[53,2,64,0],[53,6,64,6,"ITERATION_COUNT"],[53,21,64,21],[53,24,64,24],[53,29,64,29],[55,2,66,0],[56,2,67,0],[56,6,67,6,"ROUND_COUNT"],[56,17,67,17],[56,20,67,20],[56,21,67,21],[58,2,69,0],[59,2,70,0],[59,6,70,6,"DIGEST_INDEX"],[59,18,70,18],[59,21,70,21],[59,24,70,24],[61,2,72,0],[62,2,73,0],[62,6,73,6,"SECRET_INDEX"],[62,18,73,18],[62,21,73,21],[62,24,73,24],[64,2,75,0],[65,2,76,0],[66,2,77,0],[67,2,78,0,"String"],[67,8,78,6],[67,9,78,7,"prototype"],[67,18,78,16],[67,19,78,17,"slip39EncodeHex"],[67,34,78,32],[67,37,78,35],[67,49,78,47],[68,4,79,2],[68,8,79,6,"bytes"],[68,13,79,11],[68,16,79,14],[68,18,79,16],[69,4,80,2],[69,9,80,7],[69,13,80,11,"i"],[69,14,80,12],[69,17,80,15],[69,18,80,16],[69,20,80,18,"i"],[69,21,80,19],[69,24,80,22],[69,28,80,26],[69,29,80,27,"length"],[69,35,80,33],[69,37,80,35],[69,39,80,37,"i"],[69,40,80,38],[69,42,80,40],[70,6,81,4,"bytes"],[70,11,81,9],[70,12,81,10,"push"],[70,16,81,14],[70,17,81,15],[70,21,81,19],[70,22,81,20,"charCodeAt"],[70,32,81,30],[70,33,81,31,"i"],[70,34,81,32],[70,35,81,33],[70,36,81,34],[71,4,82,2],[72,4,83,2],[72,11,83,9,"bytes"],[72,16,83,14],[73,2,84,0],[73,3,84,1],[74,2,86,0,"Array"],[74,7,86,5],[74,8,86,6,"prototype"],[74,17,86,15],[74,18,86,16,"slip39DecodeHex"],[74,33,86,31],[74,36,86,34],[74,48,86,46],[75,4,87,2],[75,8,87,6,"str"],[75,11,87,9],[75,14,87,12],[75,16,87,14],[76,4,88,2],[76,8,88,8,"hex"],[76,11,88,11],[76,14,88,14],[76,18,88,18],[76,19,88,19,"toString"],[76,27,88,27],[76,28,88,28],[76,29,88,29],[76,30,88,30,"split"],[76,35,88,35],[76,36,88,36],[76,39,88,39],[76,40,88,40],[77,4,89,2],[77,9,89,7],[77,13,89,11,"i"],[77,14,89,12],[77,17,89,15],[77,18,89,16],[77,20,89,18,"i"],[77,21,89,19],[77,24,89,22,"hex"],[77,27,89,25],[77,28,89,26,"length"],[77,34,89,32],[77,36,89,34,"i"],[77,37,89,35],[77,39,89,37],[77,41,89,39],[78,6,90,4,"str"],[78,9,90,7],[78,10,90,8,"push"],[78,14,90,12],[78,15,90,13,"String"],[78,21,90,19],[78,22,90,20,"fromCharCode"],[78,34,90,32],[78,35,90,33,"hex"],[78,38,90,36],[78,39,90,37,"i"],[78,40,90,38],[78,41,90,39],[78,42,90,40],[78,43,90,41],[79,4,91,2],[80,4,92,2],[80,11,92,9,"str"],[80,14,92,12],[80,15,92,13,"toString"],[80,23,92,21],[80,24,92,22],[80,25,92,23],[80,26,92,24,"replace"],[80,33,92,31],[80,34,92,32],[80,38,92,36],[80,40,92,38],[80,42,92,40],[80,43,92,41],[81,2,93,0],[81,3,93,1],[82,2,95,0,"Array"],[82,7,95,5],[82,8,95,6,"prototype"],[82,17,95,15],[82,18,95,16,"slip39Generate"],[82,32,95,30],[82,35,95,33],[82,45,95,43,"m"],[82,46,95,44],[82,48,95,60],[83,4,95,60],[83,8,95,46,"v"],[83,9,95,47],[83,12,95,47,"arguments"],[83,21,95,47],[83,22,95,47,"length"],[83,28,95,47],[83,36,95,47,"arguments"],[83,45,95,47],[83,53,95,47,"undefined"],[83,62,95,47],[83,65,95,47,"arguments"],[83,74,95,47],[83,80,95,50],[83,90,95,51,"_"],[83,91,95,52],[84,6,95,52],[84,13,95,57,"_"],[84,14,95,58],[85,4,95,58],[86,4,96,2],[86,8,96,6,"n"],[86,9,96,7],[86,12,96,10,"m"],[86,13,96,11],[86,17,96,15],[86,21,96,19],[86,22,96,20,"length"],[86,28,96,26],[87,4,97,2],[87,9,97,7],[87,13,97,11,"i"],[87,14,97,12],[87,17,97,15],[87,18,97,16],[87,20,97,18,"i"],[87,21,97,19],[87,24,97,22,"n"],[87,25,97,23],[87,27,97,25,"i"],[87,28,97,26],[87,30,97,28],[87,32,97,30],[88,6,98,4],[88,10,98,8],[88,11,98,9,"i"],[88,12,98,10],[88,13,98,11],[88,16,98,14,"v"],[88,17,98,15],[88,18,98,16,"i"],[88,19,98,17],[88,20,98,18],[89,4,99,2],[90,4,100,2],[90,11,100,9],[90,15,100,13],[91,2,101,0],[91,3,101,1],[92,2,103,0,"Array"],[92,7,103,5],[92,8,103,6,"prototype"],[92,17,103,15],[92,18,103,16,"toHexString"],[92,29,103,27],[92,32,103,30],[92,44,103,42],[93,4,104,2],[93,11,104,9,"Array"],[93,16,104,14],[93,17,104,15,"prototype"],[93,26,104,24],[93,27,104,25,"map"],[93,30,104,28],[93,31,105,5,"call"],[93,35,105,9],[93,36,105,10],[93,40,105,14],[93,42,105,16],[93,52,105,26,"byte"],[93,56,105,30],[93,58,105,32],[94,6,106,6],[94,13,106,13],[94,14,106,14],[94,17,106,17],[94,20,106,20],[94,21,106,21,"byte"],[94,25,106,25],[94,28,106,28],[94,32,106,32],[94,34,106,34,"toString"],[94,42,106,42],[94,43,106,43],[94,45,106,45],[94,46,106,46],[94,48,106,48,"slice"],[94,53,106,53],[94,54,106,54],[94,55,106,55],[94,56,106,56],[94,57,106,57],[95,4,107,4],[95,5,107,5],[95,6,107,6],[95,7,108,5,"join"],[95,11,108,9],[95,12,108,10],[95,14,108,12],[95,15,108,13],[96,2,109,0],[96,3,109,1],[97,2,111,0,"Array"],[97,7,111,5],[97,8,111,6,"prototype"],[97,17,111,15],[97,18,111,16,"toByteArray"],[97,29,111,27],[97,32,111,30],[97,42,111,40,"hexString"],[97,51,111,49],[97,53,111,51],[98,4,112,2],[98,9,112,7],[98,13,112,11,"i"],[98,14,112,12],[98,17,112,15],[98,18,112,16],[98,20,112,18,"i"],[98,21,112,19],[98,24,112,22,"hexString"],[98,33,112,31],[98,34,112,32,"length"],[98,40,112,38],[98,42,112,40,"i"],[98,43,112,41],[98,46,112,44,"i"],[98,47,112,45],[98,50,112,48],[98,51,112,49],[98,53,112,51],[99,6,113,4],[99,10,113,8],[99,11,113,9,"push"],[99,15,113,13],[99,16,113,14,"parseInt"],[99,24,113,22],[99,25,113,23,"hexString"],[99,34,113,32],[99,35,113,33,"substr"],[99,41,113,39],[99,42,113,40,"i"],[99,43,113,41],[99,45,113,43],[99,46,113,44],[99,47,113,45],[99,49,113,47],[99,51,113,49],[99,52,113,50],[99,53,113,51],[100,4,114,2],[101,4,115,2],[101,11,115,9],[101,15,115,13],[102,2,116,0],[102,3,116,1],[103,2,118,0],[103,6,118,6,"BIGINT_WORD_BITS"],[103,22,118,22],[103,25,118,25,"BigInt"],[103,31,118,31],[103,32,118,32],[103,33,118,33],[103,34,118,34],[104,2,120,0],[104,11,120,9,"decodeBigInt"],[104,23,120,21,"decodeBigInt"],[104,24,120,22,"bytes"],[104,29,120,27],[104,31,120,29],[105,4,121,2],[105,8,121,6,"result"],[105,14,121,12],[105,17,121,15,"BigInt"],[105,23,121,21],[105,24,121,22],[105,25,121,23],[105,26,121,24],[106,4,122,2],[106,9,122,7],[106,13,122,11,"i"],[106,14,122,12],[106,17,122,15],[106,18,122,16],[106,20,122,18,"i"],[106,21,122,19],[106,24,122,22,"bytes"],[106,29,122,27],[106,30,122,28,"length"],[106,36,122,34],[106,38,122,36,"i"],[106,39,122,37],[106,41,122,39],[106,43,122,41],[107,6,123,4],[107,10,123,8,"b"],[107,11,123,9],[107,14,123,12,"BigInt"],[107,20,123,18],[107,21,123,19,"bytes"],[107,26,123,24],[107,27,123,25,"bytes"],[107,32,123,30],[107,33,123,31,"length"],[107,39,123,37],[107,42,123,40,"i"],[107,43,123,41],[107,46,123,44],[107,47,123,45],[107,48,123,46],[107,49,123,47],[108,6,124,4,"result"],[108,12,124,10],[108,15,124,13,"result"],[108,21,124,19],[108,25,124,23,"b"],[108,26,124,24],[108,30,124,29,"BIGINT_WORD_BITS"],[108,46,124,45],[108,49,124,48,"BigInt"],[108,55,124,54],[108,56,124,55,"i"],[108,57,124,56],[108,58,124,58],[108,59,124,59],[109,4,125,2],[110,4,126,2],[110,11,126,9,"result"],[110,17,126,15],[111,2,127,0],[112,2,129,0],[112,11,129,9,"encodeBigInt"],[112,23,129,21,"encodeBigInt"],[112,24,129,22,"number"],[112,30,129,28],[112,32,129,48],[113,4,129,48],[113,8,129,30,"paddedLength"],[113,20,129,42],[113,23,129,42,"arguments"],[113,32,129,42],[113,33,129,42,"length"],[113,39,129,42],[113,47,129,42,"arguments"],[113,56,129,42],[113,64,129,42,"undefined"],[113,73,129,42],[113,76,129,42,"arguments"],[113,85,129,42],[113,91,129,45],[113,92,129,46],[114,4,130,2],[114,8,130,6,"num"],[114,11,130,9],[114,14,130,12,"number"],[114,20,130,18],[115,4,131,2],[115,8,131,8,"BYTE_MASK"],[115,17,131,17],[115,20,131,20,"BigInt"],[115,26,131,26],[115,27,131,27],[115,31,131,31],[115,32,131,32],[116,4,132,2],[116,8,132,8,"BIGINT_ZERO"],[116,19,132,19],[116,22,132,22,"BigInt"],[116,28,132,28],[116,29,132,29],[116,30,132,30],[116,31,132,31],[117,4,133,2],[117,8,133,6,"result"],[117,14,133,12],[117,17,133,15],[117,21,133,19,"Array"],[117,26,133,24],[117,27,133,25],[117,28,133,26],[117,29,133,27],[118,4,135,2],[118,11,135,9,"num"],[118,14,135,12],[118,17,135,15,"BIGINT_ZERO"],[118,28,135,26],[118,30,135,28],[119,6,136,4],[119,10,136,8,"i"],[119,11,136,9],[119,14,136,12,"parseInt"],[119,22,136,20],[119,23,136,21,"num"],[119,26,136,24],[119,29,136,27,"BYTE_MASK"],[119,38,136,36],[119,40,136,38],[119,42,136,40],[119,43,136,41],[120,6,137,4,"result"],[120,12,137,10],[120,13,137,11,"unshift"],[120,20,137,18],[120,21,137,19,"i"],[120,22,137,20],[120,23,137,21],[121,6,138,4,"num"],[121,9,138,7],[121,12,138,10,"num"],[121,15,138,13],[121,19,138,17,"BIGINT_WORD_BITS"],[121,35,138,33],[122,4,139,2],[124,4,141,2],[125,4,142,2],[125,9,142,7],[125,13,142,11,"i"],[125,15,142,12],[125,18,142,15,"result"],[125,24,142,21],[125,25,142,22,"length"],[125,31,142,28],[125,33,142,30,"i"],[125,35,142,31],[125,38,142,34,"paddedLength"],[125,50,142,46],[125,52,142,48,"i"],[125,54,142,49],[125,56,142,51],[125,58,142,53],[126,6,143,4,"result"],[126,12,143,10],[126,13,143,11,"unshift"],[126,20,143,18],[126,21,143,19],[126,22,143,20],[126,23,143,21],[127,4,144,2],[128,4,146,2],[128,8,146,6,"paddedLength"],[128,20,146,18],[128,25,146,23],[128,26,146,24],[128,30,146,28,"result"],[128,36,146,34],[128,37,146,35,"length"],[128,43,146,41],[128,46,146,44,"paddedLength"],[128,58,146,56],[128,60,146,58],[129,6,147,4],[129,12,147,10],[129,16,147,14,"Error"],[129,21,147,19],[129,22,148,6],[129,76,148,60,"paddedLength"],[129,88,148,72],[129,110,148,94,"result"],[129,116,148,100],[129,117,148,101,"length"],[129,123,148,107],[129,125,149,4],[129,126,149,5],[130,4,150,2],[131,4,152,2],[131,11,152,9,"result"],[131,17,152,15],[132,2,153,0],[133,2,155,0],[133,11,155,9,"bitsToBytes"],[133,22,155,20,"bitsToBytes"],[133,23,155,21,"n"],[133,24,155,22],[133,26,155,24],[134,4,156,2],[134,8,156,8,"res"],[134,11,156,11],[134,14,156,14],[134,15,156,15,"n"],[134,16,156,16],[134,19,156,19],[134,20,156,20],[134,24,156,24],[134,25,156,25],[135,4,157,2],[135,8,157,8,"b"],[135,9,157,9],[135,12,157,12,"parseInt"],[135,20,157,20],[135,21,157,21,"res"],[135,24,157,24],[135,26,157,26,"RADIX_BITS"],[135,36,157,36],[135,37,157,37],[136,4,158,2],[136,11,158,9,"b"],[136,12,158,10],[137,2,159,0],[138,2,161,0],[138,11,161,9,"bitsToWords"],[138,22,161,20,"bitsToWords"],[138,23,161,21,"n"],[138,24,161,22],[138,26,161,24],[139,4,162,2],[139,8,162,8,"res"],[139,11,162,11],[139,14,162,14],[139,15,162,15,"n"],[139,16,162,16],[139,19,162,19,"RADIX_BITS"],[139,29,162,29],[139,32,162,32],[139,33,162,33],[139,37,162,37,"RADIX_BITS"],[139,47,162,47],[140,4,163,2],[140,8,163,8,"b"],[140,9,163,9],[140,12,163,12,"parseInt"],[140,20,163,20],[140,21,163,21,"res"],[140,24,163,24],[140,26,163,26,"RADIX_BITS"],[140,36,163,36],[140,37,163,37],[141,4,164,2],[141,11,164,9,"b"],[141,12,164,10],[142,2,165,0],[144,2,167,0],[145,2,168,0],[146,2,169,0],[147,2,170,0],[147,11,170,9,"randomBytes"],[147,22,170,20,"randomBytes"],[147,23,170,20],[147,25,170,34],[148,4,170,34],[148,8,170,21,"length"],[148,14,170,27],[148,17,170,27,"arguments"],[148,26,170,27],[148,27,170,27,"length"],[148,33,170,27],[148,41,170,27,"arguments"],[148,50,170,27],[148,58,170,27,"undefined"],[148,67,170,27],[148,70,170,27,"arguments"],[148,79,170,27],[148,85,170,30],[148,87,170,32],[149,4,171,2],[149,8,171,6,"randoms"],[149,15,171,13],[149,18,171,16,"crypto"],[149,24,171,22],[149,25,171,23,"randomBytes"],[149,36,171,34],[149,37,171,35,"length"],[149,43,171,41],[149,44,171,42],[150,4,172,2],[150,11,172,9,"Array"],[150,16,172,14],[150,17,172,15,"prototype"],[150,26,172,24],[150,27,172,25,"slice"],[150,32,172,30],[150,33,172,31,"call"],[150,37,172,35],[150,38,172,36,"randoms"],[150,45,172,43],[150,47,172,45],[150,48,172,46],[150,49,172,47],[151,2,173,0],[153,2,175,0],[154,2,176,0],[155,2,177,0],[156,2,178,0],[156,11,178,9,"roundFunction"],[156,24,178,22,"roundFunction"],[156,25,178,23,"round"],[156,30,178,28],[156,32,178,30,"passphrase"],[156,42,178,40],[156,44,178,42,"exp"],[156,47,178,45],[156,49,178,47,"salt"],[156,53,178,51],[156,55,178,53,"secret"],[156,61,178,59],[156,63,178,61],[157,4,179,2],[157,8,179,8,"saltedSecret"],[157,20,179,20],[157,23,179,23,"salt"],[157,27,179,27],[157,28,179,28,"concat"],[157,34,179,34],[157,35,179,35,"secret"],[157,41,179,41],[157,42,179,42],[158,4,180,2],[158,8,180,8,"roundedPhrase"],[158,21,180,21],[158,24,180,24],[158,25,180,25,"round"],[158,30,180,30],[158,31,180,31],[158,32,180,32,"concat"],[158,38,180,38],[158,39,180,39,"passphrase"],[158,49,180,49],[158,50,180,50],[159,4,181,2],[159,8,181,8,"count"],[159,13,181,13],[159,16,181,16],[159,17,181,17,"ITERATION_COUNT"],[159,32,181,32],[159,36,181,36,"exp"],[159,39,181,39],[159,43,181,43,"ROUND_COUNT"],[159,54,181,54],[160,4,183,2],[160,8,183,8,"key"],[160,11,183,11],[160,14,183,14,"crypto"],[160,20,183,20],[160,21,183,21,"pbkdf2Sync"],[160,31,183,31],[160,32,184,4,"Buffer"],[160,38,184,10],[160,39,184,11,"from"],[160,43,184,15],[160,44,184,16,"roundedPhrase"],[160,57,184,29],[160,58,184,30],[160,60,185,4,"Buffer"],[160,66,185,10],[160,67,185,11,"from"],[160,71,185,15],[160,72,185,16,"saltedSecret"],[160,84,185,28],[160,85,185,29],[160,87,186,4,"count"],[160,92,186,9],[160,94,187,4,"secret"],[160,100,187,10],[160,101,187,11,"length"],[160,107,187,17],[160,109,188,4],[160,117,189,2],[160,118,189,3],[161,4,190,2],[161,11,190,9,"Array"],[161,16,190,14],[161,17,190,15,"prototype"],[161,26,190,24],[161,27,190,25,"slice"],[161,32,190,30],[161,33,190,31,"call"],[161,37,190,35],[161,38,190,36,"key"],[161,41,190,39],[161,43,190,41],[161,44,190,42],[161,45,190,43],[162,2,191,0],[163,2,193,0],[163,11,193,9,"crypt"],[163,16,193,14,"crypt"],[163,17,194,2,"masterSecret"],[163,29,194,14],[163,31,195,2,"passphrase"],[163,41,195,12],[163,43,196,2,"iterationExponent"],[163,60,196,19],[163,62,197,2,"identifier"],[163,72,197,12],[163,74,198,2,"extendableBackupFlag"],[163,94,198,22],[163,96,200,2],[164,4,200,2],[164,8,199,2,"encrypt"],[164,15,199,9],[164,18,199,9,"arguments"],[164,27,199,9],[164,28,199,9,"length"],[164,34,199,9],[164,42,199,9,"arguments"],[164,51,199,9],[164,59,199,9,"undefined"],[164,68,199,9],[164,71,199,9,"arguments"],[164,80,199,9],[164,86,199,12],[164,90,199,16],[165,4,201,2],[166,4,202,2],[166,8,202,6,"iterationExponent"],[166,25,202,23],[166,28,202,26],[166,29,202,27],[166,33,202,31,"iterationExponent"],[166,50,202,48],[166,53,202,51,"MAX_ITERATION_EXP"],[166,70,202,68],[166,72,202,70],[167,6,203,4],[167,12,203,10,"Error"],[167,17,203,15],[167,18,204,6],[167,49,204,37,"iterationExponent"],[167,66,204,54],[167,95,204,83,"MAX_ITERATION_EXP"],[167,112,204,100],[167,114,205,4],[167,115,205,5],[168,4,206,2],[169,4,208,2],[169,8,208,6,"IL"],[169,10,208,8],[169,13,208,11,"masterSecret"],[169,25,208,23],[169,26,208,24,"slice"],[169,31,208,29],[169,32,208,30],[169,33,208,31],[169,34,208,32,"slice"],[169,39,208,37],[169,40,208,38],[169,41,208,39],[169,43,208,41,"masterSecret"],[169,55,208,53],[169,56,208,54,"length"],[169,62,208,60],[169,65,208,63],[169,66,208,64],[169,67,208,65],[170,4,209,2],[170,8,209,6,"IR"],[170,10,209,8],[170,13,209,11,"masterSecret"],[170,25,209,23],[170,26,209,24,"slice"],[170,31,209,29],[170,32,209,30],[170,33,209,31],[170,34,209,32,"slice"],[170,39,209,37],[170,40,209,38,"masterSecret"],[170,52,209,50],[170,53,209,51,"length"],[170,59,209,57],[170,62,209,60],[170,63,209,61],[170,64,209,62],[171,4,211,2],[171,8,211,8,"pwd"],[171,11,211,11],[171,14,211,14,"passphrase"],[171,24,211,24],[171,25,211,25,"slip39EncodeHex"],[171,40,211,40],[171,41,211,41],[171,42,211,42],[172,4,213,2],[172,8,213,8,"salt"],[172,12,213,12],[172,15,213,15,"getSalt"],[172,22,213,22],[172,23,213,23,"identifier"],[172,33,213,33],[172,35,213,35,"extendableBackupFlag"],[172,55,213,55],[172,56,213,56],[173,4,215,2],[173,8,215,6,"range"],[173,13,215,11],[173,16,215,14,"Array"],[173,21,215,19],[173,22,215,20],[173,23,215,21],[173,24,215,22,"slip39Generate"],[173,38,215,36],[173,39,215,37,"ROUND_COUNT"],[173,50,215,48],[173,51,215,49],[174,4,216,2,"range"],[174,9,216,7],[174,12,216,10,"encrypt"],[174,19,216,17],[174,22,216,20,"range"],[174,27,216,25],[174,30,216,28,"range"],[174,35,216,33],[174,36,216,34,"reverse"],[174,43,216,41],[174,44,216,42],[174,45,216,43],[175,4,218,2,"range"],[175,9,218,7],[175,10,218,8,"forEach"],[175,17,218,15],[175,18,218,16],[175,28,218,17,"round"],[175,33,218,22],[175,35,218,27],[176,6,219,4],[176,10,219,10,"f"],[176,11,219,11],[176,14,219,14,"roundFunction"],[176,27,219,27],[176,28,219,28,"round"],[176,33,219,33],[176,35,219,35,"pwd"],[176,38,219,38],[176,40,219,40,"iterationExponent"],[176,57,219,57],[176,59,219,59,"salt"],[176,63,219,63],[176,65,219,65,"IR"],[176,67,219,67],[176,68,219,68],[177,6,220,4],[177,10,220,10,"t"],[177,11,220,11],[177,14,220,14,"xor"],[177,17,220,17],[177,18,220,18,"IL"],[177,20,220,20],[177,22,220,22,"f"],[177,23,220,23],[177,24,220,24],[178,6,221,4,"IL"],[178,8,221,6],[178,11,221,9,"IR"],[178,13,221,11],[179,6,222,4,"IR"],[179,8,222,6],[179,11,222,9,"t"],[179,12,222,10],[180,4,223,2],[180,5,223,3],[180,6,223,4],[181,4,224,2],[181,11,224,9,"IR"],[181,13,224,11],[181,14,224,12,"concat"],[181,20,224,18],[181,21,224,19,"IL"],[181,23,224,21],[181,24,224,22],[182,2,225,0],[183,2,227,0],[183,11,227,9,"createDigest"],[183,23,227,21,"createDigest"],[183,24,227,22,"randomData"],[183,34,227,32],[183,36,227,34,"sharedSecret"],[183,48,227,46],[183,50,227,48],[184,4,228,2],[184,8,228,8,"hmac"],[184,12,228,12],[184,15,228,15,"crypto"],[184,21,228,21],[184,22,228,22,"createHmac"],[184,32,228,32],[184,33,228,33],[184,41,228,41],[184,43,228,43,"Buffer"],[184,49,228,49],[184,50,228,50,"from"],[184,54,228,54],[184,55,228,55,"randomData"],[184,65,228,65],[184,66,228,66],[184,67,228,67],[185,4,230,2,"hmac"],[185,8,230,6],[185,9,230,7,"update"],[185,15,230,13],[185,16,230,14,"Buffer"],[185,22,230,20],[185,23,230,21,"from"],[185,27,230,25],[185,28,230,26,"sharedSecret"],[185,40,230,38],[185,41,230,39],[185,42,230,40],[186,4,232,2],[186,8,232,6,"result"],[186,14,232,12],[186,17,232,15,"hmac"],[186,21,232,19],[186,22,232,20,"digest"],[186,28,232,26],[186,29,232,27],[186,30,232,28],[187,4,233,2,"result"],[187,10,233,8],[187,13,233,11,"result"],[187,19,233,17],[187,20,233,18,"slice"],[187,25,233,23],[187,26,233,24],[187,27,233,25],[187,29,233,27],[187,30,233,28],[187,31,233,29],[188,4,234,2],[188,11,234,9,"Array"],[188,16,234,14],[188,17,234,15,"prototype"],[188,26,234,24],[188,27,234,25,"slice"],[188,32,234,30],[188,33,234,31,"call"],[188,37,234,35],[188,38,234,36,"result"],[188,44,234,42],[188,46,234,44],[188,47,234,45],[188,48,234,46],[189,2,235,0],[190,2,237,0],[190,11,237,9,"splitSecret"],[190,22,237,20,"splitSecret"],[190,23,237,21,"threshold"],[190,32,237,30],[190,34,237,32,"shareCount"],[190,44,237,42],[190,46,237,44,"sharedSecret"],[190,58,237,56],[190,60,237,58],[191,4,238,2],[191,8,238,6,"threshold"],[191,17,238,15],[191,21,238,19],[191,22,238,20],[191,24,238,22],[192,6,239,4],[192,12,239,10,"Error"],[192,17,239,15],[192,18,240,6],[192,46,240,34,"threshold"],[192,55,240,43],[192,86,241,4],[192,87,241,5],[193,4,242,2],[194,4,244,2],[194,8,244,6,"threshold"],[194,17,244,15],[194,20,244,18,"shareCount"],[194,30,244,28],[194,32,244,30],[195,6,245,4],[195,12,245,10,"Error"],[195,17,245,15],[195,18,246,6],[195,46,246,34,"threshold"],[195,55,246,43],[195,98,246,86,"shareCount"],[195,108,246,96],[195,112,247,4],[195,113,247,5],[196,4,248,2],[197,4,250,2],[197,8,250,6,"shareCount"],[197,18,250,16],[197,21,250,19,"MAX_SHARE_COUNT"],[197,36,250,34],[197,38,250,36],[198,6,251,4],[198,12,251,10,"Error"],[198,17,251,15],[198,18,252,6],[198,53,252,41,"shareCount"],[198,63,252,51],[198,84,252,72,"MAX_SHARE_COUNT"],[198,99,252,87],[198,102,253,4],[198,103,253,5],[199,4,254,2],[200,4,255,2],[201,4,256,2],[201,8,256,6,"threshold"],[201,17,256,15],[201,22,256,20],[201,23,256,21],[201,25,256,23],[202,6,257,4],[202,13,257,11,"Array"],[202,18,257,16],[202,19,257,17],[202,20,257,18],[202,21,257,19,"slip39Generate"],[202,35,257,33],[202,36,257,34,"shareCount"],[202,46,257,44],[202,48,257,46],[203,8,257,46],[203,15,257,52,"sharedSecret"],[203,27,257,64],[204,6,257,64],[204,8,257,65],[205,4,258,2],[206,4,260,2],[206,8,260,8,"randomShareCount"],[206,24,260,24],[206,27,260,27,"threshold"],[206,36,260,36],[206,39,260,39],[206,40,260,40],[207,4,262,2],[207,8,262,8,"randomPart"],[207,18,262,18],[207,21,262,21,"randomBytes"],[207,32,262,32],[207,33,262,33,"sharedSecret"],[207,45,262,45],[207,46,262,46,"length"],[207,52,262,52],[207,55,262,55,"DIGEST_LENGTH"],[207,68,262,68],[207,69,262,69],[208,4,263,2],[208,8,263,8,"digest"],[208,14,263,14],[208,17,263,17,"createDigest"],[208,29,263,29],[208,30,263,30,"randomPart"],[208,40,263,40],[208,42,263,42,"sharedSecret"],[208,54,263,54],[208,55,263,55],[209,4,265,2],[209,8,265,6,"baseShares"],[209,18,265,16],[209,21,265,19],[209,25,265,23,"Map"],[209,28,265,26],[209,29,265,27],[209,30,265,28],[210,4,266,2],[210,8,266,6,"shares"],[210,14,266,12],[210,17,266,15],[210,19,266,17],[211,4,267,2],[211,8,267,6,"randomShareCount"],[211,24,267,22],[211,26,267,24],[212,6,268,4,"shares"],[212,12,268,10],[212,15,268,13,"Array"],[212,20,268,18],[212,21,268,19],[212,22,268,20],[212,23,268,21,"slip39Generate"],[212,37,268,35],[212,38,268,36,"randomShareCount"],[212,54,268,52],[212,56,268,54],[213,8,268,54],[213,15,269,6,"randomBytes"],[213,26,269,17],[213,27,269,18,"sharedSecret"],[213,39,269,30],[213,40,269,31,"length"],[213,46,269,37],[213,47,269,38],[214,6,269,38],[214,7,270,4],[214,8,270,5],[215,6,271,4,"shares"],[215,12,271,10],[215,13,271,11,"forEach"],[215,20,271,18],[215,21,271,19],[215,31,271,20,"item"],[215,35,271,24],[215,37,271,26,"idx"],[215,40,271,29],[215,42,271,34],[216,8,272,6,"baseShares"],[216,18,272,16],[216,19,272,17,"set"],[216,22,272,20],[216,23,272,21,"idx"],[216,26,272,24],[216,28,272,26,"item"],[216,32,272,30],[216,33,272,31],[217,6,273,4],[217,7,273,5],[217,8,273,6],[218,4,274,2],[219,4,275,2,"baseShares"],[219,14,275,12],[219,15,275,13,"set"],[219,18,275,16],[219,19,275,17,"DIGEST_INDEX"],[219,31,275,29],[219,33,275,31,"digest"],[219,39,275,37],[219,40,275,38,"concat"],[219,46,275,44],[219,47,275,45,"randomPart"],[219,57,275,55],[219,58,275,56],[219,59,275,57],[220,4,276,2,"baseShares"],[220,14,276,12],[220,15,276,13,"set"],[220,18,276,16],[220,19,276,17,"SECRET_INDEX"],[220,31,276,29],[220,33,276,31,"sharedSecret"],[220,45,276,43],[220,46,276,44],[221,4,278,2],[221,9,278,7],[221,13,278,11,"i"],[221,14,278,12],[221,17,278,15,"randomShareCount"],[221,33,278,31],[221,35,278,33,"i"],[221,36,278,34],[221,39,278,37,"shareCount"],[221,49,278,47],[221,51,278,49,"i"],[221,52,278,50],[221,54,278,52],[221,56,278,54],[222,6,279,4],[222,10,279,10,"rr"],[222,12,279,12],[222,15,279,15,"interpolate"],[222,26,279,26],[222,27,279,27,"baseShares"],[222,37,279,37],[222,39,279,39,"i"],[222,40,279,40],[222,41,279,41],[223,6,280,4,"shares"],[223,12,280,10],[223,13,280,11,"push"],[223,17,280,15],[223,18,280,16,"rr"],[223,20,280,18],[223,21,280,19],[224,4,281,2],[225,4,283,2],[225,11,283,9,"shares"],[225,17,283,15],[226,2,284,0],[228,2,286,0],[229,2,287,0],[230,2,288,0],[231,2,289,0],[231,11,289,9,"generateIdentifier"],[231,29,289,27,"generateIdentifier"],[231,30,289,27],[231,32,289,30],[232,4,290,2],[232,8,290,8,"byte"],[232,12,290,12],[232,15,290,15,"bitsToBytes"],[232,26,290,26],[232,27,290,27,"ID_BITS_LENGTH"],[232,41,290,41],[232,42,290,42],[233,4,291,2],[233,8,291,8,"bits"],[233,12,291,12],[233,15,291,15,"ID_BITS_LENGTH"],[233,29,291,29],[233,32,291,32],[233,33,291,33],[234,4,292,2],[234,8,292,8,"identifier"],[234,18,292,18],[234,21,292,21,"randomBytes"],[234,32,292,32],[234,33,292,33,"byte"],[234,37,292,37],[234,38,292,38],[235,4,294,2,"identifier"],[235,14,294,12],[235,15,294,13],[235,16,294,14],[235,17,294,15],[235,20,294,18,"identifier"],[235,30,294,28],[235,31,294,29],[235,32,294,30],[235,33,294,31],[235,36,294,35],[235,37,294,36],[235,38,294,37],[235,42,294,41,"bits"],[235,46,294,45],[235,50,294,49],[235,51,294,51],[236,4,296,2],[236,11,296,9,"identifier"],[236,21,296,19],[237,2,297,0],[238,2,299,0],[238,11,299,9,"xor"],[238,14,299,12,"xor"],[238,15,299,13,"a"],[238,16,299,14],[238,18,299,16,"b"],[238,19,299,17],[238,21,299,19],[239,4,300,2],[239,8,300,6,"a"],[239,9,300,7],[239,10,300,8,"length"],[239,16,300,14],[239,21,300,19,"b"],[239,22,300,20],[239,23,300,21,"length"],[239,29,300,27],[239,31,300,29],[240,6,301,4],[240,12,301,10],[240,16,301,14,"Error"],[240,21,301,19],[240,22,302,6],[240,90,302,74,"a"],[240,91,302,75],[240,92,302,76,"length"],[240,98,302,82],[240,105,302,89,"b"],[240,106,302,90],[240,107,302,91,"length"],[240,113,302,97],[240,116,303,4],[240,117,303,5],[241,4,304,2],[242,4,305,2],[242,11,305,9,"Array"],[242,16,305,14],[242,17,305,15],[242,18,305,16],[242,19,305,17,"slip39Generate"],[242,33,305,31],[242,34,305,32,"a"],[242,35,305,33],[242,36,305,34,"length"],[242,42,305,40],[242,44,305,42],[242,54,305,43,"i"],[242,55,305,44],[243,6,305,44],[243,13,305,49,"a"],[243,14,305,50],[243,15,305,51,"i"],[243,16,305,52],[243,17,305,53],[243,20,305,56,"b"],[243,21,305,57],[243,22,305,58,"i"],[243,23,305,59],[243,24,305,60],[244,4,305,60],[244,6,305,61],[245,2,306,0],[246,2,308,0],[246,11,308,9,"getSalt"],[246,18,308,16,"getSalt"],[246,19,308,17,"identifier"],[246,29,308,27],[246,31,308,29,"extendableBackupFlag"],[246,51,308,49],[246,53,308,51],[247,4,309,2],[247,8,309,6,"extendableBackupFlag"],[247,28,309,26],[247,30,309,28],[248,6,310,4],[248,13,310,11],[248,15,310,13],[249,4,311,2],[249,5,311,3],[249,11,311,9],[250,6,312,4],[250,10,312,10,"salt"],[250,14,312,14],[250,17,312,17,"CUSTOMIZATION_STRING_NON_EXTENDABLE"],[250,52,312,52],[250,53,312,53,"slip39EncodeHex"],[250,68,312,68],[250,69,312,69],[250,70,312,70],[251,6,313,4],[251,13,313,11,"salt"],[251,17,313,15],[251,18,313,16,"concat"],[251,24,313,22],[251,25,313,23,"identifier"],[251,35,313,33],[251,36,313,34],[252,4,314,2],[253,2,315,0],[254,2,317,0],[254,11,317,9,"interpolate"],[254,22,317,20,"interpolate"],[254,23,317,21,"shares"],[254,29,317,27],[254,31,317,29,"x"],[254,32,317,30],[254,34,317,32],[255,4,318,2],[255,8,318,6,"xCoord"],[255,14,318,12],[255,17,318,15],[255,21,318,19,"Set"],[255,24,318,22],[255,25,318,23,"shares"],[255,31,318,29],[255,32,318,30,"keys"],[255,36,318,34],[255,37,318,35],[255,38,318,36],[255,39,318,37],[256,4,319,2],[256,8,319,6,"arr"],[256,11,319,9],[256,14,319,12,"Array"],[256,19,319,17],[256,20,319,18,"from"],[256,24,319,22],[256,25,319,23,"shares"],[256,31,319,29],[256,32,319,30,"values"],[256,38,319,36],[256,39,319,37],[256,40,319,38],[256,42,319,40],[256,52,319,41,"v"],[256,53,319,42],[257,6,319,42],[257,13,319,47,"v"],[257,14,319,48],[257,15,319,49,"length"],[257,21,319,55],[258,4,319,55],[258,6,319,56],[259,4,320,2],[259,8,320,6,"sharesValueLengths"],[259,26,320,24],[259,29,320,27],[259,33,320,31,"Set"],[259,36,320,34],[259,37,320,35,"arr"],[259,40,320,38],[259,41,320,39],[260,4,322,2],[260,8,322,6,"sharesValueLengths"],[260,26,322,24],[260,27,322,25,"size"],[260,31,322,29],[260,36,322,34],[260,37,322,35],[260,39,322,37],[261,6,323,4],[261,12,323,10],[261,16,323,14,"Error"],[261,21,323,19],[261,22,324,6],[261,90,325,4],[261,91,325,5],[262,4,326,2],[263,4,328,2],[263,8,328,6,"xCoord"],[263,14,328,12],[263,15,328,13,"has"],[263,18,328,16],[263,19,328,17,"x"],[263,20,328,18],[263,21,328,19],[263,23,328,21],[264,6,329,4,"shares"],[264,12,329,10],[264,13,329,11,"forEach"],[264,20,329,18],[264,21,329,19],[264,31,329,20,"v"],[264,32,329,21],[264,34,329,23,"k"],[264,35,329,24],[264,37,329,29],[265,8,330,6],[265,12,330,10,"k"],[265,13,330,11],[265,18,330,16,"x"],[265,19,330,17],[265,21,330,19],[266,10,331,8],[266,17,331,15,"v"],[266,18,331,16],[267,8,332,6],[268,6,333,4],[268,7,333,5],[268,8,333,6],[269,4,334,2],[271,4,336,2],[272,4,337,2],[272,8,337,6,"logProd"],[272,15,337,13],[272,18,337,16],[272,19,337,17],[273,4,339,2,"shares"],[273,10,339,8],[273,11,339,9,"forEach"],[273,18,339,16],[273,19,339,17],[273,29,339,18,"v"],[273,30,339,19],[273,32,339,21,"k"],[273,33,339,22],[273,35,339,27],[274,6,340,4,"logProd"],[274,13,340,11],[274,16,340,14,"logProd"],[274,23,340,21],[274,26,340,24,"LOG_TABLE"],[274,35,340,33],[274,36,340,34,"k"],[274,37,340,35],[274,40,340,38,"x"],[274,41,340,39],[274,42,340,40],[275,4,341,2],[275,5,341,3],[275,6,341,4],[276,4,343,2],[276,8,343,6,"results"],[276,15,343,13],[276,18,343,16,"Array"],[276,23,343,21],[276,24,343,22],[276,25,343,23],[276,26,343,24,"slip39Generate"],[276,40,343,38],[276,41,344,4,"sharesValueLengths"],[276,59,344,22],[276,60,344,23,"values"],[276,66,344,29],[276,67,344,30],[276,68,344,31],[276,69,344,32,"next"],[276,73,344,36],[276,74,344,37],[276,75,344,38],[276,76,344,39,"value"],[276,81,344,44],[276,83,345,4],[277,6,345,4],[277,13,345,10],[277,14,345,11],[278,4,345,11],[278,5,346,2],[278,6,346,3],[279,4,348,2,"shares"],[279,10,348,8],[279,11,348,9,"forEach"],[279,18,348,16],[279,19,348,17],[279,29,348,18,"v"],[279,30,348,19],[279,32,348,21,"k"],[279,33,348,22],[279,35,348,27],[280,6,349,4],[281,6,350,4],[281,10,350,8,"sum"],[281,13,350,11],[281,16,350,14],[281,17,350,15],[282,6,351,4,"shares"],[282,12,351,10],[282,13,351,11,"forEach"],[282,20,351,18],[282,21,351,19],[282,31,351,20,"vv"],[282,33,351,22],[282,35,351,24,"kk"],[282,37,351,26],[282,39,351,31],[283,8,352,6,"sum"],[283,11,352,9],[283,14,352,12,"sum"],[283,17,352,15],[283,20,352,18,"LOG_TABLE"],[283,29,352,27],[283,30,352,28,"k"],[283,31,352,29],[283,34,352,32,"kk"],[283,36,352,34],[283,37,352,35],[284,6,353,4],[284,7,353,5],[284,8,353,6],[286,6,355,4],[287,6,356,4],[288,6,357,4],[288,10,357,10,"basis"],[288,15,357,15],[288,18,357,18],[288,19,357,19,"logProd"],[288,26,357,26],[288,29,357,29,"LOG_TABLE"],[288,38,357,38],[288,39,357,39,"k"],[288,40,357,40],[288,43,357,43,"x"],[288,44,357,44],[288,45,357,45],[288,48,357,48,"sum"],[288,51,357,51],[288,55,357,55],[288,58,357,58],[289,6,359,4],[289,10,359,10,"logBasisEval"],[289,22,359,22],[289,25,359,25,"basis"],[289,30,359,30],[289,33,359,33],[289,34,359,34],[289,37,359,37],[289,40,359,40],[289,43,359,43,"basis"],[289,48,359,48],[289,51,359,51,"basis"],[289,56,359,56],[290,6,361,4,"v"],[290,7,361,5],[290,8,361,6,"forEach"],[290,15,361,13],[290,16,361,14],[290,26,361,15,"item"],[290,30,361,19],[290,32,361,21,"idx"],[290,35,361,24],[290,37,361,29],[291,8,362,6],[291,12,362,12,"shareVal"],[291,20,362,20],[291,23,362,23,"item"],[291,27,362,27],[292,8,363,6],[292,12,363,12,"intermediateSum"],[292,27,363,27],[292,30,363,30,"results"],[292,37,363,37],[292,38,363,38,"idx"],[292,41,363,41],[292,42,363,42],[293,8,364,6],[293,12,364,12,"r"],[293,13,364,13],[293,16,365,8,"shareVal"],[293,24,365,16],[293,29,365,21],[293,30,365,22],[293,33,366,12,"EXP_TABLE"],[293,42,366,21],[293,43,366,22],[293,44,366,23,"LOG_TABLE"],[293,53,366,32],[293,54,366,33,"shareVal"],[293,62,366,41],[293,63,366,42],[293,66,366,45,"logBasisEval"],[293,78,366,57],[293,82,366,61],[293,85,366,64],[293,86,366,65],[293,89,367,12],[293,90,367,13],[294,8,369,6],[294,12,369,12,"res"],[294,15,369,15],[294,18,369,18,"intermediateSum"],[294,33,369,33],[294,36,369,36,"r"],[294,37,369,37],[295,8,370,6,"results"],[295,15,370,13],[295,16,370,14,"idx"],[295,19,370,17],[295,20,370,18],[295,23,370,21,"res"],[295,26,370,24],[296,6,371,4],[296,7,371,5],[296,8,371,6],[297,4,372,2],[297,5,372,3],[297,6,372,4],[298,4,373,2],[298,11,373,9,"results"],[298,18,373,16],[299,2,374,0],[300,2,376,0],[300,11,376,9,"rs1024Polymod"],[300,24,376,22,"rs1024Polymod"],[300,25,376,23,"data"],[300,29,376,27],[300,31,376,29],[301,4,377,2],[301,8,377,8,"GEN"],[301,11,377,11],[301,14,377,14],[301,15,378,4],[301,23,378,12],[301,25,378,14],[301,34,378,23],[301,36,378,25],[301,45,378,34],[301,47,378,36],[301,56,378,45],[301,58,378,47],[301,67,378,56],[301,69,378,58],[301,79,378,68],[301,81,379,4],[301,91,379,14],[301,93,379,16],[301,103,379,26],[301,105,379,28],[301,115,379,38],[301,117,379,40],[301,126,379,49],[301,127,380,3],[302,4,381,2],[302,8,381,6,"chk"],[302,11,381,9],[302,14,381,12],[302,15,381,13],[303,4,383,2,"data"],[303,8,383,6],[303,9,383,7,"forEach"],[303,16,383,14],[303,17,383,15],[303,27,383,16,"byte"],[303,31,383,20],[303,33,383,25],[304,6,384,4],[304,10,384,10,"b"],[304,11,384,11],[304,14,384,14,"chk"],[304,17,384,17],[304,21,384,21],[304,23,384,23],[305,6,385,4,"chk"],[305,9,385,7],[305,12,385,11],[305,13,385,12,"chk"],[305,16,385,15],[305,19,385,18],[305,26,385,25],[305,31,385,30],[305,33,385,32],[305,36,385,36,"byte"],[305,40,385,40],[306,6,387,4],[306,11,387,9],[306,15,387,13,"i"],[306,16,387,14],[306,19,387,17],[306,20,387,18],[306,22,387,20,"i"],[306,23,387,21],[306,26,387,24],[306,28,387,26],[306,30,387,28,"i"],[306,31,387,29],[306,33,387,31],[306,35,387,33],[307,8,388,6],[307,12,388,10,"gen"],[307,15,388,13],[307,18,388,16],[307,19,388,18,"b"],[307,20,388,19],[307,24,388,23,"i"],[307,25,388,24],[307,28,388,28],[307,29,388,29],[307,35,388,35],[307,36,388,36],[307,39,388,39,"GEN"],[307,42,388,42],[307,43,388,43,"i"],[307,44,388,44],[307,45,388,45],[307,48,388,48],[307,49,388,49],[308,8,389,6,"chk"],[308,11,389,9],[308,14,389,12,"chk"],[308,17,389,15],[308,20,389,18,"gen"],[308,23,389,21],[309,6,390,4],[310,4,391,2],[310,5,391,3],[310,6,391,4],[311,4,393,2],[311,11,393,9,"chk"],[311,14,393,12],[312,2,394,0],[313,2,396,0],[313,11,396,9,"get_customization_string"],[313,35,396,33,"get_customization_string"],[313,36,396,34,"extendableBackupFlag"],[313,56,396,54],[313,58,396,56],[314,4,397,2],[314,11,397,9,"extendableBackupFlag"],[314,31,397,29],[314,34,398,6,"CUSTOMIZATION_STRING_EXTENDABLE"],[314,65,398,37],[314,68,399,6,"CUSTOMIZATION_STRING_NON_EXTENDABLE"],[314,103,399,41],[315,2,400,0],[316,2,402,0],[316,11,402,9,"rs1024CreateChecksum"],[316,31,402,29,"rs1024CreateChecksum"],[316,32,402,30,"data"],[316,36,402,34],[316,38,402,36,"extendableBackupFlag"],[316,58,402,56],[316,60,402,58],[317,4,403,2],[317,8,403,8,"values"],[317,14,403,14],[317,17,403,17,"get_customization_string"],[317,41,403,41],[317,42,403,42,"extendableBackupFlag"],[317,62,403,62],[317,63,403,63],[317,64,404,5,"slip39EncodeHex"],[317,79,404,20],[317,80,404,21],[317,81,404,22],[317,82,405,5,"concat"],[317,88,405,11],[317,89,405,12,"data"],[317,93,405,16],[317,94,405,17],[317,95,406,5,"concat"],[317,101,406,11],[317,102,406,12,"Array"],[317,107,406,17],[317,108,406,18],[317,109,406,19],[317,110,406,20,"slip39Generate"],[317,124,406,34],[317,125,406,35,"CHECKSUM_WORDS_LENGTH"],[317,146,406,56],[317,148,406,58],[318,6,406,58],[318,13,406,64],[318,14,406,65],[319,4,406,65],[319,6,406,66],[319,7,406,67],[320,4,407,2],[320,8,407,8,"polymod"],[320,15,407,15],[320,18,407,18,"rs1024Polymod"],[320,31,407,31],[320,32,407,32,"values"],[320,38,407,38],[320,39,407,39],[320,42,407,42],[320,43,407,43],[321,4,408,2],[321,8,408,8,"result"],[321,14,408,14],[321,17,408,17,"Array"],[321,22,408,22],[321,23,408,23],[321,24,408,24],[321,25,409,5,"slip39Generate"],[321,39,409,19],[321,40,409,20,"CHECKSUM_WORDS_LENGTH"],[321,61,409,41],[321,63,409,43],[321,73,409,44,"i"],[321,74,409,45],[322,6,409,45],[322,13,409,51,"polymod"],[322,20,409,58],[322,24,409,63],[322,26,409,65],[322,29,409,68,"i"],[322,30,409,70],[322,33,409,74],[322,37,409,78],[323,4,409,78],[323,6,409,79],[323,7,410,5,"reverse"],[323,14,410,12],[323,15,410,13],[323,16,410,14],[324,4,412,2],[324,11,412,9,"result"],[324,17,412,15],[325,2,413,0],[326,2,415,0],[326,11,415,9,"rs1024VerifyChecksum"],[326,31,415,29,"rs1024VerifyChecksum"],[326,32,415,30,"data"],[326,36,415,34],[326,38,415,36,"extendableBackupFlag"],[326,58,415,56],[326,60,415,58],[327,4,416,2],[327,11,417,4,"rs1024Polymod"],[327,24,417,17],[327,25,418,6,"get_customization_string"],[327,49,418,30],[327,50,418,31,"extendableBackupFlag"],[327,70,418,51],[327,71,418,52],[327,72,419,9,"slip39EncodeHex"],[327,87,419,24],[327,88,419,25],[327,89,419,26],[327,90,420,9,"concat"],[327,96,420,15],[327,97,420,16,"data"],[327,101,420,20],[327,102,421,4],[327,103,421,5],[327,108,421,10],[327,109,421,11],[328,2,423,0],[330,2,425,0],[331,2,426,0],[332,2,427,0],[333,2,428,0],[333,11,428,9,"intFromIndices"],[333,25,428,23,"intFromIndices"],[333,26,428,24,"indices"],[333,33,428,31],[333,35,428,33],[334,4,429,2],[334,8,429,6,"value"],[334,13,429,11],[334,16,429,14,"BigInt"],[334,22,429,20],[334,23,429,21],[334,24,429,22],[334,25,429,23],[335,4,430,2],[335,8,430,8,"radix"],[335,13,430,13],[335,16,430,16,"BigInt"],[335,22,430,22],[335,23,430,23,"Math"],[335,27,430,27],[335,28,430,28,"pow"],[335,31,430,31],[335,32,430,32],[335,33,430,33],[335,35,430,35,"RADIX_BITS"],[335,45,430,45],[335,46,430,46],[335,47,430,47],[336,4,431,2,"indices"],[336,11,431,9],[336,12,431,10,"forEach"],[336,19,431,17],[336,20,431,18],[336,30,431,19,"index"],[336,35,431,24],[336,37,431,29],[337,6,432,4,"value"],[337,11,432,9],[337,14,432,12,"value"],[337,19,432,17],[337,22,432,20,"radix"],[337,27,432,25],[337,30,432,28,"BigInt"],[337,36,432,34],[337,37,432,35,"index"],[337,42,432,40],[337,43,432,41],[338,4,433,2],[338,5,433,3],[338,6,433,4],[339,4,435,2],[339,11,435,9,"value"],[339,16,435,14],[340,2,436,0],[342,2,438,0],[343,2,439,0],[344,2,440,0],[345,2,441,0],[345,11,441,9,"intToIndices"],[345,23,441,21,"intToIndices"],[345,24,441,22,"value"],[345,29,441,27],[345,31,441,29,"length"],[345,37,441,35],[345,39,441,37,"bits"],[345,43,441,41],[345,45,441,43],[346,4,442,2],[346,8,442,8,"mask"],[346,12,442,12],[346,15,442,15,"BigInt"],[346,21,442,21],[346,22,442,22],[346,23,442,23],[346,24,442,24],[346,28,442,28,"bits"],[346,32,442,32],[346,36,442,36],[346,37,442,37],[346,38,442,38],[347,4,443,2],[347,8,443,8,"result"],[347,14,443,14],[347,17,443,17,"Array"],[347,22,443,22],[347,23,443,23],[347,24,443,24],[347,25,443,25,"slip39Generate"],[347,39,443,39],[347,40,443,40,"length"],[347,46,443,46],[347,48,443,48],[347,58,443,49,"i"],[347,59,443,50],[348,6,443,50],[348,13,444,4,"parseInt"],[348,21,444,12],[348,22,444,14,"value"],[348,27,444,19],[348,31,444,24,"BigInt"],[348,37,444,30],[348,38,444,31,"i"],[348,39,444,32],[348,40,444,33],[348,43,444,36,"BigInt"],[348,49,444,42],[348,50,444,43,"bits"],[348,54,444,47],[348,55,444,49],[348,58,444,53,"mask"],[348,62,444,57],[348,64,444,59],[348,66,444,61],[348,67,444,62],[349,4,444,62],[349,5,445,2],[349,6,445,3],[350,4,446,2],[350,11,446,9,"result"],[350,17,446,15],[350,18,446,16,"reverse"],[350,25,446,23],[350,26,446,24],[350,27,446,25],[351,2,447,0],[352,2,449,0],[352,11,449,9,"mnemonicFromIndices"],[352,30,449,28,"mnemonicFromIndices"],[352,31,449,29,"indices"],[352,38,449,36],[352,40,449,38],[353,4,450,2],[353,8,450,8,"result"],[353,14,450,14],[353,17,450,17,"indices"],[353,24,450,24],[353,25,450,25,"map"],[353,28,450,28],[353,29,450,29],[353,39,450,30,"index"],[353,44,450,35],[353,46,450,40],[354,6,451,4],[354,13,451,11,"WORD_LIST"],[354,22,451,20],[354,23,451,21,"index"],[354,28,451,26],[354,29,451,27],[355,4,452,2],[355,5,452,3],[355,6,452,4],[356,4,453,2],[356,11,453,9,"result"],[356,17,453,15],[356,18,453,16,"toString"],[356,26,453,24],[356,27,453,25],[356,28,453,26],[356,29,453,27,"split"],[356,34,453,32],[356,35,453,33],[356,38,453,36],[356,39,453,37],[356,40,453,38,"join"],[356,44,453,42],[356,45,453,43],[356,48,453,46],[356,49,453,47],[357,2,454,0],[358,2,456,0],[358,11,456,9,"mnemonicToIndices"],[358,28,456,26,"mnemonicToIndices"],[358,29,456,27,"mnemonic"],[358,37,456,35],[358,39,456,37],[359,4,457,2],[359,8,457,6],[359,15,457,13,"mnemonic"],[359,23,457,21],[359,28,457,26],[359,36,457,34],[359,38,457,36],[360,6,458,4],[360,12,458,10],[360,16,458,14,"Error"],[360,21,458,19],[360,22,459,6],[360,118,459,102],[360,125,459,109,"mnemonic"],[360,133,459,117],[360,136,460,4],[360,137,460,5],[361,4,461,2],[362,4,463,2],[362,8,463,8,"words"],[362,13,463,13],[362,16,463,16,"mnemonic"],[362,24,463,24],[362,25,463,25,"toLowerCase"],[362,36,463,36],[362,37,463,37],[362,38,463,38],[362,39,463,39,"split"],[362,44,463,44],[362,45,463,45],[362,48,463,48],[362,49,463,49],[363,4,464,2],[363,8,464,8,"result"],[363,14,464,14],[363,17,464,17,"words"],[363,22,464,22],[363,23,464,23,"reduce"],[363,29,464,29],[363,30,464,30],[363,40,464,31,"prev"],[363,44,464,35],[363,46,464,37,"item"],[363,50,464,41],[363,52,464,46],[364,6,465,4],[364,10,465,10,"index"],[364,15,465,15],[364,18,465,18,"WORD_LIST_MAP"],[364,31,465,31],[364,32,465,32,"item"],[364,36,465,36],[364,37,465,37],[365,6,466,4],[365,10,466,8],[365,17,466,15,"index"],[365,22,466,20],[365,27,466,25],[365,38,466,36],[365,40,466,38],[366,8,467,6],[366,14,467,12],[366,18,467,16,"Error"],[366,23,467,21],[366,24,467,22],[366,49,467,47,"item"],[366,53,467,51],[366,56,467,54],[366,57,467,55],[367,6,468,4],[368,6,469,4],[368,13,469,11,"prev"],[368,17,469,15],[368,18,469,16,"concat"],[368,24,469,22],[368,25,469,23,"index"],[368,30,469,28],[368,31,469,29],[369,4,470,2],[369,5,470,3],[369,7,470,5],[369,9,470,7],[369,10,470,8],[370,4,471,2],[370,11,471,9,"result"],[370,17,471,15],[371,2,472,0],[372,2,474,0],[372,11,474,9,"recoverSecret"],[372,24,474,22,"recoverSecret"],[372,25,474,23,"threshold"],[372,34,474,32],[372,36,474,34,"shares"],[372,42,474,40],[372,44,474,42],[373,4,475,2],[374,4,476,2],[374,8,476,6,"threshold"],[374,17,476,15],[374,22,476,20],[374,23,476,21],[374,25,476,23],[375,6,477,4],[375,13,477,11,"shares"],[375,19,477,17],[375,20,477,18,"values"],[375,26,477,24],[375,27,477,25],[375,28,477,26],[375,29,477,27,"next"],[375,33,477,31],[375,34,477,32],[375,35,477,33],[375,36,477,34,"value"],[375,41,477,39],[376,4,478,2],[377,4,480,2],[377,8,480,8,"sharedSecret"],[377,20,480,20],[377,23,480,23,"interpolate"],[377,34,480,34],[377,35,480,35,"shares"],[377,41,480,41],[377,43,480,43,"SECRET_INDEX"],[377,55,480,55],[377,56,480,56],[378,4,481,2],[378,8,481,8,"digestShare"],[378,19,481,19],[378,22,481,22,"interpolate"],[378,33,481,33],[378,34,481,34,"shares"],[378,40,481,40],[378,42,481,42,"DIGEST_INDEX"],[378,54,481,54],[378,55,481,55],[379,4,482,2],[379,8,482,8,"digest"],[379,14,482,14],[379,17,482,17,"digestShare"],[379,28,482,28],[379,29,482,29,"slice"],[379,34,482,34],[379,35,482,35],[379,36,482,36],[379,38,482,38,"DIGEST_LENGTH"],[379,51,482,51],[379,52,482,52],[380,4,483,2],[380,8,483,8,"randomPart"],[380,18,483,18],[380,21,483,21,"digestShare"],[380,32,483,32],[380,33,483,33,"slice"],[380,38,483,38],[380,39,483,39,"DIGEST_LENGTH"],[380,52,483,52],[380,53,483,53],[381,4,485,2],[381,8,485,8,"recoveredDigest"],[381,23,485,23],[381,26,485,26,"createDigest"],[381,38,485,38],[381,39,485,39,"randomPart"],[381,49,485,49],[381,51,485,51,"sharedSecret"],[381,63,485,63],[381,64,485,64],[382,4,486,2],[382,8,486,6],[382,9,486,7,"listsAreEqual"],[382,22,486,20],[382,23,486,21,"digest"],[382,29,486,27],[382,31,486,29,"recoveredDigest"],[382,46,486,44],[382,47,486,45],[382,49,486,47],[383,6,487,4],[383,12,487,10],[383,16,487,14,"Error"],[383,21,487,19],[383,22,487,20],[383,60,487,58],[383,61,487,59],[384,4,488,2],[385,4,489,2],[385,11,489,9,"sharedSecret"],[385,23,489,21],[386,2,490,0],[388,2,492,0],[389,2,493,0],[390,2,494,0],[391,2,495,0],[392,2,496,0],[392,11,496,9,"combineMnemonics"],[392,27,496,25,"combineMnemonics"],[392,28,496,26,"mnemonics"],[392,37,496,35],[392,39,496,54],[393,4,496,54],[393,8,496,37,"passphrase"],[393,18,496,47],[393,21,496,47,"arguments"],[393,30,496,47],[393,31,496,47,"length"],[393,37,496,47],[393,45,496,47,"arguments"],[393,54,496,47],[393,62,496,47,"undefined"],[393,71,496,47],[393,74,496,47,"arguments"],[393,83,496,47],[393,89,496,50],[393,91,496,52],[394,4,497,2],[394,8,497,6,"mnemonics"],[394,17,497,15],[394,22,497,20],[394,26,497,24],[394,30,497,28,"mnemonics"],[394,39,497,37],[394,40,497,38,"length"],[394,46,497,44],[394,51,497,49],[394,52,497,50],[394,54,497,52],[395,6,498,4],[395,12,498,10],[395,16,498,14,"Error"],[395,21,498,19],[395,22,498,20],[395,55,498,53],[395,56,498,54],[396,4,499,2],[397,4,501,2],[397,8,501,8,"decoded"],[397,15,501,15],[397,18,501,18,"decodeMnemonics"],[397,33,501,33],[397,34,501,34,"mnemonics"],[397,43,501,43],[397,44,501,44],[398,4,502,2],[398,8,502,8,"identifier"],[398,18,502,18],[398,21,502,21,"decoded"],[398,28,502,28],[398,29,502,29,"identifier"],[398,39,502,39],[399,4,503,2],[399,8,503,8,"extendableBackupFlag"],[399,28,503,28],[399,31,503,31,"decoded"],[399,38,503,38],[399,39,503,39,"extendableBackupFlag"],[399,59,503,59],[400,4,504,2],[400,8,504,8,"iterationExponent"],[400,25,504,25],[400,28,504,28,"decoded"],[400,35,504,35],[400,36,504,36,"iterationExponent"],[400,53,504,53],[401,4,505,2],[401,8,505,8,"groupThreshold"],[401,22,505,22],[401,25,505,25,"decoded"],[401,32,505,32],[401,33,505,33,"groupThreshold"],[401,47,505,47],[402,4,506,2],[402,8,506,8,"groupCount"],[402,18,506,18],[402,21,506,21,"decoded"],[402,28,506,28],[402,29,506,29,"groupCount"],[402,39,506,39],[403,4,507,2],[403,8,507,8,"groups"],[403,14,507,14],[403,17,507,17,"decoded"],[403,24,507,24],[403,25,507,25,"groups"],[403,31,507,31],[404,4,509,2],[404,8,509,6,"groups"],[404,14,509,12],[404,15,509,13,"size"],[404,19,509,17],[404,22,509,20,"groupThreshold"],[404,36,509,34],[404,38,509,36],[405,6,510,4],[405,12,510,10],[405,16,510,14,"Error"],[405,21,510,19],[405,22,511,6],[405,65,511,49,"groups"],[405,71,511,55],[405,72,511,56,"size"],[405,76,511,60],[405,115,511,99,"groupThreshold"],[405,129,511,113],[405,132,512,4],[405,133,512,5],[406,4,513,2],[407,4,515,2],[407,8,515,6,"groups"],[407,14,515,12],[407,15,515,13,"size"],[407,19,515,17],[407,24,515,22,"groupThreshold"],[407,38,515,36],[407,40,515,38],[408,6,516,4],[408,12,516,10],[408,16,516,14,"Error"],[408,21,516,19],[408,22,517,6],[408,67,517,51,"groupThreshold"],[408,81,517,65],[408,97,517,81,"groups"],[408,103,517,87],[408,104,517,88,"size"],[408,108,517,92],[408,125,518,4],[408,126,518,5],[409,4,519,2],[410,4,521,2],[410,8,521,6,"allShares"],[410,17,521,15],[410,20,521,18],[410,24,521,22,"Map"],[410,27,521,25],[410,28,521,26],[410,29,521,27],[411,4,522,2,"groups"],[411,10,522,8],[411,11,522,9,"forEach"],[411,18,522,16],[411,19,522,17],[411,29,522,18,"members"],[411,36,522,25],[411,38,522,27,"groupIndex"],[411,48,522,37],[411,50,522,42],[412,6,523,4],[412,10,523,10,"threshold"],[412,19,523,19],[412,22,523,22,"members"],[412,29,523,29],[412,30,523,30,"keys"],[412,34,523,34],[412,35,523,35],[412,36,523,36],[412,37,523,37,"next"],[412,41,523,41],[412,42,523,42],[412,43,523,43],[412,44,523,44,"value"],[412,49,523,49],[413,6,524,4],[413,10,524,10,"shares"],[413,16,524,16],[413,19,524,19,"members"],[413,26,524,26],[413,27,524,27,"values"],[413,33,524,33],[413,34,524,34],[413,35,524,35],[413,36,524,36,"next"],[413,40,524,40],[413,41,524,41],[413,42,524,42],[413,43,524,43,"value"],[413,48,524,48],[414,6,525,4],[414,10,525,8,"shares"],[414,16,525,14],[414,17,525,15,"size"],[414,21,525,19],[414,26,525,24,"threshold"],[414,35,525,33],[414,37,525,35],[415,8,526,6],[415,12,526,12,"prefix"],[415,18,526,18],[415,21,526,21,"groupPrefix"],[415,32,526,32],[415,33,527,8,"identifier"],[415,43,527,18],[415,45,528,8,"extendableBackupFlag"],[415,65,528,28],[415,67,529,8,"iterationExponent"],[415,84,529,25],[415,86,530,8,"groupIndex"],[415,96,530,18],[415,98,531,8,"groupThreshold"],[415,112,531,22],[415,114,532,8,"groupCount"],[415,124,533,6],[415,125,533,7],[416,8,534,6],[416,14,534,12],[416,18,534,16,"Error"],[416,23,534,21],[416,24,535,8],[416,63,535,47,"threshold"],[416,72,535,56],[416,101,535,85,"mnemonicFromIndices"],[416,120,535,104],[416,121,535,105,"prefix"],[416,127,535,111],[416,128,535,112],[416,141,535,125,"shares"],[416,147,535,131],[416,148,535,132,"size"],[416,152,535,136],[416,169,536,6],[416,170,536,7],[417,6,537,4],[418,6,539,4],[418,10,539,10,"recovered"],[418,19,539,19],[418,22,539,22,"recoverSecret"],[418,35,539,35],[418,36,539,36,"threshold"],[418,45,539,45],[418,47,539,47,"shares"],[418,53,539,53],[418,54,539,54],[419,6,540,4,"allShares"],[419,15,540,13],[419,16,540,14,"set"],[419,19,540,17],[419,20,540,18,"groupIndex"],[419,30,540,28],[419,32,540,30,"recovered"],[419,41,540,39],[419,42,540,40],[420,4,541,2],[420,5,541,3],[420,6,541,4],[421,4,543,2],[421,8,543,8,"ems"],[421,11,543,11],[421,14,543,14,"recoverSecret"],[421,27,543,27],[421,28,543,28,"groupThreshold"],[421,42,543,42],[421,44,543,44,"allShares"],[421,53,543,53],[421,54,543,54],[422,4,544,2],[422,8,544,8,"id"],[422,10,544,10],[422,13,544,13,"intToIndices"],[422,25,544,25],[422,26,544,26,"BigInt"],[422,32,544,32],[422,33,544,33,"identifier"],[422,43,544,43],[422,44,544,44],[422,46,544,46,"ITERATION_EXP_WORDS_LENGTH"],[422,72,544,72],[422,74,544,74],[422,75,544,75],[422,76,544,76],[423,4,545,2],[423,8,545,8,"ms"],[423,10,545,10],[423,13,545,13,"crypt"],[423,18,545,18],[423,19,546,4,"ems"],[423,22,546,7],[423,24,547,4,"passphrase"],[423,34,547,14],[423,36,548,4,"iterationExponent"],[423,53,548,21],[423,55,549,4,"id"],[423,57,549,6],[423,59,550,4,"extendableBackupFlag"],[423,79,550,24],[423,81,551,4],[423,86,552,2],[423,87,552,3],[424,4,554,2],[424,11,554,9,"ms"],[424,13,554,11],[425,2,555,0],[426,2,557,0],[426,11,557,9,"decodeMnemonics"],[426,26,557,24,"decodeMnemonics"],[426,27,557,25,"mnemonics"],[426,36,557,34],[426,38,557,36],[427,4,558,2],[427,8,558,6],[427,10,558,8,"mnemonics"],[427,19,558,17],[427,31,558,29,"Array"],[427,36,558,34],[427,37,558,35],[427,39,558,37],[428,6,559,4],[428,12,559,10],[428,16,559,14,"Error"],[428,21,559,19],[428,22,559,20],[428,63,559,61],[428,64,559,62],[429,4,560,2],[430,4,561,2],[430,8,561,8,"identifiers"],[430,19,561,19],[430,22,561,22],[430,26,561,26,"Set"],[430,29,561,29],[430,30,561,30],[430,31,561,31],[431,4,562,2],[431,8,562,8,"extendableBackupFlags"],[431,29,562,29],[431,32,562,32],[431,36,562,36,"Set"],[431,39,562,39],[431,40,562,40],[431,41,562,41],[432,4,563,2],[432,8,563,8,"iterationExponents"],[432,26,563,26],[432,29,563,29],[432,33,563,33,"Set"],[432,36,563,36],[432,37,563,37],[432,38,563,38],[433,4,564,2],[433,8,564,8,"groupThresholds"],[433,23,564,23],[433,26,564,26],[433,30,564,30,"Set"],[433,33,564,33],[433,34,564,34],[433,35,564,35],[434,4,565,2],[434,8,565,8,"groupCounts"],[434,19,565,19],[434,22,565,22],[434,26,565,26,"Set"],[434,29,565,29],[434,30,565,30],[434,31,565,31],[435,4,566,2],[435,8,566,8,"groups"],[435,14,566,14],[435,17,566,17],[435,21,566,21,"Map"],[435,24,566,24],[435,25,566,25],[435,26,566,26],[436,4,568,2,"mnemonics"],[436,13,568,11],[436,14,568,12,"forEach"],[436,21,568,19],[436,22,568,20],[436,32,568,21,"mnemonic"],[436,40,568,29],[436,42,568,34],[437,6,569,4],[437,10,569,10,"decoded"],[437,17,569,17],[437,20,569,20,"decodeMnemonic"],[437,34,569,34],[437,35,569,35,"mnemonic"],[437,43,569,43],[437,44,569,44],[438,6,571,4,"identifiers"],[438,17,571,15],[438,18,571,16,"add"],[438,21,571,19],[438,22,571,20,"decoded"],[438,29,571,27],[438,30,571,28,"identifier"],[438,40,571,38],[438,41,571,39],[439,6,572,4,"extendableBackupFlags"],[439,27,572,25],[439,28,572,26,"add"],[439,31,572,29],[439,32,572,30,"decoded"],[439,39,572,37],[439,40,572,38,"extendableBackupFlag"],[439,60,572,58],[439,61,572,59],[440,6,573,4,"iterationExponents"],[440,24,573,22],[440,25,573,23,"add"],[440,28,573,26],[440,29,573,27,"decoded"],[440,36,573,34],[440,37,573,35,"iterationExponent"],[440,54,573,52],[440,55,573,53],[441,6,574,4],[441,10,574,10,"groupIndex"],[441,20,574,20],[441,23,574,23,"decoded"],[441,30,574,30],[441,31,574,31,"groupIndex"],[441,41,574,41],[442,6,575,4,"groupThresholds"],[442,21,575,19],[442,22,575,20,"add"],[442,25,575,23],[442,26,575,24,"decoded"],[442,33,575,31],[442,34,575,32,"groupThreshold"],[442,48,575,46],[442,49,575,47],[443,6,576,4,"groupCounts"],[443,17,576,15],[443,18,576,16,"add"],[443,21,576,19],[443,22,576,20,"decoded"],[443,29,576,27],[443,30,576,28,"groupCount"],[443,40,576,38],[443,41,576,39],[444,6,577,4],[444,10,577,10,"memberIndex"],[444,21,577,21],[444,24,577,24,"decoded"],[444,31,577,31],[444,32,577,32,"memberIndex"],[444,43,577,43],[445,6,578,4],[445,10,578,10,"memberThreshold"],[445,25,578,25],[445,28,578,28,"decoded"],[445,35,578,35],[445,36,578,36,"memberThreshold"],[445,51,578,51],[446,6,579,4],[446,10,579,10,"share"],[446,15,579,15],[446,18,579,18,"decoded"],[446,25,579,25],[446,26,579,26,"share"],[446,31,579,31],[447,6,581,4],[447,10,581,10,"group"],[447,15,581,15],[447,18,581,18],[447,19,581,19,"groups"],[447,25,581,25],[447,26,581,26,"has"],[447,29,581,29],[447,30,581,30,"groupIndex"],[447,40,581,40],[447,41,581,41],[447,44,581,44],[447,48,581,48,"Map"],[447,51,581,51],[447,52,581,52],[447,53,581,53],[447,56,581,56,"groups"],[447,62,581,62],[447,63,581,63,"get"],[447,66,581,66],[447,67,581,67,"groupIndex"],[447,77,581,77],[447,78,581,78],[448,6,582,4],[448,10,582,10,"member"],[448,16,582,16],[448,19,582,19],[448,20,582,20,"group"],[448,25,582,25],[448,26,582,26,"has"],[448,29,582,29],[448,30,582,30,"memberThreshold"],[448,45,582,45],[448,46,582,46],[448,49,583,8],[448,53,583,12,"Map"],[448,56,583,15],[448,57,583,16],[448,58,583,17],[448,61,584,8,"group"],[448,66,584,13],[448,67,584,14,"get"],[448,70,584,17],[448,71,584,18,"memberThreshold"],[448,86,584,33],[448,87,584,34],[449,6,585,4,"member"],[449,12,585,10],[449,13,585,11,"set"],[449,16,585,14],[449,17,585,15,"memberIndex"],[449,28,585,26],[449,30,585,28,"share"],[449,35,585,33],[449,36,585,34],[450,6,586,4,"group"],[450,11,586,9],[450,12,586,10,"set"],[450,15,586,13],[450,16,586,14,"memberThreshold"],[450,31,586,29],[450,33,586,31,"member"],[450,39,586,37],[450,40,586,38],[451,6,587,4],[451,10,587,8,"group"],[451,15,587,13],[451,16,587,14,"size"],[451,20,587,18],[451,25,587,23],[451,26,587,24],[451,28,587,26],[452,8,588,6],[452,14,588,12],[452,18,588,16,"Error"],[452,23,588,21],[452,24,589,8],[452,113,590,6],[452,114,590,7],[453,6,591,4],[454,6,592,4,"groups"],[454,12,592,10],[454,13,592,11,"set"],[454,16,592,14],[454,17,592,15,"groupIndex"],[454,27,592,25],[454,29,592,27,"group"],[454,34,592,32],[454,35,592,33],[455,4,593,2],[455,5,593,3],[455,6,593,4],[456,4,595,2],[456,8,596,4,"identifiers"],[456,19,596,15],[456,20,596,16,"size"],[456,24,596,20],[456,29,596,25],[456,30,596,26],[456,34,597,4,"extendableBackupFlags"],[456,55,597,25],[456,56,597,26,"size"],[456,60,597,30],[456,65,597,35],[456,66,597,36],[456,70,598,4,"iterationExponents"],[456,88,598,22],[456,89,598,23,"size"],[456,93,598,27],[456,98,598,32],[456,99,598,33],[456,101,599,4],[457,6,600,4],[457,12,600,10],[457,16,600,14,"Error"],[457,21,600,19],[457,22,601,6],[457,90,601,74,"ITERATION_EXP_WORDS_LENGTH"],[457,116,601,100],[457,125,602,4],[457,126,602,5],[458,4,603,2],[459,4,605,2],[459,8,605,6,"groupThresholds"],[459,23,605,21],[459,24,605,22,"size"],[459,28,605,26],[459,33,605,31],[459,34,605,32],[459,36,605,34],[460,6,606,4],[460,12,606,10],[460,16,606,14,"Error"],[460,21,606,19],[460,22,607,6],[460,99,608,4],[460,100,608,5],[461,4,609,2],[462,4,611,2],[462,8,611,6,"groupCounts"],[462,19,611,17],[462,20,611,18,"size"],[462,24,611,22],[462,29,611,27],[462,30,611,28],[462,32,611,30],[463,6,612,4],[463,12,612,10],[463,16,612,14,"Error"],[463,21,612,19],[463,22,613,6],[463,95,614,4],[463,96,614,5],[464,4,615,2],[465,4,617,2],[465,11,617,9],[466,6,618,4,"identifier"],[466,16,618,14],[466,18,618,16,"identifiers"],[466,29,618,27],[466,30,618,28,"values"],[466,36,618,34],[466,37,618,35],[466,38,618,36],[466,39,618,37,"next"],[466,43,618,41],[466,44,618,42],[466,45,618,43],[466,46,618,44,"value"],[466,51,618,49],[467,6,619,4,"extendableBackupFlag"],[467,26,619,24],[467,28,619,26,"extendableBackupFlags"],[467,49,619,47],[467,50,619,48,"values"],[467,56,619,54],[467,57,619,55],[467,58,619,56],[467,59,619,57,"next"],[467,63,619,61],[467,64,619,62],[467,65,619,63],[467,66,619,64,"value"],[467,71,619,69],[468,6,620,4,"iterationExponent"],[468,23,620,21],[468,25,620,23,"iterationExponents"],[468,43,620,41],[468,44,620,42,"values"],[468,50,620,48],[468,51,620,49],[468,52,620,50],[468,53,620,51,"next"],[468,57,620,55],[468,58,620,56],[468,59,620,57],[468,60,620,58,"value"],[468,65,620,63],[469,6,621,4,"groupThreshold"],[469,20,621,18],[469,22,621,20,"groupThresholds"],[469,37,621,35],[469,38,621,36,"values"],[469,44,621,42],[469,45,621,43],[469,46,621,44],[469,47,621,45,"next"],[469,51,621,49],[469,52,621,50],[469,53,621,51],[469,54,621,52,"value"],[469,59,621,57],[470,6,622,4,"groupCount"],[470,16,622,14],[470,18,622,16,"groupCounts"],[470,29,622,27],[470,30,622,28,"values"],[470,36,622,34],[470,37,622,35],[470,38,622,36],[470,39,622,37,"next"],[470,43,622,41],[470,44,622,42],[470,45,622,43],[470,46,622,44,"value"],[470,51,622,49],[471,6,623,4,"groups"],[471,12,623,10],[471,14,623,12,"groups"],[472,4,624,2],[472,5,624,3],[473,2,625,0],[475,2,627,0],[476,2,628,0],[477,2,629,0],[478,2,630,0],[478,11,630,9,"decodeMnemonic"],[478,25,630,23,"decodeMnemonic"],[478,26,630,24,"mnemonic"],[478,34,630,32],[478,36,630,34],[479,4,631,2],[479,8,631,8,"data"],[479,12,631,12],[479,15,631,15,"mnemonicToIndices"],[479,32,631,32],[479,33,631,33,"mnemonic"],[479,41,631,41],[479,42,631,42],[480,4,633,2],[480,8,633,6,"data"],[480,12,633,10],[480,13,633,11,"length"],[480,19,633,17],[480,22,633,20,"MNEMONICS_WORDS_LENGTH"],[480,44,633,42],[480,46,633,44],[481,6,634,4],[481,12,634,10],[481,16,634,14,"Error"],[481,21,634,19],[481,22,635,6],[481,95,635,79,"MNEMONICS_WORDS_LENGTH"],[481,117,635,101],[481,126,636,4],[481,127,636,5],[482,4,637,2],[483,4,639,2],[483,8,639,8,"paddingLen"],[483,18,639,18],[483,21,639,22,"RADIX_BITS"],[483,31,639,32],[483,35,639,36,"data"],[483,39,639,40],[483,40,639,41,"length"],[483,46,639,47],[483,49,639,50,"METADATA_WORDS_LENGTH"],[483,70,639,71],[483,71,639,72],[483,74,639,76],[483,76,639,78],[484,4,640,2],[484,8,640,6,"paddingLen"],[484,18,640,16],[484,21,640,19],[484,22,640,20],[484,24,640,22],[485,6,641,4],[485,12,641,10],[485,16,641,14,"Error"],[485,21,641,19],[485,22,641,20],[485,48,641,46],[485,49,641,47],[486,4,642,2],[487,4,644,2],[487,8,644,8,"idExpExtInt"],[487,19,644,19],[487,22,644,22,"parseInt"],[487,30,644,30],[487,31,645,4,"intFromIndices"],[487,45,645,18],[487,46,645,19,"data"],[487,50,645,23],[487,51,645,24,"slice"],[487,56,645,29],[487,57,645,30],[487,58,645,31],[487,60,645,33,"ITERATION_EXP_WORDS_LENGTH"],[487,86,645,59],[487,87,645,60],[487,88,645,61],[487,90,646,4],[487,92,647,2],[487,93,647,3],[488,4,648,2],[488,8,648,8,"identifier"],[488,18,648,18],[488,21,649,4,"idExpExtInt"],[488,32,649,15],[488,36,650,5,"ITERATION_EXP_BITS_LENGTH"],[488,61,650,30],[488,64,650,33,"EXTENDABLE_BACKUP_FLAG_BITS_LENGTH"],[488,98,650,68],[489,4,651,2],[489,8,651,8,"extendableBackupFlag"],[489,28,651,28],[489,31,652,5,"idExpExtInt"],[489,42,652,16],[489,46,652,20,"ITERATION_EXP_BITS_LENGTH"],[489,71,652,45],[489,74,653,5],[489,75,653,6],[489,76,653,7],[489,80,653,11,"EXTENDABLE_BACKUP_FLAG_BITS_LENGTH"],[489,114,653,45],[489,118,653,49],[489,119,653,51],[490,4,654,2],[490,8,654,8,"iterationExponent"],[490,25,654,25],[490,28,655,4,"idExpExtInt"],[490,39,655,15],[490,42,655,19],[490,43,655,20],[490,44,655,21],[490,48,655,25,"ITERATION_EXP_BITS_LENGTH"],[490,73,655,50],[490,77,655,54],[490,78,655,56],[491,4,657,2],[491,8,657,6],[491,9,657,7,"rs1024VerifyChecksum"],[491,29,657,27],[491,30,657,28,"data"],[491,34,657,32],[491,36,657,34,"extendableBackupFlag"],[491,56,657,54],[491,57,657,55],[491,59,657,57],[492,6,658,4],[492,12,658,10],[492,16,658,14,"Error"],[492,21,658,19],[492,22,658,20],[492,49,658,47],[492,50,658,48],[493,4,659,2],[494,4,661,2],[494,8,661,8,"tmp"],[494,11,661,11],[494,14,661,14,"intFromIndices"],[494,28,661,28],[494,29,662,4,"data"],[494,33,662,8],[494,34,662,9,"slice"],[494,39,662,14],[494,40,662,15,"ITERATION_EXP_WORDS_LENGTH"],[494,66,662,41],[494,68,662,43,"ITERATION_EXP_WORDS_LENGTH"],[494,94,662,69],[494,97,662,72],[494,98,662,73],[494,99,663,2],[494,100,663,3],[495,4,665,2],[495,8,665,8,"indices"],[495,15,665,15],[495,18,665,18,"intToIndices"],[495,30,665,30],[495,31,665,31,"tmp"],[495,34,665,34],[495,36,665,36],[495,37,665,37],[495,39,665,39],[495,40,665,40],[495,41,665,41],[496,4,667,2],[496,8,667,8,"groupIndex"],[496,18,667,18],[496,21,667,21,"indices"],[496,28,667,28],[496,29,667,29],[496,30,667,30],[496,31,667,31],[497,4,668,2],[497,8,668,8,"groupThreshold"],[497,22,668,22],[497,25,668,25,"indices"],[497,32,668,32],[497,33,668,33],[497,34,668,34],[497,35,668,35],[498,4,669,2],[498,8,669,8,"groupCount"],[498,18,669,18],[498,21,669,21,"indices"],[498,28,669,28],[498,29,669,29],[498,30,669,30],[498,31,669,31],[499,4,670,2],[499,8,670,8,"memberIndex"],[499,19,670,19],[499,22,670,22,"indices"],[499,29,670,29],[499,30,670,30],[499,31,670,31],[499,32,670,32],[500,4,671,2],[500,8,671,8,"memberThreshold"],[500,23,671,23],[500,26,671,26,"indices"],[500,33,671,33],[500,34,671,34],[500,35,671,35],[500,36,671,36],[501,4,673,2],[501,8,673,8,"valueData"],[501,17,673,17],[501,20,673,20,"data"],[501,24,673,24],[501,25,673,25,"slice"],[501,30,673,30],[501,31,674,4,"ITERATION_EXP_WORDS_LENGTH"],[501,57,674,30],[501,60,674,33],[501,61,674,34],[501,63,675,4,"data"],[501,67,675,8],[501,68,675,9,"length"],[501,74,675,15],[501,77,675,18,"CHECKSUM_WORDS_LENGTH"],[501,98,676,2],[501,99,676,3],[502,4,678,2],[502,8,678,6,"groupCount"],[502,18,678,16],[502,21,678,19,"groupThreshold"],[502,35,678,33],[502,37,678,35],[503,6,679,4],[503,12,679,10],[503,16,679,14,"Error"],[503,21,679,19],[503,22,680,6],[503,43,680,27,"mnemonic"],[503,51,680,35],[503,75,680,59,"groupThreshold"],[503,89,680,73],[503,130,680,114,"groupCount"],[503,140,680,124],[503,144,681,4],[503,145,681,5],[504,4,682,2],[505,4,684,2],[505,8,684,8,"valueInt"],[505,16,684,16],[505,19,684,19,"intFromIndices"],[505,33,684,33],[505,34,684,34,"valueData"],[505,43,684,43],[505,44,684,44],[506,4,686,2],[506,8,686,6],[507,6,687,4],[507,10,687,10,"valueByteCount"],[507,24,687,24],[507,27,687,27,"bitsToBytes"],[507,38,687,38],[507,39,688,6,"RADIX_BITS"],[507,49,688,16],[507,52,688,19,"valueData"],[507,61,688,28],[507,62,688,29,"length"],[507,68,688,35],[507,71,688,38,"paddingLen"],[507,81,689,4],[507,82,689,5],[508,6,690,4],[508,10,690,10,"share"],[508,15,690,15],[508,18,690,18,"encodeBigInt"],[508,30,690,30],[508,31,690,31,"valueInt"],[508,39,690,39],[508,41,690,41,"valueByteCount"],[508,55,690,55],[508,56,690,56],[509,6,692,4],[509,13,692,11],[510,8,693,6,"identifier"],[510,18,693,16],[510,20,693,18,"identifier"],[510,30,693,28],[511,8,694,6,"extendableBackupFlag"],[511,28,694,26],[511,30,694,28,"extendableBackupFlag"],[511,50,694,48],[512,8,695,6,"iterationExponent"],[512,25,695,23],[512,27,695,25,"iterationExponent"],[512,44,695,42],[513,8,696,6,"groupIndex"],[513,18,696,16],[513,20,696,18,"groupIndex"],[513,30,696,28],[514,8,697,6,"groupThreshold"],[514,22,697,20],[514,24,697,22,"groupThreshold"],[514,38,697,36],[514,41,697,39],[514,42,697,40],[515,8,698,6,"groupCount"],[515,18,698,16],[515,20,698,18,"groupCount"],[515,30,698,28],[515,33,698,31],[515,34,698,32],[516,8,699,6,"memberIndex"],[516,19,699,17],[516,21,699,19,"memberIndex"],[516,32,699,30],[517,8,700,6,"memberThreshold"],[517,23,700,21],[517,25,700,23,"memberThreshold"],[517,40,700,38],[517,43,700,41],[517,44,700,42],[518,8,701,6,"share"],[518,13,701,11],[518,15,701,13,"share"],[519,6,702,4],[519,7,702,5],[520,4,703,2],[520,5,703,3],[520,6,703,4],[520,13,703,11,"e"],[520,14,703,12],[520,16,703,14],[521,6,704,4],[521,12,704,10],[521,16,704,14,"Error"],[521,21,704,19],[521,22,704,20],[521,51,704,49,"e"],[521,52,704,50],[521,55,704,53],[521,56,704,54],[522,4,705,2],[523,2,706,0],[524,2,708,0],[524,11,708,9,"validateMnemonic"],[524,27,708,25,"validateMnemonic"],[524,28,708,26,"mnemonic"],[524,36,708,34],[524,38,708,36],[525,4,709,2],[525,8,709,6],[526,6,710,4,"decodeMnemonic"],[526,20,710,18],[526,21,710,19,"mnemonic"],[526,29,710,27],[526,30,710,28],[527,6,711,4],[527,13,711,11],[527,17,711,15],[528,4,712,2],[528,5,712,3],[528,6,712,4],[528,13,712,11,"error"],[528,18,712,16],[528,20,712,18],[529,6,713,4],[529,13,713,11],[529,18,713,16],[530,4,714,2],[531,2,715,0],[532,2,717,0],[532,11,717,9,"groupPrefix"],[532,22,717,20,"groupPrefix"],[532,23,718,2,"identifier"],[532,33,718,12],[532,35,719,2,"extendableBackupFlag"],[532,55,719,22],[532,57,720,2,"iterationExponent"],[532,74,720,19],[532,76,721,2,"groupIndex"],[532,86,721,12],[532,88,722,2,"groupThreshold"],[532,102,722,16],[532,104,723,2,"groupCount"],[532,114,723,12],[532,116,724,2],[533,4,725,2],[533,8,725,8,"idExpInt"],[533,16,725,16],[533,19,725,19,"BigInt"],[533,25,725,25],[533,26,726,4],[533,27,726,5,"identifier"],[533,37,726,15],[533,41,727,7,"ITERATION_EXP_BITS_LENGTH"],[533,66,727,32],[533,69,727,35,"EXTENDABLE_BACKUP_FLAG_BITS_LENGTH"],[533,103,727,70],[533,108,728,7,"extendableBackupFlag"],[533,128,728,27],[533,132,728,31,"ITERATION_EXP_BITS_LENGTH"],[533,157,728,56],[533,158,728,57],[533,161,729,6,"iterationExponent"],[533,178,730,2],[533,179,730,3],[534,4,732,2],[534,8,732,8,"indc"],[534,12,732,12],[534,15,732,15,"intToIndices"],[534,27,732,27],[534,28,732,28,"idExpInt"],[534,36,732,36],[534,38,732,38,"ITERATION_EXP_WORDS_LENGTH"],[534,64,732,64],[534,66,732,66,"RADIX_BITS"],[534,76,732,76],[534,77,732,77],[535,4,734,2],[535,8,734,8,"indc2"],[535,13,734,13],[535,16,735,4],[535,17,735,5,"groupIndex"],[535,27,735,15],[535,31,735,19],[535,32,735,20],[535,37,735,26,"groupThreshold"],[535,51,735,40],[535,54,735,43],[535,55,735,44],[535,59,735,49],[535,60,735,50],[535,61,735,51],[535,65,735,56,"groupCount"],[535,75,735,66],[535,78,735,69],[535,79,735,70],[535,83,735,75],[535,84,735,76],[535,85,735,77],[536,4,737,2,"indc"],[536,8,737,6],[536,9,737,7,"push"],[536,13,737,11],[536,14,737,12,"indc2"],[536,19,737,17],[536,20,737,18],[537,4,738,2],[537,11,738,9,"indc"],[537,15,738,13],[538,2,739,0],[539,2,741,0],[539,11,741,9,"listsAreEqual"],[539,24,741,22,"listsAreEqual"],[539,25,741,23,"a"],[539,26,741,24],[539,28,741,26,"b"],[539,29,741,27],[539,31,741,29],[540,4,742,2],[540,8,742,6,"a"],[540,9,742,7],[540,14,742,12],[540,18,742,16],[540,22,742,20,"b"],[540,23,742,21],[540,28,742,26],[540,32,742,30],[540,36,742,34,"a"],[540,37,742,35],[540,38,742,36,"length"],[540,44,742,42],[540,49,742,47,"b"],[540,50,742,48],[540,51,742,49,"length"],[540,57,742,55],[540,59,742,57],[541,6,743,4],[541,13,743,11],[541,18,743,16],[542,4,744,2],[543,4,746,2],[543,8,746,6,"i"],[543,9,746,7],[543,12,746,10],[543,13,746,11],[544,4,747,2],[544,11,747,9,"a"],[544,12,747,10],[544,13,747,11,"every"],[544,18,747,16],[544,19,747,17],[544,29,747,18,"item"],[544,33,747,22],[544,35,747,27],[545,6,748,4],[545,13,748,11,"b"],[545,14,748,12],[545,15,748,13,"i"],[545,16,748,14],[545,18,748,16],[545,19,748,17],[545,24,748,22,"item"],[545,28,748,26],[546,4,749,2],[546,5,749,3],[546,6,749,4],[547,2,750,0],[549,2,752,0],[550,2,753,0],[551,2,754,0],[552,2,755,0],[552,11,755,9,"encodeMnemonic"],[552,25,755,23,"encodeMnemonic"],[552,26,756,2,"identifier"],[552,36,756,12],[552,38,757,2,"extendableBackupFlag"],[552,58,757,22],[552,60,758,2,"iterationExponent"],[552,77,758,19],[552,79,759,2,"groupIndex"],[552,89,759,12],[552,91,760,2,"groupThreshold"],[552,105,760,16],[552,107,761,2,"groupCount"],[552,117,761,12],[552,119,762,2,"memberIndex"],[552,130,762,13],[552,132,763,2,"memberThreshold"],[552,147,763,17],[552,149,764,2,"value"],[552,154,764,7],[552,156,765,2],[553,4,766,2],[554,4,767,2],[554,8,767,8,"valueWordCount"],[554,22,767,22],[554,25,767,25,"bitsToWords"],[554,36,767,36],[554,37,767,37,"value"],[554,42,767,42],[554,43,767,43,"length"],[554,49,767,49],[554,52,767,52],[554,53,767,53],[554,54,767,54],[555,4,769,2],[555,8,769,8,"valueInt"],[555,16,769,16],[555,19,769,19,"decodeBigInt"],[555,31,769,31],[555,32,769,32,"value"],[555,37,769,37],[555,38,769,38],[556,4,770,2],[556,8,770,6,"newIdentifier"],[556,21,770,19],[556,24,770,22,"parseInt"],[556,32,770,30],[556,33,770,31,"decodeBigInt"],[556,45,770,43],[556,46,770,44,"identifier"],[556,56,770,54],[556,57,770,55],[556,59,770,57],[556,61,770,59],[556,62,770,60],[557,4,772,2],[557,8,772,8,"gp"],[557,10,772,10],[557,13,772,13,"groupPrefix"],[557,24,772,24],[557,25,773,4,"newIdentifier"],[557,38,773,17],[557,40,774,4,"extendableBackupFlag"],[557,60,774,24],[557,62,775,4,"iterationExponent"],[557,79,775,21],[557,81,776,4,"groupIndex"],[557,91,776,14],[557,93,777,4,"groupThreshold"],[557,107,777,18],[557,109,778,4,"groupCount"],[557,119,779,2],[557,120,779,3],[558,4,780,2],[558,8,780,8,"tp"],[558,10,780,10],[558,13,780,13,"intToIndices"],[558,25,780,25],[558,26,780,26,"valueInt"],[558,34,780,34],[558,36,780,36,"valueWordCount"],[558,50,780,50],[558,52,780,52,"RADIX_BITS"],[558,62,780,62],[558,63,780,63],[559,4,782,2],[559,8,782,8,"calc"],[559,12,782,12],[559,15,783,4],[559,16,783,5],[559,17,783,7,"groupCount"],[559,27,783,17],[559,30,783,20],[559,31,783,21],[559,34,783,25],[559,35,783,26],[559,40,783,31],[559,41,783,32],[559,46,783,37,"memberIndex"],[559,57,783,48],[559,61,783,52],[559,62,783,53],[559,63,783,54],[559,67,783,58,"memberThreshold"],[559,82,783,73],[559,85,783,76],[559,86,783,77],[559,87,783,78],[560,4,785,2,"gp"],[560,6,785,4],[560,7,785,5,"push"],[560,11,785,9],[560,12,785,10,"calc"],[560,16,785,14],[560,17,785,15],[561,4,786,2],[561,8,786,8,"shareData"],[561,17,786,17],[561,20,786,20,"gp"],[561,22,786,22],[561,23,786,23,"concat"],[561,29,786,29],[561,30,786,30,"tp"],[561,32,786,32],[561,33,786,33],[562,4,788,2],[562,8,788,8,"checksum"],[562,16,788,16],[562,19,788,19,"rs1024CreateChecksum"],[562,39,788,39],[562,40,788,40,"shareData"],[562,49,788,49],[562,51,788,51,"extendableBackupFlag"],[562,71,788,71],[562,72,788,72],[563,4,790,2],[563,11,790,9,"mnemonicFromIndices"],[563,30,790,28],[563,31,790,29,"shareData"],[563,40,790,38],[563,41,790,39,"concat"],[563,47,790,45],[563,48,790,46,"checksum"],[563,56,790,54],[563,57,790,55],[563,58,790,56],[564,2,791,0],[566,2,793,0],[567,2,794,0],[568,2,795,0],[569,2,796,0],[570,2,797,0],[571,2,798,0],[572,2,799,0],[573,2,800,0],[574,2,801,0],[575,2,802,0],[576,2,803,0],[577,2,804,0],[578,2,805,0],[579,2,806,0],[580,2,807,0],[581,2,808,0],[581,6,808,6,"EXP_TABLE"],[581,15,808,15],[581,18,808,18],[581,19,809,2],[581,20,809,3],[581,22,809,5],[581,23,809,6],[581,25,809,8],[581,26,809,9],[581,28,809,11],[581,30,809,13],[581,32,809,15],[581,34,809,17],[581,36,809,19],[581,38,809,21],[581,40,809,23],[581,42,809,25],[581,44,809,27],[581,47,809,30],[581,49,809,32],[581,51,809,34],[581,53,809,36],[581,55,809,38],[581,57,809,40],[581,60,809,43],[581,62,809,45],[581,65,809,48],[581,67,809,50],[581,70,809,53],[581,72,809,55],[581,75,809,58],[581,77,809,60],[581,79,809,62],[581,81,809,64],[581,83,809,66],[581,85,809,68],[581,87,809,70],[581,89,809,72],[581,92,809,75],[581,94,809,77],[581,96,809,79],[581,98,810,2],[581,100,810,4],[581,102,810,6],[581,105,810,9],[581,107,810,11],[581,110,810,14],[581,112,810,16],[581,115,810,19],[581,117,810,21],[581,120,810,24],[581,122,810,26],[581,125,810,29],[581,127,810,31],[581,128,810,32],[581,130,810,34],[581,131,810,35],[581,133,810,37],[581,135,810,39],[581,137,810,41],[581,139,810,43],[581,141,810,45],[581,143,810,47],[581,145,810,49],[581,148,810,52],[581,150,810,54],[581,153,810,57],[581,155,810,59],[581,158,810,62],[581,160,810,64],[581,162,810,66],[581,164,810,68],[581,166,810,70],[581,168,810,72],[581,171,810,75],[581,173,810,77],[581,175,810,79],[581,177,811,2],[581,179,811,4],[581,181,811,6],[581,184,811,9],[581,186,811,11],[581,188,811,13],[581,190,811,15],[581,193,811,18],[581,195,811,20],[581,198,811,23],[581,200,811,25],[581,203,811,28],[581,205,811,30],[581,208,811,33],[581,210,811,35],[581,213,811,38],[581,215,811,40],[581,218,811,43],[581,220,811,45],[581,223,811,48],[581,225,811,50],[581,227,811,52],[581,229,811,54],[581,231,811,56],[581,233,811,58],[581,236,811,61],[581,238,811,63],[581,239,811,64],[581,241,811,66],[581,243,811,68],[581,245,811,70],[581,247,811,72],[581,249,811,74],[581,251,811,76],[581,253,812,2],[581,255,812,4],[581,257,812,6],[581,260,812,9],[581,262,812,11],[581,264,812,13],[581,266,812,15],[581,269,812,18],[581,271,812,20],[581,274,812,23],[581,276,812,25],[581,279,812,28],[581,281,812,30],[581,284,812,33],[581,286,812,35],[581,289,812,38],[581,291,812,40],[581,294,812,43],[581,296,812,45],[581,299,812,48],[581,301,812,50],[581,303,812,52],[581,305,812,54],[581,308,812,57],[581,310,812,59],[581,313,812,62],[581,315,812,64],[581,318,812,67],[581,320,812,69],[581,323,812,72],[581,325,812,74],[581,327,812,76],[581,329,813,2],[581,331,813,4],[581,333,813,6],[581,336,813,9],[581,338,813,11],[581,340,813,13],[581,342,813,15],[581,345,813,18],[581,347,813,20],[581,350,813,23],[581,352,813,25],[581,353,813,26],[581,355,813,28],[581,357,813,30],[581,359,813,32],[581,361,813,34],[581,363,813,36],[581,366,813,39],[581,368,813,41],[581,371,813,44],[581,373,813,46],[581,376,813,49],[581,378,813,51],[581,381,813,54],[581,383,813,56],[581,386,813,59],[581,388,813,61],[581,391,813,64],[581,393,813,66],[581,396,813,69],[581,398,813,71],[581,401,813,74],[581,403,813,76],[581,406,813,79],[581,408,814,2],[581,411,814,5],[581,413,814,7],[581,416,814,10],[581,418,814,12],[581,421,814,15],[581,423,814,17],[581,426,814,20],[581,428,814,22],[581,431,814,25],[581,433,814,27],[581,435,814,29],[581,437,814,31],[581,440,814,34],[581,442,814,36],[581,445,814,39],[581,447,814,41],[581,450,814,44],[581,452,814,46],[581,455,814,49],[581,457,814,51],[581,460,814,54],[581,462,814,56],[581,464,814,58],[581,466,814,60],[581,469,814,63],[581,471,814,65],[581,473,814,67],[581,475,814,69],[581,477,814,71],[581,479,814,73],[581,481,814,75],[581,483,815,2],[581,486,815,5],[581,488,815,7],[581,490,815,9],[581,492,815,11],[581,494,815,13],[581,496,815,15],[581,498,815,17],[581,500,815,19],[581,503,815,22],[581,505,815,24],[581,508,815,27],[581,510,815,29],[581,513,815,32],[581,515,815,34],[581,517,815,36],[581,519,815,38],[581,522,815,41],[581,524,815,43],[581,527,815,46],[581,529,815,48],[581,531,815,50],[581,533,815,52],[581,535,815,54],[581,537,815,56],[581,540,815,59],[581,542,815,61],[581,545,815,64],[581,547,815,66],[581,550,815,69],[581,552,815,71],[581,555,815,74],[581,557,815,76],[581,560,815,79],[581,562,816,2],[581,564,816,4],[581,566,816,6],[581,569,816,9],[581,571,816,11],[581,574,816,14],[581,576,816,16],[581,579,816,19],[581,581,816,21],[581,584,816,24],[581,586,816,26],[581,588,816,28],[581,590,816,30],[581,592,816,32],[581,594,816,34],[581,597,816,37],[581,599,816,39],[581,602,816,42],[581,604,816,44],[581,606,816,46],[581,608,816,48],[581,610,816,50],[581,612,816,52],[581,614,816,54],[581,616,816,56],[581,619,816,59],[581,621,816,61],[581,624,816,64],[581,626,816,66],[581,629,816,69],[581,631,816,71],[581,634,816,74],[581,636,816,76],[581,638,816,78],[581,640,817,2],[581,643,817,5],[581,645,817,7],[581,647,817,9],[581,649,817,11],[581,651,817,13],[581,653,817,15],[581,656,817,18],[581,658,817,20],[581,660,817,22],[581,662,817,24],[581,664,817,26],[581,666,817,28],[581,668,817,30],[581,670,817,32],[581,673,817,35],[581,675,817,37],[581,677,817,39],[581,679,817,41],[581,682,817,44],[581,684,817,46],[581,686,817,48],[581,688,817,50],[581,690,817,52],[581,692,817,54],[581,695,817,57],[581,697,817,59],[581,699,817,61],[581,701,817,63],[581,704,817,66],[581,706,817,68],[581,708,817,70],[581,710,817,72],[581,713,817,75],[581,715,817,77],[581,717,817,79],[581,719,818,2],[581,722,818,5],[581,724,818,7],[581,727,818,10],[581,729,818,12],[581,732,818,15],[581,734,818,17],[581,737,818,20],[581,739,818,22],[581,742,818,25],[581,744,818,27],[581,747,818,30],[581,749,818,32],[581,752,818,35],[581,754,818,37],[581,757,818,40],[581,759,818,42],[581,762,818,45],[581,764,818,47],[581,767,818,50],[581,769,818,52],[581,772,818,55],[581,774,818,57],[581,776,818,59],[581,778,818,61],[581,781,818,64],[581,783,818,66],[581,786,818,69],[581,788,818,71],[581,791,818,74],[581,793,818,76],[581,796,818,79],[581,798,819,2],[581,801,819,5],[581,803,819,7],[581,806,819,10],[581,808,819,12],[581,811,819,15],[581,813,819,17],[581,816,819,20],[581,818,819,22],[581,821,819,25],[581,823,819,27],[581,826,819,30],[581,828,819,32],[581,831,819,35],[581,833,819,37],[581,836,819,40],[581,838,819,42],[581,840,819,44],[581,842,819,46],[581,845,819,49],[581,847,819,51],[581,849,819,53],[581,851,819,55],[581,854,819,58],[581,856,819,60],[581,859,819,63],[581,861,819,65],[581,864,819,68],[581,866,819,70],[581,868,819,72],[581,870,819,74],[581,873,819,77],[581,875,820,2],[581,878,820,5],[581,880,820,7],[581,883,820,10],[581,885,820,12],[581,887,820,14],[581,889,820,16],[581,892,820,19],[581,894,820,21],[581,896,820,23],[581,898,820,25],[581,901,820,28],[581,903,820,30],[581,905,820,32],[581,907,820,34],[581,909,820,36],[581,911,820,38],[581,913,820,40],[581,915,820,42],[581,918,820,45],[581,920,820,47],[581,923,820,50],[581,925,820,52],[581,926,820,53],[581,928,820,55],[581,929,820,56],[581,931,820,58],[581,933,820,60],[581,935,820,62],[581,937,820,64],[581,939,820,66],[581,942,820,69],[581,944,820,71],[581,947,820,74],[581,949,820,76],[581,952,820,79],[581,954,821,2],[581,957,821,5],[581,959,821,7],[581,961,821,9],[581,963,821,11],[581,966,821,14],[581,968,821,16],[581,970,821,18],[581,972,821,20],[581,975,821,23],[581,977,821,25],[581,979,821,27],[581,981,821,29],[581,984,821,32],[581,986,821,34],[581,989,821,37],[581,991,821,39],[581,994,821,42],[581,996,821,44],[581,999,821,47],[581,1001,821,49],[581,1004,821,52],[581,1006,821,54],[581,1009,821,57],[581,1011,821,59],[581,1014,821,62],[581,1016,821,64],[581,1018,821,66],[581,1020,821,68],[581,1022,821,70],[581,1024,821,72],[581,1027,821,75],[581,1029,821,77],[581,1031,821,79],[581,1033,822,2],[581,1036,822,5],[581,1038,822,7],[581,1040,822,9],[581,1042,822,11],[581,1044,822,13],[581,1046,822,15],[581,1048,822,17],[581,1050,822,19],[581,1052,822,21],[581,1054,822,23],[581,1057,822,26],[581,1059,822,28],[581,1061,822,30],[581,1063,822,32],[581,1066,822,35],[581,1068,822,37],[581,1071,822,40],[581,1073,822,42],[581,1076,822,45],[581,1078,822,47],[581,1081,822,50],[581,1083,822,52],[581,1086,822,55],[581,1088,822,57],[581,1091,822,60],[581,1093,822,62],[581,1096,822,65],[581,1098,822,67],[581,1101,822,70],[581,1103,822,72],[581,1106,822,75],[581,1108,822,77],[581,1110,822,79],[581,1112,823,2],[581,1114,823,4],[581,1116,823,6],[581,1118,823,8],[581,1120,823,10],[581,1122,823,12],[581,1124,823,14],[581,1127,823,17],[581,1129,823,19],[581,1132,823,22],[581,1134,823,24],[581,1137,823,27],[581,1139,823,29],[581,1142,823,32],[581,1144,823,34],[581,1147,823,37],[581,1149,823,39],[581,1152,823,42],[581,1154,823,44],[581,1156,823,46],[581,1158,823,48],[581,1160,823,50],[581,1162,823,52],[581,1165,823,55],[581,1167,823,57],[581,1170,823,60],[581,1172,823,62],[581,1175,823,65],[581,1177,823,67],[581,1179,823,69],[581,1181,823,71],[581,1184,823,74],[581,1185,824,1],[582,2,825,0],[582,6,825,6,"LOG_TABLE"],[582,15,825,15],[582,18,825,18],[582,19,826,2],[582,20,826,3],[582,22,826,5],[582,23,826,6],[582,25,826,8],[582,27,826,10],[582,29,826,12],[582,30,826,13],[582,32,826,15],[582,34,826,17],[582,36,826,19],[582,37,826,20],[582,39,826,22],[582,41,826,24],[582,43,826,26],[582,46,826,29],[582,48,826,31],[582,50,826,33],[582,52,826,35],[582,55,826,38],[582,57,826,40],[582,59,826,42],[582,61,826,44],[582,64,826,47],[582,66,826,49],[582,68,826,51],[582,70,826,53],[582,73,826,56],[582,75,826,58],[582,78,826,61],[582,80,826,63],[582,81,826,64],[582,83,826,66],[582,86,826,69],[582,88,826,71],[582,89,826,72],[582,91,826,74],[582,94,826,77],[582,96,827,2],[582,98,827,4],[582,100,827,6],[582,102,827,8],[582,104,827,10],[582,107,827,13],[582,109,827,15],[582,112,827,18],[582,114,827,20],[582,117,827,23],[582,119,827,25],[582,121,827,27],[582,123,827,29],[582,126,827,32],[582,128,827,34],[582,129,827,35],[582,131,827,37],[582,134,827,40],[582,136,827,42],[582,139,827,45],[582,141,827,47],[582,144,827,50],[582,146,827,52],[582,148,827,54],[582,150,827,56],[582,153,827,59],[582,155,827,61],[582,158,827,64],[582,160,827,66],[582,163,827,69],[582,165,827,71],[582,167,827,73],[582,169,827,75],[582,172,827,78],[582,174,828,2],[582,177,828,5],[582,179,828,7],[582,182,828,10],[582,184,828,12],[582,186,828,14],[582,188,828,16],[582,191,828,19],[582,193,828,21],[582,195,828,23],[582,197,828,25],[582,200,828,28],[582,202,828,30],[582,205,828,33],[582,207,828,35],[582,210,828,38],[582,212,828,40],[582,215,828,43],[582,217,828,45],[582,220,828,48],[582,222,828,50],[582,223,828,51],[582,225,828,53],[582,228,828,56],[582,230,828,58],[582,233,828,61],[582,235,828,63],[582,237,828,65],[582,239,828,67],[582,242,828,70],[582,244,828,72],[582,245,828,73],[582,247,828,75],[582,249,828,77],[582,251,829,2],[582,253,829,4],[582,255,829,6],[582,258,829,9],[582,260,829,11],[582,262,829,13],[582,264,829,15],[582,266,829,17],[582,268,829,19],[582,271,829,22],[582,273,829,24],[582,276,829,27],[582,278,829,29],[582,280,829,31],[582,282,829,33],[582,284,829,35],[582,286,829,37],[582,289,829,40],[582,291,829,42],[582,294,829,45],[582,296,829,47],[582,299,829,50],[582,301,829,52],[582,304,829,55],[582,306,829,57],[582,309,829,60],[582,311,829,62],[582,314,829,65],[582,316,829,67],[582,319,829,70],[582,321,829,72],[582,323,829,74],[582,325,829,76],[582,328,829,79],[582,330,830,2],[582,333,830,5],[582,335,830,7],[582,338,830,10],[582,340,830,12],[582,342,830,14],[582,344,830,16],[582,346,830,18],[582,348,830,20],[582,351,830,23],[582,353,830,25],[582,356,830,28],[582,358,830,30],[582,360,830,32],[582,362,830,34],[582,364,830,36],[582,366,830,38],[582,369,830,41],[582,371,830,43],[582,373,830,45],[582,375,830,47],[582,378,830,50],[582,380,830,52],[582,383,830,55],[582,385,830,57],[582,388,830,60],[582,390,830,62],[582,392,830,64],[582,394,830,66],[582,397,830,69],[582,399,830,71],[582,400,830,72],[582,402,830,74],[582,405,830,77],[582,407,831,2],[582,409,831,4],[582,411,831,6],[582,414,831,9],[582,416,831,11],[582,418,831,13],[582,420,831,15],[582,423,831,18],[582,425,831,20],[582,428,831,23],[582,430,831,25],[582,432,831,27],[582,434,831,29],[582,437,831,32],[582,439,831,34],[582,442,831,37],[582,444,831,39],[582,446,831,41],[582,448,831,43],[582,451,831,46],[582,453,831,48],[582,456,831,51],[582,458,831,53],[582,460,831,55],[582,462,831,57],[582,465,831,60],[582,467,831,62],[582,470,831,65],[582,472,831,67],[582,475,831,70],[582,477,831,72],[582,479,831,74],[582,481,831,76],[582,483,831,78],[582,485,832,2],[582,487,832,4],[582,489,832,6],[582,492,832,9],[582,494,832,11],[582,496,832,13],[582,498,832,15],[582,500,832,17],[582,502,832,19],[582,505,832,22],[582,507,832,24],[582,510,832,27],[582,512,832,29],[582,514,832,31],[582,516,832,33],[582,519,832,36],[582,521,832,38],[582,523,832,40],[582,525,832,42],[582,528,832,45],[582,530,832,47],[582,532,832,49],[582,534,832,51],[582,536,832,53],[582,538,832,55],[582,541,832,58],[582,543,832,60],[582,546,832,63],[582,548,832,65],[582,550,832,67],[582,552,832,69],[582,555,832,72],[582,557,832,74],[582,559,832,76],[582,561,833,2],[582,564,833,5],[582,566,833,7],[582,569,833,10],[582,571,833,12],[582,574,833,15],[582,576,833,17],[582,579,833,20],[582,581,833,22],[582,584,833,25],[582,586,833,27],[582,589,833,30],[582,591,833,32],[582,593,833,34],[582,595,833,36],[582,598,833,39],[582,600,833,41],[582,602,833,43],[582,604,833,45],[582,607,833,48],[582,609,833,50],[582,611,833,52],[582,613,833,54],[582,616,833,57],[582,618,833,59],[582,621,833,62],[582,623,833,64],[582,626,833,67],[582,628,833,69],[582,631,833,72],[582,633,833,74],[582,635,833,76],[582,637,834,2],[582,640,834,5],[582,642,834,7],[582,645,834,10],[582,647,834,12],[582,650,834,15],[582,652,834,17],[582,655,834,20],[582,657,834,22],[582,660,834,25],[582,662,834,27],[582,665,834,30],[582,667,834,32],[582,670,834,35],[582,672,834,37],[582,674,834,39],[582,676,834,41],[582,679,834,44],[582,681,834,46],[582,684,834,49],[582,686,834,51],[582,689,834,54],[582,691,834,56],[582,694,834,59],[582,696,834,61],[582,698,834,63],[582,700,834,65],[582,702,834,67],[582,704,834,69],[582,707,834,72],[582,709,834,74],[582,711,834,76],[582,713,835,2],[582,716,835,5],[582,718,835,7],[582,720,835,9],[582,722,835,11],[582,725,835,14],[582,727,835,16],[582,730,835,19],[582,732,835,21],[582,735,835,24],[582,737,835,26],[582,739,835,28],[582,741,835,30],[582,744,835,33],[582,746,835,35],[582,749,835,38],[582,751,835,40],[582,753,835,42],[582,755,835,44],[582,758,835,47],[582,760,835,49],[582,763,835,52],[582,765,835,54],[582,767,835,56],[582,769,835,58],[582,772,835,61],[582,774,835,63],[582,776,835,65],[582,778,835,67],[582,781,835,70],[582,783,835,72],[582,786,835,75],[582,788,835,77],[582,790,835,79],[582,792,836,2],[582,794,836,4],[582,796,836,6],[582,798,836,8],[582,800,836,10],[582,803,836,13],[582,805,836,15],[582,808,836,18],[582,810,836,20],[582,813,836,23],[582,815,836,25],[582,818,836,28],[582,820,836,30],[582,823,836,33],[582,825,836,35],[582,828,836,38],[582,830,836,40],[582,832,836,42],[582,834,836,44],[582,836,836,46],[582,838,836,48],[582,841,836,51],[582,843,836,53],[582,845,836,55],[582,847,836,57],[582,850,836,60],[582,852,836,62],[582,855,836,65],[582,857,836,67],[582,859,836,69],[582,861,836,71],[582,863,836,73],[582,865,836,75],[582,868,836,78],[582,870,837,2],[582,873,837,5],[582,875,837,7],[582,878,837,10],[582,880,837,12],[582,882,837,14],[582,884,837,16],[582,886,837,18],[582,888,837,20],[582,891,837,23],[582,893,837,25],[582,896,837,28],[582,898,837,30],[582,901,837,33],[582,903,837,35],[582,906,837,38],[582,908,837,40],[582,911,837,43],[582,913,837,45],[582,915,837,47],[582,917,837,49],[582,920,837,52],[582,922,837,54],[582,925,837,57],[582,927,837,59],[582,930,837,62],[582,932,837,64],[582,935,837,67],[582,937,837,69],[582,940,837,72],[582,942,837,74],[582,945,837,77],[582,947,838,2],[582,950,838,5],[582,952,838,7],[582,954,838,9],[582,956,838,11],[582,958,838,13],[582,960,838,15],[582,962,838,17],[582,964,838,19],[582,967,838,22],[582,969,838,24],[582,971,838,26],[582,973,838,28],[582,975,838,30],[582,977,838,32],[582,980,838,35],[582,982,838,37],[582,984,838,39],[582,986,838,41],[582,988,838,43],[582,990,838,45],[582,993,838,48],[582,995,838,50],[582,998,838,53],[582,1000,838,55],[582,1002,838,57],[582,1004,838,59],[582,1006,838,61],[582,1008,838,63],[582,1010,838,65],[582,1012,838,67],[582,1015,838,70],[582,1017,838,72],[582,1019,838,74],[582,1021,838,76],[582,1023,838,78],[582,1025,839,2],[582,1028,839,5],[582,1030,839,7],[582,1033,839,10],[582,1035,839,12],[582,1038,839,15],[582,1040,839,17],[582,1042,839,19],[582,1044,839,21],[582,1046,839,23],[582,1048,839,25],[582,1051,839,28],[582,1053,839,30],[582,1056,839,33],[582,1058,839,35],[582,1060,839,37],[582,1062,839,39],[582,1064,839,41],[582,1066,839,43],[582,1068,839,45],[582,1070,839,47],[582,1073,839,50],[582,1075,839,52],[582,1078,839,55],[582,1080,839,57],[582,1083,839,60],[582,1085,839,62],[582,1088,839,65],[582,1090,839,67],[582,1092,839,69],[582,1094,839,71],[582,1097,839,74],[582,1099,839,76],[582,1102,839,79],[582,1104,840,2],[582,1107,840,5],[582,1109,840,7],[582,1112,840,10],[582,1114,840,12],[582,1117,840,15],[582,1119,840,17],[582,1121,840,19],[582,1123,840,21],[582,1126,840,24],[582,1128,840,26],[582,1131,840,29],[582,1133,840,31],[582,1136,840,34],[582,1138,840,36],[582,1140,840,38],[582,1142,840,40],[582,1145,840,43],[582,1147,840,45],[582,1149,840,47],[582,1151,840,49],[582,1153,840,51],[582,1155,840,53],[582,1157,840,55],[582,1159,840,57],[582,1162,840,60],[582,1164,840,62],[582,1167,840,65],[582,1169,840,67],[582,1172,840,70],[582,1174,840,72],[582,1177,840,75],[582,1179,841,2],[582,1182,841,5],[582,1184,841,7],[582,1185,841,8],[582,1186,842,1],[584,2,844,0],[585,2,845,0],[586,2,846,0],[587,2,847,0],[587,6,847,6,"WORD_LIST"],[587,15,847,15],[587,18,847,18],[587,19,848,2],[587,29,848,12],[587,31,849,2],[587,37,849,8],[587,39,850,2],[587,45,850,8],[587,47,851,2],[587,56,851,11],[587,58,852,2],[587,67,852,11],[587,69,853,2],[587,79,853,12],[587,81,854,2],[587,90,854,11],[587,92,855,2],[587,99,855,9],[587,101,856,2],[587,111,856,12],[587,113,857,2],[587,121,857,10],[587,123,858,2],[587,130,858,9],[587,132,859,2],[587,139,859,9],[587,141,860,2],[587,148,860,9],[587,150,861,2],[587,159,861,11],[587,161,862,2],[587,171,862,12],[587,173,863,2],[587,181,863,10],[587,183,864,2],[587,190,864,9],[587,192,865,2],[587,200,865,10],[587,202,866,2],[587,209,866,9],[587,211,867,2],[587,217,867,8],[587,219,868,2],[587,229,868,12],[587,231,869,2],[587,240,869,11],[587,242,870,2],[587,251,870,11],[587,253,871,2],[587,259,871,8],[587,261,872,2],[587,268,872,9],[587,270,873,2],[587,277,873,9],[587,279,874,2],[587,288,874,11],[587,290,875,2],[587,297,875,9],[587,299,876,2],[587,306,876,9],[587,308,877,2],[587,315,877,9],[587,317,878,2],[587,326,878,11],[587,328,879,2],[587,334,879,8],[587,336,880,2],[587,346,880,12],[587,348,881,2],[587,356,881,10],[587,358,882,2],[587,367,882,11],[587,369,883,2],[587,379,883,12],[587,381,884,2],[587,389,884,10],[587,391,885,2],[587,398,885,9],[587,400,886,2],[587,410,886,12],[587,412,887,2],[587,421,887,11],[587,423,888,2],[587,433,888,12],[587,435,889,2],[587,444,889,11],[587,446,890,2],[587,453,890,9],[587,455,891,2],[587,462,891,9],[587,464,892,2],[587,472,892,10],[587,474,893,2],[587,482,893,10],[587,484,894,2],[587,493,894,11],[587,495,895,2],[587,504,895,11],[587,506,896,2],[587,513,896,9],[587,515,897,2],[587,524,897,11],[587,526,898,2],[587,534,898,10],[587,536,899,2],[587,543,899,9],[587,545,900,2],[587,552,900,9],[587,554,901,2],[587,561,901,9],[587,563,902,2],[587,571,902,10],[587,573,903,2],[587,582,903,11],[587,584,904,2],[587,592,904,10],[587,594,905,2],[587,603,905,11],[587,605,906,2],[587,613,906,10],[587,615,907,2],[587,621,907,8],[587,623,908,2],[587,632,908,11],[587,634,909,2],[587,644,909,12],[587,646,910,2],[587,653,910,9],[587,655,911,2],[587,662,911,9],[587,664,912,2],[587,670,912,8],[587,672,913,2],[587,678,913,8],[587,680,914,2],[587,686,914,8],[587,688,915,2],[587,694,915,8],[587,696,916,2],[587,703,916,9],[587,705,917,2],[587,713,917,10],[587,715,918,2],[587,723,918,10],[587,725,919,2],[587,734,919,11],[587,736,920,2],[587,746,920,12],[587,748,921,2],[587,755,921,9],[587,757,922,2],[587,766,922,11],[587,768,923,2],[587,776,923,10],[587,778,924,2],[587,787,924,11],[587,789,925,2],[587,795,925,8],[587,797,926,2],[587,805,926,10],[587,807,927,2],[587,813,927,8],[587,815,928,2],[587,824,928,11],[587,826,929,2],[587,836,929,12],[587,838,930,2],[587,846,930,10],[587,848,931,2],[587,855,931,9],[587,857,932,2],[587,866,932,11],[587,868,933,2],[587,878,933,12],[587,880,934,2],[587,887,934,9],[587,889,935,2],[587,896,935,9],[587,898,936,2],[587,904,936,8],[587,906,937,2],[587,912,937,8],[587,914,938,2],[587,920,938,8],[587,922,939,2],[587,930,939,10],[587,932,940,2],[587,938,940,8],[587,940,941,2],[587,946,941,8],[587,948,942,2],[587,958,942,12],[587,960,943,2],[587,970,943,12],[587,972,944,2],[587,980,944,10],[587,982,945,2],[587,989,945,9],[587,991,946,2],[587,1000,946,11],[587,1002,947,2],[587,1012,947,12],[587,1014,948,2],[587,1022,948,10],[587,1024,949,2],[587,1033,949,11],[587,1035,950,2],[587,1044,950,11],[587,1046,951,2],[587,1054,951,10],[587,1056,952,2],[587,1064,952,10],[587,1066,953,2],[587,1076,953,12],[587,1078,954,2],[587,1084,954,8],[587,1086,955,2],[587,1093,955,9],[587,1095,956,2],[587,1102,956,9],[587,1104,957,2],[587,1112,957,10],[587,1114,958,2],[587,1122,958,10],[587,1124,959,2],[587,1133,959,11],[587,1135,960,2],[587,1141,960,8],[587,1143,961,2],[587,1150,961,9],[587,1152,962,2],[587,1158,962,8],[587,1160,963,2],[587,1169,963,11],[587,1171,964,2],[587,1179,964,10],[587,1181,965,2],[587,1189,965,10],[587,1191,966,2],[587,1199,966,10],[587,1201,967,2],[587,1211,967,12],[587,1213,968,2],[587,1222,968,11],[587,1224,969,2],[587,1233,969,11],[587,1235,970,2],[587,1243,970,10],[587,1245,971,2],[587,1252,971,9],[587,1254,972,2],[587,1263,972,11],[587,1265,973,2],[587,1272,973,9],[587,1274,974,2],[587,1282,974,10],[587,1284,975,2],[587,1291,975,9],[587,1293,976,2],[587,1303,976,12],[587,1305,977,2],[587,1312,977,9],[587,1314,978,2],[587,1323,978,11],[587,1325,979,2],[587,1333,979,10],[587,1335,980,2],[587,1344,980,11],[587,1346,981,2],[587,1356,981,12],[587,1358,982,2],[587,1366,982,10],[587,1368,983,2],[587,1377,983,11],[587,1379,984,2],[587,1386,984,9],[587,1388,985,2],[587,1398,985,12],[587,1400,986,2],[587,1407,986,9],[587,1409,987,2],[587,1415,987,8],[587,1417,988,2],[587,1425,988,10],[587,1427,989,2],[587,1435,989,10],[587,1437,990,2],[587,1444,990,9],[587,1446,991,2],[587,1453,991,9],[587,1455,992,2],[587,1461,992,8],[587,1463,993,2],[587,1472,993,11],[587,1474,994,2],[587,1482,994,10],[587,1484,995,2],[587,1493,995,11],[587,1495,996,2],[587,1503,996,10],[587,1505,997,2],[587,1512,997,9],[587,1514,998,2],[587,1521,998,9],[587,1523,999,2],[587,1531,999,10],[587,1533,1000,2],[587,1542,1000,11],[587,1544,1001,2],[587,1550,1001,8],[587,1552,1002,2],[587,1561,1002,11],[587,1563,1003,2],[587,1569,1003,8],[587,1571,1004,2],[587,1580,1004,11],[587,1582,1005,2],[587,1590,1005,10],[587,1592,1006,2],[587,1600,1006,10],[587,1602,1007,2],[587,1611,1007,11],[587,1613,1008,2],[587,1621,1008,10],[587,1623,1009,2],[587,1632,1009,11],[587,1634,1010,2],[587,1643,1010,11],[587,1645,1011,2],[587,1653,1011,10],[587,1655,1012,2],[587,1662,1012,9],[587,1664,1013,2],[587,1672,1013,10],[587,1674,1014,2],[587,1682,1014,10],[587,1684,1015,2],[587,1691,1015,9],[587,1693,1016,2],[587,1700,1016,9],[587,1702,1017,2],[587,1710,1017,10],[587,1712,1018,2],[587,1721,1018,11],[587,1723,1019,2],[587,1733,1019,12],[587,1735,1020,2],[587,1743,1020,10],[587,1745,1021,2],[587,1755,1021,12],[587,1757,1022,2],[587,1764,1022,9],[587,1766,1023,2],[587,1775,1023,11],[587,1777,1024,2],[587,1785,1024,10],[587,1787,1025,2],[587,1794,1025,9],[587,1796,1026,2],[587,1805,1026,11],[587,1807,1027,2],[587,1814,1027,9],[587,1816,1028,2],[587,1826,1028,12],[587,1828,1029,2],[587,1837,1029,11],[587,1839,1030,2],[587,1846,1030,9],[587,1848,1031,2],[587,1857,1031,11],[587,1859,1032,2],[587,1869,1032,12],[587,1871,1033,2],[587,1878,1033,9],[587,1880,1034,2],[587,1888,1034,10],[587,1890,1035,2],[587,1897,1035,9],[587,1899,1036,2],[587,1909,1036,12],[587,1911,1037,2],[587,1921,1037,12],[587,1923,1038,2],[587,1933,1038,12],[587,1935,1039,2],[587,1945,1039,12],[587,1947,1040,2],[587,1953,1040,8],[587,1955,1041,2],[587,1963,1041,10],[587,1965,1042,2],[587,1972,1042,9],[587,1974,1043,2],[587,1982,1043,10],[587,1984,1044,2],[587,1994,1044,12],[587,1996,1045,2],[587,2005,1045,11],[587,2007,1046,2],[587,2017,1046,12],[587,2019,1047,2],[587,2029,1047,12],[587,2031,1048,2],[587,2040,1048,11],[587,2042,1049,2],[587,2050,1049,10],[587,2052,1050,2],[587,2061,1050,11],[587,2063,1051,2],[587,2069,1051,8],[587,2071,1052,2],[587,2079,1052,10],[587,2081,1053,2],[587,2089,1053,10],[587,2091,1054,2],[587,2099,1054,10],[587,2101,1055,2],[587,2109,1055,10],[587,2111,1056,2],[587,2121,1056,12],[587,2123,1057,2],[587,2131,1057,10],[587,2133,1058,2],[587,2141,1058,10],[587,2143,1059,2],[587,2152,1059,11],[587,2154,1060,2],[587,2163,1060,11],[587,2165,1061,2],[587,2175,1061,12],[587,2177,1062,2],[587,2185,1062,10],[587,2187,1063,2],[587,2195,1063,10],[587,2197,1064,2],[587,2205,1064,10],[587,2207,1065,2],[587,2217,1065,12],[587,2219,1066,2],[587,2228,1066,11],[587,2230,1067,2],[587,2236,1067,8],[587,2238,1068,2],[587,2247,1068,11],[587,2249,1069,2],[587,2259,1069,12],[587,2261,1070,2],[587,2269,1070,10],[587,2271,1071,2],[587,2280,1071,11],[587,2282,1072,2],[587,2292,1072,12],[587,2294,1073,2],[587,2303,1073,11],[587,2305,1074,2],[587,2314,1074,11],[587,2316,1075,2],[587,2322,1075,8],[587,2324,1076,2],[587,2333,1076,11],[587,2335,1077,2],[587,2344,1077,11],[587,2346,1078,2],[587,2356,1078,12],[587,2358,1079,2],[587,2364,1079,8],[587,2366,1080,2],[587,2375,1080,11],[587,2377,1081,2],[587,2387,1081,12],[587,2389,1082,2],[587,2397,1082,10],[587,2399,1083,2],[587,2409,1083,12],[587,2411,1084,2],[587,2421,1084,12],[587,2423,1085,2],[587,2430,1085,9],[587,2432,1086,2],[587,2442,1086,12],[587,2444,1087,2],[587,2452,1087,10],[587,2454,1088,2],[587,2464,1088,12],[587,2466,1089,2],[587,2473,1089,9],[587,2475,1090,2],[587,2482,1090,9],[587,2484,1091,2],[587,2491,1091,9],[587,2493,1092,2],[587,2500,1092,9],[587,2502,1093,2],[587,2509,1093,9],[587,2511,1094,2],[587,2517,1094,8],[587,2519,1095,2],[587,2526,1095,9],[587,2528,1096,2],[587,2538,1096,12],[587,2540,1097,2],[587,2546,1097,8],[587,2548,1098,2],[587,2558,1098,12],[587,2560,1099,2],[587,2567,1099,9],[587,2569,1100,2],[587,2578,1100,11],[587,2580,1101,2],[587,2587,1101,9],[587,2589,1102,2],[587,2596,1102,9],[587,2598,1103,2],[587,2605,1103,9],[587,2607,1104,2],[587,2613,1104,8],[587,2615,1105,2],[587,2621,1105,8],[587,2623,1106,2],[587,2632,1106,11],[587,2634,1107,2],[587,2643,1107,11],[587,2645,1108,2],[587,2651,1108,8],[587,2653,1109,2],[587,2661,1109,10],[587,2663,1110,2],[587,2672,1110,11],[587,2674,1111,2],[587,2682,1111,10],[587,2684,1112,2],[587,2691,1112,9],[587,2693,1113,2],[587,2700,1113,9],[587,2702,1114,2],[587,2712,1114,12],[587,2714,1115,2],[587,2723,1115,11],[587,2725,1116,2],[587,2734,1116,11],[587,2736,1117,2],[587,2746,1117,12],[587,2748,1118,2],[587,2758,1118,12],[587,2760,1119,2],[587,2767,1119,9],[587,2769,1120,2],[587,2775,1120,8],[587,2777,1121,2],[587,2784,1121,9],[587,2786,1122,2],[587,2795,1122,11],[587,2797,1123,2],[587,2807,1123,12],[587,2809,1124,2],[587,2818,1124,11],[587,2820,1125,2],[587,2830,1125,12],[587,2832,1126,2],[587,2842,1126,12],[587,2844,1127,2],[587,2851,1127,9],[587,2853,1128,2],[587,2861,1128,10],[587,2863,1129,2],[587,2872,1129,11],[587,2874,1130,2],[587,2883,1130,11],[587,2885,1131,2],[587,2892,1131,9],[587,2894,1132,2],[587,2902,1132,10],[587,2904,1133,2],[587,2913,1133,11],[587,2915,1134,2],[587,2923,1134,10],[587,2925,1135,2],[587,2932,1135,9],[587,2934,1136,2],[587,2943,1136,11],[587,2945,1137,2],[587,2955,1137,12],[587,2957,1138,2],[587,2967,1138,12],[587,2969,1139,2],[587,2975,1139,8],[587,2977,1140,2],[587,2987,1140,12],[587,2989,1141,2],[587,2998,1141,11],[587,3000,1142,2],[587,3010,1142,12],[587,3012,1143,2],[587,3019,1143,9],[587,3021,1144,2],[587,3029,1144,10],[587,3031,1145,2],[587,3038,1145,9],[587,3040,1146,2],[587,3048,1146,10],[587,3050,1147,2],[587,3058,1147,10],[587,3060,1148,2],[587,3070,1148,12],[587,3072,1149,2],[587,3082,1149,12],[587,3084,1150,2],[587,3093,1150,11],[587,3095,1151,2],[587,3105,1151,12],[587,3107,1152,2],[587,3113,1152,8],[587,3115,1153,2],[587,3122,1153,9],[587,3124,1154,2],[587,3131,1154,9],[587,3133,1155,2],[587,3142,1155,11],[587,3144,1156,2],[587,3152,1156,10],[587,3154,1157,2],[587,3164,1157,12],[587,3166,1158,2],[587,3175,1158,11],[587,3177,1159,2],[587,3185,1159,10],[587,3187,1160,2],[587,3196,1160,11],[587,3198,1161,2],[587,3208,1161,12],[587,3210,1162,2],[587,3219,1162,11],[587,3221,1163,2],[587,3229,1163,10],[587,3231,1164,2],[587,3239,1164,10],[587,3241,1165,2],[587,3249,1165,10],[587,3251,1166,2],[587,3260,1166,11],[587,3262,1167,2],[587,3271,1167,11],[587,3273,1168,2],[587,3281,1168,10],[587,3283,1169,2],[587,3290,1169,9],[587,3292,1170,2],[587,3301,1170,11],[587,3303,1171,2],[587,3313,1171,12],[587,3315,1172,2],[587,3321,1172,8],[587,3323,1173,2],[587,3332,1173,11],[587,3334,1174,2],[587,3341,1174,9],[587,3343,1175,2],[587,3349,1175,8],[587,3351,1176,2],[587,3358,1176,9],[587,3360,1177,2],[587,3368,1177,10],[587,3370,1178,2],[587,3378,1178,10],[587,3380,1179,2],[587,3387,1179,9],[587,3389,1180,2],[587,3396,1180,9],[587,3398,1181,2],[587,3407,1181,11],[587,3409,1182,2],[587,3416,1182,9],[587,3418,1183,2],[587,3427,1183,11],[587,3429,1184,2],[587,3439,1184,12],[587,3441,1185,2],[587,3447,1185,8],[587,3449,1186,2],[587,3456,1186,9],[587,3458,1187,2],[587,3467,1187,11],[587,3469,1188,2],[587,3477,1188,10],[587,3479,1189,2],[587,3488,1189,11],[587,3490,1190,2],[587,3500,1190,12],[587,3502,1191,2],[587,3510,1191,10],[587,3512,1192,2],[587,3521,1192,11],[587,3523,1193,2],[587,3529,1193,8],[587,3531,1194,2],[587,3539,1194,10],[587,3541,1195,2],[587,3550,1195,11],[587,3552,1196,2],[587,3561,1196,11],[587,3563,1197,2],[587,3570,1197,9],[587,3572,1198,2],[587,3579,1198,9],[587,3581,1199,2],[587,3589,1199,10],[587,3591,1200,2],[587,3597,1200,8],[587,3599,1201,2],[587,3609,1201,12],[587,3611,1202,2],[587,3617,1202,8],[587,3619,1203,2],[587,3626,1203,9],[587,3628,1204,2],[587,3636,1204,10],[587,3638,1205,2],[587,3645,1205,9],[587,3647,1206,2],[587,3654,1206,9],[587,3656,1207,2],[587,3664,1207,10],[587,3666,1208,2],[587,3673,1208,9],[587,3675,1209,2],[587,3685,1209,12],[587,3687,1210,2],[587,3695,1210,10],[587,3697,1211,2],[587,3705,1211,10],[587,3707,1212,2],[587,3716,1212,11],[587,3718,1213,2],[587,3727,1213,11],[587,3729,1214,2],[587,3738,1214,11],[587,3740,1215,2],[587,3750,1215,12],[587,3752,1216,2],[587,3762,1216,12],[587,3764,1217,2],[587,3774,1217,12],[587,3776,1218,2],[587,3786,1218,12],[587,3788,1219,2],[587,3795,1219,9],[587,3797,1220,2],[587,3805,1220,10],[587,3807,1221,2],[587,3817,1221,12],[587,3819,1222,2],[587,3826,1222,9],[587,3828,1223,2],[587,3835,1223,9],[587,3837,1224,2],[587,3845,1224,10],[587,3847,1225,2],[587,3854,1225,9],[587,3856,1226,2],[587,3865,1226,11],[587,3867,1227,2],[587,3873,1227,8],[587,3875,1228,2],[587,3882,1228,9],[587,3884,1229,2],[587,3892,1229,10],[587,3894,1230,2],[587,3900,1230,8],[587,3902,1231,2],[587,3911,1231,11],[587,3913,1232,2],[587,3921,1232,10],[587,3923,1233,2],[587,3931,1233,10],[587,3933,1234,2],[587,3943,1234,12],[587,3945,1235,2],[587,3953,1235,10],[587,3955,1236,2],[587,3964,1236,11],[587,3966,1237,2],[587,3974,1237,10],[587,3976,1238,2],[587,3983,1238,9],[587,3985,1239,2],[587,3994,1239,11],[587,3996,1240,2],[587,4005,1240,11],[587,4007,1241,2],[587,4016,1241,11],[587,4018,1242,2],[587,4024,1242,8],[587,4026,1243,2],[587,4034,1243,10],[587,4036,1244,2],[587,4045,1244,11],[587,4047,1245,2],[587,4053,1245,8],[587,4055,1246,2],[587,4064,1246,11],[587,4066,1247,2],[587,4072,1247,8],[587,4074,1248,2],[587,4082,1248,10],[587,4084,1249,2],[587,4094,1249,12],[587,4096,1250,2],[587,4103,1250,9],[587,4105,1251,2],[587,4112,1251,9],[587,4114,1252,2],[587,4123,1252,11],[587,4125,1253,2],[587,4131,1253,8],[587,4133,1254,2],[587,4143,1254,12],[587,4145,1255,2],[587,4152,1255,9],[587,4154,1256,2],[587,4161,1256,9],[587,4163,1257,2],[587,4169,1257,8],[587,4171,1258,2],[587,4180,1258,11],[587,4182,1259,2],[587,4189,1259,9],[587,4191,1260,2],[587,4198,1260,9],[587,4200,1261,2],[587,4209,1261,11],[587,4211,1262,2],[587,4219,1262,10],[587,4221,1263,2],[587,4228,1263,9],[587,4230,1264,2],[587,4237,1264,9],[587,4239,1265,2],[587,4246,1265,9],[587,4248,1266,2],[587,4256,1266,10],[587,4258,1267,2],[587,4264,1267,8],[587,4266,1268,2],[587,4273,1268,9],[587,4275,1269,2],[587,4284,1269,11],[587,4286,1270,2],[587,4292,1270,8],[587,4294,1271,2],[587,4302,1271,10],[587,4304,1272,2],[587,4313,1272,11],[587,4315,1273,2],[587,4321,1273,8],[587,4323,1274,2],[587,4330,1274,9],[587,4332,1275,2],[587,4338,1275,8],[587,4340,1276,2],[587,4348,1276,10],[587,4350,1277,2],[587,4359,1277,11],[587,4361,1278,2],[587,4369,1278,10],[587,4371,1279,2],[587,4380,1279,11],[587,4382,1280,2],[587,4388,1280,8],[587,4390,1281,2],[587,4399,1281,11],[587,4401,1282,2],[587,4409,1282,10],[587,4411,1283,2],[587,4417,1283,8],[587,4419,1284,2],[587,4429,1284,12],[587,4431,1285,2],[587,4437,1285,8],[587,4439,1286,2],[587,4448,1286,11],[587,4450,1287,2],[587,4456,1287,8],[587,4458,1288,2],[587,4464,1288,8],[587,4466,1289,2],[587,4475,1289,11],[587,4477,1290,2],[587,4487,1290,12],[587,4489,1291,2],[587,4495,1291,8],[587,4497,1292,2],[587,4503,1292,8],[587,4505,1293,2],[587,4512,1293,9],[587,4514,1294,2],[587,4524,1294,12],[587,4526,1295,2],[587,4535,1295,11],[587,4537,1296,2],[587,4546,1296,11],[587,4548,1297,2],[587,4554,1297,8],[587,4556,1298,2],[587,4563,1298,9],[587,4565,1299,2],[587,4573,1299,10],[587,4575,1300,2],[587,4581,1300,8],[587,4583,1301,2],[587,4593,1301,12],[587,4595,1302,2],[587,4601,1302,8],[587,4603,1303,2],[587,4610,1303,9],[587,4612,1304,2],[587,4620,1304,10],[587,4622,1305,2],[587,4629,1305,9],[587,4631,1306,2],[587,4640,1306,11],[587,4642,1307,2],[587,4651,1307,11],[587,4653,1308,2],[587,4662,1308,11],[587,4664,1309,2],[587,4672,1309,10],[587,4674,1310,2],[587,4684,1310,12],[587,4686,1311,2],[587,4693,1311,9],[587,4695,1312,2],[587,4705,1312,12],[587,4707,1313,2],[587,4717,1313,12],[587,4719,1314,2],[587,4727,1314,10],[587,4729,1315,2],[587,4737,1315,10],[587,4739,1316,2],[587,4748,1316,11],[587,4750,1317,2],[587,4758,1317,10],[587,4760,1318,2],[587,4768,1318,10],[587,4770,1319,2],[587,4778,1319,10],[587,4780,1320,2],[587,4788,1320,10],[587,4790,1321,2],[587,4799,1321,11],[587,4801,1322,2],[587,4809,1322,10],[587,4811,1323,2],[587,4821,1323,12],[587,4823,1324,2],[587,4833,1324,12],[587,4835,1325,2],[587,4844,1325,11],[587,4846,1326,2],[587,4852,1326,8],[587,4854,1327,2],[587,4862,1327,10],[587,4864,1328,2],[587,4873,1328,11],[587,4875,1329,2],[587,4881,1329,8],[587,4883,1330,2],[587,4890,1330,9],[587,4892,1331,2],[587,4900,1331,10],[587,4902,1332,2],[587,4909,1332,9],[587,4911,1333,2],[587,4920,1333,11],[587,4922,1334,2],[587,4928,1334,8],[587,4930,1335,2],[587,4940,1335,12],[587,4942,1336,2],[587,4949,1336,9],[587,4951,1337,2],[587,4957,1337,8],[587,4959,1338,2],[587,4969,1338,12],[587,4971,1339,2],[587,4979,1339,10],[587,4981,1340,2],[587,4987,1340,8],[587,4989,1341,2],[587,4995,1341,8],[587,4997,1342,2],[587,5006,1342,11],[587,5008,1343,2],[587,5016,1343,10],[587,5018,1344,2],[587,5028,1344,12],[587,5030,1345,2],[587,5038,1345,10],[587,5040,1346,2],[587,5046,1346,8],[587,5048,1347,2],[587,5057,1347,11],[587,5059,1348,2],[587,5066,1348,9],[587,5068,1349,2],[587,5074,1349,8],[587,5076,1350,2],[587,5083,1350,9],[587,5085,1351,2],[587,5092,1351,9],[587,5094,1352,2],[587,5103,1352,11],[587,5105,1353,2],[587,5111,1353,8],[587,5113,1354,2],[587,5119,1354,8],[587,5121,1355,2],[587,5131,1355,12],[587,5133,1356,2],[587,5140,1356,9],[587,5142,1357,2],[587,5149,1357,9],[587,5151,1358,2],[587,5160,1358,11],[587,5162,1359,2],[587,5171,1359,11],[587,5173,1360,2],[587,5181,1360,10],[587,5183,1361,2],[587,5189,1361,8],[587,5191,1362,2],[587,5198,1362,9],[587,5200,1363,2],[587,5208,1363,10],[587,5210,1364,2],[587,5219,1364,11],[587,5221,1365,2],[587,5228,1365,9],[587,5230,1366,2],[587,5238,1366,10],[587,5240,1367,2],[587,5246,1367,8],[587,5248,1368,2],[587,5254,1368,8],[587,5256,1369,2],[587,5264,1369,10],[587,5266,1370,2],[587,5273,1370,9],[587,5275,1371,2],[587,5284,1371,11],[587,5286,1372,2],[587,5295,1372,11],[587,5297,1373,2],[587,5306,1373,11],[587,5308,1374,2],[587,5314,1374,8],[587,5316,1375,2],[587,5324,1375,10],[587,5326,1376,2],[587,5333,1376,9],[587,5335,1377,2],[587,5341,1377,8],[587,5343,1378,2],[587,5349,1378,8],[587,5351,1379,2],[587,5359,1379,10],[587,5361,1380,2],[587,5369,1380,10],[587,5371,1381,2],[587,5381,1381,12],[587,5383,1382,2],[587,5391,1382,10],[587,5393,1383,2],[587,5401,1383,10],[587,5403,1384,2],[587,5409,1384,8],[587,5411,1385,2],[587,5417,1385,8],[587,5419,1386,2],[587,5429,1386,12],[587,5431,1387,2],[587,5439,1387,10],[587,5441,1388,2],[587,5447,1388,8],[587,5449,1389,2],[587,5458,1389,11],[587,5460,1390,2],[587,5466,1390,8],[587,5468,1391,2],[587,5475,1391,9],[587,5477,1392,2],[587,5484,1392,9],[587,5486,1393,2],[587,5493,1393,9],[587,5495,1394,2],[587,5503,1394,10],[587,5505,1395,2],[587,5512,1395,9],[587,5514,1396,2],[587,5522,1396,10],[587,5524,1397,2],[587,5533,1397,11],[587,5535,1398,2],[587,5545,1398,12],[587,5547,1399,2],[587,5555,1399,10],[587,5557,1400,2],[587,5566,1400,11],[587,5568,1401,2],[587,5574,1401,8],[587,5576,1402,2],[587,5584,1402,10],[587,5586,1403,2],[587,5594,1403,10],[587,5596,1404,2],[587,5602,1404,8],[587,5604,1405,2],[587,5613,1405,11],[587,5615,1406,2],[587,5624,1406,11],[587,5626,1407,2],[587,5635,1407,11],[587,5637,1408,2],[587,5645,1408,10],[587,5647,1409,2],[587,5657,1409,12],[587,5659,1410,2],[587,5666,1410,9],[587,5668,1411,2],[587,5676,1411,10],[587,5678,1412,2],[587,5686,1412,10],[587,5688,1413,2],[587,5695,1413,9],[587,5697,1414,2],[587,5707,1414,12],[587,5709,1415,2],[587,5715,1415,8],[587,5717,1416,2],[587,5726,1416,11],[587,5728,1417,2],[587,5735,1417,9],[587,5737,1418,2],[587,5746,1418,11],[587,5748,1419,2],[587,5755,1419,9],[587,5757,1420,2],[587,5766,1420,11],[587,5768,1421,2],[587,5776,1421,10],[587,5778,1422,2],[587,5786,1422,10],[587,5788,1423,2],[587,5796,1423,10],[587,5798,1424,2],[587,5808,1424,12],[587,5810,1425,2],[587,5817,1425,9],[587,5819,1426,2],[587,5827,1426,10],[587,5829,1427,2],[587,5837,1427,10],[587,5839,1428,2],[587,5846,1428,9],[587,5848,1429,2],[587,5854,1429,8],[587,5856,1430,2],[587,5866,1430,12],[587,5868,1431,2],[587,5877,1431,11],[587,5879,1432,2],[587,5889,1432,12],[587,5891,1433,2],[587,5900,1433,11],[587,5902,1434,2],[587,5909,1434,9],[587,5911,1435,2],[587,5920,1435,11],[587,5922,1436,2],[587,5930,1436,10],[587,5932,1437,2],[587,5940,1437,10],[587,5942,1438,2],[587,5950,1438,10],[587,5952,1439,2],[587,5962,1439,12],[587,5964,1440,2],[587,5972,1440,10],[587,5974,1441,2],[587,5983,1441,11],[587,5985,1442,2],[587,5995,1442,12],[587,5997,1443,2],[587,6005,1443,10],[587,6007,1444,2],[587,6017,1444,12],[587,6019,1445,2],[587,6026,1445,9],[587,6028,1446,2],[587,6034,1446,8],[587,6036,1447,2],[587,6042,1447,8],[587,6044,1448,2],[587,6050,1448,8],[587,6052,1449,2],[587,6062,1449,12],[587,6064,1450,2],[587,6072,1450,10],[587,6074,1451,2],[587,6082,1451,10],[587,6084,1452,2],[587,6091,1452,9],[587,6093,1453,2],[587,6102,1453,11],[587,6104,1454,2],[587,6110,1454,8],[587,6112,1455,2],[587,6122,1455,12],[587,6124,1456,2],[587,6134,1456,12],[587,6136,1457,2],[587,6146,1457,12],[587,6148,1458,2],[587,6157,1458,11],[587,6159,1459,2],[587,6168,1459,11],[587,6170,1460,2],[587,6176,1460,8],[587,6178,1461,2],[587,6187,1461,11],[587,6189,1462,2],[587,6195,1462,8],[587,6197,1463,2],[587,6207,1463,12],[587,6209,1464,2],[587,6216,1464,9],[587,6218,1465,2],[587,6225,1465,9],[587,6227,1466,2],[587,6236,1466,11],[587,6238,1467,2],[587,6246,1467,10],[587,6248,1468,2],[587,6257,1468,11],[587,6259,1469,2],[587,6267,1469,10],[587,6269,1470,2],[587,6276,1470,9],[587,6278,1471,2],[587,6285,1471,9],[587,6287,1472,2],[587,6296,1472,11],[587,6298,1473,2],[587,6304,1473,8],[587,6306,1474,2],[587,6312,1474,8],[587,6314,1475,2],[587,6322,1475,10],[587,6324,1476,2],[587,6331,1476,9],[587,6333,1477,2],[587,6340,1477,9],[587,6342,1478,2],[587,6352,1478,12],[587,6354,1479,2],[587,6364,1479,12],[587,6366,1480,2],[587,6373,1480,9],[587,6375,1481,2],[587,6381,1481,8],[587,6383,1482,2],[587,6392,1482,11],[587,6394,1483,2],[587,6401,1483,9],[587,6403,1484,2],[587,6410,1484,9],[587,6412,1485,2],[587,6421,1485,11],[587,6423,1486,2],[587,6432,1486,11],[587,6434,1487,2],[587,6440,1487,8],[587,6442,1488,2],[587,6452,1488,12],[587,6454,1489,2],[587,6463,1489,11],[587,6465,1490,2],[587,6474,1490,11],[587,6476,1491,2],[587,6483,1491,9],[587,6485,1492,2],[587,6491,1492,8],[587,6493,1493,2],[587,6500,1493,9],[587,6502,1494,2],[587,6510,1494,10],[587,6512,1495,2],[587,6521,1495,11],[587,6523,1496,2],[587,6530,1496,9],[587,6532,1497,2],[587,6540,1497,10],[587,6542,1498,2],[587,6550,1498,10],[587,6552,1499,2],[587,6561,1499,11],[587,6563,1500,2],[587,6572,1500,11],[587,6574,1501,2],[587,6584,1501,12],[587,6586,1502,2],[587,6594,1502,10],[587,6596,1503,2],[587,6605,1503,11],[587,6607,1504,2],[587,6614,1504,9],[587,6616,1505,2],[587,6625,1505,11],[587,6627,1506,2],[587,6635,1506,10],[587,6637,1507,2],[587,6646,1507,11],[587,6648,1508,2],[587,6657,1508,11],[587,6659,1509,2],[587,6667,1509,10],[587,6669,1510,2],[587,6679,1510,12],[587,6681,1511,2],[587,6690,1511,11],[587,6692,1512,2],[587,6702,1512,12],[587,6704,1513,2],[587,6711,1513,9],[587,6713,1514,2],[587,6721,1514,10],[587,6723,1515,2],[587,6732,1515,11],[587,6734,1516,2],[587,6742,1516,10],[587,6744,1517,2],[587,6753,1517,11],[587,6755,1518,2],[587,6762,1518,9],[587,6764,1519,2],[587,6770,1519,8],[587,6772,1520,2],[587,6778,1520,8],[587,6780,1521,2],[587,6790,1521,12],[587,6792,1522,2],[587,6800,1522,10],[587,6802,1523,2],[587,6809,1523,9],[587,6811,1524,2],[587,6819,1524,10],[587,6821,1525,2],[587,6827,1525,8],[587,6829,1526,2],[587,6838,1526,11],[587,6840,1527,2],[587,6850,1527,12],[587,6852,1528,2],[587,6861,1528,11],[587,6863,1529,2],[587,6873,1529,12],[587,6875,1530,2],[587,6881,1530,8],[587,6883,1531,2],[587,6891,1531,10],[587,6893,1532,2],[587,6903,1532,12],[587,6905,1533,2],[587,6913,1533,10],[587,6915,1534,2],[587,6923,1534,10],[587,6925,1535,2],[587,6935,1535,12],[587,6937,1536,2],[587,6947,1536,12],[587,6949,1537,2],[587,6958,1537,11],[587,6960,1538,2],[587,6969,1538,11],[587,6971,1539,2],[587,6981,1539,12],[587,6983,1540,2],[587,6992,1540,11],[587,6994,1541,2],[587,7002,1541,10],[587,7004,1542,2],[587,7013,1542,11],[587,7015,1543,2],[587,7025,1543,12],[587,7027,1544,2],[587,7037,1544,12],[587,7039,1545,2],[587,7048,1545,11],[587,7050,1546,2],[587,7057,1546,9],[587,7059,1547,2],[587,7068,1547,11],[587,7070,1548,2],[587,7079,1548,11],[587,7081,1549,2],[587,7090,1549,11],[587,7092,1550,2],[587,7101,1550,11],[587,7103,1551,2],[587,7112,1551,11],[587,7114,1552,2],[587,7124,1552,12],[587,7126,1553,2],[587,7135,1553,11],[587,7137,1554,2],[587,7144,1554,9],[587,7146,1555,2],[587,7154,1555,10],[587,7156,1556,2],[587,7163,1556,9],[587,7165,1557,2],[587,7172,1557,9],[587,7174,1558,2],[587,7182,1558,10],[587,7184,1559,2],[587,7190,1559,8],[587,7192,1560,2],[587,7199,1560,9],[587,7201,1561,2],[587,7211,1561,12],[587,7213,1562,2],[587,7221,1562,10],[587,7223,1563,2],[587,7231,1563,10],[587,7233,1564,2],[587,7243,1564,12],[587,7245,1565,2],[587,7254,1565,11],[587,7256,1566,2],[587,7263,1566,9],[587,7265,1567,2],[587,7272,1567,9],[587,7274,1568,2],[587,7280,1568,8],[587,7282,1569,2],[587,7290,1569,10],[587,7292,1570,2],[587,7299,1570,9],[587,7301,1571,2],[587,7311,1571,12],[587,7313,1572,2],[587,7322,1572,11],[587,7324,1573,2],[587,7332,1573,10],[587,7334,1574,2],[587,7342,1574,10],[587,7344,1575,2],[587,7352,1575,10],[587,7354,1576,2],[587,7362,1576,10],[587,7364,1577,2],[587,7371,1577,9],[587,7373,1578,2],[587,7383,1578,12],[587,7385,1579,2],[587,7394,1579,11],[587,7396,1580,2],[587,7405,1580,11],[587,7407,1581,2],[587,7416,1581,11],[587,7418,1582,2],[587,7426,1582,10],[587,7428,1583,2],[587,7438,1583,12],[587,7440,1584,2],[587,7449,1584,11],[587,7451,1585,2],[587,7459,1585,10],[587,7461,1586,2],[587,7470,1586,11],[587,7472,1587,2],[587,7480,1587,10],[587,7482,1588,2],[587,7490,1588,10],[587,7492,1589,2],[587,7502,1589,12],[587,7504,1590,2],[587,7512,1590,10],[587,7514,1591,2],[587,7522,1591,10],[587,7524,1592,2],[587,7532,1592,10],[587,7534,1593,2],[587,7542,1593,10],[587,7544,1594,2],[587,7552,1594,10],[587,7554,1595,2],[587,7563,1595,11],[587,7565,1596,2],[587,7574,1596,11],[587,7576,1597,2],[587,7584,1597,10],[587,7586,1598,2],[587,7596,1598,12],[587,7598,1599,2],[587,7608,1599,12],[587,7610,1600,2],[587,7620,1600,12],[587,7622,1601,2],[587,7630,1601,10],[587,7632,1602,2],[587,7642,1602,12],[587,7644,1603,2],[587,7653,1603,11],[587,7655,1604,2],[587,7664,1604,11],[587,7666,1605,2],[587,7675,1605,11],[587,7677,1606,2],[587,7685,1606,10],[587,7687,1607,2],[587,7695,1607,10],[587,7697,1608,2],[587,7704,1608,9],[587,7706,1609,2],[587,7714,1609,10],[587,7716,1610,2],[587,7722,1610,8],[587,7724,1611,2],[587,7731,1611,9],[587,7733,1612,2],[587,7740,1612,9],[587,7742,1613,2],[587,7749,1613,9],[587,7751,1614,2],[587,7758,1614,9],[587,7760,1615,2],[587,7770,1615,12],[587,7772,1616,2],[587,7778,1616,8],[587,7780,1617,2],[587,7788,1617,10],[587,7790,1618,2],[587,7797,1618,9],[587,7799,1619,2],[587,7806,1619,9],[587,7808,1620,2],[587,7814,1620,8],[587,7816,1621,2],[587,7823,1621,9],[587,7825,1622,2],[587,7832,1622,9],[587,7834,1623,2],[587,7840,1623,8],[587,7842,1624,2],[587,7850,1624,10],[587,7852,1625,2],[587,7860,1625,10],[587,7862,1626,2],[587,7869,1626,9],[587,7871,1627,2],[587,7877,1627,8],[587,7879,1628,2],[587,7888,1628,11],[587,7890,1629,2],[587,7899,1629,11],[587,7901,1630,2],[587,7908,1630,9],[587,7910,1631,2],[587,7916,1631,8],[587,7918,1632,2],[587,7927,1632,11],[587,7929,1633,2],[587,7937,1633,10],[587,7939,1634,2],[587,7948,1634,11],[587,7950,1635,2],[587,7957,1635,9],[587,7959,1636,2],[587,7968,1636,11],[587,7970,1637,2],[587,7979,1637,11],[587,7981,1638,2],[587,7988,1638,9],[587,7990,1639,2],[587,8000,1639,12],[587,8002,1640,2],[587,8009,1640,9],[587,8011,1641,2],[587,8019,1641,10],[587,8021,1642,2],[587,8029,1642,10],[587,8031,1643,2],[587,8040,1643,11],[587,8042,1644,2],[587,8050,1644,10],[587,8052,1645,2],[587,8060,1645,10],[587,8062,1646,2],[587,8072,1646,12],[587,8074,1647,2],[587,8083,1647,11],[587,8085,1648,2],[587,8093,1648,10],[587,8095,1649,2],[587,8103,1649,10],[587,8105,1650,2],[587,8112,1650,9],[587,8114,1651,2],[587,8121,1651,9],[587,8123,1652,2],[587,8131,1652,10],[587,8133,1653,2],[587,8140,1653,9],[587,8142,1654,2],[587,8151,1654,11],[587,8153,1655,2],[587,8162,1655,11],[587,8164,1656,2],[587,8171,1656,9],[587,8173,1657,2],[587,8181,1657,10],[587,8183,1658,2],[587,8191,1658,10],[587,8193,1659,2],[587,8203,1659,12],[587,8205,1660,2],[587,8213,1660,10],[587,8215,1661,2],[587,8223,1661,10],[587,8225,1662,2],[587,8234,1662,11],[587,8236,1663,2],[587,8244,1663,10],[587,8246,1664,2],[587,8254,1664,10],[587,8256,1665,2],[587,8264,1665,10],[587,8266,1666,2],[587,8272,1666,8],[587,8274,1667,2],[587,8281,1667,9],[587,8283,1668,2],[587,8289,1668,8],[587,8291,1669,2],[587,8300,1669,11],[587,8302,1670,2],[587,8308,1670,8],[587,8310,1671,2],[587,8317,1671,9],[587,8319,1672,2],[587,8325,1672,8],[587,8327,1673,2],[587,8333,1673,8],[587,8335,1674,2],[587,8342,1674,9],[587,8344,1675,2],[587,8351,1675,9],[587,8353,1676,2],[587,8360,1676,9],[587,8362,1677,2],[587,8369,1677,9],[587,8371,1678,2],[587,8378,1678,9],[587,8380,1679,2],[587,8387,1679,9],[587,8389,1680,2],[587,8398,1680,11],[587,8400,1681,2],[587,8406,1681,8],[587,8408,1682,2],[587,8415,1682,9],[587,8417,1683,2],[587,8427,1683,12],[587,8429,1684,2],[587,8436,1684,9],[587,8438,1685,2],[587,8447,1685,11],[587,8449,1686,2],[587,8459,1686,12],[587,8461,1687,2],[587,8470,1687,11],[587,8472,1688,2],[587,8482,1688,12],[587,8484,1689,2],[587,8490,1689,8],[587,8492,1690,2],[587,8500,1690,10],[587,8502,1691,2],[587,8509,1691,9],[587,8511,1692,2],[587,8518,1692,9],[587,8520,1693,2],[587,8527,1693,9],[587,8529,1694,2],[587,8538,1694,11],[587,8540,1695,2],[587,8550,1695,12],[587,8552,1696,2],[587,8559,1696,9],[587,8561,1697,2],[587,8567,1697,8],[587,8569,1698,2],[587,8577,1698,10],[587,8579,1699,2],[587,8586,1699,9],[587,8588,1700,2],[587,8595,1700,9],[587,8597,1701,2],[587,8605,1701,10],[587,8607,1702,2],[587,8613,1702,8],[587,8615,1703,2],[587,8622,1703,9],[587,8624,1704,2],[587,8634,1704,12],[587,8636,1705,2],[587,8644,1705,10],[587,8646,1706,2],[587,8655,1706,11],[587,8657,1707,2],[587,8666,1707,11],[587,8668,1708,2],[587,8675,1708,9],[587,8677,1709,2],[587,8687,1709,12],[587,8689,1710,2],[587,8699,1710,12],[587,8701,1711,2],[587,8710,1711,11],[587,8712,1712,2],[587,8718,1712,8],[587,8720,1713,2],[587,8728,1713,10],[587,8730,1714,2],[587,8736,1714,8],[587,8738,1715,2],[587,8745,1715,9],[587,8747,1716,2],[587,8754,1716,9],[587,8756,1717,2],[587,8763,1717,9],[587,8765,1718,2],[587,8775,1718,12],[587,8777,1719,2],[587,8785,1719,10],[587,8787,1720,2],[587,8794,1720,9],[587,8796,1721,2],[587,8805,1721,11],[587,8807,1722,2],[587,8815,1722,10],[587,8817,1723,2],[587,8824,1723,9],[587,8826,1724,2],[587,8836,1724,12],[587,8838,1725,2],[587,8848,1725,12],[587,8850,1726,2],[587,8860,1726,12],[587,8862,1727,2],[587,8871,1727,11],[587,8873,1728,2],[587,8883,1728,12],[587,8885,1729,2],[587,8894,1729,11],[587,8896,1730,2],[587,8905,1730,11],[587,8907,1731,2],[587,8917,1731,12],[587,8919,1732,2],[587,8926,1732,9],[587,8928,1733,2],[587,8936,1733,10],[587,8938,1734,2],[587,8948,1734,12],[587,8950,1735,2],[587,8960,1735,12],[587,8962,1736,2],[587,8972,1736,12],[587,8974,1737,2],[587,8982,1737,10],[587,8984,1738,2],[587,8992,1738,10],[587,8994,1739,2],[587,9003,1739,11],[587,9005,1740,2],[587,9014,1740,11],[587,9016,1741,2],[587,9024,1741,10],[587,9026,1742,2],[587,9032,1742,8],[587,9034,1743,2],[587,9041,1743,9],[587,9043,1744,2],[587,9051,1744,10],[587,9053,1745,2],[587,9059,1745,8],[587,9061,1746,2],[587,9070,1746,11],[587,9072,1747,2],[587,9082,1747,12],[587,9084,1748,2],[587,9094,1748,12],[587,9096,1749,2],[587,9104,1749,10],[587,9106,1750,2],[587,9114,1750,10],[587,9116,1751,2],[587,9126,1751,12],[587,9128,1752,2],[587,9137,1752,11],[587,9139,1753,2],[587,9149,1753,12],[587,9151,1754,2],[587,9160,1754,11],[587,9162,1755,2],[587,9171,1755,11],[587,9173,1756,2],[587,9180,1756,9],[587,9182,1757,2],[587,9188,1757,8],[587,9190,1758,2],[587,9199,1758,11],[587,9201,1759,2],[587,9209,1759,10],[587,9211,1760,2],[587,9220,1760,11],[587,9222,1761,2],[587,9229,1761,9],[587,9231,1762,2],[587,9241,1762,12],[587,9243,1763,2],[587,9250,1763,9],[587,9252,1764,2],[587,9261,1764,11],[587,9263,1765,2],[587,9271,1765,10],[587,9273,1766,2],[587,9279,1766,8],[587,9281,1767,2],[587,9289,1767,10],[587,9291,1768,2],[587,9299,1768,10],[587,9301,1769,2],[587,9307,1769,8],[587,9309,1770,2],[587,9315,1770,8],[587,9317,1771,2],[587,9327,1771,12],[587,9329,1772,2],[587,9339,1772,12],[587,9341,1773,2],[587,9348,1773,9],[587,9350,1774,2],[587,9357,1774,9],[587,9359,1775,2],[587,9367,1775,10],[587,9369,1776,2],[587,9378,1776,11],[587,9380,1777,2],[587,9390,1777,12],[587,9392,1778,2],[587,9402,1778,12],[587,9404,1779,2],[587,9411,1779,9],[587,9413,1780,2],[587,9423,1780,12],[587,9425,1781,2],[587,9432,1781,9],[587,9434,1782,2],[587,9441,1782,9],[587,9443,1783,2],[587,9450,1783,9],[587,9452,1784,2],[587,9462,1784,12],[587,9464,1785,2],[587,9470,1785,8],[587,9472,1786,2],[587,9481,1786,11],[587,9483,1787,2],[587,9492,1787,11],[587,9494,1788,2],[587,9500,1788,8],[587,9502,1789,2],[587,9509,1789,9],[587,9511,1790,2],[587,9518,1790,9],[587,9520,1791,2],[587,9526,1791,8],[587,9528,1792,2],[587,9534,1792,8],[587,9536,1793,2],[587,9545,1793,11],[587,9547,1794,2],[587,9553,1794,8],[587,9555,1795,2],[587,9565,1795,12],[587,9567,1796,2],[587,9577,1796,12],[587,9579,1797,2],[587,9588,1797,11],[587,9590,1798,2],[587,9599,1798,11],[587,9601,1799,2],[587,9609,1799,10],[587,9611,1800,2],[587,9619,1800,10],[587,9621,1801,2],[587,9630,1801,11],[587,9632,1802,2],[587,9639,1802,9],[587,9641,1803,2],[587,9651,1803,12],[587,9653,1804,2],[587,9661,1804,10],[587,9663,1805,2],[587,9672,1805,11],[587,9674,1806,2],[587,9683,1806,11],[587,9685,1807,2],[587,9693,1807,10],[587,9695,1808,2],[587,9704,1808,11],[587,9706,1809,2],[587,9716,1809,12],[587,9718,1810,2],[587,9728,1810,12],[587,9730,1811,2],[587,9737,1811,9],[587,9739,1812,2],[587,9746,1812,9],[587,9748,1813,2],[587,9755,1813,9],[587,9757,1814,2],[587,9767,1814,12],[587,9769,1815,2],[587,9778,1815,11],[587,9780,1816,2],[587,9788,1816,10],[587,9790,1817,2],[587,9799,1817,11],[587,9801,1818,2],[587,9808,1818,9],[587,9810,1819,2],[587,9818,1819,10],[587,9820,1820,2],[587,9829,1820,11],[587,9831,1821,2],[587,9840,1821,11],[587,9842,1822,2],[587,9850,1822,10],[587,9852,1823,2],[587,9858,1823,8],[587,9860,1824,2],[587,9869,1824,11],[587,9871,1825,2],[587,9878,1825,9],[587,9880,1826,2],[587,9888,1826,10],[587,9890,1827,2],[587,9897,1827,9],[587,9899,1828,2],[587,9905,1828,8],[587,9907,1829,2],[587,9916,1829,11],[587,9918,1830,2],[587,9928,1830,12],[587,9930,1831,2],[587,9937,1831,9],[587,9939,1832,2],[587,9948,1832,11],[587,9950,1833,2],[587,9958,1833,10],[587,9960,1834,2],[587,9970,1834,12],[587,9972,1835,2],[587,9979,1835,9],[587,9981,1836,2],[587,9988,1836,9],[587,9990,1837,2],[587,9998,1837,10],[587,10000,1838,2],[587,10007,1838,9],[587,10009,1839,2],[587,10017,1839,10],[587,10019,1840,2],[587,10027,1840,10],[587,10029,1841,2],[587,10037,1841,10],[587,10039,1842,2],[587,10045,1842,8],[587,10047,1843,2],[587,10054,1843,9],[587,10056,1844,2],[587,10062,1844,8],[587,10064,1845,2],[587,10073,1845,11],[587,10075,1846,2],[587,10083,1846,10],[587,10085,1847,2],[587,10093,1847,10],[587,10095,1848,2],[587,10104,1848,11],[587,10106,1849,2],[587,10115,1849,11],[587,10117,1850,2],[587,10126,1850,11],[587,10128,1851,2],[587,10135,1851,9],[587,10137,1852,2],[587,10147,1852,12],[587,10149,1853,2],[587,10157,1853,10],[587,10159,1854,2],[587,10165,1854,8],[587,10167,1855,2],[587,10177,1855,12],[587,10179,1856,2],[587,10187,1856,10],[587,10189,1857,2],[587,10199,1857,12],[587,10201,1858,2],[587,10207,1858,8],[587,10209,1859,2],[587,10215,1859,8],[587,10217,1860,2],[587,10224,1860,9],[587,10226,1861,2],[587,10232,1861,8],[587,10234,1862,2],[587,10242,1862,10],[587,10244,1863,2],[587,10250,1863,8],[587,10252,1864,2],[587,10259,1864,9],[587,10261,1865,2],[587,10270,1865,11],[587,10272,1866,2],[587,10279,1866,9],[587,10281,1867,2],[587,10287,1867,8],[587,10289,1868,2],[587,10295,1868,8],[587,10297,1869,2],[587,10304,1869,9],[587,10306,1870,2],[587,10312,1870,8],[587,10314,1871,2],[587,10320,1871,8],[587,10321,1872,1],[588,2,1874,0],[588,6,1874,6,"WORD_LIST_MAP"],[588,19,1874,19],[588,22,1874,22,"WORD_LIST"],[588,31,1874,31],[588,32,1874,32,"reduce"],[588,38,1874,38],[588,39,1874,39],[588,49,1874,40,"obj"],[588,52,1874,43],[588,54,1874,45,"val"],[588,57,1874,48],[588,59,1874,50,"idx"],[588,62,1874,53],[588,64,1874,58],[589,4,1875,2,"obj"],[589,7,1875,5],[589,8,1875,6,"val"],[589,11,1875,9],[589,12,1875,10],[589,15,1875,13,"idx"],[589,18,1875,16],[590,4,1876,2],[590,11,1876,9,"obj"],[590,14,1876,12],[591,2,1877,0],[591,3,1877,1],[591,5,1877,3],[591,6,1877,4],[591,7,1877,5],[591,8,1877,6],[592,2,1879,0,"exports"],[592,9,1879,7],[592,12,1879,10,"module"],[592,18,1879,16],[592,19,1879,17,"exports"],[592,26,1879,24],[592,29,1879,27],[593,4,1880,2,"MIN_ENTROPY_BITS"],[593,20,1880,18],[593,22,1880,2,"MIN_ENTROPY_BITS"],[593,38,1880,18],[594,4,1881,2,"generateIdentifier"],[594,22,1881,20],[594,24,1881,2,"generateIdentifier"],[594,42,1881,20],[595,4,1882,2,"encodeMnemonic"],[595,18,1882,16],[595,20,1882,2,"encodeMnemonic"],[595,34,1882,16],[596,4,1883,2,"validateMnemonic"],[596,20,1883,18],[596,22,1883,2,"validateMnemonic"],[596,38,1883,18],[597,4,1884,2,"splitSecret"],[597,15,1884,13],[597,17,1884,2,"splitSecret"],[597,28,1884,13],[598,4,1885,2,"combineMnemonics"],[598,20,1885,18],[598,22,1885,2,"combineMnemonics"],[598,38,1885,18],[599,4,1886,2,"crypt"],[599,9,1886,7],[599,11,1886,2,"crypt"],[599,16,1886,7],[600,4,1887,2,"bitsToBytes"],[600,15,1887,13],[600,17,1887,2,"bitsToBytes"],[600,28,1887,13],[601,4,1888,2,"WORD_LIST"],[601,13,1888,11],[601,15,1888,2,"WORD_LIST"],[602,2,1889,0],[602,3,1889,1],[603,0,1889,2],[603,3]],"functionMap":{"names":["<global>","String.prototype.slip39EncodeHex","Array.prototype.slip39DecodeHex","Array.prototype.slip39Generate","<anonymous>","Array.prototype.toHexString","Array.prototype.map.call$argument_1","Array.prototype.toByteArray","decodeBigInt","encodeBigInt","bitsToBytes","bitsToWords","randomBytes","roundFunction","crypt","range.forEach$argument_0","createDigest","splitSecret","Array.slip39Generate$argument_1","shares.forEach$argument_0","generateIdentifier","xor","getSalt","interpolate","Array.from$argument_1","v.forEach$argument_0","rs1024Polymod","data.forEach$argument_0","get_customization_string","rs1024CreateChecksum","rs1024VerifyChecksum","intFromIndices","indices.forEach$argument_0","intToIndices","mnemonicFromIndices","indices.map$argument_0","mnemonicToIndices","words.reduce$argument_0","recoverSecret","combineMnemonics","groups.forEach$argument_0","decodeMnemonics","mnemonics.forEach$argument_0","decodeMnemonic","validateMnemonic","groupPrefix","listsAreEqual","a.every$argument_0","encodeMnemonic","WORD_LIST.reduce$argument_0"],"mappings":"AAA;mCC6E;CDM;kCEE;CFO;iCGE,iBC,QD;CHM;8BKE;gBCE;KDE;CLE;8BOE;CPK;AQI;CRO;ASE;CTwB;AUE;CVI;AWE;CXI;AYK;CZG;AaK;Cba;AcE;gBCyB;GDK;CdE;AgBE;ChBQ;AiBE;8CCoB,kBD;sDCW;sCDC;mBEE;KFE;CjBW;AoBK;CpBQ;AqBE;0CHM,kBG;CrBC;AsBE;CtBO;AuBE;wCCE,eD;mBJU;KII;iBJM;GIE;ILI,OK;iBJG;cMa;KNU;GIC;CvBE;A0BE;eCO;GDQ;C1BG;A4BE;C5BI;A6BE;0DXI,OW;2CXG,mCW;C7BI;A8BE;C9BQ;A+BK;kBCG;GDE;C/BG;AiCK;gDfE;8DeC;CjCG;AkCE;6BCC;GDE;ClCE;AoCE;8BCQ;GDM;CpCE;AsCE;CtCgB;AuCM;iBC0B;GDmB;CvCc;AyCE;oBCW;GDyB;CzCgC;A2CK;C3C4E;A4CE;C5CO;A6CE;C7CsB;A8CE;iBCM;GDE;C9CC;AgDK;ChDoC;uCiD2jC;CjDG"}},"type":"js/module"}]}