{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":44,"column":0,"index":1451}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk="}},{"name":"react-native-device-info","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":66,"index":66}}],"key":"4aCQtJBLkFO2A/keaA6QLSjZuPs="}},{"name":"react-native-haptic-feedback","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":67},"end":{"line":2,"column":69,"index":136}}],"key":"pumWgRzTU9f0arL3RBGyU7hN7w0="}},{"name":"./environment","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":137},"end":{"line":3,"column":42,"index":179}}],"key":"2Do9crUUPY12BvahLvyDXFl4ivo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.triggerWarningHapticFeedback = exports.triggerSuccessHapticFeedback = exports.triggerSelectionHapticFeedback = exports.triggerErrorHapticFeedback = exports.default = exports.HapticFeedbackTypes = void 0;\n  var _reactNativeDeviceInfo = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"react-native-device-info\"));\n  var _reactNativeHapticFeedback = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"react-native-haptic-feedback\"));\n  // Define a const enum for HapticFeedbackTypes\n  var HapticFeedbackTypes = exports.HapticFeedbackTypes = /*#__PURE__*/function (HapticFeedbackTypes) {\n    HapticFeedbackTypes[\"ImpactLight\"] = \"impactLight\";\n    HapticFeedbackTypes[\"ImpactMedium\"] = \"impactMedium\";\n    HapticFeedbackTypes[\"ImpactHeavy\"] = \"impactHeavy\";\n    HapticFeedbackTypes[\"Selection\"] = \"selection\";\n    HapticFeedbackTypes[\"NotificationSuccess\"] = \"notificationSuccess\";\n    HapticFeedbackTypes[\"NotificationWarning\"] = \"notificationWarning\";\n    HapticFeedbackTypes[\"NotificationError\"] = \"notificationError\";\n    return HapticFeedbackTypes;\n  }({});\n  var triggerHapticFeedback = function triggerHapticFeedback(type) {\n    if (_$$_REQUIRE(_dependencyMap[3], \"./environment\").isDesktop) return;\n    _reactNativeDeviceInfo.default.getPowerState().then(function (state) {\n      if (!state.lowPowerMode) {\n        _reactNativeHapticFeedback.default.trigger(type, {\n          ignoreAndroidSystemSettings: false,\n          enableVibrateFallback: true\n        });\n      } else {\n        console.log('Haptic feedback not triggered due to low power mode.');\n      }\n    });\n  };\n  var triggerSuccessHapticFeedback = exports.triggerSuccessHapticFeedback = function triggerSuccessHapticFeedback() {\n    triggerHapticFeedback(HapticFeedbackTypes.NotificationSuccess);\n  };\n  var triggerWarningHapticFeedback = exports.triggerWarningHapticFeedback = function triggerWarningHapticFeedback() {\n    triggerHapticFeedback(HapticFeedbackTypes.NotificationWarning);\n  };\n  var triggerErrorHapticFeedback = exports.triggerErrorHapticFeedback = function triggerErrorHapticFeedback() {\n    triggerHapticFeedback(HapticFeedbackTypes.NotificationError);\n  };\n  var triggerSelectionHapticFeedback = exports.triggerSelectionHapticFeedback = function triggerSelectionHapticFeedback() {\n    triggerHapticFeedback(HapticFeedbackTypes.Selection);\n  };\n  var _default = exports.default = triggerHapticFeedback;\n});","lineCount":46,"map":[[7,2,1,0],[7,6,1,0,"_reactNativeDeviceInfo"],[7,28,1,0],[7,31,1,0,"_interopRequireDefault"],[7,53,1,0],[7,54,1,0,"_$$_REQUIRE"],[7,65,1,0],[7,66,1,0,"_dependencyMap"],[7,80,1,0],[8,2,2,0],[8,6,2,0,"_reactNativeHapticFeedback"],[8,32,2,0],[8,35,2,0,"_interopRequireDefault"],[8,57,2,0],[8,58,2,0,"_$$_REQUIRE"],[8,69,2,0],[8,70,2,0,"_dependencyMap"],[8,84,2,0],[9,2,5,0],[10,2,5,0],[10,6,6,18,"HapticFeedbackTypes"],[10,25,6,37],[10,28,6,37,"exports"],[10,35,6,37],[10,36,6,37,"HapticFeedbackTypes"],[10,55,6,37],[10,81,6,18,"HapticFeedbackTypes"],[10,100,6,37],[11,4,6,18,"HapticFeedbackTypes"],[11,23,6,37],[12,4,6,18,"HapticFeedbackTypes"],[12,23,6,37],[13,4,6,18,"HapticFeedbackTypes"],[13,23,6,37],[14,4,6,18,"HapticFeedbackTypes"],[14,23,6,37],[15,4,6,18,"HapticFeedbackTypes"],[15,23,6,37],[16,4,6,18,"HapticFeedbackTypes"],[16,23,6,37],[17,4,6,18,"HapticFeedbackTypes"],[17,23,6,37],[18,4,6,37],[18,11,6,18,"HapticFeedbackTypes"],[18,30,6,37],[19,2,6,37],[20,2,16,0],[20,6,16,6,"triggerHapticFeedback"],[20,27,16,27],[20,30,16,30],[20,39,16,6,"triggerHapticFeedback"],[20,60,16,27,"triggerHapticFeedback"],[20,61,16,31,"type"],[20,65,16,56],[20,67,16,61],[21,4,17,2],[21,8,17,6,"isDesktop"],[21,38,17,6],[21,39,17,6,"isDesktop"],[21,65,17,15],[21,67,17,17],[22,4,18,2,"DeviceInfo"],[22,34,18,12],[22,35,18,13,"getPowerState"],[22,48,18,26],[22,49,18,27],[22,50,18,28],[22,51,18,29,"then"],[22,55,18,33],[22,56,18,34],[22,66,18,35,"state"],[22,71,18,61],[22,73,18,66],[23,6,19,4],[23,10,19,8],[23,11,19,9,"state"],[23,16,19,14],[23,17,19,15,"lowPowerMode"],[23,29,19,27],[23,31,19,29],[24,8,20,6,"ReactNativeHapticFeedback"],[24,42,20,31],[24,43,20,32,"trigger"],[24,50,20,39],[24,51,20,40,"type"],[24,55,20,44],[24,57,20,46],[25,10,20,48,"ignoreAndroidSystemSettings"],[25,37,20,75],[25,39,20,77],[25,44,20,82],[26,10,20,84,"enableVibrateFallback"],[26,31,20,105],[26,33,20,107],[27,8,20,112],[27,9,20,113],[27,10,20,114],[28,6,21,4],[28,7,21,5],[28,13,21,11],[29,8,22,6,"console"],[29,15,22,13],[29,16,22,14,"log"],[29,19,22,17],[29,20,22,18],[29,74,22,72],[29,75,22,73],[30,6,23,4],[31,4,24,2],[31,5,24,3],[31,6,24,4],[32,2,25,0],[32,3,25,1],[33,2,27,7],[33,6,27,13,"triggerSuccessHapticFeedback"],[33,34,27,41],[33,37,27,41,"exports"],[33,44,27,41],[33,45,27,41,"triggerSuccessHapticFeedback"],[33,73,27,41],[33,76,27,44],[33,85,27,13,"triggerSuccessHapticFeedback"],[33,113,27,41,"triggerSuccessHapticFeedback"],[33,114,27,41],[33,116,27,50],[34,4,28,2,"triggerHapticFeedback"],[34,25,28,23],[34,26,28,24,"HapticFeedbackTypes"],[34,45,28,43],[34,46,28,44,"NotificationSuccess"],[34,65,28,63],[34,66,28,64],[35,2,29,0],[35,3,29,1],[36,2,31,7],[36,6,31,13,"triggerWarningHapticFeedback"],[36,34,31,41],[36,37,31,41,"exports"],[36,44,31,41],[36,45,31,41,"triggerWarningHapticFeedback"],[36,73,31,41],[36,76,31,44],[36,85,31,13,"triggerWarningHapticFeedback"],[36,113,31,41,"triggerWarningHapticFeedback"],[36,114,31,41],[36,116,31,50],[37,4,32,2,"triggerHapticFeedback"],[37,25,32,23],[37,26,32,24,"HapticFeedbackTypes"],[37,45,32,43],[37,46,32,44,"NotificationWarning"],[37,65,32,63],[37,66,32,64],[38,2,33,0],[38,3,33,1],[39,2,35,7],[39,6,35,13,"triggerErrorHapticFeedback"],[39,32,35,39],[39,35,35,39,"exports"],[39,42,35,39],[39,43,35,39,"triggerErrorHapticFeedback"],[39,69,35,39],[39,72,35,42],[39,81,35,13,"triggerErrorHapticFeedback"],[39,107,35,39,"triggerErrorHapticFeedback"],[39,108,35,39],[39,110,35,48],[40,4,36,2,"triggerHapticFeedback"],[40,25,36,23],[40,26,36,24,"HapticFeedbackTypes"],[40,45,36,43],[40,46,36,44,"NotificationError"],[40,63,36,61],[40,64,36,62],[41,2,37,0],[41,3,37,1],[42,2,39,7],[42,6,39,13,"triggerSelectionHapticFeedback"],[42,36,39,43],[42,39,39,43,"exports"],[42,46,39,43],[42,47,39,43,"triggerSelectionHapticFeedback"],[42,77,39,43],[42,80,39,46],[42,89,39,13,"triggerSelectionHapticFeedback"],[42,119,39,43,"triggerSelectionHapticFeedback"],[42,120,39,43],[42,122,39,52],[43,4,40,2,"triggerHapticFeedback"],[43,25,40,23],[43,26,40,24,"HapticFeedbackTypes"],[43,45,40,43],[43,46,40,44,"Selection"],[43,55,40,53],[43,56,40,54],[44,2,41,0],[44,3,41,1],[45,2,41,2],[45,6,41,2,"_default"],[45,14,41,2],[45,17,41,2,"exports"],[45,24,41,2],[45,25,41,2,"default"],[45,32,41,2],[45,35,43,15,"triggerHapticFeedback"],[45,56,43,36],[46,0,43,36],[46,3]],"functionMap":{"names":["<global>","triggerHapticFeedback","DeviceInfo.getPowerState.then$argument_0","triggerSuccessHapticFeedback","triggerWarningHapticFeedback","triggerErrorHapticFeedback","triggerSelectionHapticFeedback"],"mappings":"AAA;8BCe;kCCE;GDM;CDC;4CGE;CHE;4CIE;CJE;0CKE;CLE;8CME;CNE"}},"type":"js/module"}]}