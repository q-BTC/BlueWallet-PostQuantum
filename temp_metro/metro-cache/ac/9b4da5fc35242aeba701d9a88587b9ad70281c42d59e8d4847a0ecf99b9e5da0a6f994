{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":155,"column":34,"index":5570}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/defineProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":155,"column":34,"index":5570}}],"key":"X490zePjq+0IljAc8X0qcBg0iTo="}},{"name":"./binding","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":18,"index":1100},"end":{"line":21,"column":38,"index":1120}},{"start":{"line":21,"column":18,"index":1100},"end":{"line":21,"column":38,"index":1120}}],"key":"OjrA0Bxm3t0WtSdWtaEky0moQW8="}},{"name":"./assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":17,"index":1139},"end":{"line":22,"column":36,"index":1158}}],"key":"PRSWv9Op+8jXiipitv94+qE/Tqo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2023 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.defaultLoggerLevel = exports.defaultLogger = exports.fromBindingLoggerLevelToLogLevel = exports.fromBindingLoggerLevelToNumericLogLevel = exports.toBindingLoggerLevel = exports.toBindingLogger = exports.LOG_CATEGORIES = exports.NumericLogLevel = void 0;\n  /**\n   * Log levels used by Realm\n   */\n  var NumericLogLevel;\n  (function (NumericLogLevel) {\n    /**\n     * Same as 'Trace' but with even more output.\n     */\n    NumericLogLevel[NumericLogLevel[\"All\"] = 0] = \"All\";\n    /**\n     * A version of 'Debug' that allows for very high volume\n     * output.\n     */\n    NumericLogLevel[NumericLogLevel[\"Trace\"] = 1] = \"Trace\";\n    /**\n     * Reveal information that can aid debugging, no longer paying\n     * attention to efficiency.\n     */\n    NumericLogLevel[NumericLogLevel[\"Debug\"] = 2] = \"Debug\";\n    /**\n     * Same as 'Info', but prioritize completeness over minimalism.\n     */\n    NumericLogLevel[NumericLogLevel[\"Detail\"] = 3] = \"Detail\";\n    /**\n     * Reveal information about what is going on, but in a\n     * minimalistic fashion to avoid general overhead from logging\n     * and to keep volume down.\n     */\n    NumericLogLevel[NumericLogLevel[\"Info\"] = 4] = \"Info\";\n    /**\n     * Be silent unless when there is an error or a warning.\n     */\n    NumericLogLevel[NumericLogLevel[\"Warn\"] = 5] = \"Warn\";\n    /**\n     * Be silent unless when there is an error.\n     */\n    NumericLogLevel[NumericLogLevel[\"Error\"] = 6] = \"Error\";\n    /**\n     * Be silent unless when an error is fatal.\n     */\n    NumericLogLevel[NumericLogLevel[\"Fatal\"] = 7] = \"Fatal\";\n    /**\n     * Be silent.\n     */\n    NumericLogLevel[NumericLogLevel[\"Off\"] = 8] = \"Off\";\n  })(NumericLogLevel = exports.NumericLogLevel || (exports.NumericLogLevel = {}));\n  exports.LOG_CATEGORIES = [\"Realm\", \"Realm.Storage\", \"Realm.Storage.Transaction\", \"Realm.Storage.Query\", \"Realm.Storage.Object\", \"Realm.Storage.Notification\", \"Realm.Sync\", \"Realm.Sync.Client\", \"Realm.Sync.Client.Session\", \"Realm.Sync.Client.Changeset\", \"Realm.Sync.Client.Network\", \"Realm.Sync.Client.Reset\", \"Realm.Sync.Server\", \"Realm.App\", \"Realm.SDK\"];\n  /** @internal */\n  function toBindingLogger(logger) {\n    if (isLoggerWithLevel(logger)) {\n      return _$$_REQUIRE(_dependencyMap[2], \"./binding\").binding.Helpers.makeLogger(function (_, level, message) {\n        logger(fromBindingLoggerLevelToLogLevel(level), message);\n      });\n    } else {\n      return _$$_REQUIRE(_dependencyMap[2], \"./binding\").binding.Helpers.makeLogger(function (category, level, message) {\n        logger({\n          category: category,\n          level: fromBindingLoggerLevelToLogLevel(level),\n          message: message\n        });\n      });\n    }\n  }\n  exports.toBindingLogger = toBindingLogger;\n  function isLoggerWithLevel(logger) {\n    return logger.length === 2;\n  }\n  /** @internal */\n  function toBindingLoggerLevel(arg) {\n    var bindingLogLevel = inverseTranslationTable[arg];\n    (0, _$$_REQUIRE(_dependencyMap[3], \"./assert\").assert)(bindingLogLevel !== undefined, `Unexpected log level: ${arg}`);\n    return bindingLogLevel;\n  }\n  exports.toBindingLoggerLevel = toBindingLoggerLevel;\n  /** @internal */\n  function fromBindingLoggerLevelToNumericLogLevel(arg) {\n    // For now, these map 1-to-1\n    return arg;\n  }\n  exports.fromBindingLoggerLevelToNumericLogLevel = fromBindingLoggerLevelToNumericLogLevel;\n  var translationTable = _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, 0 /* binding.LoggerLevel.All */, \"all\"), 1 /* binding.LoggerLevel.Trace */, \"trace\"), 2 /* binding.LoggerLevel.Debug */, \"debug\"), 3 /* binding.LoggerLevel.Detail */, \"detail\"), 4 /* binding.LoggerLevel.Info */, \"info\"), 5 /* binding.LoggerLevel.Warn */, \"warn\"), 6 /* binding.LoggerLevel.Error */, \"error\"), 7 /* binding.LoggerLevel.Fatal */, \"fatal\"), 8 /* binding.LoggerLevel.Off */, \"off\");\n  var inverseTranslationTable = Object.fromEntries(Object.entries(translationTable).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      val = _ref2[1];\n    return [val, Number(key)];\n  }));\n  /** @internal */\n  function fromBindingLoggerLevelToLogLevel(arg) {\n    return translationTable[arg];\n  }\n  exports.fromBindingLoggerLevelToLogLevel = fromBindingLoggerLevelToLogLevel;\n  /** @internal */\n  var defaultLogger = function defaultLogger(_ref3) {\n    var category = _ref3.category,\n      level = _ref3.level,\n      message = _ref3.message;\n    var formattedLogMessage = `[${category} - ${level}] ${message}`;\n    /* eslint-disable no-console */\n    if (level === \"error\" || level === \"fatal\") {\n      console.error(formattedLogMessage);\n    } else if (level === \"warn\") {\n      console.warn(formattedLogMessage);\n    } else {\n      console.log(formattedLogMessage);\n    }\n    /* eslint-enable no-console */\n  };\n  exports.defaultLogger = defaultLogger;\n  /** @internal */\n  exports.defaultLoggerLevel = \"warn\";\n});","lineCount":138,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,18,0],[21,6,18,0,"_slicedToArray"],[21,20,18,0],[21,23,18,0,"_$$_REQUIRE"],[21,34,18,0],[21,35,18,0,"_dependencyMap"],[21,49,18,0],[22,2,18,0],[22,6,18,0,"_defineProperty"],[22,21,18,0],[22,24,18,0,"_$$_REQUIRE"],[22,35,18,0],[22,36,18,0,"_dependencyMap"],[22,50,18,0],[23,2,19,0,"Object"],[23,8,19,6],[23,9,19,7,"defineProperty"],[23,23,19,21],[23,24,19,22,"exports"],[23,31,19,29],[23,33,19,31],[23,45,19,43],[23,47,19,45],[24,4,19,47,"value"],[24,9,19,52],[24,11,19,54],[25,2,19,59],[25,3,19,60],[25,4,19,61],[26,2,20,0,"exports"],[26,9,20,7],[26,10,20,8,"defaultLoggerLevel"],[26,28,20,26],[26,31,20,29,"exports"],[26,38,20,36],[26,39,20,37,"defaultLogger"],[26,52,20,50],[26,55,20,53,"exports"],[26,62,20,60],[26,63,20,61,"fromBindingLoggerLevelToLogLevel"],[26,95,20,93],[26,98,20,96,"exports"],[26,105,20,103],[26,106,20,104,"fromBindingLoggerLevelToNumericLogLevel"],[26,145,20,143],[26,148,20,146,"exports"],[26,155,20,153],[26,156,20,154,"toBindingLoggerLevel"],[26,176,20,174],[26,179,20,177,"exports"],[26,186,20,184],[26,187,20,185,"toBindingLogger"],[26,202,20,200],[26,205,20,203,"exports"],[26,212,20,210],[26,213,20,211,"LOG_CATEGORIES"],[26,227,20,225],[26,230,20,228,"exports"],[26,237,20,235],[26,238,20,236,"NumericLogLevel"],[26,253,20,251],[26,256,20,254],[26,261,20,259],[26,262,20,260],[27,2,23,0],[28,0,24,0],[29,0,25,0],[30,2,26,0],[30,6,26,4,"NumericLogLevel"],[30,21,26,19],[31,2,27,0],[31,3,27,1],[31,13,27,11,"NumericLogLevel"],[31,28,27,26],[31,30,27,28],[32,4,28,4],[33,0,29,0],[34,0,30,0],[35,4,31,4,"NumericLogLevel"],[35,19,31,19],[35,20,31,20,"NumericLogLevel"],[35,35,31,35],[35,36,31,36],[35,41,31,41],[35,42,31,42],[35,45,31,45],[35,46,31,46],[35,47,31,47],[35,50,31,50],[35,55,31,55],[36,4,32,4],[37,0,33,0],[38,0,34,0],[39,0,35,0],[40,4,36,4,"NumericLogLevel"],[40,19,36,19],[40,20,36,20,"NumericLogLevel"],[40,35,36,35],[40,36,36,36],[40,43,36,43],[40,44,36,44],[40,47,36,47],[40,48,36,48],[40,49,36,49],[40,52,36,52],[40,59,36,59],[41,4,37,4],[42,0,38,0],[43,0,39,0],[44,0,40,0],[45,4,41,4,"NumericLogLevel"],[45,19,41,19],[45,20,41,20,"NumericLogLevel"],[45,35,41,35],[45,36,41,36],[45,43,41,43],[45,44,41,44],[45,47,41,47],[45,48,41,48],[45,49,41,49],[45,52,41,52],[45,59,41,59],[46,4,42,4],[47,0,43,0],[48,0,44,0],[49,4,45,4,"NumericLogLevel"],[49,19,45,19],[49,20,45,20,"NumericLogLevel"],[49,35,45,35],[49,36,45,36],[49,44,45,44],[49,45,45,45],[49,48,45,48],[49,49,45,49],[49,50,45,50],[49,53,45,53],[49,61,45,61],[50,4,46,4],[51,0,47,0],[52,0,48,0],[53,0,49,0],[54,0,50,0],[55,4,51,4,"NumericLogLevel"],[55,19,51,19],[55,20,51,20,"NumericLogLevel"],[55,35,51,35],[55,36,51,36],[55,42,51,42],[55,43,51,43],[55,46,51,46],[55,47,51,47],[55,48,51,48],[55,51,51,51],[55,57,51,57],[56,4,52,4],[57,0,53,0],[58,0,54,0],[59,4,55,4,"NumericLogLevel"],[59,19,55,19],[59,20,55,20,"NumericLogLevel"],[59,35,55,35],[59,36,55,36],[59,42,55,42],[59,43,55,43],[59,46,55,46],[59,47,55,47],[59,48,55,48],[59,51,55,51],[59,57,55,57],[60,4,56,4],[61,0,57,0],[62,0,58,0],[63,4,59,4,"NumericLogLevel"],[63,19,59,19],[63,20,59,20,"NumericLogLevel"],[63,35,59,35],[63,36,59,36],[63,43,59,43],[63,44,59,44],[63,47,59,47],[63,48,59,48],[63,49,59,49],[63,52,59,52],[63,59,59,59],[64,4,60,4],[65,0,61,0],[66,0,62,0],[67,4,63,4,"NumericLogLevel"],[67,19,63,19],[67,20,63,20,"NumericLogLevel"],[67,35,63,35],[67,36,63,36],[67,43,63,43],[67,44,63,44],[67,47,63,47],[67,48,63,48],[67,49,63,49],[67,52,63,52],[67,59,63,59],[68,4,64,4],[69,0,65,0],[70,0,66,0],[71,4,67,4,"NumericLogLevel"],[71,19,67,19],[71,20,67,20,"NumericLogLevel"],[71,35,67,35],[71,36,67,36],[71,41,67,41],[71,42,67,42],[71,45,67,45],[71,46,67,46],[71,47,67,47],[71,50,67,50],[71,55,67,55],[72,2,68,0],[72,3,68,1],[72,5,68,3,"NumericLogLevel"],[72,20,68,18],[72,23,68,21,"exports"],[72,30,68,28],[72,31,68,29,"NumericLogLevel"],[72,46,68,44],[72,51,68,49,"exports"],[72,58,68,56],[72,59,68,57,"NumericLogLevel"],[72,74,68,72],[72,77,68,75],[72,78,68,76],[72,79,68,77],[72,80,68,78],[72,81,68,79],[73,2,69,0,"exports"],[73,9,69,7],[73,10,69,8,"LOG_CATEGORIES"],[73,24,69,22],[73,27,69,25],[73,28,70,4],[73,35,70,11],[73,37,71,4],[73,52,71,19],[73,54,72,4],[73,81,72,31],[73,83,73,4],[73,104,73,25],[73,106,74,4],[73,128,74,26],[73,130,75,4],[73,158,75,32],[73,160,76,4],[73,172,76,16],[73,174,77,4],[73,193,77,23],[73,195,78,4],[73,222,78,31],[73,224,79,4],[73,253,79,33],[73,255,80,4],[73,282,80,31],[73,284,81,4],[73,309,81,29],[73,311,82,4],[73,330,82,23],[73,332,83,4],[73,343,83,15],[73,345,84,4],[73,356,84,15],[73,357,85,1],[74,2,86,0],[75,2,87,0],[75,11,87,9,"toBindingLogger"],[75,26,87,24,"toBindingLogger"],[75,27,87,25,"logger"],[75,33,87,31],[75,35,87,33],[76,4,88,4],[76,8,88,8,"isLoggerWithLevel"],[76,25,88,25],[76,26,88,26,"logger"],[76,32,88,32],[76,33,88,33],[76,35,88,35],[77,6,89,8],[77,13,89,15,"_$$_REQUIRE"],[77,24,89,15],[77,25,89,15,"_dependencyMap"],[77,39,89,15],[77,57,89,25,"binding"],[77,64,89,32],[77,65,89,33,"Helpers"],[77,72,89,40],[77,73,89,41,"makeLogger"],[77,83,89,51],[77,84,89,52],[77,94,89,53,"_"],[77,95,89,54],[77,97,89,56,"level"],[77,102,89,61],[77,104,89,63,"message"],[77,111,89,70],[77,113,89,75],[78,8,90,12,"logger"],[78,14,90,18],[78,15,90,19,"fromBindingLoggerLevelToLogLevel"],[78,47,90,51],[78,48,90,52,"level"],[78,53,90,57],[78,54,90,58],[78,56,90,60,"message"],[78,63,90,67],[78,64,90,68],[79,6,91,8],[79,7,91,9],[79,8,91,10],[80,4,92,4],[80,5,92,5],[80,11,93,9],[81,6,94,8],[81,13,94,15,"_$$_REQUIRE"],[81,24,94,15],[81,25,94,15,"_dependencyMap"],[81,39,94,15],[81,57,94,25,"binding"],[81,64,94,32],[81,65,94,33,"Helpers"],[81,72,94,40],[81,73,94,41,"makeLogger"],[81,83,94,51],[81,84,94,52],[81,94,94,53,"category"],[81,102,94,61],[81,104,94,63,"level"],[81,109,94,68],[81,111,94,70,"message"],[81,118,94,77],[81,120,94,82],[82,8,95,12,"logger"],[82,14,95,18],[82,15,95,19],[83,10,96,16,"category"],[83,18,96,24],[83,20,96,26,"category"],[83,28,96,34],[84,10,97,16,"level"],[84,15,97,21],[84,17,97,23,"fromBindingLoggerLevelToLogLevel"],[84,49,97,55],[84,50,97,56,"level"],[84,55,97,61],[84,56,97,62],[85,10,98,16,"message"],[85,17,98,23],[85,19,98,16,"message"],[86,8,99,12],[86,9,99,13],[86,10,99,14],[87,6,100,8],[87,7,100,9],[87,8,100,10],[88,4,101,4],[89,2,102,0],[90,2,103,0,"exports"],[90,9,103,7],[90,10,103,8,"toBindingLogger"],[90,25,103,23],[90,28,103,26,"toBindingLogger"],[90,43,103,41],[91,2,104,0],[91,11,104,9,"isLoggerWithLevel"],[91,28,104,26,"isLoggerWithLevel"],[91,29,104,27,"logger"],[91,35,104,33],[91,37,104,35],[92,4,105,4],[92,11,105,11,"logger"],[92,17,105,17],[92,18,105,18,"length"],[92,24,105,24],[92,29,105,29],[92,30,105,30],[93,2,106,0],[94,2,107,0],[95,2,108,0],[95,11,108,9,"toBindingLoggerLevel"],[95,31,108,29,"toBindingLoggerLevel"],[95,32,108,30,"arg"],[95,35,108,33],[95,37,108,35],[96,4,109,4],[96,8,109,10,"bindingLogLevel"],[96,23,109,25],[96,26,109,28,"inverseTranslationTable"],[96,49,109,51],[96,50,109,52,"arg"],[96,53,109,55],[96,54,109,56],[97,4,110,4],[97,5,110,5],[97,6,110,6],[97,8,110,8,"_$$_REQUIRE"],[97,19,110,8],[97,20,110,8,"_dependencyMap"],[97,34,110,8],[97,51,110,17,"assert"],[97,57,110,23],[97,59,110,25,"bindingLogLevel"],[97,74,110,40],[97,79,110,45,"undefined"],[97,88,110,54],[97,90,110,56],[97,115,110,81,"arg"],[97,118,110,84],[97,120,110,86],[97,121,110,87],[98,4,111,4],[98,11,111,11,"bindingLogLevel"],[98,26,111,26],[99,2,112,0],[100,2,113,0,"exports"],[100,9,113,7],[100,10,113,8,"toBindingLoggerLevel"],[100,30,113,28],[100,33,113,31,"toBindingLoggerLevel"],[100,53,113,51],[101,2,114,0],[102,2,115,0],[102,11,115,9,"fromBindingLoggerLevelToNumericLogLevel"],[102,50,115,48,"fromBindingLoggerLevelToNumericLogLevel"],[102,51,115,49,"arg"],[102,54,115,52],[102,56,115,54],[103,4,116,4],[104,4,117,4],[104,11,117,11,"arg"],[104,14,117,14],[105,2,118,0],[106,2,119,0,"exports"],[106,9,119,7],[106,10,119,8,"fromBindingLoggerLevelToNumericLogLevel"],[106,49,119,47],[106,52,119,50,"fromBindingLoggerLevelToNumericLogLevel"],[106,91,119,89],[107,2,120,0],[107,6,120,6,"translationTable"],[107,22,120,22],[107,25,120,22,"_defineProperty"],[107,40,120,22],[107,41,120,22,"_defineProperty"],[107,56,120,22],[107,57,120,22,"_defineProperty"],[107,72,120,22],[107,73,120,22,"_defineProperty"],[107,88,120,22],[107,89,120,22,"_defineProperty"],[107,104,120,22],[107,105,120,22,"_defineProperty"],[107,120,120,22],[107,121,120,22,"_defineProperty"],[107,136,120,22],[107,137,120,22,"_defineProperty"],[107,152,120,22],[107,153,120,22,"_defineProperty"],[107,168,120,22],[107,173,121,5],[107,174,121,6],[107,175,121,7],[107,206,121,39],[107,211,121,44],[107,214,122,5],[107,215,122,6],[107,216,122,7],[107,249,122,41],[107,256,122,48],[107,259,123,5],[107,260,123,6],[107,261,123,7],[107,294,123,41],[107,301,123,48],[107,304,124,5],[107,305,124,6],[107,306,124,7],[107,340,124,42],[107,348,124,50],[107,351,125,5],[107,352,125,6],[107,353,125,7],[107,385,125,40],[107,391,125,46],[107,394,126,5],[107,395,126,6],[107,396,126,7],[107,428,126,40],[107,434,126,46],[107,437,127,5],[107,438,127,6],[107,439,127,7],[107,472,127,41],[107,479,127,48],[107,482,128,5],[107,483,128,6],[107,484,128,7],[107,517,128,41],[107,524,128,48],[107,527,129,5],[107,528,129,6],[107,529,129,7],[107,560,129,39],[107,565,129,44],[107,566,130,1],[108,2,131,0],[108,6,131,6,"inverseTranslationTable"],[108,29,131,29],[108,32,131,32,"Object"],[108,38,131,38],[108,39,131,39,"fromEntries"],[108,50,131,50],[108,51,131,51,"Object"],[108,57,131,57],[108,58,131,58,"entries"],[108,65,131,65],[108,66,131,66,"translationTable"],[108,82,131,82],[108,83,131,83],[108,84,131,84,"map"],[108,87,131,87],[108,88,131,88],[108,98,131,88,"_ref"],[108,102,131,88],[109,4,131,88],[109,8,131,88,"_ref2"],[109,13,131,88],[109,16,131,88,"_slicedToArray"],[109,30,131,88],[109,31,131,88,"_ref"],[109,35,131,88],[110,6,131,90,"key"],[110,9,131,93],[110,12,131,93,"_ref2"],[110,17,131,93],[111,6,131,95,"val"],[111,9,131,98],[111,12,131,98,"_ref2"],[111,17,131,98],[112,4,131,98],[112,11,131,104],[112,12,131,105,"val"],[112,15,131,108],[112,17,131,110,"Number"],[112,23,131,116],[112,24,131,117,"key"],[112,27,131,120],[112,28,131,121],[112,29,131,122],[113,2,131,122],[113,4,131,123],[113,5,131,124],[114,2,132,0],[115,2,133,0],[115,11,133,9,"fromBindingLoggerLevelToLogLevel"],[115,43,133,41,"fromBindingLoggerLevelToLogLevel"],[115,44,133,42,"arg"],[115,47,133,45],[115,49,133,47],[116,4,134,4],[116,11,134,11,"translationTable"],[116,27,134,27],[116,28,134,28,"arg"],[116,31,134,31],[116,32,134,32],[117,2,135,0],[118,2,136,0,"exports"],[118,9,136,7],[118,10,136,8,"fromBindingLoggerLevelToLogLevel"],[118,42,136,40],[118,45,136,43,"fromBindingLoggerLevelToLogLevel"],[118,77,136,75],[119,2,137,0],[120,2,138,0],[120,6,138,6,"defaultLogger"],[120,19,138,19],[120,22,138,22],[120,31,138,6,"defaultLogger"],[120,44,138,19,"defaultLogger"],[120,45,138,19,"_ref3"],[120,50,138,19],[120,52,138,62],[121,4,138,62],[121,8,138,34,"category"],[121,16,138,42],[121,19,138,42,"_ref3"],[121,24,138,42],[121,25,138,34,"category"],[121,33,138,42],[122,6,138,44,"level"],[122,11,138,49],[122,14,138,49,"_ref3"],[122,19,138,49],[122,20,138,44,"level"],[122,25,138,49],[123,6,138,51,"message"],[123,13,138,58],[123,16,138,58,"_ref3"],[123,21,138,58],[123,22,138,51,"message"],[123,29,138,58],[124,4,139,4],[124,8,139,10,"formattedLogMessage"],[124,27,139,29],[124,30,139,32],[124,34,139,36,"category"],[124,42,139,44],[124,48,139,50,"level"],[124,53,139,55],[124,58,139,60,"message"],[124,65,139,67],[124,67,139,69],[125,4,140,4],[126,4,141,4],[126,8,141,8,"level"],[126,13,141,13],[126,18,141,18],[126,25,141,25],[126,29,141,29,"level"],[126,34,141,34],[126,39,141,39],[126,46,141,46],[126,48,141,48],[127,6,142,8,"console"],[127,13,142,15],[127,14,142,16,"error"],[127,19,142,21],[127,20,142,22,"formattedLogMessage"],[127,39,142,41],[127,40,142,42],[128,4,143,4],[128,5,143,5],[128,11,144,9],[128,15,144,13,"level"],[128,20,144,18],[128,25,144,23],[128,31,144,29],[128,33,144,31],[129,6,145,8,"console"],[129,13,145,15],[129,14,145,16,"warn"],[129,18,145,20],[129,19,145,21,"formattedLogMessage"],[129,38,145,40],[129,39,145,41],[130,4,146,4],[130,5,146,5],[130,11,147,9],[131,6,148,8,"console"],[131,13,148,15],[131,14,148,16,"log"],[131,17,148,19],[131,18,148,20,"formattedLogMessage"],[131,37,148,39],[131,38,148,40],[132,4,149,4],[133,4,150,4],[134,2,151,0],[134,3,151,1],[135,2,152,0,"exports"],[135,9,152,7],[135,10,152,8,"defaultLogger"],[135,23,152,21],[135,26,152,24,"defaultLogger"],[135,39,152,37],[136,2,153,0],[137,2,154,0,"exports"],[137,9,154,7],[137,10,154,8,"defaultLoggerLevel"],[137,28,154,26],[137,31,154,29],[137,37,154,35],[138,0,154,36],[138,3]],"functionMap":{"names":["<global>","<anonymous>","toBindingLogger","binding_1.binding.Helpers.makeLogger$argument_0","isLoggerWithLevel","toBindingLoggerLevel","fromBindingLoggerLevelToNumericLogLevel","Object.entries.map$argument_0","fromBindingLoggerLevelToLogLevel","defaultLogger"],"mappings":"AAA;CC0B;CDyC;AEmB;oDCE;SDE;oDCG;SDM;CFE;AIE;CJE;AKE;CLI;AMG;CNG;wFOa,kCP;AQE;CRE;sBSG;CTa"}},"type":"js/module"}]}