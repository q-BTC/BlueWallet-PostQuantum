{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":13,"index":1052},"end":{"line":27,"column":29,"index":1068}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY="}},{"name":"localized-strings","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":24,"index":1142},"end":{"line":31,"column":52,"index":1170}}],"key":"Q9IJaS89D2FKQiGqK2PYcwQpavY="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  /**\n   * Simple module to localize the React interface using the same syntax\n   * used in the ReactNativeLocalization module\n   * (https://github.com/stefalda/ReactNativeLocalization)\n   *\n   * Originally developed by Stefano Falda (stefano.falda@gmail.com)\n   *\n   * It uses a call to the Navigator/Browser object to get the current interface language,\n   * then display the correct language strings or the default language (the first\n   * one if a match is not found).\n   *\n   * This library has been refactored to use the newly created localized-strings package so to\n   * unify the code and make it easier to mantain\n   *\n   * How to use:\n   * Check the instructions at:\n   * https://github.com/stefalda/react-localization\n   */\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  var _react2 = _interopRequireDefault(_react);\n  var _localizedStrings2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"localized-strings\"));\n  function _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n      default: obj\n    };\n  }\n  var placeholderRegex = /(\\{[\\d|\\w]+\\})/;\n\n  /**\n   * Format the passed string replacing the numbered or tokenized placeholders\n   * eg. 1: I'd like some {0} and {1}, or just {0}\n   * eg. 2: I'd like some {bread} and {butter}, or just {bread}\n   * Use example:\n   * eg. 1: strings.formatString(strings.question, strings.bread, strings.butter)\n   * eg. 2: strings.formatString(strings.question, { bread: strings.bread, butter: strings.butter }\n   *\n   * THIS METHOD OVERRIDE the one of the parent class by adding support for JSX code\n  */\n  _localizedStrings2.default.prototype.formatString = function (str) {\n    for (var _len = arguments.length, valuesForPlaceholders = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      valuesForPlaceholders[_key - 1] = arguments[_key];\n    }\n    var hasObject = false;\n    var res = (str || '').split(placeholderRegex).filter(function (textPart) {\n      return !!textPart;\n    }).map(function (textPart, index) {\n      if (textPart.match(placeholderRegex)) {\n        var matchedKey = textPart.slice(1, -1);\n        var valueForPlaceholder = valuesForPlaceholders[matchedKey];\n\n        // If no value found, check if working with an object instead\n        if (valueForPlaceholder == undefined) {\n          var valueFromObjectPlaceholder = valuesForPlaceholders[0][matchedKey];\n          if (valueFromObjectPlaceholder !== undefined) {\n            valueForPlaceholder = valueFromObjectPlaceholder;\n          } else {\n            // If value still isn't found, then it must have been undefined/null\n            return valueForPlaceholder;\n          }\n        }\n        if (_react2.default.isValidElement(valueForPlaceholder)) {\n          hasObject = true;\n          return _react2.default.Children.toArray(valueForPlaceholder).map(function (component) {\n            return _extends({}, component, {\n              key: index.toString()\n            });\n          });\n        }\n        return valueForPlaceholder;\n      }\n      return textPart;\n    });\n    // If the results contains a object return an array otherwise return a string\n    if (hasObject) return res;\n    return res.join('');\n  };\n  exports.default = _localizedStrings2.default;\n});","lineCount":95,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,0,3,0],[6,0,4,0],[7,0,5,0],[8,0,6,0],[9,0,7,0],[10,0,8,0],[11,0,9,0],[12,0,10,0],[13,0,11,0],[14,0,12,0],[15,0,13,0],[16,0,14,0],[17,0,15,0],[18,0,16,0],[19,0,17,0],[20,0,18,0],[21,0,19,0],[22,2,21,0,"Object"],[22,8,21,6],[22,9,21,7,"defineProperty"],[22,23,21,21],[22,24,21,22,"exports"],[22,31,21,29],[22,33,21,31],[22,45,21,43],[22,47,21,45],[23,4,22,2,"value"],[23,9,22,7],[23,11,22,9],[24,2,23,0],[24,3,23,1],[24,4,23,2],[25,2,25,0],[25,6,25,4,"_extends"],[25,14,25,12],[25,17,25,15,"Object"],[25,23,25,21],[25,24,25,22,"assign"],[25,30,25,28],[25,34,25,32],[25,44,25,42,"target"],[25,50,25,48],[25,52,25,50],[26,4,25,52],[26,9,25,57],[26,13,25,61,"i"],[26,14,25,62],[26,17,25,65],[26,18,25,66],[26,20,25,68,"i"],[26,21,25,69],[26,24,25,72,"arguments"],[26,33,25,81],[26,34,25,82,"length"],[26,40,25,88],[26,42,25,90,"i"],[26,43,25,91],[26,45,25,93],[26,47,25,95],[27,6,25,97],[27,10,25,101,"source"],[27,16,25,107],[27,19,25,110,"arguments"],[27,28,25,119],[27,29,25,120,"i"],[27,30,25,121],[27,31,25,122],[28,6,25,124],[28,11,25,129],[28,15,25,133,"key"],[28,18,25,136],[28,22,25,140,"source"],[28,28,25,146],[28,30,25,148],[29,8,25,150],[29,12,25,154,"Object"],[29,18,25,160],[29,19,25,161,"prototype"],[29,28,25,170],[29,29,25,171,"hasOwnProperty"],[29,43,25,185],[29,44,25,186,"call"],[29,48,25,190],[29,49,25,191,"source"],[29,55,25,197],[29,57,25,199,"key"],[29,60,25,202],[29,61,25,203],[29,63,25,205],[30,10,25,207,"target"],[30,16,25,213],[30,17,25,214,"key"],[30,20,25,217],[30,21,25,218],[30,24,25,221,"source"],[30,30,25,227],[30,31,25,228,"key"],[30,34,25,231],[30,35,25,232],[31,8,25,234],[32,6,25,236],[33,4,25,238],[34,4,25,240],[34,11,25,247,"target"],[34,17,25,253],[35,2,25,255],[35,3,25,256],[36,2,27,0],[36,6,27,4,"_react"],[36,12,27,10],[36,15,27,13,"require"],[36,26,27,20],[36,27,27,20,"_dependencyMap"],[36,41,27,20],[36,53,27,28],[36,54,27,29],[37,2,29,0],[37,6,29,4,"_react2"],[37,13,29,11],[37,16,29,14,"_interopRequireDefault"],[37,38,29,36],[37,39,29,37,"_react"],[37,45,29,43],[37,46,29,44],[38,2,33,0],[38,6,33,4,"_localizedStrings2"],[38,24,33,22],[38,27,33,25,"_interopRequireDefault"],[38,49,33,47],[38,50,33,47,"_$$_REQUIRE"],[38,61,33,47],[38,62,33,47,"_dependencyMap"],[38,76,33,47],[38,101,33,65],[38,102,33,66],[39,2,35,0],[39,11,35,9,"_interopRequireDefault"],[39,33,35,31,"_interopRequireDefault"],[39,34,35,32,"obj"],[39,37,35,35],[39,39,35,37],[40,4,35,39],[40,11,35,46,"obj"],[40,14,35,49],[40,18,35,53,"obj"],[40,21,35,56],[40,22,35,57,"__esModule"],[40,32,35,67],[40,35,35,70,"obj"],[40,38,35,73],[40,41,35,76],[41,6,35,78,"default"],[41,13,35,85],[41,15,35,87,"obj"],[42,4,35,91],[42,5,35,92],[43,2,35,94],[44,2,37,0],[44,6,37,4,"placeholderRegex"],[44,22,37,20],[44,25,37,23],[44,41,37,39],[46,2,39,0],[47,0,40,0],[48,0,41,0],[49,0,42,0],[50,0,43,0],[51,0,44,0],[52,0,45,0],[53,0,46,0],[54,0,47,0],[55,0,48,0],[56,2,49,0,"_localizedStrings2"],[56,20,49,18],[56,21,49,19,"default"],[56,28,49,26],[56,29,49,27,"prototype"],[56,38,49,36],[56,39,49,37,"formatString"],[56,51,49,49],[56,54,49,52],[56,64,49,62,"str"],[56,67,49,65],[56,69,49,67],[57,4,50,2],[57,9,50,7],[57,13,50,11,"_len"],[57,17,50,15],[57,20,50,18,"arguments"],[57,29,50,27],[57,30,50,28,"length"],[57,36,50,34],[57,38,50,36,"valuesForPlaceholders"],[57,59,50,57],[57,62,50,60,"Array"],[57,67,50,65],[57,68,50,66,"_len"],[57,72,50,70],[57,75,50,73],[57,76,50,74],[57,79,50,77,"_len"],[57,83,50,81],[57,86,50,84],[57,87,50,85],[57,90,50,88],[57,91,50,89],[57,92,50,90],[57,94,50,92,"_key"],[57,98,50,96],[57,101,50,99],[57,102,50,100],[57,104,50,102,"_key"],[57,108,50,106],[57,111,50,109,"_len"],[57,115,50,113],[57,117,50,115,"_key"],[57,121,50,119],[57,123,50,121],[57,125,50,123],[58,6,51,4,"valuesForPlaceholders"],[58,27,51,25],[58,28,51,26,"_key"],[58,32,51,30],[58,35,51,33],[58,36,51,34],[58,37,51,35],[58,40,51,38,"arguments"],[58,49,51,47],[58,50,51,48,"_key"],[58,54,51,52],[58,55,51,53],[59,4,52,2],[60,4,54,2],[60,8,54,6,"hasObject"],[60,17,54,15],[60,20,54,18],[60,25,54,23],[61,4,55,2],[61,8,55,6,"res"],[61,11,55,9],[61,14,55,12],[61,15,55,13,"str"],[61,18,55,16],[61,22,55,20],[61,24,55,22],[61,26,55,24,"split"],[61,31,55,29],[61,32,55,30,"placeholderRegex"],[61,48,55,46],[61,49,55,47],[61,50,55,48,"filter"],[61,56,55,54],[61,57,55,55],[61,67,55,65,"textPart"],[61,75,55,73],[61,77,55,75],[62,6,56,4],[62,13,56,11],[62,14,56,12],[62,15,56,13,"textPart"],[62,23,56,21],[63,4,57,2],[63,5,57,3],[63,6,57,4],[63,7,57,5,"map"],[63,10,57,8],[63,11,57,9],[63,21,57,19,"textPart"],[63,29,57,27],[63,31,57,29,"index"],[63,36,57,34],[63,38,57,36],[64,6,58,4],[64,10,58,8,"textPart"],[64,18,58,16],[64,19,58,17,"match"],[64,24,58,22],[64,25,58,23,"placeholderRegex"],[64,41,58,39],[64,42,58,40],[64,44,58,42],[65,8,59,6],[65,12,59,10,"matchedKey"],[65,22,59,20],[65,25,59,23,"textPart"],[65,33,59,31],[65,34,59,32,"slice"],[65,39,59,37],[65,40,59,38],[65,41,59,39],[65,43,59,41],[65,44,59,42],[65,45,59,43],[65,46,59,44],[66,8,60,6],[66,12,60,10,"valueForPlaceholder"],[66,31,60,29],[66,34,60,32,"valuesForPlaceholders"],[66,55,60,53],[66,56,60,54,"matchedKey"],[66,66,60,64],[66,67,60,65],[68,8,62,6],[69,8,63,6],[69,12,63,10,"valueForPlaceholder"],[69,31,63,29],[69,35,63,33,"undefined"],[69,44,63,42],[69,46,63,44],[70,10,64,8],[70,14,64,12,"valueFromObjectPlaceholder"],[70,40,64,38],[70,43,64,41,"valuesForPlaceholders"],[70,64,64,62],[70,65,64,63],[70,66,64,64],[70,67,64,65],[70,68,64,66,"matchedKey"],[70,78,64,76],[70,79,64,77],[71,10,65,8],[71,14,65,12,"valueFromObjectPlaceholder"],[71,40,65,38],[71,45,65,43,"undefined"],[71,54,65,52],[71,56,65,54],[72,12,66,10,"valueForPlaceholder"],[72,31,66,29],[72,34,66,32,"valueFromObjectPlaceholder"],[72,60,66,58],[73,10,67,8],[73,11,67,9],[73,17,67,15],[74,12,68,10],[75,12,69,10],[75,19,69,17,"valueForPlaceholder"],[75,38,69,36],[76,10,70,8],[77,8,71,6],[78,8,73,6],[78,12,73,10,"_react2"],[78,19,73,17],[78,20,73,18,"default"],[78,27,73,25],[78,28,73,26,"isValidElement"],[78,42,73,40],[78,43,73,41,"valueForPlaceholder"],[78,62,73,60],[78,63,73,61],[78,65,73,63],[79,10,74,8,"hasObject"],[79,19,74,17],[79,22,74,20],[79,26,74,24],[80,10,75,8],[80,17,75,15,"_react2"],[80,24,75,22],[80,25,75,23,"default"],[80,32,75,30],[80,33,75,31,"Children"],[80,41,75,39],[80,42,75,40,"toArray"],[80,49,75,47],[80,50,75,48,"valueForPlaceholder"],[80,69,75,67],[80,70,75,68],[80,71,75,69,"map"],[80,74,75,72],[80,75,75,73],[80,85,75,83,"component"],[80,94,75,92],[80,96,75,94],[81,12,76,10],[81,19,76,17,"_extends"],[81,27,76,25],[81,28,76,26],[81,29,76,27],[81,30,76,28],[81,32,76,30,"component"],[81,41,76,39],[81,43,76,41],[82,14,76,43,"key"],[82,17,76,46],[82,19,76,48,"index"],[82,24,76,53],[82,25,76,54,"toString"],[82,33,76,62],[82,34,76,63],[83,12,76,65],[83,13,76,66],[83,14,76,67],[84,10,77,8],[84,11,77,9],[84,12,77,10],[85,8,78,6],[86,8,80,6],[86,15,80,13,"valueForPlaceholder"],[86,34,80,32],[87,6,81,4],[88,6,82,4],[88,13,82,11,"textPart"],[88,21,82,19],[89,4,83,2],[89,5,83,3],[89,6,83,4],[90,4,84,2],[91,4,85,2],[91,8,85,6,"hasObject"],[91,17,85,15],[91,19,85,17],[91,26,85,24,"res"],[91,29,85,27],[92,4,86,2],[92,11,86,9,"res"],[92,14,86,12],[92,15,86,13,"join"],[92,19,86,17],[92,20,86,18],[92,22,86,20],[92,23,86,21],[93,2,87,0],[93,3,87,1],[94,2,89,0,"exports"],[94,9,89,7],[94,10,89,8,"default"],[94,17,89,15],[94,20,89,18,"_localizedStrings2"],[94,38,89,36],[94,39,89,37,"default"],[94,46,89,44],[95,0,89,45],[95,3]],"functionMap":{"names":["<global>","<anonymous>","_interopRequireDefault","_localizedStrings2._default.prototype.formatString","split.filter$argument_0","split.filter.map$argument_0","_react2._default.Children.toArray.map$argument_0"],"mappings":"AAA;gCCwB,gOD;AEU,+FF;oDGc;uDCM;GDE,ME;yECkB;SDE;GFM;CHI"}},"type":"js/module"}]}