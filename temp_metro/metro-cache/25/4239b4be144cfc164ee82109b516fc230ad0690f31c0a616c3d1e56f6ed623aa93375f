{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":139,"column":37,"index":4968}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":139,"column":37,"index":4968}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":139,"column":37,"index":4968}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./fountainDecoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":42,"index":258},"end":{"line":6,"column":70,"index":286}}],"key":"mr834brSFeGgwSVN8czE7h9VN3Q="}},{"name":"./bytewords","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":36,"index":325},"end":{"line":7,"column":58,"index":347}}],"key":"7X0Ora8nN1au/ubYjp5R3ftYFu8="}},{"name":"assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":33,"index":383},"end":{"line":8,"column":50,"index":400}}],"key":"Umsy3wQQm6DbjafRIeuw3teOkUU="}},{"name":"./ur","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":29,"index":506},"end":{"line":11,"column":44,"index":521}}],"key":"9NkVu+ewdqZElg3DVnh3gF0r0qY="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":419},"end":{"line":9,"column":34,"index":437}},{"start":{"line":9,"column":16,"index":419},"end":{"line":9,"column":34,"index":437}},{"start":{"line":9,"column":16,"index":419},"end":{"line":9,"column":34,"index":437}},{"start":{"line":9,"column":16,"index":419},"end":{"line":9,"column":34,"index":437}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}},{"name":"./errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}},{"start":{"line":10,"column":17,"index":456},"end":{"line":10,"column":36,"index":475}}],"key":"GlkDztMSsNRYmp31iO+V/Albin8="}},{"name":"./fountainEncoder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":26,"index":550},"end":{"line":12,"column":54,"index":578}}],"key":"MX5UsTACrwldTOM4xSgl4IPZehA="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\");\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  var fountainDecoder_1 = __importDefault(_$$_REQUIRE(_dependencyMap[3], \"./fountainDecoder\"));\n  var bytewords_1 = __importDefault(_$$_REQUIRE(_dependencyMap[4], \"./bytewords\"));\n  var assert_1 = __importDefault(_$$_REQUIRE(_dependencyMap[5], \"assert\"));\n  var ur_1 = __importDefault(_$$_REQUIRE(_dependencyMap[6], \"./ur\"));\n  var URDecoder = /*#__PURE__*/function () {\n    function URDecoder() {\n      var fountainDecoder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new fountainDecoder_1.default();\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'bytes';\n      _classCallCheck(this, URDecoder);\n      this.fountainDecoder = fountainDecoder;\n      this.type = type;\n      assert_1.default(_$$_REQUIRE(_dependencyMap[7], \"./utils\").isURType(type), 'Invalid UR type');\n      this.expected_type = '';\n    }\n    return _createClass(URDecoder, [{\n      key: \"validatePart\",\n      value: function validatePart(type) {\n        if (this.expected_type) {\n          return this.expected_type === type;\n        }\n        if (!_$$_REQUIRE(_dependencyMap[7], \"./utils\").isURType(type)) {\n          return false;\n        }\n        this.expected_type = type;\n        return true;\n      }\n    }, {\n      key: \"receivePart\",\n      value: function receivePart(s) {\n        if (this.result !== undefined) {\n          return false;\n        }\n        var _URDecoder$parse = URDecoder.parse(s),\n          _URDecoder$parse2 = _slicedToArray(_URDecoder$parse, 2),\n          type = _URDecoder$parse2[0],\n          components = _URDecoder$parse2[1];\n        if (!this.validatePart(type)) {\n          return false;\n        }\n        // If this is a single-part UR then we're done\n        if (components.length === 1) {\n          this.result = URDecoder.decodeBody(type, components[0]);\n          return true;\n        }\n        if (components.length !== 2) {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidPathLengthError)();\n        }\n        var _components = _slicedToArray(components, 2),\n          seq = _components[0],\n          fragment = _components[1];\n        var _URDecoder$parseSeque = URDecoder.parseSequenceComponent(seq),\n          _URDecoder$parseSeque2 = _slicedToArray(_URDecoder$parseSeque, 2),\n          seqNum = _URDecoder$parseSeque2[0],\n          seqLength = _URDecoder$parseSeque2[1];\n        var cbor = bytewords_1.default.decode(fragment, bytewords_1.default.STYLES.MINIMAL);\n        var part = _$$_REQUIRE(_dependencyMap[9], \"./fountainEncoder\").FountainEncoderPart.fromCBOR(cbor);\n        if (seqNum !== part.seqNum || seqLength !== part.seqLength) {\n          return false;\n        }\n        if (!this.fountainDecoder.receivePart(part)) {\n          return false;\n        }\n        if (this.fountainDecoder.isSuccess()) {\n          this.result = new ur_1.default(this.fountainDecoder.resultMessage(), type);\n        } else if (this.fountainDecoder.isFailure()) {\n          this.error = new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidSchemeError)();\n        }\n        return true;\n      }\n    }, {\n      key: \"resultUR\",\n      value: function resultUR() {\n        return this.result ? this.result : new ur_1.default(Buffer.from([]));\n      }\n    }, {\n      key: \"isComplete\",\n      value: function isComplete() {\n        return this.result && this.result.cbor.length > 0;\n      }\n    }, {\n      key: \"isSuccess\",\n      value: function isSuccess() {\n        return !this.error && this.isComplete();\n      }\n    }, {\n      key: \"isError\",\n      value: function isError() {\n        return this.error !== undefined;\n      }\n    }, {\n      key: \"resultError\",\n      value: function resultError() {\n        return this.error ? this.error.message : '';\n      }\n    }, {\n      key: \"expectedPartCount\",\n      value: function expectedPartCount() {\n        return this.fountainDecoder.expectedPartCount();\n      }\n    }, {\n      key: \"expectedPartIndexes\",\n      value: function expectedPartIndexes() {\n        return this.fountainDecoder.getExpectedPartIndexes();\n      }\n    }, {\n      key: \"receivedPartIndexes\",\n      value: function receivedPartIndexes() {\n        return this.fountainDecoder.getReceivedPartIndexes();\n      }\n    }, {\n      key: \"lastPartIndexes\",\n      value: function lastPartIndexes() {\n        return this.fountainDecoder.getLastPartIndexes();\n      }\n    }, {\n      key: \"estimatedPercentComplete\",\n      value: function estimatedPercentComplete() {\n        return this.fountainDecoder.estimatedPercentComplete();\n      }\n    }, {\n      key: \"getProgress\",\n      value: function getProgress() {\n        return this.fountainDecoder.getProgress();\n      }\n    }], [{\n      key: \"decodeBody\",\n      value: function decodeBody(type, message) {\n        var cbor = bytewords_1.default.decode(message, bytewords_1.default.STYLES.MINIMAL);\n        return new ur_1.default(Buffer.from(cbor, 'hex'), type);\n      }\n    }, {\n      key: \"decode\",\n      value: function decode(message) {\n        var _this$parse = this.parse(message),\n          _this$parse2 = _slicedToArray(_this$parse, 2),\n          type = _this$parse2[0],\n          components = _this$parse2[1];\n        if (components.length === 0) {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidPathLengthError)();\n        }\n        var body = components[0];\n        return URDecoder.decodeBody(type, body);\n      }\n    }, {\n      key: \"parse\",\n      value: function parse(message) {\n        var lowercase = message.toLowerCase();\n        var prefix = lowercase.slice(0, 3);\n        if (prefix !== 'ur:') {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidSchemeError)();\n        }\n        var components = lowercase.slice(3).split('/');\n        var type = components[0];\n        if (components.length < 2) {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidPathLengthError)();\n        }\n        if (!_$$_REQUIRE(_dependencyMap[7], \"./utils\").isURType(type)) {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidTypeError)();\n        }\n        return [type, components.slice(1)];\n      }\n    }, {\n      key: \"parseSequenceComponent\",\n      value: function parseSequenceComponent(s) {\n        var components = s.split('-');\n        if (components.length !== 2) {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidSequenceComponentError)();\n        }\n        var seqNum = _$$_REQUIRE(_dependencyMap[7], \"./utils\").toUint32(Number(components[0]));\n        var seqLength = Number(components[1]);\n        if (seqNum < 1 || seqLength < 1) {\n          throw new (_$$_REQUIRE(_dependencyMap[8], \"./errors\").InvalidSequenceComponentError)();\n        }\n        return [seqNum, seqLength];\n      }\n    }]);\n  }();\n  exports.default = URDecoder;\n});","lineCount":193,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_slicedToArray"],[4,20,1,13],[4,23,1,13,"_$$_REQUIRE"],[4,34,1,13],[4,35,1,13,"_dependencyMap"],[4,49,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"_$$_REQUIRE"],[5,35,1,13],[5,36,1,13,"_dependencyMap"],[5,50,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"_$$_REQUIRE"],[6,32,1,13],[6,33,1,13,"_dependencyMap"],[6,47,1,13],[7,2,2,0],[7,6,2,4,"__importDefault"],[7,21,2,19],[7,24,2,23],[7,28,2,27],[7,32,2,31],[7,36,2,35],[7,37,2,36,"__importDefault"],[7,52,2,51],[7,56,2,56],[7,66,2,66,"mod"],[7,69,2,69],[7,71,2,71],[8,4,3,4],[8,11,3,12,"mod"],[8,14,3,15],[8,18,3,19,"mod"],[8,21,3,22],[8,22,3,23,"__esModule"],[8,32,3,33],[8,35,3,37,"mod"],[8,38,3,40],[8,41,3,43],[9,6,3,45],[9,15,3,54],[9,17,3,56,"mod"],[10,4,3,60],[10,5,3,61],[11,2,4,0],[11,3,4,1],[12,2,5,0,"Object"],[12,8,5,6],[12,9,5,7,"defineProperty"],[12,23,5,21],[12,24,5,22,"exports"],[12,31,5,29],[12,33,5,31],[12,45,5,43],[12,47,5,45],[13,4,5,47,"value"],[13,9,5,52],[13,11,5,54],[14,2,5,59],[14,3,5,60],[14,4,5,61],[15,2,6,0],[15,6,6,6,"fountainDecoder_1"],[15,23,6,23],[15,26,6,26,"__importDefault"],[15,41,6,41],[15,42,6,42,"require"],[15,53,6,49],[15,54,6,49,"_dependencyMap"],[15,68,6,49],[15,92,6,69],[15,93,6,70],[15,94,6,71],[16,2,7,0],[16,6,7,6,"bytewords_1"],[16,17,7,17],[16,20,7,20,"__importDefault"],[16,35,7,35],[16,36,7,36,"require"],[16,47,7,43],[16,48,7,43,"_dependencyMap"],[16,62,7,43],[16,80,7,57],[16,81,7,58],[16,82,7,59],[17,2,8,0],[17,6,8,6,"assert_1"],[17,14,8,14],[17,17,8,17,"__importDefault"],[17,32,8,32],[17,33,8,33,"require"],[17,44,8,40],[17,45,8,40,"_dependencyMap"],[17,59,8,40],[17,72,8,49],[17,73,8,50],[17,74,8,51],[18,2,11,0],[18,6,11,6,"ur_1"],[18,10,11,10],[18,13,11,13,"__importDefault"],[18,28,11,28],[18,29,11,29,"require"],[18,40,11,36],[18,41,11,36,"_dependencyMap"],[18,55,11,36],[18,66,11,43],[18,67,11,44],[18,68,11,45],[19,2,11,46],[19,6,13,6,"URDecoder"],[19,15,13,15],[20,4,14,4],[20,13,14,4,"URDecoder"],[20,23,14,4],[20,25,14,83],[21,6,14,83],[21,10,14,16,"fountainDecoder"],[21,25,14,31],[21,28,14,31,"arguments"],[21,37,14,31],[21,38,14,31,"length"],[21,44,14,31],[21,52,14,31,"arguments"],[21,61,14,31],[21,69,14,31,"undefined"],[21,78,14,31],[21,81,14,31,"arguments"],[21,90,14,31],[21,96,14,34],[21,100,14,38,"fountainDecoder_1"],[21,117,14,55],[21,118,14,56,"default"],[21,125,14,63],[21,126,14,64],[21,127,14,65],[22,6,14,65],[22,10,14,67,"type"],[22,14,14,71],[22,17,14,71,"arguments"],[22,26,14,71],[22,27,14,71,"length"],[22,33,14,71],[22,41,14,71,"arguments"],[22,50,14,71],[22,58,14,71,"undefined"],[22,67,14,71],[22,70,14,71,"arguments"],[22,79,14,71],[22,85,14,74],[22,92,14,81],[23,6,14,81,"_classCallCheck"],[23,21,14,81],[23,28,14,81,"URDecoder"],[23,37,14,81],[24,6,15,8],[24,10,15,12],[24,11,15,13,"fountainDecoder"],[24,26,15,28],[24,29,15,31,"fountainDecoder"],[24,44,15,46],[25,6,16,8],[25,10,16,12],[25,11,16,13,"type"],[25,15,16,17],[25,18,16,20,"type"],[25,22,16,24],[26,6,17,8,"assert_1"],[26,14,17,16],[26,15,17,17,"default"],[26,22,17,24],[26,23,17,25,"_$$_REQUIRE"],[26,34,17,25],[26,35,17,25,"_dependencyMap"],[26,49,17,25],[26,65,17,33,"isURType"],[26,73,17,41],[26,74,17,42,"type"],[26,78,17,46],[26,79,17,47],[26,81,17,49],[26,98,17,66],[26,99,17,67],[27,6,18,8],[27,10,18,12],[27,11,18,13,"expected_type"],[27,24,18,26],[27,27,18,29],[27,29,18,31],[28,4,19,4],[29,4,19,5],[29,11,19,5,"_createClass"],[29,23,19,5],[29,24,19,5,"URDecoder"],[29,33,19,5],[30,6,19,5,"key"],[30,9,19,5],[31,6,19,5,"value"],[31,11,19,5],[31,13,24,4],[31,22,24,4,"validatePart"],[31,34,24,16,"validatePart"],[31,35,24,17,"type"],[31,39,24,21],[31,41,24,23],[32,8,25,8],[32,12,25,12],[32,16,25,16],[32,17,25,17,"expected_type"],[32,30,25,30],[32,32,25,32],[33,10,26,12],[33,17,26,19],[33,21,26,23],[33,22,26,24,"expected_type"],[33,35,26,37],[33,40,26,42,"type"],[33,44,26,46],[34,8,27,8],[35,8,28,8],[35,12,28,12],[35,13,28,13,"_$$_REQUIRE"],[35,24,28,13],[35,25,28,13,"_dependencyMap"],[35,39,28,13],[35,55,28,21,"isURType"],[35,63,28,29],[35,64,28,30,"type"],[35,68,28,34],[35,69,28,35],[35,71,28,37],[36,10,29,12],[36,17,29,19],[36,22,29,24],[37,8,30,8],[38,8,31,8],[38,12,31,12],[38,13,31,13,"expected_type"],[38,26,31,26],[38,29,31,29,"type"],[38,33,31,33],[39,8,32,8],[39,15,32,15],[39,19,32,19],[40,6,33,4],[41,4,33,5],[42,6,33,5,"key"],[42,9,33,5],[43,6,33,5,"value"],[43,11,33,5],[43,13,70,4],[43,22,70,4,"receivePart"],[43,33,70,15,"receivePart"],[43,34,70,16,"s"],[43,35,70,17],[43,37,70,19],[44,8,71,8],[44,12,71,12],[44,16,71,16],[44,17,71,17,"result"],[44,23,71,23],[44,28,71,28,"undefined"],[44,37,71,37],[44,39,71,39],[45,10,72,12],[45,17,72,19],[45,22,72,24],[46,8,73,8],[47,8,74,8],[47,12,74,8,"_URDecoder$parse"],[47,28,74,8],[47,31,74,35,"URDecoder"],[47,40,74,44],[47,41,74,45,"parse"],[47,46,74,50],[47,47,74,51,"s"],[47,48,74,52],[47,49,74,53],[48,10,74,53,"_URDecoder$parse2"],[48,27,74,53],[48,30,74,53,"_slicedToArray"],[48,44,74,53],[48,45,74,53,"_URDecoder$parse"],[48,61,74,53],[49,10,74,15,"type"],[49,14,74,19],[49,17,74,19,"_URDecoder$parse2"],[49,34,74,19],[50,10,74,21,"components"],[50,20,74,31],[50,23,74,31,"_URDecoder$parse2"],[50,40,74,31],[51,8,75,8],[51,12,75,12],[51,13,75,13],[51,17,75,17],[51,18,75,18,"validatePart"],[51,30,75,30],[51,31,75,31,"type"],[51,35,75,35],[51,36,75,36],[51,38,75,38],[52,10,76,12],[52,17,76,19],[52,22,76,24],[53,8,77,8],[54,8,78,8],[55,8,79,8],[55,12,79,12,"components"],[55,22,79,22],[55,23,79,23,"length"],[55,29,79,29],[55,34,79,34],[55,35,79,35],[55,37,79,37],[56,10,80,12],[56,14,80,16],[56,15,80,17,"result"],[56,21,80,23],[56,24,80,26,"URDecoder"],[56,33,80,35],[56,34,80,36,"decodeBody"],[56,44,80,46],[56,45,80,47,"type"],[56,49,80,51],[56,51,80,53,"components"],[56,61,80,63],[56,62,80,64],[56,63,80,65],[56,64,80,66],[56,65,80,67],[57,10,81,12],[57,17,81,19],[57,21,81,23],[58,8,82,8],[59,8,83,8],[59,12,83,12,"components"],[59,22,83,22],[59,23,83,23,"length"],[59,29,83,29],[59,34,83,34],[59,35,83,35],[59,37,83,37],[60,10,84,12],[60,16,84,18],[60,21,84,22,"_$$_REQUIRE"],[60,32,84,22],[60,33,84,22,"_dependencyMap"],[60,47,84,22],[60,64,84,31,"InvalidPathLengthError"],[60,86,84,53],[60,88,84,54],[60,89,84,55],[61,8,85,8],[62,8,86,8],[62,12,86,8,"_components"],[62,23,86,8],[62,26,86,8,"_slicedToArray"],[62,40,86,8],[62,41,86,32,"components"],[62,51,86,42],[63,10,86,15,"seq"],[63,13,86,18],[63,16,86,18,"_components"],[63,27,86,18],[64,10,86,20,"fragment"],[64,18,86,28],[64,21,86,28,"_components"],[64,32,86,28],[65,8,87,8],[65,12,87,8,"_URDecoder$parseSeque"],[65,33,87,8],[65,36,87,36,"URDecoder"],[65,45,87,45],[65,46,87,46,"parseSequenceComponent"],[65,68,87,68],[65,69,87,69,"seq"],[65,72,87,72],[65,73,87,73],[66,10,87,73,"_URDecoder$parseSeque2"],[66,32,87,73],[66,35,87,73,"_slicedToArray"],[66,49,87,73],[66,50,87,73,"_URDecoder$parseSeque"],[66,71,87,73],[67,10,87,15,"seqNum"],[67,16,87,21],[67,19,87,21,"_URDecoder$parseSeque2"],[67,41,87,21],[68,10,87,23,"seqLength"],[68,19,87,32],[68,22,87,32,"_URDecoder$parseSeque2"],[68,44,87,32],[69,8,88,8],[69,12,88,14,"cbor"],[69,16,88,18],[69,19,88,21,"bytewords_1"],[69,30,88,32],[69,31,88,33,"default"],[69,38,88,40],[69,39,88,41,"decode"],[69,45,88,47],[69,46,88,48,"fragment"],[69,54,88,56],[69,56,88,58,"bytewords_1"],[69,67,88,69],[69,68,88,70,"default"],[69,75,88,77],[69,76,88,78,"STYLES"],[69,82,88,84],[69,83,88,85,"MINIMAL"],[69,90,88,92],[69,91,88,93],[70,8,89,8],[70,12,89,14,"part"],[70,16,89,18],[70,19,89,21,"_$$_REQUIRE"],[70,30,89,21],[70,31,89,21,"_dependencyMap"],[70,45,89,21],[70,71,89,39,"FountainEncoderPart"],[70,90,89,58],[70,91,89,59,"fromCBOR"],[70,99,89,67],[70,100,89,68,"cbor"],[70,104,89,72],[70,105,89,73],[71,8,90,8],[71,12,90,12,"seqNum"],[71,18,90,18],[71,23,90,23,"part"],[71,27,90,27],[71,28,90,28,"seqNum"],[71,34,90,34],[71,38,90,38,"seqLength"],[71,47,90,47],[71,52,90,52,"part"],[71,56,90,56],[71,57,90,57,"seqLength"],[71,66,90,66],[71,68,90,68],[72,10,91,12],[72,17,91,19],[72,22,91,24],[73,8,92,8],[74,8,93,8],[74,12,93,12],[74,13,93,13],[74,17,93,17],[74,18,93,18,"fountainDecoder"],[74,33,93,33],[74,34,93,34,"receivePart"],[74,45,93,45],[74,46,93,46,"part"],[74,50,93,50],[74,51,93,51],[74,53,93,53],[75,10,94,12],[75,17,94,19],[75,22,94,24],[76,8,95,8],[77,8,96,8],[77,12,96,12],[77,16,96,16],[77,17,96,17,"fountainDecoder"],[77,32,96,32],[77,33,96,33,"isSuccess"],[77,42,96,42],[77,43,96,43],[77,44,96,44],[77,46,96,46],[78,10,97,12],[78,14,97,16],[78,15,97,17,"result"],[78,21,97,23],[78,24,97,26],[78,28,97,30,"ur_1"],[78,32,97,34],[78,33,97,35,"default"],[78,40,97,42],[78,41,97,43],[78,45,97,47],[78,46,97,48,"fountainDecoder"],[78,61,97,63],[78,62,97,64,"resultMessage"],[78,75,97,77],[78,76,97,78],[78,77,97,79],[78,79,97,81,"type"],[78,83,97,85],[78,84,97,86],[79,8,98,8],[79,9,98,9],[79,15,99,13],[79,19,99,17],[79,23,99,21],[79,24,99,22,"fountainDecoder"],[79,39,99,37],[79,40,99,38,"isFailure"],[79,49,99,47],[79,50,99,48],[79,51,99,49],[79,53,99,51],[80,10,100,12],[80,14,100,16],[80,15,100,17,"error"],[80,20,100,22],[80,23,100,25],[80,28,100,29,"_$$_REQUIRE"],[80,39,100,29],[80,40,100,29,"_dependencyMap"],[80,54,100,29],[80,71,100,38,"InvalidSchemeError"],[80,89,100,56],[80,91,100,57],[80,92,100,58],[81,8,101,8],[82,8,102,8],[82,15,102,15],[82,19,102,19],[83,6,103,4],[84,4,103,5],[85,6,103,5,"key"],[85,9,103,5],[86,6,103,5,"value"],[86,11,103,5],[86,13,104,4],[86,22,104,4,"resultUR"],[86,30,104,12,"resultUR"],[86,31,104,12],[86,33,104,15],[87,8,105,8],[87,15,105,15],[87,19,105,19],[87,20,105,20,"result"],[87,26,105,26],[87,29,105,29],[87,33,105,33],[87,34,105,34,"result"],[87,40,105,40],[87,43,105,43],[87,47,105,47,"ur_1"],[87,51,105,51],[87,52,105,52,"default"],[87,59,105,59],[87,60,105,60,"Buffer"],[87,66,105,66],[87,67,105,67,"from"],[87,71,105,71],[87,72,105,72],[87,74,105,74],[87,75,105,75],[87,76,105,76],[88,6,106,4],[89,4,106,5],[90,6,106,5,"key"],[90,9,106,5],[91,6,106,5,"value"],[91,11,106,5],[91,13,107,4],[91,22,107,4,"isComplete"],[91,32,107,14,"isComplete"],[91,33,107,14],[91,35,107,17],[92,8,108,8],[92,15,108,15],[92,19,108,19],[92,20,108,20,"result"],[92,26,108,26],[92,30,108,30],[92,34,108,34],[92,35,108,35,"result"],[92,41,108,41],[92,42,108,42,"cbor"],[92,46,108,46],[92,47,108,47,"length"],[92,53,108,53],[92,56,108,56],[92,57,108,57],[93,6,109,4],[94,4,109,5],[95,6,109,5,"key"],[95,9,109,5],[96,6,109,5,"value"],[96,11,109,5],[96,13,110,4],[96,22,110,4,"isSuccess"],[96,31,110,13,"isSuccess"],[96,32,110,13],[96,34,110,16],[97,8,111,8],[97,15,111,15],[97,16,111,16],[97,20,111,20],[97,21,111,21,"error"],[97,26,111,26],[97,30,111,30],[97,34,111,34],[97,35,111,35,"isComplete"],[97,45,111,45],[97,46,111,46],[97,47,111,47],[98,6,112,4],[99,4,112,5],[100,6,112,5,"key"],[100,9,112,5],[101,6,112,5,"value"],[101,11,112,5],[101,13,113,4],[101,22,113,4,"isError"],[101,29,113,11,"isError"],[101,30,113,11],[101,32,113,14],[102,8,114,8],[102,15,114,15],[102,19,114,19],[102,20,114,20,"error"],[102,25,114,25],[102,30,114,30,"undefined"],[102,39,114,39],[103,6,115,4],[104,4,115,5],[105,6,115,5,"key"],[105,9,115,5],[106,6,115,5,"value"],[106,11,115,5],[106,13,116,4],[106,22,116,4,"resultError"],[106,33,116,15,"resultError"],[106,34,116,15],[106,36,116,18],[107,8,117,8],[107,15,117,15],[107,19,117,19],[107,20,117,20,"error"],[107,25,117,25],[107,28,117,28],[107,32,117,32],[107,33,117,33,"error"],[107,38,117,38],[107,39,117,39,"message"],[107,46,117,46],[107,49,117,49],[107,51,117,51],[108,6,118,4],[109,4,118,5],[110,6,118,5,"key"],[110,9,118,5],[111,6,118,5,"value"],[111,11,118,5],[111,13,119,4],[111,22,119,4,"expectedPartCount"],[111,39,119,21,"expectedPartCount"],[111,40,119,21],[111,42,119,24],[112,8,120,8],[112,15,120,15],[112,19,120,19],[112,20,120,20,"fountainDecoder"],[112,35,120,35],[112,36,120,36,"expectedPartCount"],[112,53,120,53],[112,54,120,54],[112,55,120,55],[113,6,121,4],[114,4,121,5],[115,6,121,5,"key"],[115,9,121,5],[116,6,121,5,"value"],[116,11,121,5],[116,13,122,4],[116,22,122,4,"expectedPartIndexes"],[116,41,122,23,"expectedPartIndexes"],[116,42,122,23],[116,44,122,26],[117,8,123,8],[117,15,123,15],[117,19,123,19],[117,20,123,20,"fountainDecoder"],[117,35,123,35],[117,36,123,36,"getExpectedPartIndexes"],[117,58,123,58],[117,59,123,59],[117,60,123,60],[118,6,124,4],[119,4,124,5],[120,6,124,5,"key"],[120,9,124,5],[121,6,124,5,"value"],[121,11,124,5],[121,13,125,4],[121,22,125,4,"receivedPartIndexes"],[121,41,125,23,"receivedPartIndexes"],[121,42,125,23],[121,44,125,26],[122,8,126,8],[122,15,126,15],[122,19,126,19],[122,20,126,20,"fountainDecoder"],[122,35,126,35],[122,36,126,36,"getReceivedPartIndexes"],[122,58,126,58],[122,59,126,59],[122,60,126,60],[123,6,127,4],[124,4,127,5],[125,6,127,5,"key"],[125,9,127,5],[126,6,127,5,"value"],[126,11,127,5],[126,13,128,4],[126,22,128,4,"lastPartIndexes"],[126,37,128,19,"lastPartIndexes"],[126,38,128,19],[126,40,128,22],[127,8,129,8],[127,15,129,15],[127,19,129,19],[127,20,129,20,"fountainDecoder"],[127,35,129,35],[127,36,129,36,"getLastPartIndexes"],[127,54,129,54],[127,55,129,55],[127,56,129,56],[128,6,130,4],[129,4,130,5],[130,6,130,5,"key"],[130,9,130,5],[131,6,130,5,"value"],[131,11,130,5],[131,13,131,4],[131,22,131,4,"estimatedPercentComplete"],[131,46,131,28,"estimatedPercentComplete"],[131,47,131,28],[131,49,131,31],[132,8,132,8],[132,15,132,15],[132,19,132,19],[132,20,132,20,"fountainDecoder"],[132,35,132,35],[132,36,132,36,"estimatedPercentComplete"],[132,60,132,60],[132,61,132,61],[132,62,132,62],[133,6,133,4],[134,4,133,5],[135,6,133,5,"key"],[135,9,133,5],[136,6,133,5,"value"],[136,11,133,5],[136,13,134,4],[136,22,134,4,"getProgress"],[136,33,134,15,"getProgress"],[136,34,134,15],[136,36,134,18],[137,8,135,8],[137,15,135,15],[137,19,135,19],[137,20,135,20,"fountainDecoder"],[137,35,135,35],[137,36,135,36,"getProgress"],[137,47,135,47],[137,48,135,48],[137,49,135,49],[138,6,136,4],[139,4,136,5],[140,6,136,5,"key"],[140,9,136,5],[141,6,136,5,"value"],[141,11,136,5],[141,13,20,4],[141,22,20,11,"decodeBody"],[141,32,20,21,"decodeBody"],[141,33,20,22,"type"],[141,37,20,26],[141,39,20,28,"message"],[141,46,20,35],[141,48,20,37],[142,8,21,8],[142,12,21,14,"cbor"],[142,16,21,18],[142,19,21,21,"bytewords_1"],[142,30,21,32],[142,31,21,33,"default"],[142,38,21,40],[142,39,21,41,"decode"],[142,45,21,47],[142,46,21,48,"message"],[142,53,21,55],[142,55,21,57,"bytewords_1"],[142,66,21,68],[142,67,21,69,"default"],[142,74,21,76],[142,75,21,77,"STYLES"],[142,81,21,83],[142,82,21,84,"MINIMAL"],[142,89,21,91],[142,90,21,92],[143,8,22,8],[143,15,22,15],[143,19,22,19,"ur_1"],[143,23,22,23],[143,24,22,24,"default"],[143,31,22,31],[143,32,22,32,"Buffer"],[143,38,22,38],[143,39,22,39,"from"],[143,43,22,43],[143,44,22,44,"cbor"],[143,48,22,48],[143,50,22,50],[143,55,22,55],[143,56,22,56],[143,58,22,58,"type"],[143,62,22,62],[143,63,22,63],[144,6,23,4],[145,4,23,5],[146,6,23,5,"key"],[146,9,23,5],[147,6,23,5,"value"],[147,11,23,5],[147,13,34,4],[147,22,34,11,"decode"],[147,28,34,17,"decode"],[147,29,34,18,"message"],[147,36,34,25],[147,38,34,27],[148,8,35,8],[148,12,35,8,"_this$parse"],[148,23,35,8],[148,26,35,35],[148,30,35,39],[148,31,35,40,"parse"],[148,36,35,45],[148,37,35,46,"message"],[148,44,35,53],[148,45,35,54],[149,10,35,54,"_this$parse2"],[149,22,35,54],[149,25,35,54,"_slicedToArray"],[149,39,35,54],[149,40,35,54,"_this$parse"],[149,51,35,54],[150,10,35,15,"type"],[150,14,35,19],[150,17,35,19,"_this$parse2"],[150,29,35,19],[151,10,35,21,"components"],[151,20,35,31],[151,23,35,31,"_this$parse2"],[151,35,35,31],[152,8,36,8],[152,12,36,12,"components"],[152,22,36,22],[152,23,36,23,"length"],[152,29,36,29],[152,34,36,34],[152,35,36,35],[152,37,36,37],[153,10,37,12],[153,16,37,18],[153,21,37,22,"_$$_REQUIRE"],[153,32,37,22],[153,33,37,22,"_dependencyMap"],[153,47,37,22],[153,64,37,31,"InvalidPathLengthError"],[153,86,37,53],[153,88,37,54],[153,89,37,55],[154,8,38,8],[155,8,39,8],[155,12,39,14,"body"],[155,16,39,18],[155,19,39,21,"components"],[155,29,39,31],[155,30,39,32],[155,31,39,33],[155,32,39,34],[156,8,40,8],[156,15,40,15,"URDecoder"],[156,24,40,24],[156,25,40,25,"decodeBody"],[156,35,40,35],[156,36,40,36,"type"],[156,40,40,40],[156,42,40,42,"body"],[156,46,40,46],[156,47,40,47],[157,6,41,4],[158,4,41,5],[159,6,41,5,"key"],[159,9,41,5],[160,6,41,5,"value"],[160,11,41,5],[160,13,42,4],[160,22,42,11,"parse"],[160,27,42,16,"parse"],[160,28,42,17,"message"],[160,35,42,24],[160,37,42,26],[161,8,43,8],[161,12,43,14,"lowercase"],[161,21,43,23],[161,24,43,26,"message"],[161,31,43,33],[161,32,43,34,"toLowerCase"],[161,43,43,45],[161,44,43,46],[161,45,43,47],[162,8,44,8],[162,12,44,14,"prefix"],[162,18,44,20],[162,21,44,23,"lowercase"],[162,30,44,32],[162,31,44,33,"slice"],[162,36,44,38],[162,37,44,39],[162,38,44,40],[162,40,44,42],[162,41,44,43],[162,42,44,44],[163,8,45,8],[163,12,45,12,"prefix"],[163,18,45,18],[163,23,45,23],[163,28,45,28],[163,30,45,30],[164,10,46,12],[164,16,46,18],[164,21,46,22,"_$$_REQUIRE"],[164,32,46,22],[164,33,46,22,"_dependencyMap"],[164,47,46,22],[164,64,46,31,"InvalidSchemeError"],[164,82,46,49],[164,84,46,50],[164,85,46,51],[165,8,47,8],[166,8,48,8],[166,12,48,14,"components"],[166,22,48,24],[166,25,48,27,"lowercase"],[166,34,48,36],[166,35,48,37,"slice"],[166,40,48,42],[166,41,48,43],[166,42,48,44],[166,43,48,45],[166,44,48,46,"split"],[166,49,48,51],[166,50,48,52],[166,53,48,55],[166,54,48,56],[167,8,49,8],[167,12,49,14,"type"],[167,16,49,18],[167,19,49,21,"components"],[167,29,49,31],[167,30,49,32],[167,31,49,33],[167,32,49,34],[168,8,50,8],[168,12,50,12,"components"],[168,22,50,22],[168,23,50,23,"length"],[168,29,50,29],[168,32,50,32],[168,33,50,33],[168,35,50,35],[169,10,51,12],[169,16,51,18],[169,21,51,22,"_$$_REQUIRE"],[169,32,51,22],[169,33,51,22,"_dependencyMap"],[169,47,51,22],[169,64,51,31,"InvalidPathLengthError"],[169,86,51,53],[169,88,51,54],[169,89,51,55],[170,8,52,8],[171,8,53,8],[171,12,53,12],[171,13,53,13,"_$$_REQUIRE"],[171,24,53,13],[171,25,53,13,"_dependencyMap"],[171,39,53,13],[171,55,53,21,"isURType"],[171,63,53,29],[171,64,53,30,"type"],[171,68,53,34],[171,69,53,35],[171,71,53,37],[172,10,54,12],[172,16,54,18],[172,21,54,22,"_$$_REQUIRE"],[172,32,54,22],[172,33,54,22,"_dependencyMap"],[172,47,54,22],[172,64,54,31,"InvalidTypeError"],[172,80,54,47],[172,82,54,48],[172,83,54,49],[173,8,55,8],[174,8,56,8],[174,15,56,15],[174,16,56,16,"type"],[174,20,56,20],[174,22,56,22,"components"],[174,32,56,32],[174,33,56,33,"slice"],[174,38,56,38],[174,39,56,39],[174,40,56,40],[174,41,56,41],[174,42,56,42],[175,6,57,4],[176,4,57,5],[177,6,57,5,"key"],[177,9,57,5],[178,6,57,5,"value"],[178,11,57,5],[178,13,58,4],[178,22,58,11,"parseSequenceComponent"],[178,44,58,33,"parseSequenceComponent"],[178,45,58,34,"s"],[178,46,58,35],[178,48,58,37],[179,8,59,8],[179,12,59,14,"components"],[179,22,59,24],[179,25,59,27,"s"],[179,26,59,28],[179,27,59,29,"split"],[179,32,59,34],[179,33,59,35],[179,36,59,38],[179,37,59,39],[180,8,60,8],[180,12,60,12,"components"],[180,22,60,22],[180,23,60,23,"length"],[180,29,60,29],[180,34,60,34],[180,35,60,35],[180,37,60,37],[181,10,61,12],[181,16,61,18],[181,21,61,22,"_$$_REQUIRE"],[181,32,61,22],[181,33,61,22,"_dependencyMap"],[181,47,61,22],[181,64,61,31,"InvalidSequenceComponentError"],[181,93,61,60],[181,95,61,61],[181,96,61,62],[182,8,62,8],[183,8,63,8],[183,12,63,14,"seqNum"],[183,18,63,20],[183,21,63,23,"_$$_REQUIRE"],[183,32,63,23],[183,33,63,23,"_dependencyMap"],[183,47,63,23],[183,63,63,31,"toUint32"],[183,71,63,39],[183,72,63,40,"Number"],[183,78,63,46],[183,79,63,47,"components"],[183,89,63,57],[183,90,63,58],[183,91,63,59],[183,92,63,60],[183,93,63,61],[183,94,63,62],[184,8,64,8],[184,12,64,14,"seqLength"],[184,21,64,23],[184,24,64,26,"Number"],[184,30,64,32],[184,31,64,33,"components"],[184,41,64,43],[184,42,64,44],[184,43,64,45],[184,44,64,46],[184,45,64,47],[185,8,65,8],[185,12,65,12,"seqNum"],[185,18,65,18],[185,21,65,21],[185,22,65,22],[185,26,65,26,"seqLength"],[185,35,65,35],[185,38,65,38],[185,39,65,39],[185,41,65,41],[186,10,66,12],[186,16,66,18],[186,21,66,22,"_$$_REQUIRE"],[186,32,66,22],[186,33,66,22,"_dependencyMap"],[186,47,66,22],[186,64,66,31,"InvalidSequenceComponentError"],[186,93,66,60],[186,95,66,61],[186,96,66,62],[187,8,67,8],[188,8,68,8],[188,15,68,15],[188,16,68,16,"seqNum"],[188,22,68,22],[188,24,68,24,"seqLength"],[188,33,68,33],[188,34,68,34],[189,6,69,4],[190,4,69,5],[191,2,69,5],[192,2,138,0,"exports"],[192,9,138,7],[192,10,138,8,"default"],[192,17,138,15],[192,20,138,18,"URDecoder"],[192,29,138,27],[193,0,138,28],[193,3]],"functionMap":{"names":["<global>","<anonymous>","URDecoder","URDecoder#constructor","URDecoder.decodeBody","URDecoder#validatePart","URDecoder.decode","URDecoder.parse","URDecoder.parseSequenceComponent","URDecoder#receivePart","URDecoder#resultUR","URDecoder#isComplete","URDecoder#isSuccess","URDecoder#isError","URDecoder#resultError","URDecoder#expectedPartCount","URDecoder#expectedPartIndexes","URDecoder#receivedPartIndexes","URDecoder#lastPartIndexes","URDecoder#estimatedPercentComplete","URDecoder#getProgress"],"mappings":"AAA;wDCC;CDE;AES;ICC;KDK;IEC;KFG;IGC;KHS;IIC;KJO;IKC;KLe;IMC;KNW;IOC;KPiC;IQC;KRE;ISC;KTE;IUC;KVE;IWC;KXE;IYC;KZE;IaC;KbE;IcC;KdE;IeC;KfE;IgBC;KhBE;IiBC;KjBE;IkBC;KlBE;CFC"}},"type":"js/module"}]}