{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":11,"index":55},"end":{"line":2,"column":25,"index":69}},{"start":{"line":2,"column":11,"index":55},"end":{"line":2,"column":25,"index":69}},{"start":{"line":2,"column":11,"index":55},"end":{"line":2,"column":25,"index":69}},{"start":{"line":2,"column":11,"index":55},"end":{"line":2,"column":25,"index":69}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var WhiteSpace = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.WhiteSpace;\n  var Semicolon = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Semicolon;\n  var LeftCurlyBracket = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.LeftCurlyBracket;\n  var Delim = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Delim;\n  var EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\n  function getOffsetExcludeWS() {\n    if (this.scanner.tokenIndex > 0) {\n      if (this.scanner.lookupType(-1) === WhiteSpace) {\n        return this.scanner.tokenIndex > 1 ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1) : this.scanner.firstCharOffset;\n      }\n    }\n    return this.scanner.tokenStart;\n  }\n\n  // 0, 0, false\n  function balanceEnd() {\n    return 0;\n  }\n\n  // LEFTCURLYBRACKET, 0, false\n  function leftCurlyBracket(tokenType) {\n    return tokenType === LeftCurlyBracket ? 1 : 0;\n  }\n\n  // LEFTCURLYBRACKET, SEMICOLON, false\n  function leftCurlyBracketOrSemicolon(tokenType) {\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\n  }\n\n  // EXCLAMATIONMARK, SEMICOLON, false\n  function exclamationMarkOrSemicolon(tokenType, source, offset) {\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\n      return 1;\n    }\n    return tokenType === Semicolon ? 1 : 0;\n  }\n\n  // 0, SEMICOLON, true\n  function semicolonIncluded(tokenType) {\n    return tokenType === Semicolon ? 2 : 0;\n  }\n  module.exports = {\n    name: 'Raw',\n    structure: {\n      value: String\n    },\n    parse: function parse(startToken, mode, excludeWhiteSpace) {\n      var startOffset = this.scanner.getTokenStart(startToken);\n      var endOffset;\n      this.scanner.skip(this.scanner.getRawLength(startToken, mode || balanceEnd));\n      if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\n        endOffset = getOffsetExcludeWS.call(this);\n      } else {\n        endOffset = this.scanner.tokenStart;\n      }\n      return {\n        type: 'Raw',\n        loc: this.getLocation(startOffset, endOffset),\n        value: this.scanner.source.substring(startOffset, endOffset)\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.value);\n    },\n    mode: {\n      default: balanceEnd,\n      leftCurlyBracket: leftCurlyBracket,\n      leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\n      exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\n      semicolonIncluded: semicolonIncluded\n    }\n  };\n});","lineCount":75,"map":[[2,2,4,0],[2,6,4,4,"WhiteSpace"],[2,16,4,14],[2,19,4,17,"_$$_REQUIRE"],[2,30,4,17],[2,31,4,17,"_dependencyMap"],[2,45,4,17],[2,69,4,17,"TYPE"],[2,73,4,17],[2,74,4,22,"WhiteSpace"],[2,84,4,32],[3,2,5,0],[3,6,5,4,"Semicolon"],[3,15,5,13],[3,18,5,16,"_$$_REQUIRE"],[3,29,5,16],[3,30,5,16,"_dependencyMap"],[3,44,5,16],[3,68,5,16,"TYPE"],[3,72,5,16],[3,73,5,21,"Semicolon"],[3,82,5,30],[4,2,6,0],[4,6,6,4,"LeftCurlyBracket"],[4,22,6,20],[4,25,6,23,"_$$_REQUIRE"],[4,36,6,23],[4,37,6,23,"_dependencyMap"],[4,51,6,23],[4,75,6,23,"TYPE"],[4,79,6,23],[4,80,6,28,"LeftCurlyBracket"],[4,96,6,44],[5,2,7,0],[5,6,7,4,"Delim"],[5,11,7,9],[5,14,7,12,"_$$_REQUIRE"],[5,25,7,12],[5,26,7,12,"_dependencyMap"],[5,40,7,12],[5,64,7,12,"TYPE"],[5,68,7,12],[5,69,7,17,"Delim"],[5,74,7,22],[6,2,8,0],[6,6,8,4,"EXCLAMATIONMARK"],[6,21,8,19],[6,24,8,22],[6,30,8,28],[6,31,8,29],[6,32,8,30],[8,2,10,0],[8,11,10,9,"getOffsetExcludeWS"],[8,29,10,27,"getOffsetExcludeWS"],[8,30,10,27],[8,32,10,30],[9,4,11,4],[9,8,11,8],[9,12,11,12],[9,13,11,13,"scanner"],[9,20,11,20],[9,21,11,21,"tokenIndex"],[9,31,11,31],[9,34,11,34],[9,35,11,35],[9,37,11,37],[10,6,12,8],[10,10,12,12],[10,14,12,16],[10,15,12,17,"scanner"],[10,22,12,24],[10,23,12,25,"lookupType"],[10,33,12,35],[10,34,12,36],[10,35,12,37],[10,36,12,38],[10,37,12,39],[10,42,12,44,"WhiteSpace"],[10,52,12,54],[10,54,12,56],[11,8,13,12],[11,15,13,19],[11,19,13,23],[11,20,13,24,"scanner"],[11,27,13,31],[11,28,13,32,"tokenIndex"],[11,38,13,42],[11,41,13,45],[11,42,13,46],[11,45,14,18],[11,49,14,22],[11,50,14,23,"scanner"],[11,57,14,30],[11,58,14,31,"getTokenStart"],[11,71,14,44],[11,72,14,45],[11,76,14,49],[11,77,14,50,"scanner"],[11,84,14,57],[11,85,14,58,"tokenIndex"],[11,95,14,68],[11,98,14,71],[11,99,14,72],[11,100,14,73],[11,103,15,18],[11,107,15,22],[11,108,15,23,"scanner"],[11,115,15,30],[11,116,15,31,"firstCharOffset"],[11,131,15,46],[12,6,16,8],[13,4,17,4],[14,4,19,4],[14,11,19,11],[14,15,19,15],[14,16,19,16,"scanner"],[14,23,19,23],[14,24,19,24,"tokenStart"],[14,34,19,34],[15,2,20,0],[17,2,22,0],[18,2,23,0],[18,11,23,9,"balanceEnd"],[18,21,23,19,"balanceEnd"],[18,22,23,19],[18,24,23,22],[19,4,24,4],[19,11,24,11],[19,12,24,12],[20,2,25,0],[22,2,27,0],[23,2,28,0],[23,11,28,9,"leftCurlyBracket"],[23,27,28,25,"leftCurlyBracket"],[23,28,28,26,"tokenType"],[23,37,28,35],[23,39,28,37],[24,4,29,4],[24,11,29,11,"tokenType"],[24,20,29,20],[24,25,29,25,"LeftCurlyBracket"],[24,41,29,41],[24,44,29,44],[24,45,29,45],[24,48,29,48],[24,49,29,49],[25,2,30,0],[27,2,32,0],[28,2,33,0],[28,11,33,9,"leftCurlyBracketOrSemicolon"],[28,38,33,36,"leftCurlyBracketOrSemicolon"],[28,39,33,37,"tokenType"],[28,48,33,46],[28,50,33,48],[29,4,34,4],[29,11,34,11,"tokenType"],[29,20,34,20],[29,25,34,25,"LeftCurlyBracket"],[29,41,34,41],[29,45,34,45,"tokenType"],[29,54,34,54],[29,59,34,59,"Semicolon"],[29,68,34,68],[29,71,34,71],[29,72,34,72],[29,75,34,75],[29,76,34,76],[30,2,35,0],[32,2,37,0],[33,2,38,0],[33,11,38,9,"exclamationMarkOrSemicolon"],[33,37,38,35,"exclamationMarkOrSemicolon"],[33,38,38,36,"tokenType"],[33,47,38,45],[33,49,38,47,"source"],[33,55,38,53],[33,57,38,55,"offset"],[33,63,38,61],[33,65,38,63],[34,4,39,4],[34,8,39,8,"tokenType"],[34,17,39,17],[34,22,39,22,"Delim"],[34,27,39,27],[34,31,39,31,"source"],[34,37,39,37],[34,38,39,38,"charCodeAt"],[34,48,39,48],[34,49,39,49,"offset"],[34,55,39,55],[34,56,39,56],[34,61,39,61,"EXCLAMATIONMARK"],[34,76,39,76],[34,78,39,78],[35,6,40,8],[35,13,40,15],[35,14,40,16],[36,4,41,4],[37,4,43,4],[37,11,43,11,"tokenType"],[37,20,43,20],[37,25,43,25,"Semicolon"],[37,34,43,34],[37,37,43,37],[37,38,43,38],[37,41,43,41],[37,42,43,42],[38,2,44,0],[40,2,46,0],[41,2,47,0],[41,11,47,9,"semicolonIncluded"],[41,28,47,26,"semicolonIncluded"],[41,29,47,27,"tokenType"],[41,38,47,36],[41,40,47,38],[42,4,48,4],[42,11,48,11,"tokenType"],[42,20,48,20],[42,25,48,25,"Semicolon"],[42,34,48,34],[42,37,48,37],[42,38,48,38],[42,41,48,41],[42,42,48,42],[43,2,49,0],[44,2,51,0,"module"],[44,8,51,6],[44,9,51,7,"exports"],[44,16,51,14],[44,19,51,17],[45,4,52,4,"name"],[45,8,52,8],[45,10,52,10],[45,15,52,15],[46,4,53,4,"structure"],[46,13,53,13],[46,15,53,15],[47,6,54,8,"value"],[47,11,54,13],[47,13,54,15,"String"],[48,4,55,4],[48,5,55,5],[49,4,56,4,"parse"],[49,9,56,9],[49,11,56,11],[49,20,56,4,"parse"],[49,25,56,9,"parse"],[49,26,56,20,"startToken"],[49,36,56,30],[49,38,56,32,"mode"],[49,42,56,36],[49,44,56,38,"excludeWhiteSpace"],[49,61,56,55],[49,63,56,57],[50,6,57,8],[50,10,57,12,"startOffset"],[50,21,57,23],[50,24,57,26],[50,28,57,30],[50,29,57,31,"scanner"],[50,36,57,38],[50,37,57,39,"getTokenStart"],[50,50,57,52],[50,51,57,53,"startToken"],[50,61,57,63],[50,62,57,64],[51,6,58,8],[51,10,58,12,"endOffset"],[51,19,58,21],[52,6,60,8],[52,10,60,12],[52,11,60,13,"scanner"],[52,18,60,20],[52,19,60,21,"skip"],[52,23,60,25],[52,24,61,12],[52,28,61,16],[52,29,61,17,"scanner"],[52,36,61,24],[52,37,61,25,"getRawLength"],[52,49,61,37],[52,50,61,38,"startToken"],[52,60,61,48],[52,62,61,50,"mode"],[52,66,61,54],[52,70,61,58,"balanceEnd"],[52,80,61,68],[52,81,62,8],[52,82,62,9],[53,6,64,8],[53,10,64,12,"excludeWhiteSpace"],[53,27,64,29],[53,31,64,33],[53,35,64,37],[53,36,64,38,"scanner"],[53,43,64,45],[53,44,64,46,"tokenStart"],[53,54,64,56],[53,57,64,59,"startOffset"],[53,68,64,70],[53,70,64,72],[54,8,65,12,"endOffset"],[54,17,65,21],[54,20,65,24,"getOffsetExcludeWS"],[54,38,65,42],[54,39,65,43,"call"],[54,43,65,47],[54,44,65,48],[54,48,65,52],[54,49,65,53],[55,6,66,8],[55,7,66,9],[55,13,66,15],[56,8,67,12,"endOffset"],[56,17,67,21],[56,20,67,24],[56,24,67,28],[56,25,67,29,"scanner"],[56,32,67,36],[56,33,67,37,"tokenStart"],[56,43,67,47],[57,6,68,8],[58,6,70,8],[58,13,70,15],[59,8,71,12,"type"],[59,12,71,16],[59,14,71,18],[59,19,71,23],[60,8,72,12,"loc"],[60,11,72,15],[60,13,72,17],[60,17,72,21],[60,18,72,22,"getLocation"],[60,29,72,33],[60,30,72,34,"startOffset"],[60,41,72,45],[60,43,72,47,"endOffset"],[60,52,72,56],[60,53,72,57],[61,8,73,12,"value"],[61,13,73,17],[61,15,73,19],[61,19,73,23],[61,20,73,24,"scanner"],[61,27,73,31],[61,28,73,32,"source"],[61,34,73,38],[61,35,73,39,"substring"],[61,44,73,48],[61,45,73,49,"startOffset"],[61,56,73,60],[61,58,73,62,"endOffset"],[61,67,73,71],[62,6,74,8],[62,7,74,9],[63,4,75,4],[63,5,75,5],[64,4,76,4,"generate"],[64,12,76,12],[64,14,76,14],[64,23,76,4,"generate"],[64,31,76,12,"generate"],[64,32,76,23,"node"],[64,36,76,27],[64,38,76,29],[65,6,77,8],[65,10,77,12],[65,11,77,13,"chunk"],[65,16,77,18],[65,17,77,19,"node"],[65,21,77,23],[65,22,77,24,"value"],[65,27,77,29],[65,28,77,30],[66,4,78,4],[66,5,78,5],[67,4,80,4,"mode"],[67,8,80,8],[67,10,80,10],[68,6,81,8,"default"],[68,13,81,15],[68,15,81,17,"balanceEnd"],[68,25,81,27],[69,6,82,8,"leftCurlyBracket"],[69,22,82,24],[69,24,82,26,"leftCurlyBracket"],[69,40,82,42],[70,6,83,8,"leftCurlyBracketOrSemicolon"],[70,33,83,35],[70,35,83,37,"leftCurlyBracketOrSemicolon"],[70,62,83,64],[71,6,84,8,"exclamationMarkOrSemicolon"],[71,32,84,34],[71,34,84,36,"exclamationMarkOrSemicolon"],[71,60,84,62],[72,6,85,8,"semicolonIncluded"],[72,23,85,25],[72,25,85,27,"semicolonIncluded"],[73,4,86,4],[74,2,87,0],[74,3,87,1],[75,0,87,2],[75,3]],"functionMap":{"names":["<global>","getOffsetExcludeWS","balanceEnd","leftCurlyBracket","leftCurlyBracketOrSemicolon","exclamationMarkOrSemicolon","semicolonIncluded","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACS;CDU;AEG;CFE;AGG;CHE;AIG;CJE;AKG;CLM;AMG;CNE;WOO;KPmB;cQC;KRE"}},"type":"js/module"}]}