{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":14},"end":{"line":2,"column":55,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8="}},{"name":"../PlatformChecker","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":189},"end":{"line":6,"column":43,"index":232}}],"key":"qXble9ybAlViAQKWCIOx+hfaZjE="}},{"name":"./useSharedValue","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":429},"end":{"line":14,"column":50,"index":479}},{"start":{"line":14,"column":0,"index":429},"end":{"line":14,"column":50,"index":479}}],"key":"6yldmc0IldDX63zJLZukWRMfHng="}},{"name":"./useEvent","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":390},"end":{"line":13,"column":38,"index":428}}],"key":"agcKO4KjKVVd8qmhkCqgPk8SZT0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useScrollViewOffset = void 0;\n  var _react = _$$_REQUIRE(_dependencyMap[0], \"react\");\n  var IS_WEB = (0, _$$_REQUIRE(_dependencyMap[1], \"../PlatformChecker\").isWeb)();\n\n  /**\n   * Lets you synchronously get the current offset of a `ScrollView`.\n   *\n   * @param animatedRef - An [animated\n   *   ref](https://docs.swmansion.com/react-native-reanimated/docs/core/useAnimatedRef)\n   *   attached to an Animated.ScrollView component.\n   * @returns A shared value which holds the current offset of the `ScrollView`.\n   * @see https://docs.swmansion.com/react-native-reanimated/docs/scroll/useScrollViewOffset\n   */\n  var useScrollViewOffset = exports.useScrollViewOffset = IS_WEB ? useScrollViewOffsetWeb : useScrollViewOffsetNative;\n  var _worklet_15008405174449_init_data = {\n    code: \"function reactNativeReanimated_useScrollViewOffsetTs1(){const{animatedRef,getWebScrollableElement,offset}=this.__closure;if(animatedRef){const element=getWebScrollableElement(animatedRef.current);offset.value=element.scrollLeft===0?element.scrollTop:element.scrollLeft;}}\",\n    location: \"/Users/chris/Desktop/Development/BlueWallet/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_useScrollViewOffsetTs1\\\",\\\"animatedRef\\\",\\\"getWebScrollableElement\\\",\\\"offset\\\",\\\"__closure\\\",\\\"element\\\",\\\"current\\\",\\\"value\\\",\\\"scrollLeft\\\",\\\"scrollTop\\\"],\\\"sources\\\":[\\\"/Users/chris/Desktop/Development/BlueWallet/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts\\\"],\\\"mappings\\\":\\\"AAqCmC,SAAAA,4CAAMA,CAAA,QAAAC,WAAA,CAAAC,uBAAA,CAAAC,MAAA,OAAAC,SAAA,CAErC,GAAIH,WAAW,CAAE,CACf,KAAM,CAAAI,OAAO,CAAGH,uBAAuB,CAACD,WAAW,CAACK,OAAO,CAAC,CAE5DH,MAAM,CAACI,KAAK,CACVF,OAAO,CAACG,UAAU,GAAK,CAAC,CAAGH,OAAO,CAACI,SAAS,CAAGJ,OAAO,CAACG,UAAU,CACrE,CAEF\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.18.0\"\n  };\n  function useScrollViewOffsetWeb(animatedRef, providedOffset) {\n    var internalOffset = (0, _$$_REQUIRE(_dependencyMap[2], \"./useSharedValue\").useSharedValue)(0);\n    var offset = (0, _react.useRef)(providedOffset != null ? providedOffset : internalOffset).current;\n    var eventHandler = (0, _react.useCallback)(function () {\n      var _e = [new global.Error(), -4, -27];\n      var reactNativeReanimated_useScrollViewOffsetTs1 = function reactNativeReanimated_useScrollViewOffsetTs1() {\n        if (animatedRef) {\n          var element = getWebScrollableElement(animatedRef.current);\n          // scrollLeft is the X axis scrolled offset, works properly also with RTL layout\n          offset.value = element.scrollLeft === 0 ? element.scrollTop : element.scrollLeft;\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      };\n      reactNativeReanimated_useScrollViewOffsetTs1.__closure = {\n        animatedRef: animatedRef,\n        getWebScrollableElement: getWebScrollableElement,\n        offset: offset\n      };\n      reactNativeReanimated_useScrollViewOffsetTs1.__workletHash = 15008405174449;\n      reactNativeReanimated_useScrollViewOffsetTs1.__initData = _worklet_15008405174449_init_data;\n      reactNativeReanimated_useScrollViewOffsetTs1.__stackDetails = _e;\n      return reactNativeReanimated_useScrollViewOffsetTs1;\n    }(), [animatedRef, animatedRef == null ? void 0 : animatedRef.current]);\n    (0, _react.useEffect)(function () {\n      var element = animatedRef != null && animatedRef.current ? getWebScrollableElement(animatedRef.current) : null;\n      if (element) {\n        element.addEventListener('scroll', eventHandler);\n      }\n      return function () {\n        if (element) {\n          element.removeEventListener('scroll', eventHandler);\n        }\n      };\n      // React here has a problem with `animatedRef.current` since a Ref .current\n      // field shouldn't be used as a dependency. However, in this case we have\n      // to do it this way.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animatedRef, animatedRef == null ? void 0 : animatedRef.current, eventHandler]);\n    return offset;\n  }\n  var _worklet_11951456483684_init_data = {\n    code: \"function reactNativeReanimated_useScrollViewOffsetTs2(event){const{offset}=this.__closure;offset.value=event.contentOffset.x===0?event.contentOffset.y:event.contentOffset.x;}\",\n    location: \"/Users/chris/Desktop/Development/BlueWallet/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts\",\n    sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"reactNativeReanimated_useScrollViewOffsetTs2\\\",\\\"event\\\",\\\"offset\\\",\\\"__closure\\\",\\\"value\\\",\\\"contentOffset\\\",\\\"x\\\",\\\"y\\\"],\\\"sources\\\":[\\\"/Users/chris/Desktop/Development/BlueWallet/node_modules/react-native-reanimated/src/hook/useScrollViewOffset.ts\\\"],\\\"mappings\\\":\\\"AA8EI,QAAC,CAAAA,4CAAiCA,CAAAC,KAAA,QAAAC,MAAA,OAAAC,SAAA,CAEhCD,MAAM,CAACE,KAAK,CACVH,KAAK,CAACI,aAAa,CAACC,CAAC,GAAK,CAAC,CACvBL,KAAK,CAACI,aAAa,CAACE,CAAC,CACrBN,KAAK,CAACI,aAAa,CAACC,CAAC,CAC7B\\\",\\\"ignoreList\\\":[]}\",\n    version: \"3.18.0\"\n  };\n  function useScrollViewOffsetNative(animatedRef, providedOffset) {\n    var internalOffset = (0, _$$_REQUIRE(_dependencyMap[2], \"./useSharedValue\").useSharedValue)(0);\n    var offset = (0, _react.useRef)(providedOffset != null ? providedOffset : internalOffset).current;\n    var eventHandler = (0, _$$_REQUIRE(_dependencyMap[3], \"./useEvent\").useEvent)(function () {\n      var _e = [new global.Error(), -2, -27];\n      var reactNativeReanimated_useScrollViewOffsetTs2 = function reactNativeReanimated_useScrollViewOffsetTs2(event) {\n        offset.value = event.contentOffset.x === 0 ? event.contentOffset.y : event.contentOffset.x;\n      };\n      reactNativeReanimated_useScrollViewOffsetTs2.__closure = {\n        offset: offset\n      };\n      reactNativeReanimated_useScrollViewOffsetTs2.__workletHash = 11951456483684;\n      reactNativeReanimated_useScrollViewOffsetTs2.__initData = _worklet_11951456483684_init_data;\n      reactNativeReanimated_useScrollViewOffsetTs2.__stackDetails = _e;\n      return reactNativeReanimated_useScrollViewOffsetTs2;\n    }(), scrollNativeEventNames\n    // Read https://github.com/software-mansion/react-native-reanimated/pull/5056\n    // for more information about this cast.\n    );\n    (0, _react.useEffect)(function () {\n      var _animatedRef$getTag;\n      var elementTag = (_animatedRef$getTag = animatedRef == null ? void 0 : animatedRef.getTag()) != null ? _animatedRef$getTag : null;\n      if (elementTag) {\n        eventHandler.workletEventHandler.registerForEvents(elementTag);\n      }\n      return function () {\n        if (elementTag) {\n          eventHandler.workletEventHandler.unregisterFromEvents(elementTag);\n        }\n      };\n      // React here has a problem with `animatedRef.current` since a Ref .current\n      // field shouldn't be used as a dependency. However, in this case we have\n      // to do it this way.\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [animatedRef, animatedRef == null ? void 0 : animatedRef.current, eventHandler]);\n    return offset;\n  }\n  function getWebScrollableElement(scrollComponent) {\n    var _ref;\n    return (_ref = scrollComponent == null ? void 0 : scrollComponent.getScrollableNode()) != null ? _ref : scrollComponent;\n  }\n  var scrollNativeEventNames = ['onScroll', 'onScrollBeginDrag', 'onScrollEndDrag', 'onMomentumScrollBegin', 'onMomentumScrollEnd'];\n});","lineCount":115,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"useScrollViewOffset"],[7,29,1,13],[8,2,2,0],[8,6,2,0,"_react"],[8,12,2,0],[8,15,2,0,"_$$_REQUIRE"],[8,26,2,0],[8,27,2,0,"_dependencyMap"],[8,41,2,0],[9,2,16,0],[9,6,16,6,"IS_WEB"],[9,12,16,12],[9,15,16,15],[9,19,16,15,"isWeb"],[9,49,16,15],[9,50,16,15,"isWeb"],[9,77,16,20],[9,79,16,21],[9,80,16,22],[11,2,18,0],[12,0,19,0],[13,0,20,0],[14,0,21,0],[15,0,22,0],[16,0,23,0],[17,0,24,0],[18,0,25,0],[19,0,26,0],[20,2,27,7],[20,6,27,13,"useScrollViewOffset"],[20,25,27,32],[20,28,27,32,"exports"],[20,35,27,32],[20,36,27,32,"useScrollViewOffset"],[20,55,27,32],[20,58,27,35,"IS_WEB"],[20,64,27,41],[20,67,28,4,"useScrollViewOffsetWeb"],[20,89,28,26],[20,92,29,4,"useScrollViewOffsetNative"],[20,117,29,29],[21,2,29,30],[21,6,29,30,"_worklet_15008405174449_init_data"],[21,39,29,30],[22,4,29,30,"code"],[22,8,29,30],[23,4,29,30,"location"],[23,12,29,30],[24,4,29,30,"sourceMap"],[24,13,29,30],[25,4,29,30,"version"],[25,11,29,30],[26,2,29,30],[27,2,31,0],[27,11,31,9,"useScrollViewOffsetWeb"],[27,33,31,31,"useScrollViewOffsetWeb"],[27,34,32,2,"animatedRef"],[27,45,32,53],[27,47,33,2,"providedOffset"],[27,61,33,38],[27,63,34,23],[28,4,35,2],[28,8,35,8,"internalOffset"],[28,22,35,22],[28,25,35,25],[28,29,35,25,"useSharedValue"],[28,59,35,25],[28,60,35,25,"useSharedValue"],[28,94,35,39],[28,96,35,40],[28,97,35,41],[28,98,35,42],[29,4,36,2],[29,8,36,8,"offset"],[29,14,36,14],[29,17,36,17],[29,21,36,17,"useRef"],[29,34,36,23],[29,36,36,24,"providedOffset"],[29,50,36,38],[29,61,36,24,"providedOffset"],[29,75,36,38],[29,78,36,42,"internalOffset"],[29,92,36,56],[29,93,36,57],[29,94,36,58,"current"],[29,101,36,65],[30,4,38,2],[30,8,38,8,"eventHandler"],[30,20,38,20],[30,23,38,23],[30,27,38,23,"useCallback"],[30,45,38,34],[30,47,38,35],[31,6,38,35],[31,10,38,35,"_e"],[31,12,38,35],[31,20,38,35,"global"],[31,26,38,35],[31,27,38,35,"Error"],[31,32,38,35],[32,6,38,35],[32,10,38,35,"reactNativeReanimated_useScrollViewOffsetTs1"],[32,54,38,35],[32,66,38,35,"reactNativeReanimated_useScrollViewOffsetTs1"],[32,111,38,35],[32,113,38,41],[33,8,40,4],[33,12,40,8,"animatedRef"],[33,23,40,19],[33,25,40,21],[34,10,41,6],[34,14,41,12,"element"],[34,21,41,19],[34,24,41,22,"getWebScrollableElement"],[34,47,41,45],[34,48,41,46,"animatedRef"],[34,59,41,57],[34,60,41,58,"current"],[34,67,41,65],[34,68,41,66],[35,10,42,6],[36,10,43,6,"offset"],[36,16,43,12],[36,17,43,13,"value"],[36,22,43,18],[36,25,44,8,"element"],[36,32,44,15],[36,33,44,16,"scrollLeft"],[36,43,44,26],[36,48,44,31],[36,49,44,32],[36,52,44,35,"element"],[36,59,44,42],[36,60,44,43,"scrollTop"],[36,69,44,52],[36,72,44,55,"element"],[36,79,44,62],[36,80,44,63,"scrollLeft"],[36,90,44,73],[37,8,45,4],[38,8,46,4],[39,6,47,2],[39,7,47,3],[40,6,47,3,"reactNativeReanimated_useScrollViewOffsetTs1"],[40,50,47,3],[40,51,47,3,"__closure"],[40,60,47,3],[41,8,47,3,"animatedRef"],[41,19,47,3],[41,21,40,8,"animatedRef"],[41,32,40,19],[42,8,40,19,"getWebScrollableElement"],[42,31,40,19],[42,33,41,22,"getWebScrollableElement"],[42,56,41,45],[43,8,41,45,"offset"],[43,14,41,45],[43,16,43,6,"offset"],[44,6,43,12],[45,6,43,12,"reactNativeReanimated_useScrollViewOffsetTs1"],[45,50,43,12],[45,51,43,12,"__workletHash"],[45,64,43,12],[46,6,43,12,"reactNativeReanimated_useScrollViewOffsetTs1"],[46,50,43,12],[46,51,43,12,"__initData"],[46,61,43,12],[46,64,43,12,"_worklet_15008405174449_init_data"],[46,97,43,12],[47,6,43,12,"reactNativeReanimated_useScrollViewOffsetTs1"],[47,50,43,12],[47,51,43,12,"__stackDetails"],[47,65,43,12],[47,68,43,12,"_e"],[47,70,43,12],[48,6,43,12],[48,13,43,12,"reactNativeReanimated_useScrollViewOffsetTs1"],[48,57,43,12],[49,4,43,12],[49,5,38,35],[49,9,47,5],[49,10,47,6,"animatedRef"],[49,21,47,17],[49,23,47,19,"animatedRef"],[49,34,47,30],[49,54,47,19,"animatedRef"],[49,65,47,30],[49,66,47,32,"current"],[49,73,47,39],[49,74,47,40],[49,75,47,41],[50,4,49,2],[50,8,49,2,"useEffect"],[50,24,49,11],[50,26,49,12],[50,38,49,18],[51,6,50,4],[51,10,50,10,"element"],[51,17,50,17],[51,20,50,20,"animatedRef"],[51,31,50,31],[51,43,50,20,"animatedRef"],[51,54,50,31],[51,55,50,33,"current"],[51,62,50,40],[51,65,51,8,"getWebScrollableElement"],[51,88,51,31],[51,89,51,32,"animatedRef"],[51,100,51,43],[51,101,51,44,"current"],[51,108,51,51],[51,109,51,52],[51,112,52,8],[51,116,52,12],[52,6,54,4],[52,10,54,8,"element"],[52,17,54,15],[52,19,54,17],[53,8,55,6,"element"],[53,15,55,13],[53,16,55,14,"addEventListener"],[53,32,55,30],[53,33,55,31],[53,41,55,39],[53,43,55,41,"eventHandler"],[53,55,55,53],[53,56,55,54],[54,6,56,4],[55,6,57,4],[55,13,57,11],[55,25,57,17],[56,8,58,6],[56,12,58,10,"element"],[56,19,58,17],[56,21,58,19],[57,10,59,8,"element"],[57,17,59,15],[57,18,59,16,"removeEventListener"],[57,37,59,35],[57,38,59,36],[57,46,59,44],[57,48,59,46,"eventHandler"],[57,60,59,58],[57,61,59,59],[58,8,60,6],[59,6,61,4],[59,7,61,5],[60,6,62,4],[61,6,63,4],[62,6,64,4],[63,6,65,4],[64,4,66,2],[64,5,66,3],[64,7,66,5],[64,8,66,6,"animatedRef"],[64,19,66,17],[64,21,66,19,"animatedRef"],[64,32,66,30],[64,52,66,19,"animatedRef"],[64,63,66,30],[64,64,66,32,"current"],[64,71,66,39],[64,73,66,41,"eventHandler"],[64,85,66,53],[64,86,66,54],[64,87,66,55],[65,4,68,2],[65,11,68,9,"offset"],[65,17,68,15],[66,2,69,0],[67,2,69,1],[67,6,69,1,"_worklet_11951456483684_init_data"],[67,39,69,1],[68,4,69,1,"code"],[68,8,69,1],[69,4,69,1,"location"],[69,12,69,1],[70,4,69,1,"sourceMap"],[70,13,69,1],[71,4,69,1,"version"],[71,11,69,1],[72,2,69,1],[73,2,71,0],[73,11,71,9,"useScrollViewOffsetNative"],[73,36,71,34,"useScrollViewOffsetNative"],[73,37,72,2,"animatedRef"],[73,48,72,53],[73,50,73,2,"providedOffset"],[73,64,73,38],[73,66,74,23],[74,4,75,2],[74,8,75,8,"internalOffset"],[74,22,75,22],[74,25,75,25],[74,29,75,25,"useSharedValue"],[74,59,75,25],[74,60,75,25,"useSharedValue"],[74,94,75,39],[74,96,75,40],[74,97,75,41],[74,98,75,42],[75,4,76,2],[75,8,76,8,"offset"],[75,14,76,14],[75,17,76,17],[75,21,76,17,"useRef"],[75,34,76,23],[75,36,76,24,"providedOffset"],[75,50,76,38],[75,61,76,24,"providedOffset"],[75,75,76,38],[75,78,76,42,"internalOffset"],[75,92,76,56],[75,93,76,57],[75,94,76,58,"current"],[75,101,76,65],[76,4,78,2],[76,8,78,8,"eventHandler"],[76,20,78,20],[76,23,78,23],[76,27,78,23,"useEvent"],[76,57,78,23],[76,58,78,23,"useEvent"],[76,80,78,31],[76,82,79,4],[77,6,79,4],[77,10,79,4,"_e"],[77,12,79,4],[77,20,79,4,"global"],[77,26,79,4],[77,27,79,4,"Error"],[77,32,79,4],[78,6,79,4],[78,10,79,4,"reactNativeReanimated_useScrollViewOffsetTs2"],[78,54,79,4],[78,66,79,4,"reactNativeReanimated_useScrollViewOffsetTs2"],[78,111,79,5,"event"],[78,116,79,33],[78,118,79,38],[79,8,81,6,"offset"],[79,14,81,12],[79,15,81,13,"value"],[79,20,81,18],[79,23,82,8,"event"],[79,28,82,13],[79,29,82,14,"contentOffset"],[79,42,82,27],[79,43,82,28,"x"],[79,44,82,29],[79,49,82,34],[79,50,82,35],[79,53,83,12,"event"],[79,58,83,17],[79,59,83,18,"contentOffset"],[79,72,83,31],[79,73,83,32,"y"],[79,74,83,33],[79,77,84,12,"event"],[79,82,84,17],[79,83,84,18,"contentOffset"],[79,96,84,31],[79,97,84,32,"x"],[79,98,84,33],[80,6,85,4],[80,7,85,5],[81,6,85,5,"reactNativeReanimated_useScrollViewOffsetTs2"],[81,50,85,5],[81,51,85,5,"__closure"],[81,60,85,5],[82,8,85,5,"offset"],[82,14,85,5],[82,16,81,6,"offset"],[83,6,81,12],[84,6,81,12,"reactNativeReanimated_useScrollViewOffsetTs2"],[84,50,81,12],[84,51,81,12,"__workletHash"],[84,64,81,12],[85,6,81,12,"reactNativeReanimated_useScrollViewOffsetTs2"],[85,50,81,12],[85,51,81,12,"__initData"],[85,61,81,12],[85,64,81,12,"_worklet_11951456483684_init_data"],[85,97,81,12],[86,6,81,12,"reactNativeReanimated_useScrollViewOffsetTs2"],[86,50,81,12],[86,51,81,12,"__stackDetails"],[86,65,81,12],[86,68,81,12,"_e"],[86,70,81,12],[87,6,81,12],[87,13,81,12,"reactNativeReanimated_useScrollViewOffsetTs2"],[87,57,81,12],[88,4,81,12],[88,5,79,4],[88,9,86,4,"scrollNativeEventNames"],[89,4,87,4],[90,4,88,4],[91,4,89,2],[91,5,89,61],[92,4,91,2],[92,8,91,2,"useEffect"],[92,24,91,11],[92,26,91,12],[92,38,91,18],[93,6,91,18],[93,10,91,18,"_animatedRef$getTag"],[93,29,91,18],[94,6,92,4],[94,10,92,10,"elementTag"],[94,20,92,20],[94,24,92,20,"_animatedRef$getTag"],[94,43,92,20],[94,46,92,23,"animatedRef"],[94,57,92,34],[94,77,92,23,"animatedRef"],[94,88,92,34],[94,89,92,36,"getTag"],[94,95,92,42],[94,96,92,43],[94,97,92,44],[94,109,92,44,"_animatedRef$getTag"],[94,128,92,44],[94,131,92,48],[94,135,92,52],[95,6,94,4],[95,10,94,8,"elementTag"],[95,20,94,18],[95,22,94,20],[96,8,95,6,"eventHandler"],[96,20,95,18],[96,21,95,19,"workletEventHandler"],[96,40,95,38],[96,41,95,39,"registerForEvents"],[96,58,95,56],[96,59,95,57,"elementTag"],[96,69,95,67],[96,70,95,68],[97,6,96,4],[98,6,97,4],[98,13,97,11],[98,25,97,17],[99,8,98,6],[99,12,98,10,"elementTag"],[99,22,98,20],[99,24,98,22],[100,10,99,8,"eventHandler"],[100,22,99,20],[100,23,99,21,"workletEventHandler"],[100,42,99,40],[100,43,99,41,"unregisterFromEvents"],[100,63,99,61],[100,64,99,62,"elementTag"],[100,74,99,72],[100,75,99,73],[101,8,100,6],[102,6,101,4],[102,7,101,5],[103,6,102,4],[104,6,103,4],[105,6,104,4],[106,6,105,4],[107,4,106,2],[107,5,106,3],[107,7,106,5],[107,8,106,6,"animatedRef"],[107,19,106,17],[107,21,106,19,"animatedRef"],[107,32,106,30],[107,52,106,19,"animatedRef"],[107,63,106,30],[107,64,106,32,"current"],[107,71,106,39],[107,73,106,41,"eventHandler"],[107,85,106,53],[107,86,106,54],[107,87,106,55],[108,4,108,2],[108,11,108,9,"offset"],[108,17,108,15],[109,2,109,0],[110,2,111,0],[110,11,111,9,"getWebScrollableElement"],[110,34,111,32,"getWebScrollableElement"],[110,35,112,2,"scrollComponent"],[110,50,112,44],[110,52,113,15],[111,4,113,15],[111,8,113,15,"_ref"],[111,12,113,15],[112,4,114,2],[112,12,114,2,"_ref"],[112,16,114,2],[112,19,115,5,"scrollComponent"],[112,34,115,20],[112,54,115,5,"scrollComponent"],[112,69,115,20],[112,70,115,22,"getScrollableNode"],[112,87,115,39],[112,88,115,40],[112,89,115,41],[112,101,115,41,"_ref"],[112,105,115,41],[112,108,116,4,"scrollComponent"],[112,123,116,19],[113,2,118,0],[114,2,120,0],[114,6,120,6,"scrollNativeEventNames"],[114,28,120,28],[114,31,120,31],[114,32,121,2],[114,42,121,12],[114,44,122,2],[114,63,122,21],[114,65,123,2],[114,82,123,19],[114,84,124,2],[114,107,124,25],[114,109,125,2],[114,130,125,23],[114,131,126,1],[115,0,126,2],[115,3]],"functionMap":{"names":["<global>","useScrollViewOffsetWeb","eventHandler","useEffect$argument_0","<anonymous>","useScrollViewOffsetNative","useEvent$argument_0","getWebScrollableElement"],"mappings":"AAA;AC8B;mCCO;GDS;YEE;WCQ;KDI;GFK;CDG;AKE;ICQ;KDM;YFM;WCM;KDI;GEK;CLG;AOE;CPO"}},"type":"js/module"}]}