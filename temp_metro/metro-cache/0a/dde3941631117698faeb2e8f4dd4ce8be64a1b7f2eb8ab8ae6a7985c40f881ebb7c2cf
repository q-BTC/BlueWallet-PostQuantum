{"dependencies":[{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}},{"start":{"line":1,"column":12,"index":12},"end":{"line":1,"column":30,"index":30}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // add inputs until we reach or surpass the target value (or deplete)\n  // worst-case: O(n)\n  module.exports = function accumulative(utxos, outputs, feeRate) {\n    if (!isFinite(_$$_REQUIRE(_dependencyMap[0], \"./utils\").positiveNumOrNaN(feeRate))) return {};\n    var bytesAccum = _$$_REQUIRE(_dependencyMap[0], \"./utils\").transactionBytes([], outputs);\n    var inAccum = 0;\n    var inputs = [];\n    var outAccum = _$$_REQUIRE(_dependencyMap[0], \"./utils\").sumOrNaN(outputs);\n    for (var i = 0; i < utxos.length; ++i) {\n      var utxo = utxos[i];\n      var utxoBytes = _$$_REQUIRE(_dependencyMap[0], \"./utils\").inputBytes(utxo);\n      var utxoFee = feeRate * utxoBytes;\n      var utxoValue = _$$_REQUIRE(_dependencyMap[0], \"./utils\").uintOrNaN(utxo.value);\n\n      // skip detrimental input\n      if (utxoFee > utxo.value) {\n        if (i === utxos.length - 1) return {\n          fee: feeRate * (bytesAccum + utxoBytes)\n        };\n        continue;\n      }\n      bytesAccum += utxoBytes;\n      inAccum += utxoValue;\n      inputs.push(utxo);\n      var fee = feeRate * bytesAccum;\n\n      // go again?\n      if (inAccum < outAccum + fee) continue;\n      return _$$_REQUIRE(_dependencyMap[0], \"./utils\").finalize(inputs, outputs, feeRate);\n    }\n    return {\n      fee: feeRate * bytesAccum\n    };\n  };\n});","lineCount":36,"map":[[2,2,3,0],[3,2,4,0],[4,2,5,0,"module"],[4,8,5,6],[4,9,5,7,"exports"],[4,16,5,14],[4,19,5,17],[4,28,5,26,"accumulative"],[4,40,5,38,"accumulative"],[4,41,5,40,"utxos"],[4,46,5,45],[4,48,5,47,"outputs"],[4,55,5,54],[4,57,5,56,"feeRate"],[4,64,5,63],[4,66,5,65],[5,4,6,2],[5,8,6,6],[5,9,6,7,"isFinite"],[5,17,6,15],[5,18,6,16,"_$$_REQUIRE"],[5,29,6,16],[5,30,6,16,"_dependencyMap"],[5,44,6,16],[5,60,6,22,"positiveNumOrNaN"],[5,76,6,38],[5,77,6,39,"feeRate"],[5,84,6,46],[5,85,6,47],[5,86,6,48],[5,88,6,50],[5,95,6,57],[5,96,6,58],[5,97,6,59],[6,4,8,2],[6,8,8,6,"bytesAccum"],[6,18,8,16],[6,21,8,19,"_$$_REQUIRE"],[6,32,8,19],[6,33,8,19,"_dependencyMap"],[6,47,8,19],[6,63,8,25,"transactionBytes"],[6,79,8,41],[6,80,8,42],[6,82,8,44],[6,84,8,46,"outputs"],[6,91,8,53],[6,92,8,54],[7,4,10,2],[7,8,10,6,"inAccum"],[7,15,10,13],[7,18,10,16],[7,19,10,17],[8,4,11,2],[8,8,11,6,"inputs"],[8,14,11,12],[8,17,11,15],[8,19,11,17],[9,4,12,2],[9,8,12,6,"outAccum"],[9,16,12,14],[9,19,12,17,"_$$_REQUIRE"],[9,30,12,17],[9,31,12,17,"_dependencyMap"],[9,45,12,17],[9,61,12,23,"sumOrNaN"],[9,69,12,31],[9,70,12,32,"outputs"],[9,77,12,39],[9,78,12,40],[10,4,14,2],[10,9,14,7],[10,13,14,11,"i"],[10,14,14,12],[10,17,14,15],[10,18,14,16],[10,20,14,18,"i"],[10,21,14,19],[10,24,14,22,"utxos"],[10,29,14,27],[10,30,14,28,"length"],[10,36,14,34],[10,38,14,36],[10,40,14,38,"i"],[10,41,14,39],[10,43,14,41],[11,6,15,4],[11,10,15,8,"utxo"],[11,14,15,12],[11,17,15,15,"utxos"],[11,22,15,20],[11,23,15,21,"i"],[11,24,15,22],[11,25,15,23],[12,6,16,4],[12,10,16,8,"utxoBytes"],[12,19,16,17],[12,22,16,20,"_$$_REQUIRE"],[12,33,16,20],[12,34,16,20,"_dependencyMap"],[12,48,16,20],[12,64,16,26,"inputBytes"],[12,74,16,36],[12,75,16,37,"utxo"],[12,79,16,41],[12,80,16,42],[13,6,17,4],[13,10,17,8,"utxoFee"],[13,17,17,15],[13,20,17,18,"feeRate"],[13,27,17,25],[13,30,17,28,"utxoBytes"],[13,39,17,37],[14,6,18,4],[14,10,18,8,"utxoValue"],[14,19,18,17],[14,22,18,20,"_$$_REQUIRE"],[14,33,18,20],[14,34,18,20,"_dependencyMap"],[14,48,18,20],[14,64,18,26,"uintOrNaN"],[14,73,18,35],[14,74,18,36,"utxo"],[14,78,18,40],[14,79,18,41,"value"],[14,84,18,46],[14,85,18,47],[16,6,20,4],[17,6,21,4],[17,10,21,8,"utxoFee"],[17,17,21,15],[17,20,21,18,"utxo"],[17,24,21,22],[17,25,21,23,"value"],[17,30,21,28],[17,32,21,30],[18,8,22,6],[18,12,22,10,"i"],[18,13,22,11],[18,18,22,16,"utxos"],[18,23,22,21],[18,24,22,22,"length"],[18,30,22,28],[18,33,22,31],[18,34,22,32],[18,36,22,34],[18,43,22,41],[19,10,22,43,"fee"],[19,13,22,46],[19,15,22,48,"feeRate"],[19,22,22,55],[19,26,22,59,"bytesAccum"],[19,36,22,69],[19,39,22,72,"utxoBytes"],[19,48,22,81],[20,8,22,83],[20,9,22,84],[21,8,23,6],[22,6,24,4],[23,6,26,4,"bytesAccum"],[23,16,26,14],[23,20,26,18,"utxoBytes"],[23,29,26,27],[24,6,27,4,"inAccum"],[24,13,27,11],[24,17,27,15,"utxoValue"],[24,26,27,24],[25,6,28,4,"inputs"],[25,12,28,10],[25,13,28,11,"push"],[25,17,28,15],[25,18,28,16,"utxo"],[25,22,28,20],[25,23,28,21],[26,6,30,4],[26,10,30,8,"fee"],[26,13,30,11],[26,16,30,14,"feeRate"],[26,23,30,21],[26,26,30,24,"bytesAccum"],[26,36,30,34],[28,6,32,4],[29,6,33,4],[29,10,33,8,"inAccum"],[29,17,33,15],[29,20,33,18,"outAccum"],[29,28,33,26],[29,31,33,29,"fee"],[29,34,33,32],[29,36,33,34],[30,6,35,4],[30,13,35,11,"_$$_REQUIRE"],[30,24,35,11],[30,25,35,11,"_dependencyMap"],[30,39,35,11],[30,55,35,17,"finalize"],[30,63,35,25],[30,64,35,26,"inputs"],[30,70,35,32],[30,72,35,34,"outputs"],[30,79,35,41],[30,81,35,43,"feeRate"],[30,88,35,50],[30,89,35,51],[31,4,36,2],[32,4,38,2],[32,11,38,9],[33,6,38,11,"fee"],[33,9,38,14],[33,11,38,16,"feeRate"],[33,18,38,23],[33,21,38,26,"bytesAccum"],[34,4,38,37],[34,5,38,38],[35,2,39,0],[35,3,39,1],[36,0,39,1],[36,3]],"functionMap":{"names":["<global>","accumulative"],"mappings":"AAA;iBCI;CDkC"}},"type":"js/module"}]}