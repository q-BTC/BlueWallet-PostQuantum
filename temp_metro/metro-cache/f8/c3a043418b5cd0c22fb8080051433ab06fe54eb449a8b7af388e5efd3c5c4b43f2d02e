{"dependencies":[{"name":"react-native-randombytes","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":14},"end":{"line":3,"column":54,"index":68}},{"start":{"line":3,"column":0,"index":14},"end":{"line":3,"column":54,"index":68}}],"key":"zLR+gv+6NcenIuKwnKr3rVWWnro="}},{"name":"create-hash","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":26,"column":36,"index":768},"end":{"line":26,"column":58,"index":790}}],"key":"7Wxhpesb6O8KtkMXbqnF6GdF3fo="}},{"name":"create-hmac","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":27,"column":36,"index":827},"end":{"line":27,"column":58,"index":849}}],"key":"Hb4O2fQ/eTYGCsl146rR3M0LxJk="}},{"name":"browserify-sign/algos","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":98,"index":949},"end":{"line":29,"column":130,"index":981}}],"key":"NDj22/aFRkxzKDIZ0uV/h8ik138="}},{"name":"pbkdf2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":34,"column":8,"index":1045},"end":{"line":34,"column":25,"index":1062}},{"start":{"line":34,"column":8,"index":1045},"end":{"line":34,"column":25,"index":1062}}],"key":"1/dbhwRh6o3OR9626P/2VdN0D7E="}},{"name":"browserify-cipher","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":38,"column":10,"index":1134},"end":{"line":38,"column":38,"index":1162}}],"key":"lm3DN2qqXAlPXt4LbnZ4XlPivcA="}},{"name":"diffie-hellman","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":54,"column":9,"index":1400},"end":{"line":54,"column":34,"index":1425}}],"key":"he3OnHYxMiUllxW9yvzh7ixbzok="}},{"name":"browserify-sign","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":65,"column":11,"index":1615},"end":{"line":65,"column":37,"index":1641}}],"key":"vKfPgfuBKkzzRxYzEjZ/mt5I+T8="}},{"name":"create-ecdh","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":75,"column":21,"index":1779},"end":{"line":75,"column":43,"index":1801}}],"key":"fzG3R0yrmZz/sxKcsbE1cId9ua8="}},{"name":"public-encrypt","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":77,"column":20,"index":1823},"end":{"line":77,"column":45,"index":1848}}],"key":"ObDc1zC42Dgo9VREZ2HCbiajMVs="}},{"name":"randomfill","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":88,"column":9,"index":2006},"end":{"line":88,"column":30,"index":2027}},{"start":{"line":88,"column":9,"index":2006},"end":{"line":88,"column":30,"index":2027}}],"key":"7gyKLP16FpesyFP0HPLfhcd+xJU="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = _$$_REQUIRE(_dependencyMap[0], \"react-native-randombytes\").randomBytes;\n\n  // implement window.getRandomValues(), for packages that rely on it\n  if (typeof window === 'object') {\n    if (!window.crypto) window.crypto = {};\n    if (!window.crypto.getRandomValues) {\n      window.crypto.getRandomValues = function getRandomValues(arr) {\n        var orig = arr;\n        if (arr.byteLength != arr.length) {\n          // Get access to the underlying raw bytes\n          arr = new Uint8Array(arr.buffer);\n        }\n        var bytes = (0, _$$_REQUIRE(_dependencyMap[0], \"react-native-randombytes\").randomBytes)(arr.length);\n        for (var i = 0; i < bytes.length; i++) {\n          arr[i] = bytes[i];\n        }\n        return orig;\n      };\n    }\n  }\n  exports.createHash = exports.Hash = _$$_REQUIRE(_dependencyMap[1], \"create-hash\");\n  exports.createHmac = exports.Hmac = _$$_REQUIRE(_dependencyMap[2], \"create-hmac\");\n  var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(Object.keys(_$$_REQUIRE(_dependencyMap[3], \"browserify-sign/algos\")));\n  exports.getHashes = function () {\n    return hashes;\n  };\n  exports.pbkdf2 = _$$_REQUIRE(_dependencyMap[4], \"pbkdf2\").pbkdf2;\n  exports.pbkdf2Sync = _$$_REQUIRE(_dependencyMap[4], \"pbkdf2\").pbkdf2Sync;\n  ['Cipher', 'createCipher', 'Cipheriv', 'createCipheriv', 'Decipher', 'createDecipher', 'Decipheriv', 'createDecipheriv', 'getCiphers', 'listCiphers'].forEach(function (key) {\n    exports[key] = _$$_REQUIRE(_dependencyMap[5], \"browserify-cipher\")[key];\n  });\n  ['DiffieHellmanGroup', 'createDiffieHellmanGroup', 'getDiffieHellman', 'createDiffieHellman', 'DiffieHellman'].forEach(function (key) {\n    exports[key] = _$$_REQUIRE(_dependencyMap[6], \"diffie-hellman\")[key];\n  });\n  ['createSign', 'Sign', 'createVerify', 'Verify'].forEach(function (key) {\n    exports[key] = _$$_REQUIRE(_dependencyMap[7], \"browserify-sign\")[key];\n  });\n  exports.createECDH = _$$_REQUIRE(_dependencyMap[8], \"create-ecdh\");\n  ['publicEncrypt', 'privateEncrypt', 'publicDecrypt', 'privateDecrypt'].forEach(function (key) {\n    exports[key] = _$$_REQUIRE(_dependencyMap[9], \"public-encrypt\")[key];\n  });\n  exports.randomFill = _$$_REQUIRE(_dependencyMap[10], \"randomfill\").randomFill;\n  exports.randomFillSync = _$$_REQUIRE(_dependencyMap[10], \"randomfill\").randomFillSync\n\n  // the least I can do is make error messages for the rest of the node.js/crypto api.\n  ;\n  ['createCredentials'].forEach(function (name) {\n    exports[name] = function () {\n      throw new Error(['sorry, ' + name + ' is not implemented yet', 'we accept pull requests', 'https://github.com/crypto-browserify/crypto-browserify'].join('\\n'));\n    };\n  });\n});","lineCount":55,"map":[[2,2,1,0],[2,14,1,12],[4,2,4,0,"exports"],[4,9,4,7],[4,10,4,8,"randomBytes"],[4,21,4,19],[4,24,4,22,"exports"],[4,31,4,29],[4,32,4,30,"rng"],[4,35,4,33],[4,38,4,36,"exports"],[4,45,4,43],[4,46,4,44,"pseudoRandomBytes"],[4,63,4,61],[4,66,4,64,"exports"],[4,73,4,71],[4,74,4,72,"prng"],[4,78,4,76],[4,81,4,79,"randomBytes"],[4,111,4,79],[4,112,4,79,"randomBytes"],[4,151,4,90],[6,2,6,0],[7,2,7,0],[7,6,7,4],[7,13,7,11,"window"],[7,19,7,17],[7,24,7,22],[7,32,7,30],[7,34,7,32],[8,4,8,2],[8,8,8,6],[8,9,8,7,"window"],[8,15,8,13],[8,16,8,14,"crypto"],[8,22,8,20],[8,24,8,22,"window"],[8,30,8,28],[8,31,8,29,"crypto"],[8,37,8,35],[8,40,8,38],[8,41,8,39],[8,42,8,40],[9,4,9,2],[9,8,9,6],[9,9,9,7,"window"],[9,15,9,13],[9,16,9,14,"crypto"],[9,22,9,20],[9,23,9,21,"getRandomValues"],[9,38,9,36],[9,40,9,38],[10,6,10,4,"window"],[10,12,10,10],[10,13,10,11,"crypto"],[10,19,10,17],[10,20,10,18,"getRandomValues"],[10,35,10,33],[10,38,10,36],[10,47,10,45,"getRandomValues"],[10,62,10,60,"getRandomValues"],[10,63,10,62,"arr"],[10,66,10,65],[10,68,10,67],[11,8,11,6],[11,12,11,10,"orig"],[11,16,11,14],[11,19,11,17,"arr"],[11,22,11,20],[12,8,12,6],[12,12,12,10,"arr"],[12,15,12,13],[12,16,12,14,"byteLength"],[12,26,12,24],[12,30,12,28,"arr"],[12,33,12,31],[12,34,12,32,"length"],[12,40,12,38],[12,42,12,40],[13,10,13,8],[14,10,14,8,"arr"],[14,13,14,11],[14,16,14,14],[14,20,14,18,"Uint8Array"],[14,30,14,28],[14,31,14,29,"arr"],[14,34,14,32],[14,35,14,33,"buffer"],[14,41,14,39],[14,42,14,40],[15,8,15,6],[16,8,16,6],[16,12,16,12,"bytes"],[16,17,16,17],[16,20,16,20],[16,24,16,20,"randomBytes"],[16,54,16,20],[16,55,16,20,"randomBytes"],[16,94,16,31],[16,96,16,32,"arr"],[16,99,16,35],[16,100,16,36,"length"],[16,106,16,42],[16,107,16,43],[17,8,17,6],[17,13,17,11],[17,17,17,15,"i"],[17,18,17,16],[17,21,17,19],[17,22,17,20],[17,24,17,22,"i"],[17,25,17,23],[17,28,17,26,"bytes"],[17,33,17,31],[17,34,17,32,"length"],[17,40,17,38],[17,42,17,40,"i"],[17,43,17,41],[17,45,17,43],[17,47,17,45],[18,10,18,8,"arr"],[18,13,18,11],[18,14,18,12,"i"],[18,15,18,13],[18,16,18,14],[18,19,18,17,"bytes"],[18,24,18,22],[18,25,18,23,"i"],[18,26,18,24],[18,27,18,25],[19,8,19,6],[20,8,21,6],[20,15,21,13,"orig"],[20,19,21,17],[21,6,22,4],[21,7,22,5],[22,4,23,2],[23,2,24,0],[24,2,26,0,"exports"],[24,9,26,7],[24,10,26,8,"createHash"],[24,20,26,18],[24,23,26,21,"exports"],[24,30,26,28],[24,31,26,29,"Hash"],[24,35,26,33],[24,38,26,36,"require"],[24,49,26,43],[24,50,26,43,"_dependencyMap"],[24,64,26,43],[24,82,26,57],[24,83,26,58],[25,2,27,0,"exports"],[25,9,27,7],[25,10,27,8,"createHmac"],[25,20,27,18],[25,23,27,21,"exports"],[25,30,27,28],[25,31,27,29,"Hmac"],[25,35,27,33],[25,38,27,36,"require"],[25,49,27,43],[25,50,27,43,"_dependencyMap"],[25,64,27,43],[25,82,27,57],[25,83,27,58],[26,2,29,0],[26,6,29,4,"hashes"],[26,12,29,10],[26,15,29,13],[26,16,29,14],[26,22,29,20],[26,24,29,22],[26,32,29,30],[26,34,29,32],[26,42,29,40],[26,44,29,42],[26,52,29,50],[26,54,29,52],[26,62,29,60],[26,64,29,62],[26,69,29,67],[26,71,29,69],[26,79,29,77],[26,80,29,78],[26,81,29,79,"concat"],[26,87,29,85],[26,88,29,86,"Object"],[26,94,29,92],[26,95,29,93,"keys"],[26,99,29,97],[26,100,29,98,"require"],[26,111,29,105],[26,112,29,105,"_dependencyMap"],[26,126,29,105],[26,154,29,129],[26,155,29,130],[26,156,29,131],[26,157,29,132],[27,2,30,0,"exports"],[27,9,30,7],[27,10,30,8,"getHashes"],[27,19,30,17],[27,22,30,20],[27,34,30,32],[28,4,31,2],[28,11,31,9,"hashes"],[28,17,31,15],[29,2,32,0],[29,3,32,1],[30,2,35,0,"exports"],[30,9,35,7],[30,10,35,8,"pbkdf2"],[30,16,35,14],[30,19,35,17,"_$$_REQUIRE"],[30,30,35,17],[30,31,35,17,"_dependencyMap"],[30,45,35,17],[30,60,35,19,"pbkdf2"],[30,66,35,25],[31,2,36,0,"exports"],[31,9,36,7],[31,10,36,8,"pbkdf2Sync"],[31,20,36,18],[31,23,36,21,"_$$_REQUIRE"],[31,34,36,21],[31,35,36,21,"_dependencyMap"],[31,49,36,21],[31,64,36,23,"pbkdf2Sync"],[31,74,36,33],[32,2,39,1],[32,3,40,2],[32,11,40,10],[32,13,41,2],[32,27,41,16],[32,29,42,2],[32,39,42,12],[32,41,43,2],[32,57,43,18],[32,59,44,2],[32,69,44,12],[32,71,45,2],[32,87,45,18],[32,89,46,2],[32,101,46,14],[32,103,47,2],[32,121,47,20],[32,123,48,2],[32,135,48,14],[32,137,49,2],[32,150,49,15],[32,151,50,1],[32,152,50,2,"forEach"],[32,159,50,9],[32,160,50,10],[32,170,50,20,"key"],[32,173,50,23],[32,175,50,25],[33,4,51,2,"exports"],[33,11,51,9],[33,12,51,10,"key"],[33,15,51,13],[33,16,51,14],[33,19,51,17,"_$$_REQUIRE"],[33,30,51,17],[33,31,51,17,"_dependencyMap"],[33,45,51,17],[33,71,51,21,"key"],[33,74,51,24],[33,75,51,25],[34,2,52,0],[34,3,52,1],[34,4,52,2],[35,2,55,1],[35,3,56,2],[35,23,56,22],[35,25,57,2],[35,51,57,28],[35,53,58,2],[35,71,58,20],[35,73,59,2],[35,94,59,23],[35,96,60,2],[35,111,60,17],[35,112,61,1],[35,113,61,2,"forEach"],[35,120,61,9],[35,121,61,10],[35,131,61,20,"key"],[35,134,61,23],[35,136,61,25],[36,4,62,2,"exports"],[36,11,62,9],[36,12,62,10,"key"],[36,15,62,13],[36,16,62,14],[36,19,62,17,"_$$_REQUIRE"],[36,30,62,17],[36,31,62,17,"_dependencyMap"],[36,45,62,17],[36,68,62,20,"key"],[36,71,62,23],[36,72,62,24],[37,2,63,0],[37,3,63,1],[37,4,63,2],[38,2,66,1],[38,3,67,2],[38,15,67,14],[38,17,68,2],[38,23,68,8],[38,25,69,2],[38,39,69,16],[38,41,70,2],[38,49,70,10],[38,50,71,1],[38,51,71,2,"forEach"],[38,58,71,9],[38,59,71,10],[38,69,71,20,"key"],[38,72,71,23],[38,74,71,25],[39,4,72,2,"exports"],[39,11,72,9],[39,12,72,10,"key"],[39,15,72,13],[39,16,72,14],[39,19,72,17,"_$$_REQUIRE"],[39,30,72,17],[39,31,72,17,"_dependencyMap"],[39,45,72,17],[39,69,72,22,"key"],[39,72,72,25],[39,73,72,26],[40,2,73,0],[40,3,73,1],[40,4,73,2],[41,2,75,0,"exports"],[41,9,75,7],[41,10,75,8,"createECDH"],[41,20,75,18],[41,23,75,21,"require"],[41,34,75,28],[41,35,75,28,"_dependencyMap"],[41,49,75,28],[41,67,75,42],[41,68,75,43],[42,2,79,1],[42,3,80,2],[42,18,80,17],[42,20,81,2],[42,36,81,18],[42,38,82,2],[42,53,82,17],[42,55,83,2],[42,71,83,18],[42,72,84,1],[42,73,84,2,"forEach"],[42,80,84,9],[42,81,84,10],[42,91,84,20,"key"],[42,94,84,23],[42,96,84,25],[43,4,85,2,"exports"],[43,11,85,9],[43,12,85,10,"key"],[43,15,85,13],[43,16,85,14],[43,19,85,17,"_$$_REQUIRE"],[43,30,85,17],[43,31,85,17,"_dependencyMap"],[43,45,85,17],[43,68,85,31,"key"],[43,71,85,34],[43,72,85,35],[44,2,86,0],[44,3,86,1],[44,4,86,2],[45,2,90,0,"exports"],[45,9,90,7],[45,10,90,8,"randomFill"],[45,20,90,18],[45,23,90,21,"_$$_REQUIRE"],[45,34,90,21],[45,35,90,21,"_dependencyMap"],[45,49,90,21],[45,69,90,24,"randomFill"],[45,79,90,34],[46,2,91,0,"exports"],[46,9,91,7],[46,10,91,8,"randomFillSync"],[46,24,91,22],[46,27,91,25,"_$$_REQUIRE"],[46,38,91,25],[46,39,91,25,"_dependencyMap"],[46,53,91,25],[46,73,91,28,"randomFillSync"],[48,2,93,0],[49,2,93,0],[50,2,94,1],[50,3,95,2],[50,22,95,21],[50,23,96,1],[50,24,96,2,"forEach"],[50,31,96,9],[50,32,96,10],[50,42,96,20,"name"],[50,46,96,24],[50,48,96,26],[51,4,97,2,"exports"],[51,11,97,9],[51,12,97,10,"name"],[51,16,97,14],[51,17,97,15],[51,20,97,18],[51,32,97,30],[52,6,98,4],[52,12,98,10],[52,16,98,14,"Error"],[52,21,98,19],[52,22,98,20],[52,23,99,6],[52,32,99,15],[52,35,99,18,"name"],[52,39,99,22],[52,42,99,25],[52,67,99,50],[52,69,100,6],[52,94,100,31],[52,96,101,6],[52,152,101,62],[52,153,102,5],[52,154,102,6,"join"],[52,158,102,10],[52,159,102,11],[52,163,102,15],[52,164,102,16],[52,165,102,17],[53,4,103,2],[53,5,103,3],[54,2,104,0],[54,3,104,1],[54,4,104,2],[55,0,104,2],[55,3]],"functionMap":{"names":["<global>","getRandomValues","exports.getHashes","forEach$argument_0","exports.name"],"mappings":"AAA;oCCS;KDY;oBEQ;CFE;UGkB;CHE;UGS;CHE;UGQ;CHE;UGW;CHE;UGU;kBCC;GDM;CHC"}},"type":"js/module"}]}