{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":322,"column":0,"index":10367}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":322,"column":0,"index":10367}}],"key":"kiCFfIx1MWoD4noR0gEoyrFAUKE="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":322,"column":0,"index":10367}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":322,"column":0,"index":10367}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"./lib/metadata-delegate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":25,"index":366},"end":{"line":8,"column":59,"index":400}},{"start":{"line":8,"column":25,"index":366},"end":{"line":8,"column":59,"index":400}},{"start":{"line":8,"column":25,"index":366},"end":{"line":8,"column":59,"index":400}}],"key":"ZWzWOZgrx8cK3Dyo2LMrkRDjW3I="}},{"name":"./lib/feature-flag-delegate","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":28,"index":429},"end":{"line":9,"column":66,"index":467}},{"start":{"line":9,"column":28,"index":429},"end":{"line":9,"column":66,"index":467}},{"start":{"line":9,"column":28,"index":429},"end":{"line":9,"column":66,"index":467}},{"start":{"line":9,"column":28,"index":429},"end":{"line":9,"column":66,"index":467}}],"key":"ka5RG2HaoMpFll8hvXJpDNHdVsM="}},{"name":"./lib/es-utils/map","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":12,"index":167},"end":{"line":4,"column":41,"index":196}},{"start":{"line":4,"column":12,"index":167},"end":{"line":4,"column":41,"index":196}}],"key":"1SPQG7++jFP19S7+3AIaC60Twi8="}},{"name":"./lib/es-utils/assign","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":308},"end":{"line":7,"column":47,"index":340}}],"key":"OIOqXg+3sJitkippOMyiPMvyCoc="}},{"name":"./lib/es-utils/reduce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":15,"index":212},"end":{"line":5,"column":47,"index":244}}],"key":"/By7LoTS5EcG+9oWktoHvGR3IqI="}},{"name":"./lib/has-stack","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":128},"end":{"line":3,"column":43,"index":154}},{"start":{"line":3,"column":17,"index":128},"end":{"line":3,"column":43,"index":154}},{"start":{"line":3,"column":17,"index":128},"end":{"line":3,"column":43,"index":154}},{"start":{"line":3,"column":17,"index":128},"end":{"line":3,"column":43,"index":154}}],"key":"10zfkeUepB1dEtDZbkY87nXWiw4="}},{"name":"./lib/error-stack-parser","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":25,"index":25},"end":{"line":1,"column":60,"index":60}},{"start":{"line":1,"column":25,"index":25},"end":{"line":1,"column":60,"index":60}}],"key":"qgFJxIWsS4zhGytjC4kE++Av0XQ="}},{"name":"./lib/es-utils/filter","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":260},"end":{"line":6,"column":47,"index":292}}],"key":"WlLvhAjWu/dD6WguRNmInF+OF3I=","isOptional":true}},{"name":"stack-generator","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":23,"index":84},"end":{"line":2,"column":49,"index":110}}],"key":"qfFcziIm80CINwoAR4p+z5Fyl4w=","isOptional":true}},{"name":"./lib/iserror","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":16,"index":484},"end":{"line":10,"column":40,"index":508}},{"start":{"line":10,"column":16,"index":484},"end":{"line":10,"column":40,"index":508}},{"start":{"line":10,"column":16,"index":484},"end":{"line":10,"column":40,"index":508}}],"key":"X6AVGcxGOO56AiCa1Oc8uRKiSmw="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _toConsumableArray = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/toConsumableArray\");\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\");\n  var Event = /*#__PURE__*/function () {\n    \"use strict\";\n\n    function Event(errorClass, errorMessage) {\n      var stacktrace = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var handledState = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultHandledState();\n      var originalError = arguments.length > 4 ? arguments[4] : undefined;\n      _classCallCheck(this, Event);\n      this.apiKey = undefined;\n      this.context = undefined;\n      this.groupingHash = undefined;\n      this.originalError = originalError;\n      this._handledState = handledState;\n      this.severity = this._handledState.severity;\n      this.unhandled = this._handledState.unhandled;\n      this.app = {};\n      this.device = {};\n      this.request = {};\n      this.breadcrumbs = [];\n      this.threads = [];\n      this._metadata = {};\n      this._features = [];\n      this._featuresIndex = {};\n      this._user = {};\n      this._session = undefined;\n      this._correlation = undefined;\n      this.errors = [createBugsnagError(errorClass, errorMessage, Event.__type, stacktrace)];\n\n      // Flags.\n      // Note these are not initialised unless they are used\n      // to save unnecessary bytes in the browser bundle\n\n      /* this.attemptImmediateDelivery, default: true */\n    }\n    return _createClass(Event, [{\n      key: \"addMetadata\",\n      value: function addMetadata(section, keyOrObj, maybeVal) {\n        return _$$_REQUIRE(_dependencyMap[4], \"./lib/metadata-delegate\").add(this._metadata, section, keyOrObj, maybeVal);\n      }\n\n      /**\n         * Associate this event with a specific trace. This is usually done automatically when\n         * using bugsnag-js-performance, but can also be set manually if required.\n         *\n         * @param traceId the ID of the trace the event occurred within\n         * @param spanId the ID of the span that the event occurred within\n         */\n    }, {\n      key: \"setTraceCorrelation\",\n      value: function setTraceCorrelation(traceId, spanId) {\n        if (typeof traceId === 'string') {\n          this._correlation = Object.assign({\n            traceId: traceId\n          }, typeof spanId === 'string' ? {\n            spanId: spanId\n          } : {});\n        }\n      }\n    }, {\n      key: \"getMetadata\",\n      value: function getMetadata(section, key) {\n        return _$$_REQUIRE(_dependencyMap[4], \"./lib/metadata-delegate\").get(this._metadata, section, key);\n      }\n    }, {\n      key: \"clearMetadata\",\n      value: function clearMetadata(section, key) {\n        return _$$_REQUIRE(_dependencyMap[4], \"./lib/metadata-delegate\").clear(this._metadata, section, key);\n      }\n    }, {\n      key: \"addFeatureFlag\",\n      value: function addFeatureFlag(name) {\n        var variant = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n        _$$_REQUIRE(_dependencyMap[5], \"./lib/feature-flag-delegate\").add(this._features, this._featuresIndex, name, variant);\n      }\n    }, {\n      key: \"addFeatureFlags\",\n      value: function addFeatureFlags(featureFlags) {\n        _$$_REQUIRE(_dependencyMap[5], \"./lib/feature-flag-delegate\").merge(this._features, featureFlags, this._featuresIndex);\n      }\n    }, {\n      key: \"getFeatureFlags\",\n      value: function getFeatureFlags() {\n        return _$$_REQUIRE(_dependencyMap[5], \"./lib/feature-flag-delegate\").toEventApi(this._features);\n      }\n    }, {\n      key: \"clearFeatureFlag\",\n      value: function clearFeatureFlag(name) {\n        _$$_REQUIRE(_dependencyMap[5], \"./lib/feature-flag-delegate\").clear(this._features, this._featuresIndex, name);\n      }\n    }, {\n      key: \"clearFeatureFlags\",\n      value: function clearFeatureFlags() {\n        this._features = [];\n        this._featuresIndex = {};\n      }\n    }, {\n      key: \"getUser\",\n      value: function getUser() {\n        return this._user;\n      }\n    }, {\n      key: \"setUser\",\n      value: function setUser(id, email, name) {\n        this._user = {\n          id: id,\n          email: email,\n          name: name\n        };\n      }\n    }, {\n      key: \"toJSON\",\n      value: function toJSON() {\n        return {\n          payloadVersion: '4',\n          exceptions: _$$_REQUIRE(_dependencyMap[6], \"./lib/es-utils/map\")(this.errors, function (er) {\n            return _$$_REQUIRE(_dependencyMap[7], \"./lib/es-utils/assign\")({}, er, {\n              message: er.errorMessage\n            });\n          }),\n          severity: this.severity,\n          unhandled: this._handledState.unhandled,\n          severityReason: this._handledState.severityReason,\n          app: this.app,\n          device: this.device,\n          request: this.request,\n          breadcrumbs: this.breadcrumbs,\n          context: this.context,\n          groupingHash: this.groupingHash,\n          metaData: this._metadata,\n          user: this._user,\n          session: this._session,\n          featureFlags: this.getFeatureFlags(),\n          correlation: this._correlation\n        };\n      }\n    }]);\n  }(); // takes a stacktrace.js style stackframe (https://github.com/stacktracejs/stackframe)\n  // and returns a Bugsnag compatible stackframe (https://docs.bugsnag.com/api/error-reporting/#json-payload)\n  var formatStackframe = function formatStackframe(frame) {\n    var f = {\n      file: frame.fileName,\n      method: normaliseFunctionName(frame.functionName),\n      lineNumber: frame.lineNumber,\n      columnNumber: frame.columnNumber,\n      code: undefined,\n      inProject: undefined\n    };\n    // Some instances result in no file:\n    // - calling notify() from chrome's terminal results in no file/method.\n    // - non-error exception thrown from global code in FF\n    // This adds one.\n    if (f.lineNumber > -1 && !f.file && !f.method) {\n      f.file = 'global code';\n    }\n    return f;\n  };\n  var normaliseFunctionName = function normaliseFunctionName(name) {\n    return /^global code$/i.test(name) ? 'global code' : name;\n  };\n  var defaultHandledState = function defaultHandledState() {\n    return {\n      unhandled: false,\n      severity: 'warning',\n      severityReason: {\n        type: 'handledException'\n      }\n    };\n  };\n  var ensureString = function ensureString(str) {\n    return typeof str === 'string' ? str : '';\n  };\n  function createBugsnagError(errorClass, errorMessage, type, stacktrace) {\n    return {\n      errorClass: ensureString(errorClass),\n      errorMessage: ensureString(errorMessage),\n      type: type,\n      stacktrace: _$$_REQUIRE(_dependencyMap[8], \"./lib/es-utils/reduce\")(stacktrace, function (accum, frame) {\n        var f = formatStackframe(frame);\n        // don't include a stackframe if none of its properties are defined\n        try {\n          if (JSON.stringify(f) === '{}') return accum;\n          return accum.concat(f);\n        } catch (e) {\n          return accum;\n        }\n      }, [])\n    };\n  }\n  function getCauseStack(error) {\n    if (error.cause) {\n      return [error].concat(_toConsumableArray(getCauseStack(error.cause)));\n    } else {\n      return [error];\n    }\n  }\n\n  // Helpers\n\n  Event.getStacktrace = function (error, errorFramesToSkip, backtraceFramesToSkip) {\n    if (_$$_REQUIRE(_dependencyMap[9], \"./lib/has-stack\")(error)) return _$$_REQUIRE(_dependencyMap[10], \"./lib/error-stack-parser\").parse(error).slice(errorFramesToSkip);\n    // error wasn't provided or didn't have a stacktrace so try to walk the callstack\n    try {\n      return _$$_REQUIRE(_dependencyMap[11], \"./lib/es-utils/filter\")(_$$_REQUIRE(_dependencyMap[12], \"stack-generator\").backtrace(), function (frame) {\n        return (frame.functionName || '').indexOf('StackGenerator$$') === -1;\n      }).slice(1 + backtraceFramesToSkip);\n    } catch (e) {\n      return [];\n    }\n  };\n  Event.create = function (maybeError, tolerateNonErrors, handledState, component) {\n    var errorFramesToSkip = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    var logger = arguments.length > 5 ? arguments[5] : undefined;\n    var _normaliseError = normaliseError(maybeError, tolerateNonErrors, component, logger),\n      _normaliseError2 = _slicedToArray(_normaliseError, 2),\n      error = _normaliseError2[0],\n      internalFrames = _normaliseError2[1];\n    var event;\n    try {\n      var stacktrace = Event.getStacktrace(error,\n      // if an error was created/throw in the normaliseError() function, we need to\n      // tell the getStacktrace() function to skip the number of frames we know will\n      // be from our own functions. This is added to the number of frames deep we\n      // were told about\n      internalFrames > 0 ? 1 + internalFrames + errorFramesToSkip : 0,\n      // if there's no stacktrace, the callstack may be walked to generated one.\n      // this is how many frames should be removed because they come from our library\n      1 + errorFramesToSkip);\n      event = new Event(error.name, error.message, stacktrace, handledState, maybeError);\n    } catch (e) {\n      event = new Event(error.name, error.message, [], handledState, maybeError);\n    }\n    if (error.name === 'InvalidError') {\n      event.addMetadata(`${component}`, 'non-error parameter', makeSerialisable(maybeError));\n    }\n    if (error.cause) {\n      var _event$errors;\n      var causes = getCauseStack(error).slice(1);\n      var normalisedCauses = _$$_REQUIRE(_dependencyMap[6], \"./lib/es-utils/map\")(causes, function (cause) {\n        // Only get stacktrace for error causes that are a valid JS Error and already have a stack\n        var stacktrace = _$$_REQUIRE(_dependencyMap[13], \"./lib/iserror\")(cause) && _$$_REQUIRE(_dependencyMap[9], \"./lib/has-stack\")(cause) ? _$$_REQUIRE(_dependencyMap[10], \"./lib/error-stack-parser\").parse(cause) : [];\n        var _normaliseError3 = normaliseError(cause, true, 'error cause'),\n          _normaliseError4 = _slicedToArray(_normaliseError3, 1),\n          error = _normaliseError4[0];\n        if (error.name === 'InvalidError') event.addMetadata('error cause', makeSerialisable(cause));\n        return createBugsnagError(error.name, error.message, Event.__type, stacktrace);\n      });\n      (_event$errors = event.errors).push.apply(_event$errors, _toConsumableArray(normalisedCauses));\n    }\n    return event;\n  };\n  var makeSerialisable = function makeSerialisable(err) {\n    if (err === null) return 'null';\n    if (err === undefined) return 'undefined';\n    return err;\n  };\n  var normaliseError = function normaliseError(maybeError, tolerateNonErrors, component, logger) {\n    var error;\n    var internalFrames = 0;\n    var createAndLogInputError = function createAndLogInputError(reason) {\n      var verb = component === 'error cause' ? 'was' : 'received';\n      if (logger) logger.warn(`${component} ${verb} a non-error: \"${reason}\"`);\n      var err = new Error(`${component} ${verb} a non-error. See \"${component}\" tab for more detail.`);\n      err.name = 'InvalidError';\n      return err;\n    };\n\n    // In some cases:\n    //\n    //  - the promise rejection handler (both in the browser and node)\n    //  - the node uncaughtException handler\n    //\n    // We are really limited in what we can do to get a stacktrace. So we use the\n    // tolerateNonErrors option to ensure that the resulting error communicates as\n    // such.\n    if (!tolerateNonErrors) {\n      if (_$$_REQUIRE(_dependencyMap[13], \"./lib/iserror\")(maybeError)) {\n        error = maybeError;\n      } else {\n        error = createAndLogInputError(typeof maybeError);\n        internalFrames += 2;\n      }\n    } else {\n      switch (typeof maybeError) {\n        case 'string':\n        case 'number':\n        case 'boolean':\n          error = new Error(String(maybeError));\n          internalFrames += 1;\n          break;\n        case 'function':\n          error = createAndLogInputError('function');\n          internalFrames += 2;\n          break;\n        case 'object':\n          if (maybeError !== null && _$$_REQUIRE(_dependencyMap[13], \"./lib/iserror\")(maybeError)) {\n            error = maybeError;\n          } else if (maybeError !== null && hasNecessaryFields(maybeError)) {\n            error = new Error(maybeError.message || maybeError.errorMessage);\n            error.name = maybeError.name || maybeError.errorClass;\n            internalFrames += 1;\n          } else {\n            error = createAndLogInputError(maybeError === null ? 'null' : 'unsupported object');\n            internalFrames += 2;\n          }\n          break;\n        default:\n          error = createAndLogInputError('nothing');\n          internalFrames += 2;\n      }\n    }\n    if (!_$$_REQUIRE(_dependencyMap[9], \"./lib/has-stack\")(error)) {\n      // in IE10/11 a new Error() doesn't have a stacktrace until you throw it, so try that here\n      try {\n        throw error;\n      } catch (e) {\n        if (_$$_REQUIRE(_dependencyMap[9], \"./lib/has-stack\")(e)) {\n          error = e;\n          // if the error only got a stacktrace after we threw it here, we know it\n          // will only have one extra internal frame from this function, regardless\n          // of whether it went through createAndLogInputError() or not\n          internalFrames = 1;\n        }\n      }\n    }\n    return [error, internalFrames];\n  };\n\n  // default value for stacktrace.type\n  Event.__type = 'browserjs';\n  var hasNecessaryFields = function hasNecessaryFields(error) {\n    return (typeof error.name === 'string' || typeof error.errorClass === 'string') && (typeof error.message === 'string' || typeof error.errorMessage === 'string');\n  };\n  module.exports = Event;\n});","lineCount":339,"map":[[6,6,12,6,"Event"],[6,11,12,11],[7,4,12,11],[9,4,13,2],[9,13,13,2,"Event"],[9,19,13,15,"errorClass"],[9,29,13,25],[9,31,13,27,"errorMessage"],[9,43,13,39],[9,45,13,111],[10,6,13,111],[10,10,13,41,"stacktrace"],[10,20,13,51],[10,23,13,51,"arguments"],[10,32,13,51],[10,33,13,51,"length"],[10,39,13,51],[10,47,13,51,"arguments"],[10,56,13,51],[10,64,13,51,"undefined"],[10,73,13,51],[10,76,13,51,"arguments"],[10,85,13,51],[10,91,13,54],[10,93,13,56],[11,6,13,56],[11,10,13,58,"handledState"],[11,22,13,70],[11,25,13,70,"arguments"],[11,34,13,70],[11,35,13,70,"length"],[11,41,13,70],[11,49,13,70,"arguments"],[11,58,13,70],[11,66,13,70,"undefined"],[11,75,13,70],[11,78,13,70,"arguments"],[11,87,13,70],[11,93,13,73,"defaultHandledState"],[11,112,13,92],[11,113,13,93],[11,114,13,94],[12,6,13,94],[12,10,13,96,"originalError"],[12,23,13,109],[12,26,13,109,"arguments"],[12,35,13,109],[12,36,13,109,"length"],[12,42,13,109],[12,49,13,109,"arguments"],[12,58,13,109],[12,64,13,109,"undefined"],[12,73,13,109],[13,6,13,109,"_classCallCheck"],[13,21,13,109],[13,28,13,109,"Event"],[13,33,13,109],[14,6,14,4],[14,10,14,8],[14,11,14,9,"apiKey"],[14,17,14,15],[14,20,14,18,"undefined"],[14,29,14,27],[15,6,15,4],[15,10,15,8],[15,11,15,9,"context"],[15,18,15,16],[15,21,15,19,"undefined"],[15,30,15,28],[16,6,16,4],[16,10,16,8],[16,11,16,9,"groupingHash"],[16,23,16,21],[16,26,16,24,"undefined"],[16,35,16,33],[17,6,17,4],[17,10,17,8],[17,11,17,9,"originalError"],[17,24,17,22],[17,27,17,25,"originalError"],[17,40,17,38],[18,6,19,4],[18,10,19,8],[18,11,19,9,"_handledState"],[18,24,19,22],[18,27,19,25,"handledState"],[18,39,19,37],[19,6,20,4],[19,10,20,8],[19,11,20,9,"severity"],[19,19,20,17],[19,22,20,20],[19,26,20,24],[19,27,20,25,"_handledState"],[19,40,20,38],[19,41,20,39,"severity"],[19,49,20,47],[20,6,21,4],[20,10,21,8],[20,11,21,9,"unhandled"],[20,20,21,18],[20,23,21,21],[20,27,21,25],[20,28,21,26,"_handledState"],[20,41,21,39],[20,42,21,40,"unhandled"],[20,51,21,49],[21,6,23,4],[21,10,23,8],[21,11,23,9,"app"],[21,14,23,12],[21,17,23,15],[21,18,23,16],[21,19,23,17],[22,6,24,4],[22,10,24,8],[22,11,24,9,"device"],[22,17,24,15],[22,20,24,18],[22,21,24,19],[22,22,24,20],[23,6,25,4],[23,10,25,8],[23,11,25,9,"request"],[23,18,25,16],[23,21,25,19],[23,22,25,20],[23,23,25,21],[24,6,27,4],[24,10,27,8],[24,11,27,9,"breadcrumbs"],[24,22,27,20],[24,25,27,23],[24,27,27,25],[25,6,28,4],[25,10,28,8],[25,11,28,9,"threads"],[25,18,28,16],[25,21,28,19],[25,23,28,21],[26,6,30,4],[26,10,30,8],[26,11,30,9,"_metadata"],[26,20,30,18],[26,23,30,21],[26,24,30,22],[26,25,30,23],[27,6,31,4],[27,10,31,8],[27,11,31,9,"_features"],[27,20,31,18],[27,23,31,21],[27,25,31,23],[28,6,32,4],[28,10,32,8],[28,11,32,9,"_featuresIndex"],[28,25,32,23],[28,28,32,26],[28,29,32,27],[28,30,32,28],[29,6,33,4],[29,10,33,8],[29,11,33,9,"_user"],[29,16,33,14],[29,19,33,17],[29,20,33,18],[29,21,33,19],[30,6,34,4],[30,10,34,8],[30,11,34,9,"_session"],[30,19,34,17],[30,22,34,20,"undefined"],[30,31,34,29],[31,6,35,4],[31,10,35,8],[31,11,35,9,"_correlation"],[31,23,35,21],[31,26,35,24,"undefined"],[31,35,35,33],[32,6,37,4],[32,10,37,8],[32,11,37,9,"errors"],[32,17,37,15],[32,20,37,18],[32,21,38,6,"createBugsnagError"],[32,39,38,24],[32,40,38,25,"errorClass"],[32,50,38,35],[32,52,38,37,"errorMessage"],[32,64,38,49],[32,66,38,51,"Event"],[32,71,38,56],[32,72,38,57,"__type"],[32,78,38,63],[32,80,38,65,"stacktrace"],[32,90,38,75],[32,91,38,76],[32,92,39,5],[34,6,41,4],[35,6,42,4],[36,6,43,4],[38,6,45,4],[39,4,46,2],[40,4,46,3],[40,11,46,3,"_createClass"],[40,23,46,3],[40,24,46,3,"Event"],[40,29,46,3],[41,6,46,3,"key"],[41,9,46,3],[42,6,46,3,"value"],[42,11,46,3],[42,13,48,2],[42,22,48,2,"addMetadata"],[42,33,48,13,"addMetadata"],[42,34,48,15,"section"],[42,41,48,22],[42,43,48,24,"keyOrObj"],[42,51,48,32],[42,53,48,34,"maybeVal"],[42,61,48,42],[42,63,48,44],[43,8,49,4],[43,15,49,11,"_$$_REQUIRE"],[43,26,49,11],[43,27,49,11,"_dependencyMap"],[43,41,49,11],[43,73,49,28,"add"],[43,76,49,31],[43,77,49,32],[43,81,49,36],[43,82,49,37,"_metadata"],[43,91,49,46],[43,93,49,48,"section"],[43,100,49,55],[43,102,49,57,"keyOrObj"],[43,110,49,65],[43,112,49,67,"maybeVal"],[43,120,49,75],[43,121,49,76],[44,6,50,2],[46,6,52,2],[47,0,53,0],[48,0,54,0],[49,0,55,0],[50,0,56,0],[51,0,57,0],[52,0,58,0],[53,4,52,2],[54,6,52,2,"key"],[54,9,52,2],[55,6,52,2,"value"],[55,11,52,2],[55,13,59,2],[55,22,59,2,"setTraceCorrelation"],[55,41,59,21,"setTraceCorrelation"],[55,42,59,23,"traceId"],[55,49,59,30],[55,51,59,32,"spanId"],[55,57,59,38],[55,59,59,40],[56,8,60,4],[56,12,60,8],[56,19,60,15,"traceId"],[56,26,60,22],[56,31,60,27],[56,39,60,35],[56,41,60,37],[57,10,61,6],[57,14,61,10],[57,15,61,11,"_correlation"],[57,27,61,23],[57,30,61,23,"Object"],[57,36,61,23],[57,37,61,23,"assign"],[57,43,61,23],[58,12,61,28,"traceId"],[58,19,61,35],[58,21,61,28,"traceId"],[59,10,61,35],[59,13,61,40],[59,20,61,47,"spanId"],[59,26,61,53],[59,31,61,58],[59,39,61,66],[59,42,61,69],[60,12,61,71,"spanId"],[60,18,61,77],[60,20,61,71,"spanId"],[61,10,61,78],[61,11,61,79],[61,14,61,82],[61,15,61,84],[61,16,61,85],[61,17,61,87],[62,8,62,4],[63,6,63,2],[64,4,63,3],[65,6,63,3,"key"],[65,9,63,3],[66,6,63,3,"value"],[66,11,63,3],[66,13,65,2],[66,22,65,2,"getMetadata"],[66,33,65,13,"getMetadata"],[66,34,65,15,"section"],[66,41,65,22],[66,43,65,24,"key"],[66,46,65,27],[66,48,65,29],[67,8,66,4],[67,15,66,11,"_$$_REQUIRE"],[67,26,66,11],[67,27,66,11,"_dependencyMap"],[67,41,66,11],[67,73,66,28,"get"],[67,76,66,31],[67,77,66,32],[67,81,66,36],[67,82,66,37,"_metadata"],[67,91,66,46],[67,93,66,48,"section"],[67,100,66,55],[67,102,66,57,"key"],[67,105,66,60],[67,106,66,61],[68,6,67,2],[69,4,67,3],[70,6,67,3,"key"],[70,9,67,3],[71,6,67,3,"value"],[71,11,67,3],[71,13,69,2],[71,22,69,2,"clearMetadata"],[71,35,69,15,"clearMetadata"],[71,36,69,17,"section"],[71,43,69,24],[71,45,69,26,"key"],[71,48,69,29],[71,50,69,31],[72,8,70,4],[72,15,70,11,"_$$_REQUIRE"],[72,26,70,11],[72,27,70,11,"_dependencyMap"],[72,41,70,11],[72,73,70,28,"clear"],[72,78,70,33],[72,79,70,34],[72,83,70,38],[72,84,70,39,"_metadata"],[72,93,70,48],[72,95,70,50,"section"],[72,102,70,57],[72,104,70,59,"key"],[72,107,70,62],[72,108,70,63],[73,6,71,2],[74,4,71,3],[75,6,71,3,"key"],[75,9,71,3],[76,6,71,3,"value"],[76,11,71,3],[76,13,73,2],[76,22,73,2,"addFeatureFlag"],[76,36,73,16,"addFeatureFlag"],[76,37,73,18,"name"],[76,41,73,22],[76,43,73,40],[77,8,73,40],[77,12,73,24,"variant"],[77,19,73,31],[77,22,73,31,"arguments"],[77,31,73,31],[77,32,73,31,"length"],[77,38,73,31],[77,46,73,31,"arguments"],[77,55,73,31],[77,63,73,31,"undefined"],[77,72,73,31],[77,75,73,31,"arguments"],[77,84,73,31],[77,90,73,34],[77,94,73,38],[78,8,74,4,"_$$_REQUIRE"],[78,19,74,4],[78,20,74,4,"_dependencyMap"],[78,34,74,4],[78,70,74,24,"add"],[78,73,74,27],[78,74,74,28],[78,78,74,32],[78,79,74,33,"_features"],[78,88,74,42],[78,90,74,44],[78,94,74,48],[78,95,74,49,"_featuresIndex"],[78,109,74,63],[78,111,74,65,"name"],[78,115,74,69],[78,117,74,71,"variant"],[78,124,74,78],[78,125,74,79],[79,6,75,2],[80,4,75,3],[81,6,75,3,"key"],[81,9,75,3],[82,6,75,3,"value"],[82,11,75,3],[82,13,77,2],[82,22,77,2,"addFeatureFlags"],[82,37,77,17,"addFeatureFlags"],[82,38,77,19,"featureFlags"],[82,50,77,31],[82,52,77,33],[83,8,78,4,"_$$_REQUIRE"],[83,19,78,4],[83,20,78,4,"_dependencyMap"],[83,34,78,4],[83,70,78,24,"merge"],[83,75,78,29],[83,76,78,30],[83,80,78,34],[83,81,78,35,"_features"],[83,90,78,44],[83,92,78,46,"featureFlags"],[83,104,78,58],[83,106,78,60],[83,110,78,64],[83,111,78,65,"_featuresIndex"],[83,125,78,79],[83,126,78,80],[84,6,79,2],[85,4,79,3],[86,6,79,3,"key"],[86,9,79,3],[87,6,79,3,"value"],[87,11,79,3],[87,13,81,2],[87,22,81,2,"getFeatureFlags"],[87,37,81,17,"getFeatureFlags"],[87,38,81,17],[87,40,81,21],[88,8,82,4],[88,15,82,11,"_$$_REQUIRE"],[88,26,82,11],[88,27,82,11,"_dependencyMap"],[88,41,82,11],[88,77,82,31,"toEventApi"],[88,87,82,41],[88,88,82,42],[88,92,82,46],[88,93,82,47,"_features"],[88,102,82,56],[88,103,82,57],[89,6,83,2],[90,4,83,3],[91,6,83,3,"key"],[91,9,83,3],[92,6,83,3,"value"],[92,11,83,3],[92,13,85,2],[92,22,85,2,"clearFeatureFlag"],[92,38,85,18,"clearFeatureFlag"],[92,39,85,20,"name"],[92,43,85,24],[92,45,85,26],[93,8,86,4,"_$$_REQUIRE"],[93,19,86,4],[93,20,86,4,"_dependencyMap"],[93,34,86,4],[93,70,86,24,"clear"],[93,75,86,29],[93,76,86,30],[93,80,86,34],[93,81,86,35,"_features"],[93,90,86,44],[93,92,86,46],[93,96,86,50],[93,97,86,51,"_featuresIndex"],[93,111,86,65],[93,113,86,67,"name"],[93,117,86,71],[93,118,86,72],[94,6,87,2],[95,4,87,3],[96,6,87,3,"key"],[96,9,87,3],[97,6,87,3,"value"],[97,11,87,3],[97,13,89,2],[97,22,89,2,"clearFeatureFlags"],[97,39,89,19,"clearFeatureFlags"],[97,40,89,19],[97,42,89,23],[98,8,90,4],[98,12,90,8],[98,13,90,9,"_features"],[98,22,90,18],[98,25,90,21],[98,27,90,23],[99,8,91,4],[99,12,91,8],[99,13,91,9,"_featuresIndex"],[99,27,91,23],[99,30,91,26],[99,31,91,27],[99,32,91,28],[100,6,92,2],[101,4,92,3],[102,6,92,3,"key"],[102,9,92,3],[103,6,92,3,"value"],[103,11,92,3],[103,13,94,2],[103,22,94,2,"getUser"],[103,29,94,9,"getUser"],[103,30,94,9],[103,32,94,13],[104,8,95,4],[104,15,95,11],[104,19,95,15],[104,20,95,16,"_user"],[104,25,95,21],[105,6,96,2],[106,4,96,3],[107,6,96,3,"key"],[107,9,96,3],[108,6,96,3,"value"],[108,11,96,3],[108,13,98,2],[108,22,98,2,"setUser"],[108,29,98,9,"setUser"],[108,30,98,11,"id"],[108,32,98,13],[108,34,98,15,"email"],[108,39,98,20],[108,41,98,22,"name"],[108,45,98,26],[108,47,98,28],[109,8,99,4],[109,12,99,8],[109,13,99,9,"_user"],[109,18,99,14],[109,21,99,17],[110,10,99,19,"id"],[110,12,99,21],[110,14,99,19,"id"],[110,16,99,21],[111,10,99,23,"email"],[111,15,99,28],[111,17,99,23,"email"],[111,22,99,28],[112,10,99,30,"name"],[112,14,99,34],[112,16,99,30,"name"],[113,8,99,35],[113,9,99,36],[114,6,100,2],[115,4,100,3],[116,6,100,3,"key"],[116,9,100,3],[117,6,100,3,"value"],[117,11,100,3],[117,13,102,2],[117,22,102,2,"toJSON"],[117,28,102,8,"toJSON"],[117,29,102,8],[117,31,102,12],[118,8,103,4],[118,15,103,11],[119,10,104,6,"payloadVersion"],[119,24,104,20],[119,26,104,22],[119,29,104,25],[120,10,105,6,"exceptions"],[120,20,105,16],[120,22,105,18,"_$$_REQUIRE"],[120,33,105,18],[120,34,105,18,"_dependencyMap"],[120,48,105,18],[120,75,105,22],[120,79,105,26],[120,80,105,27,"errors"],[120,86,105,33],[120,88,105,35],[120,98,105,35,"er"],[120,100,105,37],[121,12,105,37],[121,19,105,41,"_$$_REQUIRE"],[121,30,105,41],[121,31,105,41,"_dependencyMap"],[121,45,105,41],[121,75,105,48],[121,76,105,49],[121,77,105,50],[121,79,105,52,"er"],[121,81,105,54],[121,83,105,56],[122,14,105,58,"message"],[122,21,105,65],[122,23,105,67,"er"],[122,25,105,69],[122,26,105,70,"errorMessage"],[123,12,105,83],[123,13,105,84],[123,14,105,85],[124,10,105,85],[124,12,105,86],[125,10,106,6,"severity"],[125,18,106,14],[125,20,106,16],[125,24,106,20],[125,25,106,21,"severity"],[125,33,106,29],[126,10,107,6,"unhandled"],[126,19,107,15],[126,21,107,17],[126,25,107,21],[126,26,107,22,"_handledState"],[126,39,107,35],[126,40,107,36,"unhandled"],[126,49,107,45],[127,10,108,6,"severityReason"],[127,24,108,20],[127,26,108,22],[127,30,108,26],[127,31,108,27,"_handledState"],[127,44,108,40],[127,45,108,41,"severityReason"],[127,59,108,55],[128,10,109,6,"app"],[128,13,109,9],[128,15,109,11],[128,19,109,15],[128,20,109,16,"app"],[128,23,109,19],[129,10,110,6,"device"],[129,16,110,12],[129,18,110,14],[129,22,110,18],[129,23,110,19,"device"],[129,29,110,25],[130,10,111,6,"request"],[130,17,111,13],[130,19,111,15],[130,23,111,19],[130,24,111,20,"request"],[130,31,111,27],[131,10,112,6,"breadcrumbs"],[131,21,112,17],[131,23,112,19],[131,27,112,23],[131,28,112,24,"breadcrumbs"],[131,39,112,35],[132,10,113,6,"context"],[132,17,113,13],[132,19,113,15],[132,23,113,19],[132,24,113,20,"context"],[132,31,113,27],[133,10,114,6,"groupingHash"],[133,22,114,18],[133,24,114,20],[133,28,114,24],[133,29,114,25,"groupingHash"],[133,41,114,37],[134,10,115,6,"metaData"],[134,18,115,14],[134,20,115,16],[134,24,115,20],[134,25,115,21,"_metadata"],[134,34,115,30],[135,10,116,6,"user"],[135,14,116,10],[135,16,116,12],[135,20,116,16],[135,21,116,17,"_user"],[135,26,116,22],[136,10,117,6,"session"],[136,17,117,13],[136,19,117,15],[136,23,117,19],[136,24,117,20,"_session"],[136,32,117,28],[137,10,118,6,"featureFlags"],[137,22,118,18],[137,24,118,20],[137,28,118,24],[137,29,118,25,"getFeatureFlags"],[137,44,118,40],[137,45,118,41],[137,46,118,42],[138,10,119,6,"correlation"],[138,21,119,17],[138,23,119,19],[138,27,119,23],[138,28,119,24,"_correlation"],[139,8,120,4],[139,9,120,5],[140,6,121,2],[141,4,121,3],[142,2,121,3],[142,7,124,0],[143,2,125,0],[144,2,126,0],[144,6,126,6,"formatStackframe"],[144,22,126,22],[144,25,126,25],[144,34,126,6,"formatStackframe"],[144,50,126,22,"formatStackframe"],[144,51,126,25,"frame"],[144,56,126,30],[144,58,126,34],[145,4,127,2],[145,8,127,8,"f"],[145,9,127,9],[145,12,127,12],[146,6,128,4,"file"],[146,10,128,8],[146,12,128,10,"frame"],[146,17,128,15],[146,18,128,16,"fileName"],[146,26,128,24],[147,6,129,4,"method"],[147,12,129,10],[147,14,129,12,"normaliseFunctionName"],[147,35,129,33],[147,36,129,34,"frame"],[147,41,129,39],[147,42,129,40,"functionName"],[147,54,129,52],[147,55,129,53],[148,6,130,4,"lineNumber"],[148,16,130,14],[148,18,130,16,"frame"],[148,23,130,21],[148,24,130,22,"lineNumber"],[148,34,130,32],[149,6,131,4,"columnNumber"],[149,18,131,16],[149,20,131,18,"frame"],[149,25,131,23],[149,26,131,24,"columnNumber"],[149,38,131,36],[150,6,132,4,"code"],[150,10,132,8],[150,12,132,10,"undefined"],[150,21,132,19],[151,6,133,4,"inProject"],[151,15,133,13],[151,17,133,15,"undefined"],[152,4,134,2],[152,5,134,3],[153,4,135,2],[154,4,136,2],[155,4,137,2],[156,4,138,2],[157,4,139,2],[157,8,139,6,"f"],[157,9,139,7],[157,10,139,8,"lineNumber"],[157,20,139,18],[157,23,139,21],[157,24,139,22],[157,25,139,23],[157,29,139,27],[157,30,139,28,"f"],[157,31,139,29],[157,32,139,30,"file"],[157,36,139,34],[157,40,139,38],[157,41,139,39,"f"],[157,42,139,40],[157,43,139,41,"method"],[157,49,139,47],[157,51,139,49],[158,6,140,4,"f"],[158,7,140,5],[158,8,140,6,"file"],[158,12,140,10],[158,15,140,13],[158,28,140,26],[159,4,141,2],[160,4,142,2],[160,11,142,9,"f"],[160,12,142,10],[161,2,143,0],[161,3,143,1],[162,2,145,0],[162,6,145,6,"normaliseFunctionName"],[162,27,145,27],[162,30,145,30],[162,39,145,6,"normaliseFunctionName"],[162,60,145,27,"normaliseFunctionName"],[162,61,145,30,"name"],[162,65,145,34],[163,4,145,34],[163,11,145,38],[163,27,145,54],[163,28,145,55,"test"],[163,32,145,59],[163,33,145,60,"name"],[163,37,145,64],[163,38,145,65],[163,41,145,68],[163,54,145,81],[163,57,145,84,"name"],[163,61,145,88],[164,2,145,88],[165,2,147,0],[165,6,147,6,"defaultHandledState"],[165,25,147,25],[165,28,147,28],[165,37,147,6,"defaultHandledState"],[165,56,147,25,"defaultHandledState"],[165,57,147,25],[166,4,147,25],[166,11,147,35],[167,6,148,2,"unhandled"],[167,15,148,11],[167,17,148,13],[167,22,148,18],[168,6,149,2,"severity"],[168,14,149,10],[168,16,149,12],[168,25,149,21],[169,6,150,2,"severityReason"],[169,20,150,16],[169,22,150,18],[170,8,150,20,"type"],[170,12,150,24],[170,14,150,26],[171,6,150,45],[172,4,151,0],[172,5,151,1],[173,2,151,1],[173,3,151,2],[174,2,153,0],[174,6,153,6,"ensureString"],[174,18,153,18],[174,21,153,21],[174,30,153,6,"ensureString"],[174,42,153,18,"ensureString"],[174,43,153,22,"str"],[174,46,153,25],[175,4,153,25],[175,11,153,30],[175,18,153,37,"str"],[175,21,153,40],[175,26,153,45],[175,34,153,53],[175,37,153,56,"str"],[175,40,153,59],[175,43,153,62],[175,45,153,64],[176,2,153,64],[177,2,155,0],[177,11,155,9,"createBugsnagError"],[177,29,155,27,"createBugsnagError"],[177,30,155,29,"errorClass"],[177,40,155,39],[177,42,155,41,"errorMessage"],[177,54,155,53],[177,56,155,55,"type"],[177,60,155,59],[177,62,155,61,"stacktrace"],[177,72,155,71],[177,74,155,73],[178,4,156,2],[178,11,156,9],[179,6,157,4,"errorClass"],[179,16,157,14],[179,18,157,16,"ensureString"],[179,30,157,28],[179,31,157,29,"errorClass"],[179,41,157,39],[179,42,157,40],[180,6,158,4,"errorMessage"],[180,18,158,16],[180,20,158,18,"ensureString"],[180,32,158,30],[180,33,158,31,"errorMessage"],[180,45,158,43],[180,46,158,44],[181,6,159,4,"type"],[181,10,159,8],[181,12,159,4,"type"],[181,16,159,8],[182,6,160,4,"stacktrace"],[182,16,160,14],[182,18,160,16,"_$$_REQUIRE"],[182,29,160,16],[182,30,160,16,"_dependencyMap"],[182,44,160,16],[182,74,160,23,"stacktrace"],[182,84,160,33],[182,86,160,35],[182,96,160,36,"accum"],[182,101,160,41],[182,103,160,43,"frame"],[182,108,160,48],[182,110,160,53],[183,8,161,6],[183,12,161,12,"f"],[183,13,161,13],[183,16,161,16,"formatStackframe"],[183,32,161,32],[183,33,161,33,"frame"],[183,38,161,38],[183,39,161,39],[184,8,162,6],[185,8,163,6],[185,12,163,10],[186,10,164,8],[186,14,164,12,"JSON"],[186,18,164,16],[186,19,164,17,"stringify"],[186,28,164,26],[186,29,164,27,"f"],[186,30,164,28],[186,31,164,29],[186,36,164,34],[186,40,164,38],[186,42,164,40],[186,49,164,47,"accum"],[186,54,164,52],[187,10,165,8],[187,17,165,15,"accum"],[187,22,165,20],[187,23,165,21,"concat"],[187,29,165,27],[187,30,165,28,"f"],[187,31,165,29],[187,32,165,30],[188,8,166,6],[188,9,166,7],[188,10,166,8],[188,17,166,15,"e"],[188,18,166,16],[188,20,166,18],[189,10,167,8],[189,17,167,15,"accum"],[189,22,167,20],[190,8,168,6],[191,6,169,4],[191,7,169,5],[191,9,169,7],[191,11,169,9],[192,4,170,2],[192,5,170,3],[193,2,171,0],[194,2,173,0],[194,11,173,9,"getCauseStack"],[194,24,173,22,"getCauseStack"],[194,25,173,24,"error"],[194,30,173,29],[194,32,173,31],[195,4,174,2],[195,8,174,6,"error"],[195,13,174,11],[195,14,174,12,"cause"],[195,19,174,17],[195,21,174,19],[196,6,175,4],[196,14,175,12,"error"],[196,19,175,17],[196,21,175,17,"concat"],[196,27,175,17],[196,28,175,17,"_toConsumableArray"],[196,46,175,17],[196,47,175,22,"getCauseStack"],[196,60,175,35],[196,61,175,36,"error"],[196,66,175,41],[196,67,175,42,"cause"],[196,72,175,47],[196,73,175,48],[197,4,176,2],[197,5,176,3],[197,11,176,9],[198,6,177,4],[198,13,177,11],[198,14,177,12,"error"],[198,19,177,17],[198,20,177,18],[199,4,178,2],[200,2,179,0],[202,2,181,0],[204,2,183,0,"Event"],[204,7,183,5],[204,8,183,6,"getStacktrace"],[204,21,183,19],[204,24,183,22],[204,34,183,32,"error"],[204,39,183,37],[204,41,183,39,"errorFramesToSkip"],[204,58,183,56],[204,60,183,58,"backtraceFramesToSkip"],[204,81,183,79],[204,83,183,81],[205,4,184,2],[205,8,184,6,"_$$_REQUIRE"],[205,19,184,6],[205,20,184,6,"_dependencyMap"],[205,34,184,6],[205,58,184,15,"error"],[205,63,184,20],[205,64,184,21],[205,66,184,23],[205,73,184,30,"_$$_REQUIRE"],[205,84,184,30],[205,85,184,30,"_dependencyMap"],[205,99,184,30],[205,133,184,47,"parse"],[205,138,184,52],[205,139,184,53,"error"],[205,144,184,58],[205,145,184,59],[205,146,184,60,"slice"],[205,151,184,65],[205,152,184,66,"errorFramesToSkip"],[205,169,184,83],[205,170,184,84],[206,4,185,2],[207,4,186,2],[207,8,186,6],[208,6,187,4],[208,13,187,11,"_$$_REQUIRE"],[208,24,187,11],[208,25,187,11,"_dependencyMap"],[208,39,187,11],[208,70,187,18,"_$$_REQUIRE"],[208,81,187,18],[208,82,187,18,"_dependencyMap"],[208,96,187,18],[208,121,187,33,"backtrace"],[208,130,187,42],[208,131,187,43],[208,132,187,44],[208,134,187,46],[208,144,187,46,"frame"],[208,149,187,51],[209,8,187,51],[209,15,188,6],[209,16,188,7,"frame"],[209,21,188,12],[209,22,188,13,"functionName"],[209,34,188,25],[209,38,188,29],[209,40,188,31],[209,42,188,33,"indexOf"],[209,49,188,40],[209,50,188,41],[209,68,188,59],[209,69,188,60],[209,74,188,65],[209,75,188,66],[209,76,188,67],[210,6,188,67],[210,7,189,4],[210,8,189,5],[210,9,189,6,"slice"],[210,14,189,11],[210,15,189,12],[210,16,189,13],[210,19,189,16,"backtraceFramesToSkip"],[210,40,189,37],[210,41,189,38],[211,4,190,2],[211,5,190,3],[211,6,190,4],[211,13,190,11,"e"],[211,14,190,12],[211,16,190,14],[212,6,191,4],[212,13,191,11],[212,15,191,13],[213,4,192,2],[214,2,193,0],[214,3,193,1],[215,2,195,0,"Event"],[215,7,195,5],[215,8,195,6,"create"],[215,14,195,12],[215,17,195,15],[215,27,195,25,"maybeError"],[215,37,195,35],[215,39,195,37,"tolerateNonErrors"],[215,56,195,54],[215,58,195,56,"handledState"],[215,70,195,68],[215,72,195,70,"component"],[215,81,195,79],[215,83,195,112],[216,4,195,112],[216,8,195,81,"errorFramesToSkip"],[216,25,195,98],[216,28,195,98,"arguments"],[216,37,195,98],[216,38,195,98,"length"],[216,44,195,98],[216,52,195,98,"arguments"],[216,61,195,98],[216,69,195,98,"undefined"],[216,78,195,98],[216,81,195,98,"arguments"],[216,90,195,98],[216,96,195,101],[216,97,195,102],[217,4,195,102],[217,8,195,104,"logger"],[217,14,195,110],[217,17,195,110,"arguments"],[217,26,195,110],[217,27,195,110,"length"],[217,33,195,110],[217,40,195,110,"arguments"],[217,49,195,110],[217,55,195,110,"undefined"],[217,64,195,110],[218,4,196,2],[218,8,196,2,"_normaliseError"],[218,23,196,2],[218,26,196,34,"normaliseError"],[218,40,196,48],[218,41,196,49,"maybeError"],[218,51,196,59],[218,53,196,61,"tolerateNonErrors"],[218,70,196,78],[218,72,196,80,"component"],[218,81,196,89],[218,83,196,91,"logger"],[218,89,196,97],[218,90,196,98],[219,6,196,98,"_normaliseError2"],[219,22,196,98],[219,25,196,98,"_slicedToArray"],[219,39,196,98],[219,40,196,98,"_normaliseError"],[219,55,196,98],[220,6,196,9,"error"],[220,11,196,14],[220,14,196,14,"_normaliseError2"],[220,30,196,14],[221,6,196,16,"internalFrames"],[221,20,196,30],[221,23,196,30,"_normaliseError2"],[221,39,196,30],[222,4,197,2],[222,8,197,6,"event"],[222,13,197,11],[223,4,198,2],[223,8,198,6],[224,6,199,4],[224,10,199,10,"stacktrace"],[224,20,199,20],[224,23,199,23,"Event"],[224,28,199,28],[224,29,199,29,"getStacktrace"],[224,42,199,42],[224,43,200,6,"error"],[224,48,200,11],[225,6,201,6],[226,6,202,6],[227,6,203,6],[228,6,204,6],[229,6,205,6,"internalFrames"],[229,20,205,20],[229,23,205,23],[229,24,205,24],[229,27,205,27],[229,28,205,28],[229,31,205,31,"internalFrames"],[229,45,205,45],[229,48,205,48,"errorFramesToSkip"],[229,65,205,65],[229,68,205,68],[229,69,205,69],[230,6,206,6],[231,6,207,6],[232,6,208,6],[232,7,208,7],[232,10,208,10,"errorFramesToSkip"],[232,27,209,4],[232,28,209,5],[233,6,210,4,"event"],[233,11,210,9],[233,14,210,12],[233,18,210,16,"Event"],[233,23,210,21],[233,24,210,22,"error"],[233,29,210,27],[233,30,210,28,"name"],[233,34,210,32],[233,36,210,34,"error"],[233,41,210,39],[233,42,210,40,"message"],[233,49,210,47],[233,51,210,49,"stacktrace"],[233,61,210,59],[233,63,210,61,"handledState"],[233,75,210,73],[233,77,210,75,"maybeError"],[233,87,210,85],[233,88,210,86],[234,4,211,2],[234,5,211,3],[234,6,211,4],[234,13,211,11,"e"],[234,14,211,12],[234,16,211,14],[235,6,212,4,"event"],[235,11,212,9],[235,14,212,12],[235,18,212,16,"Event"],[235,23,212,21],[235,24,212,22,"error"],[235,29,212,27],[235,30,212,28,"name"],[235,34,212,32],[235,36,212,34,"error"],[235,41,212,39],[235,42,212,40,"message"],[235,49,212,47],[235,51,212,49],[235,53,212,51],[235,55,212,53,"handledState"],[235,67,212,65],[235,69,212,67,"maybeError"],[235,79,212,77],[235,80,212,78],[236,4,213,2],[237,4,214,2],[237,8,214,6,"error"],[237,13,214,11],[237,14,214,12,"name"],[237,18,214,16],[237,23,214,21],[237,37,214,35],[237,39,214,37],[238,6,215,4,"event"],[238,11,215,9],[238,12,215,10,"addMetadata"],[238,23,215,21],[238,24,215,22],[238,27,215,25,"component"],[238,36,215,34],[238,38,215,36],[238,40,215,38],[238,61,215,59],[238,63,215,61,"makeSerialisable"],[238,79,215,77],[238,80,215,78,"maybeError"],[238,90,215,88],[238,91,215,89],[238,92,215,90],[239,4,216,2],[240,4,217,2],[240,8,217,6,"error"],[240,13,217,11],[240,14,217,12,"cause"],[240,19,217,17],[240,21,217,19],[241,6,217,19],[241,10,217,19,"_event$errors"],[241,23,217,19],[242,6,218,4],[242,10,218,10,"causes"],[242,16,218,16],[242,19,218,19,"getCauseStack"],[242,32,218,32],[242,33,218,33,"error"],[242,38,218,38],[242,39,218,39],[242,40,218,40,"slice"],[242,45,218,45],[242,46,218,46],[242,47,218,47],[242,48,218,48],[243,6,219,4],[243,10,219,10,"normalisedCauses"],[243,26,219,26],[243,29,219,29,"_$$_REQUIRE"],[243,40,219,29],[243,41,219,29,"_dependencyMap"],[243,55,219,29],[243,82,219,33,"causes"],[243,88,219,39],[243,90,219,41],[243,100,219,42,"cause"],[243,105,219,47],[243,107,219,52],[244,8,220,6],[245,8,221,6],[245,12,221,12,"stacktrace"],[245,22,221,22],[245,25,221,26,"_$$_REQUIRE"],[245,36,221,26],[245,37,221,26,"_dependencyMap"],[245,51,221,26],[245,74,221,34,"cause"],[245,79,221,39],[245,80,221,40],[245,84,221,44,"_$$_REQUIRE"],[245,95,221,44],[245,96,221,44,"_dependencyMap"],[245,110,221,44],[245,134,221,53,"cause"],[245,139,221,58],[245,140,221,59],[245,143,221,63,"_$$_REQUIRE"],[245,154,221,63],[245,155,221,63,"_dependencyMap"],[245,169,221,63],[245,203,221,80,"parse"],[245,208,221,85],[245,209,221,86,"cause"],[245,214,221,91],[245,215,221,92],[245,218,221,95],[245,220,221,97],[246,8,222,6],[246,12,222,6,"_normaliseError3"],[246,28,222,6],[246,31,222,22,"normaliseError"],[246,45,222,36],[246,46,222,37,"cause"],[246,51,222,42],[246,53,222,44],[246,57,222,48],[246,59,222,50],[246,72,222,63],[246,73,222,64],[247,10,222,64,"_normaliseError4"],[247,26,222,64],[247,29,222,64,"_slicedToArray"],[247,43,222,64],[247,44,222,64,"_normaliseError3"],[247,60,222,64],[248,10,222,13,"error"],[248,15,222,18],[248,18,222,18,"_normaliseError4"],[248,34,222,18],[249,8,223,6],[249,12,223,10,"error"],[249,17,223,15],[249,18,223,16,"name"],[249,22,223,20],[249,27,223,25],[249,41,223,39],[249,43,223,41,"event"],[249,48,223,46],[249,49,223,47,"addMetadata"],[249,60,223,58],[249,61,223,59],[249,74,223,72],[249,76,223,74,"makeSerialisable"],[249,92,223,90],[249,93,223,91,"cause"],[249,98,223,96],[249,99,223,97],[249,100,223,98],[250,8,224,6],[250,15,224,13,"createBugsnagError"],[250,33,224,31],[250,34,224,32,"error"],[250,39,224,37],[250,40,224,38,"name"],[250,44,224,42],[250,46,224,44,"error"],[250,51,224,49],[250,52,224,50,"message"],[250,59,224,57],[250,61,224,59,"Event"],[250,66,224,64],[250,67,224,65,"__type"],[250,73,224,71],[250,75,224,73,"stacktrace"],[250,85,224,83],[250,86,224,84],[251,6,225,4],[251,7,225,5],[251,8,225,6],[252,6,227,4],[252,7,227,4,"_event$errors"],[252,20,227,4],[252,23,227,4,"event"],[252,28,227,9],[252,29,227,10,"errors"],[252,35,227,16],[252,37,227,17,"push"],[252,41,227,21],[252,42,227,21,"apply"],[252,47,227,21],[252,48,227,21,"_event$errors"],[252,61,227,21],[252,63,227,21,"_toConsumableArray"],[252,81,227,21],[252,82,227,25,"normalisedCauses"],[252,98,227,41],[252,100,227,42],[253,4,228,2],[254,4,230,2],[254,11,230,9,"event"],[254,16,230,14],[255,2,231,0],[255,3,231,1],[256,2,233,0],[256,6,233,6,"makeSerialisable"],[256,22,233,22],[256,25,233,25],[256,34,233,6,"makeSerialisable"],[256,50,233,22,"makeSerialisable"],[256,51,233,26,"err"],[256,54,233,29],[256,56,233,34],[257,4,234,2],[257,8,234,6,"err"],[257,11,234,9],[257,16,234,14],[257,20,234,18],[257,22,234,20],[257,29,234,27],[257,35,234,33],[258,4,235,2],[258,8,235,6,"err"],[258,11,235,9],[258,16,235,14,"undefined"],[258,25,235,23],[258,27,235,25],[258,34,235,32],[258,45,235,43],[259,4,236,2],[259,11,236,9,"err"],[259,14,236,12],[260,2,237,0],[260,3,237,1],[261,2,239,0],[261,6,239,6,"normaliseError"],[261,20,239,20],[261,23,239,23],[261,32,239,6,"normaliseError"],[261,46,239,20,"normaliseError"],[261,47,239,24,"maybeError"],[261,57,239,34],[261,59,239,36,"tolerateNonErrors"],[261,76,239,53],[261,78,239,55,"component"],[261,87,239,64],[261,89,239,66,"logger"],[261,95,239,72],[261,97,239,77],[262,4,240,2],[262,8,240,6,"error"],[262,13,240,11],[263,4,241,2],[263,8,241,6,"internalFrames"],[263,22,241,20],[263,25,241,23],[263,26,241,24],[264,4,243,2],[264,8,243,8,"createAndLogInputError"],[264,30,243,30],[264,33,243,33],[264,42,243,8,"createAndLogInputError"],[264,64,243,30,"createAndLogInputError"],[264,65,243,34,"reason"],[264,71,243,40],[264,73,243,45],[265,6,244,4],[265,10,244,10,"verb"],[265,14,244,14],[265,17,244,18,"component"],[265,26,244,27],[265,31,244,32],[265,44,244,45],[265,47,244,48],[265,52,244,53],[265,55,244,56],[265,65,244,67],[266,6,245,4],[266,10,245,8,"logger"],[266,16,245,14],[266,18,245,16,"logger"],[266,24,245,22],[266,25,245,23,"warn"],[266,29,245,27],[266,30,245,28],[266,33,245,31,"component"],[266,42,245,40],[266,46,245,44,"verb"],[266,50,245,48],[266,68,245,66,"reason"],[266,74,245,72],[266,77,245,75],[266,78,245,76],[267,6,246,4],[267,10,246,10,"err"],[267,13,246,13],[267,16,246,16],[267,20,246,20,"Error"],[267,25,246,25],[267,26,246,26],[267,29,246,29,"component"],[267,38,246,38],[267,42,246,42,"verb"],[267,46,246,46],[267,68,246,68,"component"],[267,77,246,77],[267,101,246,101],[267,102,246,102],[268,6,247,4,"err"],[268,9,247,7],[268,10,247,8,"name"],[268,14,247,12],[268,17,247,15],[268,31,247,29],[269,6,248,4],[269,13,248,11,"err"],[269,16,248,14],[270,4,249,2],[270,5,249,3],[272,4,251,2],[273,4,252,2],[274,4,253,2],[275,4,254,2],[276,4,255,2],[277,4,256,2],[278,4,257,2],[279,4,258,2],[280,4,259,2],[280,8,259,6],[280,9,259,7,"tolerateNonErrors"],[280,26,259,24],[280,28,259,26],[281,6,260,4],[281,10,260,8,"_$$_REQUIRE"],[281,21,260,8],[281,22,260,8,"_dependencyMap"],[281,36,260,8],[281,59,260,16,"maybeError"],[281,69,260,26],[281,70,260,27],[281,72,260,29],[282,8,261,6,"error"],[282,13,261,11],[282,16,261,14,"maybeError"],[282,26,261,24],[283,6,262,4],[283,7,262,5],[283,13,262,11],[284,8,263,6,"error"],[284,13,263,11],[284,16,263,14,"createAndLogInputError"],[284,38,263,36],[284,39,263,37],[284,46,263,44,"maybeError"],[284,56,263,54],[284,57,263,55],[285,8,264,6,"internalFrames"],[285,22,264,20],[285,26,264,24],[285,27,264,25],[286,6,265,4],[287,4,266,2],[287,5,266,3],[287,11,266,9],[288,6,267,4],[288,14,267,12],[288,21,267,19,"maybeError"],[288,31,267,29],[289,8,268,6],[289,13,268,11],[289,21,268,19],[290,8,269,6],[290,13,269,11],[290,21,269,19],[291,8,270,6],[291,13,270,11],[291,22,270,20],[292,10,271,8,"error"],[292,15,271,13],[292,18,271,16],[292,22,271,20,"Error"],[292,27,271,25],[292,28,271,26,"String"],[292,34,271,32],[292,35,271,33,"maybeError"],[292,45,271,43],[292,46,271,44],[292,47,271,45],[293,10,272,8,"internalFrames"],[293,24,272,22],[293,28,272,26],[293,29,272,27],[294,10,273,8],[295,8,274,6],[295,13,274,11],[295,23,274,21],[296,10,275,8,"error"],[296,15,275,13],[296,18,275,16,"createAndLogInputError"],[296,40,275,38],[296,41,275,39],[296,51,275,49],[296,52,275,50],[297,10,276,8,"internalFrames"],[297,24,276,22],[297,28,276,26],[297,29,276,27],[298,10,277,8],[299,8,278,6],[299,13,278,11],[299,21,278,19],[300,10,279,8],[300,14,279,12,"maybeError"],[300,24,279,22],[300,29,279,27],[300,33,279,31],[300,37,279,35,"_$$_REQUIRE"],[300,48,279,35],[300,49,279,35,"_dependencyMap"],[300,63,279,35],[300,86,279,43,"maybeError"],[300,96,279,53],[300,97,279,54],[300,99,279,56],[301,12,280,10,"error"],[301,17,280,15],[301,20,280,18,"maybeError"],[301,30,280,28],[302,10,281,8],[302,11,281,9],[302,17,281,15],[302,21,281,19,"maybeError"],[302,31,281,29],[302,36,281,34],[302,40,281,38],[302,44,281,42,"hasNecessaryFields"],[302,62,281,60],[302,63,281,61,"maybeError"],[302,73,281,71],[302,74,281,72],[302,76,281,74],[303,12,282,10,"error"],[303,17,282,15],[303,20,282,18],[303,24,282,22,"Error"],[303,29,282,27],[303,30,282,28,"maybeError"],[303,40,282,38],[303,41,282,39,"message"],[303,48,282,46],[303,52,282,50,"maybeError"],[303,62,282,60],[303,63,282,61,"errorMessage"],[303,75,282,73],[303,76,282,74],[304,12,283,10,"error"],[304,17,283,15],[304,18,283,16,"name"],[304,22,283,20],[304,25,283,23,"maybeError"],[304,35,283,33],[304,36,283,34,"name"],[304,40,283,38],[304,44,283,42,"maybeError"],[304,54,283,52],[304,55,283,53,"errorClass"],[304,65,283,63],[305,12,284,10,"internalFrames"],[305,26,284,24],[305,30,284,28],[305,31,284,29],[306,10,285,8],[306,11,285,9],[306,17,285,15],[307,12,286,10,"error"],[307,17,286,15],[307,20,286,18,"createAndLogInputError"],[307,42,286,40],[307,43,286,41,"maybeError"],[307,53,286,51],[307,58,286,56],[307,62,286,60],[307,65,286,63],[307,71,286,69],[307,74,286,72],[307,94,286,92],[307,95,286,93],[308,12,287,10,"internalFrames"],[308,26,287,24],[308,30,287,28],[308,31,287,29],[309,10,288,8],[310,10,289,8],[311,8,290,6],[312,10,291,8,"error"],[312,15,291,13],[312,18,291,16,"createAndLogInputError"],[312,40,291,38],[312,41,291,39],[312,50,291,48],[312,51,291,49],[313,10,292,8,"internalFrames"],[313,24,292,22],[313,28,292,26],[313,29,292,27],[314,6,293,4],[315,4,294,2],[316,4,296,2],[316,8,296,6],[316,9,296,7,"_$$_REQUIRE"],[316,20,296,7],[316,21,296,7,"_dependencyMap"],[316,35,296,7],[316,59,296,16,"error"],[316,64,296,21],[316,65,296,22],[316,67,296,24],[317,6,297,4],[318,6,298,4],[318,10,298,8],[319,8,299,6],[319,14,299,12,"error"],[319,19,299,17],[320,6,300,4],[320,7,300,5],[320,8,300,6],[320,15,300,13,"e"],[320,16,300,14],[320,18,300,16],[321,8,301,6],[321,12,301,10,"_$$_REQUIRE"],[321,23,301,10],[321,24,301,10,"_dependencyMap"],[321,38,301,10],[321,62,301,19,"e"],[321,63,301,20],[321,64,301,21],[321,66,301,23],[322,10,302,8,"error"],[322,15,302,13],[322,18,302,16,"e"],[322,19,302,17],[323,10,303,8],[324,10,304,8],[325,10,305,8],[326,10,306,8,"internalFrames"],[326,24,306,22],[326,27,306,25],[326,28,306,26],[327,8,307,6],[328,6,308,4],[329,4,309,2],[330,4,311,2],[330,11,311,9],[330,12,311,10,"error"],[330,17,311,15],[330,19,311,17,"internalFrames"],[330,33,311,31],[330,34,311,32],[331,2,312,0],[331,3,312,1],[333,2,314,0],[334,2,315,0,"Event"],[334,7,315,5],[334,8,315,6,"__type"],[334,14,315,12],[334,17,315,15],[334,28,315,26],[335,2,317,0],[335,6,317,6,"hasNecessaryFields"],[335,24,317,24],[335,27,317,27],[335,36,317,6,"hasNecessaryFields"],[335,54,317,24,"hasNecessaryFields"],[335,55,317,27,"error"],[335,60,317,32],[336,4,317,32],[336,11,318,2],[336,12,318,3],[336,19,318,10,"error"],[336,24,318,15],[336,25,318,16,"name"],[336,29,318,20],[336,34,318,25],[336,42,318,33],[336,46,318,37],[336,53,318,44,"error"],[336,58,318,49],[336,59,318,50,"errorClass"],[336,69,318,60],[336,74,318,65],[336,82,318,73],[336,88,319,3],[336,95,319,10,"error"],[336,100,319,15],[336,101,319,16,"message"],[336,108,319,23],[336,113,319,28],[336,121,319,36],[336,125,319,40],[336,132,319,47,"error"],[336,137,319,52],[336,138,319,53,"errorMessage"],[336,150,319,65],[336,155,319,70],[336,163,319,78],[336,164,319,79],[337,2,319,79],[338,2,321,0,"module"],[338,8,321,6],[338,9,321,7,"exports"],[338,16,321,14],[338,19,321,17,"Event"],[338,24,321,22],[339,0,321,22],[339,3]],"functionMap":{"names":["<global>","Event","Event#constructor","Event#addMetadata","Event#setTraceCorrelation","Event#getMetadata","Event#clearMetadata","Event#addFeatureFlag","Event#addFeatureFlags","Event#getFeatureFlags","Event#clearFeatureFlag","Event#clearFeatureFlags","Event#getUser","Event#setUser","Event#toJSON","map$argument_1","formatStackframe","normaliseFunctionName","defaultHandledState","ensureString","createBugsnagError","reduce$argument_1","getCauseStack","Event.getStacktrace","filter$argument_1","Event.create","makeSerialisable","normaliseError","createAndLogInputError","hasNecessaryFields"],"mappings":"AAA;ACW;ECC;GDiC;EEE;GFE;EGS;GHI;EIE;GJE;EKE;GLE;EME;GNE;EOE;GPE;EQE;GRE;ESE;GTE;EUE;GVG;EWE;GXE;EYE;GZE;EaE;mCCG,kDD;GbgB;CDC;yBgBI;ChBiB;8BiBE,0DjB;4BkBE;ElBI;qBmBE,2CnB;AoBE;mCCK;KDS;CpBE;AsBE;CtBM;sBuBI;8CCI;mEDC;CvBK;eyBE;yCVwB;KUM;CzBM;yB0BE;C1BI;uB2BE;iCCI;GDM;C3B+D;2B6BK;+E7BE"}},"type":"js/module"}]}