{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":11,"index":11},"end":{"line":1,"column":42,"index":42}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n  var FUNCTION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Function;\n  var COLON = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Colon;\n  var RIGHTPARENTHESIS = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.RightParenthesis;\n\n  // :: [ <ident> | <function-token> <any-value>? ) ]\n  module.exports = {\n    name: 'PseudoElementSelector',\n    structure: {\n      name: String,\n      children: [['Raw'], null]\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n      var children = null;\n      var name;\n      var nameLowerCase;\n      this.eat(COLON);\n      this.eat(COLON);\n      if (this.scanner.tokenType === FUNCTION) {\n        name = this.consumeFunctionName();\n        nameLowerCase = name.toLowerCase();\n        if (this.pseudo.hasOwnProperty(nameLowerCase)) {\n          this.scanner.skipSC();\n          children = this.pseudo[nameLowerCase].call(this);\n          this.scanner.skipSC();\n        } else {\n          children = this.createList();\n          children.push(this.Raw(this.scanner.tokenIndex, null, false));\n        }\n        this.eat(RIGHTPARENTHESIS);\n      } else {\n        name = this.consume(IDENT);\n      }\n      return {\n        type: 'PseudoElementSelector',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: name,\n        children: children\n      };\n    },\n    generate: function generate(node) {\n      this.chunk('::');\n      this.chunk(node.name);\n      if (node.children !== null) {\n        this.chunk('(');\n        this.children(node);\n        this.chunk(')');\n      }\n    },\n    walkContext: 'function'\n  };\n});","lineCount":54,"map":[[2,2,3,0],[2,6,3,4,"IDENT"],[2,11,3,9],[2,14,3,12,"_$$_REQUIRE"],[2,25,3,12],[2,26,3,12,"_dependencyMap"],[2,40,3,12],[2,64,3,12,"TYPE"],[2,68,3,12],[2,69,3,17,"Ident"],[2,74,3,22],[3,2,4,0],[3,6,4,4,"FUNCTION"],[3,14,4,12],[3,17,4,15,"_$$_REQUIRE"],[3,28,4,15],[3,29,4,15,"_dependencyMap"],[3,43,4,15],[3,67,4,15,"TYPE"],[3,71,4,15],[3,72,4,20,"Function"],[3,80,4,28],[4,2,5,0],[4,6,5,4,"COLON"],[4,11,5,9],[4,14,5,12,"_$$_REQUIRE"],[4,25,5,12],[4,26,5,12,"_dependencyMap"],[4,40,5,12],[4,64,5,12,"TYPE"],[4,68,5,12],[4,69,5,17,"Colon"],[4,74,5,22],[5,2,6,0],[5,6,6,4,"RIGHTPARENTHESIS"],[5,22,6,20],[5,25,6,23,"_$$_REQUIRE"],[5,36,6,23],[5,37,6,23,"_dependencyMap"],[5,51,6,23],[5,75,6,23,"TYPE"],[5,79,6,23],[5,80,6,28,"RightParenthesis"],[5,96,6,44],[7,2,8,0],[8,2,9,0,"module"],[8,8,9,6],[8,9,9,7,"exports"],[8,16,9,14],[8,19,9,17],[9,4,10,4,"name"],[9,8,10,8],[9,10,10,10],[9,33,10,33],[10,4,11,4,"structure"],[10,13,11,13],[10,15,11,15],[11,6,12,8,"name"],[11,10,12,12],[11,12,12,14,"String"],[11,18,12,20],[12,6,13,8,"children"],[12,14,13,16],[12,16,13,18],[12,17,13,19],[12,18,13,20],[12,23,13,25],[12,24,13,26],[12,26,13,28],[12,30,13,32],[13,4,14,4],[13,5,14,5],[14,4,15,4,"parse"],[14,9,15,9],[14,11,15,11],[14,20,15,4,"parse"],[14,25,15,9,"parse"],[14,26,15,9],[14,28,15,22],[15,6,16,8],[15,10,16,12,"start"],[15,15,16,17],[15,18,16,20],[15,22,16,24],[15,23,16,25,"scanner"],[15,30,16,32],[15,31,16,33,"tokenStart"],[15,41,16,43],[16,6,17,8],[16,10,17,12,"children"],[16,18,17,20],[16,21,17,23],[16,25,17,27],[17,6,18,8],[17,10,18,12,"name"],[17,14,18,16],[18,6,19,8],[18,10,19,12,"nameLowerCase"],[18,23,19,25],[19,6,21,8],[19,10,21,12],[19,11,21,13,"eat"],[19,14,21,16],[19,15,21,17,"COLON"],[19,20,21,22],[19,21,21,23],[20,6,22,8],[20,10,22,12],[20,11,22,13,"eat"],[20,14,22,16],[20,15,22,17,"COLON"],[20,20,22,22],[20,21,22,23],[21,6,24,8],[21,10,24,12],[21,14,24,16],[21,15,24,17,"scanner"],[21,22,24,24],[21,23,24,25,"tokenType"],[21,32,24,34],[21,37,24,39,"FUNCTION"],[21,45,24,47],[21,47,24,49],[22,8,25,12,"name"],[22,12,25,16],[22,15,25,19],[22,19,25,23],[22,20,25,24,"consumeFunctionName"],[22,39,25,43],[22,40,25,44],[22,41,25,45],[23,8,26,12,"nameLowerCase"],[23,21,26,25],[23,24,26,28,"name"],[23,28,26,32],[23,29,26,33,"toLowerCase"],[23,40,26,44],[23,41,26,45],[23,42,26,46],[24,8,28,12],[24,12,28,16],[24,16,28,20],[24,17,28,21,"pseudo"],[24,23,28,27],[24,24,28,28,"hasOwnProperty"],[24,38,28,42],[24,39,28,43,"nameLowerCase"],[24,52,28,56],[24,53,28,57],[24,55,28,59],[25,10,29,16],[25,14,29,20],[25,15,29,21,"scanner"],[25,22,29,28],[25,23,29,29,"skipSC"],[25,29,29,35],[25,30,29,36],[25,31,29,37],[26,10,30,16,"children"],[26,18,30,24],[26,21,30,27],[26,25,30,31],[26,26,30,32,"pseudo"],[26,32,30,38],[26,33,30,39,"nameLowerCase"],[26,46,30,52],[26,47,30,53],[26,48,30,54,"call"],[26,52,30,58],[26,53,30,59],[26,57,30,63],[26,58,30,64],[27,10,31,16],[27,14,31,20],[27,15,31,21,"scanner"],[27,22,31,28],[27,23,31,29,"skipSC"],[27,29,31,35],[27,30,31,36],[27,31,31,37],[28,8,32,12],[28,9,32,13],[28,15,32,19],[29,10,33,16,"children"],[29,18,33,24],[29,21,33,27],[29,25,33,31],[29,26,33,32,"createList"],[29,36,33,42],[29,37,33,43],[29,38,33,44],[30,10,34,16,"children"],[30,18,34,24],[30,19,34,25,"push"],[30,23,34,29],[30,24,35,20],[30,28,35,24],[30,29,35,25,"Raw"],[30,32,35,28],[30,33,35,29],[30,37,35,33],[30,38,35,34,"scanner"],[30,45,35,41],[30,46,35,42,"tokenIndex"],[30,56,35,52],[30,58,35,54],[30,62,35,58],[30,64,35,60],[30,69,35,65],[30,70,36,16],[30,71,36,17],[31,8,37,12],[32,8,39,12],[32,12,39,16],[32,13,39,17,"eat"],[32,16,39,20],[32,17,39,21,"RIGHTPARENTHESIS"],[32,33,39,37],[32,34,39,38],[33,6,40,8],[33,7,40,9],[33,13,40,15],[34,8,41,12,"name"],[34,12,41,16],[34,15,41,19],[34,19,41,23],[34,20,41,24,"consume"],[34,27,41,31],[34,28,41,32,"IDENT"],[34,33,41,37],[34,34,41,38],[35,6,42,8],[36,6,44,8],[36,13,44,15],[37,8,45,12,"type"],[37,12,45,16],[37,14,45,18],[37,37,45,41],[38,8,46,12,"loc"],[38,11,46,15],[38,13,46,17],[38,17,46,21],[38,18,46,22,"getLocation"],[38,29,46,33],[38,30,46,34,"start"],[38,35,46,39],[38,37,46,41],[38,41,46,45],[38,42,46,46,"scanner"],[38,49,46,53],[38,50,46,54,"tokenStart"],[38,60,46,64],[38,61,46,65],[39,8,47,12,"name"],[39,12,47,16],[39,14,47,18,"name"],[39,18,47,22],[40,8,48,12,"children"],[40,16,48,20],[40,18,48,22,"children"],[41,6,49,8],[41,7,49,9],[42,4,50,4],[42,5,50,5],[43,4,51,4,"generate"],[43,12,51,12],[43,14,51,14],[43,23,51,4,"generate"],[43,31,51,12,"generate"],[43,32,51,23,"node"],[43,36,51,27],[43,38,51,29],[44,6,52,8],[44,10,52,12],[44,11,52,13,"chunk"],[44,16,52,18],[44,17,52,19],[44,21,52,23],[44,22,52,24],[45,6,53,8],[45,10,53,12],[45,11,53,13,"chunk"],[45,16,53,18],[45,17,53,19,"node"],[45,21,53,23],[45,22,53,24,"name"],[45,26,53,28],[45,27,53,29],[46,6,55,8],[46,10,55,12,"node"],[46,14,55,16],[46,15,55,17,"children"],[46,23,55,25],[46,28,55,30],[46,32,55,34],[46,34,55,36],[47,8,56,12],[47,12,56,16],[47,13,56,17,"chunk"],[47,18,56,22],[47,19,56,23],[47,22,56,26],[47,23,56,27],[48,8,57,12],[48,12,57,16],[48,13,57,17,"children"],[48,21,57,25],[48,22,57,26,"node"],[48,26,57,30],[48,27,57,31],[49,8,58,12],[49,12,58,16],[49,13,58,17,"chunk"],[49,18,58,22],[49,19,58,23],[49,22,58,26],[49,23,58,27],[50,6,59,8],[51,4,60,4],[51,5,60,5],[52,4,61,4,"walkContext"],[52,15,61,15],[52,17,61,17],[53,2,62,0],[53,3,62,1],[54,0,62,2],[54,3]],"functionMap":{"names":["<global>","module.exports.parse","module.exports.generate"],"mappings":"AAA;WCc;KDmC;cEC;KFS"}},"type":"js/module"}]}