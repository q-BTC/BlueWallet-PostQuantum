{"dependencies":[{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":191,"column":0,"index":10145}}],"key":"yg7e6laZwmpbIvId5jovq9ugXp8="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":191,"column":0,"index":10145}}],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30="}},{"name":"bip32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":124},"end":{"line":4,"column":32,"index":140}}],"key":"Cn4QoaIO5SZNfran54NO38Olmzo="}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":16,"index":310},"end":{"line":9,"column":34,"index":328}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8="}},{"name":"bs58check","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":348},"end":{"line":10,"column":38,"index":368}},{"start":{"line":10,"column":18,"index":348},"end":{"line":10,"column":38,"index":368}}],"key":"4OUKwPALIMTasKbVl6WljOsf4WA="}},{"name":"bitcoinjs-lib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":158},"end":{"line":5,"column":40,"index":182}},{"start":{"line":5,"column":16,"index":158},"end":{"line":5,"column":40,"index":182}},{"start":{"line":5,"column":16,"index":158},"end":{"line":5,"column":40,"index":182}},{"start":{"line":5,"column":16,"index":158},"end":{"line":5,"column":40,"index":182}}],"key":"PV1IDhC/8j/Z7SyCy2R2SKCUYnk="}},{"name":"./crypto","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":15,"index":199},"end":{"line":6,"column":34,"index":218}},{"start":{"line":6,"column":15,"index":199},"end":{"line":6,"column":34,"index":218}}],"key":"UlGPg8imq53Of+pf4vVtgObCfOQ="}},{"name":"./xor","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":14,"index":234},"end":{"line":7,"column":30,"index":250}},{"start":{"line":7,"column":14,"index":234},"end":{"line":7,"column":30,"index":250}},{"start":{"line":7,"column":14,"index":234},"end":{"line":7,"column":30,"index":250}},{"start":{"line":7,"column":14,"index":234},"end":{"line":7,"column":30,"index":250}}],"key":"uacRIxk+SP/r2vTjF8sBXB2uaAQ="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":19,"index":271},"end":{"line":8,"column":40,"index":292}},{"start":{"line":8,"column":19,"index":271},"end":{"line":8,"column":40,"index":292}},{"start":{"line":8,"column":19,"index":271},"end":{"line":8,"column":40,"index":292}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/classCallCheck\");\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.BIP47Factory = void 0;\n  function BIP47Factory(ecc) {\n    // TODO: implement a test assertion function for ecc\n    var bip32 = (0, _$$_REQUIRE(_dependencyMap[2], \"bip32\").default)(ecc);\n    var G = Buffer.from('0279BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798', 'hex');\n    var _ref = (0, _$$_REQUIRE(_dependencyMap[3], \"./utils\").default)(ecc, bip32),\n      getPublicPaymentCodeNodeFromBase58 = _ref.getPublicPaymentCodeNodeFromBase58,\n      getRootPaymentCodeNodeFromSeedHex = _ref.getRootPaymentCodeNodeFromSeedHex,\n      getRootPaymentCodeNodeFromBIP39Seed = _ref.getRootPaymentCodeNodeFromBIP39Seed,\n      uintArrayToBuffer = _ref.uintArrayToBuffer,\n      getSharedSecret = _ref.getSharedSecret,\n      toInternalByteOrder = _ref.toInternalByteOrder;\n    var BIP47 = /*#__PURE__*/function () {\n      function BIP47(network, RootPaymentCodeNode) {\n        _classCallCheck(this, BIP47);\n        this.network = network;\n        this.RootPaymentCodeNode = RootPaymentCodeNode;\n      }\n      return _createClass(BIP47, [{\n        key: \"getPaymentWallet\",\n        value: function getPaymentWallet(aliceNode, index) {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code node or network not set');\n          var bobNode = this.RootPaymentCodeNode.derive(index);\n          if (bobNode.privateKey === undefined) throw new Error('Missing private key to generate payment wallets');\n          var firstAliceNode = aliceNode.derive(0);\n          var s = getSharedSecret(firstAliceNode.publicKey, bobNode.privateKey);\n          var prvKeyUint8 = ecc.privateAdd(bobNode.privateKey, s);\n          if (prvKeyUint8 === null) throw new Error('Could not calculate private key');\n          var prvKey = uintArrayToBuffer(prvKeyUint8);\n          return bip32.fromPrivateKey(prvKey, bobNode.chainCode, this.network.network);\n        }\n      }, {\n        key: \"getReceiveWallet\",\n        value: function getReceiveWallet(bobNode, index) {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code node or network not set');\n          var aliceNode = this.RootPaymentCodeNode.derive(0);\n          bobNode = bobNode.derive(index);\n          if (aliceNode.privateKey === undefined) throw new Error('Missing private key to generate receive wallets');\n          var s = getSharedSecret(bobNode.publicKey, aliceNode.privateKey);\n          var sG = ecc.pointMultiply(G, s, true);\n          if (sG === null) throw new Error('Could not calculate private key');\n          var pubKeyUint8 = ecc.pointAdd(bobNode.publicKey, sG);\n          if (pubKeyUint8 === null) throw new Error('Could not sum pub keys');\n          var pubKey = uintArrayToBuffer(pubKeyUint8);\n          return bip32.fromPublicKey(pubKey, bobNode.chainCode, this.network.network);\n        }\n      }, {\n        key: \"getPaymentCodeNode\",\n        value: function getPaymentCodeNode() {\n          return this.RootPaymentCodeNode;\n        }\n      }, {\n        key: \"getPaymentAddress\",\n        value: function getPaymentAddress(bobsRootPaymentCodeNode, index) {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code or network not set');\n          var firstAlicePaymentCodeNode = this.RootPaymentCodeNode.derive(0);\n          var bobPaymentCodeNode = bobsRootPaymentCodeNode.derive(index);\n          if (firstAlicePaymentCodeNode.privateKey === undefined) throw new Error('Missing private key to generate payment address');\n          var a = firstAlicePaymentCodeNode.privateKey;\n          var B = bobPaymentCodeNode.publicKey;\n          var s = getSharedSecret(B, a);\n          var sGUint = ecc.pointMultiply(G, s, true);\n          if (sGUint === null) throw new Error('Could not compute sG');\n          var sG = uintArrayToBuffer(sGUint);\n          var BPrimeUint = ecc.pointAdd(B, sG, true);\n          if (BPrimeUint === null) throw new Error('Could not calculate pubkey');\n          var BPrime = uintArrayToBuffer(BPrimeUint);\n          if (!ecc.isPoint(BPrime)) throw new Error('Calculate Pubkey is invalid');\n          var node = bip32.fromPublicKey(BPrime, bobPaymentCodeNode.chainCode, this.network.network);\n          return this.getAddressFromNode(node);\n        }\n      }, {\n        key: \"getSerializedPaymentCode\",\n        value: function getSerializedPaymentCode() {\n          return _$$_REQUIRE(_dependencyMap[4], \"bs58check\").encode(Buffer.concat([Buffer.from([71]), this.getBinaryPaymentCode()]));\n        }\n      }, {\n        key: \"getBinaryPaymentCode\",\n        value: function getBinaryPaymentCode() {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code or network not set');\n          var node = this.RootPaymentCodeNode;\n          var paymentCodeSerializedBuffer = Buffer.alloc(80);\n          paymentCodeSerializedBuffer[0] = 0x01; // version\n          paymentCodeSerializedBuffer[1] = 0x00; // must be zero\n          paymentCodeSerializedBuffer[2] = node.publicKey[0]; // sign 2 or 3\n          paymentCodeSerializedBuffer.fill(node.publicKey.slice(1), 3, 35); // pubkey\n          paymentCodeSerializedBuffer.fill(node.chainCode, 35, 67); // chain code\n          return paymentCodeSerializedBuffer;\n        }\n      }, {\n        key: \"getNotificationNode\",\n        value: function getNotificationNode() {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code or network not set');\n          return this.RootPaymentCodeNode.derive(0);\n        }\n      }, {\n        key: \"getNotificationNodeFromPaymentCode\",\n        value: function getNotificationNodeFromPaymentCode(paymentCode) {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code or network not set');\n          return getPublicPaymentCodeNodeFromBase58(paymentCode, this.network);\n        }\n      }, {\n        key: \"getNotificationAddressFromPaymentCode\",\n        value: function getNotificationAddressFromPaymentCode(paymentCode) {\n          return this.getAddressFromNode(this.getNotificationNodeFromPaymentCode(paymentCode));\n        }\n      }, {\n        key: \"getNotificationAddress\",\n        value: function getNotificationAddress() {\n          return this.getAddressFromNode(this.getNotificationNode());\n        }\n      }, {\n        key: \"getAddressFromNode\",\n        value: function getAddressFromNode(node) {\n          var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.network;\n          return _$$_REQUIRE(_dependencyMap[5], \"bitcoinjs-lib\").payments.p2pkh({\n            pubkey: node.publicKey,\n            network: network === null || network === void 0 ? void 0 : network.network\n          }).address;\n        }\n      }, {\n        key: \"getBlindedPaymentCode\",\n        value: function getBlindedPaymentCode(bobBIP47, privateKey, outpoint) {\n          if (!this.network || !this.RootPaymentCodeNode) throw new Error('Root Payment code or network not set');\n          if (typeof privateKey === 'string') privateKey = Buffer.from(privateKey, 'hex');\n          if (typeof outpoint === 'string') outpoint = Buffer.from(outpoint, 'hex');\n          var a = privateKey;\n          var B = bobBIP47.getNotificationNode().publicKey;\n          var S = uintArrayToBuffer(ecc.pointMultiply(B, a));\n          var x = uintArrayToBuffer(S.slice(1, 33));\n          var o = outpoint;\n          var s = _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hmacSHA512(o, x);\n          var binaryPaymentCode = this.getBinaryPaymentCode();\n          binaryPaymentCode.fill((0, _$$_REQUIRE(_dependencyMap[7], \"./xor\").xor)(s.slice(0, 32), binaryPaymentCode.slice(3, 35)), 3, 35);\n          binaryPaymentCode.fill((0, _$$_REQUIRE(_dependencyMap[7], \"./xor\").xor)(s.slice(32, 64), binaryPaymentCode.slice(35, 67)), 35, 67);\n          return binaryPaymentCode.toString('hex');\n        }\n      }, {\n        key: \"getFirstExposedPubKeyAndOutpoint\",\n        value: function getFirstExposedPubKeyAndOutpoint(tx) {\n          var first = tx.ins[0];\n          var hash = first.hash;\n          var index = first.index;\n          var indexHex = this.getInternalByteOrderHex(index);\n          var outpoint = Buffer.from(hash.toString('hex') + indexHex, 'hex');\n          var pubKey = null;\n          if (first.witness.length) pubKey = first.witness[1];else if (_$$_REQUIRE(_dependencyMap[5], \"bitcoinjs-lib\").script.toASM(first.script).split(' ').length === 2) pubKey = Buffer.from(_$$_REQUIRE(_dependencyMap[5], \"bitcoinjs-lib\").script.toASM(first.script).split(' ')[1], 'hex');else throw new Error('Unknown Transaction type');\n          return {\n            outpoint: outpoint,\n            pubKey: pubKey\n          };\n        }\n      }, {\n        key: \"getInternalByteOrderHex\",\n        value: function getInternalByteOrderHex(index) {\n          var tmpIndex = index.toString(16).padStart(8, '0');\n          var indexBuffer = toInternalByteOrder(Buffer.from(tmpIndex, 'hex'));\n          var indexHex = indexBuffer.toString('hex');\n          return indexHex;\n        }\n      }, {\n        key: \"getPaymentCodeFromRawNotificationTransaction\",\n        value: function getPaymentCodeFromRawNotificationTransaction(rawHexNotificationData) {\n          var tx = _$$_REQUIRE(_dependencyMap[5], \"bitcoinjs-lib\").Transaction.fromHex(rawHexNotificationData);\n          // tslint:disable-next-line:prefer-const\n          var _this$getFirstExposed = this.getFirstExposedPubKeyAndOutpoint(tx),\n            pubKey = _this$getFirstExposed.pubKey,\n            outpoint = _this$getFirstExposed.outpoint;\n          var A = pubKey;\n          var b = this.getNotificationNode().privateKey;\n          var S = uintArrayToBuffer(ecc.pointMultiply(A, b));\n          var x = uintArrayToBuffer(S.slice(1, 33));\n          var s = _$$_REQUIRE(_dependencyMap[6], \"./crypto\").hmacSHA512(outpoint, x);\n          var opReturnOutput = tx.outs.find(function (o) {\n            return o.script.toString('hex').startsWith('6a4c50');\n          });\n          if (!opReturnOutput) throw new Error('No OP_RETURN output in notification');\n          var binaryPaymentCode = opReturnOutput.script.slice(3);\n          binaryPaymentCode.fill((0, _$$_REQUIRE(_dependencyMap[7], \"./xor\").xor)(s.slice(0, 32), binaryPaymentCode.slice(3, 35)), 3, 35);\n          binaryPaymentCode.fill((0, _$$_REQUIRE(_dependencyMap[7], \"./xor\").xor)(s.slice(32, 64), binaryPaymentCode.slice(35, 67)), 35, 67);\n          return _$$_REQUIRE(_dependencyMap[4], \"bs58check\").encode(Buffer.concat([Buffer.from([71]), binaryPaymentCode]));\n        }\n      }]);\n    }();\n    function fromPaymentCode(paymentCode) {\n      var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _$$_REQUIRE(_dependencyMap[8], \"./networks\").mainnetData;\n      return new BIP47(network, getPublicPaymentCodeNodeFromBase58(paymentCode, network));\n    }\n    function fromBip39Seed(bip39Seed) {\n      var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _$$_REQUIRE(_dependencyMap[8], \"./networks\").mainnetData;\n      var password = arguments.length > 2 ? arguments[2] : undefined;\n      return new BIP47(network, getRootPaymentCodeNodeFromBIP39Seed(bip39Seed, network, password));\n    }\n    function fromSeedHex(seedHex) {\n      var network = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _$$_REQUIRE(_dependencyMap[8], \"./networks\").mainnetData;\n      return new BIP47(network, getRootPaymentCodeNodeFromSeedHex(seedHex, network));\n    }\n    return {\n      fromSeedHex: fromSeedHex,\n      fromBip39Seed: fromBip39Seed,\n      fromPaymentCode: fromPaymentCode\n    };\n  }\n  exports.BIP47Factory = BIP47Factory;\n});","lineCount":213,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_classCallCheck"],[4,21,1,13],[4,24,1,13,"_$$_REQUIRE"],[4,35,1,13],[4,36,1,13,"_dependencyMap"],[4,50,1,13],[5,2,1,13],[5,6,1,13,"_createClass"],[5,18,1,13],[5,21,1,13,"_$$_REQUIRE"],[5,32,1,13],[5,33,1,13,"_dependencyMap"],[5,47,1,13],[6,2,2,0,"Object"],[6,8,2,6],[6,9,2,7,"defineProperty"],[6,23,2,21],[6,24,2,22,"exports"],[6,31,2,29],[6,33,2,31],[6,45,2,43],[6,47,2,45],[7,4,2,47,"value"],[7,9,2,52],[7,11,2,54],[8,2,2,59],[8,3,2,60],[8,4,2,61],[9,2,3,0,"exports"],[9,9,3,7],[9,10,3,8,"BIP47Factory"],[9,22,3,20],[9,25,3,23],[9,30,3,28],[9,31,3,29],[10,2,11,0],[10,11,11,9,"BIP47Factory"],[10,23,11,21,"BIP47Factory"],[10,24,11,22,"ecc"],[10,27,11,25],[10,29,11,27],[11,4,12,4],[12,4,13,4],[12,8,13,10,"bip32"],[12,13,13,15],[12,16,13,18],[12,17,13,19],[12,18,13,20],[12,20,13,22,"_$$_REQUIRE"],[12,31,13,22],[12,32,13,22,"_dependencyMap"],[12,46,13,22],[12,60,13,30,"default"],[12,67,13,37],[12,69,13,39,"ecc"],[12,72,13,42],[12,73,13,43],[13,4,14,4],[13,8,14,10,"G"],[13,9,14,11],[13,12,14,14,"Buffer"],[13,18,14,20],[13,19,14,21,"from"],[13,23,14,25],[13,24,14,26],[13,92,14,94],[13,94,14,96],[13,99,14,101],[13,100,14,102],[14,4,15,4],[14,8,15,4,"_ref"],[14,12,15,4],[14,15,15,181],[14,16,15,182],[14,17,15,183],[14,19,15,185,"_$$_REQUIRE"],[14,30,15,185],[14,31,15,185,"_dependencyMap"],[14,45,15,185],[14,61,15,193,"default"],[14,68,15,200],[14,70,15,202,"ecc"],[14,73,15,205],[14,75,15,207,"bip32"],[14,80,15,212],[14,81,15,213],[15,6,15,12,"getPublicPaymentCodeNodeFromBase58"],[15,40,15,46],[15,43,15,46,"_ref"],[15,47,15,46],[15,48,15,12,"getPublicPaymentCodeNodeFromBase58"],[15,82,15,46],[16,6,15,48,"getRootPaymentCodeNodeFromSeedHex"],[16,39,15,81],[16,42,15,81,"_ref"],[16,46,15,81],[16,47,15,48,"getRootPaymentCodeNodeFromSeedHex"],[16,80,15,81],[17,6,15,83,"getRootPaymentCodeNodeFromBIP39Seed"],[17,41,15,118],[17,44,15,118,"_ref"],[17,48,15,118],[17,49,15,83,"getRootPaymentCodeNodeFromBIP39Seed"],[17,84,15,118],[18,6,15,120,"uintArrayToBuffer"],[18,23,15,137],[18,26,15,137,"_ref"],[18,30,15,137],[18,31,15,120,"uintArrayToBuffer"],[18,48,15,137],[19,6,15,139,"getSharedSecret"],[19,21,15,154],[19,24,15,154,"_ref"],[19,28,15,154],[19,29,15,139,"getSharedSecret"],[19,44,15,154],[20,6,15,156,"toInternalByteOrder"],[20,25,15,175],[20,28,15,175,"_ref"],[20,32,15,175],[20,33,15,156,"toInternalByteOrder"],[20,52,15,175],[21,4,15,214],[21,8,16,10,"BIP47"],[21,13,16,15],[22,6,17,8],[22,15,17,8,"BIP47"],[22,21,17,20,"network"],[22,28,17,27],[22,30,17,29,"RootPaymentCodeNode"],[22,49,17,48],[22,51,17,50],[23,8,17,50,"_classCallCheck"],[23,23,17,50],[23,30,17,50,"BIP47"],[23,35,17,50],[24,8,18,12],[24,12,18,16],[24,13,18,17,"network"],[24,20,18,24],[24,23,18,27,"network"],[24,30,18,34],[25,8,19,12],[25,12,19,16],[25,13,19,17,"RootPaymentCodeNode"],[25,32,19,36],[25,35,19,39,"RootPaymentCodeNode"],[25,54,19,58],[26,6,20,8],[27,6,20,9],[27,13,20,9,"_createClass"],[27,25,20,9],[27,26,20,9,"BIP47"],[27,31,20,9],[28,8,20,9,"key"],[28,11,20,9],[29,8,20,9,"value"],[29,13,20,9],[29,15,21,8],[29,24,21,8,"getPaymentWallet"],[29,40,21,24,"getPaymentWallet"],[29,41,21,25,"aliceNode"],[29,50,21,34],[29,52,21,36,"index"],[29,57,21,41],[29,59,21,43],[30,10,22,12],[30,14,22,16],[30,15,22,17],[30,19,22,21],[30,20,22,22,"network"],[30,27,22,29],[30,31,22,33],[30,32,22,34],[30,36,22,38],[30,37,22,39,"RootPaymentCodeNode"],[30,56,22,58],[30,58,23,16],[30,64,23,22],[30,68,23,26,"Error"],[30,73,23,31],[30,74,23,32],[30,117,23,75],[30,118,23,76],[31,10,24,12],[31,14,24,18,"bobNode"],[31,21,24,25],[31,24,24,28],[31,28,24,32],[31,29,24,33,"RootPaymentCodeNode"],[31,48,24,52],[31,49,24,53,"derive"],[31,55,24,59],[31,56,24,60,"index"],[31,61,24,65],[31,62,24,66],[32,10,25,12],[32,14,25,16,"bobNode"],[32,21,25,23],[32,22,25,24,"privateKey"],[32,32,25,34],[32,37,25,39,"undefined"],[32,46,25,48],[32,48,26,16],[32,54,26,22],[32,58,26,26,"Error"],[32,63,26,31],[32,64,26,32],[32,113,26,81],[32,114,26,82],[33,10,27,12],[33,14,27,18,"firstAliceNode"],[33,28,27,32],[33,31,27,35,"aliceNode"],[33,40,27,44],[33,41,27,45,"derive"],[33,47,27,51],[33,48,27,52],[33,49,27,53],[33,50,27,54],[34,10,28,12],[34,14,28,18,"s"],[34,15,28,19],[34,18,28,22,"getSharedSecret"],[34,33,28,37],[34,34,28,38,"firstAliceNode"],[34,48,28,52],[34,49,28,53,"publicKey"],[34,58,28,62],[34,60,28,64,"bobNode"],[34,67,28,71],[34,68,28,72,"privateKey"],[34,78,28,82],[34,79,28,83],[35,10,29,12],[35,14,29,18,"prvKeyUint8"],[35,25,29,29],[35,28,29,32,"ecc"],[35,31,29,35],[35,32,29,36,"privateAdd"],[35,42,29,46],[35,43,29,47,"bobNode"],[35,50,29,54],[35,51,29,55,"privateKey"],[35,61,29,65],[35,63,29,67,"s"],[35,64,29,68],[35,65,29,69],[36,10,30,12],[36,14,30,16,"prvKeyUint8"],[36,25,30,27],[36,30,30,32],[36,34,30,36],[36,36,31,16],[36,42,31,22],[36,46,31,26,"Error"],[36,51,31,31],[36,52,31,32],[36,85,31,65],[36,86,31,66],[37,10,32,12],[37,14,32,18,"prvKey"],[37,20,32,24],[37,23,32,27,"uintArrayToBuffer"],[37,40,32,44],[37,41,32,45,"prvKeyUint8"],[37,52,32,56],[37,53,32,57],[38,10,33,12],[38,17,33,19,"bip32"],[38,22,33,24],[38,23,33,25,"fromPrivateKey"],[38,37,33,39],[38,38,33,40,"prvKey"],[38,44,33,46],[38,46,33,48,"bobNode"],[38,53,33,55],[38,54,33,56,"chainCode"],[38,63,33,65],[38,65,33,67],[38,69,33,71],[38,70,33,72,"network"],[38,77,33,79],[38,78,33,80,"network"],[38,85,33,87],[38,86,33,88],[39,8,34,8],[40,6,34,9],[41,8,34,9,"key"],[41,11,34,9],[42,8,34,9,"value"],[42,13,34,9],[42,15,35,8],[42,24,35,8,"getReceiveWallet"],[42,40,35,24,"getReceiveWallet"],[42,41,35,25,"bobNode"],[42,48,35,32],[42,50,35,34,"index"],[42,55,35,39],[42,57,35,41],[43,10,36,12],[43,14,36,16],[43,15,36,17],[43,19,36,21],[43,20,36,22,"network"],[43,27,36,29],[43,31,36,33],[43,32,36,34],[43,36,36,38],[43,37,36,39,"RootPaymentCodeNode"],[43,56,36,58],[43,58,37,16],[43,64,37,22],[43,68,37,26,"Error"],[43,73,37,31],[43,74,37,32],[43,117,37,75],[43,118,37,76],[44,10,38,12],[44,14,38,18,"aliceNode"],[44,23,38,27],[44,26,38,30],[44,30,38,34],[44,31,38,35,"RootPaymentCodeNode"],[44,50,38,54],[44,51,38,55,"derive"],[44,57,38,61],[44,58,38,62],[44,59,38,63],[44,60,38,64],[45,10,39,12,"bobNode"],[45,17,39,19],[45,20,39,22,"bobNode"],[45,27,39,29],[45,28,39,30,"derive"],[45,34,39,36],[45,35,39,37,"index"],[45,40,39,42],[45,41,39,43],[46,10,40,12],[46,14,40,16,"aliceNode"],[46,23,40,25],[46,24,40,26,"privateKey"],[46,34,40,36],[46,39,40,41,"undefined"],[46,48,40,50],[46,50,41,16],[46,56,41,22],[46,60,41,26,"Error"],[46,65,41,31],[46,66,41,32],[46,115,41,81],[46,116,41,82],[47,10,42,12],[47,14,42,18,"s"],[47,15,42,19],[47,18,42,22,"getSharedSecret"],[47,33,42,37],[47,34,42,38,"bobNode"],[47,41,42,45],[47,42,42,46,"publicKey"],[47,51,42,55],[47,53,42,57,"aliceNode"],[47,62,42,66],[47,63,42,67,"privateKey"],[47,73,42,77],[47,74,42,78],[48,10,43,12],[48,14,43,18,"sG"],[48,16,43,20],[48,19,43,23,"ecc"],[48,22,43,26],[48,23,43,27,"pointMultiply"],[48,36,43,40],[48,37,43,41,"G"],[48,38,43,42],[48,40,43,44,"s"],[48,41,43,45],[48,43,43,47],[48,47,43,51],[48,48,43,52],[49,10,44,12],[49,14,44,16,"sG"],[49,16,44,18],[49,21,44,23],[49,25,44,27],[49,27,45,16],[49,33,45,22],[49,37,45,26,"Error"],[49,42,45,31],[49,43,45,32],[49,76,45,65],[49,77,45,66],[50,10,46,12],[50,14,46,18,"pubKeyUint8"],[50,25,46,29],[50,28,46,32,"ecc"],[50,31,46,35],[50,32,46,36,"pointAdd"],[50,40,46,44],[50,41,46,45,"bobNode"],[50,48,46,52],[50,49,46,53,"publicKey"],[50,58,46,62],[50,60,46,64,"sG"],[50,62,46,66],[50,63,46,67],[51,10,47,12],[51,14,47,16,"pubKeyUint8"],[51,25,47,27],[51,30,47,32],[51,34,47,36],[51,36,48,16],[51,42,48,22],[51,46,48,26,"Error"],[51,51,48,31],[51,52,48,32],[51,76,48,56],[51,77,48,57],[52,10,49,12],[52,14,49,18,"pubKey"],[52,20,49,24],[52,23,49,27,"uintArrayToBuffer"],[52,40,49,44],[52,41,49,45,"pubKeyUint8"],[52,52,49,56],[52,53,49,57],[53,10,50,12],[53,17,50,19,"bip32"],[53,22,50,24],[53,23,50,25,"fromPublicKey"],[53,36,50,38],[53,37,50,39,"pubKey"],[53,43,50,45],[53,45,50,47,"bobNode"],[53,52,50,54],[53,53,50,55,"chainCode"],[53,62,50,64],[53,64,50,66],[53,68,50,70],[53,69,50,71,"network"],[53,76,50,78],[53,77,50,79,"network"],[53,84,50,86],[53,85,50,87],[54,8,51,8],[55,6,51,9],[56,8,51,9,"key"],[56,11,51,9],[57,8,51,9,"value"],[57,13,51,9],[57,15,52,8],[57,24,52,8,"getPaymentCodeNode"],[57,42,52,26,"getPaymentCodeNode"],[57,43,52,26],[57,45,52,29],[58,10,53,12],[58,17,53,19],[58,21,53,23],[58,22,53,24,"RootPaymentCodeNode"],[58,41,53,43],[59,8,54,8],[60,6,54,9],[61,8,54,9,"key"],[61,11,54,9],[62,8,54,9,"value"],[62,13,54,9],[62,15,55,8],[62,24,55,8,"getPaymentAddress"],[62,41,55,25,"getPaymentAddress"],[62,42,55,26,"bobsRootPaymentCodeNode"],[62,65,55,49],[62,67,55,51,"index"],[62,72,55,56],[62,74,55,58],[63,10,56,12],[63,14,56,16],[63,15,56,17],[63,19,56,21],[63,20,56,22,"network"],[63,27,56,29],[63,31,56,33],[63,32,56,34],[63,36,56,38],[63,37,56,39,"RootPaymentCodeNode"],[63,56,56,58],[63,58,57,16],[63,64,57,22],[63,68,57,26,"Error"],[63,73,57,31],[63,74,57,32],[63,112,57,70],[63,113,57,71],[64,10,58,12],[64,14,58,18,"firstAlicePaymentCodeNode"],[64,39,58,43],[64,42,58,46],[64,46,58,50],[64,47,58,51,"RootPaymentCodeNode"],[64,66,58,70],[64,67,58,71,"derive"],[64,73,58,77],[64,74,58,78],[64,75,58,79],[64,76,58,80],[65,10,59,12],[65,14,59,18,"bobPaymentCodeNode"],[65,32,59,36],[65,35,59,39,"bobsRootPaymentCodeNode"],[65,58,59,62],[65,59,59,63,"derive"],[65,65,59,69],[65,66,59,70,"index"],[65,71,59,75],[65,72,59,76],[66,10,60,12],[66,14,60,16,"firstAlicePaymentCodeNode"],[66,39,60,41],[66,40,60,42,"privateKey"],[66,50,60,52],[66,55,60,57,"undefined"],[66,64,60,66],[66,66,61,16],[66,72,61,22],[66,76,61,26,"Error"],[66,81,61,31],[66,82,61,32],[66,131,61,81],[66,132,61,82],[67,10,62,12],[67,14,62,18,"a"],[67,15,62,19],[67,18,62,22,"firstAlicePaymentCodeNode"],[67,43,62,47],[67,44,62,48,"privateKey"],[67,54,62,58],[68,10,63,12],[68,14,63,18,"B"],[68,15,63,19],[68,18,63,22,"bobPaymentCodeNode"],[68,36,63,40],[68,37,63,41,"publicKey"],[68,46,63,50],[69,10,64,12],[69,14,64,18,"s"],[69,15,64,19],[69,18,64,22,"getSharedSecret"],[69,33,64,37],[69,34,64,38,"B"],[69,35,64,39],[69,37,64,41,"a"],[69,38,64,42],[69,39,64,43],[70,10,65,12],[70,14,65,18,"sGUint"],[70,20,65,24],[70,23,65,27,"ecc"],[70,26,65,30],[70,27,65,31,"pointMultiply"],[70,40,65,44],[70,41,65,45,"G"],[70,42,65,46],[70,44,65,48,"s"],[70,45,65,49],[70,47,65,51],[70,51,65,55],[70,52,65,56],[71,10,66,12],[71,14,66,16,"sGUint"],[71,20,66,22],[71,25,66,27],[71,29,66,31],[71,31,67,16],[71,37,67,22],[71,41,67,26,"Error"],[71,46,67,31],[71,47,67,32],[71,69,67,54],[71,70,67,55],[72,10,68,12],[72,14,68,18,"sG"],[72,16,68,20],[72,19,68,23,"uintArrayToBuffer"],[72,36,68,40],[72,37,68,41,"sGUint"],[72,43,68,47],[72,44,68,48],[73,10,69,12],[73,14,69,18,"BPrimeUint"],[73,24,69,28],[73,27,69,31,"ecc"],[73,30,69,34],[73,31,69,35,"pointAdd"],[73,39,69,43],[73,40,69,44,"B"],[73,41,69,45],[73,43,69,47,"sG"],[73,45,69,49],[73,47,69,51],[73,51,69,55],[73,52,69,56],[74,10,70,12],[74,14,70,16,"BPrimeUint"],[74,24,70,26],[74,29,70,31],[74,33,70,35],[74,35,71,16],[74,41,71,22],[74,45,71,26,"Error"],[74,50,71,31],[74,51,71,32],[74,79,71,60],[74,80,71,61],[75,10,72,12],[75,14,72,18,"BPrime"],[75,20,72,24],[75,23,72,27,"uintArrayToBuffer"],[75,40,72,44],[75,41,72,45,"BPrimeUint"],[75,51,72,55],[75,52,72,56],[76,10,73,12],[76,14,73,16],[76,15,73,17,"ecc"],[76,18,73,20],[76,19,73,21,"isPoint"],[76,26,73,28],[76,27,73,29,"BPrime"],[76,33,73,35],[76,34,73,36],[76,36,74,16],[76,42,74,22],[76,46,74,26,"Error"],[76,51,74,31],[76,52,74,32],[76,81,74,61],[76,82,74,62],[77,10,75,12],[77,14,75,18,"node"],[77,18,75,22],[77,21,75,25,"bip32"],[77,26,75,30],[77,27,75,31,"fromPublicKey"],[77,40,75,44],[77,41,75,45,"BPrime"],[77,47,75,51],[77,49,75,53,"bobPaymentCodeNode"],[77,67,75,71],[77,68,75,72,"chainCode"],[77,77,75,81],[77,79,75,83],[77,83,75,87],[77,84,75,88,"network"],[77,91,75,95],[77,92,75,96,"network"],[77,99,75,103],[77,100,75,104],[78,10,76,12],[78,17,76,19],[78,21,76,23],[78,22,76,24,"getAddressFromNode"],[78,40,76,42],[78,41,76,43,"node"],[78,45,76,47],[78,46,76,48],[79,8,77,8],[80,6,77,9],[81,8,77,9,"key"],[81,11,77,9],[82,8,77,9,"value"],[82,13,77,9],[82,15,78,8],[82,24,78,8,"getSerializedPaymentCode"],[82,48,78,32,"getSerializedPaymentCode"],[82,49,78,32],[82,51,78,35],[83,10,79,12],[83,17,79,19,"_$$_REQUIRE"],[83,28,79,19],[83,29,79,19,"_dependencyMap"],[83,43,79,19],[83,61,79,29,"encode"],[83,67,79,35],[83,68,79,36,"Buffer"],[83,74,79,42],[83,75,79,43,"concat"],[83,81,79,49],[83,82,79,50],[83,83,79,51,"Buffer"],[83,89,79,57],[83,90,79,58,"from"],[83,94,79,62],[83,95,79,63],[83,96,79,64],[83,98,79,66],[83,99,79,67],[83,100,79,68],[83,102,79,70],[83,106,79,74],[83,107,79,75,"getBinaryPaymentCode"],[83,127,79,95],[83,128,79,96],[83,129,79,97],[83,130,79,98],[83,131,79,99],[83,132,79,100],[84,8,80,8],[85,6,80,9],[86,8,80,9,"key"],[86,11,80,9],[87,8,80,9,"value"],[87,13,80,9],[87,15,81,8],[87,24,81,8,"getBinaryPaymentCode"],[87,44,81,28,"getBinaryPaymentCode"],[87,45,81,28],[87,47,81,31],[88,10,82,12],[88,14,82,16],[88,15,82,17],[88,19,82,21],[88,20,82,22,"network"],[88,27,82,29],[88,31,82,33],[88,32,82,34],[88,36,82,38],[88,37,82,39,"RootPaymentCodeNode"],[88,56,82,58],[88,58,83,16],[88,64,83,22],[88,68,83,26,"Error"],[88,73,83,31],[88,74,83,32],[88,112,83,70],[88,113,83,71],[89,10,84,12],[89,14,84,18,"node"],[89,18,84,22],[89,21,84,25],[89,25,84,29],[89,26,84,30,"RootPaymentCodeNode"],[89,45,84,49],[90,10,85,12],[90,14,85,18,"paymentCodeSerializedBuffer"],[90,41,85,45],[90,44,85,48,"Buffer"],[90,50,85,54],[90,51,85,55,"alloc"],[90,56,85,60],[90,57,85,61],[90,59,85,63],[90,60,85,64],[91,10,86,12,"paymentCodeSerializedBuffer"],[91,37,86,39],[91,38,86,40],[91,39,86,41],[91,40,86,42],[91,43,86,45],[91,47,86,49],[91,48,86,50],[91,49,86,51],[92,10,87,12,"paymentCodeSerializedBuffer"],[92,37,87,39],[92,38,87,40],[92,39,87,41],[92,40,87,42],[92,43,87,45],[92,47,87,49],[92,48,87,50],[92,49,87,51],[93,10,88,12,"paymentCodeSerializedBuffer"],[93,37,88,39],[93,38,88,40],[93,39,88,41],[93,40,88,42],[93,43,88,45,"node"],[93,47,88,49],[93,48,88,50,"publicKey"],[93,57,88,59],[93,58,88,60],[93,59,88,61],[93,60,88,62],[93,61,88,63],[93,62,88,64],[94,10,89,12,"paymentCodeSerializedBuffer"],[94,37,89,39],[94,38,89,40,"fill"],[94,42,89,44],[94,43,89,45,"node"],[94,47,89,49],[94,48,89,50,"publicKey"],[94,57,89,59],[94,58,89,60,"slice"],[94,63,89,65],[94,64,89,66],[94,65,89,67],[94,66,89,68],[94,68,89,70],[94,69,89,71],[94,71,89,73],[94,73,89,75],[94,74,89,76],[94,75,89,77],[94,76,89,78],[95,10,90,12,"paymentCodeSerializedBuffer"],[95,37,90,39],[95,38,90,40,"fill"],[95,42,90,44],[95,43,90,45,"node"],[95,47,90,49],[95,48,90,50,"chainCode"],[95,57,90,59],[95,59,90,61],[95,61,90,63],[95,63,90,65],[95,65,90,67],[95,66,90,68],[95,67,90,69],[95,68,90,70],[96,10,91,12],[96,17,91,19,"paymentCodeSerializedBuffer"],[96,44,91,46],[97,8,92,8],[98,6,92,9],[99,8,92,9,"key"],[99,11,92,9],[100,8,92,9,"value"],[100,13,92,9],[100,15,93,8],[100,24,93,8,"getNotificationNode"],[100,43,93,27,"getNotificationNode"],[100,44,93,27],[100,46,93,30],[101,10,94,12],[101,14,94,16],[101,15,94,17],[101,19,94,21],[101,20,94,22,"network"],[101,27,94,29],[101,31,94,33],[101,32,94,34],[101,36,94,38],[101,37,94,39,"RootPaymentCodeNode"],[101,56,94,58],[101,58,95,16],[101,64,95,22],[101,68,95,26,"Error"],[101,73,95,31],[101,74,95,32],[101,112,95,70],[101,113,95,71],[102,10,96,12],[102,17,96,19],[102,21,96,23],[102,22,96,24,"RootPaymentCodeNode"],[102,41,96,43],[102,42,96,44,"derive"],[102,48,96,50],[102,49,96,51],[102,50,96,52],[102,51,96,53],[103,8,97,8],[104,6,97,9],[105,8,97,9,"key"],[105,11,97,9],[106,8,97,9,"value"],[106,13,97,9],[106,15,98,8],[106,24,98,8,"getNotificationNodeFromPaymentCode"],[106,58,98,42,"getNotificationNodeFromPaymentCode"],[106,59,98,43,"paymentCode"],[106,70,98,54],[106,72,98,56],[107,10,99,12],[107,14,99,16],[107,15,99,17],[107,19,99,21],[107,20,99,22,"network"],[107,27,99,29],[107,31,99,33],[107,32,99,34],[107,36,99,38],[107,37,99,39,"RootPaymentCodeNode"],[107,56,99,58],[107,58,100,16],[107,64,100,22],[107,68,100,26,"Error"],[107,73,100,31],[107,74,100,32],[107,112,100,70],[107,113,100,71],[108,10,101,12],[108,17,101,19,"getPublicPaymentCodeNodeFromBase58"],[108,51,101,53],[108,52,101,54,"paymentCode"],[108,63,101,65],[108,65,101,67],[108,69,101,71],[108,70,101,72,"network"],[108,77,101,79],[108,78,101,80],[109,8,102,8],[110,6,102,9],[111,8,102,9,"key"],[111,11,102,9],[112,8,102,9,"value"],[112,13,102,9],[112,15,103,8],[112,24,103,8,"getNotificationAddressFromPaymentCode"],[112,61,103,45,"getNotificationAddressFromPaymentCode"],[112,62,103,46,"paymentCode"],[112,73,103,57],[112,75,103,59],[113,10,104,12],[113,17,104,19],[113,21,104,23],[113,22,104,24,"getAddressFromNode"],[113,40,104,42],[113,41,104,43],[113,45,104,47],[113,46,104,48,"getNotificationNodeFromPaymentCode"],[113,80,104,82],[113,81,104,83,"paymentCode"],[113,92,104,94],[113,93,104,95],[113,94,104,96],[114,8,105,8],[115,6,105,9],[116,8,105,9,"key"],[116,11,105,9],[117,8,105,9,"value"],[117,13,105,9],[117,15,106,8],[117,24,106,8,"getNotificationAddress"],[117,46,106,30,"getNotificationAddress"],[117,47,106,30],[117,49,106,33],[118,10,107,12],[118,17,107,19],[118,21,107,23],[118,22,107,24,"getAddressFromNode"],[118,40,107,42],[118,41,107,43],[118,45,107,47],[118,46,107,48,"getNotificationNode"],[118,65,107,67],[118,66,107,68],[118,67,107,69],[118,68,107,70],[119,8,108,8],[120,6,108,9],[121,8,108,9,"key"],[121,11,108,9],[122,8,108,9,"value"],[122,13,108,9],[122,15,109,8],[122,24,109,8,"getAddressFromNode"],[122,42,109,26,"getAddressFromNode"],[122,43,109,27,"node"],[122,47,109,31],[122,49,109,57],[123,10,109,57],[123,14,109,33,"network"],[123,21,109,40],[123,24,109,40,"arguments"],[123,33,109,40],[123,34,109,40,"length"],[123,40,109,40],[123,48,109,40,"arguments"],[123,57,109,40],[123,65,109,40,"undefined"],[123,74,109,40],[123,77,109,40,"arguments"],[123,86,109,40],[123,92,109,43],[123,96,109,47],[123,97,109,48,"network"],[123,104,109,55],[124,10,110,12],[124,17,110,19,"_$$_REQUIRE"],[124,28,110,19],[124,29,110,19,"_dependencyMap"],[124,43,110,19],[124,65,110,27,"payments"],[124,73,110,35],[124,74,110,36,"p2pkh"],[124,79,110,41],[124,80,110,42],[125,12,111,16,"pubkey"],[125,18,111,22],[125,20,111,24,"node"],[125,24,111,28],[125,25,111,29,"publicKey"],[125,34,111,38],[126,12,112,16,"network"],[126,19,112,23],[126,21,112,25,"network"],[126,28,112,32],[126,33,112,37],[126,37,112,41],[126,41,112,45,"network"],[126,48,112,52],[126,53,112,57],[126,58,112,62],[126,59,112,63],[126,62,112,66],[126,67,112,71],[126,68,112,72],[126,71,112,75,"network"],[126,78,112,82],[126,79,112,83,"network"],[127,10,113,12],[127,11,113,13],[127,12,113,14],[127,13,113,15,"address"],[127,20,113,22],[128,8,114,8],[129,6,114,9],[130,8,114,9,"key"],[130,11,114,9],[131,8,114,9,"value"],[131,13,114,9],[131,15,115,8],[131,24,115,8,"getBlindedPaymentCode"],[131,45,115,29,"getBlindedPaymentCode"],[131,46,115,30,"bobBIP47"],[131,54,115,38],[131,56,115,40,"privateKey"],[131,66,115,50],[131,68,115,52,"outpoint"],[131,76,115,60],[131,78,115,62],[132,10,116,12],[132,14,116,16],[132,15,116,17],[132,19,116,21],[132,20,116,22,"network"],[132,27,116,29],[132,31,116,33],[132,32,116,34],[132,36,116,38],[132,37,116,39,"RootPaymentCodeNode"],[132,56,116,58],[132,58,117,16],[132,64,117,22],[132,68,117,26,"Error"],[132,73,117,31],[132,74,117,32],[132,112,117,70],[132,113,117,71],[133,10,118,12],[133,14,118,16],[133,21,118,23,"privateKey"],[133,31,118,33],[133,36,118,38],[133,44,118,46],[133,46,119,16,"privateKey"],[133,56,119,26],[133,59,119,29,"Buffer"],[133,65,119,35],[133,66,119,36,"from"],[133,70,119,40],[133,71,119,41,"privateKey"],[133,81,119,51],[133,83,119,53],[133,88,119,58],[133,89,119,59],[134,10,120,12],[134,14,120,16],[134,21,120,23,"outpoint"],[134,29,120,31],[134,34,120,36],[134,42,120,44],[134,44,121,16,"outpoint"],[134,52,121,24],[134,55,121,27,"Buffer"],[134,61,121,33],[134,62,121,34,"from"],[134,66,121,38],[134,67,121,39,"outpoint"],[134,75,121,47],[134,77,121,49],[134,82,121,54],[134,83,121,55],[135,10,122,12],[135,14,122,18,"a"],[135,15,122,19],[135,18,122,22,"privateKey"],[135,28,122,32],[136,10,123,12],[136,14,123,18,"B"],[136,15,123,19],[136,18,123,22,"bobBIP47"],[136,26,123,30],[136,27,123,31,"getNotificationNode"],[136,46,123,50],[136,47,123,51],[136,48,123,52],[136,49,123,53,"publicKey"],[136,58,123,62],[137,10,124,12],[137,14,124,18,"S"],[137,15,124,19],[137,18,124,22,"uintArrayToBuffer"],[137,35,124,39],[137,36,124,40,"ecc"],[137,39,124,43],[137,40,124,44,"pointMultiply"],[137,53,124,57],[137,54,124,58,"B"],[137,55,124,59],[137,57,124,61,"a"],[137,58,124,62],[137,59,124,63],[137,60,124,64],[138,10,125,12],[138,14,125,18,"x"],[138,15,125,19],[138,18,125,22,"uintArrayToBuffer"],[138,35,125,39],[138,36,125,40,"S"],[138,37,125,41],[138,38,125,42,"slice"],[138,43,125,47],[138,44,125,48],[138,45,125,49],[138,47,125,51],[138,49,125,53],[138,50,125,54],[138,51,125,55],[139,10,126,12],[139,14,126,18,"o"],[139,15,126,19],[139,18,126,22,"outpoint"],[139,26,126,30],[140,10,127,12],[140,14,127,18,"s"],[140,15,127,19],[140,18,127,22,"_$$_REQUIRE"],[140,29,127,22],[140,30,127,22,"_dependencyMap"],[140,44,127,22],[140,61,127,29,"hmacSHA512"],[140,71,127,39],[140,72,127,40,"o"],[140,73,127,41],[140,75,127,43,"x"],[140,76,127,44],[140,77,127,45],[141,10,128,12],[141,14,128,18,"binaryPaymentCode"],[141,31,128,35],[141,34,128,38],[141,38,128,42],[141,39,128,43,"getBinaryPaymentCode"],[141,59,128,63],[141,60,128,64],[141,61,128,65],[142,10,129,12,"binaryPaymentCode"],[142,27,129,29],[142,28,129,30,"fill"],[142,32,129,34],[142,33,129,35],[142,34,129,36],[142,35,129,37],[142,37,129,39,"_$$_REQUIRE"],[142,48,129,39],[142,49,129,39,"_dependencyMap"],[142,63,129,39],[142,77,129,45,"xor"],[142,80,129,48],[142,82,129,50,"s"],[142,83,129,51],[142,84,129,52,"slice"],[142,89,129,57],[142,90,129,58],[142,91,129,59],[142,93,129,61],[142,95,129,63],[142,96,129,64],[142,98,129,66,"binaryPaymentCode"],[142,115,129,83],[142,116,129,84,"slice"],[142,121,129,89],[142,122,129,90],[142,123,129,91],[142,125,129,93],[142,127,129,95],[142,128,129,96],[142,129,129,97],[142,131,129,99],[142,132,129,100],[142,134,129,102],[142,136,129,104],[142,137,129,105],[143,10,130,12,"binaryPaymentCode"],[143,27,130,29],[143,28,130,30,"fill"],[143,32,130,34],[143,33,130,35],[143,34,130,36],[143,35,130,37],[143,37,130,39,"_$$_REQUIRE"],[143,48,130,39],[143,49,130,39,"_dependencyMap"],[143,63,130,39],[143,77,130,45,"xor"],[143,80,130,48],[143,82,130,50,"s"],[143,83,130,51],[143,84,130,52,"slice"],[143,89,130,57],[143,90,130,58],[143,92,130,60],[143,94,130,62],[143,96,130,64],[143,97,130,65],[143,99,130,67,"binaryPaymentCode"],[143,116,130,84],[143,117,130,85,"slice"],[143,122,130,90],[143,123,130,91],[143,125,130,93],[143,127,130,95],[143,129,130,97],[143,130,130,98],[143,131,130,99],[143,133,130,101],[143,135,130,103],[143,137,130,105],[143,139,130,107],[143,140,130,108],[144,10,131,12],[144,17,131,19,"binaryPaymentCode"],[144,34,131,36],[144,35,131,37,"toString"],[144,43,131,45],[144,44,131,46],[144,49,131,51],[144,50,131,52],[145,8,132,8],[146,6,132,9],[147,8,132,9,"key"],[147,11,132,9],[148,8,132,9,"value"],[148,13,132,9],[148,15,133,8],[148,24,133,8,"getFirstExposedPubKeyAndOutpoint"],[148,56,133,40,"getFirstExposedPubKeyAndOutpoint"],[148,57,133,41,"tx"],[148,59,133,43],[148,61,133,45],[149,10,134,12],[149,14,134,18,"first"],[149,19,134,23],[149,22,134,26,"tx"],[149,24,134,28],[149,25,134,29,"ins"],[149,28,134,32],[149,29,134,33],[149,30,134,34],[149,31,134,35],[150,10,135,12],[150,14,135,18,"hash"],[150,18,135,22],[150,21,135,25,"first"],[150,26,135,30],[150,27,135,31,"hash"],[150,31,135,35],[151,10,136,12],[151,14,136,18,"index"],[151,19,136,23],[151,22,136,26,"first"],[151,27,136,31],[151,28,136,32,"index"],[151,33,136,37],[152,10,137,12],[152,14,137,18,"indexHex"],[152,22,137,26],[152,25,137,29],[152,29,137,33],[152,30,137,34,"getInternalByteOrderHex"],[152,53,137,57],[152,54,137,58,"index"],[152,59,137,63],[152,60,137,64],[153,10,138,12],[153,14,138,18,"outpoint"],[153,22,138,26],[153,25,138,29,"Buffer"],[153,31,138,35],[153,32,138,36,"from"],[153,36,138,40],[153,37,138,41,"hash"],[153,41,138,45],[153,42,138,46,"toString"],[153,50,138,54],[153,51,138,55],[153,56,138,60],[153,57,138,61],[153,60,138,64,"indexHex"],[153,68,138,72],[153,70,138,74],[153,75,138,79],[153,76,138,80],[154,10,139,12],[154,14,139,16,"pubKey"],[154,20,139,22],[154,23,139,25],[154,27,139,29],[155,10,140,12],[155,14,140,16,"first"],[155,19,140,21],[155,20,140,22,"witness"],[155,27,140,29],[155,28,140,30,"length"],[155,34,140,36],[155,36,141,16,"pubKey"],[155,42,141,22],[155,45,141,25,"first"],[155,50,141,30],[155,51,141,31,"witness"],[155,58,141,38],[155,59,141,39],[155,60,141,40],[155,61,141,41],[155,62,141,42],[155,67,142,17],[155,71,142,21,"_$$_REQUIRE"],[155,82,142,21],[155,83,142,21,"_dependencyMap"],[155,97,142,21],[155,119,142,29,"script"],[155,125,142,35],[155,126,142,36,"toASM"],[155,131,142,41],[155,132,142,42,"first"],[155,137,142,47],[155,138,142,48,"script"],[155,144,142,54],[155,145,142,55],[155,146,142,56,"split"],[155,151,142,61],[155,152,142,62],[155,155,142,65],[155,156,142,66],[155,157,142,67,"length"],[155,163,142,73],[155,168,142,78],[155,169,142,79],[155,171,143,16,"pubKey"],[155,177,143,22],[155,180,143,25,"Buffer"],[155,186,143,31],[155,187,143,32,"from"],[155,191,143,36],[155,192,143,37,"_$$_REQUIRE"],[155,203,143,37],[155,204,143,37,"_dependencyMap"],[155,218,143,37],[155,240,143,45,"script"],[155,246,143,51],[155,247,143,52,"toASM"],[155,252,143,57],[155,253,143,58,"first"],[155,258,143,63],[155,259,143,64,"script"],[155,265,143,70],[155,266,143,71],[155,267,143,72,"split"],[155,272,143,77],[155,273,143,78],[155,276,143,81],[155,277,143,82],[155,278,143,83],[155,279,143,84],[155,280,143,85],[155,282,143,87],[155,287,143,92],[155,288,143,93],[155,289,143,94],[155,294,145,16],[155,300,145,22],[155,304,145,26,"Error"],[155,309,145,31],[155,310,145,32],[155,336,145,58],[155,337,145,59],[156,10,146,12],[156,17,146,19],[157,12,147,16,"outpoint"],[157,20,147,24],[157,22,147,16,"outpoint"],[157,30,147,24],[158,12,148,16,"pubKey"],[158,18,148,22],[158,20,148,16,"pubKey"],[159,10,149,12],[159,11,149,13],[160,8,150,8],[161,6,150,9],[162,8,150,9,"key"],[162,11,150,9],[163,8,150,9,"value"],[163,13,150,9],[163,15,151,8],[163,24,151,8,"getInternalByteOrderHex"],[163,47,151,31,"getInternalByteOrderHex"],[163,48,151,32,"index"],[163,53,151,37],[163,55,151,39],[164,10,152,12],[164,14,152,18,"tmpIndex"],[164,22,152,26],[164,25,152,29,"index"],[164,30,152,34],[164,31,152,35,"toString"],[164,39,152,43],[164,40,152,44],[164,42,152,46],[164,43,152,47],[164,44,152,48,"padStart"],[164,52,152,56],[164,53,152,57],[164,54,152,58],[164,56,152,60],[164,59,152,63],[164,60,152,64],[165,10,153,12],[165,14,153,18,"indexBuffer"],[165,25,153,29],[165,28,153,32,"toInternalByteOrder"],[165,47,153,51],[165,48,153,52,"Buffer"],[165,54,153,58],[165,55,153,59,"from"],[165,59,153,63],[165,60,153,64,"tmpIndex"],[165,68,153,72],[165,70,153,74],[165,75,153,79],[165,76,153,80],[165,77,153,81],[166,10,154,12],[166,14,154,18,"indexHex"],[166,22,154,26],[166,25,154,29,"indexBuffer"],[166,36,154,40],[166,37,154,41,"toString"],[166,45,154,49],[166,46,154,50],[166,51,154,55],[166,52,154,56],[167,10,155,12],[167,17,155,19,"indexHex"],[167,25,155,27],[168,8,156,8],[169,6,156,9],[170,8,156,9,"key"],[170,11,156,9],[171,8,156,9,"value"],[171,13,156,9],[171,15,157,8],[171,24,157,8,"getPaymentCodeFromRawNotificationTransaction"],[171,68,157,52,"getPaymentCodeFromRawNotificationTransaction"],[171,69,157,53,"rawHexNotificationData"],[171,91,157,75],[171,93,157,77],[172,10,158,12],[172,14,158,18,"tx"],[172,16,158,20],[172,19,158,23,"_$$_REQUIRE"],[172,30,158,23],[172,31,158,23,"_dependencyMap"],[172,45,158,23],[172,67,158,31,"Transaction"],[172,78,158,42],[172,79,158,43,"fromHex"],[172,86,158,50],[172,87,158,51,"rawHexNotificationData"],[172,109,158,73],[172,110,158,74],[173,10,159,12],[174,10,160,12],[174,14,160,12,"_this$getFirstExposed"],[174,35,160,12],[174,38,160,39],[174,42,160,43],[174,43,160,44,"getFirstExposedPubKeyAndOutpoint"],[174,75,160,76],[174,76,160,77,"tx"],[174,78,160,79],[174,79,160,80],[175,12,160,18,"pubKey"],[175,18,160,24],[175,21,160,24,"_this$getFirstExposed"],[175,42,160,24],[175,43,160,18,"pubKey"],[175,49,160,24],[176,12,160,26,"outpoint"],[176,20,160,34],[176,23,160,34,"_this$getFirstExposed"],[176,44,160,34],[176,45,160,26,"outpoint"],[176,53,160,34],[177,10,161,12],[177,14,161,18,"A"],[177,15,161,19],[177,18,161,22,"pubKey"],[177,24,161,28],[178,10,162,12],[178,14,162,18,"b"],[178,15,162,19],[178,18,162,22],[178,22,162,26],[178,23,162,27,"getNotificationNode"],[178,42,162,46],[178,43,162,47],[178,44,162,48],[178,45,162,49,"privateKey"],[178,55,162,59],[179,10,163,12],[179,14,163,18,"S"],[179,15,163,19],[179,18,163,22,"uintArrayToBuffer"],[179,35,163,39],[179,36,163,40,"ecc"],[179,39,163,43],[179,40,163,44,"pointMultiply"],[179,53,163,57],[179,54,163,58,"A"],[179,55,163,59],[179,57,163,61,"b"],[179,58,163,62],[179,59,163,63],[179,60,163,64],[180,10,164,12],[180,14,164,18,"x"],[180,15,164,19],[180,18,164,22,"uintArrayToBuffer"],[180,35,164,39],[180,36,164,40,"S"],[180,37,164,41],[180,38,164,42,"slice"],[180,43,164,47],[180,44,164,48],[180,45,164,49],[180,47,164,51],[180,49,164,53],[180,50,164,54],[180,51,164,55],[181,10,165,12],[181,14,165,18,"s"],[181,15,165,19],[181,18,165,22,"_$$_REQUIRE"],[181,29,165,22],[181,30,165,22,"_dependencyMap"],[181,44,165,22],[181,61,165,29,"hmacSHA512"],[181,71,165,39],[181,72,165,40,"outpoint"],[181,80,165,48],[181,82,165,50,"x"],[181,83,165,51],[181,84,165,52],[182,10,166,12],[182,14,166,18,"opReturnOutput"],[182,28,166,32],[182,31,166,35,"tx"],[182,33,166,37],[182,34,166,38,"outs"],[182,38,166,42],[182,39,166,43,"find"],[182,43,166,47],[182,44,166,48],[182,54,166,49,"o"],[182,55,166,50],[183,12,166,50],[183,19,166,55,"o"],[183,20,166,56],[183,21,166,57,"script"],[183,27,166,63],[183,28,166,64,"toString"],[183,36,166,72],[183,37,166,73],[183,42,166,78],[183,43,166,79],[183,44,166,80,"startsWith"],[183,54,166,90],[183,55,166,91],[183,63,166,99],[183,64,166,100],[184,10,166,100],[184,12,166,101],[185,10,167,12],[185,14,167,16],[185,15,167,17,"opReturnOutput"],[185,29,167,31],[185,31,168,16],[185,37,168,22],[185,41,168,26,"Error"],[185,46,168,31],[185,47,168,32],[185,84,168,69],[185,85,168,70],[186,10,169,12],[186,14,169,18,"binaryPaymentCode"],[186,31,169,35],[186,34,169,38,"opReturnOutput"],[186,48,169,52],[186,49,169,53,"script"],[186,55,169,59],[186,56,169,60,"slice"],[186,61,169,65],[186,62,169,66],[186,63,169,67],[186,64,169,68],[187,10,170,12,"binaryPaymentCode"],[187,27,170,29],[187,28,170,30,"fill"],[187,32,170,34],[187,33,170,35],[187,34,170,36],[187,35,170,37],[187,37,170,39,"_$$_REQUIRE"],[187,48,170,39],[187,49,170,39,"_dependencyMap"],[187,63,170,39],[187,77,170,45,"xor"],[187,80,170,48],[187,82,170,50,"s"],[187,83,170,51],[187,84,170,52,"slice"],[187,89,170,57],[187,90,170,58],[187,91,170,59],[187,93,170,61],[187,95,170,63],[187,96,170,64],[187,98,170,66,"binaryPaymentCode"],[187,115,170,83],[187,116,170,84,"slice"],[187,121,170,89],[187,122,170,90],[187,123,170,91],[187,125,170,93],[187,127,170,95],[187,128,170,96],[187,129,170,97],[187,131,170,99],[187,132,170,100],[187,134,170,102],[187,136,170,104],[187,137,170,105],[188,10,171,12,"binaryPaymentCode"],[188,27,171,29],[188,28,171,30,"fill"],[188,32,171,34],[188,33,171,35],[188,34,171,36],[188,35,171,37],[188,37,171,39,"_$$_REQUIRE"],[188,48,171,39],[188,49,171,39,"_dependencyMap"],[188,63,171,39],[188,77,171,45,"xor"],[188,80,171,48],[188,82,171,50,"s"],[188,83,171,51],[188,84,171,52,"slice"],[188,89,171,57],[188,90,171,58],[188,92,171,60],[188,94,171,62],[188,96,171,64],[188,97,171,65],[188,99,171,67,"binaryPaymentCode"],[188,116,171,84],[188,117,171,85,"slice"],[188,122,171,90],[188,123,171,91],[188,125,171,93],[188,127,171,95],[188,129,171,97],[188,130,171,98],[188,131,171,99],[188,133,171,101],[188,135,171,103],[188,137,171,105],[188,139,171,107],[188,140,171,108],[189,10,172,12],[189,17,172,19,"_$$_REQUIRE"],[189,28,172,19],[189,29,172,19,"_dependencyMap"],[189,43,172,19],[189,61,172,29,"encode"],[189,67,172,35],[189,68,172,36,"Buffer"],[189,74,172,42],[189,75,172,43,"concat"],[189,81,172,49],[189,82,172,50],[189,83,172,51,"Buffer"],[189,89,172,57],[189,90,172,58,"from"],[189,94,172,62],[189,95,172,63],[189,96,172,64],[189,98,172,66],[189,99,172,67],[189,100,172,68],[189,102,172,70,"binaryPaymentCode"],[189,119,172,87],[189,120,172,88],[189,121,172,89],[189,122,172,90],[190,8,173,8],[191,6,173,9],[192,4,173,9],[193,4,175,4],[193,13,175,13,"fromPaymentCode"],[193,28,175,28,"fromPaymentCode"],[193,29,175,29,"paymentCode"],[193,40,175,40],[193,42,175,76],[194,6,175,76],[194,10,175,42,"network"],[194,17,175,49],[194,20,175,49,"arguments"],[194,29,175,49],[194,30,175,49,"length"],[194,36,175,49],[194,44,175,49,"arguments"],[194,53,175,49],[194,61,175,49,"undefined"],[194,70,175,49],[194,73,175,49,"arguments"],[194,82,175,49],[194,88,175,52,"_$$_REQUIRE"],[194,99,175,52],[194,100,175,52,"_dependencyMap"],[194,114,175,52],[194,133,175,63,"mainnetData"],[194,144,175,74],[195,6,176,8],[195,13,176,15],[195,17,176,19,"BIP47"],[195,22,176,24],[195,23,176,25,"network"],[195,30,176,32],[195,32,176,34,"getPublicPaymentCodeNodeFromBase58"],[195,66,176,68],[195,67,176,69,"paymentCode"],[195,78,176,80],[195,80,176,82,"network"],[195,87,176,89],[195,88,176,90],[195,89,176,91],[196,4,177,4],[197,4,178,4],[197,13,178,13,"fromBip39Seed"],[197,26,178,26,"fromBip39Seed"],[197,27,178,27,"bip39Seed"],[197,36,178,36],[197,38,178,82],[198,6,178,82],[198,10,178,38,"network"],[198,17,178,45],[198,20,178,45,"arguments"],[198,29,178,45],[198,30,178,45,"length"],[198,36,178,45],[198,44,178,45,"arguments"],[198,53,178,45],[198,61,178,45,"undefined"],[198,70,178,45],[198,73,178,45,"arguments"],[198,82,178,45],[198,88,178,48,"_$$_REQUIRE"],[198,99,178,48],[198,100,178,48,"_dependencyMap"],[198,114,178,48],[198,133,178,59,"mainnetData"],[198,144,178,70],[199,6,178,70],[199,10,178,72,"password"],[199,18,178,80],[199,21,178,80,"arguments"],[199,30,178,80],[199,31,178,80,"length"],[199,37,178,80],[199,44,178,80,"arguments"],[199,53,178,80],[199,59,178,80,"undefined"],[199,68,178,80],[200,6,179,8],[200,13,179,15],[200,17,179,19,"BIP47"],[200,22,179,24],[200,23,179,25,"network"],[200,30,179,32],[200,32,179,34,"getRootPaymentCodeNodeFromBIP39Seed"],[200,67,179,69],[200,68,179,70,"bip39Seed"],[200,77,179,79],[200,79,179,81,"network"],[200,86,179,88],[200,88,179,90,"password"],[200,96,179,98],[200,97,179,99],[200,98,179,100],[201,4,180,4],[202,4,181,4],[202,13,181,13,"fromSeedHex"],[202,24,181,24,"fromSeedHex"],[202,25,181,25,"seedHex"],[202,32,181,32],[202,34,181,68],[203,6,181,68],[203,10,181,34,"network"],[203,17,181,41],[203,20,181,41,"arguments"],[203,29,181,41],[203,30,181,41,"length"],[203,36,181,41],[203,44,181,41,"arguments"],[203,53,181,41],[203,61,181,41,"undefined"],[203,70,181,41],[203,73,181,41,"arguments"],[203,82,181,41],[203,88,181,44,"_$$_REQUIRE"],[203,99,181,44],[203,100,181,44,"_dependencyMap"],[203,114,181,44],[203,133,181,55,"mainnetData"],[203,144,181,66],[204,6,182,8],[204,13,182,15],[204,17,182,19,"BIP47"],[204,22,182,24],[204,23,182,25,"network"],[204,30,182,32],[204,32,182,34,"getRootPaymentCodeNodeFromSeedHex"],[204,65,182,67],[204,66,182,68,"seedHex"],[204,73,182,75],[204,75,182,77,"network"],[204,82,182,84],[204,83,182,85],[204,84,182,86],[205,4,183,4],[206,4,184,4],[206,11,184,11],[207,6,185,8,"fromSeedHex"],[207,17,185,19],[207,19,185,8,"fromSeedHex"],[207,30,185,19],[208,6,186,8,"fromBip39Seed"],[208,19,186,21],[208,21,186,8,"fromBip39Seed"],[208,34,186,21],[209,6,187,8,"fromPaymentCode"],[209,21,187,23],[209,23,187,8,"fromPaymentCode"],[210,4,188,4],[210,5,188,5],[211,2,189,0],[212,2,190,0,"exports"],[212,9,190,7],[212,10,190,8,"BIP47Factory"],[212,22,190,20],[212,25,190,23,"BIP47Factory"],[212,37,190,35],[213,0,190,36],[213,3]],"functionMap":{"names":["<global>","BIP47Factory","BIP47","BIP47#constructor","BIP47#getPaymentWallet","BIP47#getReceiveWallet","BIP47#getPaymentCodeNode","BIP47#getPaymentAddress","BIP47#getSerializedPaymentCode","BIP47#getBinaryPaymentCode","BIP47#getNotificationNode","BIP47#getNotificationNodeFromPaymentCode","BIP47#getNotificationAddressFromPaymentCode","BIP47#getNotificationAddress","BIP47#getAddressFromNode","BIP47#getBlindedPaymentCode","BIP47#getFirstExposedPubKeyAndOutpoint","BIP47#getInternalByteOrderHex","BIP47#getPaymentCodeFromRawNotificationTransaction","tx.outs.find$argument_0","fromPaymentCode","fromBip39Seed","fromSeedHex"],"mappings":"AAA;ACU;ICK;QCC;SDG;QEC;SFa;QGC;SHgB;QIC;SJE;QKC;SLsB;QMC;SNE;QOC;SPW;QQC;SRI;QSC;STI;QUC;SVE;QWC;SXE;QYC;SZK;QaC;SbiB;QcC;SdiB;QeC;SfK;QgBC;gDCS,oDD;ShBO;KDC;ImBC;KnBE;IoBC;KpBE;IqBC;KrBE;CDM"}},"type":"js/module"}]}