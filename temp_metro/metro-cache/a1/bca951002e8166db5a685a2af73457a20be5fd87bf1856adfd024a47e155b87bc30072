{"dependencies":[{"name":"../../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":117},"end":{"line":3,"column":42,"index":148}},{"start":{"line":3,"column":11,"index":117},"end":{"line":3,"column":42,"index":148}},{"start":{"line":3,"column":11,"index":117},"end":{"line":3,"column":42,"index":148}},{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":54,"index":54}},{"start":{"line":4,"column":11,"index":161},"end":{"line":4,"column":42,"index":192}},{"start":{"line":2,"column":14,"index":70},"end":{"line":2,"column":48,"index":104}},{"start":{"line":2,"column":14,"index":70},"end":{"line":2,"column":48,"index":104}}],"key":"aNRU9n3c7yINqZkqLGUbbiGwGn8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Ident;\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Number;\n  var DIMENSION = _$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").TYPE.Dimension;\n  var PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n  var HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n  var QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n  var U = 0x0075; // U+0075 LATIN SMALL LETTER U (u)\n\n  function eatHexSequence(offset, allowDash) {\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\n      var code = this.scanner.source.charCodeAt(pos);\n      if (code === HYPHENMINUS && allowDash && len !== 0) {\n        if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\n          this.error();\n        }\n        return -1;\n      }\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").isHexDigit(code)) {\n        this.error(allowDash && len !== 0 ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected' : len < 6 ? 'Hex digit is expected' : 'Unexpected input', pos);\n      }\n      if (++len > 6) {\n        this.error('Too many hex digits', pos);\n      }\n      ;\n    }\n    this.scanner.next();\n    return len;\n  }\n  function eatQuestionMarkSequence(max) {\n    var count = 0;\n    while (this.scanner.isDelim(QUESTIONMARK)) {\n      if (++count > max) {\n        this.error('Too many question marks');\n      }\n      this.scanner.next();\n    }\n  }\n  function startsWith(code) {\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\n      this.error(_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").NAME[code] + ' is expected');\n    }\n  }\n\n  // https://drafts.csswg.org/css-syntax/#urange\n  // Informally, the <urange> production has three forms:\n  // U+0001\n  //      Defines a range consisting of a single code point, in this case the code point \"1\".\n  // U+0001-00ff\n  //      Defines a range of codepoints between the first and the second value, in this case\n  //      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n  // U+00??\n  //      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n  //      in this case defining the same as the value U+0000-00ff.\n  // In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n  //\n  // <urange> =\n  //   u '+' <ident-token> '?'* |\n  //   u <dimension-token> '?'* |\n  //   u <number-token> '?'* |\n  //   u <number-token> <dimension-token> |\n  //   u <number-token> <number-token> |\n  //   u '+' '?'+\n  function scanUnicodeRange() {\n    var hexLength = 0;\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (this.scanner.isDelim(PLUSSIGN)) {\n      this.scanner.next();\n      if (this.scanner.tokenType === IDENT) {\n        hexLength = eatHexSequence.call(this, 0, true);\n        if (hexLength > 0) {\n          eatQuestionMarkSequence.call(this, 6 - hexLength);\n        }\n        return;\n      }\n      if (this.scanner.isDelim(QUESTIONMARK)) {\n        this.scanner.next();\n        eatQuestionMarkSequence.call(this, 5);\n        return;\n      }\n      this.error('Hex digit or question mark is expected');\n      return;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (this.scanner.tokenType === NUMBER) {\n      startsWith.call(this, PLUSSIGN);\n      hexLength = eatHexSequence.call(this, 1, true);\n      if (this.scanner.isDelim(QUESTIONMARK)) {\n        eatQuestionMarkSequence.call(this, 6 - hexLength);\n        return;\n      }\n      if (this.scanner.tokenType === DIMENSION || this.scanner.tokenType === NUMBER) {\n        startsWith.call(this, HYPHENMINUS);\n        eatHexSequence.call(this, 1, false);\n        return;\n      }\n      return;\n    }\n\n    // u <dimension-token> '?'*\n    if (this.scanner.tokenType === DIMENSION) {\n      startsWith.call(this, PLUSSIGN);\n      hexLength = eatHexSequence.call(this, 1, true);\n      if (hexLength > 0) {\n        eatQuestionMarkSequence.call(this, 6 - hexLength);\n      }\n      return;\n    }\n    this.error();\n  }\n  module.exports = {\n    name: 'UnicodeRange',\n    structure: {\n      value: String\n    },\n    parse: function parse() {\n      var start = this.scanner.tokenStart;\n\n      // U or u\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar(this.scanner.source, start, U)) {\n        this.error('U is expected');\n      }\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../../tokenizer\").cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\n        this.error('Plus sign is expected');\n      }\n      this.scanner.next();\n      scanUnicodeRange.call(this);\n      return {\n        type: 'UnicodeRange',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        value: this.scanner.substrToCursor(start)\n      };\n    },\n    generate: function generate(node) {\n      this.chunk(node.value);\n    }\n  };\n});","lineCount":143,"map":[[2,2,6,0],[2,6,6,4,"IDENT"],[2,11,6,9],[2,14,6,12,"_$$_REQUIRE"],[2,25,6,12],[2,26,6,12,"_dependencyMap"],[2,40,6,12],[2,64,6,12,"TYPE"],[2,68,6,12],[2,69,6,17,"Ident"],[2,74,6,22],[3,2,7,0],[3,6,7,4,"NUMBER"],[3,12,7,10],[3,15,7,13,"_$$_REQUIRE"],[3,26,7,13],[3,27,7,13,"_dependencyMap"],[3,41,7,13],[3,65,7,13,"TYPE"],[3,69,7,13],[3,70,7,18,"Number"],[3,76,7,24],[4,2,8,0],[4,6,8,4,"DIMENSION"],[4,15,8,13],[4,18,8,16,"_$$_REQUIRE"],[4,29,8,16],[4,30,8,16,"_dependencyMap"],[4,44,8,16],[4,68,8,16,"TYPE"],[4,72,8,16],[4,73,8,21,"Dimension"],[4,82,8,30],[5,2,9,0],[5,6,9,4,"PLUSSIGN"],[5,14,9,12],[5,17,9,15],[5,23,9,21],[5,24,9,22],[5,25,9,27],[6,2,10,0],[6,6,10,4,"HYPHENMINUS"],[6,17,10,15],[6,20,10,18],[6,26,10,24],[6,27,10,25],[6,28,10,27],[7,2,11,0],[7,6,11,4,"QUESTIONMARK"],[7,18,11,16],[7,21,11,19],[7,27,11,25],[7,28,11,26],[7,29,11,27],[8,2,12,0],[8,6,12,4,"U"],[8,7,12,5],[8,10,12,8],[8,16,12,14],[8,17,12,15],[8,18,12,27],[10,2,14,0],[10,11,14,9,"eatHexSequence"],[10,25,14,23,"eatHexSequence"],[10,26,14,24,"offset"],[10,32,14,30],[10,34,14,32,"allowDash"],[10,43,14,41],[10,45,14,43],[11,4,15,4],[11,9,15,9],[11,13,15,13,"pos"],[11,16,15,16],[11,19,15,19],[11,23,15,23],[11,24,15,24,"scanner"],[11,31,15,31],[11,32,15,32,"tokenStart"],[11,42,15,42],[11,45,15,45,"offset"],[11,51,15,51],[11,53,15,53,"len"],[11,56,15,56],[11,59,15,59],[11,60,15,60],[11,62,15,62,"pos"],[11,65,15,65],[11,68,15,68],[11,72,15,72],[11,73,15,73,"scanner"],[11,80,15,80],[11,81,15,81,"tokenEnd"],[11,89,15,89],[11,91,15,91,"pos"],[11,94,15,94],[11,96,15,96],[11,98,15,98],[12,6,16,8],[12,10,16,12,"code"],[12,14,16,16],[12,17,16,19],[12,21,16,23],[12,22,16,24,"scanner"],[12,29,16,31],[12,30,16,32,"source"],[12,36,16,38],[12,37,16,39,"charCodeAt"],[12,47,16,49],[12,48,16,50,"pos"],[12,51,16,53],[12,52,16,54],[13,6,18,8],[13,10,18,12,"code"],[13,14,18,16],[13,19,18,21,"HYPHENMINUS"],[13,30,18,32],[13,34,18,36,"allowDash"],[13,43,18,45],[13,47,18,49,"len"],[13,50,18,52],[13,55,18,57],[13,56,18,58],[13,58,18,60],[14,8,19,12],[14,12,19,16,"eatHexSequence"],[14,26,19,30],[14,27,19,31,"call"],[14,31,19,35],[14,32,19,36],[14,36,19,40],[14,38,19,42,"offset"],[14,44,19,48],[14,47,19,51,"len"],[14,50,19,54],[14,53,19,57],[14,54,19,58],[14,56,19,60],[14,61,19,65],[14,62,19,66],[14,67,19,71],[14,68,19,72],[14,70,19,74],[15,10,20,16],[15,14,20,20],[15,15,20,21,"error"],[15,20,20,26],[15,21,20,27],[15,22,20,28],[16,8,21,12],[17,8,23,12],[17,15,23,19],[17,16,23,20],[17,17,23,21],[18,6,24,8],[19,6,26,8],[19,10,26,12],[19,11,26,13,"_$$_REQUIRE"],[19,22,26,13],[19,23,26,13,"_dependencyMap"],[19,37,26,13],[19,61,26,13,"isHexDigit"],[19,71,26,13],[19,72,26,24,"code"],[19,76,26,28],[19,77,26,29],[19,79,26,31],[20,8,27,12],[20,12,27,16],[20,13,27,17,"error"],[20,18,27,22],[20,19,28,16,"allowDash"],[20,28,28,25],[20,32,28,29,"len"],[20,35,28,32],[20,40,28,37],[20,41,28,38],[20,44,29,22],[20,57,29,35],[20,61,29,39,"len"],[20,64,29,42],[20,67,29,45],[20,68,29,46],[20,71,29,49],[20,86,29,64],[20,89,29,67],[20,91,29,69],[20,92,29,70],[20,95,29,73],[20,109,29,87],[20,112,30,23,"len"],[20,115,30,26],[20,118,30,29],[20,119,30,30],[20,122,30,33],[20,145,30,56],[20,148,30,59],[20,166,30,78],[20,168,31,16,"pos"],[20,171,32,12],[20,172,32,13],[21,6,33,8],[22,6,35,8],[22,10,35,12],[22,12,35,14,"len"],[22,15,35,17],[22,18,35,20],[22,19,35,21],[22,21,35,23],[23,8,36,12],[23,12,36,16],[23,13,36,17,"error"],[23,18,36,22],[23,19,36,23],[23,40,36,44],[23,42,36,46,"pos"],[23,45,36,49],[23,46,36,50],[24,6,37,8],[25,6,37,9],[26,4,38,4],[27,4,40,4],[27,8,40,8],[27,9,40,9,"scanner"],[27,16,40,16],[27,17,40,17,"next"],[27,21,40,21],[27,22,40,22],[27,23,40,23],[28,4,41,4],[28,11,41,11,"len"],[28,14,41,14],[29,2,42,0],[30,2,44,0],[30,11,44,9,"eatQuestionMarkSequence"],[30,34,44,32,"eatQuestionMarkSequence"],[30,35,44,33,"max"],[30,38,44,36],[30,40,44,38],[31,4,45,4],[31,8,45,8,"count"],[31,13,45,13],[31,16,45,16],[31,17,45,17],[32,4,47,4],[32,11,47,11],[32,15,47,15],[32,16,47,16,"scanner"],[32,23,47,23],[32,24,47,24,"isDelim"],[32,31,47,31],[32,32,47,32,"QUESTIONMARK"],[32,44,47,44],[32,45,47,45],[32,47,47,47],[33,6,48,8],[33,10,48,12],[33,12,48,14,"count"],[33,17,48,19],[33,20,48,22,"max"],[33,23,48,25],[33,25,48,27],[34,8,49,12],[34,12,49,16],[34,13,49,17,"error"],[34,18,49,22],[34,19,49,23],[34,44,49,48],[34,45,49,49],[35,6,50,8],[36,6,52,8],[36,10,52,12],[36,11,52,13,"scanner"],[36,18,52,20],[36,19,52,21,"next"],[36,23,52,25],[36,24,52,26],[36,25,52,27],[37,4,53,4],[38,2,54,0],[39,2,56,0],[39,11,56,9,"startsWith"],[39,21,56,19,"startsWith"],[39,22,56,20,"code"],[39,26,56,24],[39,28,56,26],[40,4,57,4],[40,8,57,8],[40,12,57,12],[40,13,57,13,"scanner"],[40,20,57,20],[40,21,57,21,"source"],[40,27,57,27],[40,28,57,28,"charCodeAt"],[40,38,57,38],[40,39,57,39],[40,43,57,43],[40,44,57,44,"scanner"],[40,51,57,51],[40,52,57,52,"tokenStart"],[40,62,57,62],[40,63,57,63],[40,68,57,68,"code"],[40,72,57,72],[40,74,57,74],[41,6,58,8],[41,10,58,12],[41,11,58,13,"error"],[41,16,58,18],[41,17,58,19,"_$$_REQUIRE"],[41,28,58,19],[41,29,58,19,"_dependencyMap"],[41,43,58,19],[41,67,58,19,"NAME"],[41,71,58,19],[41,72,58,24,"code"],[41,76,58,28],[41,77,58,29],[41,80,58,32],[41,94,58,46],[41,95,58,47],[42,4,59,4],[43,2,60,0],[45,2,62,0],[46,2,63,0],[47,2,64,0],[48,2,65,0],[49,2,66,0],[50,2,67,0],[51,2,68,0],[52,2,69,0],[53,2,70,0],[54,2,71,0],[55,2,72,0],[56,2,73,0],[57,2,74,0],[58,2,75,0],[59,2,76,0],[60,2,77,0],[61,2,78,0],[62,2,79,0],[63,2,80,0],[64,2,81,0],[64,11,81,9,"scanUnicodeRange"],[64,27,81,25,"scanUnicodeRange"],[64,28,81,25],[64,30,81,28],[65,4,82,4],[65,8,82,8,"hexLength"],[65,17,82,17],[65,20,82,20],[65,21,82,21],[67,4,84,4],[68,4,85,4],[69,4,86,4],[69,8,86,8],[69,12,86,12],[69,13,86,13,"scanner"],[69,20,86,20],[69,21,86,21,"isDelim"],[69,28,86,28],[69,29,86,29,"PLUSSIGN"],[69,37,86,37],[69,38,86,38],[69,40,86,40],[70,6,87,8],[70,10,87,12],[70,11,87,13,"scanner"],[70,18,87,20],[70,19,87,21,"next"],[70,23,87,25],[70,24,87,26],[70,25,87,27],[71,6,89,8],[71,10,89,12],[71,14,89,16],[71,15,89,17,"scanner"],[71,22,89,24],[71,23,89,25,"tokenType"],[71,32,89,34],[71,37,89,39,"IDENT"],[71,42,89,44],[71,44,89,46],[72,8,90,12,"hexLength"],[72,17,90,21],[72,20,90,24,"eatHexSequence"],[72,34,90,38],[72,35,90,39,"call"],[72,39,90,43],[72,40,90,44],[72,44,90,48],[72,46,90,50],[72,47,90,51],[72,49,90,53],[72,53,90,57],[72,54,90,58],[73,8,91,12],[73,12,91,16,"hexLength"],[73,21,91,25],[73,24,91,28],[73,25,91,29],[73,27,91,31],[74,10,92,16,"eatQuestionMarkSequence"],[74,33,92,39],[74,34,92,40,"call"],[74,38,92,44],[74,39,92,45],[74,43,92,49],[74,45,92,51],[74,46,92,52],[74,49,92,55,"hexLength"],[74,58,92,64],[74,59,92,65],[75,8,93,12],[76,8,94,12],[77,6,95,8],[78,6,97,8],[78,10,97,12],[78,14,97,16],[78,15,97,17,"scanner"],[78,22,97,24],[78,23,97,25,"isDelim"],[78,30,97,32],[78,31,97,33,"QUESTIONMARK"],[78,43,97,45],[78,44,97,46],[78,46,97,48],[79,8,98,12],[79,12,98,16],[79,13,98,17,"scanner"],[79,20,98,24],[79,21,98,25,"next"],[79,25,98,29],[79,26,98,30],[79,27,98,31],[80,8,99,12,"eatQuestionMarkSequence"],[80,31,99,35],[80,32,99,36,"call"],[80,36,99,40],[80,37,99,41],[80,41,99,45],[80,43,99,47],[80,44,99,48],[80,45,99,49],[81,8,100,12],[82,6,101,8],[83,6,103,8],[83,10,103,12],[83,11,103,13,"error"],[83,16,103,18],[83,17,103,19],[83,57,103,59],[83,58,103,60],[84,6,104,8],[85,4,105,4],[87,4,107,4],[88,4,108,4],[89,4,109,4],[90,4,110,4],[90,8,110,8],[90,12,110,12],[90,13,110,13,"scanner"],[90,20,110,20],[90,21,110,21,"tokenType"],[90,30,110,30],[90,35,110,35,"NUMBER"],[90,41,110,41],[90,43,110,43],[91,6,111,8,"startsWith"],[91,16,111,18],[91,17,111,19,"call"],[91,21,111,23],[91,22,111,24],[91,26,111,28],[91,28,111,30,"PLUSSIGN"],[91,36,111,38],[91,37,111,39],[92,6,112,8,"hexLength"],[92,15,112,17],[92,18,112,20,"eatHexSequence"],[92,32,112,34],[92,33,112,35,"call"],[92,37,112,39],[92,38,112,40],[92,42,112,44],[92,44,112,46],[92,45,112,47],[92,47,112,49],[92,51,112,53],[92,52,112,54],[93,6,114,8],[93,10,114,12],[93,14,114,16],[93,15,114,17,"scanner"],[93,22,114,24],[93,23,114,25,"isDelim"],[93,30,114,32],[93,31,114,33,"QUESTIONMARK"],[93,43,114,45],[93,44,114,46],[93,46,114,48],[94,8,115,12,"eatQuestionMarkSequence"],[94,31,115,35],[94,32,115,36,"call"],[94,36,115,40],[94,37,115,41],[94,41,115,45],[94,43,115,47],[94,44,115,48],[94,47,115,51,"hexLength"],[94,56,115,60],[94,57,115,61],[95,8,116,12],[96,6,117,8],[97,6,119,8],[97,10,119,12],[97,14,119,16],[97,15,119,17,"scanner"],[97,22,119,24],[97,23,119,25,"tokenType"],[97,32,119,34],[97,37,119,39,"DIMENSION"],[97,46,119,48],[97,50,120,12],[97,54,120,16],[97,55,120,17,"scanner"],[97,62,120,24],[97,63,120,25,"tokenType"],[97,72,120,34],[97,77,120,39,"NUMBER"],[97,83,120,45],[97,85,120,47],[98,8,121,12,"startsWith"],[98,18,121,22],[98,19,121,23,"call"],[98,23,121,27],[98,24,121,28],[98,28,121,32],[98,30,121,34,"HYPHENMINUS"],[98,41,121,45],[98,42,121,46],[99,8,122,12,"eatHexSequence"],[99,22,122,26],[99,23,122,27,"call"],[99,27,122,31],[99,28,122,32],[99,32,122,36],[99,34,122,38],[99,35,122,39],[99,37,122,41],[99,42,122,46],[99,43,122,47],[100,8,123,12],[101,6,124,8],[102,6,126,8],[103,4,127,4],[105,4,129,4],[106,4,130,4],[106,8,130,8],[106,12,130,12],[106,13,130,13,"scanner"],[106,20,130,20],[106,21,130,21,"tokenType"],[106,30,130,30],[106,35,130,35,"DIMENSION"],[106,44,130,44],[106,46,130,46],[107,6,131,8,"startsWith"],[107,16,131,18],[107,17,131,19,"call"],[107,21,131,23],[107,22,131,24],[107,26,131,28],[107,28,131,30,"PLUSSIGN"],[107,36,131,38],[107,37,131,39],[108,6,132,8,"hexLength"],[108,15,132,17],[108,18,132,20,"eatHexSequence"],[108,32,132,34],[108,33,132,35,"call"],[108,37,132,39],[108,38,132,40],[108,42,132,44],[108,44,132,46],[108,45,132,47],[108,47,132,49],[108,51,132,53],[108,52,132,54],[109,6,134,8],[109,10,134,12,"hexLength"],[109,19,134,21],[109,22,134,24],[109,23,134,25],[109,25,134,27],[110,8,135,12,"eatQuestionMarkSequence"],[110,31,135,35],[110,32,135,36,"call"],[110,36,135,40],[110,37,135,41],[110,41,135,45],[110,43,135,47],[110,44,135,48],[110,47,135,51,"hexLength"],[110,56,135,60],[110,57,135,61],[111,6,136,8],[112,6,138,8],[113,4,139,4],[114,4,141,4],[114,8,141,8],[114,9,141,9,"error"],[114,14,141,14],[114,15,141,15],[114,16,141,16],[115,2,142,0],[116,2,144,0,"module"],[116,8,144,6],[116,9,144,7,"exports"],[116,16,144,14],[116,19,144,17],[117,4,145,4,"name"],[117,8,145,8],[117,10,145,10],[117,24,145,24],[118,4,146,4,"structure"],[118,13,146,13],[118,15,146,15],[119,6,147,8,"value"],[119,11,147,13],[119,13,147,15,"String"],[120,4,148,4],[120,5,148,5],[121,4,149,4,"parse"],[121,9,149,9],[121,11,149,11],[121,20,149,4,"parse"],[121,25,149,9,"parse"],[121,26,149,9],[121,28,149,22],[122,6,150,8],[122,10,150,12,"start"],[122,15,150,17],[122,18,150,20],[122,22,150,24],[122,23,150,25,"scanner"],[122,30,150,32],[122,31,150,33,"tokenStart"],[122,41,150,43],[124,6,152,8],[125,6,153,8],[125,10,153,12],[125,11,153,13,"_$$_REQUIRE"],[125,22,153,13],[125,23,153,13,"_dependencyMap"],[125,37,153,13],[125,61,153,13,"cmpChar"],[125,68,153,13],[125,69,153,21],[125,73,153,25],[125,74,153,26,"scanner"],[125,81,153,33],[125,82,153,34,"source"],[125,88,153,40],[125,90,153,42,"start"],[125,95,153,47],[125,97,153,49,"U"],[125,98,153,50],[125,99,153,51],[125,101,153,53],[126,8,154,12],[126,12,154,16],[126,13,154,17,"error"],[126,18,154,22],[126,19,154,23],[126,34,154,38],[126,35,154,39],[127,6,155,8],[128,6,157,8],[128,10,157,12],[128,11,157,13,"_$$_REQUIRE"],[128,22,157,13],[128,23,157,13,"_dependencyMap"],[128,37,157,13],[128,61,157,13,"cmpChar"],[128,68,157,13],[128,69,157,21],[128,73,157,25],[128,74,157,26,"scanner"],[128,81,157,33],[128,82,157,34,"source"],[128,88,157,40],[128,90,157,42,"start"],[128,95,157,47],[128,98,157,50],[128,99,157,51],[128,101,157,53,"PLUSSIGN"],[128,109,157,61],[128,110,157,62],[128,112,157,64],[129,8,158,12],[129,12,158,16],[129,13,158,17,"error"],[129,18,158,22],[129,19,158,23],[129,42,158,46],[129,43,158,47],[130,6,159,8],[131,6,161,8],[131,10,161,12],[131,11,161,13,"scanner"],[131,18,161,20],[131,19,161,21,"next"],[131,23,161,25],[131,24,161,26],[131,25,161,27],[132,6,162,8,"scanUnicodeRange"],[132,22,162,24],[132,23,162,25,"call"],[132,27,162,29],[132,28,162,30],[132,32,162,34],[132,33,162,35],[133,6,164,8],[133,13,164,15],[134,8,165,12,"type"],[134,12,165,16],[134,14,165,18],[134,28,165,32],[135,8,166,12,"loc"],[135,11,166,15],[135,13,166,17],[135,17,166,21],[135,18,166,22,"getLocation"],[135,29,166,33],[135,30,166,34,"start"],[135,35,166,39],[135,37,166,41],[135,41,166,45],[135,42,166,46,"scanner"],[135,49,166,53],[135,50,166,54,"tokenStart"],[135,60,166,64],[135,61,166,65],[136,8,167,12,"value"],[136,13,167,17],[136,15,167,19],[136,19,167,23],[136,20,167,24,"scanner"],[136,27,167,31],[136,28,167,32,"substrToCursor"],[136,42,167,46],[136,43,167,47,"start"],[136,48,167,52],[137,6,168,8],[137,7,168,9],[138,4,169,4],[138,5,169,5],[139,4,170,4,"generate"],[139,12,170,12],[139,14,170,14],[139,23,170,4,"generate"],[139,31,170,12,"generate"],[139,32,170,23,"node"],[139,36,170,27],[139,38,170,29],[140,6,171,8],[140,10,171,12],[140,11,171,13,"chunk"],[140,16,171,18],[140,17,171,19,"node"],[140,21,171,23],[140,22,171,24,"value"],[140,27,171,29],[140,28,171,30],[141,4,172,4],[142,2,173,0],[142,3,173,1],[143,0,173,2],[143,3]],"functionMap":{"names":["<global>","eatHexSequence","eatQuestionMarkSequence","startsWith","scanUnicodeRange","module.exports.parse","module.exports.generate"],"mappings":"AAA;ACa;CD4B;AEE;CFU;AGE;CHI;AIqB;CJ6D;WKO;KLoB;cMC;KNE"}},"type":"js/module"}]}