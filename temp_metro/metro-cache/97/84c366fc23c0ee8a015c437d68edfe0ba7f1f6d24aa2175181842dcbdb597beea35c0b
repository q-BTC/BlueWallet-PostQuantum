{"dependencies":[{"name":"../../typeFields","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}},{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":48,"index":125}}],"key":"JA6Y4U+9BJNyHBqSRMPAJW1YgVo="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function decode(keyVal) {\n    if (keyVal.key[0] !== _$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.FINAL_SCRIPTWITNESS) {\n      throw new Error('Decode Error: could not decode finalScriptWitness with key 0x' + keyVal.key.toString('hex'));\n    }\n    return keyVal.value;\n  }\n  exports.decode = decode;\n  function encode(data) {\n    var key = Buffer.from([_$$_REQUIRE(_dependencyMap[0], \"../../typeFields\").InputTypes.FINAL_SCRIPTWITNESS]);\n    return {\n      key: key,\n      value: data\n    };\n  }\n  exports.encode = encode;\n  exports.expected = 'Buffer';\n  function check(data) {\n    return Buffer.isBuffer(data);\n  }\n  exports.check = check;\n  function canAdd(currentData, newData) {\n    return !!currentData && !!newData && currentData.finalScriptWitness === undefined;\n  }\n  exports.canAdd = canAdd;\n});","lineCount":31,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,4,0],[7,11,4,9,"decode"],[7,17,4,15,"decode"],[7,18,4,16,"keyVal"],[7,24,4,22],[7,26,4,24],[8,4,5,2],[8,8,5,6,"keyVal"],[8,14,5,12],[8,15,5,13,"key"],[8,18,5,16],[8,19,5,17],[8,20,5,18],[8,21,5,19],[8,26,5,24,"_$$_REQUIRE"],[8,37,5,24],[8,38,5,24,"_dependencyMap"],[8,52,5,24],[8,77,5,37,"InputTypes"],[8,87,5,47],[8,88,5,48,"FINAL_SCRIPTWITNESS"],[8,107,5,67],[8,109,5,69],[9,6,6,4],[9,12,6,10],[9,16,6,14,"Error"],[9,21,6,19],[9,22,7,6],[9,85,7,69],[9,88,8,8,"keyVal"],[9,94,8,14],[9,95,8,15,"key"],[9,98,8,18],[9,99,8,19,"toString"],[9,107,8,27],[9,108,8,28],[9,113,8,33],[9,114,9,4],[9,115,9,5],[10,4,10,2],[11,4,11,2],[11,11,11,9,"keyVal"],[11,17,11,15],[11,18,11,16,"value"],[11,23,11,21],[12,2,12,0],[13,2,13,0,"exports"],[13,9,13,7],[13,10,13,8,"decode"],[13,16,13,14],[13,19,13,17,"decode"],[13,25,13,23],[14,2,14,0],[14,11,14,9,"encode"],[14,17,14,15,"encode"],[14,18,14,16,"data"],[14,22,14,20],[14,24,14,22],[15,4,15,2],[15,8,15,8,"key"],[15,11,15,11],[15,14,15,14,"Buffer"],[15,20,15,20],[15,21,15,21,"from"],[15,25,15,25],[15,26,15,26],[15,27,15,27,"_$$_REQUIRE"],[15,38,15,27],[15,39,15,27,"_dependencyMap"],[15,53,15,27],[15,78,15,40,"InputTypes"],[15,88,15,50],[15,89,15,51,"FINAL_SCRIPTWITNESS"],[15,108,15,70],[15,109,15,71],[15,110,15,72],[16,4,16,2],[16,11,16,9],[17,6,17,4,"key"],[17,9,17,7],[17,11,17,4,"key"],[17,14,17,7],[18,6,18,4,"value"],[18,11,18,9],[18,13,18,11,"data"],[19,4,19,2],[19,5,19,3],[20,2,20,0],[21,2,21,0,"exports"],[21,9,21,7],[21,10,21,8,"encode"],[21,16,21,14],[21,19,21,17,"encode"],[21,25,21,23],[22,2,22,0,"exports"],[22,9,22,7],[22,10,22,8,"expected"],[22,18,22,16],[22,21,22,19],[22,29,22,27],[23,2,23,0],[23,11,23,9,"check"],[23,16,23,14,"check"],[23,17,23,15,"data"],[23,21,23,19],[23,23,23,21],[24,4,24,2],[24,11,24,9,"Buffer"],[24,17,24,15],[24,18,24,16,"isBuffer"],[24,26,24,24],[24,27,24,25,"data"],[24,31,24,29],[24,32,24,30],[25,2,25,0],[26,2,26,0,"exports"],[26,9,26,7],[26,10,26,8,"check"],[26,15,26,13],[26,18,26,16,"check"],[26,23,26,21],[27,2,27,0],[27,11,27,9,"canAdd"],[27,17,27,15,"canAdd"],[27,18,27,16,"currentData"],[27,29,27,27],[27,31,27,29,"newData"],[27,38,27,36],[27,40,27,38],[28,4,28,2],[28,11,29,4],[28,12,29,5],[28,13,29,6,"currentData"],[28,24,29,17],[28,28,29,21],[28,29,29,22],[28,30,29,23,"newData"],[28,37,29,30],[28,41,29,34,"currentData"],[28,52,29,45],[28,53,29,46,"finalScriptWitness"],[28,71,29,64],[28,76,29,69,"undefined"],[28,85,29,78],[29,2,31,0],[30,2,32,0,"exports"],[30,9,32,7],[30,10,32,8,"canAdd"],[30,16,32,14],[30,19,32,17,"canAdd"],[30,25,32,23],[31,0,32,24],[31,3]],"functionMap":{"names":["<global>","decode","encode","check","canAdd"],"mappings":"AAA;ACG;CDQ;AEE;CFM;AGG;CHE;AIE;CJI"}},"type":"js/module"}]}