{"dependencies":[{"name":"bitcoin-ops","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}},{"start":{"line":1,"column":10,"index":10},"end":{"line":1,"column":32,"index":32}}],"key":"P0/EXzx4NXVncLyei+jnV70k6pk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  function encodingLength(i) {\n    return i < _$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA1 ? 1 : i <= 0xff ? 2 : i <= 0xffff ? 3 : 5;\n  }\n  function encode(buffer, number, offset) {\n    var size = encodingLength(number);\n\n    // ~6 bit\n    if (size === 1) {\n      buffer.writeUInt8(number, offset);\n\n      // 8 bit\n    } else if (size === 2) {\n      buffer.writeUInt8(_$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA1, offset);\n      buffer.writeUInt8(number, offset + 1);\n\n      // 16 bit\n    } else if (size === 3) {\n      buffer.writeUInt8(_$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA2, offset);\n      buffer.writeUInt16LE(number, offset + 1);\n\n      // 32 bit\n    } else {\n      buffer.writeUInt8(_$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA4, offset);\n      buffer.writeUInt32LE(number, offset + 1);\n    }\n    return size;\n  }\n  function decode(buffer, offset) {\n    var opcode = buffer.readUInt8(offset);\n    var number, size;\n\n    // ~6 bit\n    if (opcode < _$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA1) {\n      number = opcode;\n      size = 1;\n\n      // 8 bit\n    } else if (opcode === _$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA1) {\n      if (offset + 2 > buffer.length) return null;\n      number = buffer.readUInt8(offset + 1);\n      size = 2;\n\n      // 16 bit\n    } else if (opcode === _$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA2) {\n      if (offset + 3 > buffer.length) return null;\n      number = buffer.readUInt16LE(offset + 1);\n      size = 3;\n\n      // 32 bit\n    } else {\n      if (offset + 5 > buffer.length) return null;\n      if (opcode !== _$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\").OP_PUSHDATA4) throw new Error('Unexpected opcode');\n      number = buffer.readUInt32LE(offset + 1);\n      size = 5;\n    }\n    return {\n      opcode: opcode,\n      number: number,\n      size: size\n    };\n  }\n  module.exports = {\n    encodingLength: encodingLength,\n    encode: encode,\n    decode: decode\n  };\n});","lineCount":68,"map":[[2,2,3,0],[2,11,3,9,"encodingLength"],[2,25,3,23,"encodingLength"],[2,26,3,25,"i"],[2,27,3,26],[2,29,3,28],[3,4,4,2],[3,11,4,9,"i"],[3,12,4,10],[3,15,4,13,"_$$_REQUIRE"],[3,26,4,13],[3,27,4,13,"_dependencyMap"],[3,41,4,13],[3,61,4,17,"OP_PUSHDATA1"],[3,73,4,29],[3,76,4,32],[3,77,4,33],[3,80,5,4,"i"],[3,81,5,5],[3,85,5,9],[3,89,5,13],[3,92,5,16],[3,93,5,17],[3,96,6,4,"i"],[3,97,6,5],[3,101,6,9],[3,107,6,15],[3,110,6,18],[3,111,6,19],[3,114,7,4],[3,115,7,5],[4,2,8,0],[5,2,10,0],[5,11,10,9,"encode"],[5,17,10,15,"encode"],[5,18,10,17,"buffer"],[5,24,10,23],[5,26,10,25,"number"],[5,32,10,31],[5,34,10,33,"offset"],[5,40,10,39],[5,42,10,41],[6,4,11,2],[6,8,11,6,"size"],[6,12,11,10],[6,15,11,13,"encodingLength"],[6,29,11,27],[6,30,11,28,"number"],[6,36,11,34],[6,37,11,35],[8,4,13,2],[9,4,14,2],[9,8,14,6,"size"],[9,12,14,10],[9,17,14,15],[9,18,14,16],[9,20,14,18],[10,6,15,4,"buffer"],[10,12,15,10],[10,13,15,11,"writeUInt8"],[10,23,15,21],[10,24,15,22,"number"],[10,30,15,28],[10,32,15,30,"offset"],[10,38,15,36],[10,39,15,37],[12,6,17,2],[13,4,18,2],[13,5,18,3],[13,11,18,9],[13,15,18,13,"size"],[13,19,18,17],[13,24,18,22],[13,25,18,23],[13,27,18,25],[14,6,19,4,"buffer"],[14,12,19,10],[14,13,19,11,"writeUInt8"],[14,23,19,21],[14,24,19,22,"_$$_REQUIRE"],[14,35,19,22],[14,36,19,22,"_dependencyMap"],[14,50,19,22],[14,70,19,26,"OP_PUSHDATA1"],[14,82,19,38],[14,84,19,40,"offset"],[14,90,19,46],[14,91,19,47],[15,6,20,4,"buffer"],[15,12,20,10],[15,13,20,11,"writeUInt8"],[15,23,20,21],[15,24,20,22,"number"],[15,30,20,28],[15,32,20,30,"offset"],[15,38,20,36],[15,41,20,39],[15,42,20,40],[15,43,20,41],[17,6,22,2],[18,4,23,2],[18,5,23,3],[18,11,23,9],[18,15,23,13,"size"],[18,19,23,17],[18,24,23,22],[18,25,23,23],[18,27,23,25],[19,6,24,4,"buffer"],[19,12,24,10],[19,13,24,11,"writeUInt8"],[19,23,24,21],[19,24,24,22,"_$$_REQUIRE"],[19,35,24,22],[19,36,24,22,"_dependencyMap"],[19,50,24,22],[19,70,24,26,"OP_PUSHDATA2"],[19,82,24,38],[19,84,24,40,"offset"],[19,90,24,46],[19,91,24,47],[20,6,25,4,"buffer"],[20,12,25,10],[20,13,25,11,"writeUInt16LE"],[20,26,25,24],[20,27,25,25,"number"],[20,33,25,31],[20,35,25,33,"offset"],[20,41,25,39],[20,44,25,42],[20,45,25,43],[20,46,25,44],[22,6,27,2],[23,4,28,2],[23,5,28,3],[23,11,28,9],[24,6,29,4,"buffer"],[24,12,29,10],[24,13,29,11,"writeUInt8"],[24,23,29,21],[24,24,29,22,"_$$_REQUIRE"],[24,35,29,22],[24,36,29,22,"_dependencyMap"],[24,50,29,22],[24,70,29,26,"OP_PUSHDATA4"],[24,82,29,38],[24,84,29,40,"offset"],[24,90,29,46],[24,91,29,47],[25,6,30,4,"buffer"],[25,12,30,10],[25,13,30,11,"writeUInt32LE"],[25,26,30,24],[25,27,30,25,"number"],[25,33,30,31],[25,35,30,33,"offset"],[25,41,30,39],[25,44,30,42],[25,45,30,43],[25,46,30,44],[26,4,31,2],[27,4,33,2],[27,11,33,9,"size"],[27,15,33,13],[28,2,34,0],[29,2,36,0],[29,11,36,9,"decode"],[29,17,36,15,"decode"],[29,18,36,17,"buffer"],[29,24,36,23],[29,26,36,25,"offset"],[29,32,36,31],[29,34,36,33],[30,4,37,2],[30,8,37,6,"opcode"],[30,14,37,12],[30,17,37,15,"buffer"],[30,23,37,21],[30,24,37,22,"readUInt8"],[30,33,37,31],[30,34,37,32,"offset"],[30,40,37,38],[30,41,37,39],[31,4,38,2],[31,8,38,6,"number"],[31,14,38,12],[31,16,38,14,"size"],[31,20,38,18],[33,4,40,2],[34,4,41,2],[34,8,41,6,"opcode"],[34,14,41,12],[34,17,41,15,"_$$_REQUIRE"],[34,28,41,15],[34,29,41,15,"_dependencyMap"],[34,43,41,15],[34,63,41,19,"OP_PUSHDATA1"],[34,75,41,31],[34,77,41,33],[35,6,42,4,"number"],[35,12,42,10],[35,15,42,13,"opcode"],[35,21,42,19],[36,6,43,4,"size"],[36,10,43,8],[36,13,43,11],[36,14,43,12],[38,6,45,2],[39,4,46,2],[39,5,46,3],[39,11,46,9],[39,15,46,13,"opcode"],[39,21,46,19],[39,26,46,24,"_$$_REQUIRE"],[39,37,46,24],[39,38,46,24,"_dependencyMap"],[39,52,46,24],[39,72,46,28,"OP_PUSHDATA1"],[39,84,46,40],[39,86,46,42],[40,6,47,4],[40,10,47,8,"offset"],[40,16,47,14],[40,19,47,17],[40,20,47,18],[40,23,47,21,"buffer"],[40,29,47,27],[40,30,47,28,"length"],[40,36,47,34],[40,38,47,36],[40,45,47,43],[40,49,47,47],[41,6,48,4,"number"],[41,12,48,10],[41,15,48,13,"buffer"],[41,21,48,19],[41,22,48,20,"readUInt8"],[41,31,48,29],[41,32,48,30,"offset"],[41,38,48,36],[41,41,48,39],[41,42,48,40],[41,43,48,41],[42,6,49,4,"size"],[42,10,49,8],[42,13,49,11],[42,14,49,12],[44,6,51,2],[45,4,52,2],[45,5,52,3],[45,11,52,9],[45,15,52,13,"opcode"],[45,21,52,19],[45,26,52,24,"_$$_REQUIRE"],[45,37,52,24],[45,38,52,24,"_dependencyMap"],[45,52,52,24],[45,72,52,28,"OP_PUSHDATA2"],[45,84,52,40],[45,86,52,42],[46,6,53,4],[46,10,53,8,"offset"],[46,16,53,14],[46,19,53,17],[46,20,53,18],[46,23,53,21,"buffer"],[46,29,53,27],[46,30,53,28,"length"],[46,36,53,34],[46,38,53,36],[46,45,53,43],[46,49,53,47],[47,6,54,4,"number"],[47,12,54,10],[47,15,54,13,"buffer"],[47,21,54,19],[47,22,54,20,"readUInt16LE"],[47,34,54,32],[47,35,54,33,"offset"],[47,41,54,39],[47,44,54,42],[47,45,54,43],[47,46,54,44],[48,6,55,4,"size"],[48,10,55,8],[48,13,55,11],[48,14,55,12],[50,6,57,2],[51,4,58,2],[51,5,58,3],[51,11,58,9],[52,6,59,4],[52,10,59,8,"offset"],[52,16,59,14],[52,19,59,17],[52,20,59,18],[52,23,59,21,"buffer"],[52,29,59,27],[52,30,59,28,"length"],[52,36,59,34],[52,38,59,36],[52,45,59,43],[52,49,59,47],[53,6,60,4],[53,10,60,8,"opcode"],[53,16,60,14],[53,21,60,19,"_$$_REQUIRE"],[53,32,60,19],[53,33,60,19,"_dependencyMap"],[53,47,60,19],[53,67,60,23,"OP_PUSHDATA4"],[53,79,60,35],[53,81,60,37],[53,87,60,43],[53,91,60,47,"Error"],[53,96,60,52],[53,97,60,53],[53,116,60,72],[53,117,60,73],[54,6,62,4,"number"],[54,12,62,10],[54,15,62,13,"buffer"],[54,21,62,19],[54,22,62,20,"readUInt32LE"],[54,34,62,32],[54,35,62,33,"offset"],[54,41,62,39],[54,44,62,42],[54,45,62,43],[54,46,62,44],[55,6,63,4,"size"],[55,10,63,8],[55,13,63,11],[55,14,63,12],[56,4,64,2],[57,4,66,2],[57,11,66,9],[58,6,67,4,"opcode"],[58,12,67,10],[58,14,67,12,"opcode"],[58,20,67,18],[59,6,68,4,"number"],[59,12,68,10],[59,14,68,12,"number"],[59,20,68,18],[60,6,69,4,"size"],[60,10,69,8],[60,12,69,10,"size"],[61,4,70,2],[61,5,70,3],[62,2,71,0],[63,2,73,0,"module"],[63,8,73,6],[63,9,73,7,"exports"],[63,16,73,14],[63,19,73,17],[64,4,74,2,"encodingLength"],[64,18,74,16],[64,20,74,18,"encodingLength"],[64,34,74,32],[65,4,75,2,"encode"],[65,10,75,8],[65,12,75,10,"encode"],[65,18,75,16],[66,4,76,2,"decode"],[66,10,76,8],[66,12,76,10,"decode"],[67,2,77,0],[67,3,77,1],[68,0,77,1],[68,3]],"functionMap":{"names":["<global>","encodingLength","encode","decode"],"mappings":"AAA;ACE;CDK;AEE;CFwB;AGE;CHmC"}},"type":"js/module"}]}