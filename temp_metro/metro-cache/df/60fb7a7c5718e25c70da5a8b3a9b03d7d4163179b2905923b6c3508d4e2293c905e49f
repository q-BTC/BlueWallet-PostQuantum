{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getEccLib = exports.initEccLib = void 0;\n  var _ECCLIB_CACHE = {};\n  /**\n   * Initializes the ECC library with the provided instance.\n   * If `eccLib` is `undefined`, the library will be cleared.\n   * If `eccLib` is a new instance, it will be verified before setting it as the active library.\n   *\n   * @param eccLib The instance of the ECC library to initialize.\n   * @param opts Extra initialization options. Use {DANGER_DO_NOT_VERIFY_ECCLIB:true} if ecc verification should not be executed. Not recommended!\n   */\n  function initEccLib(eccLib, opts) {\n    if (!eccLib) {\n      // allow clearing the library\n      _ECCLIB_CACHE.eccLib = eccLib;\n    } else if (eccLib !== _ECCLIB_CACHE.eccLib) {\n      if (!(opts != null && opts.DANGER_DO_NOT_VERIFY_ECCLIB))\n        // new instance, verify it\n        verifyEcc(eccLib);\n      _ECCLIB_CACHE.eccLib = eccLib;\n    }\n  }\n  exports.initEccLib = initEccLib;\n  /**\n   * Retrieves the ECC Library instance.\n   * Throws an error if the ECC Library is not provided.\n   * You must call initEccLib() with a valid TinySecp256k1Interface instance before calling this function.\n   * @returns The ECC Library instance.\n   * @throws Error if the ECC Library is not provided.\n   */\n  function getEccLib() {\n    if (!_ECCLIB_CACHE.eccLib) throw new Error('No ECC Library provided. You must call initEccLib() with a valid TinySecp256k1Interface instance');\n    return _ECCLIB_CACHE.eccLib;\n  }\n  exports.getEccLib = getEccLib;\n  var h = function h(hex) {\n    return Buffer.from(hex, 'hex');\n  };\n  /**\n   * Verifies the ECC functionality.\n   *\n   * @param ecc - The TinySecp256k1Interface object.\n   */\n  function verifyEcc(ecc) {\n    assert(typeof ecc.isXOnlyPoint === 'function');\n    assert(ecc.isXOnlyPoint(h('79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798')));\n    assert(ecc.isXOnlyPoint(h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffeeffffc2e')));\n    assert(ecc.isXOnlyPoint(h('f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9')));\n    assert(ecc.isXOnlyPoint(h('0000000000000000000000000000000000000000000000000000000000000001')));\n    assert(!ecc.isXOnlyPoint(h('0000000000000000000000000000000000000000000000000000000000000000')));\n    assert(!ecc.isXOnlyPoint(h('fffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f')));\n    assert(typeof ecc.xOnlyPointAddTweak === 'function');\n    tweakAddVectors.forEach(function (t) {\n      var r = ecc.xOnlyPointAddTweak(h(t.pubkey), h(t.tweak));\n      if (t.result === null) {\n        assert(r === null);\n      } else {\n        assert(r !== null);\n        assert(r.parity === t.parity);\n        assert(Buffer.from(r.xOnlyPubkey).equals(h(t.result)));\n      }\n    });\n  }\n  function assert(bool) {\n    if (!bool) throw new Error('ecc library invalid');\n  }\n  var tweakAddVectors = [{\n    pubkey: '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    tweak: 'fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364140',\n    parity: -1,\n    result: null\n  }, {\n    pubkey: '1617d38ed8d8657da4d4761e8057bc396ea9e4b9d29776d4be096016dbd2509b',\n    tweak: 'a8397a935f0dfceba6ba9618f6451ef4d80637abf4e6af2669fbc9de6a8fd2ac',\n    parity: 1,\n    result: 'e478f99dab91052ab39a33ea35fd5e6e4933f4d28023cd597c9a1f6760346adf'\n  }, {\n    pubkey: '2c0b7cf95324a07d05398b240174dc0c2be444d96b159aa6c7f7b1e668680991',\n    tweak: '823c3cd2142744b075a87eade7e1b8678ba308d566226a0056ca2b7a76f86b47',\n    parity: 0,\n    result: '9534f8dc8c6deda2dc007655981c78b49c5d96c778fbf363462a11ec9dfd948c'\n  }];\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getEccLib"],[7,19,3,17],[7,22,3,20,"exports"],[7,29,3,27],[7,30,3,28,"initEccLib"],[7,40,3,38],[7,43,3,41],[7,48,3,46],[7,49,3,47],[8,2,4,0],[8,6,4,6,"_ECCLIB_CACHE"],[8,19,4,19],[8,22,4,22],[8,23,4,23],[8,24,4,24],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,2,13,0],[17,11,13,9,"initEccLib"],[17,21,13,19,"initEccLib"],[17,22,13,20,"eccLib"],[17,28,13,26],[17,30,13,28,"opts"],[17,34,13,32],[17,36,13,34],[18,4,14,2],[18,8,14,6],[18,9,14,7,"eccLib"],[18,15,14,13],[18,17,14,15],[19,6,15,4],[20,6,16,4,"_ECCLIB_CACHE"],[20,19,16,17],[20,20,16,18,"eccLib"],[20,26,16,24],[20,29,16,27,"eccLib"],[20,35,16,33],[21,4,17,2],[21,5,17,3],[21,11,17,9],[21,15,17,13,"eccLib"],[21,21,17,19],[21,26,17,24,"_ECCLIB_CACHE"],[21,39,17,37],[21,40,17,38,"eccLib"],[21,46,17,44],[21,48,17,46],[22,6,18,4],[22,10,18,8],[22,12,18,9,"opts"],[22,16,18,13],[22,28,18,9,"opts"],[22,32,18,13],[22,33,18,15,"DANGER_DO_NOT_VERIFY_ECCLIB"],[22,60,18,42],[23,8,19,6],[24,8,20,6,"verifyEcc"],[24,17,20,15],[24,18,20,16,"eccLib"],[24,24,20,22],[24,25,20,23],[25,6,21,4,"_ECCLIB_CACHE"],[25,19,21,17],[25,20,21,18,"eccLib"],[25,26,21,24],[25,29,21,27,"eccLib"],[25,35,21,33],[26,4,22,2],[27,2,23,0],[28,2,24,0,"exports"],[28,9,24,7],[28,10,24,8,"initEccLib"],[28,20,24,18],[28,23,24,21,"initEccLib"],[28,33,24,31],[29,2,25,0],[30,0,26,0],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,0,30,0],[35,0,31,0],[36,2,32,0],[36,11,32,9,"getEccLib"],[36,20,32,18,"getEccLib"],[36,21,32,18],[36,23,32,21],[37,4,33,2],[37,8,33,6],[37,9,33,7,"_ECCLIB_CACHE"],[37,22,33,20],[37,23,33,21,"eccLib"],[37,29,33,27],[37,31,34,4],[37,37,34,10],[37,41,34,14,"Error"],[37,46,34,19],[37,47,35,6],[37,145,36,4],[37,146,36,5],[38,4,37,2],[38,11,37,9,"_ECCLIB_CACHE"],[38,24,37,22],[38,25,37,23,"eccLib"],[38,31,37,29],[39,2,38,0],[40,2,39,0,"exports"],[40,9,39,7],[40,10,39,8,"getEccLib"],[40,19,39,17],[40,22,39,20,"getEccLib"],[40,31,39,29],[41,2,40,0],[41,6,40,6,"h"],[41,7,40,7],[41,10,40,10],[41,19,40,6,"h"],[41,20,40,7,"h"],[41,21,40,10,"hex"],[41,24,40,13],[42,4,40,13],[42,11,40,17,"Buffer"],[42,17,40,23],[42,18,40,24,"from"],[42,22,40,28],[42,23,40,29,"hex"],[42,26,40,32],[42,28,40,34],[42,33,40,39],[42,34,40,40],[43,2,40,40],[44,2,41,0],[45,0,42,0],[46,0,43,0],[47,0,44,0],[48,0,45,0],[49,2,46,0],[49,11,46,9,"verifyEcc"],[49,20,46,18,"verifyEcc"],[49,21,46,19,"ecc"],[49,24,46,22],[49,26,46,24],[50,4,47,2,"assert"],[50,10,47,8],[50,11,47,9],[50,18,47,16,"ecc"],[50,21,47,19],[50,22,47,20,"isXOnlyPoint"],[50,34,47,32],[50,39,47,37],[50,49,47,47],[50,50,47,48],[51,4,48,2,"assert"],[51,10,48,8],[51,11,49,4,"ecc"],[51,14,49,7],[51,15,49,8,"isXOnlyPoint"],[51,27,49,20],[51,28,50,6,"h"],[51,29,50,7],[51,30,50,8],[51,96,50,74],[51,97,51,4],[51,98,52,2],[51,99,52,3],[52,4,53,2,"assert"],[52,10,53,8],[52,11,54,4,"ecc"],[52,14,54,7],[52,15,54,8,"isXOnlyPoint"],[52,27,54,20],[52,28,55,6,"h"],[52,29,55,7],[52,30,55,8],[52,96,55,74],[52,97,56,4],[52,98,57,2],[52,99,57,3],[53,4,58,2,"assert"],[53,10,58,8],[53,11,59,4,"ecc"],[53,14,59,7],[53,15,59,8,"isXOnlyPoint"],[53,27,59,20],[53,28,60,6,"h"],[53,29,60,7],[53,30,60,8],[53,96,60,74],[53,97,61,4],[53,98,62,2],[53,99,62,3],[54,4,63,2,"assert"],[54,10,63,8],[54,11,64,4,"ecc"],[54,14,64,7],[54,15,64,8,"isXOnlyPoint"],[54,27,64,20],[54,28,65,6,"h"],[54,29,65,7],[54,30,65,8],[54,96,65,74],[54,97,66,4],[54,98,67,2],[54,99,67,3],[55,4,68,2,"assert"],[55,10,68,8],[55,11,69,4],[55,12,69,5,"ecc"],[55,15,69,8],[55,16,69,9,"isXOnlyPoint"],[55,28,69,21],[55,29,70,6,"h"],[55,30,70,7],[55,31,70,8],[55,97,70,74],[55,98,71,4],[55,99,72,2],[55,100,72,3],[56,4,73,2,"assert"],[56,10,73,8],[56,11,74,4],[56,12,74,5,"ecc"],[56,15,74,8],[56,16,74,9,"isXOnlyPoint"],[56,28,74,21],[56,29,75,6,"h"],[56,30,75,7],[56,31,75,8],[56,97,75,74],[56,98,76,4],[56,99,77,2],[56,100,77,3],[57,4,78,2,"assert"],[57,10,78,8],[57,11,78,9],[57,18,78,16,"ecc"],[57,21,78,19],[57,22,78,20,"xOnlyPointAddTweak"],[57,40,78,38],[57,45,78,43],[57,55,78,53],[57,56,78,54],[58,4,79,2,"tweakAddVectors"],[58,19,79,17],[58,20,79,18,"forEach"],[58,27,79,25],[58,28,79,26],[58,38,79,26,"t"],[58,39,79,27],[58,41,79,31],[59,6,80,4],[59,10,80,10,"r"],[59,11,80,11],[59,14,80,14,"ecc"],[59,17,80,17],[59,18,80,18,"xOnlyPointAddTweak"],[59,36,80,36],[59,37,80,37,"h"],[59,38,80,38],[59,39,80,39,"t"],[59,40,80,40],[59,41,80,41,"pubkey"],[59,47,80,47],[59,48,80,48],[59,50,80,50,"h"],[59,51,80,51],[59,52,80,52,"t"],[59,53,80,53],[59,54,80,54,"tweak"],[59,59,80,59],[59,60,80,60],[59,61,80,61],[60,6,81,4],[60,10,81,8,"t"],[60,11,81,9],[60,12,81,10,"result"],[60,18,81,16],[60,23,81,21],[60,27,81,25],[60,29,81,27],[61,8,82,6,"assert"],[61,14,82,12],[61,15,82,13,"r"],[61,16,82,14],[61,21,82,19],[61,25,82,23],[61,26,82,24],[62,6,83,4],[62,7,83,5],[62,13,83,11],[63,8,84,6,"assert"],[63,14,84,12],[63,15,84,13,"r"],[63,16,84,14],[63,21,84,19],[63,25,84,23],[63,26,84,24],[64,8,85,6,"assert"],[64,14,85,12],[64,15,85,13,"r"],[64,16,85,14],[64,17,85,15,"parity"],[64,23,85,21],[64,28,85,26,"t"],[64,29,85,27],[64,30,85,28,"parity"],[64,36,85,34],[64,37,85,35],[65,8,86,6,"assert"],[65,14,86,12],[65,15,86,13,"Buffer"],[65,21,86,19],[65,22,86,20,"from"],[65,26,86,24],[65,27,86,25,"r"],[65,28,86,26],[65,29,86,27,"xOnlyPubkey"],[65,40,86,38],[65,41,86,39],[65,42,86,40,"equals"],[65,48,86,46],[65,49,86,47,"h"],[65,50,86,48],[65,51,86,49,"t"],[65,52,86,50],[65,53,86,51,"result"],[65,59,86,57],[65,60,86,58],[65,61,86,59],[65,62,86,60],[66,6,87,4],[67,4,88,2],[67,5,88,3],[67,6,88,4],[68,2,89,0],[69,2,90,0],[69,11,90,9,"assert"],[69,17,90,15,"assert"],[69,18,90,16,"bool"],[69,22,90,20],[69,24,90,22],[70,4,91,2],[70,8,91,6],[70,9,91,7,"bool"],[70,13,91,11],[70,15,91,13],[70,21,91,19],[70,25,91,23,"Error"],[70,30,91,28],[70,31,91,29],[70,52,91,50],[70,53,91,51],[71,2,92,0],[72,2,93,0],[72,6,93,6,"tweakAddVectors"],[72,21,93,21],[72,24,93,24],[72,25,94,2],[73,4,95,4,"pubkey"],[73,10,95,10],[73,12,95,12],[73,78,95,78],[74,4,96,4,"tweak"],[74,9,96,9],[74,11,96,11],[74,77,96,77],[75,4,97,4,"parity"],[75,10,97,10],[75,12,97,12],[75,13,97,13],[75,14,97,14],[76,4,98,4,"result"],[76,10,98,10],[76,12,98,12],[77,2,99,2],[77,3,99,3],[77,5,100,2],[78,4,101,4,"pubkey"],[78,10,101,10],[78,12,101,12],[78,78,101,78],[79,4,102,4,"tweak"],[79,9,102,9],[79,11,102,11],[79,77,102,77],[80,4,103,4,"parity"],[80,10,103,10],[80,12,103,12],[80,13,103,13],[81,4,104,4,"result"],[81,10,104,10],[81,12,104,12],[82,2,105,2],[82,3,105,3],[82,5,106,2],[83,4,107,4,"pubkey"],[83,10,107,10],[83,12,107,12],[83,78,107,78],[84,4,108,4,"tweak"],[84,9,108,9],[84,11,108,11],[84,77,108,77],[85,4,109,4,"parity"],[85,10,109,10],[85,12,109,12],[85,13,109,13],[86,4,110,4,"result"],[86,10,110,10],[86,12,110,12],[87,2,111,2],[87,3,111,3],[87,4,112,1],[88,0,112,2],[88,3]],"functionMap":{"names":["<global>","initEccLib","getEccLib","h","verifyEcc","tweakAddVectors.forEach$argument_0","assert"],"mappings":"AAA;ACY;CDU;AES;CFM;UGE,8BH;AIM;0BCiC;GDS;CJC;AMC;CNE"}},"type":"js/module"}]}