{"dependencies":[{"name":"safe-buffer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}},{"start":{"line":1,"column":13,"index":13},"end":{"line":1,"column":42,"index":42}}],"key":"JYiVyKV2adrbhzv3Ouecl8p4NAI="}},{"name":"md5.js","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":2,"column":10,"index":53},"end":{"line":2,"column":27,"index":70}}],"key":"hjDWeTyOSDzf2TqUwFSFEe7yqYg="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /* eslint-disable camelcase */\n  function EVP_BytesToKey(password, salt, keyBits, ivLen) {\n    if (!_$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.isBuffer(password)) password = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from(password, 'binary');\n    if (salt) {\n      if (!_$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.isBuffer(salt)) salt = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.from(salt, 'binary');\n      if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length');\n    }\n    var keyLen = keyBits / 8;\n    var key = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(keyLen);\n    var iv = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(ivLen || 0);\n    var tmp = _$$_REQUIRE(_dependencyMap[0], \"safe-buffer\").Buffer.alloc(0);\n    while (keyLen > 0 || ivLen > 0) {\n      var hash = new (_$$_REQUIRE(_dependencyMap[1], \"md5.js\"))();\n      hash.update(tmp);\n      hash.update(password);\n      if (salt) hash.update(salt);\n      tmp = hash.digest();\n      var used = 0;\n      if (keyLen > 0) {\n        var keyStart = key.length - keyLen;\n        used = Math.min(keyLen, tmp.length);\n        tmp.copy(key, keyStart, 0, used);\n        keyLen -= used;\n      }\n      if (used < tmp.length && ivLen > 0) {\n        var ivStart = iv.length - ivLen;\n        var length = Math.min(ivLen, tmp.length - used);\n        tmp.copy(iv, ivStart, used, used + length);\n        ivLen -= length;\n      }\n    }\n    tmp.fill(0);\n    return {\n      key: key,\n      iv: iv\n    };\n  }\n  module.exports = EVP_BytesToKey;\n});","lineCount":40,"map":[[2,2,4,0],[3,2,5,0],[3,11,5,9,"EVP_BytesToKey"],[3,25,5,23,"EVP_BytesToKey"],[3,26,5,25,"password"],[3,34,5,33],[3,36,5,35,"salt"],[3,40,5,39],[3,42,5,41,"keyBits"],[3,49,5,48],[3,51,5,50,"ivLen"],[3,56,5,55],[3,58,5,57],[4,4,6,2],[4,8,6,6],[4,9,6,7,"_$$_REQUIRE"],[4,20,6,7],[4,21,6,7,"_dependencyMap"],[4,35,6,7],[4,55,6,7,"Buffer"],[4,61,6,7],[4,62,6,14,"isBuffer"],[4,70,6,22],[4,71,6,23,"password"],[4,79,6,31],[4,80,6,32],[4,82,6,34,"password"],[4,90,6,42],[4,93,6,45,"_$$_REQUIRE"],[4,104,6,45],[4,105,6,45,"_dependencyMap"],[4,119,6,45],[4,139,6,45,"Buffer"],[4,145,6,45],[4,146,6,52,"from"],[4,150,6,56],[4,151,6,57,"password"],[4,159,6,65],[4,161,6,67],[4,169,6,75],[4,170,6,76],[5,4,7,2],[5,8,7,6,"salt"],[5,12,7,10],[5,14,7,12],[6,6,8,4],[6,10,8,8],[6,11,8,9,"_$$_REQUIRE"],[6,22,8,9],[6,23,8,9,"_dependencyMap"],[6,37,8,9],[6,57,8,9,"Buffer"],[6,63,8,9],[6,64,8,16,"isBuffer"],[6,72,8,24],[6,73,8,25,"salt"],[6,77,8,29],[6,78,8,30],[6,80,8,32,"salt"],[6,84,8,36],[6,87,8,39,"_$$_REQUIRE"],[6,98,8,39],[6,99,8,39,"_dependencyMap"],[6,113,8,39],[6,133,8,39,"Buffer"],[6,139,8,39],[6,140,8,46,"from"],[6,144,8,50],[6,145,8,51,"salt"],[6,149,8,55],[6,151,8,57],[6,159,8,65],[6,160,8,66],[7,6,9,4],[7,10,9,8,"salt"],[7,14,9,12],[7,15,9,13,"length"],[7,21,9,19],[7,26,9,24],[7,27,9,25],[7,29,9,27],[7,35,9,33],[7,39,9,37,"RangeError"],[7,49,9,47],[7,50,9,48],[7,92,9,90],[7,93,9,91],[8,4,10,2],[9,4,12,2],[9,8,12,6,"keyLen"],[9,14,12,12],[9,17,12,15,"keyBits"],[9,24,12,22],[9,27,12,25],[9,28,12,26],[10,4,13,2],[10,8,13,6,"key"],[10,11,13,9],[10,14,13,12,"_$$_REQUIRE"],[10,25,13,12],[10,26,13,12,"_dependencyMap"],[10,40,13,12],[10,60,13,12,"Buffer"],[10,66,13,12],[10,67,13,19,"alloc"],[10,72,13,24],[10,73,13,25,"keyLen"],[10,79,13,31],[10,80,13,32],[11,4,14,2],[11,8,14,6,"iv"],[11,10,14,8],[11,13,14,11,"_$$_REQUIRE"],[11,24,14,11],[11,25,14,11,"_dependencyMap"],[11,39,14,11],[11,59,14,11,"Buffer"],[11,65,14,11],[11,66,14,18,"alloc"],[11,71,14,23],[11,72,14,24,"ivLen"],[11,77,14,29],[11,81,14,33],[11,82,14,34],[11,83,14,35],[12,4,15,2],[12,8,15,6,"tmp"],[12,11,15,9],[12,14,15,12,"_$$_REQUIRE"],[12,25,15,12],[12,26,15,12,"_dependencyMap"],[12,40,15,12],[12,60,15,12,"Buffer"],[12,66,15,12],[12,67,15,19,"alloc"],[12,72,15,24],[12,73,15,25],[12,74,15,26],[12,75,15,27],[13,4,17,2],[13,11,17,9,"keyLen"],[13,17,17,15],[13,20,17,18],[13,21,17,19],[13,25,17,23,"ivLen"],[13,30,17,28],[13,33,17,31],[13,34,17,32],[13,36,17,34],[14,6,18,4],[14,10,18,8,"hash"],[14,14,18,12],[14,17,18,15],[14,22,18,15,"_$$_REQUIRE"],[14,33,18,15],[14,34,18,15,"_dependencyMap"],[14,48,18,15],[14,64,18,23],[14,65,18,24],[15,6,19,4,"hash"],[15,10,19,8],[15,11,19,9,"update"],[15,17,19,15],[15,18,19,16,"tmp"],[15,21,19,19],[15,22,19,20],[16,6,20,4,"hash"],[16,10,20,8],[16,11,20,9,"update"],[16,17,20,15],[16,18,20,16,"password"],[16,26,20,24],[16,27,20,25],[17,6,21,4],[17,10,21,8,"salt"],[17,14,21,12],[17,16,21,14,"hash"],[17,20,21,18],[17,21,21,19,"update"],[17,27,21,25],[17,28,21,26,"salt"],[17,32,21,30],[17,33,21,31],[18,6,22,4,"tmp"],[18,9,22,7],[18,12,22,10,"hash"],[18,16,22,14],[18,17,22,15,"digest"],[18,23,22,21],[18,24,22,22],[18,25,22,23],[19,6,24,4],[19,10,24,8,"used"],[19,14,24,12],[19,17,24,15],[19,18,24,16],[20,6,26,4],[20,10,26,8,"keyLen"],[20,16,26,14],[20,19,26,17],[20,20,26,18],[20,22,26,20],[21,8,27,6],[21,12,27,10,"keyStart"],[21,20,27,18],[21,23,27,21,"key"],[21,26,27,24],[21,27,27,25,"length"],[21,33,27,31],[21,36,27,34,"keyLen"],[21,42,27,40],[22,8,28,6,"used"],[22,12,28,10],[22,15,28,13,"Math"],[22,19,28,17],[22,20,28,18,"min"],[22,23,28,21],[22,24,28,22,"keyLen"],[22,30,28,28],[22,32,28,30,"tmp"],[22,35,28,33],[22,36,28,34,"length"],[22,42,28,40],[22,43,28,41],[23,8,29,6,"tmp"],[23,11,29,9],[23,12,29,10,"copy"],[23,16,29,14],[23,17,29,15,"key"],[23,20,29,18],[23,22,29,20,"keyStart"],[23,30,29,28],[23,32,29,30],[23,33,29,31],[23,35,29,33,"used"],[23,39,29,37],[23,40,29,38],[24,8,30,6,"keyLen"],[24,14,30,12],[24,18,30,16,"used"],[24,22,30,20],[25,6,31,4],[26,6,33,4],[26,10,33,8,"used"],[26,14,33,12],[26,17,33,15,"tmp"],[26,20,33,18],[26,21,33,19,"length"],[26,27,33,25],[26,31,33,29,"ivLen"],[26,36,33,34],[26,39,33,37],[26,40,33,38],[26,42,33,40],[27,8,34,6],[27,12,34,10,"ivStart"],[27,19,34,17],[27,22,34,20,"iv"],[27,24,34,22],[27,25,34,23,"length"],[27,31,34,29],[27,34,34,32,"ivLen"],[27,39,34,37],[28,8,35,6],[28,12,35,10,"length"],[28,18,35,16],[28,21,35,19,"Math"],[28,25,35,23],[28,26,35,24,"min"],[28,29,35,27],[28,30,35,28,"ivLen"],[28,35,35,33],[28,37,35,35,"tmp"],[28,40,35,38],[28,41,35,39,"length"],[28,47,35,45],[28,50,35,48,"used"],[28,54,35,52],[28,55,35,53],[29,8,36,6,"tmp"],[29,11,36,9],[29,12,36,10,"copy"],[29,16,36,14],[29,17,36,15,"iv"],[29,19,36,17],[29,21,36,19,"ivStart"],[29,28,36,26],[29,30,36,28,"used"],[29,34,36,32],[29,36,36,34,"used"],[29,40,36,38],[29,43,36,41,"length"],[29,49,36,47],[29,50,36,48],[30,8,37,6,"ivLen"],[30,13,37,11],[30,17,37,15,"length"],[30,23,37,21],[31,6,38,4],[32,4,39,2],[33,4,41,2,"tmp"],[33,7,41,5],[33,8,41,6,"fill"],[33,12,41,10],[33,13,41,11],[33,14,41,12],[33,15,41,13],[34,4,42,2],[34,11,42,9],[35,6,42,11,"key"],[35,9,42,14],[35,11,42,16,"key"],[35,14,42,19],[36,6,42,21,"iv"],[36,8,42,23],[36,10,42,25,"iv"],[37,4,42,28],[37,5,42,29],[38,2,43,0],[39,2,45,0,"module"],[39,8,45,6],[39,9,45,7,"exports"],[39,16,45,14],[39,19,45,17,"EVP_BytesToKey"],[39,33,45,31],[40,0,45,31],[40,3]],"functionMap":{"names":["<global>","EVP_BytesToKey"],"mappings":"AAA;ACI;CDsC"}},"type":"js/module"}]}