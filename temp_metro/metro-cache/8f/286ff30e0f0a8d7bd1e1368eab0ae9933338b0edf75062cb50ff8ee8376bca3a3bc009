{"dependencies":[{"name":"../tokenizer","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":11,"index":111},"end":{"line":3,"column":39,"index":139}},{"start":{"line":3,"column":11,"index":111},"end":{"line":3,"column":39,"index":139}},{"start":{"line":3,"column":11,"index":111},"end":{"line":3,"column":39,"index":139}},{"start":{"line":3,"column":11,"index":111},"end":{"line":3,"column":39,"index":139}},{"start":{"line":1,"column":17,"index":17},"end":{"line":1,"column":51,"index":51}},{"start":{"line":2,"column":14,"index":67},"end":{"line":2,"column":45,"index":98}}],"key":"CeLPNCNjt8y0xnwsIyTQzXoUUj0="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var IDENT = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Ident;\n  var DELIM = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Delim;\n  var NUMBER = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Number;\n  var DIMENSION = _$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").TYPE.Dimension;\n  var PLUSSIGN = 0x002B; // U+002B PLUS SIGN (+)\n  var HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\n  var QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\n  var U = 0x0075; // U+0075 LATIN SMALL LETTER U (u)\n\n  function isDelim(token, code) {\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\n  }\n  function startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n  }\n  function hexSequence(token, offset, allowDash) {\n    for (var pos = offset, hexlen = 0; pos < token.value.length; pos++) {\n      var code = token.value.charCodeAt(pos);\n      if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n        if (hexSequence(token, offset + hexlen + 1, false) > 0) {\n          return 6; // dissallow following question marks\n        }\n        return 0; // dash at the ending of a hex sequence is not allowed\n      }\n      if (!_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").isHexDigit(code)) {\n        return 0; // not a hex digit\n      }\n      if (++hexlen > 6) {\n        return 0; // too many hex digits\n      }\n      ;\n    }\n    return hexlen;\n  }\n  function withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n      return 0; // nothing consumed\n    }\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n      if (++consumed > 6) {\n        return 0; // too many question marks\n      }\n      length++;\n    }\n    return length;\n  }\n\n  // https://drafts.csswg.org/css-syntax/#urange\n  // Informally, the <urange> production has three forms:\n  // U+0001\n  //      Defines a range consisting of a single code point, in this case the code point \"1\".\n  // U+0001-00ff\n  //      Defines a range of codepoints between the first and the second value, in this case\n  //      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n  // U+00??\n  //      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n  //      in this case defining the same as the value U+0000-00ff.\n  // In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n  //\n  // <urange> =\n  //   u '+' <ident-token> '?'* |\n  //   u <dimension-token> '?'* |\n  //   u <number-token> '?'* |\n  //   u <number-token> <dimension-token> |\n  //   u <number-token> <number-token> |\n  //   u '+' '?'+\n  module.exports = function urange(token, getNextToken) {\n    var length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== IDENT || !_$$_REQUIRE(_dependencyMap[0], \"../tokenizer\").cmpChar(token.value, 0, U)) {\n      return 0;\n    }\n    token = getNextToken(++length);\n    if (token === null) {\n      return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n      token = getNextToken(++length);\n      if (token === null) {\n        return 0;\n      }\n      if (token.type === IDENT) {\n        // u '+' <ident-token> '?'*\n        return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n      }\n      if (isDelim(token, QUESTIONMARK)) {\n        // u '+' '?'+\n        return withQuestionMarkSequence(1, ++length, getNextToken);\n      }\n\n      // Hex digit or question mark is expected\n      return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NUMBER) {\n      if (!startsWith(token, PLUSSIGN)) {\n        return 0;\n      }\n      var consumedHexLength = hexSequence(token, 1, true);\n      if (consumedHexLength === 0) {\n        return 0;\n      }\n      token = getNextToken(++length);\n      if (token === null) {\n        // u <number-token> <eof>\n        return length;\n      }\n      if (token.type === DIMENSION || token.type === NUMBER) {\n        // u <number-token> <dimension-token>\n        // u <number-token> <number-token>\n        if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n          return 0;\n        }\n        return length + 1;\n      }\n\n      // u <number-token> '?'*\n      return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === DIMENSION) {\n      if (!startsWith(token, PLUSSIGN)) {\n        return 0;\n      }\n      return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n    return 0;\n  };\n});","lineCount":138,"map":[[2,2,5,0],[2,6,5,4,"IDENT"],[2,11,5,9],[2,14,5,12,"_$$_REQUIRE"],[2,25,5,12],[2,26,5,12,"_dependencyMap"],[2,40,5,12],[2,61,5,12,"TYPE"],[2,65,5,12],[2,66,5,17,"Ident"],[2,71,5,22],[3,2,6,0],[3,6,6,4,"DELIM"],[3,11,6,9],[3,14,6,12,"_$$_REQUIRE"],[3,25,6,12],[3,26,6,12,"_dependencyMap"],[3,40,6,12],[3,61,6,12,"TYPE"],[3,65,6,12],[3,66,6,17,"Delim"],[3,71,6,22],[4,2,7,0],[4,6,7,4,"NUMBER"],[4,12,7,10],[4,15,7,13,"_$$_REQUIRE"],[4,26,7,13],[4,27,7,13,"_dependencyMap"],[4,41,7,13],[4,62,7,13,"TYPE"],[4,66,7,13],[4,67,7,18,"Number"],[4,73,7,24],[5,2,8,0],[5,6,8,4,"DIMENSION"],[5,15,8,13],[5,18,8,16,"_$$_REQUIRE"],[5,29,8,16],[5,30,8,16,"_dependencyMap"],[5,44,8,16],[5,65,8,16,"TYPE"],[5,69,8,16],[5,70,8,21,"Dimension"],[5,79,8,30],[6,2,9,0],[6,6,9,4,"PLUSSIGN"],[6,14,9,12],[6,17,9,15],[6,23,9,21],[6,24,9,22],[6,25,9,27],[7,2,10,0],[7,6,10,4,"HYPHENMINUS"],[7,17,10,15],[7,20,10,18],[7,26,10,24],[7,27,10,25],[7,28,10,27],[8,2,11,0],[8,6,11,4,"QUESTIONMARK"],[8,18,11,16],[8,21,11,19],[8,27,11,25],[8,28,11,26],[8,29,11,27],[9,2,12,0],[9,6,12,4,"U"],[9,7,12,5],[9,10,12,8],[9,16,12,14],[9,17,12,15],[9,18,12,27],[11,2,14,0],[11,11,14,9,"isDelim"],[11,18,14,16,"isDelim"],[11,19,14,17,"token"],[11,24,14,22],[11,26,14,24,"code"],[11,30,14,28],[11,32,14,30],[12,4,15,4],[12,11,15,11,"token"],[12,16,15,16],[12,21,15,21],[12,25,15,25],[12,29,15,29,"token"],[12,34,15,34],[12,35,15,35,"type"],[12,39,15,39],[12,44,15,44,"DELIM"],[12,49,15,49],[12,53,15,53,"token"],[12,58,15,58],[12,59,15,59,"value"],[12,64,15,64],[12,65,15,65,"charCodeAt"],[12,75,15,75],[12,76,15,76],[12,77,15,77],[12,78,15,78],[12,83,15,83,"code"],[12,87,15,87],[13,2,16,0],[14,2,18,0],[14,11,18,9,"startsWith"],[14,21,18,19,"startsWith"],[14,22,18,20,"token"],[14,27,18,25],[14,29,18,27,"code"],[14,33,18,31],[14,35,18,33],[15,4,19,4],[15,11,19,11,"token"],[15,16,19,16],[15,17,19,17,"value"],[15,22,19,22],[15,23,19,23,"charCodeAt"],[15,33,19,33],[15,34,19,34],[15,35,19,35],[15,36,19,36],[15,41,19,41,"code"],[15,45,19,45],[16,2,20,0],[17,2,22,0],[17,11,22,9,"hexSequence"],[17,22,22,20,"hexSequence"],[17,23,22,21,"token"],[17,28,22,26],[17,30,22,28,"offset"],[17,36,22,34],[17,38,22,36,"allowDash"],[17,47,22,45],[17,49,22,47],[18,4,23,4],[18,9,23,9],[18,13,23,13,"pos"],[18,16,23,16],[18,19,23,19,"offset"],[18,25,23,25],[18,27,23,27,"hexlen"],[18,33,23,33],[18,36,23,36],[18,37,23,37],[18,39,23,39,"pos"],[18,42,23,42],[18,45,23,45,"token"],[18,50,23,50],[18,51,23,51,"value"],[18,56,23,56],[18,57,23,57,"length"],[18,63,23,63],[18,65,23,65,"pos"],[18,68,23,68],[18,70,23,70],[18,72,23,72],[19,6,24,8],[19,10,24,12,"code"],[19,14,24,16],[19,17,24,19,"token"],[19,22,24,24],[19,23,24,25,"value"],[19,28,24,30],[19,29,24,31,"charCodeAt"],[19,39,24,41],[19,40,24,42,"pos"],[19,43,24,45],[19,44,24,46],[20,6,26,8],[20,10,26,12,"code"],[20,14,26,16],[20,19,26,21,"HYPHENMINUS"],[20,30,26,32],[20,34,26,36,"allowDash"],[20,43,26,45],[20,47,26,49,"hexlen"],[20,53,26,55],[20,58,26,60],[20,59,26,61],[20,61,26,63],[21,8,27,12],[21,12,27,16,"hexSequence"],[21,23,27,27],[21,24,27,28,"token"],[21,29,27,33],[21,31,27,35,"offset"],[21,37,27,41],[21,40,27,44,"hexlen"],[21,46,27,50],[21,49,27,53],[21,50,27,54],[21,52,27,56],[21,57,27,61],[21,58,27,62],[21,61,27,65],[21,62,27,66],[21,64,27,68],[22,10,28,16],[22,17,28,23],[22,18,28,24],[22,19,28,25],[22,20,28,26],[23,8,29,12],[24,8,31,12],[24,15,31,19],[24,16,31,20],[24,17,31,21],[24,18,31,22],[25,6,32,8],[26,6,34,8],[26,10,34,12],[26,11,34,13,"_$$_REQUIRE"],[26,22,34,13],[26,23,34,13,"_dependencyMap"],[26,37,34,13],[26,58,34,13,"isHexDigit"],[26,68,34,13],[26,69,34,24,"code"],[26,73,34,28],[26,74,34,29],[26,76,34,31],[27,8,35,12],[27,15,35,19],[27,16,35,20],[27,17,35,21],[27,18,35,22],[28,6,36,8],[29,6,38,8],[29,10,38,12],[29,12,38,14,"hexlen"],[29,18,38,20],[29,21,38,23],[29,22,38,24],[29,24,38,26],[30,8,39,12],[30,15,39,19],[30,16,39,20],[30,17,39,21],[30,18,39,22],[31,6,40,8],[32,6,40,9],[33,4,41,4],[34,4,43,4],[34,11,43,11,"hexlen"],[34,17,43,17],[35,2,44,0],[36,2,46,0],[36,11,46,9,"withQuestionMarkSequence"],[36,35,46,33,"withQuestionMarkSequence"],[36,36,46,34,"consumed"],[36,44,46,42],[36,46,46,44,"length"],[36,52,46,50],[36,54,46,52,"getNextToken"],[36,66,46,64],[36,68,46,66],[37,4,47,4],[37,8,47,8],[37,9,47,9,"consumed"],[37,17,47,17],[37,19,47,19],[38,6,48,8],[38,13,48,15],[38,14,48,16],[38,15,48,17],[38,16,48,18],[39,4,49,4],[40,4,51,4],[40,11,51,11,"isDelim"],[40,18,51,18],[40,19,51,19,"getNextToken"],[40,31,51,31],[40,32,51,32,"length"],[40,38,51,38],[40,39,51,39],[40,41,51,41,"QUESTIONMARK"],[40,53,51,53],[40,54,51,54],[40,56,51,56],[41,6,52,8],[41,10,52,12],[41,12,52,14,"consumed"],[41,20,52,22],[41,23,52,25],[41,24,52,26],[41,26,52,28],[42,8,53,12],[42,15,53,19],[42,16,53,20],[42,17,53,21],[42,18,53,22],[43,6,54,8],[44,6,56,8,"length"],[44,12,56,14],[44,14,56,16],[45,4,57,4],[46,4,59,4],[46,11,59,11,"length"],[46,17,59,17],[47,2,60,0],[49,2,62,0],[50,2,63,0],[51,2,64,0],[52,2,65,0],[53,2,66,0],[54,2,67,0],[55,2,68,0],[56,2,69,0],[57,2,70,0],[58,2,71,0],[59,2,72,0],[60,2,73,0],[61,2,74,0],[62,2,75,0],[63,2,76,0],[64,2,77,0],[65,2,78,0],[66,2,79,0],[67,2,80,0],[68,2,81,0,"module"],[68,8,81,6],[68,9,81,7,"exports"],[68,16,81,14],[68,19,81,17],[68,28,81,26,"urange"],[68,34,81,32,"urange"],[68,35,81,33,"token"],[68,40,81,38],[68,42,81,40,"getNextToken"],[68,54,81,52],[68,56,81,54],[69,4,82,4],[69,8,82,8,"length"],[69,14,82,14],[69,17,82,17],[69,18,82,18],[71,4,84,4],[72,4,85,4],[72,8,85,8,"token"],[72,13,85,13],[72,18,85,18],[72,22,85,22],[72,26,85,26,"token"],[72,31,85,31],[72,32,85,32,"type"],[72,36,85,36],[72,41,85,41,"IDENT"],[72,46,85,46],[72,50,85,50],[72,51,85,51,"_$$_REQUIRE"],[72,62,85,51],[72,63,85,51,"_dependencyMap"],[72,77,85,51],[72,98,85,51,"cmpChar"],[72,105,85,51],[72,106,85,59,"token"],[72,111,85,64],[72,112,85,65,"value"],[72,117,85,70],[72,119,85,72],[72,120,85,73],[72,122,85,75,"U"],[72,123,85,76],[72,124,85,77],[72,126,85,79],[73,6,86,8],[73,13,86,15],[73,14,86,16],[74,4,87,4],[75,4,89,4,"token"],[75,9,89,9],[75,12,89,12,"getNextToken"],[75,24,89,24],[75,25,89,25],[75,27,89,27,"length"],[75,33,89,33],[75,34,89,34],[76,4,90,4],[76,8,90,8,"token"],[76,13,90,13],[76,18,90,18],[76,22,90,22],[76,24,90,24],[77,6,91,8],[77,13,91,15],[77,14,91,16],[78,4,92,4],[80,4,94,4],[81,4,95,4],[82,4,96,4],[82,8,96,8,"isDelim"],[82,15,96,15],[82,16,96,16,"token"],[82,21,96,21],[82,23,96,23,"PLUSSIGN"],[82,31,96,31],[82,32,96,32],[82,34,96,34],[83,6,97,8,"token"],[83,11,97,13],[83,14,97,16,"getNextToken"],[83,26,97,28],[83,27,97,29],[83,29,97,31,"length"],[83,35,97,37],[83,36,97,38],[84,6,98,8],[84,10,98,12,"token"],[84,15,98,17],[84,20,98,22],[84,24,98,26],[84,26,98,28],[85,8,99,12],[85,15,99,19],[85,16,99,20],[86,6,100,8],[87,6,102,8],[87,10,102,12,"token"],[87,15,102,17],[87,16,102,18,"type"],[87,20,102,22],[87,25,102,27,"IDENT"],[87,30,102,32],[87,32,102,34],[88,8,103,12],[89,8,104,12],[89,15,104,19,"withQuestionMarkSequence"],[89,39,104,43],[89,40,104,44,"hexSequence"],[89,51,104,55],[89,52,104,56,"token"],[89,57,104,61],[89,59,104,63],[89,60,104,64],[89,62,104,66],[89,66,104,70],[89,67,104,71],[89,69,104,73],[89,71,104,75,"length"],[89,77,104,81],[89,79,104,83,"getNextToken"],[89,91,104,95],[89,92,104,96],[90,6,105,8],[91,6,107,8],[91,10,107,12,"isDelim"],[91,17,107,19],[91,18,107,20,"token"],[91,23,107,25],[91,25,107,27,"QUESTIONMARK"],[91,37,107,39],[91,38,107,40],[91,40,107,42],[92,8,108,12],[93,8,109,12],[93,15,109,19,"withQuestionMarkSequence"],[93,39,109,43],[93,40,109,44],[93,41,109,45],[93,43,109,47],[93,45,109,49,"length"],[93,51,109,55],[93,53,109,57,"getNextToken"],[93,65,109,69],[93,66,109,70],[94,6,110,8],[96,6,112,8],[97,6,113,8],[97,13,113,15],[97,14,113,16],[98,4,114,4],[100,4,116,4],[101,4,117,4],[102,4,118,4],[103,4,119,4],[103,8,119,8,"token"],[103,13,119,13],[103,14,119,14,"type"],[103,18,119,18],[103,23,119,23,"NUMBER"],[103,29,119,29],[103,31,119,31],[104,6,120,8],[104,10,120,12],[104,11,120,13,"startsWith"],[104,21,120,23],[104,22,120,24,"token"],[104,27,120,29],[104,29,120,31,"PLUSSIGN"],[104,37,120,39],[104,38,120,40],[104,40,120,42],[105,8,121,12],[105,15,121,19],[105,16,121,20],[106,6,122,8],[107,6,124,8],[107,10,124,12,"consumedHexLength"],[107,27,124,29],[107,30,124,32,"hexSequence"],[107,41,124,43],[107,42,124,44,"token"],[107,47,124,49],[107,49,124,51],[107,50,124,52],[107,52,124,54],[107,56,124,58],[107,57,124,59],[108,6,125,8],[108,10,125,12,"consumedHexLength"],[108,27,125,29],[108,32,125,34],[108,33,125,35],[108,35,125,37],[109,8,126,12],[109,15,126,19],[109,16,126,20],[110,6,127,8],[111,6,129,8,"token"],[111,11,129,13],[111,14,129,16,"getNextToken"],[111,26,129,28],[111,27,129,29],[111,29,129,31,"length"],[111,35,129,37],[111,36,129,38],[112,6,130,8],[112,10,130,12,"token"],[112,15,130,17],[112,20,130,22],[112,24,130,26],[112,26,130,28],[113,8,131,12],[114,8,132,12],[114,15,132,19,"length"],[114,21,132,25],[115,6,133,8],[116,6,135,8],[116,10,135,12,"token"],[116,15,135,17],[116,16,135,18,"type"],[116,20,135,22],[116,25,135,27,"DIMENSION"],[116,34,135,36],[116,38,135,40,"token"],[116,43,135,45],[116,44,135,46,"type"],[116,48,135,50],[116,53,135,55,"NUMBER"],[116,59,135,61],[116,61,135,63],[117,8,136,12],[118,8,137,12],[119,8,138,12],[119,12,138,16],[119,13,138,17,"startsWith"],[119,23,138,27],[119,24,138,28,"token"],[119,29,138,33],[119,31,138,35,"HYPHENMINUS"],[119,42,138,46],[119,43,138,47],[119,47,138,51],[119,48,138,52,"hexSequence"],[119,59,138,63],[119,60,138,64,"token"],[119,65,138,69],[119,67,138,71],[119,68,138,72],[119,70,138,74],[119,75,138,79],[119,76,138,80],[119,78,138,82],[120,10,139,16],[120,17,139,23],[120,18,139,24],[121,8,140,12],[122,8,142,12],[122,15,142,19,"length"],[122,21,142,25],[122,24,142,28],[122,25,142,29],[123,6,143,8],[125,6,145,8],[126,6,146,8],[126,13,146,15,"withQuestionMarkSequence"],[126,37,146,39],[126,38,146,40,"consumedHexLength"],[126,55,146,57],[126,57,146,59,"length"],[126,63,146,65],[126,65,146,67,"getNextToken"],[126,77,146,79],[126,78,146,80],[127,4,147,4],[129,4,149,4],[130,4,150,4],[130,8,150,8,"token"],[130,13,150,13],[130,14,150,14,"type"],[130,18,150,18],[130,23,150,23,"DIMENSION"],[130,32,150,32],[130,34,150,34],[131,6,151,8],[131,10,151,12],[131,11,151,13,"startsWith"],[131,21,151,23],[131,22,151,24,"token"],[131,27,151,29],[131,29,151,31,"PLUSSIGN"],[131,37,151,39],[131,38,151,40],[131,40,151,42],[132,8,152,12],[132,15,152,19],[132,16,152,20],[133,6,153,8],[134,6,155,8],[134,13,155,15,"withQuestionMarkSequence"],[134,37,155,39],[134,38,155,40,"hexSequence"],[134,49,155,51],[134,50,155,52,"token"],[134,55,155,57],[134,57,155,59],[134,58,155,60],[134,60,155,62],[134,64,155,66],[134,65,155,67],[134,67,155,69],[134,69,155,71,"length"],[134,75,155,77],[134,77,155,79,"getNextToken"],[134,89,155,91],[134,90,155,92],[135,4,156,4],[136,4,158,4],[136,11,158,11],[136,12,158,12],[137,2,159,0],[137,3,159,1],[138,0,159,2],[138,3]],"functionMap":{"names":["<global>","isDelim","startsWith","hexSequence","withQuestionMarkSequence","urange"],"mappings":"AAA;ACa;CDE;AEE;CFE;AGE;CHsB;AIE;CJc;iBKqB;CL8E"}},"type":"js/module"}]}