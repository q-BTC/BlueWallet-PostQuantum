{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":142,"column":38,"index":5610}}],"key":"5y7e5+zC7teYEEC6niD9f5zII1M="}},{"name":"../assert","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":17,"index":993},"end":{"line":21,"column":37,"index":1013}}],"key":"EqNBW+769mc/j/kMnDe9BBrECKc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  ////////////////////////////////////////////////////////////////////////////\n  //\n  // Copyright 2022 Realm Inc.\n  //\n  // Licensed under the Apache License, Version 2.0 (the \"License\");\n  // you may not use this file except in compliance with the License.\n  // You may obtain a copy of the License at\n  //\n  // http://www.apache.org/licenses/LICENSE-2.0\n  //\n  // Unless required by applicable law or agreed to in writing, software\n  // distributed under the License is distributed on an \"AS IS\" BASIS,\n  // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  // See the License for the specific language governing permissions and\n  // limitations under the License.\n  //\n  ////////////////////////////////////////////////////////////////////////////\n  var _slicedToArray = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.toBindingPropertyType = exports.toBindingPropertySchema = exports.toBindingObjectSchema = exports.toBindingSchema = exports.TYPE_MAPPINGS = void 0;\n  /** @internal */\n  exports.TYPE_MAPPINGS = {\n    int: 0 /* BindingPropertyType.Int */,\n    bool: 1 /* BindingPropertyType.Bool */,\n    string: 2 /* BindingPropertyType.String */,\n    data: 3 /* BindingPropertyType.Data */,\n    date: 4 /* BindingPropertyType.Date */,\n    float: 5 /* BindingPropertyType.Float */,\n    double: 6 /* BindingPropertyType.Double */,\n    mixed: 9 /* BindingPropertyType.Mixed */,\n    objectId: 10 /* BindingPropertyType.ObjectId */,\n    decimal128: 11 /* BindingPropertyType.Decimal */,\n    uuid: 12 /* BindingPropertyType.Uuid */,\n    list: 128 /* BindingPropertyType.Array */,\n    set: 256 /* BindingPropertyType.Set */,\n    dictionary: 512 /* BindingPropertyType.Dictionary */,\n    linkingObjects: 8 /* BindingPropertyType.LinkingObjects */,\n    object: 7 /* BindingPropertyType.Object */\n  };\n  function deriveTableType(schema) {\n    if (schema.embedded) {\n      _$$_REQUIRE(_dependencyMap[1], \"../assert\").assert.boolean(schema.asymmetric, `'${schema.name}' cannot be both embedded and asymmetric`);\n      return 1 /* TableType.Embedded */;\n    } else if (schema.asymmetric) {\n      return 2 /* TableType.TopLevelAsymmetric */;\n    } else {\n      return 0 /* TableType.TopLevel */;\n    }\n  }\n  /** @internal */\n  function toBindingSchema(schema) {\n    return schema.map(toBindingObjectSchema);\n  }\n  exports.toBindingSchema = toBindingSchema;\n  /** @internal */\n  function toBindingObjectSchema(schema) {\n    // TODO: Enable declaring the alias of the object schema\n    // TODO: Enable declaring computed properties\n    var properties = Object.entries(schema.properties).map(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        name = _ref2[0],\n        property = _ref2[1];\n      return toBindingPropertySchema(name, property);\n    }).map(function (property) {\n      // Ensure the primary property is marked accordingly\n      if (property.name === schema.primaryKey) {\n        property.isPrimary = true;\n      }\n      return property;\n    });\n    var result = {\n      name: schema.name,\n      tableType: deriveTableType(schema),\n      persistedProperties: properties.filter(function (p) {\n        return (p.type & ~960 /* BindingPropertyType.Flags */) !== 8;\n      } /* BindingPropertyType.LinkingObjects */),\n      computedProperties: properties.filter(function (p) {\n        return (p.type & ~960 /* BindingPropertyType.Flags */) === 8;\n      } /* BindingPropertyType.LinkingObjects */)\n    };\n    // The object schema itself must also know the name of the primary key\n    if (schema.primaryKey) {\n      result.primaryKey = schema.primaryKey;\n    }\n    return result;\n  }\n  exports.toBindingObjectSchema = toBindingObjectSchema;\n  /** @internal */\n  function toBindingPropertySchema(name, schema) {\n    if (name !== schema.name) {\n      // TODO: Consider if this API should be used to support declaring an alias?\n      throw new Error(\"The key of a property must match its name property\");\n    }\n    var result = {\n      name: name,\n      type: toBindingPropertyType(schema),\n      objectType: schema.objectType && schema.objectType in exports.TYPE_MAPPINGS ? undefined : schema.objectType,\n      linkOriginPropertyName: schema.property\n    };\n    if (schema.indexed === \"full-text\") {\n      result.isFulltextIndexed = true;\n    } else {\n      result.isIndexed = schema.indexed;\n    }\n    if (schema.mapTo && schema.mapTo !== schema.name) {\n      result.publicName = result.name;\n      result.name = schema.mapTo;\n    }\n    return result;\n  }\n  exports.toBindingPropertySchema = toBindingPropertySchema;\n  /** @internal */\n  function toBindingPropertyType(schema) {\n    var type = exports.TYPE_MAPPINGS[schema.type];\n    var isNullable = schema.optional;\n    if (type === 8 /* BindingPropertyType.LinkingObjects */) {\n      return type | 128 /* BindingPropertyType.Array */;\n    } else if (schema.objectType) {\n      if (schema.objectType in exports.TYPE_MAPPINGS) {\n        type |= exports.TYPE_MAPPINGS[schema.objectType];\n        if (schema.objectType === \"mixed\") {\n          // Implicitly nullable - will throw if not sat\n          isNullable = true;\n        }\n      } else {\n        type |= 7 /* BindingPropertyType.Object */;\n        // Implicitly nullable - will throw if sat\n        if (!(type & 512 /* BindingPropertyType.Dictionary */)) {\n          isNullable = false;\n        }\n      }\n    }\n    if (schema.type === \"object\" || schema.type === \"mixed\") {\n      // Implicitly nullable - will throw if not sat\n      isNullable = true;\n    }\n    if (isNullable) {\n      type |= 64 /* BindingPropertyType.Nullable */;\n    }\n    return type;\n  }\n  exports.toBindingPropertyType = toBindingPropertyType;\n});","lineCount":148,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[5,2,3,0],[6,2,4,0],[7,2,5,0],[8,2,6,0],[9,2,7,0],[10,2,8,0],[11,2,9,0],[12,2,10,0],[13,2,11,0],[14,2,12,0],[15,2,13,0],[16,2,14,0],[17,2,15,0],[18,2,16,0],[19,2,17,0],[20,2,18,0],[21,2,18,0],[21,6,18,0,"_slicedToArray"],[21,20,18,0],[21,23,18,0,"_$$_REQUIRE"],[21,34,18,0],[21,35,18,0,"_dependencyMap"],[21,49,18,0],[22,2,19,0,"Object"],[22,8,19,6],[22,9,19,7,"defineProperty"],[22,23,19,21],[22,24,19,22,"exports"],[22,31,19,29],[22,33,19,31],[22,45,19,43],[22,47,19,45],[23,4,19,47,"value"],[23,9,19,52],[23,11,19,54],[24,2,19,59],[24,3,19,60],[24,4,19,61],[25,2,20,0,"exports"],[25,9,20,7],[25,10,20,8,"toBindingPropertyType"],[25,31,20,29],[25,34,20,32,"exports"],[25,41,20,39],[25,42,20,40,"toBindingPropertySchema"],[25,65,20,63],[25,68,20,66,"exports"],[25,75,20,73],[25,76,20,74,"toBindingObjectSchema"],[25,97,20,95],[25,100,20,98,"exports"],[25,107,20,105],[25,108,20,106,"toBindingSchema"],[25,123,20,121],[25,126,20,124,"exports"],[25,133,20,131],[25,134,20,132,"TYPE_MAPPINGS"],[25,147,20,145],[25,150,20,148],[25,155,20,153],[25,156,20,154],[26,2,22,0],[27,2,23,0,"exports"],[27,9,23,7],[27,10,23,8,"TYPE_MAPPINGS"],[27,23,23,21],[27,26,23,24],[28,4,24,4,"int"],[28,7,24,7],[28,9,24,9],[28,10,24,10],[28,11,24,11],[29,4,25,4,"bool"],[29,8,25,8],[29,10,25,10],[29,11,25,11],[29,12,25,12],[30,4,26,4,"string"],[30,10,26,10],[30,12,26,12],[30,13,26,13],[30,14,26,14],[31,4,27,4,"data"],[31,8,27,8],[31,10,27,10],[31,11,27,11],[31,12,27,12],[32,4,28,4,"date"],[32,8,28,8],[32,10,28,10],[32,11,28,11],[32,12,28,12],[33,4,29,4,"float"],[33,9,29,9],[33,11,29,11],[33,12,29,12],[33,13,29,13],[34,4,30,4,"double"],[34,10,30,10],[34,12,30,12],[34,13,30,13],[34,14,30,14],[35,4,31,4,"mixed"],[35,9,31,9],[35,11,31,11],[35,12,31,12],[35,13,31,13],[36,4,32,4,"objectId"],[36,12,32,12],[36,14,32,14],[36,16,32,16],[36,17,32,17],[37,4,33,4,"decimal128"],[37,14,33,14],[37,16,33,16],[37,18,33,18],[37,19,33,19],[38,4,34,4,"uuid"],[38,8,34,8],[38,10,34,10],[38,12,34,12],[38,13,34,13],[39,4,35,4,"list"],[39,8,35,8],[39,10,35,10],[39,13,35,13],[39,14,35,14],[40,4,36,4,"set"],[40,7,36,7],[40,9,36,9],[40,12,36,12],[40,13,36,13],[41,4,37,4,"dictionary"],[41,14,37,14],[41,16,37,16],[41,19,37,19],[41,20,37,20],[42,4,38,4,"linkingObjects"],[42,18,38,18],[42,20,38,20],[42,21,38,21],[42,22,38,22],[43,4,39,4,"object"],[43,10,39,10],[43,12,39,12],[43,13,39,13],[43,14,39,14],[44,2,40,0],[44,3,40,1],[45,2,41,0],[45,11,41,9,"deriveTableType"],[45,26,41,24,"deriveTableType"],[45,27,41,25,"schema"],[45,33,41,31],[45,35,41,33],[46,4,42,4],[46,8,42,8,"schema"],[46,14,42,14],[46,15,42,15,"embedded"],[46,23,42,23],[46,25,42,25],[47,6,43,8,"_$$_REQUIRE"],[47,17,43,8],[47,18,43,8,"_dependencyMap"],[47,32,43,8],[47,50,43,17,"assert"],[47,56,43,23],[47,57,43,24,"boolean"],[47,64,43,31],[47,65,43,32,"schema"],[47,71,43,38],[47,72,43,39,"asymmetric"],[47,82,43,49],[47,84,43,51],[47,88,43,55,"schema"],[47,94,43,61],[47,95,43,62,"name"],[47,99,43,66],[47,141,43,108],[47,142,43,109],[48,6,44,8],[48,13,44,15],[48,14,44,16],[48,15,44,17],[49,4,45,4],[49,5,45,5],[49,11,46,9],[49,15,46,13,"schema"],[49,21,46,19],[49,22,46,20,"asymmetric"],[49,32,46,30],[49,34,46,32],[50,6,47,8],[50,13,47,15],[50,14,47,16],[50,15,47,17],[51,4,48,4],[51,5,48,5],[51,11,49,9],[52,6,50,8],[52,13,50,15],[52,14,50,16],[52,15,50,17],[53,4,51,4],[54,2,52,0],[55,2,53,0],[56,2,54,0],[56,11,54,9,"toBindingSchema"],[56,26,54,24,"toBindingSchema"],[56,27,54,25,"schema"],[56,33,54,31],[56,35,54,33],[57,4,55,4],[57,11,55,11,"schema"],[57,17,55,17],[57,18,55,18,"map"],[57,21,55,21],[57,22,55,22,"toBindingObjectSchema"],[57,43,55,43],[57,44,55,44],[58,2,56,0],[59,2,57,0,"exports"],[59,9,57,7],[59,10,57,8,"toBindingSchema"],[59,25,57,23],[59,28,57,26,"toBindingSchema"],[59,43,57,41],[60,2,58,0],[61,2,59,0],[61,11,59,9,"toBindingObjectSchema"],[61,32,59,30,"toBindingObjectSchema"],[61,33,59,31,"schema"],[61,39,59,37],[61,41,59,39],[62,4,60,4],[63,4,61,4],[64,4,62,4],[64,8,62,10,"properties"],[64,18,62,20],[64,21,62,23,"Object"],[64,27,62,29],[64,28,62,30,"entries"],[64,35,62,37],[64,36,62,38,"schema"],[64,42,62,44],[64,43,62,45,"properties"],[64,53,62,55],[64,54,62,56],[64,55,63,9,"map"],[64,58,63,12],[64,59,63,13],[64,69,63,13,"_ref"],[64,73,63,13],[65,6,63,13],[65,10,63,13,"_ref2"],[65,15,63,13],[65,18,63,13,"_slicedToArray"],[65,32,63,13],[65,33,63,13,"_ref"],[65,37,63,13],[66,8,63,15,"name"],[66,12,63,19],[66,15,63,19,"_ref2"],[66,20,63,19],[67,8,63,21,"property"],[67,16,63,29],[67,19,63,29,"_ref2"],[67,24,63,29],[68,6,63,29],[68,13,63,35,"toBindingPropertySchema"],[68,36,63,58],[68,37,63,59,"name"],[68,41,63,63],[68,43,63,65,"property"],[68,51,63,73],[68,52,63,74],[69,4,63,74],[69,6,63,75],[69,7,64,9,"map"],[69,10,64,12],[69,11,64,13],[69,21,64,14,"property"],[69,29,64,22],[69,31,64,27],[70,6,65,8],[71,6,66,8],[71,10,66,12,"property"],[71,18,66,20],[71,19,66,21,"name"],[71,23,66,25],[71,28,66,30,"schema"],[71,34,66,36],[71,35,66,37,"primaryKey"],[71,45,66,47],[71,47,66,49],[72,8,67,12,"property"],[72,16,67,20],[72,17,67,21,"isPrimary"],[72,26,67,30],[72,29,67,33],[72,33,67,37],[73,6,68,8],[74,6,69,8],[74,13,69,15,"property"],[74,21,69,23],[75,4,70,4],[75,5,70,5],[75,6,70,6],[76,4,71,4],[76,8,71,10,"result"],[76,14,71,16],[76,17,71,19],[77,6,72,8,"name"],[77,10,72,12],[77,12,72,14,"schema"],[77,18,72,20],[77,19,72,21,"name"],[77,23,72,25],[78,6,73,8,"tableType"],[78,15,73,17],[78,17,73,19,"deriveTableType"],[78,32,73,34],[78,33,73,35,"schema"],[78,39,73,41],[78,40,73,42],[79,6,74,8,"persistedProperties"],[79,25,74,27],[79,27,74,29,"properties"],[79,37,74,39],[79,38,74,40,"filter"],[79,44,74,46],[79,45,74,47],[79,55,74,48,"p"],[79,56,74,49],[80,8,74,49],[80,15,74,54],[80,16,74,55,"p"],[80,17,74,56],[80,18,74,57,"type"],[80,22,74,61],[80,25,74,64],[80,26,74,65],[80,29,74,68],[80,30,74,69],[80,67,74,106],[80,68,74,107],[81,6,74,107],[81,8,74,108],[81,48,74,148],[81,49,74,149],[82,6,75,8,"computedProperties"],[82,24,75,26],[82,26,75,28,"properties"],[82,36,75,38],[82,37,75,39,"filter"],[82,43,75,45],[82,44,75,46],[82,54,75,47,"p"],[82,55,75,48],[83,8,75,48],[83,15,75,53],[83,16,75,54,"p"],[83,17,75,55],[83,18,75,56,"type"],[83,22,75,60],[83,25,75,63],[83,26,75,64],[83,29,75,67],[83,30,75,68],[83,67,75,105],[83,68,75,106],[84,6,75,106],[84,8,75,107],[84,48,75,147],[85,4,76,4],[85,5,76,5],[86,4,77,4],[87,4,78,4],[87,8,78,8,"schema"],[87,14,78,14],[87,15,78,15,"primaryKey"],[87,25,78,25],[87,27,78,27],[88,6,79,8,"result"],[88,12,79,14],[88,13,79,15,"primaryKey"],[88,23,79,25],[88,26,79,28,"schema"],[88,32,79,34],[88,33,79,35,"primaryKey"],[88,43,79,45],[89,4,80,4],[90,4,81,4],[90,11,81,11,"result"],[90,17,81,17],[91,2,82,0],[92,2,83,0,"exports"],[92,9,83,7],[92,10,83,8,"toBindingObjectSchema"],[92,31,83,29],[92,34,83,32,"toBindingObjectSchema"],[92,55,83,53],[93,2,84,0],[94,2,85,0],[94,11,85,9,"toBindingPropertySchema"],[94,34,85,32,"toBindingPropertySchema"],[94,35,85,33,"name"],[94,39,85,37],[94,41,85,39,"schema"],[94,47,85,45],[94,49,85,47],[95,4,86,4],[95,8,86,8,"name"],[95,12,86,12],[95,17,86,17,"schema"],[95,23,86,23],[95,24,86,24,"name"],[95,28,86,28],[95,30,86,30],[96,6,87,8],[97,6,88,8],[97,12,88,14],[97,16,88,18,"Error"],[97,21,88,23],[97,22,88,24],[97,74,88,76],[97,75,88,77],[98,4,89,4],[99,4,90,4],[99,8,90,10,"result"],[99,14,90,16],[99,17,90,19],[100,6,91,8,"name"],[100,10,91,12],[100,12,91,8,"name"],[100,16,91,12],[101,6,92,8,"type"],[101,10,92,12],[101,12,92,14,"toBindingPropertyType"],[101,33,92,35],[101,34,92,36,"schema"],[101,40,92,42],[101,41,92,43],[102,6,93,8,"objectType"],[102,16,93,18],[102,18,93,20,"schema"],[102,24,93,26],[102,25,93,27,"objectType"],[102,35,93,37],[102,39,93,41,"schema"],[102,45,93,47],[102,46,93,48,"objectType"],[102,56,93,58],[102,60,93,62,"exports"],[102,67,93,69],[102,68,93,70,"TYPE_MAPPINGS"],[102,81,93,83],[102,84,93,86,"undefined"],[102,93,93,95],[102,96,93,98,"schema"],[102,102,93,104],[102,103,93,105,"objectType"],[102,113,93,115],[103,6,94,8,"linkOriginPropertyName"],[103,28,94,30],[103,30,94,32,"schema"],[103,36,94,38],[103,37,94,39,"property"],[104,4,95,4],[104,5,95,5],[105,4,96,4],[105,8,96,8,"schema"],[105,14,96,14],[105,15,96,15,"indexed"],[105,22,96,22],[105,27,96,27],[105,38,96,38],[105,40,96,40],[106,6,97,8,"result"],[106,12,97,14],[106,13,97,15,"isFulltextIndexed"],[106,30,97,32],[106,33,97,35],[106,37,97,39],[107,4,98,4],[107,5,98,5],[107,11,99,9],[108,6,100,8,"result"],[108,12,100,14],[108,13,100,15,"isIndexed"],[108,22,100,24],[108,25,100,27,"schema"],[108,31,100,33],[108,32,100,34,"indexed"],[108,39,100,41],[109,4,101,4],[110,4,102,4],[110,8,102,8,"schema"],[110,14,102,14],[110,15,102,15,"mapTo"],[110,20,102,20],[110,24,102,24,"schema"],[110,30,102,30],[110,31,102,31,"mapTo"],[110,36,102,36],[110,41,102,41,"schema"],[110,47,102,47],[110,48,102,48,"name"],[110,52,102,52],[110,54,102,54],[111,6,103,8,"result"],[111,12,103,14],[111,13,103,15,"publicName"],[111,23,103,25],[111,26,103,28,"result"],[111,32,103,34],[111,33,103,35,"name"],[111,37,103,39],[112,6,104,8,"result"],[112,12,104,14],[112,13,104,15,"name"],[112,17,104,19],[112,20,104,22,"schema"],[112,26,104,28],[112,27,104,29,"mapTo"],[112,32,104,34],[113,4,105,4],[114,4,106,4],[114,11,106,11,"result"],[114,17,106,17],[115,2,107,0],[116,2,108,0,"exports"],[116,9,108,7],[116,10,108,8,"toBindingPropertySchema"],[116,33,108,31],[116,36,108,34,"toBindingPropertySchema"],[116,59,108,57],[117,2,109,0],[118,2,110,0],[118,11,110,9,"toBindingPropertyType"],[118,32,110,30,"toBindingPropertyType"],[118,33,110,31,"schema"],[118,39,110,37],[118,41,110,39],[119,4,111,4],[119,8,111,8,"type"],[119,12,111,12],[119,15,111,15,"exports"],[119,22,111,22],[119,23,111,23,"TYPE_MAPPINGS"],[119,36,111,36],[119,37,111,37,"schema"],[119,43,111,43],[119,44,111,44,"type"],[119,48,111,48],[119,49,111,49],[120,4,112,4],[120,8,112,8,"isNullable"],[120,18,112,18],[120,21,112,21,"schema"],[120,27,112,27],[120,28,112,28,"optional"],[120,36,112,36],[121,4,113,4],[121,8,113,8,"type"],[121,12,113,12],[121,17,113,17],[121,18,113,18],[121,19,113,19],[121,61,113,61],[122,6,114,8],[122,13,114,15,"type"],[122,17,114,19],[122,20,114,22],[122,23,114,25],[122,24,114,26],[123,4,115,4],[123,5,115,5],[123,11,116,9],[123,15,116,13,"schema"],[123,21,116,19],[123,22,116,20,"objectType"],[123,32,116,30],[123,34,116,32],[124,6,117,8],[124,10,117,12,"schema"],[124,16,117,18],[124,17,117,19,"objectType"],[124,27,117,29],[124,31,117,33,"exports"],[124,38,117,40],[124,39,117,41,"TYPE_MAPPINGS"],[124,52,117,54],[124,54,117,56],[125,8,118,12,"type"],[125,12,118,16],[125,16,118,20,"exports"],[125,23,118,27],[125,24,118,28,"TYPE_MAPPINGS"],[125,37,118,41],[125,38,118,42,"schema"],[125,44,118,48],[125,45,118,49,"objectType"],[125,55,118,59],[125,56,118,60],[126,8,119,12],[126,12,119,16,"schema"],[126,18,119,22],[126,19,119,23,"objectType"],[126,29,119,33],[126,34,119,38],[126,41,119,45],[126,43,119,47],[127,10,120,16],[128,10,121,16,"isNullable"],[128,20,121,26],[128,23,121,29],[128,27,121,33],[129,8,122,12],[130,6,123,8],[130,7,123,9],[130,13,124,13],[131,8,125,12,"type"],[131,12,125,16],[131,16,125,20],[131,17,125,21],[131,18,125,22],[132,8,126,12],[133,8,127,12],[133,12,127,16],[133,14,127,18,"type"],[133,18,127,22],[133,21,127,25],[133,24,127,28],[133,25,127,29],[133,62,127,66],[133,64,127,68],[134,10,128,16,"isNullable"],[134,20,128,26],[134,23,128,29],[134,28,128,34],[135,8,129,12],[136,6,130,8],[137,4,131,4],[138,4,132,4],[138,8,132,8,"schema"],[138,14,132,14],[138,15,132,15,"type"],[138,19,132,19],[138,24,132,24],[138,32,132,32],[138,36,132,36,"schema"],[138,42,132,42],[138,43,132,43,"type"],[138,47,132,47],[138,52,132,52],[138,59,132,59],[138,61,132,61],[139,6,133,8],[140,6,134,8,"isNullable"],[140,16,134,18],[140,19,134,21],[140,23,134,25],[141,4,135,4],[142,4,136,4],[142,8,136,8,"isNullable"],[142,18,136,18],[142,20,136,20],[143,6,137,8,"type"],[143,10,137,12],[143,14,137,16],[143,16,137,18],[143,17,137,19],[144,4,138,4],[145,4,139,4],[145,11,139,11,"type"],[145,15,139,15],[146,2,140,0],[147,2,141,0,"exports"],[147,9,141,7],[147,10,141,8,"toBindingPropertyType"],[147,31,141,29],[147,34,141,32,"toBindingPropertyType"],[147,55,141,53],[148,0,141,54],[148,3]],"functionMap":{"names":["<global>","deriveTableType","toBindingSchema","toBindingObjectSchema","Object.entries.map$argument_0","Object.entries.map.map$argument_0","properties.filter$argument_0","toBindingPropertySchema","toBindingPropertyType"],"mappings":"AAA;ACwC;CDW;AEE;CFE;AGG;aCI,6DD;aEC;KFM;+CGI,4DH;8CGC,4DH;CHO;AOG;CPsB;AQG;CR8B"}},"type":"js/module"}]}