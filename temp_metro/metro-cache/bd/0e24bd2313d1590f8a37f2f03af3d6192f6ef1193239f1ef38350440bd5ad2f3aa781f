{"dependencies":[{"name":"bitcoin-ops","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":14,"index":386},"end":{"line":10,"column":36,"index":408}}],"key":"P0/EXzx4NXVncLyei+jnV70k6pk="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}},{"start":{"line":5,"column":14,"index":195},"end":{"line":5,"column":32,"index":213}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":18,"index":350},"end":{"line":9,"column":38,"index":370}},{"start":{"line":9,"column":18,"index":350},"end":{"line":9,"column":38,"index":370}},{"start":{"line":9,"column":18,"index":350},"end":{"line":9,"column":38,"index":370}},{"start":{"line":9,"column":18,"index":350},"end":{"line":9,"column":38,"index":370}},{"start":{"line":9,"column":18,"index":350},"end":{"line":9,"column":38,"index":370}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"pushdata-bitcoin","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":17,"index":303},"end":{"line":8,"column":44,"index":330}},{"start":{"line":8,"column":17,"index":303},"end":{"line":8,"column":44,"index":330}},{"start":{"line":8,"column":17,"index":303},"end":{"line":8,"column":44,"index":330}}],"key":"Q08Q0FmH7Gs9uPoo7C/tz3D6EYg="}},{"name":"bitcoin-ops/map","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":20,"index":430},"end":{"line":11,"column":46,"index":456}}],"key":"jrNFL6QfJn1XkpeOxN7fDI6267M="}},{"name":"./script_number","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":47,"index":124}},{"start":{"line":3,"column":21,"index":98},"end":{"line":3,"column":47,"index":124}}],"key":"vuCwI09uCMwAx2djLp8NjgjAf0k="}},{"name":"tiny-secp256k1","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":12,"index":259},"end":{"line":7,"column":37,"index":284}}],"key":"Whff8FUlwSwW4lSXzbcdkAvwS34="}},{"name":"bip66","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":229},"end":{"line":6,"column":30,"index":245}}],"key":"iXnkYwy9NTH4iitbdfo2FkyI2Ug="}},{"name":"./script_signature","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":24,"index":150},"end":{"line":4,"column":53,"index":179}}],"key":"le4zWZSefZPlPOlNjfYQJg9xdEk="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.OPS = _$$_REQUIRE(_dependencyMap[0], \"bitcoin-ops\");\n  var OP_INT_BASE = exports.OPS.OP_RESERVED; // OP_1 - 1\n  function isOPInt(value) {\n    return _$$_REQUIRE(_dependencyMap[1], \"./types\").Number(value) && (value === exports.OPS.OP_0 || value >= exports.OPS.OP_1 && value <= exports.OPS.OP_16 || value === exports.OPS.OP_1NEGATE);\n  }\n  function isPushOnlyChunk(value) {\n    return _$$_REQUIRE(_dependencyMap[1], \"./types\").Buffer(value) || isOPInt(value);\n  }\n  function isPushOnly(value) {\n    return _$$_REQUIRE(_dependencyMap[1], \"./types\").Array(value) && value.every(isPushOnlyChunk);\n  }\n  exports.isPushOnly = isPushOnly;\n  function asMinimalOP(buffer) {\n    if (buffer.length === 0) return exports.OPS.OP_0;\n    if (buffer.length !== 1) return;\n    if (buffer[0] >= 1 && buffer[0] <= 16) return OP_INT_BASE + buffer[0];\n    if (buffer[0] === 0x81) return exports.OPS.OP_1NEGATE;\n  }\n  function chunksIsBuffer(buf) {\n    return Buffer.isBuffer(buf);\n  }\n  function chunksIsArray(buf) {\n    return _$$_REQUIRE(_dependencyMap[1], \"./types\").Array(buf);\n  }\n  function singleChunkIsBuffer(buf) {\n    return Buffer.isBuffer(buf);\n  }\n  function compile(chunks) {\n    // TODO: remove me\n    if (chunksIsBuffer(chunks)) return chunks;\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[1], \"./types\").Array, chunks);\n    var bufferSize = chunks.reduce(function (accum, chunk) {\n      // data chunk\n      if (singleChunkIsBuffer(chunk)) {\n        // adhere to BIP62.3, minimal push policy\n        if (chunk.length === 1 && asMinimalOP(chunk) !== undefined) {\n          return accum + 1;\n        }\n        return accum + _$$_REQUIRE(_dependencyMap[3], \"pushdata-bitcoin\").encodingLength(chunk.length) + chunk.length;\n      }\n      // opcode\n      return accum + 1;\n    }, 0.0);\n    var buffer = Buffer.allocUnsafe(bufferSize);\n    var offset = 0;\n    chunks.forEach(function (chunk) {\n      // data chunk\n      if (singleChunkIsBuffer(chunk)) {\n        // adhere to BIP62.3, minimal push policy\n        var opcode = asMinimalOP(chunk);\n        if (opcode !== undefined) {\n          buffer.writeUInt8(opcode, offset);\n          offset += 1;\n          return;\n        }\n        offset += _$$_REQUIRE(_dependencyMap[3], \"pushdata-bitcoin\").encode(buffer, chunk.length, offset);\n        chunk.copy(buffer, offset);\n        offset += chunk.length;\n        // opcode\n      } else {\n        buffer.writeUInt8(chunk, offset);\n        offset += 1;\n      }\n    });\n    if (offset !== buffer.length) throw new Error('Could not decode chunks');\n    return buffer;\n  }\n  exports.compile = compile;\n  function decompile(buffer) {\n    // TODO: remove me\n    if (chunksIsArray(buffer)) return buffer;\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[1], \"./types\").Buffer, buffer);\n    var chunks = [];\n    var i = 0;\n    while (i < buffer.length) {\n      var opcode = buffer[i];\n      // data chunk\n      if (opcode > exports.OPS.OP_0 && opcode <= exports.OPS.OP_PUSHDATA4) {\n        var d = _$$_REQUIRE(_dependencyMap[3], \"pushdata-bitcoin\").decode(buffer, i);\n        // did reading a pushDataInt fail?\n        if (d === null) return null;\n        i += d.size;\n        // attempt to read too much data?\n        if (i + d.number > buffer.length) return null;\n        var data = buffer.slice(i, i + d.number);\n        i += d.number;\n        // decompile minimally\n        var op = asMinimalOP(data);\n        if (op !== undefined) {\n          chunks.push(op);\n        } else {\n          chunks.push(data);\n        }\n        // opcode\n      } else {\n        chunks.push(opcode);\n        i += 1;\n      }\n    }\n    return chunks;\n  }\n  exports.decompile = decompile;\n  function toASM(chunks) {\n    if (chunksIsBuffer(chunks)) {\n      chunks = decompile(chunks);\n    }\n    return chunks.map(function (chunk) {\n      // data?\n      if (singleChunkIsBuffer(chunk)) {\n        var op = asMinimalOP(chunk);\n        if (op === undefined) return chunk.toString('hex');\n        chunk = op;\n      }\n      // opcode!\n      return _$$_REQUIRE(_dependencyMap[4], \"bitcoin-ops/map\")[chunk];\n    }).join(' ');\n  }\n  exports.toASM = toASM;\n  function fromASM(asm) {\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[1], \"./types\").String, asm);\n    return compile(asm.split(' ').map(function (chunkStr) {\n      // opcode?\n      if (exports.OPS[chunkStr] !== undefined) return exports.OPS[chunkStr];\n      _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[1], \"./types\").Hex, chunkStr);\n      // data!\n      return Buffer.from(chunkStr, 'hex');\n    }));\n  }\n  exports.fromASM = fromASM;\n  function toStack(chunks) {\n    chunks = decompile(chunks);\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(isPushOnly, chunks);\n    return chunks.map(function (op) {\n      if (singleChunkIsBuffer(op)) return op;\n      if (op === exports.OPS.OP_0) return Buffer.allocUnsafe(0);\n      return _$$_REQUIRE(_dependencyMap[5], \"./script_number\").encode(op - OP_INT_BASE);\n    });\n  }\n  exports.toStack = toStack;\n  function isCanonicalPubKey(buffer) {\n    return _$$_REQUIRE(_dependencyMap[6], \"tiny-secp256k1\").isPoint(buffer);\n  }\n  exports.isCanonicalPubKey = isCanonicalPubKey;\n  function isDefinedHashType(hashType) {\n    var hashTypeMod = hashType & ~0x80;\n    // return hashTypeMod > SIGHASH_ALL && hashTypeMod < SIGHASH_SINGLE\n    return hashTypeMod > 0x00 && hashTypeMod < 0x04;\n  }\n  exports.isDefinedHashType = isDefinedHashType;\n  function isCanonicalScriptSignature(buffer) {\n    if (!Buffer.isBuffer(buffer)) return false;\n    if (!isDefinedHashType(buffer[buffer.length - 1])) return false;\n    return _$$_REQUIRE(_dependencyMap[7], \"bip66\").check(buffer.slice(0, -1));\n  }\n  exports.isCanonicalScriptSignature = isCanonicalScriptSignature;\n  // tslint:disable-next-line variable-name\n  exports.number = _$$_REQUIRE(_dependencyMap[5], \"./script_number\");\n  exports.signature = _$$_REQUIRE(_dependencyMap[8], \"./script_signature\");\n});","lineCount":165,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,10,0,"exports"],[7,9,10,7],[7,10,10,8,"OPS"],[7,13,10,11],[7,16,10,14,"require"],[7,27,10,21],[7,28,10,21,"_dependencyMap"],[7,42,10,21],[7,60,10,35],[7,61,10,36],[8,2,12,0],[8,6,12,6,"OP_INT_BASE"],[8,17,12,17],[8,20,12,20,"exports"],[8,27,12,27],[8,28,12,28,"OPS"],[8,31,12,31],[8,32,12,32,"OP_RESERVED"],[8,43,12,43],[8,44,12,44],[8,45,12,45],[9,2,13,0],[9,11,13,9,"isOPInt"],[9,18,13,16,"isOPInt"],[9,19,13,17,"value"],[9,24,13,22],[9,26,13,24],[10,4,14,2],[10,11,15,4,"_$$_REQUIRE"],[10,22,15,4],[10,23,15,4,"_dependencyMap"],[10,37,15,4],[10,53,15,10,"Number"],[10,59,15,16],[10,60,15,17,"value"],[10,65,15,22],[10,66,15,23],[10,71,16,5,"value"],[10,76,16,10],[10,81,16,15,"exports"],[10,88,16,22],[10,89,16,23,"OPS"],[10,92,16,26],[10,93,16,27,"OP_0"],[10,97,16,31],[10,101,17,7,"value"],[10,106,17,12],[10,110,17,16,"exports"],[10,117,17,23],[10,118,17,24,"OPS"],[10,121,17,27],[10,122,17,28,"OP_1"],[10,126,17,32],[10,130,17,36,"value"],[10,135,17,41],[10,139,17,45,"exports"],[10,146,17,52],[10,147,17,53,"OPS"],[10,150,17,56],[10,151,17,57,"OP_16"],[10,156,17,63],[10,160,18,6,"value"],[10,165,18,11],[10,170,18,16,"exports"],[10,177,18,23],[10,178,18,24,"OPS"],[10,181,18,27],[10,182,18,28,"OP_1NEGATE"],[10,192,18,38],[10,193,18,39],[11,2,20,0],[12,2,21,0],[12,11,21,9,"isPushOnlyChunk"],[12,26,21,24,"isPushOnlyChunk"],[12,27,21,25,"value"],[12,32,21,30],[12,34,21,32],[13,4,22,2],[13,11,22,9,"_$$_REQUIRE"],[13,22,22,9],[13,23,22,9,"_dependencyMap"],[13,37,22,9],[13,53,22,15,"Buffer"],[13,59,22,21],[13,60,22,22,"value"],[13,65,22,27],[13,66,22,28],[13,70,22,32,"isOPInt"],[13,77,22,39],[13,78,22,40,"value"],[13,83,22,45],[13,84,22,46],[14,2,23,0],[15,2,24,0],[15,11,24,9,"isPushOnly"],[15,21,24,19,"isPushOnly"],[15,22,24,20,"value"],[15,27,24,25],[15,29,24,27],[16,4,25,2],[16,11,25,9,"_$$_REQUIRE"],[16,22,25,9],[16,23,25,9,"_dependencyMap"],[16,37,25,9],[16,53,25,15,"Array"],[16,58,25,20],[16,59,25,21,"value"],[16,64,25,26],[16,65,25,27],[16,69,25,31,"value"],[16,74,25,36],[16,75,25,37,"every"],[16,80,25,42],[16,81,25,43,"isPushOnlyChunk"],[16,96,25,58],[16,97,25,59],[17,2,26,0],[18,2,27,0,"exports"],[18,9,27,7],[18,10,27,8,"isPushOnly"],[18,20,27,18],[18,23,27,21,"isPushOnly"],[18,33,27,31],[19,2,28,0],[19,11,28,9,"asMinimalOP"],[19,22,28,20,"asMinimalOP"],[19,23,28,21,"buffer"],[19,29,28,27],[19,31,28,29],[20,4,29,2],[20,8,29,6,"buffer"],[20,14,29,12],[20,15,29,13,"length"],[20,21,29,19],[20,26,29,24],[20,27,29,25],[20,29,29,27],[20,36,29,34,"exports"],[20,43,29,41],[20,44,29,42,"OPS"],[20,47,29,45],[20,48,29,46,"OP_0"],[20,52,29,50],[21,4,30,2],[21,8,30,6,"buffer"],[21,14,30,12],[21,15,30,13,"length"],[21,21,30,19],[21,26,30,24],[21,27,30,25],[21,29,30,27],[22,4,31,2],[22,8,31,6,"buffer"],[22,14,31,12],[22,15,31,13],[22,16,31,14],[22,17,31,15],[22,21,31,19],[22,22,31,20],[22,26,31,24,"buffer"],[22,32,31,30],[22,33,31,31],[22,34,31,32],[22,35,31,33],[22,39,31,37],[22,41,31,39],[22,43,31,41],[22,50,31,48,"OP_INT_BASE"],[22,61,31,59],[22,64,31,62,"buffer"],[22,70,31,68],[22,71,31,69],[22,72,31,70],[22,73,31,71],[23,4,32,2],[23,8,32,6,"buffer"],[23,14,32,12],[23,15,32,13],[23,16,32,14],[23,17,32,15],[23,22,32,20],[23,26,32,24],[23,28,32,26],[23,35,32,33,"exports"],[23,42,32,40],[23,43,32,41,"OPS"],[23,46,32,44],[23,47,32,45,"OP_1NEGATE"],[23,57,32,55],[24,2,33,0],[25,2,34,0],[25,11,34,9,"chunksIsBuffer"],[25,25,34,23,"chunksIsBuffer"],[25,26,34,24,"buf"],[25,29,34,27],[25,31,34,29],[26,4,35,2],[26,11,35,9,"Buffer"],[26,17,35,15],[26,18,35,16,"isBuffer"],[26,26,35,24],[26,27,35,25,"buf"],[26,30,35,28],[26,31,35,29],[27,2,36,0],[28,2,37,0],[28,11,37,9,"chunksIsArray"],[28,24,37,22,"chunksIsArray"],[28,25,37,23,"buf"],[28,28,37,26],[28,30,37,28],[29,4,38,2],[29,11,38,9,"_$$_REQUIRE"],[29,22,38,9],[29,23,38,9,"_dependencyMap"],[29,37,38,9],[29,53,38,15,"Array"],[29,58,38,20],[29,59,38,21,"buf"],[29,62,38,24],[29,63,38,25],[30,2,39,0],[31,2,40,0],[31,11,40,9,"singleChunkIsBuffer"],[31,30,40,28,"singleChunkIsBuffer"],[31,31,40,29,"buf"],[31,34,40,32],[31,36,40,34],[32,4,41,2],[32,11,41,9,"Buffer"],[32,17,41,15],[32,18,41,16,"isBuffer"],[32,26,41,24],[32,27,41,25,"buf"],[32,30,41,28],[32,31,41,29],[33,2,42,0],[34,2,43,0],[34,11,43,9,"compile"],[34,18,43,16,"compile"],[34,19,43,17,"chunks"],[34,25,43,23],[34,27,43,25],[35,4,44,2],[36,4,45,2],[36,8,45,6,"chunksIsBuffer"],[36,22,45,20],[36,23,45,21,"chunks"],[36,29,45,27],[36,30,45,28],[36,32,45,30],[36,39,45,37,"chunks"],[36,45,45,43],[37,4,46,2,"_$$_REQUIRE"],[37,15,46,2],[37,16,46,2,"_dependencyMap"],[37,30,46,2],[37,48,46,12,"_$$_REQUIRE"],[37,59,46,12],[37,60,46,12,"_dependencyMap"],[37,74,46,12],[37,90,46,18,"Array"],[37,95,46,23],[37,97,46,25,"chunks"],[37,103,46,31],[37,104,46,32],[38,4,47,2],[38,8,47,8,"bufferSize"],[38,18,47,18],[38,21,47,21,"chunks"],[38,27,47,27],[38,28,47,28,"reduce"],[38,34,47,34],[38,35,47,35],[38,45,47,36,"accum"],[38,50,47,41],[38,52,47,43,"chunk"],[38,57,47,48],[38,59,47,53],[39,6,48,4],[40,6,49,4],[40,10,49,8,"singleChunkIsBuffer"],[40,29,49,27],[40,30,49,28,"chunk"],[40,35,49,33],[40,36,49,34],[40,38,49,36],[41,8,50,6],[42,8,51,6],[42,12,51,10,"chunk"],[42,17,51,15],[42,18,51,16,"length"],[42,24,51,22],[42,29,51,27],[42,30,51,28],[42,34,51,32,"asMinimalOP"],[42,45,51,43],[42,46,51,44,"chunk"],[42,51,51,49],[42,52,51,50],[42,57,51,55,"undefined"],[42,66,51,64],[42,68,51,66],[43,10,52,8],[43,17,52,15,"accum"],[43,22,52,20],[43,25,52,23],[43,26,52,24],[44,8,53,6],[45,8,54,6],[45,15,54,13,"accum"],[45,20,54,18],[45,23,54,21,"_$$_REQUIRE"],[45,34,54,21],[45,35,54,21,"_dependencyMap"],[45,49,54,21],[45,74,54,30,"encodingLength"],[45,88,54,44],[45,89,54,45,"chunk"],[45,94,54,50],[45,95,54,51,"length"],[45,101,54,57],[45,102,54,58],[45,105,54,61,"chunk"],[45,110,54,66],[45,111,54,67,"length"],[45,117,54,73],[46,6,55,4],[47,6,56,4],[48,6,57,4],[48,13,57,11,"accum"],[48,18,57,16],[48,21,57,19],[48,22,57,20],[49,4,58,2],[49,5,58,3],[49,7,58,5],[49,10,58,8],[49,11,58,9],[50,4,59,2],[50,8,59,8,"buffer"],[50,14,59,14],[50,17,59,17,"Buffer"],[50,23,59,23],[50,24,59,24,"allocUnsafe"],[50,35,59,35],[50,36,59,36,"bufferSize"],[50,46,59,46],[50,47,59,47],[51,4,60,2],[51,8,60,6,"offset"],[51,14,60,12],[51,17,60,15],[51,18,60,16],[52,4,61,2,"chunks"],[52,10,61,8],[52,11,61,9,"forEach"],[52,18,61,16],[52,19,61,17],[52,29,61,17,"chunk"],[52,34,61,22],[52,36,61,26],[53,6,62,4],[54,6,63,4],[54,10,63,8,"singleChunkIsBuffer"],[54,29,63,27],[54,30,63,28,"chunk"],[54,35,63,33],[54,36,63,34],[54,38,63,36],[55,8,64,6],[56,8,65,6],[56,12,65,12,"opcode"],[56,18,65,18],[56,21,65,21,"asMinimalOP"],[56,32,65,32],[56,33,65,33,"chunk"],[56,38,65,38],[56,39,65,39],[57,8,66,6],[57,12,66,10,"opcode"],[57,18,66,16],[57,23,66,21,"undefined"],[57,32,66,30],[57,34,66,32],[58,10,67,8,"buffer"],[58,16,67,14],[58,17,67,15,"writeUInt8"],[58,27,67,25],[58,28,67,26,"opcode"],[58,34,67,32],[58,36,67,34,"offset"],[58,42,67,40],[58,43,67,41],[59,10,68,8,"offset"],[59,16,68,14],[59,20,68,18],[59,21,68,19],[60,10,69,8],[61,8,70,6],[62,8,71,6,"offset"],[62,14,71,12],[62,18,71,16,"_$$_REQUIRE"],[62,29,71,16],[62,30,71,16,"_dependencyMap"],[62,44,71,16],[62,69,71,25,"encode"],[62,75,71,31],[62,76,71,32,"buffer"],[62,82,71,38],[62,84,71,40,"chunk"],[62,89,71,45],[62,90,71,46,"length"],[62,96,71,52],[62,98,71,54,"offset"],[62,104,71,60],[62,105,71,61],[63,8,72,6,"chunk"],[63,13,72,11],[63,14,72,12,"copy"],[63,18,72,16],[63,19,72,17,"buffer"],[63,25,72,23],[63,27,72,25,"offset"],[63,33,72,31],[63,34,72,32],[64,8,73,6,"offset"],[64,14,73,12],[64,18,73,16,"chunk"],[64,23,73,21],[64,24,73,22,"length"],[64,30,73,28],[65,8,74,6],[66,6,75,4],[66,7,75,5],[66,13,75,11],[67,8,76,6,"buffer"],[67,14,76,12],[67,15,76,13,"writeUInt8"],[67,25,76,23],[67,26,76,24,"chunk"],[67,31,76,29],[67,33,76,31,"offset"],[67,39,76,37],[67,40,76,38],[68,8,77,6,"offset"],[68,14,77,12],[68,18,77,16],[68,19,77,17],[69,6,78,4],[70,4,79,2],[70,5,79,3],[70,6,79,4],[71,4,80,2],[71,8,80,6,"offset"],[71,14,80,12],[71,19,80,17,"buffer"],[71,25,80,23],[71,26,80,24,"length"],[71,32,80,30],[71,34,80,32],[71,40,80,38],[71,44,80,42,"Error"],[71,49,80,47],[71,50,80,48],[71,75,80,73],[71,76,80,74],[72,4,81,2],[72,11,81,9,"buffer"],[72,17,81,15],[73,2,82,0],[74,2,83,0,"exports"],[74,9,83,7],[74,10,83,8,"compile"],[74,17,83,15],[74,20,83,18,"compile"],[74,27,83,25],[75,2,84,0],[75,11,84,9,"decompile"],[75,20,84,18,"decompile"],[75,21,84,19,"buffer"],[75,27,84,25],[75,29,84,27],[76,4,85,2],[77,4,86,2],[77,8,86,6,"chunksIsArray"],[77,21,86,19],[77,22,86,20,"buffer"],[77,28,86,26],[77,29,86,27],[77,31,86,29],[77,38,86,36,"buffer"],[77,44,86,42],[78,4,87,2,"_$$_REQUIRE"],[78,15,87,2],[78,16,87,2,"_dependencyMap"],[78,30,87,2],[78,48,87,12,"_$$_REQUIRE"],[78,59,87,12],[78,60,87,12,"_dependencyMap"],[78,74,87,12],[78,90,87,18,"Buffer"],[78,96,87,24],[78,98,87,26,"buffer"],[78,104,87,32],[78,105,87,33],[79,4,88,2],[79,8,88,8,"chunks"],[79,14,88,14],[79,17,88,17],[79,19,88,19],[80,4,89,2],[80,8,89,6,"i"],[80,9,89,7],[80,12,89,10],[80,13,89,11],[81,4,90,2],[81,11,90,9,"i"],[81,12,90,10],[81,15,90,13,"buffer"],[81,21,90,19],[81,22,90,20,"length"],[81,28,90,26],[81,30,90,28],[82,6,91,4],[82,10,91,10,"opcode"],[82,16,91,16],[82,19,91,19,"buffer"],[82,25,91,25],[82,26,91,26,"i"],[82,27,91,27],[82,28,91,28],[83,6,92,4],[84,6,93,4],[84,10,93,8,"opcode"],[84,16,93,14],[84,19,93,17,"exports"],[84,26,93,24],[84,27,93,25,"OPS"],[84,30,93,28],[84,31,93,29,"OP_0"],[84,35,93,33],[84,39,93,37,"opcode"],[84,45,93,43],[84,49,93,47,"exports"],[84,56,93,54],[84,57,93,55,"OPS"],[84,60,93,58],[84,61,93,59,"OP_PUSHDATA4"],[84,73,93,71],[84,75,93,73],[85,8,94,6],[85,12,94,12,"d"],[85,13,94,13],[85,16,94,16,"_$$_REQUIRE"],[85,27,94,16],[85,28,94,16,"_dependencyMap"],[85,42,94,16],[85,67,94,25,"decode"],[85,73,94,31],[85,74,94,32,"buffer"],[85,80,94,38],[85,82,94,40,"i"],[85,83,94,41],[85,84,94,42],[86,8,95,6],[87,8,96,6],[87,12,96,10,"d"],[87,13,96,11],[87,18,96,16],[87,22,96,20],[87,24,96,22],[87,31,96,29],[87,35,96,33],[88,8,97,6,"i"],[88,9,97,7],[88,13,97,11,"d"],[88,14,97,12],[88,15,97,13,"size"],[88,19,97,17],[89,8,98,6],[90,8,99,6],[90,12,99,10,"i"],[90,13,99,11],[90,16,99,14,"d"],[90,17,99,15],[90,18,99,16,"number"],[90,24,99,22],[90,27,99,25,"buffer"],[90,33,99,31],[90,34,99,32,"length"],[90,40,99,38],[90,42,99,40],[90,49,99,47],[90,53,99,51],[91,8,100,6],[91,12,100,12,"data"],[91,16,100,16],[91,19,100,19,"buffer"],[91,25,100,25],[91,26,100,26,"slice"],[91,31,100,31],[91,32,100,32,"i"],[91,33,100,33],[91,35,100,35,"i"],[91,36,100,36],[91,39,100,39,"d"],[91,40,100,40],[91,41,100,41,"number"],[91,47,100,47],[91,48,100,48],[92,8,101,6,"i"],[92,9,101,7],[92,13,101,11,"d"],[92,14,101,12],[92,15,101,13,"number"],[92,21,101,19],[93,8,102,6],[94,8,103,6],[94,12,103,12,"op"],[94,14,103,14],[94,17,103,17,"asMinimalOP"],[94,28,103,28],[94,29,103,29,"data"],[94,33,103,33],[94,34,103,34],[95,8,104,6],[95,12,104,10,"op"],[95,14,104,12],[95,19,104,17,"undefined"],[95,28,104,26],[95,30,104,28],[96,10,105,8,"chunks"],[96,16,105,14],[96,17,105,15,"push"],[96,21,105,19],[96,22,105,20,"op"],[96,24,105,22],[96,25,105,23],[97,8,106,6],[97,9,106,7],[97,15,106,13],[98,10,107,8,"chunks"],[98,16,107,14],[98,17,107,15,"push"],[98,21,107,19],[98,22,107,20,"data"],[98,26,107,24],[98,27,107,25],[99,8,108,6],[100,8,109,6],[101,6,110,4],[101,7,110,5],[101,13,110,11],[102,8,111,6,"chunks"],[102,14,111,12],[102,15,111,13,"push"],[102,19,111,17],[102,20,111,18,"opcode"],[102,26,111,24],[102,27,111,25],[103,8,112,6,"i"],[103,9,112,7],[103,13,112,11],[103,14,112,12],[104,6,113,4],[105,4,114,2],[106,4,115,2],[106,11,115,9,"chunks"],[106,17,115,15],[107,2,116,0],[108,2,117,0,"exports"],[108,9,117,7],[108,10,117,8,"decompile"],[108,19,117,17],[108,22,117,20,"decompile"],[108,31,117,29],[109,2,118,0],[109,11,118,9,"toASM"],[109,16,118,14,"toASM"],[109,17,118,15,"chunks"],[109,23,118,21],[109,25,118,23],[110,4,119,2],[110,8,119,6,"chunksIsBuffer"],[110,22,119,20],[110,23,119,21,"chunks"],[110,29,119,27],[110,30,119,28],[110,32,119,30],[111,6,120,4,"chunks"],[111,12,120,10],[111,15,120,13,"decompile"],[111,24,120,22],[111,25,120,23,"chunks"],[111,31,120,29],[111,32,120,30],[112,4,121,2],[113,4,122,2],[113,11,122,9,"chunks"],[113,17,122,15],[113,18,123,5,"map"],[113,21,123,8],[113,22,123,9],[113,32,123,9,"chunk"],[113,37,123,14],[113,39,123,18],[114,6,124,6],[115,6,125,6],[115,10,125,10,"singleChunkIsBuffer"],[115,29,125,29],[115,30,125,30,"chunk"],[115,35,125,35],[115,36,125,36],[115,38,125,38],[116,8,126,8],[116,12,126,14,"op"],[116,14,126,16],[116,17,126,19,"asMinimalOP"],[116,28,126,30],[116,29,126,31,"chunk"],[116,34,126,36],[116,35,126,37],[117,8,127,8],[117,12,127,12,"op"],[117,14,127,14],[117,19,127,19,"undefined"],[117,28,127,28],[117,30,127,30],[117,37,127,37,"chunk"],[117,42,127,42],[117,43,127,43,"toString"],[117,51,127,51],[117,52,127,52],[117,57,127,57],[117,58,127,58],[118,8,128,8,"chunk"],[118,13,128,13],[118,16,128,16,"op"],[118,18,128,18],[119,6,129,6],[120,6,130,6],[121,6,131,6],[121,13,131,13,"_$$_REQUIRE"],[121,24,131,13],[121,25,131,13,"_dependencyMap"],[121,39,131,13],[121,63,131,25,"chunk"],[121,68,131,30],[121,69,131,31],[122,4,132,4],[122,5,132,5],[122,6,132,6],[122,7,133,5,"join"],[122,11,133,9],[122,12,133,10],[122,15,133,13],[122,16,133,14],[123,2,134,0],[124,2,135,0,"exports"],[124,9,135,7],[124,10,135,8,"toASM"],[124,15,135,13],[124,18,135,16,"toASM"],[124,23,135,21],[125,2,136,0],[125,11,136,9,"fromASM"],[125,18,136,16,"fromASM"],[125,19,136,17,"asm"],[125,22,136,20],[125,24,136,22],[126,4,137,2,"_$$_REQUIRE"],[126,15,137,2],[126,16,137,2,"_dependencyMap"],[126,30,137,2],[126,48,137,12,"_$$_REQUIRE"],[126,59,137,12],[126,60,137,12,"_dependencyMap"],[126,74,137,12],[126,90,137,18,"String"],[126,96,137,24],[126,98,137,26,"asm"],[126,101,137,29],[126,102,137,30],[127,4,138,2],[127,11,138,9,"compile"],[127,18,138,16],[127,19,139,4,"asm"],[127,22,139,7],[127,23,139,8,"split"],[127,28,139,13],[127,29,139,14],[127,32,139,17],[127,33,139,18],[127,34,139,19,"map"],[127,37,139,22],[127,38,139,23],[127,48,139,23,"chunkStr"],[127,56,139,31],[127,58,139,35],[128,6,140,6],[129,6,141,6],[129,10,141,10,"exports"],[129,17,141,17],[129,18,141,18,"OPS"],[129,21,141,21],[129,22,141,22,"chunkStr"],[129,30,141,30],[129,31,141,31],[129,36,141,36,"undefined"],[129,45,141,45],[129,47,141,47],[129,54,141,54,"exports"],[129,61,141,61],[129,62,141,62,"OPS"],[129,65,141,65],[129,66,141,66,"chunkStr"],[129,74,141,74],[129,75,141,75],[130,6,142,6,"_$$_REQUIRE"],[130,17,142,6],[130,18,142,6,"_dependencyMap"],[130,32,142,6],[130,50,142,16,"_$$_REQUIRE"],[130,61,142,16],[130,62,142,16,"_dependencyMap"],[130,76,142,16],[130,92,142,22,"Hex"],[130,95,142,25],[130,97,142,27,"chunkStr"],[130,105,142,35],[130,106,142,36],[131,6,143,6],[132,6,144,6],[132,13,144,13,"Buffer"],[132,19,144,19],[132,20,144,20,"from"],[132,24,144,24],[132,25,144,25,"chunkStr"],[132,33,144,33],[132,35,144,35],[132,40,144,40],[132,41,144,41],[133,4,145,4],[133,5,145,5],[133,6,146,2],[133,7,146,3],[134,2,147,0],[135,2,148,0,"exports"],[135,9,148,7],[135,10,148,8,"fromASM"],[135,17,148,15],[135,20,148,18,"fromASM"],[135,27,148,25],[136,2,149,0],[136,11,149,9,"toStack"],[136,18,149,16,"toStack"],[136,19,149,17,"chunks"],[136,25,149,23],[136,27,149,25],[137,4,150,2,"chunks"],[137,10,150,8],[137,13,150,11,"decompile"],[137,22,150,20],[137,23,150,21,"chunks"],[137,29,150,27],[137,30,150,28],[138,4,151,2,"_$$_REQUIRE"],[138,15,151,2],[138,16,151,2,"_dependencyMap"],[138,30,151,2],[138,48,151,12,"isPushOnly"],[138,58,151,22],[138,60,151,24,"chunks"],[138,66,151,30],[138,67,151,31],[139,4,152,2],[139,11,152,9,"chunks"],[139,17,152,15],[139,18,152,16,"map"],[139,21,152,19],[139,22,152,20],[139,32,152,20,"op"],[139,34,152,22],[139,36,152,26],[140,6,153,4],[140,10,153,8,"singleChunkIsBuffer"],[140,29,153,27],[140,30,153,28,"op"],[140,32,153,30],[140,33,153,31],[140,35,153,33],[140,42,153,40,"op"],[140,44,153,42],[141,6,154,4],[141,10,154,8,"op"],[141,12,154,10],[141,17,154,15,"exports"],[141,24,154,22],[141,25,154,23,"OPS"],[141,28,154,26],[141,29,154,27,"OP_0"],[141,33,154,31],[141,35,154,33],[141,42,154,40,"Buffer"],[141,48,154,46],[141,49,154,47,"allocUnsafe"],[141,60,154,58],[141,61,154,59],[141,62,154,60],[141,63,154,61],[142,6,155,4],[142,13,155,11,"_$$_REQUIRE"],[142,24,155,11],[142,25,155,11,"_dependencyMap"],[142,39,155,11],[142,63,155,24,"encode"],[142,69,155,30],[142,70,155,31,"op"],[142,72,155,33],[142,75,155,36,"OP_INT_BASE"],[142,86,155,47],[142,87,155,48],[143,4,156,2],[143,5,156,3],[143,6,156,4],[144,2,157,0],[145,2,158,0,"exports"],[145,9,158,7],[145,10,158,8,"toStack"],[145,17,158,15],[145,20,158,18,"toStack"],[145,27,158,25],[146,2,159,0],[146,11,159,9,"isCanonicalPubKey"],[146,28,159,26,"isCanonicalPubKey"],[146,29,159,27,"buffer"],[146,35,159,33],[146,37,159,35],[147,4,160,2],[147,11,160,9,"_$$_REQUIRE"],[147,22,160,9],[147,23,160,9,"_dependencyMap"],[147,37,160,9],[147,60,160,13,"isPoint"],[147,67,160,20],[147,68,160,21,"buffer"],[147,74,160,27],[147,75,160,28],[148,2,161,0],[149,2,162,0,"exports"],[149,9,162,7],[149,10,162,8,"isCanonicalPubKey"],[149,27,162,25],[149,30,162,28,"isCanonicalPubKey"],[149,47,162,45],[150,2,163,0],[150,11,163,9,"isDefinedHashType"],[150,28,163,26,"isDefinedHashType"],[150,29,163,27,"hashType"],[150,37,163,35],[150,39,163,37],[151,4,164,2],[151,8,164,8,"hashTypeMod"],[151,19,164,19],[151,22,164,22,"hashType"],[151,30,164,30],[151,33,164,33],[151,34,164,34],[151,38,164,38],[152,4,165,2],[153,4,166,2],[153,11,166,9,"hashTypeMod"],[153,22,166,20],[153,25,166,23],[153,29,166,27],[153,33,166,31,"hashTypeMod"],[153,44,166,42],[153,47,166,45],[153,51,166,49],[154,2,167,0],[155,2,168,0,"exports"],[155,9,168,7],[155,10,168,8,"isDefinedHashType"],[155,27,168,25],[155,30,168,28,"isDefinedHashType"],[155,47,168,45],[156,2,169,0],[156,11,169,9,"isCanonicalScriptSignature"],[156,37,169,35,"isCanonicalScriptSignature"],[156,38,169,36,"buffer"],[156,44,169,42],[156,46,169,44],[157,4,170,2],[157,8,170,6],[157,9,170,7,"Buffer"],[157,15,170,13],[157,16,170,14,"isBuffer"],[157,24,170,22],[157,25,170,23,"buffer"],[157,31,170,29],[157,32,170,30],[157,34,170,32],[157,41,170,39],[157,46,170,44],[158,4,171,2],[158,8,171,6],[158,9,171,7,"isDefinedHashType"],[158,26,171,24],[158,27,171,25,"buffer"],[158,33,171,31],[158,34,171,32,"buffer"],[158,40,171,38],[158,41,171,39,"length"],[158,47,171,45],[158,50,171,48],[158,51,171,49],[158,52,171,50],[158,53,171,51],[158,55,171,53],[158,62,171,60],[158,67,171,65],[159,4,172,2],[159,11,172,9,"_$$_REQUIRE"],[159,22,172,9],[159,23,172,9,"_dependencyMap"],[159,37,172,9],[159,51,172,15,"check"],[159,56,172,20],[159,57,172,21,"buffer"],[159,63,172,27],[159,64,172,28,"slice"],[159,69,172,33],[159,70,172,34],[159,71,172,35],[159,73,172,37],[159,74,172,38],[159,75,172,39],[159,76,172,40],[159,77,172,41],[160,2,173,0],[161,2,174,0,"exports"],[161,9,174,7],[161,10,174,8,"isCanonicalScriptSignature"],[161,36,174,34],[161,39,174,37,"isCanonicalScriptSignature"],[161,65,174,63],[162,2,175,0],[163,2,176,0,"exports"],[163,9,176,7],[163,10,176,8,"number"],[163,16,176,14],[163,19,176,14,"_$$_REQUIRE"],[163,30,176,14],[163,31,176,14,"_dependencyMap"],[163,45,176,14],[163,68,176,29],[164,2,177,0,"exports"],[164,9,177,7],[164,10,177,8,"signature"],[164,19,177,17],[164,22,177,17,"_$$_REQUIRE"],[164,33,177,17],[164,34,177,17,"_dependencyMap"],[164,48,177,17],[164,74,177,35],[165,0,177,36],[165,3]],"functionMap":{"names":["<global>","isOPInt","isPushOnlyChunk","isPushOnly","asMinimalOP","chunksIsBuffer","chunksIsArray","singleChunkIsBuffer","compile","chunks.reduce$argument_0","chunks.forEach$argument_0","decompile","toASM","chunks.map$argument_0","fromASM","asm.split.map$argument_0","toStack","isCanonicalPubKey","isDefinedHashType","isCanonicalScriptSignature"],"mappings":"AAA;ACY;CDO;AEC;CFE;AGC;CHE;AIE;CJK;AKC;CLE;AMC;CNE;AOC;CPE;AQC;mCCI;GDW;iBEG;GFkB;CRG;AWE;CXgC;AYE;SCK;KDS;CZE;AcE;uBCG;KDM;CdE;AgBE;oBHG;GGI;ChBC;AiBE;CjBE;AkBE;ClBI;AmBE;CnBI"}},"type":"js/module"}]}