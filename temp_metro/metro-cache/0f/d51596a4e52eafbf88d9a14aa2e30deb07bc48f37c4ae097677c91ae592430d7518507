{"dependencies":[{"name":"../../../errors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":15,"column":21,"index":318},"end":{"line":15,"column":53,"index":350}},{"start":{"line":15,"column":21,"index":318},"end":{"line":15,"column":53,"index":350}}],"key":"qo8P6ncfoScjryDx4l+xmXlm9pw="}},{"name":"./end-of-stream","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":31,"column":31,"index":867},"end":{"line":31,"column":57,"index":893}}],"key":"wYzLdnrEbrGjPeg9yNcs7/vHpVc="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  // Ported from https://github.com/mafintosh/pump with\n  // permission from the author, Mathias Buus (@mafintosh).\n\n  'use strict';\n\n  var eos;\n  function once(callback) {\n    var called = false;\n    return function () {\n      if (called) return;\n      called = true;\n      callback.apply(void 0, arguments);\n    };\n  }\n  var ERR_MISSING_ARGS = _$$_REQUIRE(_dependencyMap[0], \"../../../errors\").codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _$$_REQUIRE(_dependencyMap[0], \"../../../errors\").codes.ERR_STREAM_DESTROYED;\n  function noop(err) {\n    // Rethrow the error if it exists to avoid swallowing it\n    if (err) throw err;\n  }\n  function isRequest(stream) {\n    return stream.setHeader && typeof stream.abort === 'function';\n  }\n  function destroyer(stream, reading, writing, callback) {\n    callback = once(callback);\n    var closed = false;\n    stream.on('close', function () {\n      closed = true;\n    });\n    if (eos === undefined) eos = _$$_REQUIRE(_dependencyMap[1], \"./end-of-stream\");\n    eos(stream, {\n      readable: reading,\n      writable: writing\n    }, function (err) {\n      if (err) return callback(err);\n      closed = true;\n      callback();\n    });\n    var destroyed = false;\n    return function (err) {\n      if (closed) return;\n      if (destroyed) return;\n      destroyed = true;\n\n      // request.destroy just do .end - .abort is what we want\n      if (isRequest(stream)) return stream.abort();\n      if (typeof stream.destroy === 'function') return stream.destroy();\n      callback(err || new ERR_STREAM_DESTROYED('pipe'));\n    };\n  }\n  function call(fn) {\n    fn();\n  }\n  function pipe(from, to) {\n    return from.pipe(to);\n  }\n  function popCallback(streams) {\n    if (!streams.length) return noop;\n    if (typeof streams[streams.length - 1] !== 'function') return noop;\n    return streams.pop();\n  }\n  function pipeline() {\n    for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n      streams[_key] = arguments[_key];\n    }\n    var callback = popCallback(streams);\n    if (Array.isArray(streams[0])) streams = streams[0];\n    if (streams.length < 2) {\n      throw new ERR_MISSING_ARGS('streams');\n    }\n    var error;\n    var destroys = streams.map(function (stream, i) {\n      var reading = i < streams.length - 1;\n      var writing = i > 0;\n      return destroyer(stream, reading, writing, function (err) {\n        if (!error) error = err;\n        if (err) destroys.forEach(call);\n        if (reading) return;\n        destroys.forEach(call);\n        callback(error);\n      });\n    });\n    return streams.reduce(pipe);\n  }\n  module.exports = pipeline;\n});","lineCount":87,"map":[[2,2,1,0],[3,2,2,0],[5,2,4,0],[5,14,4,12],[7,2,6,0],[7,6,6,4,"eos"],[7,9,6,7],[8,2,7,0],[8,11,7,9,"once"],[8,15,7,13,"once"],[8,16,7,14,"callback"],[8,24,7,22],[8,26,7,24],[9,4,8,2],[9,8,8,6,"called"],[9,14,8,12],[9,17,8,15],[9,22,8,20],[10,4,9,2],[10,11,9,9],[10,23,9,21],[11,6,10,4],[11,10,10,8,"called"],[11,16,10,14],[11,18,10,16],[12,6,11,4,"called"],[12,12,11,10],[12,15,11,13],[12,19,11,17],[13,6,12,4,"callback"],[13,14,12,12],[13,15,12,13,"apply"],[13,20,12,18],[13,21,12,19],[13,26,12,24],[13,27,12,25],[13,29,12,27,"arguments"],[13,38,12,36],[13,39,12,37],[14,4,13,2],[14,5,13,3],[15,2,14,0],[16,2,15,0],[16,6,16,2,"ERR_MISSING_ARGS"],[16,22,16,18],[16,25,16,21,"_$$_REQUIRE"],[16,36,16,21],[16,37,16,21,"_dependencyMap"],[16,51,16,21],[16,75,16,21,"codes"],[16,80,16,21],[16,81,16,36,"ERR_MISSING_ARGS"],[16,97,16,52],[17,4,17,2,"ERR_STREAM_DESTROYED"],[17,24,17,22],[17,27,17,25,"_$$_REQUIRE"],[17,38,17,25],[17,39,17,25,"_dependencyMap"],[17,53,17,25],[17,77,17,25,"codes"],[17,82,17,25],[17,83,17,40,"ERR_STREAM_DESTROYED"],[17,103,17,60],[18,2,18,0],[18,11,18,9,"noop"],[18,15,18,13,"noop"],[18,16,18,14,"err"],[18,19,18,17],[18,21,18,19],[19,4,19,2],[20,4,20,2],[20,8,20,6,"err"],[20,11,20,9],[20,13,20,11],[20,19,20,17,"err"],[20,22,20,20],[21,2,21,0],[22,2,22,0],[22,11,22,9,"isRequest"],[22,20,22,18,"isRequest"],[22,21,22,19,"stream"],[22,27,22,25],[22,29,22,27],[23,4,23,2],[23,11,23,9,"stream"],[23,17,23,15],[23,18,23,16,"setHeader"],[23,27,23,25],[23,31,23,29],[23,38,23,36,"stream"],[23,44,23,42],[23,45,23,43,"abort"],[23,50,23,48],[23,55,23,53],[23,65,23,63],[24,2,24,0],[25,2,25,0],[25,11,25,9,"destroyer"],[25,20,25,18,"destroyer"],[25,21,25,19,"stream"],[25,27,25,25],[25,29,25,27,"reading"],[25,36,25,34],[25,38,25,36,"writing"],[25,45,25,43],[25,47,25,45,"callback"],[25,55,25,53],[25,57,25,55],[26,4,26,2,"callback"],[26,12,26,10],[26,15,26,13,"once"],[26,19,26,17],[26,20,26,18,"callback"],[26,28,26,26],[26,29,26,27],[27,4,27,2],[27,8,27,6,"closed"],[27,14,27,12],[27,17,27,15],[27,22,27,20],[28,4,28,2,"stream"],[28,10,28,8],[28,11,28,9,"on"],[28,13,28,11],[28,14,28,12],[28,21,28,19],[28,23,28,21],[28,35,28,33],[29,6,29,4,"closed"],[29,12,29,10],[29,15,29,13],[29,19,29,17],[30,4,30,2],[30,5,30,3],[30,6,30,4],[31,4,31,2],[31,8,31,6,"eos"],[31,11,31,9],[31,16,31,14,"undefined"],[31,25,31,23],[31,27,31,25,"eos"],[31,30,31,28],[31,33,31,31,"require"],[31,44,31,38],[31,45,31,38,"_dependencyMap"],[31,59,31,38],[31,81,31,56],[31,82,31,57],[32,4,32,2,"eos"],[32,7,32,5],[32,8,32,6,"stream"],[32,14,32,12],[32,16,32,14],[33,6,33,4,"readable"],[33,14,33,12],[33,16,33,14,"reading"],[33,23,33,21],[34,6,34,4,"writable"],[34,14,34,12],[34,16,34,14,"writing"],[35,4,35,2],[35,5,35,3],[35,7,35,5],[35,17,35,15,"err"],[35,20,35,18],[35,22,35,20],[36,6,36,4],[36,10,36,8,"err"],[36,13,36,11],[36,15,36,13],[36,22,36,20,"callback"],[36,30,36,28],[36,31,36,29,"err"],[36,34,36,32],[36,35,36,33],[37,6,37,4,"closed"],[37,12,37,10],[37,15,37,13],[37,19,37,17],[38,6,38,4,"callback"],[38,14,38,12],[38,15,38,13],[38,16,38,14],[39,4,39,2],[39,5,39,3],[39,6,39,4],[40,4,40,2],[40,8,40,6,"destroyed"],[40,17,40,15],[40,20,40,18],[40,25,40,23],[41,4,41,2],[41,11,41,9],[41,21,41,19,"err"],[41,24,41,22],[41,26,41,24],[42,6,42,4],[42,10,42,8,"closed"],[42,16,42,14],[42,18,42,16],[43,6,43,4],[43,10,43,8,"destroyed"],[43,19,43,17],[43,21,43,19],[44,6,44,4,"destroyed"],[44,15,44,13],[44,18,44,16],[44,22,44,20],[46,6,46,4],[47,6,47,4],[47,10,47,8,"isRequest"],[47,19,47,17],[47,20,47,18,"stream"],[47,26,47,24],[47,27,47,25],[47,29,47,27],[47,36,47,34,"stream"],[47,42,47,40],[47,43,47,41,"abort"],[47,48,47,46],[47,49,47,47],[47,50,47,48],[48,6,48,4],[48,10,48,8],[48,17,48,15,"stream"],[48,23,48,21],[48,24,48,22,"destroy"],[48,31,48,29],[48,36,48,34],[48,46,48,44],[48,48,48,46],[48,55,48,53,"stream"],[48,61,48,59],[48,62,48,60,"destroy"],[48,69,48,67],[48,70,48,68],[48,71,48,69],[49,6,49,4,"callback"],[49,14,49,12],[49,15,49,13,"err"],[49,18,49,16],[49,22,49,20],[49,26,49,24,"ERR_STREAM_DESTROYED"],[49,46,49,44],[49,47,49,45],[49,53,49,51],[49,54,49,52],[49,55,49,53],[50,4,50,2],[50,5,50,3],[51,2,51,0],[52,2,52,0],[52,11,52,9,"call"],[52,15,52,13,"call"],[52,16,52,14,"fn"],[52,18,52,16],[52,20,52,18],[53,4,53,2,"fn"],[53,6,53,4],[53,7,53,5],[53,8,53,6],[54,2,54,0],[55,2,55,0],[55,11,55,9,"pipe"],[55,15,55,13,"pipe"],[55,16,55,14,"from"],[55,20,55,18],[55,22,55,20,"to"],[55,24,55,22],[55,26,55,24],[56,4,56,2],[56,11,56,9,"from"],[56,15,56,13],[56,16,56,14,"pipe"],[56,20,56,18],[56,21,56,19,"to"],[56,23,56,21],[56,24,56,22],[57,2,57,0],[58,2,58,0],[58,11,58,9,"popCallback"],[58,22,58,20,"popCallback"],[58,23,58,21,"streams"],[58,30,58,28],[58,32,58,30],[59,4,59,2],[59,8,59,6],[59,9,59,7,"streams"],[59,16,59,14],[59,17,59,15,"length"],[59,23,59,21],[59,25,59,23],[59,32,59,30,"noop"],[59,36,59,34],[60,4,60,2],[60,8,60,6],[60,15,60,13,"streams"],[60,22,60,20],[60,23,60,21,"streams"],[60,30,60,28],[60,31,60,29,"length"],[60,37,60,35],[60,40,60,38],[60,41,60,39],[60,42,60,40],[60,47,60,45],[60,57,60,55],[60,59,60,57],[60,66,60,64,"noop"],[60,70,60,68],[61,4,61,2],[61,11,61,9,"streams"],[61,18,61,16],[61,19,61,17,"pop"],[61,22,61,20],[61,23,61,21],[61,24,61,22],[62,2,62,0],[63,2,63,0],[63,11,63,9,"pipeline"],[63,19,63,17,"pipeline"],[63,20,63,17],[63,22,63,20],[64,4,64,2],[64,9,64,7],[64,13,64,11,"_len"],[64,17,64,15],[64,20,64,18,"arguments"],[64,29,64,27],[64,30,64,28,"length"],[64,36,64,34],[64,38,64,36,"streams"],[64,45,64,43],[64,48,64,46],[64,52,64,50,"Array"],[64,57,64,55],[64,58,64,56,"_len"],[64,62,64,60],[64,63,64,61],[64,65,64,63,"_key"],[64,69,64,67],[64,72,64,70],[64,73,64,71],[64,75,64,73,"_key"],[64,79,64,77],[64,82,64,80,"_len"],[64,86,64,84],[64,88,64,86,"_key"],[64,92,64,90],[64,94,64,92],[64,96,64,94],[65,6,65,4,"streams"],[65,13,65,11],[65,14,65,12,"_key"],[65,18,65,16],[65,19,65,17],[65,22,65,20,"arguments"],[65,31,65,29],[65,32,65,30,"_key"],[65,36,65,34],[65,37,65,35],[66,4,66,2],[67,4,67,2],[67,8,67,6,"callback"],[67,16,67,14],[67,19,67,17,"popCallback"],[67,30,67,28],[67,31,67,29,"streams"],[67,38,67,36],[67,39,67,37],[68,4,68,2],[68,8,68,6,"Array"],[68,13,68,11],[68,14,68,12,"isArray"],[68,21,68,19],[68,22,68,20,"streams"],[68,29,68,27],[68,30,68,28],[68,31,68,29],[68,32,68,30],[68,33,68,31],[68,35,68,33,"streams"],[68,42,68,40],[68,45,68,43,"streams"],[68,52,68,50],[68,53,68,51],[68,54,68,52],[68,55,68,53],[69,4,69,2],[69,8,69,6,"streams"],[69,15,69,13],[69,16,69,14,"length"],[69,22,69,20],[69,25,69,23],[69,26,69,24],[69,28,69,26],[70,6,70,4],[70,12,70,10],[70,16,70,14,"ERR_MISSING_ARGS"],[70,32,70,30],[70,33,70,31],[70,42,70,40],[70,43,70,41],[71,4,71,2],[72,4,72,2],[72,8,72,6,"error"],[72,13,72,11],[73,4,73,2],[73,8,73,6,"destroys"],[73,16,73,14],[73,19,73,17,"streams"],[73,26,73,24],[73,27,73,25,"map"],[73,30,73,28],[73,31,73,29],[73,41,73,39,"stream"],[73,47,73,45],[73,49,73,47,"i"],[73,50,73,48],[73,52,73,50],[74,6,74,4],[74,10,74,8,"reading"],[74,17,74,15],[74,20,74,18,"i"],[74,21,74,19],[74,24,74,22,"streams"],[74,31,74,29],[74,32,74,30,"length"],[74,38,74,36],[74,41,74,39],[74,42,74,40],[75,6,75,4],[75,10,75,8,"writing"],[75,17,75,15],[75,20,75,18,"i"],[75,21,75,19],[75,24,75,22],[75,25,75,23],[76,6,76,4],[76,13,76,11,"destroyer"],[76,22,76,20],[76,23,76,21,"stream"],[76,29,76,27],[76,31,76,29,"reading"],[76,38,76,36],[76,40,76,38,"writing"],[76,47,76,45],[76,49,76,47],[76,59,76,57,"err"],[76,62,76,60],[76,64,76,62],[77,8,77,6],[77,12,77,10],[77,13,77,11,"error"],[77,18,77,16],[77,20,77,18,"error"],[77,25,77,23],[77,28,77,26,"err"],[77,31,77,29],[78,8,78,6],[78,12,78,10,"err"],[78,15,78,13],[78,17,78,15,"destroys"],[78,25,78,23],[78,26,78,24,"forEach"],[78,33,78,31],[78,34,78,32,"call"],[78,38,78,36],[78,39,78,37],[79,8,79,6],[79,12,79,10,"reading"],[79,19,79,17],[79,21,79,19],[80,8,80,6,"destroys"],[80,16,80,14],[80,17,80,15,"forEach"],[80,24,80,22],[80,25,80,23,"call"],[80,29,80,27],[80,30,80,28],[81,8,81,6,"callback"],[81,16,81,14],[81,17,81,15,"error"],[81,22,81,20],[81,23,81,21],[82,6,82,4],[82,7,82,5],[82,8,82,6],[83,4,83,2],[83,5,83,3],[83,6,83,4],[84,4,84,2],[84,11,84,9,"streams"],[84,18,84,16],[84,19,84,17,"reduce"],[84,25,84,23],[84,26,84,24,"pipe"],[84,30,84,28],[84,31,84,29],[85,2,85,0],[86,2,86,0,"module"],[86,8,86,6],[86,9,86,7,"exports"],[86,16,86,14],[86,19,86,17,"pipeline"],[86,27,86,25],[87,0,86,26],[87,3]],"functionMap":{"names":["<global>","once","<anonymous>","noop","isRequest","destroyer","stream.on$argument_1","eos$argument_2","call","pipe","popCallback","pipeline","streams.map$argument_0","destroyer$argument_3"],"mappings":"AAA;ACM;SCE;GDI;CDC;AGI;CHG;AIC;CJE;AKC;qBCG;GDE;KEK;GFI;SHE;GGS;CLC;AQC;CRE;ASC;CTE;AUC;CVI;AWC;6BCU;+CCG;KDM;GDC;CXE"}},"type":"js/module"}]}