{"dependencies":[{"name":"uint8array-tools","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":29,"column":27,"index":1222},"end":{"line":29,"column":54,"index":1249}}],"key":"d9z2uhLIsbEZR4MIqnLfYd/zTK8="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = {\n        enumerable: true,\n        get: function get() {\n          return m[k];\n        }\n      };\n    }\n    Object.defineProperty(o, k2, desc);\n  } : function (o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n  });\n  var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n    Object.defineProperty(o, \"default\", {\n      enumerable: true,\n      value: v\n    });\n  } : function (o, v) {\n    o[\"default\"] = v;\n  });\n  var __importStar = this && this.__importStar || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.encode = encode;\n  exports.decode = decode;\n  exports.encodingLength = encodingLength;\n  var tools = __importStar(_$$_REQUIRE(_dependencyMap[0], \"uint8array-tools\"));\n  var checkUInt64 = function checkUInt64(n) {\n    if (n < 0 || n > 0xffffffffffffffffn) {\n      throw new RangeError('value out of range');\n    }\n  };\n  function checkUInt53(n) {\n    if (n < 0 || n > Number.MAX_SAFE_INTEGER || n % 1 !== 0) throw new RangeError('value out of range');\n  }\n  function checkUint53OrUint64(n) {\n    if (typeof n === 'number') checkUInt53(n);else checkUInt64(n);\n  }\n  function encode(n, buffer, offset) {\n    checkUint53OrUint64(n);\n    if (offset === undefined) offset = 0;\n    if (buffer === undefined) {\n      buffer = new Uint8Array(encodingLength(n));\n    }\n    var bytes = 0;\n    // 8 bit\n    if (n < 0xfd) {\n      buffer.set([Number(n)], offset);\n      bytes = 1;\n      // 16 bit\n    } else if (n <= 0xffff) {\n      buffer.set([0xfd], offset);\n      tools.writeUInt16(buffer, offset + 1, Number(n), 'LE');\n      bytes = 3;\n      // 32 bit\n    } else if (n <= 0xffffffff) {\n      buffer.set([0xfe], offset);\n      tools.writeUInt32(buffer, offset + 1, Number(n), 'LE');\n      bytes = 5;\n      // 64 bit\n    } else {\n      buffer.set([0xff], offset);\n      tools.writeUInt64(buffer, offset + 1, BigInt(n), 'LE');\n      bytes = 9;\n    }\n    return {\n      buffer: buffer,\n      bytes: bytes\n    };\n  }\n  function decode(buffer, offset) {\n    if (offset === undefined) offset = 0;\n    var first = buffer.at(offset);\n    if (first === undefined) throw new Error('buffer too small');\n    // 8 bit\n    if (first < 0xfd) {\n      return {\n        numberValue: first,\n        bigintValue: BigInt(first),\n        bytes: 1\n      };\n      // 16 bit\n    } else if (first === 0xfd) {\n      var val = tools.readUInt16(buffer, offset + 1, 'LE');\n      return {\n        numberValue: val,\n        bigintValue: BigInt(val),\n        bytes: 3\n      };\n      // 32 bit\n    } else if (first === 0xfe) {\n      var _val = tools.readUInt32(buffer, offset + 1, 'LE');\n      return {\n        numberValue: _val,\n        bigintValue: BigInt(_val),\n        bytes: 5\n      };\n      // 64 bit\n    } else {\n      var number = tools.readUInt64(buffer, offset + 1, 'LE');\n      return {\n        numberValue: number <= Number.MAX_SAFE_INTEGER ? Number(number) : null,\n        bigintValue: number,\n        bytes: 9\n      };\n    }\n  }\n  function encodingLength(n) {\n    checkUint53OrUint64(n);\n    return n < 0xfd ? 1 : n <= 0xffff ? 3 : n <= 0xffffffff ? 5 : 9;\n  }\n});","lineCount":126,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0],[4,6,2,4,"__createBinding"],[4,21,2,19],[4,24,2,23],[4,28,2,27],[4,32,2,31],[4,36,2,35],[4,37,2,36,"__createBinding"],[4,52,2,51],[4,57,2,57,"Object"],[4,63,2,63],[4,64,2,64,"create"],[4,70,2,70],[4,73,2,74],[4,83,2,83,"o"],[4,84,2,84],[4,86,2,86,"m"],[4,87,2,87],[4,89,2,89,"k"],[4,90,2,90],[4,92,2,92,"k2"],[4,94,2,94],[4,96,2,96],[5,4,3,4],[5,8,3,8,"k2"],[5,10,3,10],[5,15,3,15,"undefined"],[5,24,3,24],[5,26,3,26,"k2"],[5,28,3,28],[5,31,3,31,"k"],[5,32,3,32],[6,4,4,4],[6,8,4,8,"desc"],[6,12,4,12],[6,15,4,15,"Object"],[6,21,4,21],[6,22,4,22,"getOwnPropertyDescriptor"],[6,46,4,46],[6,47,4,47,"m"],[6,48,4,48],[6,50,4,50,"k"],[6,51,4,51],[6,52,4,52],[7,4,5,4],[7,8,5,8],[7,9,5,9,"desc"],[7,13,5,13],[7,18,5,18],[7,23,5,23],[7,27,5,27,"desc"],[7,31,5,31],[7,34,5,34],[7,35,5,35,"m"],[7,36,5,36],[7,37,5,37,"__esModule"],[7,47,5,47],[7,50,5,50,"desc"],[7,54,5,54],[7,55,5,55,"writable"],[7,63,5,63],[7,67,5,67,"desc"],[7,71,5,71],[7,72,5,72,"configurable"],[7,84,5,84],[7,85,5,85],[7,87,5,87],[8,6,6,6,"desc"],[8,10,6,10],[8,13,6,13],[9,8,6,15,"enumerable"],[9,18,6,25],[9,20,6,27],[9,24,6,31],[10,8,6,33,"get"],[10,11,6,36],[10,13,6,38],[10,22,6,33,"get"],[10,25,6,36,"get"],[10,26,6,36],[10,28,6,49],[11,10,6,51],[11,17,6,58,"m"],[11,18,6,59],[11,19,6,60,"k"],[11,20,6,61],[11,21,6,62],[12,8,6,64],[13,6,6,66],[13,7,6,67],[14,4,7,4],[15,4,8,4,"Object"],[15,10,8,10],[15,11,8,11,"defineProperty"],[15,25,8,25],[15,26,8,26,"o"],[15,27,8,27],[15,29,8,29,"k2"],[15,31,8,31],[15,33,8,33,"desc"],[15,37,8,37],[15,38,8,38],[16,2,9,0],[16,3,9,1],[16,6,9,6],[16,16,9,15,"o"],[16,17,9,16],[16,19,9,18,"m"],[16,20,9,19],[16,22,9,21,"k"],[16,23,9,22],[16,25,9,24,"k2"],[16,27,9,26],[16,29,9,28],[17,4,10,4],[17,8,10,8,"k2"],[17,10,10,10],[17,15,10,15,"undefined"],[17,24,10,24],[17,26,10,26,"k2"],[17,28,10,28],[17,31,10,31,"k"],[17,32,10,32],[18,4,11,4,"o"],[18,5,11,5],[18,6,11,6,"k2"],[18,8,11,8],[18,9,11,9],[18,12,11,12,"m"],[18,13,11,13],[18,14,11,14,"k"],[18,15,11,15],[18,16,11,16],[19,2,12,0],[19,3,12,2],[19,4,12,3],[20,2,13,0],[20,6,13,4,"__setModuleDefault"],[20,24,13,22],[20,27,13,26],[20,31,13,30],[20,35,13,34],[20,39,13,38],[20,40,13,39,"__setModuleDefault"],[20,58,13,57],[20,63,13,63,"Object"],[20,69,13,69],[20,70,13,70,"create"],[20,76,13,76],[20,79,13,80],[20,89,13,89,"o"],[20,90,13,90],[20,92,13,92,"v"],[20,93,13,93],[20,95,13,95],[21,4,14,4,"Object"],[21,10,14,10],[21,11,14,11,"defineProperty"],[21,25,14,25],[21,26,14,26,"o"],[21,27,14,27],[21,29,14,29],[21,38,14,38],[21,40,14,40],[22,6,14,42,"enumerable"],[22,16,14,52],[22,18,14,54],[22,22,14,58],[23,6,14,60,"value"],[23,11,14,65],[23,13,14,67,"v"],[24,4,14,69],[24,5,14,70],[24,6,14,71],[25,2,15,0],[25,3,15,1],[25,6,15,5],[25,16,15,14,"o"],[25,17,15,15],[25,19,15,17,"v"],[25,20,15,18],[25,22,15,20],[26,4,16,4,"o"],[26,5,16,5],[26,6,16,6],[26,15,16,15],[26,16,16,16],[26,19,16,19,"v"],[26,20,16,20],[27,2,17,0],[27,3,17,1],[27,4,17,2],[28,2,18,0],[28,6,18,4,"__importStar"],[28,18,18,16],[28,21,18,20],[28,25,18,24],[28,29,18,28],[28,33,18,32],[28,34,18,33,"__importStar"],[28,46,18,45],[28,50,18,50],[28,60,18,60,"mod"],[28,63,18,63],[28,65,18,65],[29,4,19,4],[29,8,19,8,"mod"],[29,11,19,11],[29,15,19,15,"mod"],[29,18,19,18],[29,19,19,19,"__esModule"],[29,29,19,29],[29,31,19,31],[29,38,19,38,"mod"],[29,41,19,41],[30,4,20,4],[30,8,20,8,"result"],[30,14,20,14],[30,17,20,17],[30,18,20,18],[30,19,20,19],[31,4,21,4],[31,8,21,8,"mod"],[31,11,21,11],[31,15,21,15],[31,19,21,19],[31,21,21,21],[31,26,21,26],[31,30,21,30,"k"],[31,31,21,31],[31,35,21,35,"mod"],[31,38,21,38],[31,40,21,40],[31,44,21,44,"k"],[31,45,21,45],[31,50,21,50],[31,59,21,59],[31,63,21,63,"Object"],[31,69,21,69],[31,70,21,70,"prototype"],[31,79,21,79],[31,80,21,80,"hasOwnProperty"],[31,94,21,94],[31,95,21,95,"call"],[31,99,21,99],[31,100,21,100,"mod"],[31,103,21,103],[31,105,21,105,"k"],[31,106,21,106],[31,107,21,107],[31,109,21,109,"__createBinding"],[31,124,21,124],[31,125,21,125,"result"],[31,131,21,131],[31,133,21,133,"mod"],[31,136,21,136],[31,138,21,138,"k"],[31,139,21,139],[31,140,21,140],[32,4,22,4,"__setModuleDefault"],[32,22,22,22],[32,23,22,23,"result"],[32,29,22,29],[32,31,22,31,"mod"],[32,34,22,34],[32,35,22,35],[33,4,23,4],[33,11,23,11,"result"],[33,17,23,17],[34,2,24,0],[34,3,24,1],[35,2,25,0,"Object"],[35,8,25,6],[35,9,25,7,"defineProperty"],[35,23,25,21],[35,24,25,22,"exports"],[35,31,25,29],[35,33,25,31],[35,45,25,43],[35,47,25,45],[36,4,25,47,"value"],[36,9,25,52],[36,11,25,54],[37,2,25,59],[37,3,25,60],[37,4,25,61],[38,2,26,0,"exports"],[38,9,26,7],[38,10,26,8,"encode"],[38,16,26,14],[38,19,26,17,"encode"],[38,25,26,23],[39,2,27,0,"exports"],[39,9,27,7],[39,10,27,8,"decode"],[39,16,27,14],[39,19,27,17,"decode"],[39,25,27,23],[40,2,28,0,"exports"],[40,9,28,7],[40,10,28,8,"encodingLength"],[40,24,28,22],[40,27,28,25,"encodingLength"],[40,41,28,39],[41,2,29,0],[41,6,29,6,"tools"],[41,11,29,11],[41,14,29,14,"__importStar"],[41,26,29,26],[41,27,29,27,"require"],[41,38,29,34],[41,39,29,34,"_dependencyMap"],[41,53,29,34],[41,76,29,53],[41,77,29,54],[41,78,29,55],[42,2,30,0],[42,6,30,6,"checkUInt64"],[42,17,30,17],[42,20,30,20],[42,29,30,6,"checkUInt64"],[42,40,30,17,"checkUInt64"],[42,41,30,21,"n"],[42,42,30,22],[42,44,30,27],[43,4,31,4],[43,8,31,8,"n"],[43,9,31,9],[43,12,31,12],[43,13,31,13],[43,17,31,17,"n"],[43,18,31,18],[43,21,31,21],[43,40,31,40],[43,42,31,42],[44,6,32,8],[44,12,32,14],[44,16,32,18,"RangeError"],[44,26,32,28],[44,27,32,29],[44,47,32,49],[44,48,32,50],[45,4,33,4],[46,2,34,0],[46,3,34,1],[47,2,35,0],[47,11,35,9,"checkUInt53"],[47,22,35,20,"checkUInt53"],[47,23,35,21,"n"],[47,24,35,22],[47,26,35,24],[48,4,36,4],[48,8,36,8,"n"],[48,9,36,9],[48,12,36,12],[48,13,36,13],[48,17,36,17,"n"],[48,18,36,18],[48,21,36,21,"Number"],[48,27,36,27],[48,28,36,28,"MAX_SAFE_INTEGER"],[48,44,36,44],[48,48,36,48,"n"],[48,49,36,49],[48,52,36,52],[48,53,36,53],[48,58,36,58],[48,59,36,59],[48,61,37,8],[48,67,37,14],[48,71,37,18,"RangeError"],[48,81,37,28],[48,82,37,29],[48,102,37,49],[48,103,37,50],[49,2,38,0],[50,2,39,0],[50,11,39,9,"checkUint53OrUint64"],[50,30,39,28,"checkUint53OrUint64"],[50,31,39,29,"n"],[50,32,39,30],[50,34,39,32],[51,4,40,4],[51,8,40,8],[51,15,40,15,"n"],[51,16,40,16],[51,21,40,21],[51,29,40,29],[51,31,41,8,"checkUInt53"],[51,42,41,19],[51,43,41,20,"n"],[51,44,41,21],[51,45,41,22],[51,46,41,23],[51,51,43,8,"checkUInt64"],[51,62,43,19],[51,63,43,20,"n"],[51,64,43,21],[51,65,43,22],[52,2,44,0],[53,2,45,0],[53,11,45,9,"encode"],[53,17,45,15,"encode"],[53,18,45,16,"n"],[53,19,45,17],[53,21,45,19,"buffer"],[53,27,45,25],[53,29,45,27,"offset"],[53,35,45,33],[53,37,45,35],[54,4,46,4,"checkUint53OrUint64"],[54,23,46,23],[54,24,46,24,"n"],[54,25,46,25],[54,26,46,26],[55,4,47,4],[55,8,47,8,"offset"],[55,14,47,14],[55,19,47,19,"undefined"],[55,28,47,28],[55,30,48,8,"offset"],[55,36,48,14],[55,39,48,17],[55,40,48,18],[56,4,49,4],[56,8,49,8,"buffer"],[56,14,49,14],[56,19,49,19,"undefined"],[56,28,49,28],[56,30,49,30],[57,6,50,8,"buffer"],[57,12,50,14],[57,15,50,17],[57,19,50,21,"Uint8Array"],[57,29,50,31],[57,30,50,32,"encodingLength"],[57,44,50,46],[57,45,50,47,"n"],[57,46,50,48],[57,47,50,49],[57,48,50,50],[58,4,51,4],[59,4,52,4],[59,8,52,8,"bytes"],[59,13,52,13],[59,16,52,16],[59,17,52,17],[60,4,53,4],[61,4,54,4],[61,8,54,8,"n"],[61,9,54,9],[61,12,54,12],[61,16,54,16],[61,18,54,18],[62,6,55,8,"buffer"],[62,12,55,14],[62,13,55,15,"set"],[62,16,55,18],[62,17,55,19],[62,18,55,20,"Number"],[62,24,55,26],[62,25,55,27,"n"],[62,26,55,28],[62,27,55,29],[62,28,55,30],[62,30,55,32,"offset"],[62,36,55,38],[62,37,55,39],[63,6,56,8,"bytes"],[63,11,56,13],[63,14,56,16],[63,15,56,17],[64,6,57,8],[65,4,58,4],[65,5,58,5],[65,11,59,9],[65,15,59,13,"n"],[65,16,59,14],[65,20,59,18],[65,26,59,24],[65,28,59,26],[66,6,60,8,"buffer"],[66,12,60,14],[66,13,60,15,"set"],[66,16,60,18],[66,17,60,19],[66,18,60,20],[66,22,60,24],[66,23,60,25],[66,25,60,27,"offset"],[66,31,60,33],[66,32,60,34],[67,6,61,8,"tools"],[67,11,61,13],[67,12,61,14,"writeUInt16"],[67,23,61,25],[67,24,61,26,"buffer"],[67,30,61,32],[67,32,61,34,"offset"],[67,38,61,40],[67,41,61,43],[67,42,61,44],[67,44,61,46,"Number"],[67,50,61,52],[67,51,61,53,"n"],[67,52,61,54],[67,53,61,55],[67,55,61,57],[67,59,61,61],[67,60,61,62],[68,6,62,8,"bytes"],[68,11,62,13],[68,14,62,16],[68,15,62,17],[69,6,63,8],[70,4,64,4],[70,5,64,5],[70,11,65,9],[70,15,65,13,"n"],[70,16,65,14],[70,20,65,18],[70,30,65,28],[70,32,65,30],[71,6,66,8,"buffer"],[71,12,66,14],[71,13,66,15,"set"],[71,16,66,18],[71,17,66,19],[71,18,66,20],[71,22,66,24],[71,23,66,25],[71,25,66,27,"offset"],[71,31,66,33],[71,32,66,34],[72,6,67,8,"tools"],[72,11,67,13],[72,12,67,14,"writeUInt32"],[72,23,67,25],[72,24,67,26,"buffer"],[72,30,67,32],[72,32,67,34,"offset"],[72,38,67,40],[72,41,67,43],[72,42,67,44],[72,44,67,46,"Number"],[72,50,67,52],[72,51,67,53,"n"],[72,52,67,54],[72,53,67,55],[72,55,67,57],[72,59,67,61],[72,60,67,62],[73,6,68,8,"bytes"],[73,11,68,13],[73,14,68,16],[73,15,68,17],[74,6,69,8],[75,4,70,4],[75,5,70,5],[75,11,71,9],[76,6,72,8,"buffer"],[76,12,72,14],[76,13,72,15,"set"],[76,16,72,18],[76,17,72,19],[76,18,72,20],[76,22,72,24],[76,23,72,25],[76,25,72,27,"offset"],[76,31,72,33],[76,32,72,34],[77,6,73,8,"tools"],[77,11,73,13],[77,12,73,14,"writeUInt64"],[77,23,73,25],[77,24,73,26,"buffer"],[77,30,73,32],[77,32,73,34,"offset"],[77,38,73,40],[77,41,73,43],[77,42,73,44],[77,44,73,46,"BigInt"],[77,50,73,52],[77,51,73,53,"n"],[77,52,73,54],[77,53,73,55],[77,55,73,57],[77,59,73,61],[77,60,73,62],[78,6,74,8,"bytes"],[78,11,74,13],[78,14,74,16],[78,15,74,17],[79,4,75,4],[80,4,76,4],[80,11,76,11],[81,6,76,13,"buffer"],[81,12,76,19],[81,14,76,13,"buffer"],[81,20,76,19],[82,6,76,21,"bytes"],[82,11,76,26],[82,13,76,21,"bytes"],[83,4,76,27],[83,5,76,28],[84,2,77,0],[85,2,78,0],[85,11,78,9,"decode"],[85,17,78,15,"decode"],[85,18,78,16,"buffer"],[85,24,78,22],[85,26,78,24,"offset"],[85,32,78,30],[85,34,78,32],[86,4,79,4],[86,8,79,8,"offset"],[86,14,79,14],[86,19,79,19,"undefined"],[86,28,79,28],[86,30,80,8,"offset"],[86,36,80,14],[86,39,80,17],[86,40,80,18],[87,4,81,4],[87,8,81,10,"first"],[87,13,81,15],[87,16,81,18,"buffer"],[87,22,81,24],[87,23,81,25,"at"],[87,25,81,27],[87,26,81,28,"offset"],[87,32,81,34],[87,33,81,35],[88,4,82,4],[88,8,82,8,"first"],[88,13,82,13],[88,18,82,18,"undefined"],[88,27,82,27],[88,29,83,8],[88,35,83,14],[88,39,83,18,"Error"],[88,44,83,23],[88,45,83,24],[88,63,83,42],[88,64,83,43],[89,4,84,4],[90,4,85,4],[90,8,85,8,"first"],[90,13,85,13],[90,16,85,16],[90,20,85,20],[90,22,85,22],[91,6,86,8],[91,13,86,15],[92,8,86,17,"numberValue"],[92,19,86,28],[92,21,86,30,"first"],[92,26,86,35],[93,8,86,37,"bigintValue"],[93,19,86,48],[93,21,86,50,"BigInt"],[93,27,86,56],[93,28,86,57,"first"],[93,33,86,62],[93,34,86,63],[94,8,86,65,"bytes"],[94,13,86,70],[94,15,86,72],[95,6,86,74],[95,7,86,75],[96,6,87,8],[97,4,88,4],[97,5,88,5],[97,11,89,9],[97,15,89,13,"first"],[97,20,89,18],[97,25,89,23],[97,29,89,27],[97,31,89,29],[98,6,90,8],[98,10,90,14,"val"],[98,13,90,17],[98,16,90,20,"tools"],[98,21,90,25],[98,22,90,26,"readUInt16"],[98,32,90,36],[98,33,90,37,"buffer"],[98,39,90,43],[98,41,90,45,"offset"],[98,47,90,51],[98,50,90,54],[98,51,90,55],[98,53,90,57],[98,57,90,61],[98,58,90,62],[99,6,91,8],[99,13,91,15],[100,8,92,12,"numberValue"],[100,19,92,23],[100,21,92,25,"val"],[100,24,92,28],[101,8,93,12,"bigintValue"],[101,19,93,23],[101,21,93,25,"BigInt"],[101,27,93,31],[101,28,93,32,"val"],[101,31,93,35],[101,32,93,36],[102,8,94,12,"bytes"],[102,13,94,17],[102,15,94,19],[103,6,95,8],[103,7,95,9],[104,6,96,8],[105,4,97,4],[105,5,97,5],[105,11,98,9],[105,15,98,13,"first"],[105,20,98,18],[105,25,98,23],[105,29,98,27],[105,31,98,29],[106,6,99,8],[106,10,99,14,"val"],[106,14,99,17],[106,17,99,20,"tools"],[106,22,99,25],[106,23,99,26,"readUInt32"],[106,33,99,36],[106,34,99,37,"buffer"],[106,40,99,43],[106,42,99,45,"offset"],[106,48,99,51],[106,51,99,54],[106,52,99,55],[106,54,99,57],[106,58,99,61],[106,59,99,62],[107,6,100,8],[107,13,100,15],[108,8,101,12,"numberValue"],[108,19,101,23],[108,21,101,25,"val"],[108,25,101,28],[109,8,102,12,"bigintValue"],[109,19,102,23],[109,21,102,25,"BigInt"],[109,27,102,31],[109,28,102,32,"val"],[109,32,102,35],[109,33,102,36],[110,8,103,12,"bytes"],[110,13,103,17],[110,15,103,19],[111,6,104,8],[111,7,104,9],[112,6,105,8],[113,4,106,4],[113,5,106,5],[113,11,107,9],[114,6,108,8],[114,10,108,14,"number"],[114,16,108,20],[114,19,108,23,"tools"],[114,24,108,28],[114,25,108,29,"readUInt64"],[114,35,108,39],[114,36,108,40,"buffer"],[114,42,108,46],[114,44,108,48,"offset"],[114,50,108,54],[114,53,108,57],[114,54,108,58],[114,56,108,60],[114,60,108,64],[114,61,108,65],[115,6,109,8],[115,13,109,15],[116,8,109,17,"numberValue"],[116,19,109,28],[116,21,109,30,"number"],[116,27,109,36],[116,31,109,40,"Number"],[116,37,109,46],[116,38,109,47,"MAX_SAFE_INTEGER"],[116,54,109,63],[116,57,109,66,"Number"],[116,63,109,72],[116,64,109,73,"number"],[116,70,109,79],[116,71,109,80],[116,74,109,83],[116,78,109,87],[117,8,109,89,"bigintValue"],[117,19,109,100],[117,21,109,102,"number"],[117,27,109,108],[118,8,109,110,"bytes"],[118,13,109,115],[118,15,109,117],[119,6,109,119],[119,7,109,120],[120,4,110,4],[121,2,111,0],[122,2,112,0],[122,11,112,9,"encodingLength"],[122,25,112,23,"encodingLength"],[122,26,112,24,"n"],[122,27,112,25],[122,29,112,27],[123,4,113,4,"checkUint53OrUint64"],[123,23,113,23],[123,24,113,24,"n"],[123,25,113,25],[123,26,113,26],[124,4,114,4],[124,11,114,11,"n"],[124,12,114,12],[124,15,114,15],[124,19,114,19],[124,22,114,22],[124,23,114,23],[124,26,114,26,"n"],[124,27,114,27],[124,31,114,31],[124,37,114,37],[124,40,114,40],[124,41,114,41],[124,44,114,44,"n"],[124,45,114,45],[124,49,114,49],[124,59,114,59],[124,62,114,62],[124,63,114,63],[124,66,114,66],[124,67,114,67],[125,2,115,0],[126,0,115,1],[126,3]],"functionMap":{"names":["<global>","<anonymous>","desc.get","checkUInt64","checkUInt53","checkUint53OrUint64","encode","decode","encodingLength"],"mappings":"AAA;0ECC;sCCI,2BD;CDG,KC;CDG;gFCC;CDE,IC;CDE;kDCC;CDM;oBGM;CHI;AIC;CJG;AKC;CLK;AMC;CNgC;AOC;CPiC;AQC;CRG"}},"type":"js/module"}]}