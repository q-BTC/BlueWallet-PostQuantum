{"dependencies":[{"name":"bs58check","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":18,"index":280},"end":{"line":8,"column":38,"index":300}},{"start":{"line":8,"column":18,"index":280},"end":{"line":8,"column":38,"index":300}}],"key":"4OUKwPALIMTasKbVl6WljOsf4WA="}},{"name":"bech32","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":15,"index":243},"end":{"line":7,"column":32,"index":260}},{"start":{"line":7,"column":15,"index":243},"end":{"line":7,"column":32,"index":260}},{"start":{"line":7,"column":15,"index":243},"end":{"line":7,"column":32,"index":260}},{"start":{"line":7,"column":15,"index":243},"end":{"line":7,"column":32,"index":260}}],"key":"ugm55roL35z1WKOi63WbzCYR5fI="}},{"name":"typeforce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":18,"index":320},"end":{"line":9,"column":38,"index":340}}],"key":"oCEA5RW0Ha+xwR9ueiGUwAxq7Z8="}},{"name":"./types","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":14,"index":208},"end":{"line":6,"column":32,"index":226}},{"start":{"line":6,"column":14,"index":208},"end":{"line":6,"column":32,"index":226}},{"start":{"line":6,"column":14,"index":208},"end":{"line":6,"column":32,"index":226}}],"key":"iU0PUTt27rZ09z7DeRf4jWGkzmo="}},{"name":"./networks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":38,"index":115}},{"start":{"line":3,"column":17,"index":94},"end":{"line":3,"column":38,"index":115}}],"key":"HucmY1y/bRMwIbskZ07kLJ/izkg="}},{"name":"./payments","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}},{"start":{"line":4,"column":17,"index":134},"end":{"line":4,"column":38,"index":155}}],"key":"jFG+uchKeOlOOhe0V9dHvbyfUWQ=","isOptional":false}},{"name":"./script","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":16,"index":173},"end":{"line":5,"column":35,"index":192}}],"key":"dAZ8S/UUDAY99MynBzi6QzO6zp4="}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function fromBase58Check(address) {\n    var payload = _$$_REQUIRE(_dependencyMap[0], \"bs58check\").decode(address);\n    // TODO: 4.0.0, move to \"toOutputScript\"\n    if (payload.length < 21) throw new TypeError(address + ' is too short');\n    if (payload.length > 21) throw new TypeError(address + ' is too long');\n    var version = payload.readUInt8(0);\n    var hash = payload.slice(1);\n    return {\n      version: version,\n      hash: hash\n    };\n  }\n  exports.fromBase58Check = fromBase58Check;\n  function fromBech32(address) {\n    var result = _$$_REQUIRE(_dependencyMap[1], \"bech32\").decode(address);\n    var data = _$$_REQUIRE(_dependencyMap[1], \"bech32\").fromWords(result.words.slice(1));\n    return {\n      version: result.words[0],\n      prefix: result.prefix,\n      data: Buffer.from(data)\n    };\n  }\n  exports.fromBech32 = fromBech32;\n  function toBase58Check(hash, version) {\n    _$$_REQUIRE(_dependencyMap[2], \"typeforce\")(_$$_REQUIRE(_dependencyMap[3], \"./types\").tuple(_$$_REQUIRE(_dependencyMap[3], \"./types\").Hash160bit, _$$_REQUIRE(_dependencyMap[3], \"./types\").UInt8), arguments);\n    var payload = Buffer.allocUnsafe(21);\n    payload.writeUInt8(version, 0);\n    hash.copy(payload, 1);\n    return _$$_REQUIRE(_dependencyMap[0], \"bs58check\").encode(payload);\n  }\n  exports.toBase58Check = toBase58Check;\n  function toBech32(data, version, prefix) {\n    var words = _$$_REQUIRE(_dependencyMap[1], \"bech32\").toWords(data);\n    words.unshift(version);\n    return _$$_REQUIRE(_dependencyMap[1], \"bech32\").encode(prefix, words);\n  }\n  exports.toBech32 = toBech32;\n  function fromOutputScript(output, network) {\n    // TODO: Network\n    network = network || _$$_REQUIRE(_dependencyMap[4], \"./networks\").bitcoin;\n    try {\n      return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2pkh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2sh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2wpkh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    try {\n      return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2wsh({\n        output: output,\n        network: network\n      }).address;\n    } catch (e) {}\n    throw new Error(_$$_REQUIRE(_dependencyMap[6], \"./script\").toASM(output) + ' has no matching Address');\n  }\n  exports.fromOutputScript = fromOutputScript;\n  function toOutputScript(address, network) {\n    network = network || _$$_REQUIRE(_dependencyMap[4], \"./networks\").bitcoin;\n    var decodeBase58;\n    var decodeBech32;\n    try {\n      decodeBase58 = fromBase58Check(address);\n    } catch (e) {}\n    if (decodeBase58) {\n      if (decodeBase58.version === network.pubKeyHash) return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2pkh({\n        hash: decodeBase58.hash\n      }).output;\n      if (decodeBase58.version === network.scriptHash) return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2sh({\n        hash: decodeBase58.hash\n      }).output;\n    } else {\n      try {\n        decodeBech32 = fromBech32(address);\n      } catch (e) {}\n      if (decodeBech32) {\n        if (decodeBech32.prefix !== network.bech32) throw new Error(address + ' has an invalid prefix');\n        if (decodeBech32.version === 0) {\n          if (decodeBech32.data.length === 20) return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2wpkh({\n            hash: decodeBech32.data\n          }).output;\n          if (decodeBech32.data.length === 32) return _$$_REQUIRE(_dependencyMap[5], \"./payments\").p2wsh({\n            hash: decodeBech32.data\n          }).output;\n        }\n      }\n    }\n    throw new Error(address + ' has no matching Script');\n  }\n  exports.toOutputScript = toOutputScript;\n});","lineCount":107,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,10,0],[7,11,10,9,"fromBase58Check"],[7,26,10,24,"fromBase58Check"],[7,27,10,25,"address"],[7,34,10,32],[7,36,10,34],[8,4,11,2],[8,8,11,8,"payload"],[8,15,11,15],[8,18,11,18,"_$$_REQUIRE"],[8,29,11,18],[8,30,11,18,"_dependencyMap"],[8,44,11,18],[8,62,11,28,"decode"],[8,68,11,34],[8,69,11,35,"address"],[8,76,11,42],[8,77,11,43],[9,4,12,2],[10,4,13,2],[10,8,13,6,"payload"],[10,15,13,13],[10,16,13,14,"length"],[10,22,13,20],[10,25,13,23],[10,27,13,25],[10,29,13,27],[10,35,13,33],[10,39,13,37,"TypeError"],[10,48,13,46],[10,49,13,47,"address"],[10,56,13,54],[10,59,13,57],[10,74,13,72],[10,75,13,73],[11,4,14,2],[11,8,14,6,"payload"],[11,15,14,13],[11,16,14,14,"length"],[11,22,14,20],[11,25,14,23],[11,27,14,25],[11,29,14,27],[11,35,14,33],[11,39,14,37,"TypeError"],[11,48,14,46],[11,49,14,47,"address"],[11,56,14,54],[11,59,14,57],[11,73,14,71],[11,74,14,72],[12,4,15,2],[12,8,15,8,"version"],[12,15,15,15],[12,18,15,18,"payload"],[12,25,15,25],[12,26,15,26,"readUInt8"],[12,35,15,35],[12,36,15,36],[12,37,15,37],[12,38,15,38],[13,4,16,2],[13,8,16,8,"hash"],[13,12,16,12],[13,15,16,15,"payload"],[13,22,16,22],[13,23,16,23,"slice"],[13,28,16,28],[13,29,16,29],[13,30,16,30],[13,31,16,31],[14,4,17,2],[14,11,17,9],[15,6,17,11,"version"],[15,13,17,18],[15,15,17,11,"version"],[15,22,17,18],[16,6,17,20,"hash"],[16,10,17,24],[16,12,17,20,"hash"],[17,4,17,25],[17,5,17,26],[18,2,18,0],[19,2,19,0,"exports"],[19,9,19,7],[19,10,19,8,"fromBase58Check"],[19,25,19,23],[19,28,19,26,"fromBase58Check"],[19,43,19,41],[20,2,20,0],[20,11,20,9,"fromBech32"],[20,21,20,19,"fromBech32"],[20,22,20,20,"address"],[20,29,20,27],[20,31,20,29],[21,4,21,2],[21,8,21,8,"result"],[21,14,21,14],[21,17,21,17,"_$$_REQUIRE"],[21,28,21,17],[21,29,21,17,"_dependencyMap"],[21,43,21,17],[21,58,21,24,"decode"],[21,64,21,30],[21,65,21,31,"address"],[21,72,21,38],[21,73,21,39],[22,4,22,2],[22,8,22,8,"data"],[22,12,22,12],[22,15,22,15,"_$$_REQUIRE"],[22,26,22,15],[22,27,22,15,"_dependencyMap"],[22,41,22,15],[22,56,22,22,"fromWords"],[22,65,22,31],[22,66,22,32,"result"],[22,72,22,38],[22,73,22,39,"words"],[22,78,22,44],[22,79,22,45,"slice"],[22,84,22,50],[22,85,22,51],[22,86,22,52],[22,87,22,53],[22,88,22,54],[23,4,23,2],[23,11,23,9],[24,6,24,4,"version"],[24,13,24,11],[24,15,24,13,"result"],[24,21,24,19],[24,22,24,20,"words"],[24,27,24,25],[24,28,24,26],[24,29,24,27],[24,30,24,28],[25,6,25,4,"prefix"],[25,12,25,10],[25,14,25,12,"result"],[25,20,25,18],[25,21,25,19,"prefix"],[25,27,25,25],[26,6,26,4,"data"],[26,10,26,8],[26,12,26,10,"Buffer"],[26,18,26,16],[26,19,26,17,"from"],[26,23,26,21],[26,24,26,22,"data"],[26,28,26,26],[27,4,27,2],[27,5,27,3],[28,2,28,0],[29,2,29,0,"exports"],[29,9,29,7],[29,10,29,8,"fromBech32"],[29,20,29,18],[29,23,29,21,"fromBech32"],[29,33,29,31],[30,2,30,0],[30,11,30,9,"toBase58Check"],[30,24,30,22,"toBase58Check"],[30,25,30,23,"hash"],[30,29,30,27],[30,31,30,29,"version"],[30,38,30,36],[30,40,30,38],[31,4,31,2,"_$$_REQUIRE"],[31,15,31,2],[31,16,31,2,"_dependencyMap"],[31,30,31,2],[31,48,31,12,"_$$_REQUIRE"],[31,59,31,12],[31,60,31,12,"_dependencyMap"],[31,74,31,12],[31,90,31,18,"tuple"],[31,95,31,23],[31,96,31,24,"_$$_REQUIRE"],[31,107,31,24],[31,108,31,24,"_dependencyMap"],[31,122,31,24],[31,138,31,30,"Hash160bit"],[31,148,31,40],[31,150,31,42,"_$$_REQUIRE"],[31,161,31,42],[31,162,31,42,"_dependencyMap"],[31,176,31,42],[31,192,31,48,"UInt8"],[31,197,31,53],[31,198,31,54],[31,200,31,56,"arguments"],[31,209,31,65],[31,210,31,66],[32,4,32,2],[32,8,32,8,"payload"],[32,15,32,15],[32,18,32,18,"Buffer"],[32,24,32,24],[32,25,32,25,"allocUnsafe"],[32,36,32,36],[32,37,32,37],[32,39,32,39],[32,40,32,40],[33,4,33,2,"payload"],[33,11,33,9],[33,12,33,10,"writeUInt8"],[33,22,33,20],[33,23,33,21,"version"],[33,30,33,28],[33,32,33,30],[33,33,33,31],[33,34,33,32],[34,4,34,2,"hash"],[34,8,34,6],[34,9,34,7,"copy"],[34,13,34,11],[34,14,34,12,"payload"],[34,21,34,19],[34,23,34,21],[34,24,34,22],[34,25,34,23],[35,4,35,2],[35,11,35,9,"_$$_REQUIRE"],[35,22,35,9],[35,23,35,9,"_dependencyMap"],[35,37,35,9],[35,55,35,19,"encode"],[35,61,35,25],[35,62,35,26,"payload"],[35,69,35,33],[35,70,35,34],[36,2,36,0],[37,2,37,0,"exports"],[37,9,37,7],[37,10,37,8,"toBase58Check"],[37,23,37,21],[37,26,37,24,"toBase58Check"],[37,39,37,37],[38,2,38,0],[38,11,38,9,"toBech32"],[38,19,38,17,"toBech32"],[38,20,38,18,"data"],[38,24,38,22],[38,26,38,24,"version"],[38,33,38,31],[38,35,38,33,"prefix"],[38,41,38,39],[38,43,38,41],[39,4,39,2],[39,8,39,8,"words"],[39,13,39,13],[39,16,39,16,"_$$_REQUIRE"],[39,27,39,16],[39,28,39,16,"_dependencyMap"],[39,42,39,16],[39,57,39,23,"toWords"],[39,64,39,30],[39,65,39,31,"data"],[39,69,39,35],[39,70,39,36],[40,4,40,2,"words"],[40,9,40,7],[40,10,40,8,"unshift"],[40,17,40,15],[40,18,40,16,"version"],[40,25,40,23],[40,26,40,24],[41,4,41,2],[41,11,41,9,"_$$_REQUIRE"],[41,22,41,9],[41,23,41,9,"_dependencyMap"],[41,37,41,9],[41,52,41,16,"encode"],[41,58,41,22],[41,59,41,23,"prefix"],[41,65,41,29],[41,67,41,31,"words"],[41,72,41,36],[41,73,41,37],[42,2,42,0],[43,2,43,0,"exports"],[43,9,43,7],[43,10,43,8,"toBech32"],[43,18,43,16],[43,21,43,19,"toBech32"],[43,29,43,27],[44,2,44,0],[44,11,44,9,"fromOutputScript"],[44,27,44,25,"fromOutputScript"],[44,28,44,26,"output"],[44,34,44,32],[44,36,44,34,"network"],[44,43,44,41],[44,45,44,43],[45,4,45,2],[46,4,46,2,"network"],[46,11,46,9],[46,14,46,12,"network"],[46,21,46,19],[46,25,46,23,"_$$_REQUIRE"],[46,36,46,23],[46,37,46,23,"_dependencyMap"],[46,51,46,23],[46,70,46,32,"bitcoin"],[46,77,46,39],[47,4,47,2],[47,8,47,6],[48,6,48,4],[48,13,48,11,"_$$_REQUIRE"],[48,24,48,11],[48,25,48,11,"_dependencyMap"],[48,39,48,11],[48,58,48,20,"p2pkh"],[48,63,48,25],[48,64,48,26],[49,8,48,28,"output"],[49,14,48,34],[49,16,48,28,"output"],[49,22,48,34],[50,8,48,36,"network"],[50,15,48,43],[50,17,48,36,"network"],[51,6,48,44],[51,7,48,45],[51,8,48,46],[51,9,48,47,"address"],[51,16,48,54],[52,4,49,2],[52,5,49,3],[52,6,49,4],[52,13,49,11,"e"],[52,14,49,12],[52,16,49,14],[52,17,49,15],[53,4,50,2],[53,8,50,6],[54,6,51,4],[54,13,51,11,"_$$_REQUIRE"],[54,24,51,11],[54,25,51,11,"_dependencyMap"],[54,39,51,11],[54,58,51,20,"p2sh"],[54,62,51,24],[54,63,51,25],[55,8,51,27,"output"],[55,14,51,33],[55,16,51,27,"output"],[55,22,51,33],[56,8,51,35,"network"],[56,15,51,42],[56,17,51,35,"network"],[57,6,51,43],[57,7,51,44],[57,8,51,45],[57,9,51,46,"address"],[57,16,51,53],[58,4,52,2],[58,5,52,3],[58,6,52,4],[58,13,52,11,"e"],[58,14,52,12],[58,16,52,14],[58,17,52,15],[59,4,53,2],[59,8,53,6],[60,6,54,4],[60,13,54,11,"_$$_REQUIRE"],[60,24,54,11],[60,25,54,11,"_dependencyMap"],[60,39,54,11],[60,58,54,20,"p2wpkh"],[60,64,54,26],[60,65,54,27],[61,8,54,29,"output"],[61,14,54,35],[61,16,54,29,"output"],[61,22,54,35],[62,8,54,37,"network"],[62,15,54,44],[62,17,54,37,"network"],[63,6,54,45],[63,7,54,46],[63,8,54,47],[63,9,54,48,"address"],[63,16,54,55],[64,4,55,2],[64,5,55,3],[64,6,55,4],[64,13,55,11,"e"],[64,14,55,12],[64,16,55,14],[64,17,55,15],[65,4,56,2],[65,8,56,6],[66,6,57,4],[66,13,57,11,"_$$_REQUIRE"],[66,24,57,11],[66,25,57,11,"_dependencyMap"],[66,39,57,11],[66,58,57,20,"p2wsh"],[66,63,57,25],[66,64,57,26],[67,8,57,28,"output"],[67,14,57,34],[67,16,57,28,"output"],[67,22,57,34],[68,8,57,36,"network"],[68,15,57,43],[68,17,57,36,"network"],[69,6,57,44],[69,7,57,45],[69,8,57,46],[69,9,57,47,"address"],[69,16,57,54],[70,4,58,2],[70,5,58,3],[70,6,58,4],[70,13,58,11,"e"],[70,14,58,12],[70,16,58,14],[70,17,58,15],[71,4,59,2],[71,10,59,8],[71,14,59,12,"Error"],[71,19,59,17],[71,20,59,18,"_$$_REQUIRE"],[71,31,59,18],[71,32,59,18,"_dependencyMap"],[71,46,59,18],[71,63,59,26,"toASM"],[71,68,59,31],[71,69,59,32,"output"],[71,75,59,38],[71,76,59,39],[71,79,59,42],[71,105,59,68],[71,106,59,69],[72,2,60,0],[73,2,61,0,"exports"],[73,9,61,7],[73,10,61,8,"fromOutputScript"],[73,26,61,24],[73,29,61,27,"fromOutputScript"],[73,45,61,43],[74,2,62,0],[74,11,62,9,"toOutputScript"],[74,25,62,23,"toOutputScript"],[74,26,62,24,"address"],[74,33,62,31],[74,35,62,33,"network"],[74,42,62,40],[74,44,62,42],[75,4,63,2,"network"],[75,11,63,9],[75,14,63,12,"network"],[75,21,63,19],[75,25,63,23,"_$$_REQUIRE"],[75,36,63,23],[75,37,63,23,"_dependencyMap"],[75,51,63,23],[75,70,63,32,"bitcoin"],[75,77,63,39],[76,4,64,2],[76,8,64,6,"decodeBase58"],[76,20,64,18],[77,4,65,2],[77,8,65,6,"decodeBech32"],[77,20,65,18],[78,4,66,2],[78,8,66,6],[79,6,67,4,"decodeBase58"],[79,18,67,16],[79,21,67,19,"fromBase58Check"],[79,36,67,34],[79,37,67,35,"address"],[79,44,67,42],[79,45,67,43],[80,4,68,2],[80,5,68,3],[80,6,68,4],[80,13,68,11,"e"],[80,14,68,12],[80,16,68,14],[80,17,68,15],[81,4,69,2],[81,8,69,6,"decodeBase58"],[81,20,69,18],[81,22,69,20],[82,6,70,4],[82,10,70,8,"decodeBase58"],[82,22,70,20],[82,23,70,21,"version"],[82,30,70,28],[82,35,70,33,"network"],[82,42,70,40],[82,43,70,41,"pubKeyHash"],[82,53,70,51],[82,55,71,6],[82,62,71,13,"_$$_REQUIRE"],[82,73,71,13],[82,74,71,13,"_dependencyMap"],[82,88,71,13],[82,107,71,22,"p2pkh"],[82,112,71,27],[82,113,71,28],[83,8,71,30,"hash"],[83,12,71,34],[83,14,71,36,"decodeBase58"],[83,26,71,48],[83,27,71,49,"hash"],[84,6,71,54],[84,7,71,55],[84,8,71,56],[84,9,71,57,"output"],[84,15,71,63],[85,6,72,4],[85,10,72,8,"decodeBase58"],[85,22,72,20],[85,23,72,21,"version"],[85,30,72,28],[85,35,72,33,"network"],[85,42,72,40],[85,43,72,41,"scriptHash"],[85,53,72,51],[85,55,73,6],[85,62,73,13,"_$$_REQUIRE"],[85,73,73,13],[85,74,73,13,"_dependencyMap"],[85,88,73,13],[85,107,73,22,"p2sh"],[85,111,73,26],[85,112,73,27],[86,8,73,29,"hash"],[86,12,73,33],[86,14,73,35,"decodeBase58"],[86,26,73,47],[86,27,73,48,"hash"],[87,6,73,53],[87,7,73,54],[87,8,73,55],[87,9,73,56,"output"],[87,15,73,62],[88,4,74,2],[88,5,74,3],[88,11,74,9],[89,6,75,4],[89,10,75,8],[90,8,76,6,"decodeBech32"],[90,20,76,18],[90,23,76,21,"fromBech32"],[90,33,76,31],[90,34,76,32,"address"],[90,41,76,39],[90,42,76,40],[91,6,77,4],[91,7,77,5],[91,8,77,6],[91,15,77,13,"e"],[91,16,77,14],[91,18,77,16],[91,19,77,17],[92,6,78,4],[92,10,78,8,"decodeBech32"],[92,22,78,20],[92,24,78,22],[93,8,79,6],[93,12,79,10,"decodeBech32"],[93,24,79,22],[93,25,79,23,"prefix"],[93,31,79,29],[93,36,79,34,"network"],[93,43,79,41],[93,44,79,42,"bech32"],[93,50,79,48],[93,52,80,8],[93,58,80,14],[93,62,80,18,"Error"],[93,67,80,23],[93,68,80,24,"address"],[93,75,80,31],[93,78,80,34],[93,102,80,58],[93,103,80,59],[94,8,81,6],[94,12,81,10,"decodeBech32"],[94,24,81,22],[94,25,81,23,"version"],[94,32,81,30],[94,37,81,35],[94,38,81,36],[94,40,81,38],[95,10,82,8],[95,14,82,12,"decodeBech32"],[95,26,82,24],[95,27,82,25,"data"],[95,31,82,29],[95,32,82,30,"length"],[95,38,82,36],[95,43,82,41],[95,45,82,43],[95,47,83,10],[95,54,83,17,"_$$_REQUIRE"],[95,65,83,17],[95,66,83,17,"_dependencyMap"],[95,80,83,17],[95,99,83,26,"p2wpkh"],[95,105,83,32],[95,106,83,33],[96,12,83,35,"hash"],[96,16,83,39],[96,18,83,41,"decodeBech32"],[96,30,83,53],[96,31,83,54,"data"],[97,10,83,59],[97,11,83,60],[97,12,83,61],[97,13,83,62,"output"],[97,19,83,68],[98,10,84,8],[98,14,84,12,"decodeBech32"],[98,26,84,24],[98,27,84,25,"data"],[98,31,84,29],[98,32,84,30,"length"],[98,38,84,36],[98,43,84,41],[98,45,84,43],[98,47,85,10],[98,54,85,17,"_$$_REQUIRE"],[98,65,85,17],[98,66,85,17,"_dependencyMap"],[98,80,85,17],[98,99,85,26,"p2wsh"],[98,104,85,31],[98,105,85,32],[99,12,85,34,"hash"],[99,16,85,38],[99,18,85,40,"decodeBech32"],[99,30,85,52],[99,31,85,53,"data"],[100,10,85,58],[100,11,85,59],[100,12,85,60],[100,13,85,61,"output"],[100,19,85,67],[101,8,86,6],[102,6,87,4],[103,4,88,2],[104,4,89,2],[104,10,89,8],[104,14,89,12,"Error"],[104,19,89,17],[104,20,89,18,"address"],[104,27,89,25],[104,30,89,28],[104,55,89,53],[104,56,89,54],[105,2,90,0],[106,2,91,0,"exports"],[106,9,91,7],[106,10,91,8,"toOutputScript"],[106,24,91,22],[106,27,91,25,"toOutputScript"],[106,41,91,39],[107,0,91,40],[107,3]],"functionMap":{"names":["<global>","fromBase58Check","fromBech32","toBase58Check","toBech32","fromOutputScript","toOutputScript"],"mappings":"AAA;ACS;CDQ;AEE;CFQ;AGE;CHM;AIE;CJI;AKE;CLgB;AME;CN4B"}},"type":"js/module"}]}